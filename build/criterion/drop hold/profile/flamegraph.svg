<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1093.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="1249"><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3203%" y="565" width="0.0801%" height="15" fill="rgb(240,97,48)" fg:x="4" fg:w="1"/><text x="0.5703%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3203%" y="549" width="0.0801%" height="15" fill="rgb(237,65,54)" fg:x="4" fg:w="1"/><text x="0.5703%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="0.0801%" y="629" width="0.4003%" height="15" fill="rgb(214,25,24)" fg:x="1" fg:w="5"/><text x="0.3301%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.3203%" y="613" width="0.1601%" height="15" fill="rgb(213,5,3)" fg:x="4" fg:w="2"/><text x="0.5703%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="0.3203%" y="597" width="0.1601%" height="15" fill="rgb(219,81,29)" fg:x="4" fg:w="2"/><text x="0.5703%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.3203%" y="581" width="0.1601%" height="15" fill="rgb(220,43,48)" fg:x="4" fg:w="2"/><text x="0.5703%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.4003%" y="565" width="0.0801%" height="15" fill="rgb(239,157,2)" fg:x="5" fg:w="1"/><text x="0.6503%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="0.0801%" y="677" width="0.4804%" height="15" fill="rgb(213,104,43)" fg:x="1" fg:w="6"/><text x="0.3301%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (6 samples, 0.48%)</title><rect x="0.0801%" y="661" width="0.4804%" height="15" fill="rgb(237,84,9)" fg:x="1" fg:w="6"/><text x="0.3301%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="0.0801%" y="645" width="0.4804%" height="15" fill="rgb(252,6,33)" fg:x="1" fg:w="6"/><text x="0.3301%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4804%" y="629" width="0.0801%" height="15" fill="rgb(251,172,22)" fg:x="6" fg:w="1"/><text x="0.7304%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5604%" y="677" width="0.0801%" height="15" fill="rgb(244,91,53)" fg:x="7" fg:w="1"/><text x="0.8104%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="0.0801%" y="709" width="0.6405%" height="15" fill="rgb(219,29,30)" fg:x="1" fg:w="8"/><text x="0.3301%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (8 samples, 0.64%)</title><rect x="0.0801%" y="693" width="0.6405%" height="15" fill="rgb(213,3,15)" fg:x="1" fg:w="8"/><text x="0.3301%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryEntityStorage&gt; (1 samples, 0.08%)</title><rect x="0.6405%" y="677" width="0.0801%" height="15" fill="rgb(208,25,28)" fg:x="8" fg:w="1"/><text x="0.8905%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="0.8006%" y="533" width="0.0801%" height="15" fill="rgb(252,144,25)" fg:x="10" fg:w="1"/><text x="1.0506%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="0.8006%" y="517" width="0.0801%" height="15" fill="rgb(226,220,25)" fg:x="10" fg:w="1"/><text x="1.0506%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="0.8006%" y="501" width="0.0801%" height="15" fill="rgb(212,131,28)" fg:x="10" fg:w="1"/><text x="1.0506%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="0.8006%" y="565" width="0.1601%" height="15" fill="rgb(219,143,52)" fg:x="10" fg:w="2"/><text x="1.0506%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="0.8006%" y="549" width="0.1601%" height="15" fill="rgb(215,56,7)" fg:x="10" fg:w="2"/><text x="1.0506%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="0.8807%" y="533" width="0.0801%" height="15" fill="rgb(239,59,51)" fg:x="11" fg:w="1"/><text x="1.1307%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8807%" y="517" width="0.0801%" height="15" fill="rgb(209,215,4)" fg:x="11" fg:w="1"/><text x="1.1307%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="0.9608%" y="501" width="0.0801%" height="15" fill="rgb(221,118,39)" fg:x="12" fg:w="1"/><text x="1.2108%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.9608%" y="485" width="0.0801%" height="15" fill="rgb(236,6,44)" fg:x="12" fg:w="1"/><text x="1.2108%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="0.7206%" y="629" width="0.4003%" height="15" fill="rgb(216,122,9)" fg:x="9" fg:w="5"/><text x="0.9706%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="0.7206%" y="613" width="0.4003%" height="15" fill="rgb(244,134,42)" fg:x="9" fg:w="5"/><text x="0.9706%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="0.7206%" y="597" width="0.4003%" height="15" fill="rgb(209,189,35)" fg:x="9" fg:w="5"/><text x="0.9706%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="0.7206%" y="581" width="0.4003%" height="15" fill="rgb(250,47,36)" fg:x="9" fg:w="5"/><text x="0.9706%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="0.9608%" y="565" width="0.1601%" height="15" fill="rgb(252,112,4)" fg:x="12" fg:w="2"/><text x="1.2108%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="0.9608%" y="549" width="0.1601%" height="15" fill="rgb(221,79,51)" fg:x="12" fg:w="2"/><text x="1.2108%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="0.9608%" y="533" width="0.1601%" height="15" fill="rgb(232,65,53)" fg:x="12" fg:w="2"/><text x="1.2108%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="0.9608%" y="517" width="0.1601%" height="15" fill="rgb(211,37,7)" fg:x="12" fg:w="2"/><text x="1.2108%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.0408%" y="501" width="0.0801%" height="15" fill="rgb(234,221,18)" fg:x="13" fg:w="1"/><text x="1.2908%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.0408%" y="485" width="0.0801%" height="15" fill="rgb(220,158,26)" fg:x="13" fg:w="1"/><text x="1.2908%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.0408%" y="469" width="0.0801%" height="15" fill="rgb(220,70,6)" fg:x="13" fg:w="1"/><text x="1.2908%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.0408%" y="453" width="0.0801%" height="15" fill="rgb(250,39,48)" fg:x="13" fg:w="1"/><text x="1.2908%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0408%" y="437" width="0.0801%" height="15" fill="rgb(206,40,27)" fg:x="13" fg:w="1"/><text x="1.2908%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0408%" y="421" width="0.0801%" height="15" fill="rgb(247,80,36)" fg:x="13" fg:w="1"/><text x="1.2908%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.1209%" y="581" width="0.0801%" height="15" fill="rgb(222,9,20)" fg:x="14" fg:w="1"/><text x="1.3709%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="1.1209%" y="565" width="0.0801%" height="15" fill="rgb(217,26,45)" fg:x="14" fg:w="1"/><text x="1.3709%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="1.2010%" y="549" width="0.1601%" height="15" fill="rgb(221,67,14)" fg:x="15" fg:w="2"/><text x="1.4510%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.2810%" y="533" width="0.0801%" height="15" fill="rgb(248,100,24)" fg:x="16" fg:w="1"/><text x="1.5310%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.80%)</title><rect x="0.7206%" y="677" width="0.8006%" height="15" fill="rgb(230,187,16)" fg:x="9" fg:w="10"/><text x="0.9706%" y="687.50"></text></g><g><title>engine::internal::Entities::prepare_entity (10 samples, 0.80%)</title><rect x="0.7206%" y="661" width="0.8006%" height="15" fill="rgb(205,108,13)" fg:x="9" fg:w="10"/><text x="0.9706%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.80%)</title><rect x="0.7206%" y="645" width="0.8006%" height="15" fill="rgb(235,71,51)" fg:x="9" fg:w="10"/><text x="0.9706%" y="655.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="1.1209%" y="629" width="0.4003%" height="15" fill="rgb(251,172,48)" fg:x="14" fg:w="5"/><text x="1.3709%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="1.1209%" y="613" width="0.4003%" height="15" fill="rgb(240,96,49)" fg:x="14" fg:w="5"/><text x="1.3709%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="1.1209%" y="597" width="0.4003%" height="15" fill="rgb(235,46,36)" fg:x="14" fg:w="5"/><text x="1.3709%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.2010%" y="581" width="0.3203%" height="15" fill="rgb(244,3,49)" fg:x="15" fg:w="4"/><text x="1.4510%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.2010%" y="565" width="0.3203%" height="15" fill="rgb(206,78,54)" fg:x="15" fg:w="4"/><text x="1.4510%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="1.3611%" y="549" width="0.1601%" height="15" fill="rgb(208,85,42)" fg:x="17" fg:w="2"/><text x="1.6111%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="1.3611%" y="533" width="0.1601%" height="15" fill="rgb(219,196,21)" fg:x="17" fg:w="2"/><text x="1.6111%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.4412%" y="517" width="0.0801%" height="15" fill="rgb(238,19,9)" fg:x="18" fg:w="1"/><text x="1.6912%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="1.5212%" y="677" width="0.0801%" height="15" fill="rgb(206,86,13)" fg:x="19" fg:w="1"/><text x="1.7712%" y="687.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="1.6013%" y="613" width="0.0801%" height="15" fill="rgb(214,123,40)" fg:x="20" fg:w="1"/><text x="1.8513%" y="623.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="1.6013%" y="597" width="0.0801%" height="15" fill="rgb(243,53,5)" fg:x="20" fg:w="1"/><text x="1.8513%" y="607.50"></text></g><g><title>__pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="2.0016%" y="549" width="0.0801%" height="15" fill="rgb(254,186,31)" fg:x="25" fg:w="1"/><text x="2.2516%" y="559.50"></text></g><g><title>libloading::os::unix::Library::open (14 samples, 1.12%)</title><rect x="1.6013%" y="629" width="1.1209%" height="15" fill="rgb(221,216,25)" fg:x="20" fg:w="14"/><text x="1.8513%" y="639.50"></text></g><g><title>dlopen (13 samples, 1.04%)</title><rect x="1.6813%" y="613" width="1.0408%" height="15" fill="rgb(248,107,42)" fg:x="21" fg:w="13"/><text x="1.9313%" y="623.50"></text></g><g><title>_dl_catch_error (13 samples, 1.04%)</title><rect x="1.6813%" y="597" width="1.0408%" height="15" fill="rgb(221,85,43)" fg:x="21" fg:w="13"/><text x="1.9313%" y="607.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="1.7614%" y="581" width="0.9608%" height="15" fill="rgb(225,34,24)" fg:x="22" fg:w="12"/><text x="2.0114%" y="591.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.96%)</title><rect x="1.7614%" y="565" width="0.9608%" height="15" fill="rgb(211,119,1)" fg:x="22" fg:w="12"/><text x="2.0114%" y="575.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.0817%" y="549" width="0.6405%" height="15" fill="rgb(254,216,46)" fg:x="26" fg:w="8"/><text x="2.3317%" y="559.50"></text></g><g><title>engine::session::Session::initialize (16 samples, 1.28%)</title><rect x="1.6013%" y="677" width="1.2810%" height="15" fill="rgb(238,11,38)" fg:x="20" fg:w="16"/><text x="1.8513%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (16 samples, 1.28%)</title><rect x="1.6013%" y="661" width="1.2810%" height="15" fill="rgb(233,50,15)" fg:x="20" fg:w="16"/><text x="1.8513%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (16 samples, 1.28%)</title><rect x="1.6013%" y="645" width="1.2810%" height="15" fill="rgb(217,181,29)" fg:x="20" fg:w="16"/><text x="1.8513%" y="655.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (2 samples, 0.16%)</title><rect x="2.7222%" y="629" width="0.1601%" height="15" fill="rgb(214,56,3)" fg:x="34" fg:w="2"/><text x="2.9722%" y="639.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.16%)</title><rect x="2.7222%" y="613" width="0.1601%" height="15" fill="rgb(230,69,45)" fg:x="34" fg:w="2"/><text x="2.9722%" y="623.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="2.8022%" y="597" width="0.0801%" height="15" fill="rgb(224,201,50)" fg:x="35" fg:w="1"/><text x="3.0522%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (28 samples, 2.24%)</title><rect x="0.7206%" y="709" width="2.2418%" height="15" fill="rgb(217,228,18)" fg:x="9" fg:w="28"/><text x="0.9706%" y="719.50">&lt;..</text></g><g><title>engine::session::Session::new (28 samples, 2.24%)</title><rect x="0.7206%" y="693" width="2.2418%" height="15" fill="rgb(239,33,44)" fg:x="9" fg:w="28"/><text x="0.9706%" y="703.50">e..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="2.8823%" y="677" width="0.0801%" height="15" fill="rgb(248,210,23)" fg:x="36" fg:w="1"/><text x="3.1323%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="2.8823%" y="661" width="0.0801%" height="15" fill="rgb(253,135,8)" fg:x="36" fg:w="1"/><text x="3.1323%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="2.9624%" y="693" width="0.0801%" height="15" fill="rgb(217,98,21)" fg:x="37" fg:w="1"/><text x="3.2124%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.0424%" y="693" width="0.0801%" height="15" fill="rgb(253,130,21)" fg:x="38" fg:w="1"/><text x="3.2924%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="3.1225%" y="693" width="0.0801%" height="15" fill="rgb(207,81,54)" fg:x="39" fg:w="1"/><text x="3.3725%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.1225%" y="677" width="0.0801%" height="15" fill="rgb(232,48,33)" fg:x="39" fg:w="1"/><text x="3.3725%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.1225%" y="661" width="0.0801%" height="15" fill="rgb(211,9,35)" fg:x="39" fg:w="1"/><text x="3.3725%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="3.2026%" y="693" width="0.0801%" height="15" fill="rgb(205,152,21)" fg:x="40" fg:w="1"/><text x="3.4526%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="3.2826%" y="645" width="0.1601%" height="15" fill="rgb(249,21,27)" fg:x="41" fg:w="2"/><text x="3.5326%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.2826%" y="629" width="0.1601%" height="15" fill="rgb(252,29,24)" fg:x="41" fg:w="2"/><text x="3.5326%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="3.2826%" y="613" width="0.1601%" height="15" fill="rgb(230,130,50)" fg:x="41" fg:w="2"/><text x="3.5326%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="3.4428%" y="597" width="0.2402%" height="15" fill="rgb(239,144,14)" fg:x="43" fg:w="3"/><text x="3.6928%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="3.5228%" y="581" width="0.1601%" height="15" fill="rgb(227,111,50)" fg:x="44" fg:w="2"/><text x="3.7728%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="3.5228%" y="565" width="0.1601%" height="15" fill="rgb(254,84,20)" fg:x="44" fg:w="2"/><text x="3.7728%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.6029%" y="549" width="0.0801%" height="15" fill="rgb(232,90,48)" fg:x="45" fg:w="1"/><text x="3.8529%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.6029%" y="533" width="0.0801%" height="15" fill="rgb(253,63,47)" fg:x="45" fg:w="1"/><text x="3.8529%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.6029%" y="517" width="0.0801%" height="15" fill="rgb(251,146,35)" fg:x="45" fg:w="1"/><text x="3.8529%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.6029%" y="501" width="0.0801%" height="15" fill="rgb(229,192,35)" fg:x="45" fg:w="1"/><text x="3.8529%" y="511.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="3.4428%" y="613" width="0.5604%" height="15" fill="rgb(225,68,9)" fg:x="43" fg:w="7"/><text x="3.6928%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="3.6829%" y="597" width="0.3203%" height="15" fill="rgb(214,97,34)" fg:x="46" fg:w="4"/><text x="3.9329%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="3.7630%" y="581" width="0.2402%" height="15" fill="rgb(253,31,26)" fg:x="47" fg:w="3"/><text x="4.0130%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="4.0032%" y="597" width="0.3203%" height="15" fill="rgb(225,151,47)" fg:x="50" fg:w="4"/><text x="4.2532%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.0032%" y="581" width="0.3203%" height="15" fill="rgb(206,185,9)" fg:x="50" fg:w="4"/><text x="4.2532%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="4.0833%" y="565" width="0.2402%" height="15" fill="rgb(249,65,17)" fg:x="51" fg:w="3"/><text x="4.3333%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.1633%" y="549" width="0.1601%" height="15" fill="rgb(220,110,10)" fg:x="52" fg:w="2"/><text x="4.4133%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="4.4836%" y="581" width="0.0801%" height="15" fill="rgb(222,198,49)" fg:x="56" fg:w="1"/><text x="4.7336%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="4.4836%" y="565" width="0.0801%" height="15" fill="rgb(239,81,13)" fg:x="56" fg:w="1"/><text x="4.7336%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.5637%" y="581" width="0.0801%" height="15" fill="rgb(216,128,11)" fg:x="57" fg:w="1"/><text x="4.8137%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.5637%" y="565" width="0.0801%" height="15" fill="rgb(247,156,8)" fg:x="57" fg:w="1"/><text x="4.8137%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.5637%" y="549" width="0.0801%" height="15" fill="rgb(219,173,1)" fg:x="57" fg:w="1"/><text x="4.8137%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="4.7238%" y="565" width="0.4003%" height="15" fill="rgb(227,42,24)" fg:x="59" fg:w="5"/><text x="4.9738%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.9640%" y="549" width="0.1601%" height="15" fill="rgb(253,219,50)" fg:x="62" fg:w="2"/><text x="5.2140%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.9640%" y="533" width="0.1601%" height="15" fill="rgb(215,191,54)" fg:x="62" fg:w="2"/><text x="5.2140%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.0440%" y="517" width="0.0801%" height="15" fill="rgb(238,83,12)" fg:x="63" fg:w="1"/><text x="5.2940%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="5.1241%" y="549" width="0.2402%" height="15" fill="rgb(205,124,9)" fg:x="64" fg:w="3"/><text x="5.3741%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.2042%" y="533" width="0.1601%" height="15" fill="rgb(253,174,7)" fg:x="65" fg:w="2"/><text x="5.4542%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.2042%" y="517" width="0.1601%" height="15" fill="rgb(206,134,49)" fg:x="65" fg:w="2"/><text x="5.4542%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="5.1241%" y="565" width="0.4003%" height="15" fill="rgb(221,89,20)" fg:x="64" fg:w="5"/><text x="5.3741%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.3643%" y="549" width="0.1601%" height="15" fill="rgb(240,205,13)" fg:x="67" fg:w="2"/><text x="5.6143%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.44%)</title><rect x="4.3235%" y="597" width="1.4412%" height="15" fill="rgb(237,174,32)" fg:x="54" fg:w="18"/><text x="4.5735%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="4.6437%" y="581" width="1.1209%" height="15" fill="rgb(226,12,15)" fg:x="58" fg:w="14"/><text x="4.8937%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.5244%" y="565" width="0.2402%" height="15" fill="rgb(245,160,52)" fg:x="69" fg:w="3"/><text x="5.7744%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.5244%" y="549" width="0.2402%" height="15" fill="rgb(253,80,21)" fg:x="69" fg:w="3"/><text x="5.7744%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.6045%" y="533" width="0.1601%" height="15" fill="rgb(231,225,22)" fg:x="70" fg:w="2"/><text x="5.8545%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (31 samples, 2.48%)</title><rect x="3.4428%" y="629" width="2.4820%" height="15" fill="rgb(253,185,12)" fg:x="43" fg:w="31"/><text x="3.6928%" y="639.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="4.0032%" y="613" width="1.9215%" height="15" fill="rgb(234,197,21)" fg:x="50" fg:w="24"/><text x="4.2532%" y="623.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.7646%" y="597" width="0.1601%" height="15" fill="rgb(210,47,30)" fg:x="72" fg:w="2"/><text x="6.0146%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.8447%" y="581" width="0.0801%" height="15" fill="rgb(246,139,27)" fg:x="73" fg:w="1"/><text x="6.0947%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="5.9247%" y="581" width="0.1601%" height="15" fill="rgb(226,130,16)" fg:x="74" fg:w="2"/><text x="6.1747%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="6.0849%" y="565" width="0.1601%" height="15" fill="rgb(237,208,20)" fg:x="76" fg:w="2"/><text x="6.3349%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="5.9247%" y="629" width="0.4003%" height="15" fill="rgb(245,186,28)" fg:x="74" fg:w="5"/><text x="6.1747%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="5.9247%" y="613" width="0.4003%" height="15" fill="rgb(238,105,39)" fg:x="74" fg:w="5"/><text x="6.1747%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="5.9247%" y="597" width="0.4003%" height="15" fill="rgb(253,228,11)" fg:x="74" fg:w="5"/><text x="6.1747%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="6.0849%" y="581" width="0.2402%" height="15" fill="rgb(224,136,38)" fg:x="76" fg:w="3"/><text x="6.3349%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.2450%" y="565" width="0.0801%" height="15" fill="rgb(211,3,25)" fg:x="78" fg:w="1"/><text x="6.4950%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.2450%" y="549" width="0.0801%" height="15" fill="rgb(238,66,34)" fg:x="78" fg:w="1"/><text x="6.4950%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.4051%" y="581" width="0.0801%" height="15" fill="rgb(223,188,11)" fg:x="80" fg:w="1"/><text x="6.6551%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.4852%" y="581" width="0.1601%" height="15" fill="rgb(221,10,35)" fg:x="81" fg:w="2"/><text x="6.7352%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5653%" y="565" width="0.0801%" height="15" fill="rgb(223,18,44)" fg:x="82" fg:w="1"/><text x="6.8153%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="6.6453%" y="581" width="0.1601%" height="15" fill="rgb(220,97,41)" fg:x="83" fg:w="2"/><text x="6.8953%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.7254%" y="565" width="0.0801%" height="15" fill="rgb(206,95,45)" fg:x="84" fg:w="1"/><text x="6.9754%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7254%" y="549" width="0.0801%" height="15" fill="rgb(209,96,13)" fg:x="84" fg:w="1"/><text x="6.9754%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7254%" y="533" width="0.0801%" height="15" fill="rgb(237,39,34)" fg:x="84" fg:w="1"/><text x="6.9754%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8054%" y="549" width="0.0801%" height="15" fill="rgb(213,49,47)" fg:x="85" fg:w="1"/><text x="7.0554%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.8855%" y="549" width="0.1601%" height="15" fill="rgb(205,107,27)" fg:x="86" fg:w="2"/><text x="7.1355%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.9656%" y="533" width="0.0801%" height="15" fill="rgb(212,142,9)" fg:x="87" fg:w="1"/><text x="7.2156%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9656%" y="517" width="0.0801%" height="15" fill="rgb(226,182,0)" fg:x="87" fg:w="1"/><text x="7.2156%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.0456%" y="517" width="0.0801%" height="15" fill="rgb(231,3,53)" fg:x="88" fg:w="1"/><text x="7.2956%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.0456%" y="501" width="0.0801%" height="15" fill="rgb(246,111,28)" fg:x="88" fg:w="1"/><text x="7.2956%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.40%)</title><rect x="6.8054%" y="581" width="0.4003%" height="15" fill="rgb(254,183,7)" fg:x="85" fg:w="5"/><text x="7.0554%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="6.8054%" y="565" width="0.4003%" height="15" fill="rgb(247,177,28)" fg:x="85" fg:w="5"/><text x="7.0554%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="7.0456%" y="549" width="0.1601%" height="15" fill="rgb(244,43,1)" fg:x="88" fg:w="2"/><text x="7.2956%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="7.0456%" y="533" width="0.1601%" height="15" fill="rgb(207,2,35)" fg:x="88" fg:w="2"/><text x="7.2956%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1257%" y="517" width="0.0801%" height="15" fill="rgb(213,83,22)" fg:x="89" fg:w="1"/><text x="7.3757%" y="527.50"></text></g><g><title>kernel::compare::any_entity_changes (12 samples, 0.96%)</title><rect x="6.3251%" y="629" width="0.9608%" height="15" fill="rgb(246,212,13)" fg:x="79" fg:w="12"/><text x="6.5751%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="6.3251%" y="613" width="0.9608%" height="15" fill="rgb(213,127,46)" fg:x="79" fg:w="12"/><text x="6.5751%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="6.3251%" y="597" width="0.9608%" height="15" fill="rgb(219,215,39)" fg:x="79" fg:w="12"/><text x="6.5751%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="7.2058%" y="581" width="0.0801%" height="15" fill="rgb(227,99,17)" fg:x="90" fg:w="1"/><text x="7.4558%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="7.2058%" y="565" width="0.0801%" height="15" fill="rgb(208,155,18)" fg:x="90" fg:w="1"/><text x="7.4558%" y="575.50"></text></g><g><title>engine::session::Session::flush (51 samples, 4.08%)</title><rect x="3.2826%" y="693" width="4.0833%" height="15" fill="rgb(223,204,38)" fg:x="41" fg:w="51"/><text x="3.5326%" y="703.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (51 samples, 4.08%)</title><rect x="3.2826%" y="677" width="4.0833%" height="15" fill="rgb(212,114,21)" fg:x="41" fg:w="51"/><text x="3.5326%" y="687.50">engi..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (51 samples, 4.08%)</title><rect x="3.2826%" y="661" width="4.0833%" height="15" fill="rgb(250,74,13)" fg:x="41" fg:w="51"/><text x="3.5326%" y="671.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (49 samples, 3.92%)</title><rect x="3.4428%" y="645" width="3.9231%" height="15" fill="rgb(234,7,1)" fg:x="43" fg:w="49"/><text x="3.6928%" y="655.50">engi..</text></g><g><title>kernel::model::Entity::set_gid (1 samples, 0.08%)</title><rect x="7.2858%" y="629" width="0.0801%" height="15" fill="rgb(207,138,31)" fg:x="91" fg:w="1"/><text x="7.5358%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2858%" y="613" width="0.0801%" height="15" fill="rgb(215,186,42)" fg:x="91" fg:w="1"/><text x="7.5358%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="7.3659%" y="645" width="0.0801%" height="15" fill="rgb(229,205,49)" fg:x="92" fg:w="1"/><text x="7.6159%" y="655.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="7.3659%" y="629" width="0.0801%" height="15" fill="rgb(216,156,32)" fg:x="92" fg:w="1"/><text x="7.6159%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="7.3659%" y="661" width="0.1601%" height="15" fill="rgb(238,7,21)" fg:x="92" fg:w="2"/><text x="7.6159%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.4460%" y="645" width="0.0801%" height="15" fill="rgb(249,190,22)" fg:x="93" fg:w="1"/><text x="7.6960%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="7.4460%" y="629" width="0.0801%" height="15" fill="rgb(253,51,31)" fg:x="93" fg:w="1"/><text x="7.6960%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="613" width="0.0801%" height="15" fill="rgb(237,90,54)" fg:x="93" fg:w="1"/><text x="7.6960%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.4460%" y="597" width="0.0801%" height="15" fill="rgb(250,214,33)" fg:x="93" fg:w="1"/><text x="7.6960%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="581" width="0.0801%" height="15" fill="rgb(237,10,49)" fg:x="93" fg:w="1"/><text x="7.6960%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="565" width="0.0801%" height="15" fill="rgb(241,56,36)" fg:x="93" fg:w="1"/><text x="7.6960%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="549" width="0.0801%" height="15" fill="rgb(227,164,12)" fg:x="93" fg:w="1"/><text x="7.6960%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.4460%" y="533" width="0.0801%" height="15" fill="rgb(249,149,35)" fg:x="93" fg:w="1"/><text x="7.6960%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="517" width="0.0801%" height="15" fill="rgb(238,227,50)" fg:x="93" fg:w="1"/><text x="7.6960%" y="527.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="501" width="0.0801%" height="15" fill="rgb(235,102,45)" fg:x="93" fg:w="1"/><text x="7.6960%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="485" width="0.0801%" height="15" fill="rgb(211,10,38)" fg:x="93" fg:w="1"/><text x="7.6960%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.4460%" y="469" width="0.0801%" height="15" fill="rgb(219,77,48)" fg:x="93" fg:w="1"/><text x="7.6960%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.4460%" y="453" width="0.0801%" height="15" fill="rgb(246,6,15)" fg:x="93" fg:w="1"/><text x="7.6960%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4460%" y="437" width="0.0801%" height="15" fill="rgb(207,220,2)" fg:x="93" fg:w="1"/><text x="7.6960%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.4460%" y="421" width="0.0801%" height="15" fill="rgb(242,48,14)" fg:x="93" fg:w="1"/><text x="7.6960%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="7.4460%" y="405" width="0.0801%" height="15" fill="rgb(218,19,27)" fg:x="93" fg:w="1"/><text x="7.6960%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.4460%" y="389" width="0.0801%" height="15" fill="rgb(228,0,35)" fg:x="93" fg:w="1"/><text x="7.6960%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.4460%" y="373" width="0.0801%" height="15" fill="rgb(244,142,54)" fg:x="93" fg:w="1"/><text x="7.6960%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.4460%" y="357" width="0.0801%" height="15" fill="rgb(243,217,40)" fg:x="93" fg:w="1"/><text x="7.6960%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.4460%" y="341" width="0.0801%" height="15" fill="rgb(207,114,16)" fg:x="93" fg:w="1"/><text x="7.6960%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="7.4460%" y="325" width="0.0801%" height="15" fill="rgb(224,33,25)" fg:x="93" fg:w="1"/><text x="7.6960%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.4460%" y="309" width="0.0801%" height="15" fill="rgb(230,93,54)" fg:x="93" fg:w="1"/><text x="7.6960%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="7.4460%" y="293" width="0.0801%" height="15" fill="rgb(224,56,24)" fg:x="93" fg:w="1"/><text x="7.6960%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.4460%" y="277" width="0.0801%" height="15" fill="rgb(235,189,50)" fg:x="93" fg:w="1"/><text x="7.6960%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="7.4460%" y="261" width="0.0801%" height="15" fill="rgb(242,173,8)" fg:x="93" fg:w="1"/><text x="7.6960%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="7.4460%" y="245" width="0.0801%" height="15" fill="rgb(209,206,10)" fg:x="93" fg:w="1"/><text x="7.6960%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="7.4460%" y="229" width="0.0801%" height="15" fill="rgb(213,182,44)" fg:x="93" fg:w="1"/><text x="7.6960%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.4460%" y="213" width="0.0801%" height="15" fill="rgb(243,51,15)" fg:x="93" fg:w="1"/><text x="7.6960%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="7.3659%" y="677" width="0.2402%" height="15" fill="rgb(241,13,14)" fg:x="92" fg:w="3"/><text x="7.6159%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="7.5260%" y="661" width="0.0801%" height="15" fill="rgb(239,147,24)" fg:x="94" fg:w="1"/><text x="7.7760%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5260%" y="645" width="0.0801%" height="15" fill="rgb(223,129,16)" fg:x="94" fg:w="1"/><text x="7.7760%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.5260%" y="629" width="0.0801%" height="15" fill="rgb(209,169,13)" fg:x="94" fg:w="1"/><text x="7.7760%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.5260%" y="613" width="0.0801%" height="15" fill="rgb(235,159,41)" fg:x="94" fg:w="1"/><text x="7.7760%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.5260%" y="597" width="0.0801%" height="15" fill="rgb(223,219,48)" fg:x="94" fg:w="1"/><text x="7.7760%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.5260%" y="581" width="0.0801%" height="15" fill="rgb(236,80,13)" fg:x="94" fg:w="1"/><text x="7.7760%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="7.5260%" y="565" width="0.0801%" height="15" fill="rgb(213,5,6)" fg:x="94" fg:w="1"/><text x="7.7760%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.5260%" y="549" width="0.0801%" height="15" fill="rgb(205,59,21)" fg:x="94" fg:w="1"/><text x="7.7760%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="7.6061%" y="677" width="0.0801%" height="15" fill="rgb(247,137,35)" fg:x="95" fg:w="1"/><text x="7.8561%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="7.6061%" y="661" width="0.0801%" height="15" fill="rgb(242,208,28)" fg:x="95" fg:w="1"/><text x="7.8561%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.6061%" y="645" width="0.0801%" height="15" fill="rgb(245,62,25)" fg:x="95" fg:w="1"/><text x="7.8561%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="7.7662%" y="661" width="0.0801%" height="15" fill="rgb(233,99,54)" fg:x="97" fg:w="1"/><text x="8.0162%" y="671.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="7.7662%" y="645" width="0.0801%" height="15" fill="rgb(213,10,37)" fg:x="97" fg:w="1"/><text x="8.0162%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="7.7662%" y="629" width="0.0801%" height="15" fill="rgb(235,143,30)" fg:x="97" fg:w="1"/><text x="8.0162%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.7662%" y="613" width="0.0801%" height="15" fill="rgb(250,146,33)" fg:x="97" fg:w="1"/><text x="8.0162%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="7.8463%" y="661" width="0.0801%" height="15" fill="rgb(226,198,42)" fg:x="98" fg:w="1"/><text x="8.0963%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="7.3659%" y="693" width="0.6405%" height="15" fill="rgb(222,55,6)" fg:x="92" fg:w="8"/><text x="7.6159%" y="703.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="7.6861%" y="677" width="0.3203%" height="15" fill="rgb(213,224,31)" fg:x="96" fg:w="4"/><text x="7.9361%" y="687.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="7.9263%" y="661" width="0.0801%" height="15" fill="rgb(226,103,35)" fg:x="99" fg:w="1"/><text x="8.1763%" y="671.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="7.9263%" y="645" width="0.0801%" height="15" fill="rgb(205,66,45)" fg:x="99" fg:w="1"/><text x="8.1763%" y="655.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="7.9263%" y="629" width="0.0801%" height="15" fill="rgb(226,51,42)" fg:x="99" fg:w="1"/><text x="8.1763%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.9263%" y="613" width="0.0801%" height="15" fill="rgb(206,69,1)" fg:x="99" fg:w="1"/><text x="8.1763%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="7.9263%" y="597" width="0.0801%" height="15" fill="rgb(213,228,47)" fg:x="99" fg:w="1"/><text x="8.1763%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.9263%" y="581" width="0.0801%" height="15" fill="rgb(224,204,18)" fg:x="99" fg:w="1"/><text x="8.1763%" y="591.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="7.9263%" y="565" width="0.0801%" height="15" fill="rgb(253,187,47)" fg:x="99" fg:w="1"/><text x="8.1763%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.9263%" y="549" width="0.0801%" height="15" fill="rgb(232,61,2)" fg:x="99" fg:w="1"/><text x="8.1763%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="8.0064%" y="693" width="0.0801%" height="15" fill="rgb(213,132,35)" fg:x="100" fg:w="1"/><text x="8.2564%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.0064%" y="677" width="0.0801%" height="15" fill="rgb(247,33,21)" fg:x="100" fg:w="1"/><text x="8.2564%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.0064%" y="661" width="0.0801%" height="15" fill="rgb(233,71,46)" fg:x="100" fg:w="1"/><text x="8.2564%" y="671.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="8.0064%" y="645" width="0.0801%" height="15" fill="rgb(222,173,43)" fg:x="100" fg:w="1"/><text x="8.2564%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.0064%" y="629" width="0.0801%" height="15" fill="rgb(249,218,47)" fg:x="100" fg:w="1"/><text x="8.2564%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="8.0865%" y="677" width="0.0801%" height="15" fill="rgb(254,185,48)" fg:x="101" fg:w="1"/><text x="8.3365%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="8.0865%" y="661" width="0.0801%" height="15" fill="rgb(252,165,50)" fg:x="101" fg:w="1"/><text x="8.3365%" y="671.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="8.0865%" y="645" width="0.0801%" height="15" fill="rgb(206,219,6)" fg:x="101" fg:w="1"/><text x="8.3365%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="8.0865%" y="629" width="0.0801%" height="15" fill="rgb(212,212,45)" fg:x="101" fg:w="1"/><text x="8.3365%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.0865%" y="613" width="0.0801%" height="15" fill="rgb(221,31,9)" fg:x="101" fg:w="1"/><text x="8.3365%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="8.2466%" y="629" width="0.1601%" height="15" fill="rgb(234,198,39)" fg:x="103" fg:w="2"/><text x="8.4966%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="8.2466%" y="613" width="0.1601%" height="15" fill="rgb(252,145,46)" fg:x="103" fg:w="2"/><text x="8.4966%" y="623.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="8.2466%" y="597" width="0.1601%" height="15" fill="rgb(237,149,0)" fg:x="103" fg:w="2"/><text x="8.4966%" y="607.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="8.2466%" y="581" width="0.1601%" height="15" fill="rgb(229,65,5)" fg:x="103" fg:w="2"/><text x="8.4966%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.3267%" y="565" width="0.0801%" height="15" fill="rgb(235,60,36)" fg:x="104" fg:w="1"/><text x="8.5767%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="8.3267%" y="549" width="0.0801%" height="15" fill="rgb(222,47,18)" fg:x="104" fg:w="1"/><text x="8.5767%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4067%" y="581" width="0.0801%" height="15" fill="rgb(235,114,22)" fg:x="105" fg:w="1"/><text x="8.6567%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="8.4067%" y="613" width="0.1601%" height="15" fill="rgb(209,167,11)" fg:x="105" fg:w="2"/><text x="8.6567%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="8.4067%" y="597" width="0.1601%" height="15" fill="rgb(251,73,18)" fg:x="105" fg:w="2"/><text x="8.6567%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.4868%" y="581" width="0.0801%" height="15" fill="rgb(217,60,17)" fg:x="106" fg:w="1"/><text x="8.7368%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="8.4868%" y="565" width="0.0801%" height="15" fill="rgb(224,36,37)" fg:x="106" fg:w="1"/><text x="8.7368%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="549" width="0.0801%" height="15" fill="rgb(211,21,32)" fg:x="106" fg:w="1"/><text x="8.7368%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.4868%" y="533" width="0.0801%" height="15" fill="rgb(231,55,48)" fg:x="106" fg:w="1"/><text x="8.7368%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="517" width="0.0801%" height="15" fill="rgb(227,42,18)" fg:x="106" fg:w="1"/><text x="8.7368%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="501" width="0.0801%" height="15" fill="rgb(217,2,27)" fg:x="106" fg:w="1"/><text x="8.7368%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="485" width="0.0801%" height="15" fill="rgb(251,138,23)" fg:x="106" fg:w="1"/><text x="8.7368%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.4868%" y="469" width="0.0801%" height="15" fill="rgb(226,184,11)" fg:x="106" fg:w="1"/><text x="8.7368%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="453" width="0.0801%" height="15" fill="rgb(242,142,12)" fg:x="106" fg:w="1"/><text x="8.7368%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="437" width="0.0801%" height="15" fill="rgb(234,187,18)" fg:x="106" fg:w="1"/><text x="8.7368%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="421" width="0.0801%" height="15" fill="rgb(237,44,42)" fg:x="106" fg:w="1"/><text x="8.7368%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.4868%" y="405" width="0.0801%" height="15" fill="rgb(211,90,23)" fg:x="106" fg:w="1"/><text x="8.7368%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="389" width="0.0801%" height="15" fill="rgb(207,81,18)" fg:x="106" fg:w="1"/><text x="8.7368%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.4868%" y="373" width="0.0801%" height="15" fill="rgb(222,107,28)" fg:x="106" fg:w="1"/><text x="8.7368%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.5669%" y="613" width="0.0801%" height="15" fill="rgb(237,83,52)" fg:x="107" fg:w="1"/><text x="8.8169%" y="623.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="8.1665%" y="677" width="0.5604%" height="15" fill="rgb(208,67,11)" fg:x="102" fg:w="7"/><text x="8.4165%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="8.1665%" y="661" width="0.5604%" height="15" fill="rgb(249,157,49)" fg:x="102" fg:w="7"/><text x="8.4165%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="8.1665%" y="645" width="0.5604%" height="15" fill="rgb(243,200,1)" fg:x="102" fg:w="7"/><text x="8.4165%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.32%)</title><rect x="8.4067%" y="629" width="0.3203%" height="15" fill="rgb(225,162,37)" fg:x="105" fg:w="4"/><text x="8.6567%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="8.6469%" y="613" width="0.0801%" height="15" fill="rgb(242,92,13)" fg:x="108" fg:w="1"/><text x="8.8969%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="8.6469%" y="597" width="0.0801%" height="15" fill="rgb(220,43,36)" fg:x="108" fg:w="1"/><text x="8.8969%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="8.6469%" y="581" width="0.0801%" height="15" fill="rgb(213,165,48)" fg:x="108" fg:w="1"/><text x="8.8969%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6469%" y="565" width="0.0801%" height="15" fill="rgb(227,200,9)" fg:x="108" fg:w="1"/><text x="8.8969%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6469%" y="549" width="0.0801%" height="15" fill="rgb(221,222,28)" fg:x="108" fg:w="1"/><text x="8.8969%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.6469%" y="533" width="0.0801%" height="15" fill="rgb(223,142,26)" fg:x="108" fg:w="1"/><text x="8.8969%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.6469%" y="517" width="0.0801%" height="15" fill="rgb(243,46,9)" fg:x="108" fg:w="1"/><text x="8.8969%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.6469%" y="501" width="0.0801%" height="15" fill="rgb(250,56,11)" fg:x="108" fg:w="1"/><text x="8.8969%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6469%" y="485" width="0.0801%" height="15" fill="rgb(229,113,5)" fg:x="108" fg:w="1"/><text x="8.8969%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6469%" y="469" width="0.0801%" height="15" fill="rgb(244,108,28)" fg:x="108" fg:w="1"/><text x="8.8969%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.6469%" y="453" width="0.0801%" height="15" fill="rgb(242,119,50)" fg:x="108" fg:w="1"/><text x="8.8969%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.6469%" y="437" width="0.0801%" height="15" fill="rgb(224,164,23)" fg:x="108" fg:w="1"/><text x="8.8969%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.6469%" y="421" width="0.0801%" height="15" fill="rgb(214,227,44)" fg:x="108" fg:w="1"/><text x="8.8969%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.6469%" y="405" width="0.0801%" height="15" fill="rgb(238,202,4)" fg:x="108" fg:w="1"/><text x="8.8969%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6469%" y="389" width="0.0801%" height="15" fill="rgb(213,190,30)" fg:x="108" fg:w="1"/><text x="8.8969%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="8.7270%" y="677" width="0.0801%" height="15" fill="rgb(239,15,2)" fg:x="109" fg:w="1"/><text x="8.9770%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="8.7270%" y="661" width="0.0801%" height="15" fill="rgb(249,229,4)" fg:x="109" fg:w="1"/><text x="8.9770%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.7270%" y="645" width="0.0801%" height="15" fill="rgb(239,75,44)" fg:x="109" fg:w="1"/><text x="8.9770%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.7270%" y="629" width="0.0801%" height="15" fill="rgb(251,206,23)" fg:x="109" fg:w="1"/><text x="8.9770%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="8.8070%" y="645" width="0.0801%" height="15" fill="rgb(215,208,0)" fg:x="110" fg:w="1"/><text x="9.0570%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.8070%" y="629" width="0.0801%" height="15" fill="rgb(230,75,50)" fg:x="110" fg:w="1"/><text x="9.0570%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="8.8871%" y="645" width="0.0801%" height="15" fill="rgb(246,180,39)" fg:x="111" fg:w="1"/><text x="9.1371%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="8.8871%" y="629" width="0.0801%" height="15" fill="rgb(249,175,24)" fg:x="111" fg:w="1"/><text x="9.1371%" y="639.50"></text></g><g><title>engine::identifiers::model::set_gid (2 samples, 0.16%)</title><rect x="8.9672%" y="645" width="0.1601%" height="15" fill="rgb(247,176,22)" fg:x="112" fg:w="2"/><text x="9.2172%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="9.0472%" y="629" width="0.0801%" height="15" fill="rgb(241,100,24)" fg:x="113" fg:w="1"/><text x="9.2972%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.0472%" y="613" width="0.0801%" height="15" fill="rgb(233,4,35)" fg:x="113" fg:w="1"/><text x="9.2972%" y="623.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="9.0472%" y="597" width="0.0801%" height="15" fill="rgb(211,164,46)" fg:x="113" fg:w="1"/><text x="9.2972%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.0472%" y="581" width="0.0801%" height="15" fill="rgb(242,99,53)" fg:x="113" fg:w="1"/><text x="9.2972%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4476%" y="533" width="0.0801%" height="15" fill="rgb(243,45,33)" fg:x="118" fg:w="1"/><text x="9.6976%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.4476%" y="517" width="0.0801%" height="15" fill="rgb(217,55,21)" fg:x="118" fg:w="1"/><text x="9.6976%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.4476%" y="501" width="0.0801%" height="15" fill="rgb(245,145,46)" fg:x="118" fg:w="1"/><text x="9.6976%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.4476%" y="485" width="0.0801%" height="15" fill="rgb(215,112,45)" fg:x="118" fg:w="1"/><text x="9.6976%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="9.2874%" y="597" width="0.3203%" height="15" fill="rgb(228,104,16)" fg:x="116" fg:w="4"/><text x="9.5374%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="9.2874%" y="581" width="0.3203%" height="15" fill="rgb(239,186,38)" fg:x="116" fg:w="4"/><text x="9.5374%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="9.2874%" y="565" width="0.3203%" height="15" fill="rgb(228,38,35)" fg:x="116" fg:w="4"/><text x="9.5374%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.4476%" y="549" width="0.1601%" height="15" fill="rgb(251,42,40)" fg:x="118" fg:w="2"/><text x="9.6976%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="9.5276%" y="533" width="0.0801%" height="15" fill="rgb(210,51,19)" fg:x="119" fg:w="1"/><text x="9.7776%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.6077%" y="581" width="0.0801%" height="15" fill="rgb(236,94,42)" fg:x="120" fg:w="1"/><text x="9.8577%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.6878%" y="581" width="0.0801%" height="15" fill="rgb(239,167,16)" fg:x="121" fg:w="1"/><text x="9.9378%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6878%" y="565" width="0.0801%" height="15" fill="rgb(252,175,31)" fg:x="121" fg:w="1"/><text x="9.9378%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6878%" y="549" width="0.0801%" height="15" fill="rgb(206,166,30)" fg:x="121" fg:w="1"/><text x="9.9378%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.7678%" y="581" width="0.1601%" height="15" fill="rgb(206,209,37)" fg:x="122" fg:w="2"/><text x="10.0178%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.7678%" y="565" width="0.1601%" height="15" fill="rgb(226,91,4)" fg:x="122" fg:w="2"/><text x="10.0178%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.9279%" y="565" width="0.0801%" height="15" fill="rgb(222,167,0)" fg:x="124" fg:w="1"/><text x="10.1779%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.0080%" y="549" width="0.0801%" height="15" fill="rgb(211,70,14)" fg:x="125" fg:w="1"/><text x="10.2580%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.0080%" y="533" width="0.0801%" height="15" fill="rgb(214,84,42)" fg:x="125" fg:w="1"/><text x="10.2580%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.0080%" y="565" width="0.1601%" height="15" fill="rgb(235,157,37)" fg:x="125" fg:w="2"/><text x="10.2580%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.0881%" y="549" width="0.0801%" height="15" fill="rgb(225,13,6)" fg:x="126" fg:w="1"/><text x="10.3381%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="10.1681%" y="565" width="0.4003%" height="15" fill="rgb(205,202,1)" fg:x="127" fg:w="5"/><text x="10.4181%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.3283%" y="549" width="0.2402%" height="15" fill="rgb(232,195,26)" fg:x="129" fg:w="3"/><text x="10.5783%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.4083%" y="533" width="0.1601%" height="15" fill="rgb(208,102,26)" fg:x="130" fg:w="2"/><text x="10.6583%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="10.4884%" y="517" width="0.0801%" height="15" fill="rgb(215,41,39)" fg:x="131" fg:w="1"/><text x="10.7384%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="10.5685%" y="549" width="0.3203%" height="15" fill="rgb(247,139,11)" fg:x="132" fg:w="4"/><text x="10.8185%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.6485%" y="533" width="0.2402%" height="15" fill="rgb(243,99,6)" fg:x="133" fg:w="3"/><text x="10.8985%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.8887%" y="549" width="0.0801%" height="15" fill="rgb(230,168,48)" fg:x="136" fg:w="1"/><text x="11.1387%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.8887%" y="533" width="0.0801%" height="15" fill="rgb(238,227,13)" fg:x="136" fg:w="1"/><text x="11.1387%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.8887%" y="517" width="0.0801%" height="15" fill="rgb(209,109,13)" fg:x="136" fg:w="1"/><text x="11.1387%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.8887%" y="501" width="0.0801%" height="15" fill="rgb(228,195,1)" fg:x="136" fg:w="1"/><text x="11.1387%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.8887%" y="485" width="0.0801%" height="15" fill="rgb(230,218,0)" fg:x="136" fg:w="1"/><text x="11.1387%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="10.5685%" y="565" width="0.5604%" height="15" fill="rgb(206,1,45)" fg:x="132" fg:w="7"/><text x="10.8185%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.9688%" y="549" width="0.1601%" height="15" fill="rgb(209,124,26)" fg:x="137" fg:w="2"/><text x="11.2188%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="9.9279%" y="581" width="1.2810%" height="15" fill="rgb(220,59,8)" fg:x="124" fg:w="16"/><text x="10.1779%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.1289%" y="565" width="0.0801%" height="15" fill="rgb(251,41,37)" fg:x="139" fg:w="1"/><text x="11.3789%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="9.6077%" y="597" width="1.7614%" height="15" fill="rgb(239,152,21)" fg:x="120" fg:w="22"/><text x="9.8577%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.2090%" y="581" width="0.1601%" height="15" fill="rgb(226,32,1)" fg:x="140" fg:w="2"/><text x="11.4590%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.2890%" y="565" width="0.0801%" height="15" fill="rgb(230,154,36)" fg:x="141" fg:w="1"/><text x="11.5390%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.2890%" y="549" width="0.0801%" height="15" fill="rgb(208,228,43)" fg:x="141" fg:w="1"/><text x="11.5390%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.32%)</title><rect x="9.1273%" y="613" width="2.3219%" height="15" fill="rgb(214,203,3)" fg:x="114" fg:w="29"/><text x="9.3773%" y="623.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.3691%" y="597" width="0.0801%" height="15" fill="rgb(207,149,29)" fg:x="142" fg:w="1"/><text x="11.6191%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.3691%" y="581" width="0.0801%" height="15" fill="rgb(250,105,7)" fg:x="142" fg:w="1"/><text x="11.6191%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.3691%" y="565" width="0.0801%" height="15" fill="rgb(232,222,16)" fg:x="142" fg:w="1"/><text x="11.6191%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.3691%" y="549" width="0.0801%" height="15" fill="rgb(209,32,24)" fg:x="142" fg:w="1"/><text x="11.6191%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.4492%" y="581" width="0.0801%" height="15" fill="rgb(225,13,6)" fg:x="143" fg:w="1"/><text x="11.6992%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.5292%" y="581" width="0.0801%" height="15" fill="rgb(245,226,26)" fg:x="144" fg:w="1"/><text x="11.7792%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="11.7694%" y="549" width="0.1601%" height="15" fill="rgb(229,178,27)" fg:x="147" fg:w="2"/><text x="12.0194%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.7694%" y="533" width="0.1601%" height="15" fill="rgb(205,227,28)" fg:x="147" fg:w="2"/><text x="12.0194%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.9295%" y="533" width="0.1601%" height="15" fill="rgb(210,191,45)" fg:x="149" fg:w="2"/><text x="12.1795%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="11.4492%" y="613" width="0.7206%" height="15" fill="rgb(206,124,16)" fg:x="143" fg:w="9"/><text x="11.6992%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="11.4492%" y="597" width="0.7206%" height="15" fill="rgb(210,162,0)" fg:x="143" fg:w="9"/><text x="11.6992%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.6093%" y="581" width="0.5604%" height="15" fill="rgb(211,54,38)" fg:x="145" fg:w="7"/><text x="11.8593%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="11.6093%" y="565" width="0.5604%" height="15" fill="rgb(248,192,3)" fg:x="145" fg:w="7"/><text x="11.8593%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.9295%" y="549" width="0.2402%" height="15" fill="rgb(233,187,18)" fg:x="149" fg:w="3"/><text x="12.1795%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.0897%" y="533" width="0.0801%" height="15" fill="rgb(237,208,14)" fg:x="151" fg:w="1"/><text x="12.3397%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0897%" y="517" width="0.0801%" height="15" fill="rgb(212,77,1)" fg:x="151" fg:w="1"/><text x="12.3397%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1697%" y="597" width="0.0801%" height="15" fill="rgb(210,163,22)" fg:x="152" fg:w="1"/><text x="12.4197%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.3299%" y="565" width="0.0801%" height="15" fill="rgb(250,58,28)" fg:x="154" fg:w="1"/><text x="12.5799%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="12.4099%" y="565" width="0.4003%" height="15" fill="rgb(254,28,41)" fg:x="155" fg:w="5"/><text x="12.6599%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.6501%" y="549" width="0.1601%" height="15" fill="rgb(237,162,36)" fg:x="158" fg:w="2"/><text x="12.9001%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="12.6501%" y="533" width="0.1601%" height="15" fill="rgb(232,56,6)" fg:x="158" fg:w="2"/><text x="12.9001%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8102%" y="533" width="0.0801%" height="15" fill="rgb(216,127,42)" fg:x="160" fg:w="1"/><text x="13.0602%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="12.8102%" y="565" width="0.2402%" height="15" fill="rgb(241,69,15)" fg:x="160" fg:w="3"/><text x="13.0602%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="12.8102%" y="549" width="0.2402%" height="15" fill="rgb(227,180,19)" fg:x="160" fg:w="3"/><text x="13.0602%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="12.8903%" y="533" width="0.1601%" height="15" fill="rgb(231,188,29)" fg:x="161" fg:w="2"/><text x="13.1403%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8903%" y="517" width="0.1601%" height="15" fill="rgb(224,176,27)" fg:x="161" fg:w="2"/><text x="13.1403%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8903%" y="501" width="0.1601%" height="15" fill="rgb(249,214,19)" fg:x="161" fg:w="2"/><text x="13.1403%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8903%" y="485" width="0.1601%" height="15" fill="rgb(240,0,4)" fg:x="161" fg:w="2"/><text x="13.1403%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8903%" y="469" width="0.1601%" height="15" fill="rgb(233,28,41)" fg:x="161" fg:w="2"/><text x="13.1403%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.8903%" y="453" width="0.1601%" height="15" fill="rgb(220,90,51)" fg:x="161" fg:w="2"/><text x="13.1403%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="12.8903%" y="437" width="0.1601%" height="15" fill="rgb(250,52,22)" fg:x="161" fg:w="2"/><text x="13.1403%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9704%" y="421" width="0.0801%" height="15" fill="rgb(231,152,36)" fg:x="162" fg:w="1"/><text x="13.2204%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.0504%" y="549" width="0.0801%" height="15" fill="rgb(250,218,4)" fg:x="163" fg:w="1"/><text x="13.3004%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1305%" y="517" width="0.0801%" height="15" fill="rgb(210,38,21)" fg:x="164" fg:w="1"/><text x="13.3805%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1305%" y="501" width="0.0801%" height="15" fill="rgb(230,75,13)" fg:x="164" fg:w="1"/><text x="13.3805%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1305%" y="485" width="0.0801%" height="15" fill="rgb(250,68,53)" fg:x="164" fg:w="1"/><text x="13.3805%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="13.2106%" y="517" width="0.0801%" height="15" fill="rgb(250,210,16)" fg:x="165" fg:w="1"/><text x="13.4606%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2106%" y="501" width="0.0801%" height="15" fill="rgb(240,132,5)" fg:x="165" fg:w="1"/><text x="13.4606%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="13.2106%" y="485" width="0.0801%" height="15" fill="rgb(222,148,48)" fg:x="165" fg:w="1"/><text x="13.4606%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2106%" y="469" width="0.0801%" height="15" fill="rgb(247,181,24)" fg:x="165" fg:w="1"/><text x="13.4606%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2106%" y="453" width="0.0801%" height="15" fill="rgb(239,5,31)" fg:x="165" fg:w="1"/><text x="13.4606%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="13.3707%" y="501" width="0.1601%" height="15" fill="rgb(241,152,38)" fg:x="167" fg:w="2"/><text x="13.6207%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.4508%" y="485" width="0.0801%" height="15" fill="rgb(246,200,37)" fg:x="168" fg:w="1"/><text x="13.7008%" y="495.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (56 samples, 4.48%)</title><rect x="9.1273%" y="645" width="4.4836%" height="15" fill="rgb(243,210,26)" fg:x="114" fg:w="56"/><text x="9.3773%" y="655.50">engin..</text></g><g><title>engine::session::Session::check_for_changes (56 samples, 4.48%)</title><rect x="9.1273%" y="629" width="4.4836%" height="15" fill="rgb(222,22,22)" fg:x="114" fg:w="56"/><text x="9.3773%" y="639.50">engin..</text></g><g><title>kernel::compare::any_entity_changes (18 samples, 1.44%)</title><rect x="12.1697%" y="613" width="1.4412%" height="15" fill="rgb(208,129,28)" fg:x="152" fg:w="18"/><text x="12.4197%" y="623.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (17 samples, 1.36%)</title><rect x="12.2498%" y="597" width="1.3611%" height="15" fill="rgb(254,169,28)" fg:x="153" fg:w="17"/><text x="12.4998%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 1.36%)</title><rect x="12.2498%" y="581" width="1.3611%" height="15" fill="rgb(225,45,17)" fg:x="153" fg:w="17"/><text x="12.4998%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="13.0504%" y="565" width="0.5604%" height="15" fill="rgb(232,199,2)" fg:x="163" fg:w="7"/><text x="13.3004%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="13.1305%" y="549" width="0.4804%" height="15" fill="rgb(235,33,40)" fg:x="164" fg:w="6"/><text x="13.3805%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="13.1305%" y="533" width="0.4804%" height="15" fill="rgb(237,89,50)" fg:x="164" fg:w="6"/><text x="13.3805%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="13.2906%" y="517" width="0.3203%" height="15" fill="rgb(238,126,5)" fg:x="166" fg:w="4"/><text x="13.5406%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5308%" y="501" width="0.0801%" height="15" fill="rgb(247,214,42)" fg:x="169" fg:w="1"/><text x="13.7808%" y="511.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="13.6109%" y="645" width="0.0801%" height="15" fill="rgb(238,60,45)" fg:x="170" fg:w="1"/><text x="13.8609%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="13.6109%" y="629" width="0.0801%" height="15" fill="rgb(225,69,44)" fg:x="170" fg:w="1"/><text x="13.8609%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.6109%" y="613" width="0.0801%" height="15" fill="rgb(241,13,44)" fg:x="170" fg:w="1"/><text x="13.8609%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.6109%" y="597" width="0.0801%" height="15" fill="rgb(227,121,22)" fg:x="170" fg:w="1"/><text x="13.8609%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.6109%" y="581" width="0.0801%" height="15" fill="rgb(231,160,23)" fg:x="170" fg:w="1"/><text x="13.8609%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.6109%" y="565" width="0.0801%" height="15" fill="rgb(250,179,43)" fg:x="170" fg:w="1"/><text x="13.8609%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.6109%" y="549" width="0.0801%" height="15" fill="rgb(233,54,46)" fg:x="170" fg:w="1"/><text x="13.8609%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.6109%" y="533" width="0.0801%" height="15" fill="rgb(247,120,42)" fg:x="170" fg:w="1"/><text x="13.8609%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.6109%" y="517" width="0.0801%" height="15" fill="rgb(221,219,12)" fg:x="170" fg:w="1"/><text x="13.8609%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.6109%" y="501" width="0.0801%" height="15" fill="rgb(211,126,8)" fg:x="170" fg:w="1"/><text x="13.8609%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.6109%" y="485" width="0.0801%" height="15" fill="rgb(218,154,33)" fg:x="170" fg:w="1"/><text x="13.8609%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6109%" y="469" width="0.0801%" height="15" fill="rgb(212,199,16)" fg:x="170" fg:w="1"/><text x="13.8609%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6109%" y="453" width="0.0801%" height="15" fill="rgb(236,215,46)" fg:x="170" fg:w="1"/><text x="13.8609%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.6109%" y="437" width="0.0801%" height="15" fill="rgb(232,32,22)" fg:x="170" fg:w="1"/><text x="13.8609%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.6109%" y="421" width="0.0801%" height="15" fill="rgb(234,79,15)" fg:x="170" fg:w="1"/><text x="13.8609%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.6109%" y="405" width="0.0801%" height="15" fill="rgb(235,187,47)" fg:x="170" fg:w="1"/><text x="13.8609%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.6109%" y="389" width="0.0801%" height="15" fill="rgb(244,69,37)" fg:x="170" fg:w="1"/><text x="13.8609%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6109%" y="373" width="0.0801%" height="15" fill="rgb(249,140,25)" fg:x="170" fg:w="1"/><text x="13.8609%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6109%" y="357" width="0.0801%" height="15" fill="rgb(213,69,8)" fg:x="170" fg:w="1"/><text x="13.8609%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6109%" y="341" width="0.0801%" height="15" fill="rgb(220,136,2)" fg:x="170" fg:w="1"/><text x="13.8609%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.6109%" y="325" width="0.0801%" height="15" fill="rgb(237,50,36)" fg:x="170" fg:w="1"/><text x="13.8609%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6109%" y="309" width="0.0801%" height="15" fill="rgb(226,18,11)" fg:x="170" fg:w="1"/><text x="13.8609%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.6109%" y="293" width="0.0801%" height="15" fill="rgb(243,156,2)" fg:x="170" fg:w="1"/><text x="13.8609%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.6109%" y="277" width="0.0801%" height="15" fill="rgb(218,8,34)" fg:x="170" fg:w="1"/><text x="13.8609%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.6109%" y="261" width="0.0801%" height="15" fill="rgb(250,94,35)" fg:x="170" fg:w="1"/><text x="13.8609%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.6109%" y="245" width="0.0801%" height="15" fill="rgb(229,127,21)" fg:x="170" fg:w="1"/><text x="13.8609%" y="255.50"></text></g><g><title>engine::session::Session::flush (63 samples, 5.04%)</title><rect x="8.8070%" y="677" width="5.0440%" height="15" fill="rgb(234,49,5)" fg:x="110" fg:w="63"/><text x="9.0570%" y="687.50">engine..</text></g><g><title>engine::session::Session::save_entity_changes (63 samples, 5.04%)</title><rect x="8.8070%" y="661" width="5.0440%" height="15" fill="rgb(248,12,16)" fg:x="110" fg:w="63"/><text x="9.0570%" y="671.50">engine..</text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="13.6910%" y="645" width="0.1601%" height="15" fill="rgb(208,220,31)" fg:x="171" fg:w="2"/><text x="13.9410%" y="655.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="13.6910%" y="629" width="0.1601%" height="15" fill="rgb(243,184,0)" fg:x="171" fg:w="2"/><text x="13.9410%" y="639.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="13.6910%" y="613" width="0.1601%" height="15" fill="rgb(217,38,21)" fg:x="171" fg:w="2"/><text x="13.9410%" y="623.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="13.7710%" y="597" width="0.0801%" height="15" fill="rgb(239,120,45)" fg:x="172" fg:w="1"/><text x="14.0210%" y="607.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="13.7710%" y="581" width="0.0801%" height="15" fill="rgb(235,33,2)" fg:x="172" fg:w="1"/><text x="14.0210%" y="591.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="13.7710%" y="565" width="0.0801%" height="15" fill="rgb(249,161,5)" fg:x="172" fg:w="1"/><text x="14.0210%" y="575.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="13.7710%" y="549" width="0.0801%" height="15" fill="rgb(250,165,48)" fg:x="172" fg:w="1"/><text x="14.0210%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="13.7710%" y="533" width="0.0801%" height="15" fill="rgb(221,23,45)" fg:x="172" fg:w="1"/><text x="14.0210%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="13.8511%" y="677" width="0.0801%" height="15" fill="rgb(217,108,46)" fg:x="173" fg:w="1"/><text x="14.1011%" y="687.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="13.8511%" y="661" width="0.0801%" height="15" fill="rgb(254,26,35)" fg:x="173" fg:w="1"/><text x="14.1011%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="13.9311%" y="661" width="0.0801%" height="15" fill="rgb(218,223,28)" fg:x="174" fg:w="1"/><text x="14.1811%" y="671.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="13.9311%" y="645" width="0.0801%" height="15" fill="rgb(242,27,47)" fg:x="174" fg:w="1"/><text x="14.1811%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::set_name (2 samples, 0.16%)</title><rect x="13.9311%" y="677" width="0.1601%" height="15" fill="rgb(218,39,35)" fg:x="174" fg:w="2"/><text x="14.1811%" y="687.50"></text></g><g><title>kernel::model::Props::set_property (1 samples, 0.08%)</title><rect x="14.0112%" y="661" width="0.0801%" height="15" fill="rgb(232,127,16)" fg:x="175" fg:w="1"/><text x="14.2612%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0112%" y="645" width="0.0801%" height="15" fill="rgb(231,219,51)" fg:x="175" fg:w="1"/><text x="14.2612%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.0112%" y="629" width="0.0801%" height="15" fill="rgb(217,220,46)" fg:x="175" fg:w="1"/><text x="14.2612%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="14.0112%" y="613" width="0.0801%" height="15" fill="rgb(230,75,1)" fg:x="175" fg:w="1"/><text x="14.2612%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0913%" y="629" width="0.0801%" height="15" fill="rgb(218,2,8)" fg:x="176" fg:w="1"/><text x="14.3413%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="14.0913%" y="645" width="0.1601%" height="15" fill="rgb(206,111,30)" fg:x="176" fg:w="2"/><text x="14.3413%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="14.1713%" y="629" width="0.0801%" height="15" fill="rgb(209,135,6)" fg:x="177" fg:w="1"/><text x="14.4213%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="14.2514%" y="565" width="0.2402%" height="15" fill="rgb(205,169,10)" fg:x="178" fg:w="3"/><text x="14.5014%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="14.2514%" y="629" width="0.3203%" height="15" fill="rgb(212,204,38)" fg:x="178" fg:w="4"/><text x="14.5014%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.2514%" y="613" width="0.3203%" height="15" fill="rgb(205,199,14)" fg:x="178" fg:w="4"/><text x="14.5014%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="14.2514%" y="597" width="0.3203%" height="15" fill="rgb(212,4,6)" fg:x="178" fg:w="4"/><text x="14.5014%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="14.2514%" y="581" width="0.3203%" height="15" fill="rgb(250,15,10)" fg:x="178" fg:w="4"/><text x="14.5014%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.4916%" y="565" width="0.0801%" height="15" fill="rgb(212,49,51)" fg:x="181" fg:w="1"/><text x="14.7416%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="14.0913%" y="661" width="0.5604%" height="15" fill="rgb(235,21,9)" fg:x="176" fg:w="7"/><text x="14.3413%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="14.2514%" y="645" width="0.4003%" height="15" fill="rgb(251,31,32)" fg:x="178" fg:w="5"/><text x="14.5014%" y="655.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="14.5717%" y="629" width="0.0801%" height="15" fill="rgb(246,23,9)" fg:x="182" fg:w="1"/><text x="14.8217%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="14.5717%" y="613" width="0.0801%" height="15" fill="rgb(225,216,14)" fg:x="182" fg:w="1"/><text x="14.8217%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="14.6517%" y="645" width="0.0801%" height="15" fill="rgb(215,200,26)" fg:x="183" fg:w="1"/><text x="14.9017%" y="655.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="14.6517%" y="629" width="0.0801%" height="15" fill="rgb(237,130,47)" fg:x="183" fg:w="1"/><text x="14.9017%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="14.6517%" y="613" width="0.0801%" height="15" fill="rgb(247,74,14)" fg:x="183" fg:w="1"/><text x="14.9017%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.7318%" y="645" width="0.0801%" height="15" fill="rgb(254,97,46)" fg:x="184" fg:w="1"/><text x="14.9818%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7318%" y="629" width="0.0801%" height="15" fill="rgb(234,191,1)" fg:x="184" fg:w="1"/><text x="14.9818%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7318%" y="613" width="0.0801%" height="15" fill="rgb(215,165,14)" fg:x="184" fg:w="1"/><text x="14.9818%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.7318%" y="597" width="0.0801%" height="15" fill="rgb(230,182,6)" fg:x="184" fg:w="1"/><text x="14.9818%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.7318%" y="581" width="0.0801%" height="15" fill="rgb(210,127,39)" fg:x="184" fg:w="1"/><text x="14.9818%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.7318%" y="565" width="0.0801%" height="15" fill="rgb(223,212,51)" fg:x="184" fg:w="1"/><text x="14.9818%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.7318%" y="549" width="0.0801%" height="15" fill="rgb(226,176,43)" fg:x="184" fg:w="1"/><text x="14.9818%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7318%" y="533" width="0.0801%" height="15" fill="rgb(222,155,4)" fg:x="184" fg:w="1"/><text x="14.9818%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7318%" y="517" width="0.0801%" height="15" fill="rgb(215,149,7)" fg:x="184" fg:w="1"/><text x="14.9818%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.7318%" y="501" width="0.0801%" height="15" fill="rgb(252,199,23)" fg:x="184" fg:w="1"/><text x="14.9818%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.7318%" y="485" width="0.0801%" height="15" fill="rgb(245,52,29)" fg:x="184" fg:w="1"/><text x="14.9818%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.7318%" y="469" width="0.0801%" height="15" fill="rgb(221,228,19)" fg:x="184" fg:w="1"/><text x="14.9818%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.7318%" y="453" width="0.0801%" height="15" fill="rgb(253,101,6)" fg:x="184" fg:w="1"/><text x="14.9818%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7318%" y="437" width="0.0801%" height="15" fill="rgb(211,130,8)" fg:x="184" fg:w="1"/><text x="14.9818%" y="447.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8118%" y="613" width="0.0801%" height="15" fill="rgb(238,37,53)" fg:x="185" fg:w="1"/><text x="15.0618%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.8118%" y="597" width="0.0801%" height="15" fill="rgb(235,145,5)" fg:x="185" fg:w="1"/><text x="15.0618%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.8118%" y="581" width="0.0801%" height="15" fill="rgb(244,12,43)" fg:x="185" fg:w="1"/><text x="15.0618%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8118%" y="565" width="0.0801%" height="15" fill="rgb(246,195,24)" fg:x="185" fg:w="1"/><text x="15.0618%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="14.8919%" y="565" width="0.0801%" height="15" fill="rgb(235,163,6)" fg:x="186" fg:w="1"/><text x="15.1419%" y="575.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="14.8118%" y="645" width="0.3203%" height="15" fill="rgb(236,218,17)" fg:x="185" fg:w="4"/><text x="15.0618%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (4 samples, 0.32%)</title><rect x="14.8118%" y="629" width="0.3203%" height="15" fill="rgb(235,12,38)" fg:x="185" fg:w="4"/><text x="15.0618%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="14.8919%" y="613" width="0.2402%" height="15" fill="rgb(225,195,33)" fg:x="186" fg:w="3"/><text x="15.1419%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.8919%" y="597" width="0.2402%" height="15" fill="rgb(238,54,35)" fg:x="186" fg:w="3"/><text x="15.1419%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="14.8919%" y="581" width="0.2402%" height="15" fill="rgb(238,33,7)" fg:x="186" fg:w="3"/><text x="15.1419%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="14.9720%" y="565" width="0.1601%" height="15" fill="rgb(245,5,14)" fg:x="187" fg:w="2"/><text x="15.2220%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0520%" y="549" width="0.0801%" height="15" fill="rgb(251,95,31)" fg:x="188" fg:w="1"/><text x="15.3020%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1321%" y="629" width="0.0801%" height="15" fill="rgb(222,15,46)" fg:x="189" fg:w="1"/><text x="15.3821%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.2122%" y="629" width="0.0801%" height="15" fill="rgb(226,182,24)" fg:x="190" fg:w="1"/><text x="15.4622%" y="639.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.2122%" y="613" width="0.0801%" height="15" fill="rgb(229,105,41)" fg:x="190" fg:w="1"/><text x="15.4622%" y="623.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.2122%" y="597" width="0.0801%" height="15" fill="rgb(216,99,53)" fg:x="190" fg:w="1"/><text x="15.4622%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.2122%" y="581" width="0.0801%" height="15" fill="rgb(253,26,20)" fg:x="190" fg:w="1"/><text x="15.4622%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.2122%" y="565" width="0.0801%" height="15" fill="rgb(249,155,28)" fg:x="190" fg:w="1"/><text x="15.4622%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.28%)</title><rect x="14.0913%" y="677" width="1.2810%" height="15" fill="rgb(241,221,2)" fg:x="176" fg:w="16"/><text x="14.3413%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (9 samples, 0.72%)</title><rect x="14.6517%" y="661" width="0.7206%" height="15" fill="rgb(219,124,6)" fg:x="183" fg:w="9"/><text x="14.9017%" y="671.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="15.1321%" y="645" width="0.2402%" height="15" fill="rgb(233,37,6)" fg:x="189" fg:w="3"/><text x="15.3821%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="15.2922%" y="629" width="0.0801%" height="15" fill="rgb(238,20,14)" fg:x="191" fg:w="1"/><text x="15.5422%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.2922%" y="613" width="0.0801%" height="15" fill="rgb(232,106,27)" fg:x="191" fg:w="1"/><text x="15.5422%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="15.2922%" y="597" width="0.0801%" height="15" fill="rgb(246,157,24)" fg:x="191" fg:w="1"/><text x="15.5422%" y="607.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="15.3723%" y="677" width="0.0801%" height="15" fill="rgb(214,153,10)" fg:x="192" fg:w="1"/><text x="15.6223%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.3723%" y="661" width="0.0801%" height="15" fill="rgb(212,94,6)" fg:x="192" fg:w="1"/><text x="15.6223%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="15.5324%" y="645" width="0.0801%" height="15" fill="rgb(254,25,27)" fg:x="194" fg:w="1"/><text x="15.7824%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="15.5324%" y="629" width="0.0801%" height="15" fill="rgb(250,43,52)" fg:x="194" fg:w="1"/><text x="15.7824%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.5324%" y="613" width="0.0801%" height="15" fill="rgb(221,226,40)" fg:x="194" fg:w="1"/><text x="15.7824%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="15.6125%" y="645" width="0.0801%" height="15" fill="rgb(235,162,34)" fg:x="195" fg:w="1"/><text x="15.8625%" y="655.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.6125%" y="629" width="0.0801%" height="15" fill="rgb(239,24,26)" fg:x="195" fg:w="1"/><text x="15.8625%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.6125%" y="613" width="0.0801%" height="15" fill="rgb(244,226,11)" fg:x="195" fg:w="1"/><text x="15.8625%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.6125%" y="597" width="0.0801%" height="15" fill="rgb(225,23,10)" fg:x="195" fg:w="1"/><text x="15.8625%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.6926%" y="645" width="0.0801%" height="15" fill="rgb(249,125,6)" fg:x="196" fg:w="1"/><text x="15.9426%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6926%" y="629" width="0.0801%" height="15" fill="rgb(246,212,12)" fg:x="196" fg:w="1"/><text x="15.9426%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6926%" y="613" width="0.0801%" height="15" fill="rgb(230,43,32)" fg:x="196" fg:w="1"/><text x="15.9426%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6926%" y="597" width="0.0801%" height="15" fill="rgb(210,95,23)" fg:x="196" fg:w="1"/><text x="15.9426%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.6926%" y="581" width="0.0801%" height="15" fill="rgb(229,103,33)" fg:x="196" fg:w="1"/><text x="15.9426%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.6926%" y="565" width="0.0801%" height="15" fill="rgb(222,104,27)" fg:x="196" fg:w="1"/><text x="15.9426%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.6926%" y="549" width="0.0801%" height="15" fill="rgb(239,221,23)" fg:x="196" fg:w="1"/><text x="15.9426%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6926%" y="533" width="0.0801%" height="15" fill="rgb(222,98,21)" fg:x="196" fg:w="1"/><text x="15.9426%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.6926%" y="517" width="0.0801%" height="15" fill="rgb(231,101,20)" fg:x="196" fg:w="1"/><text x="15.9426%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.6926%" y="501" width="0.0801%" height="15" fill="rgb(215,150,22)" fg:x="196" fg:w="1"/><text x="15.9426%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.6926%" y="485" width="0.0801%" height="15" fill="rgb(248,3,34)" fg:x="196" fg:w="1"/><text x="15.9426%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.6926%" y="469" width="0.0801%" height="15" fill="rgb(220,141,21)" fg:x="196" fg:w="1"/><text x="15.9426%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.6926%" y="453" width="0.0801%" height="15" fill="rgb(223,41,48)" fg:x="196" fg:w="1"/><text x="15.9426%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6926%" y="437" width="0.0801%" height="15" fill="rgb(247,12,5)" fg:x="196" fg:w="1"/><text x="15.9426%" y="447.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.40%)</title><rect x="15.4524%" y="677" width="0.4003%" height="15" fill="rgb(206,173,10)" fg:x="193" fg:w="5"/><text x="15.7024%" y="687.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="15.4524%" y="661" width="0.4003%" height="15" fill="rgb(233,214,37)" fg:x="193" fg:w="5"/><text x="15.7024%" y="671.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="15.7726%" y="645" width="0.0801%" height="15" fill="rgb(238,86,43)" fg:x="197" fg:w="1"/><text x="16.0226%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="15.7726%" y="629" width="0.0801%" height="15" fill="rgb(212,182,8)" fg:x="197" fg:w="1"/><text x="16.0226%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7726%" y="613" width="0.0801%" height="15" fill="rgb(240,91,47)" fg:x="197" fg:w="1"/><text x="16.0226%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7726%" y="597" width="0.0801%" height="15" fill="rgb(209,138,26)" fg:x="197" fg:w="1"/><text x="16.0226%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7726%" y="581" width="0.0801%" height="15" fill="rgb(231,163,20)" fg:x="197" fg:w="1"/><text x="16.0226%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7726%" y="565" width="0.0801%" height="15" fill="rgb(214,91,54)" fg:x="197" fg:w="1"/><text x="16.0226%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7726%" y="549" width="0.0801%" height="15" fill="rgb(230,32,17)" fg:x="197" fg:w="1"/><text x="16.0226%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="15.8527%" y="661" width="0.0801%" height="15" fill="rgb(231,34,34)" fg:x="198" fg:w="1"/><text x="16.1027%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.9327%" y="645" width="0.0801%" height="15" fill="rgb(224,228,27)" fg:x="199" fg:w="1"/><text x="16.1827%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.0128%" y="645" width="0.0801%" height="15" fill="rgb(219,35,40)" fg:x="200" fg:w="1"/><text x="16.2628%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="16.0128%" y="629" width="0.0801%" height="15" fill="rgb(234,42,8)" fg:x="200" fg:w="1"/><text x="16.2628%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0128%" y="613" width="0.0801%" height="15" fill="rgb(226,75,22)" fg:x="200" fg:w="1"/><text x="16.2628%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (101 samples, 8.09%)</title><rect x="8.0865%" y="693" width="8.0865%" height="15" fill="rgb(242,203,28)" fg:x="101" fg:w="101"/><text x="8.3365%" y="703.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (4 samples, 0.32%)</title><rect x="15.8527%" y="677" width="0.3203%" height="15" fill="rgb(221,3,9)" fg:x="198" fg:w="4"/><text x="16.1027%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="15.9327%" y="661" width="0.2402%" height="15" fill="rgb(214,34,31)" fg:x="199" fg:w="3"/><text x="16.1827%" y="671.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="16.0929%" y="645" width="0.0801%" height="15" fill="rgb(252,119,15)" fg:x="201" fg:w="1"/><text x="16.3429%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="16.0929%" y="629" width="0.0801%" height="15" fill="rgb(244,224,31)" fg:x="201" fg:w="1"/><text x="16.3429%" y="639.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="16.0929%" y="613" width="0.0801%" height="15" fill="rgb(215,8,51)" fg:x="201" fg:w="1"/><text x="16.3429%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.0929%" y="597" width="0.0801%" height="15" fill="rgb(207,24,1)" fg:x="201" fg:w="1"/><text x="16.3429%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="16.0929%" y="581" width="0.0801%" height="15" fill="rgb(245,90,0)" fg:x="201" fg:w="1"/><text x="16.3429%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0929%" y="565" width="0.0801%" height="15" fill="rgb(246,43,48)" fg:x="201" fg:w="1"/><text x="16.3429%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="16.1729%" y="693" width="0.0801%" height="15" fill="rgb(252,218,10)" fg:x="202" fg:w="1"/><text x="16.4229%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="16.1729%" y="677" width="0.0801%" height="15" fill="rgb(231,24,35)" fg:x="202" fg:w="1"/><text x="16.4229%" y="687.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="16.1729%" y="661" width="0.0801%" height="15" fill="rgb(225,66,19)" fg:x="202" fg:w="1"/><text x="16.4229%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="16.1729%" y="645" width="0.0801%" height="15" fill="rgb(214,96,51)" fg:x="202" fg:w="1"/><text x="16.4229%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.1729%" y="629" width="0.0801%" height="15" fill="rgb(251,151,47)" fg:x="202" fg:w="1"/><text x="16.4229%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="16.2530%" y="661" width="0.0801%" height="15" fill="rgb(236,79,14)" fg:x="203" fg:w="1"/><text x="16.5030%" y="671.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="16.2530%" y="645" width="0.0801%" height="15" fill="rgb(210,205,11)" fg:x="203" fg:w="1"/><text x="16.5030%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="16.2530%" y="629" width="0.0801%" height="15" fill="rgb(233,142,53)" fg:x="203" fg:w="1"/><text x="16.5030%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="16.2530%" y="613" width="0.0801%" height="15" fill="rgb(212,116,48)" fg:x="203" fg:w="1"/><text x="16.5030%" y="623.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="16.2530%" y="597" width="0.0801%" height="15" fill="rgb(234,55,33)" fg:x="203" fg:w="1"/><text x="16.5030%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="16.2530%" y="693" width="0.1601%" height="15" fill="rgb(253,92,27)" fg:x="203" fg:w="2"/><text x="16.5030%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="16.2530%" y="677" width="0.1601%" height="15" fill="rgb(220,7,35)" fg:x="203" fg:w="2"/><text x="16.5030%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="16.3331%" y="661" width="0.0801%" height="15" fill="rgb(246,124,6)" fg:x="204" fg:w="1"/><text x="16.5831%" y="671.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="16.3331%" y="645" width="0.0801%" height="15" fill="rgb(212,111,51)" fg:x="204" fg:w="1"/><text x="16.5831%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.3331%" y="629" width="0.0801%" height="15" fill="rgb(253,116,7)" fg:x="204" fg:w="1"/><text x="16.5831%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (169 samples, 13.53%)</title><rect x="2.9624%" y="709" width="13.5308%" height="15" fill="rgb(213,145,18)" fg:x="37" fg:w="169"/><text x="3.2124%" y="719.50">&lt;tests::HoldingKeyIn..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="16.4131%" y="693" width="0.0801%" height="15" fill="rgb(219,149,7)" fg:x="205" fg:w="1"/><text x="16.6631%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.4131%" y="677" width="0.0801%" height="15" fill="rgb(225,156,20)" fg:x="205" fg:w="1"/><text x="16.6631%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="16.4932%" y="709" width="0.0801%" height="15" fill="rgb(211,98,19)" fg:x="206" fg:w="1"/><text x="16.7432%" y="719.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="16.4932%" y="693" width="0.0801%" height="15" fill="rgb(231,192,31)" fg:x="206" fg:w="1"/><text x="16.7432%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="16.4932%" y="677" width="0.0801%" height="15" fill="rgb(249,95,19)" fg:x="206" fg:w="1"/><text x="16.7432%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="16.4932%" y="661" width="0.0801%" height="15" fill="rgb(247,101,36)" fg:x="206" fg:w="1"/><text x="16.7432%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4932%" y="645" width="0.0801%" height="15" fill="rgb(221,45,43)" fg:x="206" fg:w="1"/><text x="16.7432%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="16.7334%" y="661" width="0.0801%" height="15" fill="rgb(220,42,1)" fg:x="209" fg:w="1"/><text x="16.9834%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="16.7334%" y="645" width="0.0801%" height="15" fill="rgb(236,19,24)" fg:x="209" fg:w="1"/><text x="16.9834%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="16.7334%" y="677" width="0.2402%" height="15" fill="rgb(225,192,6)" fg:x="209" fg:w="3"/><text x="16.9834%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="16.8135%" y="661" width="0.1601%" height="15" fill="rgb(242,30,19)" fg:x="210" fg:w="2"/><text x="17.0635%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="16.8135%" y="645" width="0.1601%" height="15" fill="rgb(240,36,6)" fg:x="210" fg:w="2"/><text x="17.0635%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="629" width="0.1601%" height="15" fill="rgb(246,40,28)" fg:x="210" fg:w="2"/><text x="17.0635%" y="639.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.8135%" y="613" width="0.1601%" height="15" fill="rgb(225,155,33)" fg:x="210" fg:w="2"/><text x="17.0635%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="597" width="0.1601%" height="15" fill="rgb(240,65,18)" fg:x="210" fg:w="2"/><text x="17.0635%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="581" width="0.1601%" height="15" fill="rgb(217,0,48)" fg:x="210" fg:w="2"/><text x="17.0635%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="565" width="0.1601%" height="15" fill="rgb(217,80,15)" fg:x="210" fg:w="2"/><text x="17.0635%" y="575.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.8135%" y="549" width="0.1601%" height="15" fill="rgb(253,43,51)" fg:x="210" fg:w="2"/><text x="17.0635%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="533" width="0.1601%" height="15" fill="rgb(246,60,4)" fg:x="210" fg:w="2"/><text x="17.0635%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="517" width="0.1601%" height="15" fill="rgb(230,40,54)" fg:x="210" fg:w="2"/><text x="17.0635%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="16.8135%" y="501" width="0.1601%" height="15" fill="rgb(208,20,44)" fg:x="210" fg:w="2"/><text x="17.0635%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.8135%" y="485" width="0.1601%" height="15" fill="rgb(230,22,22)" fg:x="210" fg:w="2"/><text x="17.0635%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.8935%" y="469" width="0.0801%" height="15" fill="rgb(207,57,4)" fg:x="211" fg:w="1"/><text x="17.1435%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="16.8935%" y="453" width="0.0801%" height="15" fill="rgb(242,130,33)" fg:x="211" fg:w="1"/><text x="17.1435%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="16.8935%" y="437" width="0.0801%" height="15" fill="rgb(218,66,43)" fg:x="211" fg:w="1"/><text x="17.1435%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8935%" y="421" width="0.0801%" height="15" fill="rgb(236,105,16)" fg:x="211" fg:w="1"/><text x="17.1435%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8935%" y="405" width="0.0801%" height="15" fill="rgb(230,46,15)" fg:x="211" fg:w="1"/><text x="17.1435%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="16.8935%" y="389" width="0.0801%" height="15" fill="rgb(251,172,40)" fg:x="211" fg:w="1"/><text x="17.1435%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="16.8935%" y="373" width="0.0801%" height="15" fill="rgb(225,217,32)" fg:x="211" fg:w="1"/><text x="17.1435%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="16.8935%" y="357" width="0.0801%" height="15" fill="rgb(243,10,29)" fg:x="211" fg:w="1"/><text x="17.1435%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="16.8935%" y="341" width="0.0801%" height="15" fill="rgb(207,102,10)" fg:x="211" fg:w="1"/><text x="17.1435%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.8935%" y="325" width="0.0801%" height="15" fill="rgb(241,125,5)" fg:x="211" fg:w="1"/><text x="17.1435%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="16.8935%" y="309" width="0.0801%" height="15" fill="rgb(230,125,29)" fg:x="211" fg:w="1"/><text x="17.1435%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.8935%" y="293" width="0.0801%" height="15" fill="rgb(223,65,44)" fg:x="211" fg:w="1"/><text x="17.1435%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="16.8935%" y="277" width="0.0801%" height="15" fill="rgb(224,188,28)" fg:x="211" fg:w="1"/><text x="17.1435%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.8935%" y="261" width="0.0801%" height="15" fill="rgb(254,197,27)" fg:x="211" fg:w="1"/><text x="17.1435%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="16.8935%" y="245" width="0.0801%" height="15" fill="rgb(220,200,25)" fg:x="211" fg:w="1"/><text x="17.1435%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="16.8935%" y="229" width="0.0801%" height="15" fill="rgb(239,225,54)" fg:x="211" fg:w="1"/><text x="17.1435%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="16.8935%" y="213" width="0.0801%" height="15" fill="rgb(211,59,40)" fg:x="211" fg:w="1"/><text x="17.1435%" y="223.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="16.8935%" y="197" width="0.0801%" height="15" fill="rgb(213,176,46)" fg:x="211" fg:w="1"/><text x="17.1435%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="16.8935%" y="181" width="0.0801%" height="15" fill="rgb(226,99,4)" fg:x="211" fg:w="1"/><text x="17.1435%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="16.9736%" y="677" width="0.0801%" height="15" fill="rgb(239,203,43)" fg:x="212" fg:w="1"/><text x="17.2236%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.9736%" y="661" width="0.0801%" height="15" fill="rgb(246,1,45)" fg:x="212" fg:w="1"/><text x="17.2236%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2138%" y="613" width="0.0801%" height="15" fill="rgb(231,42,52)" fg:x="215" fg:w="1"/><text x="17.4638%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.2138%" y="597" width="0.0801%" height="15" fill="rgb(240,13,50)" fg:x="215" fg:w="1"/><text x="17.4638%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2138%" y="581" width="0.0801%" height="15" fill="rgb(225,81,14)" fg:x="215" fg:w="1"/><text x="17.4638%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.2138%" y="565" width="0.0801%" height="15" fill="rgb(216,182,23)" fg:x="215" fg:w="1"/><text x="17.4638%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.2138%" y="549" width="0.0801%" height="15" fill="rgb(233,137,19)" fg:x="215" fg:w="1"/><text x="17.4638%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.2138%" y="533" width="0.0801%" height="15" fill="rgb(242,61,46)" fg:x="215" fg:w="1"/><text x="17.4638%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.2138%" y="517" width="0.0801%" height="15" fill="rgb(221,168,51)" fg:x="215" fg:w="1"/><text x="17.4638%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2138%" y="501" width="0.0801%" height="15" fill="rgb(238,48,15)" fg:x="215" fg:w="1"/><text x="17.4638%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.2138%" y="485" width="0.0801%" height="15" fill="rgb(216,13,16)" fg:x="215" fg:w="1"/><text x="17.4638%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.2138%" y="469" width="0.0801%" height="15" fill="rgb(223,185,34)" fg:x="215" fg:w="1"/><text x="17.4638%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.2138%" y="453" width="0.0801%" height="15" fill="rgb(228,94,42)" fg:x="215" fg:w="1"/><text x="17.4638%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.2138%" y="437" width="0.0801%" height="15" fill="rgb(218,166,43)" fg:x="215" fg:w="1"/><text x="17.4638%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.2138%" y="421" width="0.0801%" height="15" fill="rgb(232,30,50)" fg:x="215" fg:w="1"/><text x="17.4638%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2138%" y="405" width="0.0801%" height="15" fill="rgb(245,206,45)" fg:x="215" fg:w="1"/><text x="17.4638%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.2138%" y="629" width="0.1601%" height="15" fill="rgb(220,56,22)" fg:x="215" fg:w="2"/><text x="17.4638%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2938%" y="613" width="0.0801%" height="15" fill="rgb(239,129,38)" fg:x="216" fg:w="1"/><text x="17.5438%" y="623.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="17.3739%" y="629" width="0.0801%" height="15" fill="rgb(207,68,41)" fg:x="217" fg:w="1"/><text x="17.6239%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (14 samples, 1.12%)</title><rect x="16.6533%" y="693" width="1.1209%" height="15" fill="rgb(221,21,7)" fg:x="208" fg:w="14"/><text x="16.9033%" y="703.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (9 samples, 0.72%)</title><rect x="17.0536%" y="677" width="0.7206%" height="15" fill="rgb(240,33,25)" fg:x="213" fg:w="9"/><text x="17.3036%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="17.0536%" y="661" width="0.7206%" height="15" fill="rgb(242,119,10)" fg:x="213" fg:w="9"/><text x="17.3036%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.72%)</title><rect x="17.0536%" y="645" width="0.7206%" height="15" fill="rgb(214,149,40)" fg:x="213" fg:w="9"/><text x="17.3036%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.4540%" y="629" width="0.3203%" height="15" fill="rgb(228,25,36)" fg:x="218" fg:w="4"/><text x="17.7040%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.4540%" y="613" width="0.3203%" height="15" fill="rgb(222,59,15)" fg:x="218" fg:w="4"/><text x="17.7040%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="17.5340%" y="597" width="0.2402%" height="15" fill="rgb(218,170,0)" fg:x="219" fg:w="3"/><text x="17.7840%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="17.5340%" y="581" width="0.2402%" height="15" fill="rgb(232,173,23)" fg:x="219" fg:w="3"/><text x="17.7840%" y="591.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="17.6141%" y="565" width="0.1601%" height="15" fill="rgb(218,116,1)" fg:x="220" fg:w="2"/><text x="17.8641%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="17.6141%" y="549" width="0.1601%" height="15" fill="rgb(207,34,4)" fg:x="220" fg:w="2"/><text x="17.8641%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.6141%" y="533" width="0.1601%" height="15" fill="rgb(229,54,52)" fg:x="220" fg:w="2"/><text x="17.8641%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="17.7742%" y="693" width="0.0801%" height="15" fill="rgb(211,86,23)" fg:x="222" fg:w="1"/><text x="18.0242%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="17.8543%" y="677" width="0.1601%" height="15" fill="rgb(254,153,34)" fg:x="223" fg:w="2"/><text x="18.1043%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.8543%" y="661" width="0.1601%" height="15" fill="rgb(219,220,14)" fg:x="223" fg:w="2"/><text x="18.1043%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9343%" y="645" width="0.0801%" height="15" fill="rgb(247,8,26)" fg:x="224" fg:w="1"/><text x="18.1843%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.0144%" y="677" width="0.0801%" height="15" fill="rgb(213,129,42)" fg:x="225" fg:w="1"/><text x="18.2644%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="18.0144%" y="661" width="0.0801%" height="15" fill="rgb(225,95,41)" fg:x="225" fg:w="1"/><text x="18.2644%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="18.0144%" y="645" width="0.0801%" height="15" fill="rgb(215,134,24)" fg:x="225" fg:w="1"/><text x="18.2644%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.0144%" y="629" width="0.0801%" height="15" fill="rgb(235,23,54)" fg:x="225" fg:w="1"/><text x="18.2644%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="18.0945%" y="677" width="0.1601%" height="15" fill="rgb(229,96,31)" fg:x="226" fg:w="2"/><text x="18.3445%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="18.0945%" y="661" width="0.1601%" height="15" fill="rgb(206,111,12)" fg:x="226" fg:w="2"/><text x="18.3445%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="18.0945%" y="645" width="0.1601%" height="15" fill="rgb(222,177,8)" fg:x="226" fg:w="2"/><text x="18.3445%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.1745%" y="629" width="0.0801%" height="15" fill="rgb(251,36,52)" fg:x="227" fg:w="1"/><text x="18.4245%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="18.1745%" y="613" width="0.0801%" height="15" fill="rgb(216,182,29)" fg:x="227" fg:w="1"/><text x="18.4245%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.3347%" y="645" width="0.0801%" height="15" fill="rgb(241,145,50)" fg:x="229" fg:w="1"/><text x="18.5847%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.3347%" y="629" width="0.0801%" height="15" fill="rgb(231,71,35)" fg:x="229" fg:w="1"/><text x="18.5847%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.3347%" y="613" width="0.0801%" height="15" fill="rgb(218,22,17)" fg:x="229" fg:w="1"/><text x="18.5847%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.3347%" y="597" width="0.0801%" height="15" fill="rgb(225,227,6)" fg:x="229" fg:w="1"/><text x="18.5847%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.3347%" y="581" width="0.0801%" height="15" fill="rgb(224,204,17)" fg:x="229" fg:w="1"/><text x="18.5847%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.3347%" y="565" width="0.0801%" height="15" fill="rgb(227,61,28)" fg:x="229" fg:w="1"/><text x="18.5847%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.3347%" y="549" width="0.0801%" height="15" fill="rgb(242,148,23)" fg:x="229" fg:w="1"/><text x="18.5847%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.4147%" y="629" width="0.0801%" height="15" fill="rgb(237,105,33)" fg:x="230" fg:w="1"/><text x="18.6647%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="18.5749%" y="613" width="0.3203%" height="15" fill="rgb(238,218,40)" fg:x="232" fg:w="4"/><text x="18.8249%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="18.6549%" y="597" width="0.2402%" height="15" fill="rgb(209,126,11)" fg:x="233" fg:w="3"/><text x="18.9049%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="18.7350%" y="581" width="0.1601%" height="15" fill="rgb(245,90,11)" fg:x="234" fg:w="2"/><text x="18.9850%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8151%" y="565" width="0.0801%" height="15" fill="rgb(211,195,10)" fg:x="235" fg:w="1"/><text x="19.0651%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.8151%" y="549" width="0.0801%" height="15" fill="rgb(231,45,45)" fg:x="235" fg:w="1"/><text x="19.0651%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.8151%" y="533" width="0.0801%" height="15" fill="rgb(246,100,43)" fg:x="235" fg:w="1"/><text x="19.0651%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.8151%" y="517" width="0.0801%" height="15" fill="rgb(241,193,8)" fg:x="235" fg:w="1"/><text x="19.0651%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="18.4948%" y="629" width="0.4804%" height="15" fill="rgb(208,76,19)" fg:x="231" fg:w="6"/><text x="18.7448%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.8951%" y="613" width="0.0801%" height="15" fill="rgb(223,69,40)" fg:x="236" fg:w="1"/><text x="19.1451%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.8951%" y="597" width="0.0801%" height="15" fill="rgb(207,120,39)" fg:x="236" fg:w="1"/><text x="19.1451%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.8951%" y="581" width="0.0801%" height="15" fill="rgb(212,209,28)" fg:x="236" fg:w="1"/><text x="19.1451%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.8951%" y="565" width="0.0801%" height="15" fill="rgb(246,82,29)" fg:x="236" fg:w="1"/><text x="19.1451%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.8951%" y="549" width="0.0801%" height="15" fill="rgb(239,6,40)" fg:x="236" fg:w="1"/><text x="19.1451%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.8951%" y="533" width="0.0801%" height="15" fill="rgb(228,181,35)" fg:x="236" fg:w="1"/><text x="19.1451%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="18.9752%" y="613" width="0.1601%" height="15" fill="rgb(238,151,2)" fg:x="237" fg:w="2"/><text x="19.2252%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.9752%" y="597" width="0.1601%" height="15" fill="rgb(236,94,18)" fg:x="237" fg:w="2"/><text x="19.2252%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.0552%" y="581" width="0.0801%" height="15" fill="rgb(208,38,14)" fg:x="238" fg:w="1"/><text x="19.3052%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.0552%" y="565" width="0.0801%" height="15" fill="rgb(234,215,27)" fg:x="238" fg:w="1"/><text x="19.3052%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="19.1353%" y="613" width="0.3203%" height="15" fill="rgb(254,211,53)" fg:x="239" fg:w="4"/><text x="19.3853%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.2154%" y="597" width="0.2402%" height="15" fill="rgb(216,175,11)" fg:x="240" fg:w="3"/><text x="19.4654%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3755%" y="581" width="0.0801%" height="15" fill="rgb(246,179,26)" fg:x="242" fg:w="1"/><text x="19.6255%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.3755%" y="565" width="0.0801%" height="15" fill="rgb(249,19,52)" fg:x="242" fg:w="1"/><text x="19.6255%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="19.5356%" y="597" width="0.1601%" height="15" fill="rgb(230,42,52)" fg:x="244" fg:w="2"/><text x="19.7856%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="19.6958%" y="597" width="0.0801%" height="15" fill="rgb(221,171,0)" fg:x="246" fg:w="1"/><text x="19.9458%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="19.7758%" y="597" width="0.1601%" height="15" fill="rgb(222,177,40)" fg:x="247" fg:w="2"/><text x="20.0258%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.7758%" y="581" width="0.1601%" height="15" fill="rgb(247,34,16)" fg:x="247" fg:w="2"/><text x="20.0258%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.7758%" y="565" width="0.1601%" height="15" fill="rgb(213,217,37)" fg:x="247" fg:w="2"/><text x="20.0258%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8559%" y="549" width="0.0801%" height="15" fill="rgb(231,189,24)" fg:x="248" fg:w="1"/><text x="20.1059%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.8559%" y="533" width="0.0801%" height="15" fill="rgb(214,22,9)" fg:x="248" fg:w="1"/><text x="20.1059%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.9359%" y="597" width="0.2402%" height="15" fill="rgb(212,70,22)" fg:x="249" fg:w="3"/><text x="20.1859%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.9359%" y="581" width="0.2402%" height="15" fill="rgb(249,64,51)" fg:x="249" fg:w="3"/><text x="20.1859%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.0160%" y="565" width="0.1601%" height="15" fill="rgb(249,148,20)" fg:x="250" fg:w="2"/><text x="20.2660%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0961%" y="549" width="0.0801%" height="15" fill="rgb(246,46,48)" fg:x="251" fg:w="1"/><text x="20.3461%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="20.3363%" y="581" width="0.3203%" height="15" fill="rgb(217,34,48)" fg:x="254" fg:w="4"/><text x="20.5863%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.5765%" y="565" width="0.0801%" height="15" fill="rgb(222,45,26)" fg:x="257" fg:w="1"/><text x="20.8265%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5765%" y="549" width="0.0801%" height="15" fill="rgb(230,201,36)" fg:x="257" fg:w="1"/><text x="20.8265%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.5765%" y="533" width="0.0801%" height="15" fill="rgb(217,30,43)" fg:x="257" fg:w="1"/><text x="20.8265%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.6565%" y="565" width="0.1601%" height="15" fill="rgb(230,197,40)" fg:x="258" fg:w="2"/><text x="20.9065%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.6565%" y="549" width="0.1601%" height="15" fill="rgb(239,181,18)" fg:x="258" fg:w="2"/><text x="20.9065%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.6565%" y="533" width="0.1601%" height="15" fill="rgb(222,60,39)" fg:x="258" fg:w="2"/><text x="20.9065%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.7366%" y="517" width="0.0801%" height="15" fill="rgb(210,60,22)" fg:x="259" fg:w="1"/><text x="20.9866%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.8167%" y="565" width="0.1601%" height="15" fill="rgb(239,213,48)" fg:x="260" fg:w="2"/><text x="21.0667%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="20.6565%" y="581" width="0.5604%" height="15" fill="rgb(253,214,23)" fg:x="258" fg:w="7"/><text x="20.9065%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.9768%" y="565" width="0.2402%" height="15" fill="rgb(211,98,45)" fg:x="262" fg:w="3"/><text x="21.2268%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.1369%" y="549" width="0.0801%" height="15" fill="rgb(239,130,44)" fg:x="264" fg:w="1"/><text x="21.3869%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.1369%" y="533" width="0.0801%" height="15" fill="rgb(222,181,35)" fg:x="264" fg:w="1"/><text x="21.3869%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.92%)</title><rect x="19.4556%" y="613" width="1.9215%" height="15" fill="rgb(219,219,49)" fg:x="243" fg:w="24"/><text x="19.7056%" y="623.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="20.1761%" y="597" width="1.2010%" height="15" fill="rgb(227,161,51)" fg:x="252" fg:w="15"/><text x="20.4261%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.2170%" y="581" width="0.1601%" height="15" fill="rgb(239,112,27)" fg:x="265" fg:w="2"/><text x="21.4670%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.2970%" y="565" width="0.0801%" height="15" fill="rgb(248,122,18)" fg:x="266" fg:w="1"/><text x="21.5470%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (39 samples, 3.12%)</title><rect x="18.4147%" y="645" width="3.1225%" height="15" fill="rgb(245,130,23)" fg:x="230" fg:w="39"/><text x="18.6647%" y="655.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (32 samples, 2.56%)</title><rect x="18.9752%" y="629" width="2.5620%" height="15" fill="rgb(211,225,28)" fg:x="237" fg:w="32"/><text x="19.2252%" y="639.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.3771%" y="613" width="0.1601%" height="15" fill="rgb(242,105,44)" fg:x="267" fg:w="2"/><text x="21.6271%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.3771%" y="597" width="0.1601%" height="15" fill="rgb(216,183,46)" fg:x="267" fg:w="2"/><text x="21.6271%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.3771%" y="581" width="0.1601%" height="15" fill="rgb(227,112,9)" fg:x="267" fg:w="2"/><text x="21.6271%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="21.3771%" y="565" width="0.1601%" height="15" fill="rgb(244,21,0)" fg:x="267" fg:w="2"/><text x="21.6271%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="21.3771%" y="549" width="0.1601%" height="15" fill="rgb(236,185,14)" fg:x="267" fg:w="2"/><text x="21.6271%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.5372%" y="613" width="0.0801%" height="15" fill="rgb(236,170,30)" fg:x="269" fg:w="1"/><text x="21.7872%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6974%" y="597" width="0.0801%" height="15" fill="rgb(209,198,51)" fg:x="271" fg:w="1"/><text x="21.9474%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="21.7774%" y="597" width="0.2402%" height="15" fill="rgb(205,171,26)" fg:x="272" fg:w="3"/><text x="22.0274%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9376%" y="581" width="0.0801%" height="15" fill="rgb(246,41,49)" fg:x="274" fg:w="1"/><text x="22.1876%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.1777%" y="581" width="0.1601%" height="15" fill="rgb(240,229,12)" fg:x="277" fg:w="2"/><text x="22.4277%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2578%" y="565" width="0.0801%" height="15" fill="rgb(212,8,54)" fg:x="278" fg:w="1"/><text x="22.5078%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.4179%" y="565" width="0.0801%" height="15" fill="rgb(230,114,13)" fg:x="280" fg:w="1"/><text x="22.6679%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.4179%" y="549" width="0.0801%" height="15" fill="rgb(229,130,28)" fg:x="280" fg:w="1"/><text x="22.6679%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4179%" y="533" width="0.0801%" height="15" fill="rgb(206,139,15)" fg:x="280" fg:w="1"/><text x="22.6679%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.04%)</title><rect x="21.5372%" y="645" width="1.0408%" height="15" fill="rgb(241,188,35)" fg:x="269" fg:w="13"/><text x="21.7872%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.04%)</title><rect x="21.5372%" y="629" width="1.0408%" height="15" fill="rgb(208,224,26)" fg:x="269" fg:w="13"/><text x="21.7872%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="21.6173%" y="613" width="0.9608%" height="15" fill="rgb(251,131,28)" fg:x="270" fg:w="12"/><text x="21.8673%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="22.0176%" y="597" width="0.5604%" height="15" fill="rgb(208,153,1)" fg:x="275" fg:w="7"/><text x="22.2676%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="22.3379%" y="581" width="0.2402%" height="15" fill="rgb(234,33,36)" fg:x="279" fg:w="3"/><text x="22.5879%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.4980%" y="565" width="0.0801%" height="15" fill="rgb(246,42,29)" fg:x="281" fg:w="1"/><text x="22.7480%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4980%" y="549" width="0.0801%" height="15" fill="rgb(251,114,16)" fg:x="281" fg:w="1"/><text x="22.7480%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6581%" y="629" width="0.0801%" height="15" fill="rgb(233,13,38)" fg:x="283" fg:w="1"/><text x="22.9081%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7382%" y="597" width="0.0801%" height="15" fill="rgb(247,120,19)" fg:x="284" fg:w="1"/><text x="22.9882%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="22.8183%" y="597" width="0.2402%" height="15" fill="rgb(205,11,16)" fg:x="285" fg:w="3"/><text x="23.0683%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9784%" y="581" width="0.0801%" height="15" fill="rgb(228,185,19)" fg:x="287" fg:w="1"/><text x="23.2284%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1385%" y="581" width="0.0801%" height="15" fill="rgb(239,88,52)" fg:x="289" fg:w="1"/><text x="23.3885%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="23.2186%" y="581" width="0.2402%" height="15" fill="rgb(219,23,1)" fg:x="290" fg:w="3"/><text x="23.4686%" y="591.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="23.2186%" y="565" width="0.2402%" height="15" fill="rgb(253,177,16)" fg:x="290" fg:w="3"/><text x="23.4686%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.6189%" y="565" width="0.1601%" height="15" fill="rgb(225,150,40)" fg:x="295" fg:w="2"/><text x="23.8689%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.6990%" y="549" width="0.0801%" height="15" fill="rgb(208,108,30)" fg:x="296" fg:w="1"/><text x="23.9490%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="23.7790%" y="549" width="0.3203%" height="15" fill="rgb(214,122,4)" fg:x="297" fg:w="4"/><text x="24.0290%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="23.9392%" y="533" width="0.1601%" height="15" fill="rgb(229,74,37)" fg:x="299" fg:w="2"/><text x="24.1892%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.0993%" y="533" width="0.0801%" height="15" fill="rgb(233,61,41)" fg:x="301" fg:w="1"/><text x="24.3493%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0993%" y="517" width="0.0801%" height="15" fill="rgb(238,191,5)" fg:x="301" fg:w="1"/><text x="24.3493%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (19 samples, 1.52%)</title><rect x="22.7382%" y="629" width="1.5212%" height="15" fill="rgb(233,78,24)" fg:x="284" fg:w="19"/><text x="22.9882%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (19 samples, 1.52%)</title><rect x="22.7382%" y="613" width="1.5212%" height="15" fill="rgb(211,142,8)" fg:x="284" fg:w="19"/><text x="22.9882%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.20%)</title><rect x="23.0584%" y="597" width="1.2010%" height="15" fill="rgb(253,38,53)" fg:x="288" fg:w="15"/><text x="23.3084%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="23.4588%" y="581" width="0.8006%" height="15" fill="rgb(234,63,51)" fg:x="293" fg:w="10"/><text x="23.7088%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="23.7790%" y="565" width="0.4804%" height="15" fill="rgb(205,23,31)" fg:x="297" fg:w="6"/><text x="24.0290%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.0993%" y="549" width="0.1601%" height="15" fill="rgb(210,184,50)" fg:x="301" fg:w="2"/><text x="24.3493%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.1793%" y="533" width="0.0801%" height="15" fill="rgb(222,112,26)" fg:x="302" fg:w="1"/><text x="24.4293%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.1793%" y="517" width="0.0801%" height="15" fill="rgb(250,98,18)" fg:x="302" fg:w="1"/><text x="24.4293%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.2594%" y="629" width="0.0801%" height="15" fill="rgb(250,34,12)" fg:x="303" fg:w="1"/><text x="24.5094%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.2594%" y="613" width="0.0801%" height="15" fill="rgb(236,141,30)" fg:x="303" fg:w="1"/><text x="24.5094%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.6597%" y="597" width="0.0801%" height="15" fill="rgb(246,134,38)" fg:x="308" fg:w="1"/><text x="24.9097%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="24.7398%" y="597" width="0.5604%" height="15" fill="rgb(240,114,4)" fg:x="309" fg:w="7"/><text x="24.9898%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="25.0600%" y="581" width="0.2402%" height="15" fill="rgb(243,113,39)" fg:x="313" fg:w="3"/><text x="25.3100%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="25.1401%" y="565" width="0.1601%" height="15" fill="rgb(239,215,4)" fg:x="314" fg:w="2"/><text x="25.3901%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="25.3002%" y="597" width="0.0801%" height="15" fill="rgb(236,229,45)" fg:x="316" fg:w="1"/><text x="25.5502%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="25.3803%" y="597" width="0.1601%" height="15" fill="rgb(242,2,6)" fg:x="317" fg:w="2"/><text x="25.6303%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.3803%" y="581" width="0.1601%" height="15" fill="rgb(239,108,21)" fg:x="317" fg:w="2"/><text x="25.6303%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.4604%" y="565" width="0.0801%" height="15" fill="rgb(215,168,34)" fg:x="318" fg:w="1"/><text x="25.7104%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.4604%" y="549" width="0.0801%" height="15" fill="rgb(238,31,17)" fg:x="318" fg:w="1"/><text x="25.7104%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="25.5404%" y="597" width="0.0801%" height="15" fill="rgb(220,133,11)" fg:x="319" fg:w="1"/><text x="25.7904%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="25.5404%" y="581" width="0.0801%" height="15" fill="rgb(212,158,23)" fg:x="319" fg:w="1"/><text x="25.7904%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="25.6205%" y="597" width="0.1601%" height="15" fill="rgb(223,172,7)" fg:x="320" fg:w="2"/><text x="25.8705%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.6205%" y="581" width="0.1601%" height="15" fill="rgb(244,3,52)" fg:x="320" fg:w="2"/><text x="25.8705%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.6205%" y="565" width="0.1601%" height="15" fill="rgb(207,69,27)" fg:x="320" fg:w="2"/><text x="25.8705%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7006%" y="549" width="0.0801%" height="15" fill="rgb(213,136,45)" fg:x="321" fg:w="1"/><text x="25.9506%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7806%" y="565" width="0.0801%" height="15" fill="rgb(218,79,17)" fg:x="322" fg:w="1"/><text x="26.0306%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.0208%" y="549" width="0.1601%" height="15" fill="rgb(216,106,36)" fg:x="325" fg:w="2"/><text x="26.2708%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.0208%" y="533" width="0.1601%" height="15" fill="rgb(251,27,45)" fg:x="325" fg:w="2"/><text x="26.2708%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1009%" y="517" width="0.0801%" height="15" fill="rgb(232,21,34)" fg:x="326" fg:w="1"/><text x="26.3509%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="26.1809%" y="533" width="0.3203%" height="15" fill="rgb(249,191,16)" fg:x="327" fg:w="4"/><text x="26.4309%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="26.3411%" y="517" width="0.1601%" height="15" fill="rgb(224,88,20)" fg:x="329" fg:w="2"/><text x="26.5911%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.4211%" y="501" width="0.0801%" height="15" fill="rgb(237,93,27)" fg:x="330" fg:w="1"/><text x="26.6711%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="26.4211%" y="485" width="0.0801%" height="15" fill="rgb(226,198,48)" fg:x="330" fg:w="1"/><text x="26.6711%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="26.4211%" y="469" width="0.0801%" height="15" fill="rgb(207,162,53)" fg:x="330" fg:w="1"/><text x="26.6711%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (11 samples, 0.88%)</title><rect x="25.7806%" y="597" width="0.8807%" height="15" fill="rgb(207,169,9)" fg:x="322" fg:w="11"/><text x="26.0306%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="25.7806%" y="581" width="0.8807%" height="15" fill="rgb(224,166,46)" fg:x="322" fg:w="11"/><text x="26.0306%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="25.8607%" y="565" width="0.8006%" height="15" fill="rgb(233,26,6)" fg:x="323" fg:w="10"/><text x="26.1107%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.48%)</title><rect x="26.1809%" y="549" width="0.4804%" height="15" fill="rgb(218,106,45)" fg:x="327" fg:w="6"/><text x="26.4309%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.5012%" y="533" width="0.1601%" height="15" fill="rgb(240,217,4)" fg:x="331" fg:w="2"/><text x="26.7512%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="26.9015%" y="565" width="0.1601%" height="15" fill="rgb(246,171,10)" fg:x="336" fg:w="2"/><text x="27.1515%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0616%" y="549" width="0.0801%" height="15" fill="rgb(223,197,30)" fg:x="338" fg:w="1"/><text x="27.3116%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.0616%" y="533" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="338" fg:w="1"/><text x="27.3116%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0616%" y="517" width="0.0801%" height="15" fill="rgb(211,6,44)" fg:x="338" fg:w="1"/><text x="27.3116%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="27.2218%" y="533" width="0.0801%" height="15" fill="rgb(219,139,2)" fg:x="340" fg:w="1"/><text x="27.4718%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.2218%" y="517" width="0.0801%" height="15" fill="rgb(224,103,21)" fg:x="340" fg:w="1"/><text x="27.4718%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="27.0616%" y="565" width="0.4804%" height="15" fill="rgb(254,110,48)" fg:x="338" fg:w="6"/><text x="27.3116%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="27.1417%" y="549" width="0.4003%" height="15" fill="rgb(212,88,19)" fg:x="339" fg:w="5"/><text x="27.3917%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="27.3018%" y="533" width="0.2402%" height="15" fill="rgb(248,103,6)" fg:x="341" fg:w="3"/><text x="27.5518%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (41 samples, 3.28%)</title><rect x="24.3395%" y="629" width="3.2826%" height="15" fill="rgb(214,53,46)" fg:x="304" fg:w="41"/><text x="24.5895%" y="639.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (41 samples, 3.28%)</title><rect x="24.3395%" y="613" width="3.2826%" height="15" fill="rgb(236,190,24)" fg:x="304" fg:w="41"/><text x="24.5895%" y="623.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="26.6613%" y="597" width="0.9608%" height="15" fill="rgb(254,58,28)" fg:x="333" fg:w="12"/><text x="26.9113%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 0.80%)</title><rect x="26.8215%" y="581" width="0.8006%" height="15" fill="rgb(243,63,27)" fg:x="335" fg:w="10"/><text x="27.0715%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="27.5420%" y="565" width="0.0801%" height="15" fill="rgb(206,81,20)" fg:x="344" fg:w="1"/><text x="27.7920%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="28.1825%" y="485" width="0.0801%" height="15" fill="rgb(252,69,51)" fg:x="352" fg:w="1"/><text x="28.4325%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="28.1825%" y="469" width="0.0801%" height="15" fill="rgb(222,213,4)" fg:x="352" fg:w="1"/><text x="28.4325%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.2626%" y="453" width="0.0801%" height="15" fill="rgb(226,198,12)" fg:x="353" fg:w="1"/><text x="28.5126%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="28.2626%" y="469" width="0.2402%" height="15" fill="rgb(248,115,11)" fg:x="353" fg:w="3"/><text x="28.5126%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="28.3427%" y="453" width="0.1601%" height="15" fill="rgb(221,148,54)" fg:x="354" fg:w="2"/><text x="28.5927%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="28.3427%" y="437" width="0.1601%" height="15" fill="rgb(214,209,51)" fg:x="354" fg:w="2"/><text x="28.5927%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.4227%" y="421" width="0.0801%" height="15" fill="rgb(249,116,53)" fg:x="355" fg:w="1"/><text x="28.6727%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.5028%" y="469" width="0.0801%" height="15" fill="rgb(248,170,1)" fg:x="356" fg:w="1"/><text x="28.7528%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.5028%" y="453" width="0.0801%" height="15" fill="rgb(244,105,10)" fg:x="356" fg:w="1"/><text x="28.7528%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="28.1025%" y="501" width="0.8006%" height="15" fill="rgb(229,100,5)" fg:x="351" fg:w="10"/><text x="28.3525%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="28.2626%" y="485" width="0.6405%" height="15" fill="rgb(233,221,39)" fg:x="353" fg:w="8"/><text x="28.5126%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="28.5829%" y="469" width="0.3203%" height="15" fill="rgb(233,88,21)" fg:x="357" fg:w="4"/><text x="28.8329%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="28.7430%" y="453" width="0.1601%" height="15" fill="rgb(206,13,0)" fg:x="359" fg:w="2"/><text x="28.9930%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.7430%" y="437" width="0.1601%" height="15" fill="rgb(242,15,35)" fg:x="359" fg:w="2"/><text x="28.9930%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.04%)</title><rect x="27.9424%" y="533" width="1.0408%" height="15" fill="rgb(247,142,41)" fg:x="349" fg:w="13"/><text x="28.1924%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.04%)</title><rect x="27.9424%" y="517" width="1.0408%" height="15" fill="rgb(245,51,29)" fg:x="349" fg:w="13"/><text x="28.1924%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="28.9031%" y="501" width="0.0801%" height="15" fill="rgb(228,209,43)" fg:x="361" fg:w="1"/><text x="29.1531%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="28.9031%" y="485" width="0.0801%" height="15" fill="rgb(233,185,9)" fg:x="361" fg:w="1"/><text x="29.1531%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="28.9832%" y="533" width="0.1601%" height="15" fill="rgb(226,93,0)" fg:x="362" fg:w="2"/><text x="29.2332%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0633%" y="517" width="0.0801%" height="15" fill="rgb(245,194,43)" fg:x="363" fg:w="1"/><text x="29.3133%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="27.7822%" y="565" width="1.4412%" height="15" fill="rgb(211,145,34)" fg:x="347" fg:w="18"/><text x="28.0322%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="27.7822%" y="549" width="1.4412%" height="15" fill="rgb(231,228,28)" fg:x="347" fg:w="18"/><text x="28.0322%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1433%" y="533" width="0.0801%" height="15" fill="rgb(236,149,4)" fg:x="364" fg:w="1"/><text x="29.3933%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1433%" y="517" width="0.0801%" height="15" fill="rgb(234,114,38)" fg:x="364" fg:w="1"/><text x="29.3933%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.1433%" y="501" width="0.0801%" height="15" fill="rgb(246,132,51)" fg:x="364" fg:w="1"/><text x="29.3933%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="29.2234%" y="549" width="0.2402%" height="15" fill="rgb(251,137,22)" fg:x="365" fg:w="3"/><text x="29.4734%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.32%)</title><rect x="29.2234%" y="565" width="0.3203%" height="15" fill="rgb(243,59,52)" fg:x="365" fg:w="4"/><text x="29.4734%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4636%" y="549" width="0.0801%" height="15" fill="rgb(239,56,28)" fg:x="368" fg:w="1"/><text x="29.7136%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (28 samples, 2.24%)</title><rect x="27.6221%" y="629" width="2.2418%" height="15" fill="rgb(218,168,27)" fg:x="345" fg:w="28"/><text x="27.8721%" y="639.50">s..</text></g><g><title>serde_json::de::from_trait (28 samples, 2.24%)</title><rect x="27.6221%" y="613" width="2.2418%" height="15" fill="rgb(232,165,11)" fg:x="345" fg:w="28"/><text x="27.8721%" y="623.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (28 samples, 2.24%)</title><rect x="27.6221%" y="597" width="2.2418%" height="15" fill="rgb(253,55,41)" fg:x="345" fg:w="28"/><text x="27.8721%" y="607.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (27 samples, 2.16%)</title><rect x="27.7022%" y="581" width="2.1617%" height="15" fill="rgb(233,206,24)" fg:x="346" fg:w="27"/><text x="27.9522%" y="591.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="29.5436%" y="565" width="0.3203%" height="15" fill="rgb(220,199,8)" fg:x="369" fg:w="4"/><text x="29.7936%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.7038%" y="549" width="0.1601%" height="15" fill="rgb(254,65,26)" fg:x="371" fg:w="2"/><text x="29.9538%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7838%" y="533" width="0.0801%" height="15" fill="rgb(253,102,23)" fg:x="372" fg:w="1"/><text x="30.0338%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="30.1841%" y="565" width="0.0801%" height="15" fill="rgb(231,103,35)" fg:x="377" fg:w="1"/><text x="30.4341%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="30.3443%" y="549" width="0.0801%" height="15" fill="rgb(238,26,10)" fg:x="379" fg:w="1"/><text x="30.5943%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="30.2642%" y="565" width="0.3203%" height="15" fill="rgb(234,191,34)" fg:x="378" fg:w="4"/><text x="30.5142%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="30.4243%" y="549" width="0.1601%" height="15" fill="rgb(206,210,9)" fg:x="380" fg:w="2"/><text x="30.6743%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="29.9440%" y="597" width="0.7206%" height="15" fill="rgb(219,155,3)" fg:x="374" fg:w="9"/><text x="30.1940%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="30.1841%" y="581" width="0.4804%" height="15" fill="rgb(221,62,52)" fg:x="377" fg:w="6"/><text x="30.4341%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.5845%" y="565" width="0.0801%" height="15" fill="rgb(215,197,36)" fg:x="382" fg:w="1"/><text x="30.8345%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="29.9440%" y="613" width="0.8006%" height="15" fill="rgb(226,222,6)" fg:x="374" fg:w="10"/><text x="30.1940%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="30.6645%" y="597" width="0.0801%" height="15" fill="rgb(215,58,28)" fg:x="383" fg:w="1"/><text x="30.9145%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7446%" y="613" width="0.0801%" height="15" fill="rgb(212,148,2)" fg:x="384" fg:w="1"/><text x="30.9946%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7446%" y="597" width="0.0801%" height="15" fill="rgb(208,21,42)" fg:x="384" fg:w="1"/><text x="30.9946%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7446%" y="581" width="0.0801%" height="15" fill="rgb(209,107,26)" fg:x="384" fg:w="1"/><text x="30.9946%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7446%" y="565" width="0.0801%" height="15" fill="rgb(254,60,47)" fg:x="384" fg:w="1"/><text x="30.9946%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7446%" y="549" width="0.0801%" height="15" fill="rgb(207,226,45)" fg:x="384" fg:w="1"/><text x="30.9946%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7446%" y="533" width="0.0801%" height="15" fill="rgb(223,124,22)" fg:x="384" fg:w="1"/><text x="30.9946%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7446%" y="517" width="0.0801%" height="15" fill="rgb(240,162,13)" fg:x="384" fg:w="1"/><text x="30.9946%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7446%" y="501" width="0.0801%" height="15" fill="rgb(244,199,31)" fg:x="384" fg:w="1"/><text x="30.9946%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7446%" y="485" width="0.0801%" height="15" fill="rgb(207,92,16)" fg:x="384" fg:w="1"/><text x="30.9946%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7446%" y="469" width="0.0801%" height="15" fill="rgb(215,31,19)" fg:x="384" fg:w="1"/><text x="30.9946%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7446%" y="453" width="0.0801%" height="15" fill="rgb(245,118,14)" fg:x="384" fg:w="1"/><text x="30.9946%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7446%" y="437" width="0.0801%" height="15" fill="rgb(248,12,46)" fg:x="384" fg:w="1"/><text x="30.9946%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8247%" y="613" width="0.0801%" height="15" fill="rgb(209,119,0)" fg:x="385" fg:w="1"/><text x="31.0747%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="30.9047%" y="613" width="0.0801%" height="15" fill="rgb(254,51,44)" fg:x="386" fg:w="1"/><text x="31.1547%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.9047%" y="597" width="0.0801%" height="15" fill="rgb(253,182,35)" fg:x="386" fg:w="1"/><text x="31.1547%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9848%" y="597" width="0.0801%" height="15" fill="rgb(205,198,39)" fg:x="387" fg:w="1"/><text x="31.2348%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9848%" y="581" width="0.0801%" height="15" fill="rgb(251,175,48)" fg:x="387" fg:w="1"/><text x="31.2348%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.9848%" y="565" width="0.0801%" height="15" fill="rgb(239,38,17)" fg:x="387" fg:w="1"/><text x="31.2348%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.9848%" y="549" width="0.0801%" height="15" fill="rgb(212,101,8)" fg:x="387" fg:w="1"/><text x="31.2348%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.9848%" y="533" width="0.0801%" height="15" fill="rgb(228,35,17)" fg:x="387" fg:w="1"/><text x="31.2348%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9848%" y="517" width="0.0801%" height="15" fill="rgb(214,95,8)" fg:x="387" fg:w="1"/><text x="31.2348%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.9848%" y="501" width="0.0801%" height="15" fill="rgb(210,176,35)" fg:x="387" fg:w="1"/><text x="31.2348%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.9848%" y="485" width="0.0801%" height="15" fill="rgb(226,4,3)" fg:x="387" fg:w="1"/><text x="31.2348%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.9848%" y="469" width="0.0801%" height="15" fill="rgb(232,133,14)" fg:x="387" fg:w="1"/><text x="31.2348%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.9848%" y="453" width="0.0801%" height="15" fill="rgb(250,191,8)" fg:x="387" fg:w="1"/><text x="31.2348%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.9848%" y="437" width="0.0801%" height="15" fill="rgb(213,12,45)" fg:x="387" fg:w="1"/><text x="31.2348%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0649%" y="597" width="0.0801%" height="15" fill="rgb(233,78,26)" fg:x="388" fg:w="1"/><text x="31.3149%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0649%" y="581" width="0.0801%" height="15" fill="rgb(245,222,11)" fg:x="388" fg:w="1"/><text x="31.3149%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0649%" y="565" width="0.0801%" height="15" fill="rgb(216,174,12)" fg:x="388" fg:w="1"/><text x="31.3149%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.0649%" y="549" width="0.0801%" height="15" fill="rgb(213,15,9)" fg:x="388" fg:w="1"/><text x="31.3149%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.0649%" y="533" width="0.0801%" height="15" fill="rgb(238,103,32)" fg:x="388" fg:w="1"/><text x="31.3149%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.0649%" y="517" width="0.0801%" height="15" fill="rgb(245,85,15)" fg:x="388" fg:w="1"/><text x="31.3149%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0649%" y="501" width="0.0801%" height="15" fill="rgb(254,204,5)" fg:x="388" fg:w="1"/><text x="31.3149%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0649%" y="485" width="0.0801%" height="15" fill="rgb(231,178,15)" fg:x="388" fg:w="1"/><text x="31.3149%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.0649%" y="469" width="0.0801%" height="15" fill="rgb(248,151,3)" fg:x="388" fg:w="1"/><text x="31.3149%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.0649%" y="453" width="0.0801%" height="15" fill="rgb(250,139,13)" fg:x="388" fg:w="1"/><text x="31.3149%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.0649%" y="437" width="0.0801%" height="15" fill="rgb(243,107,53)" fg:x="388" fg:w="1"/><text x="31.3149%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.0649%" y="421" width="0.0801%" height="15" fill="rgb(232,81,15)" fg:x="388" fg:w="1"/><text x="31.3149%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0649%" y="405" width="0.0801%" height="15" fill="rgb(225,187,48)" fg:x="388" fg:w="1"/><text x="31.3149%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.1449%" y="597" width="0.0801%" height="15" fill="rgb(205,116,12)" fg:x="389" fg:w="1"/><text x="31.3949%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1449%" y="581" width="0.0801%" height="15" fill="rgb(220,222,31)" fg:x="389" fg:w="1"/><text x="31.3949%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="31.2250%" y="581" width="0.0801%" height="15" fill="rgb(233,187,49)" fg:x="390" fg:w="1"/><text x="31.4750%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.3050%" y="565" width="0.0801%" height="15" fill="rgb(211,168,53)" fg:x="391" fg:w="1"/><text x="31.5550%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3851%" y="565" width="0.0801%" height="15" fill="rgb(206,160,16)" fg:x="392" fg:w="1"/><text x="31.6351%" y="575.50"></text></g><g><title>engine::session::Session::save_entity_changes (171 samples, 13.69%)</title><rect x="17.8543%" y="693" width="13.6910%" height="15" fill="rgb(254,164,13)" fg:x="223" fg:w="171"/><text x="18.1043%" y="703.50">engine::session::Sess..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (166 samples, 13.29%)</title><rect x="18.2546%" y="677" width="13.2906%" height="15" fill="rgb(229,45,30)" fg:x="228" fg:w="166"/><text x="18.5046%" y="687.50">engine::internal::En..</text></g><g><title>engine::session::Session::check_for_changes (166 samples, 13.29%)</title><rect x="18.2546%" y="661" width="13.2906%" height="15" fill="rgb(237,32,10)" fg:x="228" fg:w="166"/><text x="18.5046%" y="671.50">engine::session::Ses..</text></g><g><title>kernel::compare::any_entity_changes (112 samples, 8.97%)</title><rect x="22.5781%" y="645" width="8.9672%" height="15" fill="rgb(251,20,47)" fg:x="282" fg:w="112"/><text x="22.8281%" y="655.50">kernel::compa..</text></g><g><title>treediff::diff::diff (21 samples, 1.68%)</title><rect x="29.8639%" y="629" width="1.6813%" height="15" fill="rgb(251,116,12)" fg:x="373" fg:w="21"/><text x="30.1139%" y="639.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="30.9848%" y="613" width="0.5604%" height="15" fill="rgb(214,227,27)" fg:x="387" fg:w="7"/><text x="31.2348%" y="623.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="31.2250%" y="597" width="0.3203%" height="15" fill="rgb(248,10,53)" fg:x="390" fg:w="4"/><text x="31.4750%" y="607.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="31.3050%" y="581" width="0.2402%" height="15" fill="rgb(221,176,25)" fg:x="391" fg:w="3"/><text x="31.5550%" y="591.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="31.4652%" y="565" width="0.0801%" height="15" fill="rgb(205,70,46)" fg:x="393" fg:w="1"/><text x="31.7152%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="31.4652%" y="549" width="0.0801%" height="15" fill="rgb(217,45,38)" fg:x="393" fg:w="1"/><text x="31.7152%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4652%" y="533" width="0.0801%" height="15" fill="rgb(243,6,54)" fg:x="393" fg:w="1"/><text x="31.7152%" y="543.50"></text></g><g><title>engine::session::Session::close (188 samples, 15.05%)</title><rect x="16.5733%" y="709" width="15.0520%" height="15" fill="rgb(242,76,23)" fg:x="207" fg:w="188"/><text x="16.8233%" y="719.50">engine::session::Sessio..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="31.5452%" y="693" width="0.0801%" height="15" fill="rgb(239,166,0)" fg:x="394" fg:w="1"/><text x="31.7952%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.6253%" y="613" width="0.0801%" height="15" fill="rgb(238,174,32)" fg:x="395" fg:w="1"/><text x="31.8753%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="31.6253%" y="597" width="0.0801%" height="15" fill="rgb(238,124,44)" fg:x="395" fg:w="1"/><text x="31.8753%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="31.6253%" y="581" width="0.0801%" height="15" fill="rgb(206,185,9)" fg:x="395" fg:w="1"/><text x="31.8753%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.6253%" y="565" width="0.0801%" height="15" fill="rgb(215,157,17)" fg:x="395" fg:w="1"/><text x="31.8753%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6253%" y="549" width="0.0801%" height="15" fill="rgb(251,17,29)" fg:x="395" fg:w="1"/><text x="31.8753%" y="559.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="31.6253%" y="533" width="0.0801%" height="15" fill="rgb(227,113,27)" fg:x="395" fg:w="1"/><text x="31.8753%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.6253%" y="517" width="0.0801%" height="15" fill="rgb(217,226,24)" fg:x="395" fg:w="1"/><text x="31.8753%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="31.6253%" y="501" width="0.0801%" height="15" fill="rgb(251,99,38)" fg:x="395" fg:w="1"/><text x="31.8753%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.08%)</title><rect x="31.6253%" y="485" width="0.0801%" height="15" fill="rgb(231,147,19)" fg:x="395" fg:w="1"/><text x="31.8753%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="31.6253%" y="677" width="0.1601%" height="15" fill="rgb(230,86,8)" fg:x="395" fg:w="2"/><text x="31.8753%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="31.6253%" y="661" width="0.1601%" height="15" fill="rgb(237,159,39)" fg:x="395" fg:w="2"/><text x="31.8753%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="31.6253%" y="645" width="0.1601%" height="15" fill="rgb(247,179,47)" fg:x="395" fg:w="2"/><text x="31.8753%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="31.6253%" y="629" width="0.1601%" height="15" fill="rgb(253,152,26)" fg:x="395" fg:w="2"/><text x="31.8753%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="31.7054%" y="613" width="0.0801%" height="15" fill="rgb(222,211,15)" fg:x="396" fg:w="1"/><text x="31.9554%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="31.7854%" y="629" width="0.0801%" height="15" fill="rgb(236,193,6)" fg:x="397" fg:w="1"/><text x="32.0354%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="31.8655%" y="629" width="0.0801%" height="15" fill="rgb(226,206,10)" fg:x="398" fg:w="1"/><text x="32.1155%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.8655%" y="613" width="0.0801%" height="15" fill="rgb(213,125,22)" fg:x="398" fg:w="1"/><text x="32.1155%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="31.9456%" y="501" width="0.1601%" height="15" fill="rgb(221,66,28)" fg:x="399" fg:w="2"/><text x="32.1956%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="31.9456%" y="485" width="0.1601%" height="15" fill="rgb(222,84,53)" fg:x="399" fg:w="2"/><text x="32.1956%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="31.9456%" y="469" width="0.1601%" height="15" fill="rgb(243,50,15)" fg:x="399" fg:w="2"/><text x="32.1956%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9456%" y="453" width="0.1601%" height="15" fill="rgb(208,184,23)" fg:x="399" fg:w="2"/><text x="32.1956%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="31.9456%" y="549" width="0.2402%" height="15" fill="rgb(221,83,2)" fg:x="399" fg:w="3"/><text x="32.1956%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="31.9456%" y="533" width="0.2402%" height="15" fill="rgb(236,53,24)" fg:x="399" fg:w="3"/><text x="32.1956%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="31.9456%" y="517" width="0.2402%" height="15" fill="rgb(244,171,29)" fg:x="399" fg:w="3"/><text x="32.1956%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1057%" y="501" width="0.0801%" height="15" fill="rgb(205,19,11)" fg:x="401" fg:w="1"/><text x="32.3557%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="32.1057%" y="485" width="0.0801%" height="15" fill="rgb(207,108,29)" fg:x="401" fg:w="1"/><text x="32.3557%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.1057%" y="469" width="0.0801%" height="15" fill="rgb(236,215,43)" fg:x="401" fg:w="1"/><text x="32.3557%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.1857%" y="517" width="0.0801%" height="15" fill="rgb(213,58,35)" fg:x="402" fg:w="1"/><text x="32.4357%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.2658%" y="517" width="0.0801%" height="15" fill="rgb(220,211,46)" fg:x="403" fg:w="1"/><text x="32.5158%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.2658%" y="501" width="0.0801%" height="15" fill="rgb(212,134,16)" fg:x="403" fg:w="1"/><text x="32.5158%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="31.9456%" y="613" width="0.4804%" height="15" fill="rgb(232,90,44)" fg:x="399" fg:w="6"/><text x="32.1956%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="31.9456%" y="597" width="0.4804%" height="15" fill="rgb(212,18,36)" fg:x="399" fg:w="6"/><text x="32.1956%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="31.9456%" y="581" width="0.4804%" height="15" fill="rgb(206,112,24)" fg:x="399" fg:w="6"/><text x="32.1956%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="31.9456%" y="565" width="0.4804%" height="15" fill="rgb(238,223,40)" fg:x="399" fg:w="6"/><text x="32.1956%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="32.1857%" y="549" width="0.2402%" height="15" fill="rgb(226,169,20)" fg:x="402" fg:w="3"/><text x="32.4357%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.1857%" y="533" width="0.2402%" height="15" fill="rgb(241,64,52)" fg:x="402" fg:w="3"/><text x="32.4357%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.3459%" y="517" width="0.0801%" height="15" fill="rgb(228,120,25)" fg:x="404" fg:w="1"/><text x="32.5959%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3459%" y="501" width="0.0801%" height="15" fill="rgb(234,108,19)" fg:x="404" fg:w="1"/><text x="32.5959%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.3459%" y="485" width="0.0801%" height="15" fill="rgb(236,133,29)" fg:x="404" fg:w="1"/><text x="32.5959%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.3459%" y="469" width="0.0801%" height="15" fill="rgb(246,174,53)" fg:x="404" fg:w="1"/><text x="32.5959%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="32.5060%" y="533" width="0.1601%" height="15" fill="rgb(210,105,35)" fg:x="406" fg:w="2"/><text x="32.7560%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5861%" y="517" width="0.0801%" height="15" fill="rgb(225,27,26)" fg:x="407" fg:w="1"/><text x="32.8361%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6661%" y="533" width="0.0801%" height="15" fill="rgb(233,2,39)" fg:x="408" fg:w="1"/><text x="32.9161%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6661%" y="517" width="0.0801%" height="15" fill="rgb(219,164,26)" fg:x="408" fg:w="1"/><text x="32.9161%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (13 samples, 1.04%)</title><rect x="31.7854%" y="645" width="1.0408%" height="15" fill="rgb(236,211,5)" fg:x="397" fg:w="13"/><text x="32.0354%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.88%)</title><rect x="31.9456%" y="629" width="0.8807%" height="15" fill="rgb(244,227,23)" fg:x="399" fg:w="11"/><text x="32.1956%" y="639.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="32.4259%" y="613" width="0.4003%" height="15" fill="rgb(230,184,8)" fg:x="405" fg:w="5"/><text x="32.6759%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="32.4259%" y="597" width="0.4003%" height="15" fill="rgb(217,125,48)" fg:x="405" fg:w="5"/><text x="32.6759%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="32.4259%" y="581" width="0.4003%" height="15" fill="rgb(223,192,47)" fg:x="405" fg:w="5"/><text x="32.6759%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="32.5060%" y="565" width="0.3203%" height="15" fill="rgb(226,119,10)" fg:x="406" fg:w="4"/><text x="32.7560%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="32.5060%" y="549" width="0.3203%" height="15" fill="rgb(221,49,29)" fg:x="406" fg:w="4"/><text x="32.7560%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="32.7462%" y="533" width="0.0801%" height="15" fill="rgb(217,205,19)" fg:x="409" fg:w="1"/><text x="32.9962%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="32.7462%" y="517" width="0.0801%" height="15" fill="rgb(242,104,7)" fg:x="409" fg:w="1"/><text x="32.9962%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (14 samples, 1.12%)</title><rect x="31.7854%" y="661" width="1.1209%" height="15" fill="rgb(209,154,48)" fg:x="397" fg:w="14"/><text x="32.0354%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.8263%" y="645" width="0.0801%" height="15" fill="rgb(219,213,46)" fg:x="410" fg:w="1"/><text x="33.0763%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.8263%" y="629" width="0.0801%" height="15" fill="rgb(229,105,38)" fg:x="410" fg:w="1"/><text x="33.0763%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.8263%" y="613" width="0.0801%" height="15" fill="rgb(205,151,5)" fg:x="410" fg:w="1"/><text x="33.0763%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.8263%" y="597" width="0.0801%" height="15" fill="rgb(248,115,40)" fg:x="410" fg:w="1"/><text x="33.0763%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.8263%" y="581" width="0.0801%" height="15" fill="rgb(206,179,2)" fg:x="410" fg:w="1"/><text x="33.0763%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.8263%" y="565" width="0.0801%" height="15" fill="rgb(230,103,24)" fg:x="410" fg:w="1"/><text x="33.0763%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.8263%" y="549" width="0.0801%" height="15" fill="rgb(218,152,4)" fg:x="410" fg:w="1"/><text x="33.0763%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.8263%" y="533" width="0.0801%" height="15" fill="rgb(236,161,54)" fg:x="410" fg:w="1"/><text x="33.0763%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.8263%" y="517" width="0.0801%" height="15" fill="rgb(226,65,17)" fg:x="410" fg:w="1"/><text x="33.0763%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.8263%" y="501" width="0.0801%" height="15" fill="rgb(221,134,44)" fg:x="410" fg:w="1"/><text x="33.0763%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.8263%" y="485" width="0.0801%" height="15" fill="rgb(251,129,4)" fg:x="410" fg:w="1"/><text x="33.0763%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.8263%" y="469" width="0.0801%" height="15" fill="rgb(244,32,34)" fg:x="410" fg:w="1"/><text x="33.0763%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.8263%" y="453" width="0.0801%" height="15" fill="rgb(251,224,37)" fg:x="410" fg:w="1"/><text x="33.0763%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.8263%" y="437" width="0.0801%" height="15" fill="rgb(248,117,31)" fg:x="410" fg:w="1"/><text x="33.0763%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.8263%" y="421" width="0.0801%" height="15" fill="rgb(222,208,37)" fg:x="410" fg:w="1"/><text x="33.0763%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.8263%" y="405" width="0.0801%" height="15" fill="rgb(234,211,25)" fg:x="410" fg:w="1"/><text x="33.0763%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.8263%" y="389" width="0.0801%" height="15" fill="rgb(211,72,6)" fg:x="410" fg:w="1"/><text x="33.0763%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.8263%" y="373" width="0.0801%" height="15" fill="rgb(249,198,38)" fg:x="410" fg:w="1"/><text x="33.0763%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.8263%" y="357" width="0.0801%" height="15" fill="rgb(221,86,51)" fg:x="410" fg:w="1"/><text x="33.0763%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8263%" y="341" width="0.0801%" height="15" fill="rgb(226,178,43)" fg:x="410" fg:w="1"/><text x="33.0763%" y="351.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="32.9063%" y="661" width="0.0801%" height="15" fill="rgb(215,145,7)" fg:x="411" fg:w="1"/><text x="33.1563%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="32.9063%" y="645" width="0.0801%" height="15" fill="rgb(250,202,36)" fg:x="411" fg:w="1"/><text x="33.1563%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1465%" y="613" width="0.0801%" height="15" fill="rgb(215,86,13)" fg:x="414" fg:w="1"/><text x="33.3965%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1465%" y="597" width="0.0801%" height="15" fill="rgb(221,134,12)" fg:x="414" fg:w="1"/><text x="33.3965%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1465%" y="581" width="0.0801%" height="15" fill="rgb(213,82,10)" fg:x="414" fg:w="1"/><text x="33.3965%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1465%" y="565" width="0.0801%" height="15" fill="rgb(214,142,0)" fg:x="414" fg:w="1"/><text x="33.3965%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.1465%" y="549" width="0.0801%" height="15" fill="rgb(205,145,9)" fg:x="414" fg:w="1"/><text x="33.3965%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.1465%" y="533" width="0.0801%" height="15" fill="rgb(244,214,8)" fg:x="414" fg:w="1"/><text x="33.3965%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.1465%" y="517" width="0.0801%" height="15" fill="rgb(224,72,51)" fg:x="414" fg:w="1"/><text x="33.3965%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.1465%" y="501" width="0.0801%" height="15" fill="rgb(233,137,37)" fg:x="414" fg:w="1"/><text x="33.3965%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.1465%" y="485" width="0.0801%" height="15" fill="rgb(208,71,28)" fg:x="414" fg:w="1"/><text x="33.3965%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="33.2266%" y="613" width="0.0801%" height="15" fill="rgb(226,31,7)" fg:x="415" fg:w="1"/><text x="33.4766%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3867%" y="581" width="0.0801%" height="15" fill="rgb(229,62,18)" fg:x="417" fg:w="1"/><text x="33.6367%" y="591.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (22 samples, 1.76%)</title><rect x="31.7854%" y="677" width="1.7614%" height="15" fill="rgb(226,74,28)" fg:x="397" fg:w="22"/><text x="32.0354%" y="687.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="32.9864%" y="661" width="0.5604%" height="15" fill="rgb(214,170,18)" fg:x="412" fg:w="7"/><text x="33.2364%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="32.9864%" y="645" width="0.5604%" height="15" fill="rgb(227,229,35)" fg:x="412" fg:w="7"/><text x="33.2364%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="33.0665%" y="629" width="0.4804%" height="15" fill="rgb(225,181,39)" fg:x="413" fg:w="6"/><text x="33.3165%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="33.3066%" y="613" width="0.2402%" height="15" fill="rgb(253,124,44)" fg:x="416" fg:w="3"/><text x="33.5566%" y="623.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.16%)</title><rect x="33.3867%" y="597" width="0.1601%" height="15" fill="rgb(220,75,18)" fg:x="417" fg:w="2"/><text x="33.6367%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4668%" y="581" width="0.0801%" height="15" fill="rgb(239,175,43)" fg:x="418" fg:w="1"/><text x="33.7168%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6269%" y="613" width="0.0801%" height="15" fill="rgb(228,112,50)" fg:x="420" fg:w="1"/><text x="33.8769%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="33.7070%" y="613" width="0.0801%" height="15" fill="rgb(232,105,36)" fg:x="421" fg:w="1"/><text x="33.9570%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.7070%" y="597" width="0.0801%" height="15" fill="rgb(227,137,47)" fg:x="421" fg:w="1"/><text x="33.9570%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 1.12%)</title><rect x="33.7870%" y="597" width="1.1209%" height="15" fill="rgb(217,51,9)" fg:x="422" fg:w="14"/><text x="34.0370%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.12%)</title><rect x="33.7870%" y="581" width="1.1209%" height="15" fill="rgb(245,117,0)" fg:x="422" fg:w="14"/><text x="34.0370%" y="591.50"></text></g><g><title>realloc (14 samples, 1.12%)</title><rect x="33.7870%" y="565" width="1.1209%" height="15" fill="rgb(252,52,30)" fg:x="422" fg:w="14"/><text x="34.0370%" y="575.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="34.9079%" y="549" width="0.0801%" height="15" fill="rgb(227,85,33)" fg:x="436" fg:w="1"/><text x="35.1579%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="34.9079%" y="533" width="0.0801%" height="15" fill="rgb(220,157,20)" fg:x="436" fg:w="1"/><text x="35.1579%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.9880%" y="357" width="0.0801%" height="15" fill="rgb(254,14,34)" fg:x="437" fg:w="1"/><text x="35.2380%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="34.9880%" y="341" width="0.0801%" height="15" fill="rgb(216,103,41)" fg:x="437" fg:w="1"/><text x="35.2380%" y="351.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="34.9079%" y="581" width="0.2402%" height="15" fill="rgb(245,221,9)" fg:x="436" fg:w="3"/><text x="35.1579%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="34.9079%" y="565" width="0.2402%" height="15" fill="rgb(254,136,47)" fg:x="436" fg:w="3"/><text x="35.1579%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="34.9880%" y="549" width="0.1601%" height="15" fill="rgb(235,71,46)" fg:x="437" fg:w="2"/><text x="35.2380%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="34.9880%" y="533" width="0.1601%" height="15" fill="rgb(242,154,29)" fg:x="437" fg:w="2"/><text x="35.2380%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="517" width="0.1601%" height="15" fill="rgb(210,65,31)" fg:x="437" fg:w="2"/><text x="35.2380%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.9880%" y="501" width="0.1601%" height="15" fill="rgb(244,9,50)" fg:x="437" fg:w="2"/><text x="35.2380%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="485" width="0.1601%" height="15" fill="rgb(215,141,38)" fg:x="437" fg:w="2"/><text x="35.2380%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="469" width="0.1601%" height="15" fill="rgb(241,129,6)" fg:x="437" fg:w="2"/><text x="35.2380%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="453" width="0.1601%" height="15" fill="rgb(253,169,4)" fg:x="437" fg:w="2"/><text x="35.2380%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.9880%" y="437" width="0.1601%" height="15" fill="rgb(237,82,36)" fg:x="437" fg:w="2"/><text x="35.2380%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="421" width="0.1601%" height="15" fill="rgb(209,171,11)" fg:x="437" fg:w="2"/><text x="35.2380%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="405" width="0.1601%" height="15" fill="rgb(242,19,22)" fg:x="437" fg:w="2"/><text x="35.2380%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="34.9880%" y="389" width="0.1601%" height="15" fill="rgb(251,122,24)" fg:x="437" fg:w="2"/><text x="35.2380%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="34.9880%" y="373" width="0.1601%" height="15" fill="rgb(226,166,42)" fg:x="437" fg:w="2"/><text x="35.2380%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="35.0681%" y="357" width="0.0801%" height="15" fill="rgb(244,101,48)" fg:x="438" fg:w="1"/><text x="35.3181%" y="367.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="35.0681%" y="341" width="0.0801%" height="15" fill="rgb(227,125,1)" fg:x="438" fg:w="1"/><text x="35.3181%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.2282%" y="549" width="0.1601%" height="15" fill="rgb(206,79,43)" fg:x="440" fg:w="2"/><text x="35.4782%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.2282%" y="533" width="0.1601%" height="15" fill="rgb(241,109,41)" fg:x="440" fg:w="2"/><text x="35.4782%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="35.2282%" y="517" width="0.1601%" height="15" fill="rgb(219,73,4)" fg:x="440" fg:w="2"/><text x="35.4782%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="35.2282%" y="501" width="0.1601%" height="15" fill="rgb(239,25,41)" fg:x="440" fg:w="2"/><text x="35.4782%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.3082%" y="485" width="0.0801%" height="15" fill="rgb(208,88,46)" fg:x="441" fg:w="1"/><text x="35.5582%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.3082%" y="469" width="0.0801%" height="15" fill="rgb(239,184,9)" fg:x="441" fg:w="1"/><text x="35.5582%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.3082%" y="453" width="0.0801%" height="15" fill="rgb(223,114,13)" fg:x="441" fg:w="1"/><text x="35.5582%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.3082%" y="437" width="0.0801%" height="15" fill="rgb(214,28,42)" fg:x="441" fg:w="1"/><text x="35.5582%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3082%" y="421" width="0.0801%" height="15" fill="rgb(252,32,44)" fg:x="441" fg:w="1"/><text x="35.5582%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.3082%" y="405" width="0.0801%" height="15" fill="rgb(231,159,4)" fg:x="441" fg:w="1"/><text x="35.5582%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.3082%" y="389" width="0.0801%" height="15" fill="rgb(210,35,26)" fg:x="441" fg:w="1"/><text x="35.5582%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.3082%" y="373" width="0.0801%" height="15" fill="rgb(208,190,37)" fg:x="441" fg:w="1"/><text x="35.5582%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.3082%" y="357" width="0.0801%" height="15" fill="rgb(226,148,22)" fg:x="441" fg:w="1"/><text x="35.5582%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.3082%" y="341" width="0.0801%" height="15" fill="rgb(242,153,24)" fg:x="441" fg:w="1"/><text x="35.5582%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.3082%" y="325" width="0.0801%" height="15" fill="rgb(213,133,7)" fg:x="441" fg:w="1"/><text x="35.5582%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="35.3883%" y="517" width="0.0801%" height="15" fill="rgb(248,206,18)" fg:x="442" fg:w="1"/><text x="35.6383%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.3883%" y="501" width="0.0801%" height="15" fill="rgb(233,157,4)" fg:x="442" fg:w="1"/><text x="35.6383%" y="511.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (22 samples, 1.76%)</title><rect x="33.7870%" y="613" width="1.7614%" height="15" fill="rgb(249,179,32)" fg:x="422" fg:w="22"/><text x="34.0370%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (8 samples, 0.64%)</title><rect x="34.9079%" y="597" width="0.6405%" height="15" fill="rgb(248,69,35)" fg:x="436" fg:w="8"/><text x="35.1579%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="35.1481%" y="581" width="0.4003%" height="15" fill="rgb(249,158,38)" fg:x="439" fg:w="5"/><text x="35.3981%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="35.1481%" y="565" width="0.4003%" height="15" fill="rgb(223,18,43)" fg:x="439" fg:w="5"/><text x="35.3981%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="35.3883%" y="549" width="0.1601%" height="15" fill="rgb(238,42,45)" fg:x="442" fg:w="2"/><text x="35.6383%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="35.3883%" y="533" width="0.1601%" height="15" fill="rgb(219,65,47)" fg:x="442" fg:w="2"/><text x="35.6383%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="35.4684%" y="517" width="0.0801%" height="15" fill="rgb(248,153,12)" fg:x="443" fg:w="1"/><text x="35.7184%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="35.4684%" y="501" width="0.0801%" height="15" fill="rgb(240,118,4)" fg:x="443" fg:w="1"/><text x="35.7184%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5484%" y="597" width="0.0801%" height="15" fill="rgb(250,96,34)" fg:x="444" fg:w="1"/><text x="35.7984%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5484%" y="581" width="0.0801%" height="15" fill="rgb(221,15,4)" fg:x="444" fg:w="1"/><text x="35.7984%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="35.6285%" y="597" width="0.0801%" height="15" fill="rgb(217,149,33)" fg:x="445" fg:w="1"/><text x="35.8785%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="35.6285%" y="581" width="0.0801%" height="15" fill="rgb(213,58,29)" fg:x="445" fg:w="1"/><text x="35.8785%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="35.7086%" y="565" width="0.0801%" height="15" fill="rgb(236,218,9)" fg:x="446" fg:w="1"/><text x="35.9586%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="35.5484%" y="613" width="0.3203%" height="15" fill="rgb(248,40,19)" fg:x="444" fg:w="4"/><text x="35.7984%" y="623.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="35.7086%" y="597" width="0.1601%" height="15" fill="rgb(212,17,6)" fg:x="446" fg:w="2"/><text x="35.9586%" y="607.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="35.7086%" y="581" width="0.1601%" height="15" fill="rgb(206,212,20)" fg:x="446" fg:w="2"/><text x="35.9586%" y="591.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="35.7886%" y="565" width="0.0801%" height="15" fill="rgb(229,80,37)" fg:x="447" fg:w="1"/><text x="36.0386%" y="575.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="35.7886%" y="549" width="0.0801%" height="15" fill="rgb(253,8,37)" fg:x="447" fg:w="1"/><text x="36.0386%" y="559.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="35.7886%" y="533" width="0.0801%" height="15" fill="rgb(215,16,43)" fg:x="447" fg:w="1"/><text x="36.0386%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="35.7886%" y="517" width="0.0801%" height="15" fill="rgb(236,219,16)" fg:x="447" fg:w="1"/><text x="36.0386%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.7886%" y="501" width="0.0801%" height="15" fill="rgb(251,0,3)" fg:x="447" fg:w="1"/><text x="36.0386%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.7886%" y="485" width="0.0801%" height="15" fill="rgb(207,133,37)" fg:x="447" fg:w="1"/><text x="36.0386%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.7886%" y="469" width="0.0801%" height="15" fill="rgb(250,143,20)" fg:x="447" fg:w="1"/><text x="36.0386%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.7886%" y="453" width="0.0801%" height="15" fill="rgb(242,19,50)" fg:x="447" fg:w="1"/><text x="36.0386%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.7886%" y="437" width="0.0801%" height="15" fill="rgb(206,124,43)" fg:x="447" fg:w="1"/><text x="36.0386%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.7886%" y="421" width="0.0801%" height="15" fill="rgb(229,4,38)" fg:x="447" fg:w="1"/><text x="36.0386%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.7886%" y="405" width="0.0801%" height="15" fill="rgb(247,220,45)" fg:x="447" fg:w="1"/><text x="36.0386%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (29 samples, 2.32%)</title><rect x="33.6269%" y="645" width="2.3219%" height="15" fill="rgb(247,195,0)" fg:x="420" fg:w="29"/><text x="33.8769%" y="655.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (29 samples, 2.32%)</title><rect x="33.6269%" y="629" width="2.3219%" height="15" fill="rgb(252,12,19)" fg:x="420" fg:w="29"/><text x="33.8769%" y="639.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="35.8687%" y="613" width="0.0801%" height="15" fill="rgb(222,49,50)" fg:x="448" fg:w="1"/><text x="36.1187%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8687%" y="597" width="0.0801%" height="15" fill="rgb(209,157,28)" fg:x="448" fg:w="1"/><text x="36.1187%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8687%" y="581" width="0.0801%" height="15" fill="rgb(238,174,24)" fg:x="448" fg:w="1"/><text x="36.1187%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.8687%" y="565" width="0.0801%" height="15" fill="rgb(224,17,28)" fg:x="448" fg:w="1"/><text x="36.1187%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.8687%" y="549" width="0.0801%" height="15" fill="rgb(249,7,29)" fg:x="448" fg:w="1"/><text x="36.1187%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.8687%" y="533" width="0.0801%" height="15" fill="rgb(243,178,4)" fg:x="448" fg:w="1"/><text x="36.1187%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.8687%" y="517" width="0.0801%" height="15" fill="rgb(246,138,35)" fg:x="448" fg:w="1"/><text x="36.1187%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.8687%" y="501" width="0.0801%" height="15" fill="rgb(251,85,18)" fg:x="448" fg:w="1"/><text x="36.1187%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.8687%" y="485" width="0.0801%" height="15" fill="rgb(254,55,9)" fg:x="448" fg:w="1"/><text x="36.1187%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.8687%" y="469" width="0.0801%" height="15" fill="rgb(248,4,50)" fg:x="448" fg:w="1"/><text x="36.1187%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.8687%" y="453" width="0.0801%" height="15" fill="rgb(215,208,14)" fg:x="448" fg:w="1"/><text x="36.1187%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.8687%" y="437" width="0.0801%" height="15" fill="rgb(218,37,18)" fg:x="448" fg:w="1"/><text x="36.1187%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.8687%" y="421" width="0.0801%" height="15" fill="rgb(206,104,13)" fg:x="448" fg:w="1"/><text x="36.1187%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="35.8687%" y="405" width="0.0801%" height="15" fill="rgb(248,94,22)" fg:x="448" fg:w="1"/><text x="36.1187%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="35.8687%" y="389" width="0.0801%" height="15" fill="rgb(235,42,46)" fg:x="448" fg:w="1"/><text x="36.1187%" y="399.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="35.9488%" y="645" width="0.0801%" height="15" fill="rgb(220,228,48)" fg:x="449" fg:w="1"/><text x="36.1988%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="35.9488%" y="629" width="0.0801%" height="15" fill="rgb(216,58,12)" fg:x="449" fg:w="1"/><text x="36.1988%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.9488%" y="613" width="0.0801%" height="15" fill="rgb(223,97,52)" fg:x="449" fg:w="1"/><text x="36.1988%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1089%" y="613" width="0.0801%" height="15" fill="rgb(208,159,17)" fg:x="451" fg:w="1"/><text x="36.3589%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1089%" y="597" width="0.0801%" height="15" fill="rgb(215,172,9)" fg:x="451" fg:w="1"/><text x="36.3589%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.1089%" y="581" width="0.0801%" height="15" fill="rgb(252,175,30)" fg:x="451" fg:w="1"/><text x="36.3589%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.1089%" y="565" width="0.0801%" height="15" fill="rgb(209,159,10)" fg:x="451" fg:w="1"/><text x="36.3589%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.1089%" y="549" width="0.0801%" height="15" fill="rgb(229,73,51)" fg:x="451" fg:w="1"/><text x="36.3589%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.1089%" y="533" width="0.0801%" height="15" fill="rgb(208,212,43)" fg:x="451" fg:w="1"/><text x="36.3589%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1089%" y="517" width="0.0801%" height="15" fill="rgb(254,123,53)" fg:x="451" fg:w="1"/><text x="36.3589%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.1089%" y="501" width="0.0801%" height="15" fill="rgb(254,128,49)" fg:x="451" fg:w="1"/><text x="36.3589%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.1089%" y="485" width="0.0801%" height="15" fill="rgb(246,16,16)" fg:x="451" fg:w="1"/><text x="36.3589%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.1089%" y="469" width="0.0801%" height="15" fill="rgb(209,200,1)" fg:x="451" fg:w="1"/><text x="36.3589%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.1089%" y="453" width="0.0801%" height="15" fill="rgb(235,9,3)" fg:x="451" fg:w="1"/><text x="36.3589%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.1089%" y="437" width="0.0801%" height="15" fill="rgb(233,121,54)" fg:x="451" fg:w="1"/><text x="36.3589%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.1089%" y="421" width="0.0801%" height="15" fill="rgb(236,80,25)" fg:x="451" fg:w="1"/><text x="36.3589%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="36.3491%" y="597" width="0.3203%" height="15" fill="rgb(220,44,24)" fg:x="454" fg:w="4"/><text x="36.5991%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="36.4291%" y="581" width="0.2402%" height="15" fill="rgb(236,225,16)" fg:x="455" fg:w="3"/><text x="36.6791%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="36.4291%" y="565" width="0.2402%" height="15" fill="rgb(237,140,0)" fg:x="455" fg:w="3"/><text x="36.6791%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5092%" y="549" width="0.1601%" height="15" fill="rgb(243,225,53)" fg:x="456" fg:w="2"/><text x="36.7592%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.5092%" y="533" width="0.1601%" height="15" fill="rgb(240,140,30)" fg:x="456" fg:w="2"/><text x="36.7592%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="36.5092%" y="517" width="0.1601%" height="15" fill="rgb(217,51,16)" fg:x="456" fg:w="2"/><text x="36.7592%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="36.5092%" y="501" width="0.1601%" height="15" fill="rgb(245,75,50)" fg:x="456" fg:w="2"/><text x="36.7592%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="36.5092%" y="485" width="0.1601%" height="15" fill="rgb(208,174,22)" fg:x="456" fg:w="2"/><text x="36.7592%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5092%" y="469" width="0.1601%" height="15" fill="rgb(219,98,50)" fg:x="456" fg:w="2"/><text x="36.7592%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="36.5092%" y="453" width="0.1601%" height="15" fill="rgb(243,138,3)" fg:x="456" fg:w="2"/><text x="36.7592%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="36.5092%" y="437" width="0.1601%" height="15" fill="rgb(243,132,26)" fg:x="456" fg:w="2"/><text x="36.7592%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="36.5092%" y="421" width="0.1601%" height="15" fill="rgb(250,201,8)" fg:x="456" fg:w="2"/><text x="36.7592%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="36.5092%" y="405" width="0.1601%" height="15" fill="rgb(213,91,26)" fg:x="456" fg:w="2"/><text x="36.7592%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="36.5092%" y="389" width="0.1601%" height="15" fill="rgb(229,117,1)" fg:x="456" fg:w="2"/><text x="36.7592%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="36.5092%" y="373" width="0.1601%" height="15" fill="rgb(229,24,6)" fg:x="456" fg:w="2"/><text x="36.7592%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="36.6693%" y="597" width="0.0801%" height="15" fill="rgb(206,69,11)" fg:x="458" fg:w="1"/><text x="36.9193%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.6693%" y="581" width="0.0801%" height="15" fill="rgb(234,111,34)" fg:x="458" fg:w="1"/><text x="36.9193%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="36.7494%" y="597" width="0.0801%" height="15" fill="rgb(213,187,51)" fg:x="459" fg:w="1"/><text x="36.9994%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8295%" y="517" width="0.0801%" height="15" fill="rgb(207,45,11)" fg:x="460" fg:w="1"/><text x="37.0795%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="36.1089%" y="629" width="0.8807%" height="15" fill="rgb(225,151,47)" fg:x="451" fg:w="11"/><text x="36.3589%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (10 samples, 0.80%)</title><rect x="36.1890%" y="613" width="0.8006%" height="15" fill="rgb(211,226,5)" fg:x="452" fg:w="10"/><text x="36.4390%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.8295%" y="597" width="0.1601%" height="15" fill="rgb(214,83,52)" fg:x="460" fg:w="2"/><text x="37.0795%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.8295%" y="581" width="0.1601%" height="15" fill="rgb(229,49,53)" fg:x="460" fg:w="2"/><text x="37.0795%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="36.8295%" y="565" width="0.1601%" height="15" fill="rgb(246,8,28)" fg:x="460" fg:w="2"/><text x="37.0795%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="36.8295%" y="549" width="0.1601%" height="15" fill="rgb(207,28,41)" fg:x="460" fg:w="2"/><text x="37.0795%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="36.8295%" y="533" width="0.1601%" height="15" fill="rgb(254,22,25)" fg:x="460" fg:w="2"/><text x="37.0795%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.9095%" y="517" width="0.0801%" height="15" fill="rgb(209,120,42)" fg:x="461" fg:w="1"/><text x="37.1595%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.9095%" y="501" width="0.0801%" height="15" fill="rgb(216,194,18)" fg:x="461" fg:w="1"/><text x="37.1595%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="36.9095%" y="485" width="0.0801%" height="15" fill="rgb(213,70,17)" fg:x="461" fg:w="1"/><text x="37.1595%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.9896%" y="549" width="0.0801%" height="15" fill="rgb(228,66,19)" fg:x="462" fg:w="1"/><text x="37.2396%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="36.9896%" y="597" width="0.2402%" height="15" fill="rgb(236,221,54)" fg:x="462" fg:w="3"/><text x="37.2396%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="36.9896%" y="581" width="0.2402%" height="15" fill="rgb(207,175,15)" fg:x="462" fg:w="3"/><text x="37.2396%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="36.9896%" y="565" width="0.2402%" height="15" fill="rgb(234,76,8)" fg:x="462" fg:w="3"/><text x="37.2396%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="37.0697%" y="549" width="0.1601%" height="15" fill="rgb(243,106,0)" fg:x="463" fg:w="2"/><text x="37.3197%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.0697%" y="533" width="0.1601%" height="15" fill="rgb(208,48,19)" fg:x="463" fg:w="2"/><text x="37.3197%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1497%" y="517" width="0.0801%" height="15" fill="rgb(251,50,29)" fg:x="464" fg:w="1"/><text x="37.3997%" y="527.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="37.2298%" y="565" width="0.0801%" height="15" fill="rgb(222,31,49)" fg:x="465" fg:w="1"/><text x="37.4798%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="37.2298%" y="597" width="0.1601%" height="15" fill="rgb(232,33,18)" fg:x="465" fg:w="2"/><text x="37.4798%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="37.2298%" y="581" width="0.1601%" height="15" fill="rgb(209,1,44)" fg:x="465" fg:w="2"/><text x="37.4798%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.3098%" y="565" width="0.0801%" height="15" fill="rgb(211,7,1)" fg:x="466" fg:w="1"/><text x="37.5598%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="37.3098%" y="549" width="0.0801%" height="15" fill="rgb(224,111,27)" fg:x="466" fg:w="1"/><text x="37.5598%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4700%" y="501" width="0.0801%" height="15" fill="rgb(252,195,39)" fg:x="468" fg:w="1"/><text x="37.7200%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="36.9896%" y="629" width="0.6405%" height="15" fill="rgb(237,198,5)" fg:x="462" fg:w="8"/><text x="37.2396%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (8 samples, 0.64%)</title><rect x="36.9896%" y="613" width="0.6405%" height="15" fill="rgb(232,148,1)" fg:x="462" fg:w="8"/><text x="37.2396%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="37.3899%" y="597" width="0.2402%" height="15" fill="rgb(249,41,3)" fg:x="467" fg:w="3"/><text x="37.6399%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.3899%" y="581" width="0.2402%" height="15" fill="rgb(215,14,33)" fg:x="467" fg:w="3"/><text x="37.6399%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="37.3899%" y="565" width="0.2402%" height="15" fill="rgb(209,146,24)" fg:x="467" fg:w="3"/><text x="37.6399%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="37.3899%" y="549" width="0.2402%" height="15" fill="rgb(219,51,47)" fg:x="467" fg:w="3"/><text x="37.6399%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="37.3899%" y="533" width="0.2402%" height="15" fill="rgb(234,217,40)" fg:x="467" fg:w="3"/><text x="37.6399%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="37.4700%" y="517" width="0.1601%" height="15" fill="rgb(228,34,26)" fg:x="468" fg:w="2"/><text x="37.7200%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="37.5500%" y="501" width="0.0801%" height="15" fill="rgb(224,50,29)" fg:x="469" fg:w="1"/><text x="37.8000%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.7102%" y="613" width="0.0801%" height="15" fill="rgb(205,79,51)" fg:x="471" fg:w="1"/><text x="37.9602%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="37.7902%" y="549" width="0.0801%" height="15" fill="rgb(218,136,28)" fg:x="472" fg:w="1"/><text x="38.0402%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.7902%" y="533" width="0.0801%" height="15" fill="rgb(220,150,10)" fg:x="472" fg:w="1"/><text x="38.0402%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="37.7902%" y="517" width="0.0801%" height="15" fill="rgb(242,158,47)" fg:x="472" fg:w="1"/><text x="38.0402%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="37.6301%" y="629" width="0.3203%" height="15" fill="rgb(209,68,0)" fg:x="470" fg:w="4"/><text x="37.8801%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="37.7902%" y="613" width="0.1601%" height="15" fill="rgb(208,13,41)" fg:x="472" fg:w="2"/><text x="38.0402%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="37.7902%" y="597" width="0.1601%" height="15" fill="rgb(226,201,7)" fg:x="472" fg:w="2"/><text x="38.0402%" y="607.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="37.7902%" y="581" width="0.1601%" height="15" fill="rgb(236,103,26)" fg:x="472" fg:w="2"/><text x="38.0402%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="37.7902%" y="565" width="0.1601%" height="15" fill="rgb(243,162,8)" fg:x="472" fg:w="2"/><text x="38.0402%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="37.8703%" y="549" width="0.0801%" height="15" fill="rgb(237,225,11)" fg:x="473" fg:w="1"/><text x="38.1203%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.8703%" y="533" width="0.0801%" height="15" fill="rgb(247,186,32)" fg:x="473" fg:w="1"/><text x="38.1203%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.8703%" y="517" width="0.0801%" height="15" fill="rgb(215,26,28)" fg:x="473" fg:w="1"/><text x="38.1203%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.8703%" y="501" width="0.0801%" height="15" fill="rgb(208,121,6)" fg:x="473" fg:w="1"/><text x="38.1203%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.8703%" y="485" width="0.0801%" height="15" fill="rgb(225,91,3)" fg:x="473" fg:w="1"/><text x="38.1203%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.8703%" y="469" width="0.0801%" height="15" fill="rgb(246,119,36)" fg:x="473" fg:w="1"/><text x="38.1203%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.8703%" y="453" width="0.0801%" height="15" fill="rgb(254,173,2)" fg:x="473" fg:w="1"/><text x="38.1203%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.8703%" y="437" width="0.0801%" height="15" fill="rgb(209,87,54)" fg:x="473" fg:w="1"/><text x="38.1203%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.9504%" y="613" width="0.1601%" height="15" fill="rgb(223,216,20)" fg:x="474" fg:w="2"/><text x="38.2004%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0304%" y="597" width="0.0801%" height="15" fill="rgb(220,31,8)" fg:x="475" fg:w="1"/><text x="38.2804%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0304%" y="581" width="0.0801%" height="15" fill="rgb(220,185,15)" fg:x="475" fg:w="1"/><text x="38.2804%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.0304%" y="565" width="0.0801%" height="15" fill="rgb(247,190,50)" fg:x="475" fg:w="1"/><text x="38.2804%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.0304%" y="549" width="0.0801%" height="15" fill="rgb(239,173,47)" fg:x="475" fg:w="1"/><text x="38.2804%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.0304%" y="533" width="0.0801%" height="15" fill="rgb(218,190,42)" fg:x="475" fg:w="1"/><text x="38.2804%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0304%" y="517" width="0.0801%" height="15" fill="rgb(251,207,16)" fg:x="475" fg:w="1"/><text x="38.2804%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0304%" y="501" width="0.0801%" height="15" fill="rgb(222,199,47)" fg:x="475" fg:w="1"/><text x="38.2804%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0304%" y="485" width="0.0801%" height="15" fill="rgb(245,190,7)" fg:x="475" fg:w="1"/><text x="38.2804%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0304%" y="469" width="0.0801%" height="15" fill="rgb(239,85,38)" fg:x="475" fg:w="1"/><text x="38.2804%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0304%" y="453" width="0.0801%" height="15" fill="rgb(229,69,51)" fg:x="475" fg:w="1"/><text x="38.2804%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0304%" y="437" width="0.0801%" height="15" fill="rgb(231,104,51)" fg:x="475" fg:w="1"/><text x="38.2804%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0304%" y="421" width="0.0801%" height="15" fill="rgb(235,49,4)" fg:x="475" fg:w="1"/><text x="38.2804%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (58 samples, 4.64%)</title><rect x="33.5468%" y="661" width="4.6437%" height="15" fill="rgb(246,166,20)" fg:x="419" fg:w="58"/><text x="33.7968%" y="671.50">&lt;plug..</text></g><g><title>plugins_core::tools::move_between (27 samples, 2.16%)</title><rect x="36.0288%" y="645" width="2.1617%" height="15" fill="rgb(230,119,37)" fg:x="450" fg:w="27"/><text x="36.2788%" y="655.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="37.9504%" y="629" width="0.2402%" height="15" fill="rgb(234,77,34)" fg:x="474" fg:w="3"/><text x="38.2004%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="38.1105%" y="613" width="0.0801%" height="15" fill="rgb(211,222,33)" fg:x="476" fg:w="1"/><text x="38.3605%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="38.1105%" y="597" width="0.0801%" height="15" fill="rgb(226,45,42)" fg:x="476" fg:w="1"/><text x="38.3605%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="38.1105%" y="581" width="0.0801%" height="15" fill="rgb(215,174,28)" fg:x="476" fg:w="1"/><text x="38.3605%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="38.1105%" y="565" width="0.0801%" height="15" fill="rgb(254,173,49)" fg:x="476" fg:w="1"/><text x="38.3605%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="38.1105%" y="549" width="0.0801%" height="15" fill="rgb(229,191,6)" fg:x="476" fg:w="1"/><text x="38.3605%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="38.2706%" y="613" width="0.0801%" height="15" fill="rgb(212,145,22)" fg:x="478" fg:w="1"/><text x="38.5206%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="38.2706%" y="597" width="0.0801%" height="15" fill="rgb(226,6,51)" fg:x="478" fg:w="1"/><text x="38.5206%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2706%" y="581" width="0.0801%" height="15" fill="rgb(227,128,8)" fg:x="478" fg:w="1"/><text x="38.5206%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3507%" y="597" width="0.0801%" height="15" fill="rgb(205,24,10)" fg:x="479" fg:w="1"/><text x="38.6007%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3507%" y="581" width="0.0801%" height="15" fill="rgb(217,147,27)" fg:x="479" fg:w="1"/><text x="38.6007%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3507%" y="565" width="0.0801%" height="15" fill="rgb(250,82,42)" fg:x="479" fg:w="1"/><text x="38.6007%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.3507%" y="549" width="0.0801%" height="15" fill="rgb(248,93,17)" fg:x="479" fg:w="1"/><text x="38.6007%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.3507%" y="533" width="0.0801%" height="15" fill="rgb(254,212,40)" fg:x="479" fg:w="1"/><text x="38.6007%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.3507%" y="517" width="0.0801%" height="15" fill="rgb(229,209,2)" fg:x="479" fg:w="1"/><text x="38.6007%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.3507%" y="501" width="0.0801%" height="15" fill="rgb(211,50,43)" fg:x="479" fg:w="1"/><text x="38.6007%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3507%" y="485" width="0.0801%" height="15" fill="rgb(245,196,29)" fg:x="479" fg:w="1"/><text x="38.6007%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.3507%" y="469" width="0.0801%" height="15" fill="rgb(216,132,13)" fg:x="479" fg:w="1"/><text x="38.6007%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.3507%" y="453" width="0.0801%" height="15" fill="rgb(251,108,21)" fg:x="479" fg:w="1"/><text x="38.6007%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.3507%" y="437" width="0.0801%" height="15" fill="rgb(229,174,54)" fg:x="479" fg:w="1"/><text x="38.6007%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.3507%" y="421" width="0.0801%" height="15" fill="rgb(211,175,47)" fg:x="479" fg:w="1"/><text x="38.6007%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.3507%" y="405" width="0.0801%" height="15" fill="rgb(234,5,37)" fg:x="479" fg:w="1"/><text x="38.6007%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.3507%" y="389" width="0.0801%" height="15" fill="rgb(244,150,43)" fg:x="479" fg:w="1"/><text x="38.6007%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (15 samples, 1.20%)</title><rect x="38.4307%" y="597" width="1.2010%" height="15" fill="rgb(242,172,38)" fg:x="480" fg:w="15"/><text x="38.6807%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 1.12%)</title><rect x="38.5108%" y="581" width="1.1209%" height="15" fill="rgb(205,27,8)" fg:x="481" fg:w="14"/><text x="38.7608%" y="591.50"></text></g><g><title>realloc (14 samples, 1.12%)</title><rect x="38.5108%" y="565" width="1.1209%" height="15" fill="rgb(217,57,3)" fg:x="481" fg:w="14"/><text x="38.7608%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="39.6317%" y="597" width="0.0801%" height="15" fill="rgb(242,21,38)" fg:x="495" fg:w="1"/><text x="39.8817%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="39.7918%" y="549" width="0.0801%" height="15" fill="rgb(209,64,43)" fg:x="497" fg:w="1"/><text x="40.0418%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="39.7918%" y="533" width="0.0801%" height="15" fill="rgb(222,2,46)" fg:x="497" fg:w="1"/><text x="40.0418%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.7918%" y="517" width="0.0801%" height="15" fill="rgb(218,19,44)" fg:x="497" fg:w="1"/><text x="40.0418%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="39.7118%" y="581" width="0.2402%" height="15" fill="rgb(240,203,42)" fg:x="496" fg:w="3"/><text x="39.9618%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="39.7118%" y="565" width="0.2402%" height="15" fill="rgb(229,23,45)" fg:x="496" fg:w="3"/><text x="39.9618%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="39.8719%" y="549" width="0.0801%" height="15" fill="rgb(205,228,51)" fg:x="498" fg:w="1"/><text x="40.1219%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="39.8719%" y="533" width="0.0801%" height="15" fill="rgb(239,36,20)" fg:x="498" fg:w="1"/><text x="40.1219%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="517" width="0.0801%" height="15" fill="rgb(248,172,27)" fg:x="498" fg:w="1"/><text x="40.1219%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.8719%" y="501" width="0.0801%" height="15" fill="rgb(244,55,32)" fg:x="498" fg:w="1"/><text x="40.1219%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="485" width="0.0801%" height="15" fill="rgb(215,97,16)" fg:x="498" fg:w="1"/><text x="40.1219%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="469" width="0.0801%" height="15" fill="rgb(224,80,29)" fg:x="498" fg:w="1"/><text x="40.1219%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="453" width="0.0801%" height="15" fill="rgb(216,93,47)" fg:x="498" fg:w="1"/><text x="40.1219%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.8719%" y="437" width="0.0801%" height="15" fill="rgb(238,159,10)" fg:x="498" fg:w="1"/><text x="40.1219%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="421" width="0.0801%" height="15" fill="rgb(223,98,29)" fg:x="498" fg:w="1"/><text x="40.1219%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="405" width="0.0801%" height="15" fill="rgb(210,176,23)" fg:x="498" fg:w="1"/><text x="40.1219%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="389" width="0.0801%" height="15" fill="rgb(242,162,27)" fg:x="498" fg:w="1"/><text x="40.1219%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="39.8719%" y="373" width="0.0801%" height="15" fill="rgb(245,109,32)" fg:x="498" fg:w="1"/><text x="40.1219%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="357" width="0.0801%" height="15" fill="rgb(248,87,8)" fg:x="498" fg:w="1"/><text x="40.1219%" y="367.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="39.8719%" y="341" width="0.0801%" height="15" fill="rgb(250,160,50)" fg:x="498" fg:w="1"/><text x="40.1219%" y="351.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="39.8719%" y="325" width="0.0801%" height="15" fill="rgb(246,165,25)" fg:x="498" fg:w="1"/><text x="40.1219%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.8719%" y="309" width="0.0801%" height="15" fill="rgb(249,219,3)" fg:x="498" fg:w="1"/><text x="40.1219%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="39.8719%" y="293" width="0.0801%" height="15" fill="rgb(226,66,5)" fg:x="498" fg:w="1"/><text x="40.1219%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="39.8719%" y="277" width="0.0801%" height="15" fill="rgb(250,220,43)" fg:x="498" fg:w="1"/><text x="40.1219%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="39.8719%" y="261" width="0.0801%" height="15" fill="rgb(225,111,31)" fg:x="498" fg:w="1"/><text x="40.1219%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="39.8719%" y="245" width="0.0801%" height="15" fill="rgb(248,106,18)" fg:x="498" fg:w="1"/><text x="40.1219%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="39.8719%" y="229" width="0.0801%" height="15" fill="rgb(220,226,45)" fg:x="498" fg:w="1"/><text x="40.1219%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.8719%" y="213" width="0.0801%" height="15" fill="rgb(208,58,53)" fg:x="498" fg:w="1"/><text x="40.1219%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="39.8719%" y="197" width="0.0801%" height="15" fill="rgb(209,133,1)" fg:x="498" fg:w="1"/><text x="40.1219%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="39.8719%" y="181" width="0.0801%" height="15" fill="rgb(228,216,27)" fg:x="498" fg:w="1"/><text x="40.1219%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="39.8719%" y="165" width="0.0801%" height="15" fill="rgb(238,155,2)" fg:x="498" fg:w="1"/><text x="40.1219%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="39.8719%" y="149" width="0.0801%" height="15" fill="rgb(244,99,37)" fg:x="498" fg:w="1"/><text x="40.1219%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="39.8719%" y="133" width="0.0801%" height="15" fill="rgb(254,32,3)" fg:x="498" fg:w="1"/><text x="40.1219%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="39.8719%" y="117" width="0.0801%" height="15" fill="rgb(234,46,50)" fg:x="498" fg:w="1"/><text x="40.1219%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="39.8719%" y="101" width="0.0801%" height="15" fill="rgb(232,118,51)" fg:x="498" fg:w="1"/><text x="40.1219%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="39.8719%" y="85" width="0.0801%" height="15" fill="rgb(207,24,32)" fg:x="498" fg:w="1"/><text x="40.1219%" y="95.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (22 samples, 1.76%)</title><rect x="38.3507%" y="613" width="1.7614%" height="15" fill="rgb(208,107,43)" fg:x="479" fg:w="22"/><text x="38.6007%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="39.7118%" y="597" width="0.4003%" height="15" fill="rgb(231,28,9)" fg:x="496" fg:w="5"/><text x="39.9618%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="39.9520%" y="581" width="0.1601%" height="15" fill="rgb(241,204,15)" fg:x="499" fg:w="2"/><text x="40.2020%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="39.9520%" y="565" width="0.1601%" height="15" fill="rgb(214,54,15)" fg:x="499" fg:w="2"/><text x="40.2020%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.0320%" y="549" width="0.0801%" height="15" fill="rgb(230,12,28)" fg:x="500" fg:w="1"/><text x="40.2820%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.0320%" y="533" width="0.0801%" height="15" fill="rgb(221,171,5)" fg:x="500" fg:w="1"/><text x="40.2820%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.0320%" y="517" width="0.0801%" height="15" fill="rgb(207,72,25)" fg:x="500" fg:w="1"/><text x="40.2820%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0320%" y="501" width="0.0801%" height="15" fill="rgb(249,79,37)" fg:x="500" fg:w="1"/><text x="40.2820%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="40.1121%" y="581" width="0.0801%" height="15" fill="rgb(209,98,49)" fg:x="501" fg:w="1"/><text x="40.3621%" y="591.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="40.1121%" y="565" width="0.0801%" height="15" fill="rgb(221,62,13)" fg:x="501" fg:w="1"/><text x="40.3621%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.1121%" y="549" width="0.0801%" height="15" fill="rgb(223,39,6)" fg:x="501" fg:w="1"/><text x="40.3621%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.1121%" y="533" width="0.0801%" height="15" fill="rgb(246,163,20)" fg:x="501" fg:w="1"/><text x="40.3621%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="40.1121%" y="613" width="0.1601%" height="15" fill="rgb(211,111,29)" fg:x="501" fg:w="2"/><text x="40.3621%" y="623.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="40.1121%" y="597" width="0.1601%" height="15" fill="rgb(243,118,5)" fg:x="501" fg:w="2"/><text x="40.3621%" y="607.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="40.1922%" y="581" width="0.0801%" height="15" fill="rgb(240,144,52)" fg:x="502" fg:w="1"/><text x="40.4422%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1922%" y="565" width="0.0801%" height="15" fill="rgb(244,158,36)" fg:x="502" fg:w="1"/><text x="40.4422%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (26 samples, 2.08%)</title><rect x="38.2706%" y="645" width="2.0817%" height="15" fill="rgb(241,109,37)" fg:x="478" fg:w="26"/><text x="38.5206%" y="655.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (26 samples, 2.08%)</title><rect x="38.2706%" y="629" width="2.0817%" height="15" fill="rgb(213,95,32)" fg:x="478" fg:w="26"/><text x="38.5206%" y="639.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="40.2722%" y="613" width="0.0801%" height="15" fill="rgb(252,193,9)" fg:x="503" fg:w="1"/><text x="40.5222%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2722%" y="597" width="0.0801%" height="15" fill="rgb(225,213,21)" fg:x="503" fg:w="1"/><text x="40.5222%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2722%" y="581" width="0.0801%" height="15" fill="rgb(220,172,46)" fg:x="503" fg:w="1"/><text x="40.5222%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2722%" y="565" width="0.0801%" height="15" fill="rgb(235,75,41)" fg:x="503" fg:w="1"/><text x="40.5222%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.2722%" y="549" width="0.0801%" height="15" fill="rgb(213,86,9)" fg:x="503" fg:w="1"/><text x="40.5222%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.2722%" y="533" width="0.0801%" height="15" fill="rgb(238,127,51)" fg:x="503" fg:w="1"/><text x="40.5222%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.2722%" y="517" width="0.0801%" height="15" fill="rgb(215,2,54)" fg:x="503" fg:w="1"/><text x="40.5222%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2722%" y="501" width="0.0801%" height="15" fill="rgb(245,80,6)" fg:x="503" fg:w="1"/><text x="40.5222%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2722%" y="485" width="0.0801%" height="15" fill="rgb(233,106,42)" fg:x="503" fg:w="1"/><text x="40.5222%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.2722%" y="469" width="0.0801%" height="15" fill="rgb(244,86,38)" fg:x="503" fg:w="1"/><text x="40.5222%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.2722%" y="453" width="0.0801%" height="15" fill="rgb(242,167,7)" fg:x="503" fg:w="1"/><text x="40.5222%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.2722%" y="437" width="0.0801%" height="15" fill="rgb(218,216,3)" fg:x="503" fg:w="1"/><text x="40.5222%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.2722%" y="421" width="0.0801%" height="15" fill="rgb(206,136,36)" fg:x="503" fg:w="1"/><text x="40.5222%" y="431.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="40.3523%" y="645" width="0.1601%" height="15" fill="rgb(206,206,15)" fg:x="504" fg:w="2"/><text x="40.6023%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4323%" y="629" width="0.0801%" height="15" fill="rgb(207,163,34)" fg:x="505" fg:w="1"/><text x="40.6823%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4323%" y="613" width="0.0801%" height="15" fill="rgb(240,127,22)" fg:x="505" fg:w="1"/><text x="40.6823%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4323%" y="597" width="0.0801%" height="15" fill="rgb(227,49,5)" fg:x="505" fg:w="1"/><text x="40.6823%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.4323%" y="581" width="0.0801%" height="15" fill="rgb(231,8,6)" fg:x="505" fg:w="1"/><text x="40.6823%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.4323%" y="565" width="0.0801%" height="15" fill="rgb(223,21,24)" fg:x="505" fg:w="1"/><text x="40.6823%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.4323%" y="549" width="0.0801%" height="15" fill="rgb(244,44,52)" fg:x="505" fg:w="1"/><text x="40.6823%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4323%" y="533" width="0.0801%" height="15" fill="rgb(207,73,28)" fg:x="505" fg:w="1"/><text x="40.6823%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4323%" y="517" width="0.0801%" height="15" fill="rgb(234,215,10)" fg:x="505" fg:w="1"/><text x="40.6823%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.4323%" y="501" width="0.0801%" height="15" fill="rgb(236,85,3)" fg:x="505" fg:w="1"/><text x="40.6823%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.4323%" y="485" width="0.0801%" height="15" fill="rgb(236,102,39)" fg:x="505" fg:w="1"/><text x="40.6823%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.4323%" y="469" width="0.0801%" height="15" fill="rgb(243,50,8)" fg:x="505" fg:w="1"/><text x="40.6823%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.4323%" y="453" width="0.0801%" height="15" fill="rgb(207,111,4)" fg:x="505" fg:w="1"/><text x="40.6823%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4323%" y="437" width="0.0801%" height="15" fill="rgb(230,52,42)" fg:x="505" fg:w="1"/><text x="40.6823%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.5124%" y="597" width="0.0801%" height="15" fill="rgb(252,178,50)" fg:x="506" fg:w="1"/><text x="40.7624%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="40.5124%" y="581" width="0.0801%" height="15" fill="rgb(234,46,35)" fg:x="506" fg:w="1"/><text x="40.7624%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="40.5124%" y="629" width="0.3203%" height="15" fill="rgb(228,69,37)" fg:x="506" fg:w="4"/><text x="40.7624%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="40.5124%" y="613" width="0.3203%" height="15" fill="rgb(221,21,11)" fg:x="506" fg:w="4"/><text x="40.7624%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.5925%" y="597" width="0.2402%" height="15" fill="rgb(223,56,9)" fg:x="507" fg:w="3"/><text x="40.8425%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.5925%" y="581" width="0.2402%" height="15" fill="rgb(234,30,19)" fg:x="507" fg:w="3"/><text x="40.8425%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="40.7526%" y="565" width="0.0801%" height="15" fill="rgb(211,64,54)" fg:x="509" fg:w="1"/><text x="41.0026%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="40.7526%" y="549" width="0.0801%" height="15" fill="rgb(250,189,5)" fg:x="509" fg:w="1"/><text x="41.0026%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="40.7526%" y="533" width="0.0801%" height="15" fill="rgb(214,180,13)" fg:x="509" fg:w="1"/><text x="41.0026%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="40.7526%" y="517" width="0.0801%" height="15" fill="rgb(238,40,40)" fg:x="509" fg:w="1"/><text x="41.0026%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="40.7526%" y="501" width="0.0801%" height="15" fill="rgb(214,101,38)" fg:x="509" fg:w="1"/><text x="41.0026%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="40.7526%" y="485" width="0.0801%" height="15" fill="rgb(242,65,53)" fg:x="509" fg:w="1"/><text x="41.0026%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8327%" y="597" width="0.0801%" height="15" fill="rgb(230,22,45)" fg:x="510" fg:w="1"/><text x="41.0827%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9127%" y="565" width="0.0801%" height="15" fill="rgb(223,77,1)" fg:x="511" fg:w="1"/><text x="41.1627%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9928%" y="549" width="0.0801%" height="15" fill="rgb(227,33,37)" fg:x="512" fg:w="1"/><text x="41.2428%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.9127%" y="597" width="0.2402%" height="15" fill="rgb(224,148,39)" fg:x="511" fg:w="3"/><text x="41.1627%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="40.9127%" y="581" width="0.2402%" height="15" fill="rgb(232,212,39)" fg:x="511" fg:w="3"/><text x="41.1627%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.9928%" y="565" width="0.1601%" height="15" fill="rgb(251,172,7)" fg:x="512" fg:w="2"/><text x="41.2428%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="41.0729%" y="549" width="0.0801%" height="15" fill="rgb(219,39,9)" fg:x="513" fg:w="1"/><text x="41.3229%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.0729%" y="533" width="0.0801%" height="15" fill="rgb(228,118,14)" fg:x="513" fg:w="1"/><text x="41.3229%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.0729%" y="517" width="0.0801%" height="15" fill="rgb(207,140,10)" fg:x="513" fg:w="1"/><text x="41.3229%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="41.1529%" y="549" width="0.0801%" height="15" fill="rgb(227,111,53)" fg:x="514" fg:w="1"/><text x="41.4029%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="40.8327%" y="629" width="0.4804%" height="15" fill="rgb(216,165,16)" fg:x="510" fg:w="6"/><text x="41.0827%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (6 samples, 0.48%)</title><rect x="40.8327%" y="613" width="0.4804%" height="15" fill="rgb(226,111,18)" fg:x="510" fg:w="6"/><text x="41.0827%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="41.1529%" y="597" width="0.1601%" height="15" fill="rgb(251,27,17)" fg:x="514" fg:w="2"/><text x="41.4029%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.1529%" y="581" width="0.1601%" height="15" fill="rgb(254,69,9)" fg:x="514" fg:w="2"/><text x="41.4029%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.1529%" y="565" width="0.1601%" height="15" fill="rgb(234,140,37)" fg:x="514" fg:w="2"/><text x="41.4029%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="41.2330%" y="549" width="0.0801%" height="15" fill="rgb(220,93,8)" fg:x="515" fg:w="1"/><text x="41.4830%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="41.2330%" y="533" width="0.0801%" height="15" fill="rgb(236,113,3)" fg:x="515" fg:w="1"/><text x="41.4830%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3931%" y="613" width="0.0801%" height="15" fill="rgb(234,108,23)" fg:x="517" fg:w="1"/><text x="41.6431%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.3931%" y="597" width="0.0801%" height="15" fill="rgb(205,114,34)" fg:x="517" fg:w="1"/><text x="41.6431%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.3931%" y="581" width="0.0801%" height="15" fill="rgb(236,200,45)" fg:x="517" fg:w="1"/><text x="41.6431%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.3931%" y="565" width="0.0801%" height="15" fill="rgb(227,194,29)" fg:x="517" fg:w="1"/><text x="41.6431%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.3931%" y="549" width="0.0801%" height="15" fill="rgb(250,76,42)" fg:x="517" fg:w="1"/><text x="41.6431%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3931%" y="533" width="0.0801%" height="15" fill="rgb(208,128,8)" fg:x="517" fg:w="1"/><text x="41.6431%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.3931%" y="517" width="0.0801%" height="15" fill="rgb(229,209,35)" fg:x="517" fg:w="1"/><text x="41.6431%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.3931%" y="501" width="0.0801%" height="15" fill="rgb(215,39,53)" fg:x="517" fg:w="1"/><text x="41.6431%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.3931%" y="485" width="0.0801%" height="15" fill="rgb(219,123,41)" fg:x="517" fg:w="1"/><text x="41.6431%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.3931%" y="469" width="0.0801%" height="15" fill="rgb(212,158,18)" fg:x="517" fg:w="1"/><text x="41.6431%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.3931%" y="453" width="0.0801%" height="15" fill="rgb(234,196,53)" fg:x="517" fg:w="1"/><text x="41.6431%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.3931%" y="437" width="0.0801%" height="15" fill="rgb(210,139,12)" fg:x="517" fg:w="1"/><text x="41.6431%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="41.4732%" y="613" width="0.0801%" height="15" fill="rgb(220,116,54)" fg:x="518" fg:w="1"/><text x="41.7232%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (43 samples, 3.44%)</title><rect x="38.1906%" y="661" width="3.4428%" height="15" fill="rgb(247,103,28)" fg:x="477" fg:w="43"/><text x="38.4406%" y="671.50">&lt;pl..</text></g><g><title>plugins_core::tools::move_between (14 samples, 1.12%)</title><rect x="40.5124%" y="645" width="1.1209%" height="15" fill="rgb(253,156,45)" fg:x="506" fg:w="14"/><text x="40.7624%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.32%)</title><rect x="41.3131%" y="629" width="0.3203%" height="15" fill="rgb(237,157,52)" fg:x="516" fg:w="4"/><text x="41.5631%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="41.5532%" y="613" width="0.0801%" height="15" fill="rgb(253,112,16)" fg:x="519" fg:w="1"/><text x="41.8032%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="41.5532%" y="597" width="0.0801%" height="15" fill="rgb(234,70,18)" fg:x="519" fg:w="1"/><text x="41.8032%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="41.5532%" y="581" width="0.0801%" height="15" fill="rgb(247,138,19)" fg:x="519" fg:w="1"/><text x="41.8032%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="41.5532%" y="565" width="0.0801%" height="15" fill="rgb(207,171,1)" fg:x="519" fg:w="1"/><text x="41.8032%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="41.5532%" y="549" width="0.0801%" height="15" fill="rgb(239,213,3)" fg:x="519" fg:w="1"/><text x="41.8032%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.5532%" y="533" width="0.0801%" height="15" fill="rgb(226,112,4)" fg:x="519" fg:w="1"/><text x="41.8032%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.5532%" y="517" width="0.0801%" height="15" fill="rgb(252,170,12)" fg:x="519" fg:w="1"/><text x="41.8032%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.5532%" y="501" width="0.0801%" height="15" fill="rgb(241,106,13)" fg:x="519" fg:w="1"/><text x="41.8032%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5532%" y="485" width="0.0801%" height="15" fill="rgb(225,73,23)" fg:x="519" fg:w="1"/><text x="41.8032%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="41.5532%" y="469" width="0.0801%" height="15" fill="rgb(251,227,29)" fg:x="519" fg:w="1"/><text x="41.8032%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="41.5532%" y="453" width="0.0801%" height="15" fill="rgb(237,144,13)" fg:x="519" fg:w="1"/><text x="41.8032%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="41.5532%" y="437" width="0.0801%" height="15" fill="rgb(232,106,46)" fg:x="519" fg:w="1"/><text x="41.8032%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="41.5532%" y="421" width="0.0801%" height="15" fill="rgb(245,154,53)" fg:x="519" fg:w="1"/><text x="41.8032%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="41.5532%" y="405" width="0.0801%" height="15" fill="rgb(212,119,47)" fg:x="519" fg:w="1"/><text x="41.8032%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.5532%" y="389" width="0.0801%" height="15" fill="rgb(253,135,25)" fg:x="519" fg:w="1"/><text x="41.8032%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="661" width="0.0801%" height="15" fill="rgb(253,208,39)" fg:x="520" fg:w="1"/><text x="41.8833%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="41.6333%" y="645" width="0.0801%" height="15" fill="rgb(226,64,12)" fg:x="520" fg:w="1"/><text x="41.8833%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6333%" y="629" width="0.0801%" height="15" fill="rgb(214,162,37)" fg:x="520" fg:w="1"/><text x="41.8833%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="41.8735%" y="597" width="0.0801%" height="15" fill="rgb(250,104,5)" fg:x="523" fg:w="1"/><text x="42.1235%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8735%" y="581" width="0.0801%" height="15" fill="rgb(220,202,50)" fg:x="523" fg:w="1"/><text x="42.1235%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8735%" y="565" width="0.0801%" height="15" fill="rgb(248,67,38)" fg:x="523" fg:w="1"/><text x="42.1235%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8735%" y="549" width="0.0801%" height="15" fill="rgb(242,94,35)" fg:x="523" fg:w="1"/><text x="42.1235%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8735%" y="533" width="0.0801%" height="15" fill="rgb(209,78,37)" fg:x="523" fg:w="1"/><text x="42.1235%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8735%" y="517" width="0.0801%" height="15" fill="rgb(230,126,47)" fg:x="523" fg:w="1"/><text x="42.1235%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="41.8735%" y="501" width="0.0801%" height="15" fill="rgb(222,110,35)" fg:x="523" fg:w="1"/><text x="42.1235%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="41.8735%" y="485" width="0.0801%" height="15" fill="rgb(233,154,20)" fg:x="523" fg:w="1"/><text x="42.1235%" y="495.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="41.7934%" y="629" width="0.2402%" height="15" fill="rgb(223,53,50)" fg:x="522" fg:w="3"/><text x="42.0434%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="41.7934%" y="613" width="0.2402%" height="15" fill="rgb(251,27,26)" fg:x="522" fg:w="3"/><text x="42.0434%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.9536%" y="597" width="0.0801%" height="15" fill="rgb(223,189,16)" fg:x="524" fg:w="1"/><text x="42.2036%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.9536%" y="581" width="0.0801%" height="15" fill="rgb(207,5,54)" fg:x="524" fg:w="1"/><text x="42.2036%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="565" width="0.0801%" height="15" fill="rgb(254,124,50)" fg:x="524" fg:w="1"/><text x="42.2036%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.9536%" y="549" width="0.0801%" height="15" fill="rgb(253,193,24)" fg:x="524" fg:w="1"/><text x="42.2036%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="533" width="0.0801%" height="15" fill="rgb(235,170,24)" fg:x="524" fg:w="1"/><text x="42.2036%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="517" width="0.0801%" height="15" fill="rgb(222,212,52)" fg:x="524" fg:w="1"/><text x="42.2036%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="501" width="0.0801%" height="15" fill="rgb(223,17,45)" fg:x="524" fg:w="1"/><text x="42.2036%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.9536%" y="485" width="0.0801%" height="15" fill="rgb(227,103,26)" fg:x="524" fg:w="1"/><text x="42.2036%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="469" width="0.0801%" height="15" fill="rgb(251,151,25)" fg:x="524" fg:w="1"/><text x="42.2036%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="41.9536%" y="453" width="0.0801%" height="15" fill="rgb(248,144,29)" fg:x="524" fg:w="1"/><text x="42.2036%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="42.0336%" y="581" width="0.0801%" height="15" fill="rgb(245,97,16)" fg:x="525" fg:w="1"/><text x="42.2836%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0336%" y="565" width="0.0801%" height="15" fill="rgb(220,200,29)" fg:x="525" fg:w="1"/><text x="42.2836%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0336%" y="549" width="0.0801%" height="15" fill="rgb(206,38,29)" fg:x="525" fg:w="1"/><text x="42.2836%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.0336%" y="533" width="0.0801%" height="15" fill="rgb(245,19,52)" fg:x="525" fg:w="1"/><text x="42.2836%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.0336%" y="517" width="0.0801%" height="15" fill="rgb(205,67,43)" fg:x="525" fg:w="1"/><text x="42.2836%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.0336%" y="501" width="0.0801%" height="15" fill="rgb(217,128,23)" fg:x="525" fg:w="1"/><text x="42.2836%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0336%" y="485" width="0.0801%" height="15" fill="rgb(210,109,28)" fg:x="525" fg:w="1"/><text x="42.2836%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.0336%" y="469" width="0.0801%" height="15" fill="rgb(233,181,7)" fg:x="525" fg:w="1"/><text x="42.2836%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.0336%" y="453" width="0.0801%" height="15" fill="rgb(244,11,22)" fg:x="525" fg:w="1"/><text x="42.2836%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.0336%" y="437" width="0.0801%" height="15" fill="rgb(205,124,54)" fg:x="525" fg:w="1"/><text x="42.2836%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.0336%" y="421" width="0.0801%" height="15" fill="rgb(218,21,27)" fg:x="525" fg:w="1"/><text x="42.2836%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.0336%" y="405" width="0.0801%" height="15" fill="rgb(224,153,33)" fg:x="525" fg:w="1"/><text x="42.2836%" y="415.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="42.1938%" y="565" width="0.0801%" height="15" fill="rgb(240,219,28)" fg:x="527" fg:w="1"/><text x="42.4438%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1938%" y="549" width="0.0801%" height="15" fill="rgb(214,80,29)" fg:x="527" fg:w="1"/><text x="42.4438%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1938%" y="533" width="0.0801%" height="15" fill="rgb(247,148,44)" fg:x="527" fg:w="1"/><text x="42.4438%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.1938%" y="517" width="0.0801%" height="15" fill="rgb(243,110,30)" fg:x="527" fg:w="1"/><text x="42.4438%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.1938%" y="501" width="0.0801%" height="15" fill="rgb(243,173,41)" fg:x="527" fg:w="1"/><text x="42.4438%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.1938%" y="485" width="0.0801%" height="15" fill="rgb(225,160,47)" fg:x="527" fg:w="1"/><text x="42.4438%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1938%" y="469" width="0.0801%" height="15" fill="rgb(215,44,21)" fg:x="527" fg:w="1"/><text x="42.4438%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.1938%" y="453" width="0.0801%" height="15" fill="rgb(248,90,3)" fg:x="527" fg:w="1"/><text x="42.4438%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.1938%" y="437" width="0.0801%" height="15" fill="rgb(220,196,49)" fg:x="527" fg:w="1"/><text x="42.4438%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.1938%" y="421" width="0.0801%" height="15" fill="rgb(217,138,14)" fg:x="527" fg:w="1"/><text x="42.4438%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.1938%" y="405" width="0.0801%" height="15" fill="rgb(219,111,20)" fg:x="527" fg:w="1"/><text x="42.4438%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.1938%" y="389" width="0.0801%" height="15" fill="rgb(218,114,4)" fg:x="527" fg:w="1"/><text x="42.4438%" y="399.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="42.2738%" y="565" width="0.0801%" height="15" fill="rgb(238,133,3)" fg:x="528" fg:w="1"/><text x="42.5238%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2738%" y="549" width="0.0801%" height="15" fill="rgb(224,95,0)" fg:x="528" fg:w="1"/><text x="42.5238%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.2738%" y="533" width="0.0801%" height="15" fill="rgb(220,169,35)" fg:x="528" fg:w="1"/><text x="42.5238%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="42.5140%" y="341" width="0.0801%" height="15" fill="rgb(242,116,47)" fg:x="531" fg:w="1"/><text x="42.7640%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="42.5140%" y="325" width="0.0801%" height="15" fill="rgb(251,42,20)" fg:x="531" fg:w="1"/><text x="42.7640%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.5140%" y="309" width="0.0801%" height="15" fill="rgb(234,7,34)" fg:x="531" fg:w="1"/><text x="42.7640%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="42.4339%" y="485" width="0.2402%" height="15" fill="rgb(243,208,13)" fg:x="530" fg:w="3"/><text x="42.6839%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="42.4339%" y="469" width="0.2402%" height="15" fill="rgb(227,33,28)" fg:x="530" fg:w="3"/><text x="42.6839%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="42.4339%" y="453" width="0.2402%" height="15" fill="rgb(250,47,37)" fg:x="530" fg:w="3"/><text x="42.6839%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="42.4339%" y="437" width="0.2402%" height="15" fill="rgb(235,111,52)" fg:x="530" fg:w="3"/><text x="42.6839%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="42.4339%" y="421" width="0.2402%" height="15" fill="rgb(223,64,28)" fg:x="530" fg:w="3"/><text x="42.6839%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="42.4339%" y="405" width="0.2402%" height="15" fill="rgb(236,67,22)" fg:x="530" fg:w="3"/><text x="42.6839%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="42.4339%" y="389" width="0.2402%" height="15" fill="rgb(243,79,24)" fg:x="530" fg:w="3"/><text x="42.6839%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="42.4339%" y="373" width="0.2402%" height="15" fill="rgb(241,225,22)" fg:x="530" fg:w="3"/><text x="42.6839%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="42.4339%" y="357" width="0.2402%" height="15" fill="rgb(228,214,26)" fg:x="530" fg:w="3"/><text x="42.6839%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5941%" y="341" width="0.0801%" height="15" fill="rgb(219,84,52)" fg:x="532" fg:w="1"/><text x="42.8441%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="42.3539%" y="549" width="0.4804%" height="15" fill="rgb(220,12,22)" fg:x="529" fg:w="6"/><text x="42.6039%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="42.3539%" y="533" width="0.4804%" height="15" fill="rgb(219,9,49)" fg:x="529" fg:w="6"/><text x="42.6039%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="42.4339%" y="517" width="0.4003%" height="15" fill="rgb(237,40,43)" fg:x="530" fg:w="5"/><text x="42.6839%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="42.4339%" y="501" width="0.4003%" height="15" fill="rgb(212,189,32)" fg:x="530" fg:w="5"/><text x="42.6839%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.6741%" y="485" width="0.1601%" height="15" fill="rgb(247,48,9)" fg:x="533" fg:w="2"/><text x="42.9241%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.6741%" y="469" width="0.1601%" height="15" fill="rgb(247,112,3)" fg:x="533" fg:w="2"/><text x="42.9241%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="42.7542%" y="453" width="0.0801%" height="15" fill="rgb(243,110,18)" fg:x="534" fg:w="1"/><text x="43.0042%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.7542%" y="437" width="0.0801%" height="15" fill="rgb(233,223,44)" fg:x="534" fg:w="1"/><text x="43.0042%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7542%" y="421" width="0.0801%" height="15" fill="rgb(245,160,20)" fg:x="534" fg:w="1"/><text x="43.0042%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="42.7542%" y="405" width="0.0801%" height="15" fill="rgb(225,37,1)" fg:x="534" fg:w="1"/><text x="43.0042%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.8343%" y="501" width="0.0801%" height="15" fill="rgb(253,227,39)" fg:x="535" fg:w="1"/><text x="43.0843%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.9143%" y="469" width="0.0801%" height="15" fill="rgb(240,179,26)" fg:x="536" fg:w="1"/><text x="43.1643%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.9143%" y="453" width="0.0801%" height="15" fill="rgb(237,212,23)" fg:x="536" fg:w="1"/><text x="43.1643%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="42.9944%" y="437" width="0.0801%" height="15" fill="rgb(221,38,11)" fg:x="537" fg:w="1"/><text x="43.2444%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="42.9944%" y="421" width="0.0801%" height="15" fill="rgb(215,85,6)" fg:x="537" fg:w="1"/><text x="43.2444%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.1545%" y="421" width="0.0801%" height="15" fill="rgb(239,64,14)" fg:x="539" fg:w="1"/><text x="43.4045%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.1545%" y="405" width="0.0801%" height="15" fill="rgb(215,150,32)" fg:x="539" fg:w="1"/><text x="43.4045%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.1545%" y="389" width="0.0801%" height="15" fill="rgb(238,15,13)" fg:x="539" fg:w="1"/><text x="43.4045%" y="399.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.1545%" y="373" width="0.0801%" height="15" fill="rgb(251,87,8)" fg:x="539" fg:w="1"/><text x="43.4045%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.2346%" y="389" width="0.0801%" height="15" fill="rgb(206,86,1)" fg:x="540" fg:w="1"/><text x="43.4846%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.2346%" y="373" width="0.0801%" height="15" fill="rgb(208,151,45)" fg:x="540" fg:w="1"/><text x="43.4846%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (17 samples, 1.36%)</title><rect x="42.0336%" y="597" width="1.3611%" height="15" fill="rgb(231,181,24)" fg:x="525" fg:w="17"/><text x="42.2836%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.28%)</title><rect x="42.1137%" y="581" width="1.2810%" height="15" fill="rgb(240,106,29)" fg:x="526" fg:w="16"/><text x="42.3637%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.04%)</title><rect x="42.3539%" y="565" width="1.0408%" height="15" fill="rgb(227,166,11)" fg:x="529" fg:w="13"/><text x="42.6039%" y="575.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="42.8343%" y="549" width="0.5604%" height="15" fill="rgb(254,14,34)" fg:x="535" fg:w="7"/><text x="43.0843%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="42.8343%" y="533" width="0.5604%" height="15" fill="rgb(223,222,6)" fg:x="535" fg:w="7"/><text x="43.0843%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="42.8343%" y="517" width="0.5604%" height="15" fill="rgb(245,69,24)" fg:x="535" fg:w="7"/><text x="43.0843%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="42.9143%" y="501" width="0.4804%" height="15" fill="rgb(213,193,7)" fg:x="536" fg:w="6"/><text x="43.1643%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="42.9143%" y="485" width="0.4804%" height="15" fill="rgb(237,92,51)" fg:x="536" fg:w="6"/><text x="43.1643%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="42.9944%" y="469" width="0.4003%" height="15" fill="rgb(225,194,6)" fg:x="537" fg:w="5"/><text x="43.2444%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="42.9944%" y="453" width="0.4003%" height="15" fill="rgb(205,159,49)" fg:x="537" fg:w="5"/><text x="43.2444%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.0745%" y="437" width="0.3203%" height="15" fill="rgb(219,69,2)" fg:x="538" fg:w="4"/><text x="43.3245%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.2346%" y="421" width="0.1601%" height="15" fill="rgb(215,107,24)" fg:x="540" fg:w="2"/><text x="43.4846%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.2346%" y="405" width="0.1601%" height="15" fill="rgb(249,208,29)" fg:x="540" fg:w="2"/><text x="43.4846%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.3147%" y="389" width="0.0801%" height="15" fill="rgb(213,147,10)" fg:x="541" fg:w="1"/><text x="43.5647%" y="399.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="43.3147%" y="373" width="0.0801%" height="15" fill="rgb(254,140,42)" fg:x="541" fg:w="1"/><text x="43.5647%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="43.3947%" y="597" width="0.0801%" height="15" fill="rgb(249,9,15)" fg:x="542" fg:w="1"/><text x="43.6447%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.3947%" y="581" width="0.0801%" height="15" fill="rgb(210,19,33)" fg:x="542" fg:w="1"/><text x="43.6447%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (22 samples, 1.76%)</title><rect x="41.7934%" y="645" width="1.7614%" height="15" fill="rgb(241,121,22)" fg:x="522" fg:w="22"/><text x="42.0434%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (19 samples, 1.52%)</title><rect x="42.0336%" y="629" width="1.5212%" height="15" fill="rgb(244,69,52)" fg:x="525" fg:w="19"/><text x="42.2836%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (19 samples, 1.52%)</title><rect x="42.0336%" y="613" width="1.5212%" height="15" fill="rgb(244,191,54)" fg:x="525" fg:w="19"/><text x="42.2836%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4748%" y="597" width="0.0801%" height="15" fill="rgb(250,3,53)" fg:x="543" fg:w="1"/><text x="43.7248%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4748%" y="581" width="0.0801%" height="15" fill="rgb(205,77,3)" fg:x="543" fg:w="1"/><text x="43.7248%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.4748%" y="565" width="0.0801%" height="15" fill="rgb(207,155,3)" fg:x="543" fg:w="1"/><text x="43.7248%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.4748%" y="549" width="0.0801%" height="15" fill="rgb(224,79,2)" fg:x="543" fg:w="1"/><text x="43.7248%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="43.4748%" y="533" width="0.0801%" height="15" fill="rgb(243,172,5)" fg:x="543" fg:w="1"/><text x="43.7248%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="43.5548%" y="613" width="0.0801%" height="15" fill="rgb(217,23,43)" fg:x="544" fg:w="1"/><text x="43.8048%" y="623.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="43.5548%" y="597" width="0.0801%" height="15" fill="rgb(223,109,20)" fg:x="544" fg:w="1"/><text x="43.8048%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5548%" y="581" width="0.0801%" height="15" fill="rgb(232,159,21)" fg:x="544" fg:w="1"/><text x="43.8048%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5548%" y="565" width="0.0801%" height="15" fill="rgb(219,58,2)" fg:x="544" fg:w="1"/><text x="43.8048%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5548%" y="549" width="0.0801%" height="15" fill="rgb(241,56,8)" fg:x="544" fg:w="1"/><text x="43.8048%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.5548%" y="533" width="0.0801%" height="15" fill="rgb(249,10,27)" fg:x="544" fg:w="1"/><text x="43.8048%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.5548%" y="517" width="0.0801%" height="15" fill="rgb(248,177,5)" fg:x="544" fg:w="1"/><text x="43.8048%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.5548%" y="501" width="0.0801%" height="15" fill="rgb(239,12,30)" fg:x="544" fg:w="1"/><text x="43.8048%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.5548%" y="485" width="0.0801%" height="15" fill="rgb(229,164,25)" fg:x="544" fg:w="1"/><text x="43.8048%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.5548%" y="469" width="0.0801%" height="15" fill="rgb(231,217,50)" fg:x="544" fg:w="1"/><text x="43.8048%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6349%" y="597" width="0.0801%" height="15" fill="rgb(247,99,32)" fg:x="545" fg:w="1"/><text x="43.8849%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.6349%" y="581" width="0.0801%" height="15" fill="rgb(240,74,50)" fg:x="545" fg:w="1"/><text x="43.8849%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.6349%" y="565" width="0.0801%" height="15" fill="rgb(218,54,8)" fg:x="545" fg:w="1"/><text x="43.8849%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.6349%" y="549" width="0.0801%" height="15" fill="rgb(227,132,20)" fg:x="545" fg:w="1"/><text x="43.8849%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.6349%" y="533" width="0.0801%" height="15" fill="rgb(232,134,12)" fg:x="545" fg:w="1"/><text x="43.8849%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6349%" y="517" width="0.0801%" height="15" fill="rgb(250,129,18)" fg:x="545" fg:w="1"/><text x="43.8849%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.6349%" y="501" width="0.0801%" height="15" fill="rgb(232,129,47)" fg:x="545" fg:w="1"/><text x="43.8849%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.6349%" y="485" width="0.0801%" height="15" fill="rgb(230,31,40)" fg:x="545" fg:w="1"/><text x="43.8849%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.6349%" y="469" width="0.0801%" height="15" fill="rgb(232,126,10)" fg:x="545" fg:w="1"/><text x="43.8849%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.6349%" y="453" width="0.0801%" height="15" fill="rgb(205,46,31)" fg:x="545" fg:w="1"/><text x="43.8849%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.6349%" y="437" width="0.0801%" height="15" fill="rgb(232,37,37)" fg:x="545" fg:w="1"/><text x="43.8849%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6349%" y="421" width="0.0801%" height="15" fill="rgb(240,91,16)" fg:x="545" fg:w="1"/><text x="43.8849%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.7150%" y="405" width="0.0801%" height="15" fill="rgb(224,160,9)" fg:x="546" fg:w="1"/><text x="43.9650%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="43.7150%" y="389" width="0.0801%" height="15" fill="rgb(215,116,14)" fg:x="546" fg:w="1"/><text x="43.9650%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="43.7150%" y="373" width="0.0801%" height="15" fill="rgb(235,46,36)" fg:x="546" fg:w="1"/><text x="43.9650%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="43.7150%" y="357" width="0.0801%" height="15" fill="rgb(238,39,28)" fg:x="546" fg:w="1"/><text x="43.9650%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="43.7150%" y="341" width="0.0801%" height="15" fill="rgb(242,125,29)" fg:x="546" fg:w="1"/><text x="43.9650%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="43.7150%" y="325" width="0.0801%" height="15" fill="rgb(238,211,30)" fg:x="546" fg:w="1"/><text x="43.9650%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.7150%" y="309" width="0.0801%" height="15" fill="rgb(227,201,28)" fg:x="546" fg:w="1"/><text x="43.9650%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="43.7150%" y="293" width="0.0801%" height="15" fill="rgb(238,77,29)" fg:x="546" fg:w="1"/><text x="43.9650%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.7150%" y="277" width="0.0801%" height="15" fill="rgb(213,221,40)" fg:x="546" fg:w="1"/><text x="43.9650%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="43.7150%" y="261" width="0.0801%" height="15" fill="rgb(226,220,44)" fg:x="546" fg:w="1"/><text x="43.9650%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="43.7150%" y="245" width="0.0801%" height="15" fill="rgb(228,90,23)" fg:x="546" fg:w="1"/><text x="43.9650%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="43.5548%" y="629" width="0.4003%" height="15" fill="rgb(235,72,29)" fg:x="544" fg:w="5"/><text x="43.8048%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="43.6349%" y="613" width="0.3203%" height="15" fill="rgb(248,117,39)" fg:x="545" fg:w="4"/><text x="43.8849%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="43.7150%" y="597" width="0.2402%" height="15" fill="rgb(225,43,28)" fg:x="546" fg:w="3"/><text x="43.9650%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="581" width="0.2402%" height="15" fill="rgb(240,93,4)" fg:x="546" fg:w="3"/><text x="43.9650%" y="591.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.7150%" y="565" width="0.2402%" height="15" fill="rgb(234,178,27)" fg:x="546" fg:w="3"/><text x="43.9650%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="549" width="0.2402%" height="15" fill="rgb(254,88,22)" fg:x="546" fg:w="3"/><text x="43.9650%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="533" width="0.2402%" height="15" fill="rgb(240,206,50)" fg:x="546" fg:w="3"/><text x="43.9650%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="517" width="0.2402%" height="15" fill="rgb(249,103,8)" fg:x="546" fg:w="3"/><text x="43.9650%" y="527.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.7150%" y="501" width="0.2402%" height="15" fill="rgb(241,178,36)" fg:x="546" fg:w="3"/><text x="43.9650%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="485" width="0.2402%" height="15" fill="rgb(246,110,15)" fg:x="546" fg:w="3"/><text x="43.9650%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="469" width="0.2402%" height="15" fill="rgb(207,14,43)" fg:x="546" fg:w="3"/><text x="43.9650%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="453" width="0.2402%" height="15" fill="rgb(253,219,19)" fg:x="546" fg:w="3"/><text x="43.9650%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="43.7150%" y="437" width="0.2402%" height="15" fill="rgb(216,126,5)" fg:x="546" fg:w="3"/><text x="43.9650%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="43.7150%" y="421" width="0.2402%" height="15" fill="rgb(218,78,42)" fg:x="546" fg:w="3"/><text x="43.9650%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="43.7950%" y="405" width="0.1601%" height="15" fill="rgb(215,154,40)" fg:x="547" fg:w="2"/><text x="44.0450%" y="415.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="43.7950%" y="389" width="0.1601%" height="15" fill="rgb(235,129,32)" fg:x="547" fg:w="2"/><text x="44.0450%" y="399.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="43.8751%" y="373" width="0.0801%" height="15" fill="rgb(218,51,8)" fg:x="548" fg:w="1"/><text x="44.1251%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.9552%" y="629" width="0.0801%" height="15" fill="rgb(245,48,4)" fg:x="549" fg:w="1"/><text x="44.2052%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9552%" y="613" width="0.0801%" height="15" fill="rgb(250,175,12)" fg:x="549" fg:w="1"/><text x="44.2052%" y="623.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (30 samples, 2.40%)</title><rect x="41.7134%" y="661" width="2.4019%" height="15" fill="rgb(237,95,40)" fg:x="521" fg:w="30"/><text x="41.9634%" y="671.50">en..</text></g><g><title>engine::session::Session::world (7 samples, 0.56%)</title><rect x="43.5548%" y="645" width="0.5604%" height="15" fill="rgb(244,120,0)" fg:x="544" fg:w="7"/><text x="43.8048%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0352%" y="629" width="0.0801%" height="15" fill="rgb(241,19,42)" fg:x="550" fg:w="1"/><text x="44.2852%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="44.9159%" y="549" width="0.1601%" height="15" fill="rgb(217,174,48)" fg:x="561" fg:w="2"/><text x="45.1659%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.9960%" y="533" width="0.0801%" height="15" fill="rgb(239,36,38)" fg:x="562" fg:w="1"/><text x="45.2460%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="44.9159%" y="565" width="0.4003%" height="15" fill="rgb(220,63,49)" fg:x="561" fg:w="5"/><text x="45.1659%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="45.0761%" y="549" width="0.2402%" height="15" fill="rgb(240,101,13)" fg:x="563" fg:w="3"/><text x="45.3261%" y="559.50"></text></g><g><title>__libc_free (6 samples, 0.48%)</title><rect x="45.3163%" y="565" width="0.4804%" height="15" fill="rgb(209,184,51)" fg:x="566" fg:w="6"/><text x="45.5663%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="45.7966%" y="549" width="0.2402%" height="15" fill="rgb(206,136,39)" fg:x="572" fg:w="3"/><text x="46.0466%" y="559.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="45.7966%" y="533" width="0.2402%" height="15" fill="rgb(254,47,45)" fg:x="572" fg:w="3"/><text x="46.0466%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="44.7558%" y="581" width="1.3611%" height="15" fill="rgb(252,103,20)" fg:x="559" fg:w="17"/><text x="45.0058%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (4 samples, 0.32%)</title><rect x="45.7966%" y="565" width="0.3203%" height="15" fill="rgb(230,69,12)" fg:x="572" fg:w="4"/><text x="46.0466%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.0368%" y="549" width="0.0801%" height="15" fill="rgb(219,2,28)" fg:x="575" fg:w="1"/><text x="46.2868%" y="559.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="46.1169%" y="581" width="0.4003%" height="15" fill="rgb(210,9,12)" fg:x="576" fg:w="5"/><text x="46.3669%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="44.5156%" y="597" width="2.0817%" height="15" fill="rgb(235,99,33)" fg:x="556" fg:w="26"/><text x="44.7656%" y="607.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="46.5172%" y="581" width="0.0801%" height="15" fill="rgb(230,11,38)" fg:x="581" fg:w="1"/><text x="46.7672%" y="591.50"></text></g><g><title>__libc_free (12 samples, 0.96%)</title><rect x="46.5973%" y="597" width="0.9608%" height="15" fill="rgb(217,129,0)" fg:x="582" fg:w="12"/><text x="46.8473%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 3.36%)</title><rect x="44.2754%" y="613" width="3.3627%" height="15" fill="rgb(222,198,4)" fg:x="553" fg:w="42"/><text x="44.5254%" y="623.50">&lt;ha..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="47.5580%" y="597" width="0.0801%" height="15" fill="rgb(246,170,27)" fg:x="594" fg:w="1"/><text x="47.8080%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (43 samples, 3.44%)</title><rect x="44.2754%" y="629" width="3.4428%" height="15" fill="rgb(229,17,28)" fg:x="553" fg:w="43"/><text x="44.5254%" y="639.50">cor..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.6381%" y="613" width="0.0801%" height="15" fill="rgb(233,198,48)" fg:x="595" fg:w="1"/><text x="47.8881%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="47.8783%" y="581" width="0.1601%" height="15" fill="rgb(238,103,23)" fg:x="598" fg:w="2"/><text x="48.1283%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.0384%" y="581" width="0.1601%" height="15" fill="rgb(206,91,41)" fg:x="600" fg:w="2"/><text x="48.2884%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="47.8783%" y="597" width="0.4804%" height="15" fill="rgb(227,34,25)" fg:x="598" fg:w="6"/><text x="48.1283%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="48.1986%" y="581" width="0.1601%" height="15" fill="rgb(210,110,44)" fg:x="602" fg:w="2"/><text x="48.4486%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="48.2786%" y="565" width="0.0801%" height="15" fill="rgb(216,189,8)" fg:x="603" fg:w="1"/><text x="48.5286%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.2786%" y="549" width="0.0801%" height="15" fill="rgb(234,9,46)" fg:x="603" fg:w="1"/><text x="48.5286%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.2786%" y="533" width="0.0801%" height="15" fill="rgb(251,200,5)" fg:x="603" fg:w="1"/><text x="48.5286%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.2786%" y="517" width="0.0801%" height="15" fill="rgb(238,165,37)" fg:x="603" fg:w="1"/><text x="48.5286%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="48.2786%" y="501" width="0.0801%" height="15" fill="rgb(232,77,38)" fg:x="603" fg:w="1"/><text x="48.5286%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.08%)</title><rect x="48.2786%" y="485" width="0.0801%" height="15" fill="rgb(253,179,33)" fg:x="603" fg:w="1"/><text x="48.5286%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.08%)</title><rect x="48.2786%" y="469" width="0.0801%" height="15" fill="rgb(240,13,35)" fg:x="603" fg:w="1"/><text x="48.5286%" y="479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="48.3587%" y="597" width="0.1601%" height="15" fill="rgb(242,150,49)" fg:x="604" fg:w="2"/><text x="48.6087%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="48.3587%" y="581" width="0.1601%" height="15" fill="rgb(237,176,28)" fg:x="604" fg:w="2"/><text x="48.6087%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.3587%" y="565" width="0.1601%" height="15" fill="rgb(214,176,33)" fg:x="604" fg:w="2"/><text x="48.6087%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="48.4388%" y="549" width="0.0801%" height="15" fill="rgb(214,25,12)" fg:x="605" fg:w="1"/><text x="48.6888%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.5989%" y="565" width="0.1601%" height="15" fill="rgb(238,190,20)" fg:x="607" fg:w="2"/><text x="48.8489%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="48.5188%" y="597" width="0.3203%" height="15" fill="rgb(208,11,19)" fg:x="606" fg:w="4"/><text x="48.7688%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="48.5188%" y="581" width="0.3203%" height="15" fill="rgb(239,90,4)" fg:x="606" fg:w="4"/><text x="48.7688%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="48.7590%" y="565" width="0.0801%" height="15" fill="rgb(248,110,3)" fg:x="609" fg:w="1"/><text x="49.0090%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="48.7590%" y="549" width="0.0801%" height="15" fill="rgb(210,41,30)" fg:x="609" fg:w="1"/><text x="49.0090%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7590%" y="533" width="0.0801%" height="15" fill="rgb(239,36,8)" fg:x="609" fg:w="1"/><text x="49.0090%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="48.9992%" y="533" width="0.0801%" height="15" fill="rgb(237,201,47)" fg:x="612" fg:w="1"/><text x="49.2492%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="49.2394%" y="469" width="0.0801%" height="15" fill="rgb(224,140,29)" fg:x="615" fg:w="1"/><text x="49.4894%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="49.2394%" y="453" width="0.0801%" height="15" fill="rgb(231,209,17)" fg:x="615" fg:w="1"/><text x="49.4894%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.2394%" y="437" width="0.0801%" height="15" fill="rgb(249,196,1)" fg:x="615" fg:w="1"/><text x="49.4894%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.2394%" y="421" width="0.0801%" height="15" fill="rgb(223,207,51)" fg:x="615" fg:w="1"/><text x="49.4894%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.2394%" y="405" width="0.0801%" height="15" fill="rgb(210,14,40)" fg:x="615" fg:w="1"/><text x="49.4894%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.2394%" y="389" width="0.0801%" height="15" fill="rgb(250,20,52)" fg:x="615" fg:w="1"/><text x="49.4894%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.2394%" y="373" width="0.0801%" height="15" fill="rgb(241,46,11)" fg:x="615" fg:w="1"/><text x="49.4894%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.2394%" y="357" width="0.0801%" height="15" fill="rgb(219,105,5)" fg:x="615" fg:w="1"/><text x="49.4894%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.2394%" y="341" width="0.0801%" height="15" fill="rgb(252,77,35)" fg:x="615" fg:w="1"/><text x="49.4894%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.2394%" y="325" width="0.0801%" height="15" fill="rgb(243,119,2)" fg:x="615" fg:w="1"/><text x="49.4894%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="49.3195%" y="469" width="0.0801%" height="15" fill="rgb(206,82,28)" fg:x="616" fg:w="1"/><text x="49.5695%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3195%" y="453" width="0.0801%" height="15" fill="rgb(227,120,12)" fg:x="616" fg:w="1"/><text x="49.5695%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3195%" y="437" width="0.0801%" height="15" fill="rgb(229,134,41)" fg:x="616" fg:w="1"/><text x="49.5695%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.3195%" y="421" width="0.0801%" height="15" fill="rgb(239,96,32)" fg:x="616" fg:w="1"/><text x="49.5695%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.3195%" y="405" width="0.0801%" height="15" fill="rgb(225,46,27)" fg:x="616" fg:w="1"/><text x="49.5695%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.3195%" y="389" width="0.0801%" height="15" fill="rgb(215,168,2)" fg:x="616" fg:w="1"/><text x="49.5695%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3195%" y="373" width="0.0801%" height="15" fill="rgb(207,170,52)" fg:x="616" fg:w="1"/><text x="49.5695%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3195%" y="357" width="0.0801%" height="15" fill="rgb(237,198,36)" fg:x="616" fg:w="1"/><text x="49.5695%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.3195%" y="341" width="0.0801%" height="15" fill="rgb(213,27,14)" fg:x="616" fg:w="1"/><text x="49.5695%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.3195%" y="325" width="0.0801%" height="15" fill="rgb(218,77,5)" fg:x="616" fg:w="1"/><text x="49.5695%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.3195%" y="309" width="0.0801%" height="15" fill="rgb(230,219,39)" fg:x="616" fg:w="1"/><text x="49.5695%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.3195%" y="293" width="0.0801%" height="15" fill="rgb(245,177,7)" fg:x="616" fg:w="1"/><text x="49.5695%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.3195%" y="277" width="0.0801%" height="15" fill="rgb(246,44,46)" fg:x="616" fg:w="1"/><text x="49.5695%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="49.1593%" y="517" width="0.3203%" height="15" fill="rgb(207,173,15)" fg:x="614" fg:w="4"/><text x="49.4093%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="49.2394%" y="501" width="0.2402%" height="15" fill="rgb(245,170,50)" fg:x="615" fg:w="3"/><text x="49.4894%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="49.2394%" y="485" width="0.2402%" height="15" fill="rgb(233,156,21)" fg:x="615" fg:w="3"/><text x="49.4894%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="49.3995%" y="469" width="0.0801%" height="15" fill="rgb(253,146,27)" fg:x="617" fg:w="1"/><text x="49.6495%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.3995%" y="453" width="0.0801%" height="15" fill="rgb(247,66,29)" fg:x="617" fg:w="1"/><text x="49.6495%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="437" width="0.0801%" height="15" fill="rgb(218,207,26)" fg:x="617" fg:w="1"/><text x="49.6495%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3995%" y="421" width="0.0801%" height="15" fill="rgb(234,93,26)" fg:x="617" fg:w="1"/><text x="49.6495%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="405" width="0.0801%" height="15" fill="rgb(214,75,48)" fg:x="617" fg:w="1"/><text x="49.6495%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="389" width="0.0801%" height="15" fill="rgb(229,119,22)" fg:x="617" fg:w="1"/><text x="49.6495%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="373" width="0.0801%" height="15" fill="rgb(226,153,19)" fg:x="617" fg:w="1"/><text x="49.6495%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3995%" y="357" width="0.0801%" height="15" fill="rgb(220,204,36)" fg:x="617" fg:w="1"/><text x="49.6495%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="341" width="0.0801%" height="15" fill="rgb(253,181,43)" fg:x="617" fg:w="1"/><text x="49.6495%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="325" width="0.0801%" height="15" fill="rgb(211,41,51)" fg:x="617" fg:w="1"/><text x="49.6495%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="309" width="0.0801%" height="15" fill="rgb(207,215,0)" fg:x="617" fg:w="1"/><text x="49.6495%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3995%" y="293" width="0.0801%" height="15" fill="rgb(212,153,10)" fg:x="617" fg:w="1"/><text x="49.6495%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3995%" y="277" width="0.0801%" height="15" fill="rgb(251,171,36)" fg:x="617" fg:w="1"/><text x="49.6495%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3995%" y="261" width="0.0801%" height="15" fill="rgb(225,219,41)" fg:x="617" fg:w="1"/><text x="49.6495%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3995%" y="245" width="0.0801%" height="15" fill="rgb(208,200,1)" fg:x="617" fg:w="1"/><text x="49.6495%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.3995%" y="229" width="0.0801%" height="15" fill="rgb(206,75,47)" fg:x="617" fg:w="1"/><text x="49.6495%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.3995%" y="213" width="0.0801%" height="15" fill="rgb(248,3,16)" fg:x="617" fg:w="1"/><text x="49.6495%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.3995%" y="197" width="0.0801%" height="15" fill="rgb(242,157,36)" fg:x="617" fg:w="1"/><text x="49.6495%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.3995%" y="181" width="0.0801%" height="15" fill="rgb(215,175,11)" fg:x="617" fg:w="1"/><text x="49.6495%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3995%" y="165" width="0.0801%" height="15" fill="rgb(252,222,22)" fg:x="617" fg:w="1"/><text x="49.6495%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3995%" y="149" width="0.0801%" height="15" fill="rgb(250,121,35)" fg:x="617" fg:w="1"/><text x="49.6495%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3995%" y="133" width="0.0801%" height="15" fill="rgb(233,120,49)" fg:x="617" fg:w="1"/><text x="49.6495%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.3995%" y="117" width="0.0801%" height="15" fill="rgb(205,201,14)" fg:x="617" fg:w="1"/><text x="49.6495%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3995%" y="101" width="0.0801%" height="15" fill="rgb(219,58,45)" fg:x="617" fg:w="1"/><text x="49.6495%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.3995%" y="85" width="0.0801%" height="15" fill="rgb(251,65,12)" fg:x="617" fg:w="1"/><text x="49.6495%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.3995%" y="69" width="0.0801%" height="15" fill="rgb(224,47,31)" fg:x="617" fg:w="1"/><text x="49.6495%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.3995%" y="53" width="0.0801%" height="15" fill="rgb(233,74,26)" fg:x="617" fg:w="1"/><text x="49.6495%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.3995%" y="37" width="0.0801%" height="15" fill="rgb(231,211,31)" fg:x="617" fg:w="1"/><text x="49.6495%" y="47.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.5596%" y="501" width="0.1601%" height="15" fill="rgb(239,167,5)" fg:x="619" fg:w="2"/><text x="49.8096%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="49.7198%" y="501" width="0.1601%" height="15" fill="rgb(241,85,0)" fg:x="621" fg:w="2"/><text x="49.9698%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7998%" y="485" width="0.0801%" height="15" fill="rgb(229,130,21)" fg:x="622" fg:w="1"/><text x="50.0498%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.8799%" y="485" width="0.0801%" height="15" fill="rgb(254,84,49)" fg:x="623" fg:w="1"/><text x="50.1299%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="49.9600%" y="485" width="0.1601%" height="15" fill="rgb(235,85,21)" fg:x="624" fg:w="2"/><text x="50.2100%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0400%" y="469" width="0.0801%" height="15" fill="rgb(246,128,52)" fg:x="625" fg:w="1"/><text x="50.2900%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="50.2002%" y="437" width="0.0801%" height="15" fill="rgb(243,114,49)" fg:x="627" fg:w="1"/><text x="50.4502%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.2002%" y="421" width="0.0801%" height="15" fill="rgb(240,224,22)" fg:x="627" fg:w="1"/><text x="50.4502%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.2002%" y="405" width="0.0801%" height="15" fill="rgb(247,201,52)" fg:x="627" fg:w="1"/><text x="50.4502%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.2002%" y="389" width="0.0801%" height="15" fill="rgb(231,70,45)" fg:x="627" fg:w="1"/><text x="50.4502%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.2002%" y="373" width="0.0801%" height="15" fill="rgb(217,215,20)" fg:x="627" fg:w="1"/><text x="50.4502%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.2002%" y="357" width="0.0801%" height="15" fill="rgb(226,170,30)" fg:x="627" fg:w="1"/><text x="50.4502%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.2002%" y="341" width="0.0801%" height="15" fill="rgb(220,190,43)" fg:x="627" fg:w="1"/><text x="50.4502%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.2002%" y="325" width="0.0801%" height="15" fill="rgb(218,20,18)" fg:x="627" fg:w="1"/><text x="50.4502%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.2002%" y="309" width="0.0801%" height="15" fill="rgb(245,37,26)" fg:x="627" fg:w="1"/><text x="50.4502%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.2002%" y="293" width="0.0801%" height="15" fill="rgb(241,127,29)" fg:x="627" fg:w="1"/><text x="50.4502%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.2002%" y="277" width="0.0801%" height="15" fill="rgb(241,33,26)" fg:x="627" fg:w="1"/><text x="50.4502%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.2002%" y="261" width="0.0801%" height="15" fill="rgb(220,106,21)" fg:x="627" fg:w="1"/><text x="50.4502%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.2002%" y="245" width="0.0801%" height="15" fill="rgb(225,125,35)" fg:x="627" fg:w="1"/><text x="50.4502%" y="255.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.2802%" y="421" width="0.0801%" height="15" fill="rgb(248,80,22)" fg:x="628" fg:w="1"/><text x="50.5302%" y="431.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="50.4404%" y="341" width="0.0801%" height="15" fill="rgb(231,117,39)" fg:x="630" fg:w="1"/><text x="50.6904%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.5204%" y="341" width="0.1601%" height="15" fill="rgb(239,183,16)" fg:x="631" fg:w="2"/><text x="50.7704%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.6805%" y="309" width="0.0801%" height="15" fill="rgb(221,61,19)" fg:x="633" fg:w="1"/><text x="50.9305%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6805%" y="293" width="0.0801%" height="15" fill="rgb(239,196,44)" fg:x="633" fg:w="1"/><text x="50.9305%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7606%" y="245" width="0.0801%" height="15" fill="rgb(206,113,19)" fg:x="634" fg:w="1"/><text x="51.0106%" y="255.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.56%)</title><rect x="50.3603%" y="405" width="0.5604%" height="15" fill="rgb(245,114,12)" fg:x="629" fg:w="7"/><text x="50.6103%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.56%)</title><rect x="50.3603%" y="389" width="0.5604%" height="15" fill="rgb(247,89,39)" fg:x="629" fg:w="7"/><text x="50.6103%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="50.3603%" y="373" width="0.5604%" height="15" fill="rgb(213,85,14)" fg:x="629" fg:w="7"/><text x="50.6103%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="50.3603%" y="357" width="0.5604%" height="15" fill="rgb(249,206,33)" fg:x="629" fg:w="7"/><text x="50.6103%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="50.6805%" y="341" width="0.2402%" height="15" fill="rgb(235,167,47)" fg:x="633" fg:w="3"/><text x="50.9305%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.6805%" y="325" width="0.2402%" height="15" fill="rgb(217,177,16)" fg:x="633" fg:w="3"/><text x="50.9305%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="50.7606%" y="309" width="0.1601%" height="15" fill="rgb(250,228,29)" fg:x="634" fg:w="2"/><text x="51.0106%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7606%" y="293" width="0.1601%" height="15" fill="rgb(216,195,42)" fg:x="634" fg:w="2"/><text x="51.0106%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.7606%" y="277" width="0.1601%" height="15" fill="rgb(232,192,32)" fg:x="634" fg:w="2"/><text x="51.0106%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7606%" y="261" width="0.1601%" height="15" fill="rgb(211,8,47)" fg:x="634" fg:w="2"/><text x="51.0106%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.8407%" y="245" width="0.0801%" height="15" fill="rgb(251,201,9)" fg:x="635" fg:w="1"/><text x="51.0907%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.8407%" y="229" width="0.0801%" height="15" fill="rgb(206,185,47)" fg:x="635" fg:w="1"/><text x="51.0907%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.8407%" y="213" width="0.0801%" height="15" fill="rgb(245,54,32)" fg:x="635" fg:w="1"/><text x="51.0907%" y="223.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="50.9207%" y="357" width="0.2402%" height="15" fill="rgb(208,1,8)" fg:x="636" fg:w="3"/><text x="51.1707%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="51.0809%" y="341" width="0.0801%" height="15" fill="rgb(228,57,24)" fg:x="638" fg:w="1"/><text x="51.3309%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (28 samples, 2.24%)</title><rect x="49.0793%" y="533" width="2.2418%" height="15" fill="rgb(251,24,8)" fg:x="613" fg:w="28"/><text x="49.3293%" y="543.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (23 samples, 1.84%)</title><rect x="49.4796%" y="517" width="1.8415%" height="15" fill="rgb(236,196,50)" fg:x="618" fg:w="23"/><text x="49.7296%" y="527.50">a..</text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (18 samples, 1.44%)</title><rect x="49.8799%" y="501" width="1.4412%" height="15" fill="rgb(246,222,29)" fg:x="623" fg:w="18"/><text x="50.1299%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (15 samples, 1.20%)</title><rect x="50.1201%" y="485" width="1.2010%" height="15" fill="rgb(211,34,40)" fg:x="626" fg:w="15"/><text x="50.3701%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.20%)</title><rect x="50.1201%" y="469" width="1.2010%" height="15" fill="rgb(210,66,51)" fg:x="626" fg:w="15"/><text x="50.3701%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.12%)</title><rect x="50.2002%" y="453" width="1.1209%" height="15" fill="rgb(250,56,43)" fg:x="627" fg:w="14"/><text x="50.4502%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (13 samples, 1.04%)</title><rect x="50.2802%" y="437" width="1.0408%" height="15" fill="rgb(240,111,50)" fg:x="628" fg:w="13"/><text x="50.5302%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.96%)</title><rect x="50.3603%" y="421" width="0.9608%" height="15" fill="rgb(209,117,13)" fg:x="629" fg:w="12"/><text x="50.6103%" y="431.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="50.9207%" y="405" width="0.4003%" height="15" fill="rgb(232,164,45)" fg:x="636" fg:w="5"/><text x="51.1707%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="50.9207%" y="389" width="0.4003%" height="15" fill="rgb(205,69,32)" fg:x="636" fg:w="5"/><text x="51.1707%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="50.9207%" y="373" width="0.4003%" height="15" fill="rgb(240,147,45)" fg:x="636" fg:w="5"/><text x="51.1707%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.1609%" y="357" width="0.1601%" height="15" fill="rgb(221,94,48)" fg:x="639" fg:w="2"/><text x="51.4109%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.2410%" y="341" width="0.0801%" height="15" fill="rgb(249,209,17)" fg:x="640" fg:w="1"/><text x="51.4910%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.2410%" y="325" width="0.0801%" height="15" fill="rgb(228,57,28)" fg:x="640" fg:w="1"/><text x="51.4910%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.2410%" y="309" width="0.0801%" height="15" fill="rgb(250,133,26)" fg:x="640" fg:w="1"/><text x="51.4910%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.2410%" y="293" width="0.0801%" height="15" fill="rgb(254,15,16)" fg:x="640" fg:w="1"/><text x="51.4910%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="51.2410%" y="277" width="0.0801%" height="15" fill="rgb(209,147,42)" fg:x="640" fg:w="1"/><text x="51.4910%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2410%" y="261" width="0.0801%" height="15" fill="rgb(208,5,29)" fg:x="640" fg:w="1"/><text x="51.4910%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="51.2410%" y="245" width="0.0801%" height="15" fill="rgb(250,73,31)" fg:x="640" fg:w="1"/><text x="51.4910%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.2410%" y="229" width="0.0801%" height="15" fill="rgb(238,45,10)" fg:x="640" fg:w="1"/><text x="51.4910%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="51.3211%" y="533" width="0.0801%" height="15" fill="rgb(214,104,5)" fg:x="641" fg:w="1"/><text x="51.5711%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.3211%" y="517" width="0.0801%" height="15" fill="rgb(242,217,19)" fg:x="641" fg:w="1"/><text x="51.5711%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4812%" y="405" width="0.0801%" height="15" fill="rgb(246,113,27)" fg:x="643" fg:w="1"/><text x="51.7312%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.4812%" y="389" width="0.0801%" height="15" fill="rgb(221,34,27)" fg:x="643" fg:w="1"/><text x="51.7312%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.4812%" y="373" width="0.0801%" height="15" fill="rgb(246,109,6)" fg:x="643" fg:w="1"/><text x="51.7312%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.4812%" y="357" width="0.0801%" height="15" fill="rgb(217,12,25)" fg:x="643" fg:w="1"/><text x="51.7312%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.4812%" y="341" width="0.0801%" height="15" fill="rgb(250,195,5)" fg:x="643" fg:w="1"/><text x="51.7312%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.4812%" y="325" width="0.0801%" height="15" fill="rgb(244,140,45)" fg:x="643" fg:w="1"/><text x="51.7312%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.4812%" y="309" width="0.0801%" height="15" fill="rgb(230,64,14)" fg:x="643" fg:w="1"/><text x="51.7312%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.4812%" y="485" width="0.1601%" height="15" fill="rgb(206,27,27)" fg:x="643" fg:w="2"/><text x="51.7312%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.4812%" y="469" width="0.1601%" height="15" fill="rgb(230,14,50)" fg:x="643" fg:w="2"/><text x="51.7312%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.4812%" y="453" width="0.1601%" height="15" fill="rgb(237,172,14)" fg:x="643" fg:w="2"/><text x="51.7312%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.4812%" y="437" width="0.1601%" height="15" fill="rgb(209,25,21)" fg:x="643" fg:w="2"/><text x="51.7312%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.4812%" y="421" width="0.1601%" height="15" fill="rgb(248,148,22)" fg:x="643" fg:w="2"/><text x="51.7312%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.5612%" y="405" width="0.0801%" height="15" fill="rgb(234,100,22)" fg:x="644" fg:w="1"/><text x="51.8112%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.5612%" y="389" width="0.0801%" height="15" fill="rgb(210,20,30)" fg:x="644" fg:w="1"/><text x="51.8112%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.6413%" y="485" width="0.2402%" height="15" fill="rgb(232,58,0)" fg:x="645" fg:w="3"/><text x="51.8913%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.6413%" y="469" width="0.2402%" height="15" fill="rgb(221,68,13)" fg:x="645" fg:w="3"/><text x="51.8913%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.6413%" y="453" width="0.2402%" height="15" fill="rgb(231,194,11)" fg:x="645" fg:w="3"/><text x="51.8913%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.6413%" y="437" width="0.2402%" height="15" fill="rgb(235,51,41)" fg:x="645" fg:w="3"/><text x="51.8913%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="51.6413%" y="421" width="0.2402%" height="15" fill="rgb(240,50,32)" fg:x="645" fg:w="3"/><text x="51.8913%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="51.6413%" y="405" width="0.2402%" height="15" fill="rgb(240,185,36)" fg:x="645" fg:w="3"/><text x="51.8913%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="51.6413%" y="389" width="0.2402%" height="15" fill="rgb(211,168,15)" fg:x="645" fg:w="3"/><text x="51.8913%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.6413%" y="373" width="0.2402%" height="15" fill="rgb(221,70,0)" fg:x="645" fg:w="3"/><text x="51.8913%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.6413%" y="357" width="0.2402%" height="15" fill="rgb(205,21,33)" fg:x="645" fg:w="3"/><text x="51.8913%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="51.6413%" y="341" width="0.2402%" height="15" fill="rgb(225,106,10)" fg:x="645" fg:w="3"/><text x="51.8913%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="51.6413%" y="325" width="0.2402%" height="15" fill="rgb(236,200,50)" fg:x="645" fg:w="3"/><text x="51.8913%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="51.6413%" y="309" width="0.2402%" height="15" fill="rgb(249,93,23)" fg:x="645" fg:w="3"/><text x="51.8913%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="51.6413%" y="293" width="0.2402%" height="15" fill="rgb(244,115,35)" fg:x="645" fg:w="3"/><text x="51.8913%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="51.6413%" y="277" width="0.2402%" height="15" fill="rgb(231,129,47)" fg:x="645" fg:w="3"/><text x="51.8913%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="51.4812%" y="501" width="0.4804%" height="15" fill="rgb(225,160,50)" fg:x="643" fg:w="6"/><text x="51.7312%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="51.8815%" y="485" width="0.0801%" height="15" fill="rgb(218,135,23)" fg:x="648" fg:w="1"/><text x="52.1315%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="51.8815%" y="469" width="0.0801%" height="15" fill="rgb(227,119,14)" fg:x="648" fg:w="1"/><text x="52.1315%" y="479.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="51.9616%" y="437" width="0.0801%" height="15" fill="rgb(242,138,13)" fg:x="649" fg:w="1"/><text x="52.2116%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9616%" y="421" width="0.0801%" height="15" fill="rgb(215,11,16)" fg:x="649" fg:w="1"/><text x="52.2116%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.9616%" y="405" width="0.0801%" height="15" fill="rgb(234,170,50)" fg:x="649" fg:w="1"/><text x="52.2116%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.9616%" y="389" width="0.0801%" height="15" fill="rgb(233,34,20)" fg:x="649" fg:w="1"/><text x="52.2116%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.9616%" y="373" width="0.0801%" height="15" fill="rgb(237,100,45)" fg:x="649" fg:w="1"/><text x="52.2116%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.9616%" y="357" width="0.0801%" height="15" fill="rgb(231,184,36)" fg:x="649" fg:w="1"/><text x="52.2116%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="51.9616%" y="341" width="0.0801%" height="15" fill="rgb(252,93,2)" fg:x="649" fg:w="1"/><text x="52.2116%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="51.9616%" y="325" width="0.0801%" height="15" fill="rgb(248,176,47)" fg:x="649" fg:w="1"/><text x="52.2116%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="52.0416%" y="437" width="0.1601%" height="15" fill="rgb(249,125,23)" fg:x="650" fg:w="2"/><text x="52.2916%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="51.9616%" y="501" width="0.5604%" height="15" fill="rgb(239,67,42)" fg:x="649" fg:w="7"/><text x="52.2116%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="51.9616%" y="485" width="0.5604%" height="15" fill="rgb(244,162,4)" fg:x="649" fg:w="7"/><text x="52.2116%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="51.9616%" y="469" width="0.5604%" height="15" fill="rgb(214,150,38)" fg:x="649" fg:w="7"/><text x="52.2116%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="51.9616%" y="453" width="0.5604%" height="15" fill="rgb(228,211,28)" fg:x="649" fg:w="7"/><text x="52.2116%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="52.2018%" y="437" width="0.3203%" height="15" fill="rgb(212,98,48)" fg:x="652" fg:w="4"/><text x="52.4518%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="52.3619%" y="421" width="0.1601%" height="15" fill="rgb(213,45,13)" fg:x="654" fg:w="2"/><text x="52.6119%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4420%" y="405" width="0.0801%" height="15" fill="rgb(218,35,29)" fg:x="655" fg:w="1"/><text x="52.6920%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4420%" y="389" width="0.0801%" height="15" fill="rgb(244,13,3)" fg:x="655" fg:w="1"/><text x="52.6920%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5220%" y="501" width="0.0801%" height="15" fill="rgb(235,170,19)" fg:x="656" fg:w="1"/><text x="52.7720%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="52.6021%" y="501" width="0.0801%" height="15" fill="rgb(233,193,43)" fg:x="657" fg:w="1"/><text x="52.8521%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (52 samples, 4.16%)</title><rect x="48.9191%" y="549" width="4.1633%" height="15" fill="rgb(228,223,20)" fg:x="611" fg:w="52"/><text x="49.1691%" y="559.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.68%)</title><rect x="51.4011%" y="533" width="1.6813%" height="15" fill="rgb(208,85,54)" fg:x="642" fg:w="21"/><text x="51.6511%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (20 samples, 1.60%)</title><rect x="51.4812%" y="517" width="1.6013%" height="15" fill="rgb(254,14,45)" fg:x="643" fg:w="20"/><text x="51.7312%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="52.6821%" y="501" width="0.4003%" height="15" fill="rgb(247,99,29)" fg:x="658" fg:w="5"/><text x="52.9321%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.7622%" y="485" width="0.3203%" height="15" fill="rgb(225,180,54)" fg:x="659" fg:w="4"/><text x="53.0122%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.32%)</title><rect x="52.7622%" y="469" width="0.3203%" height="15" fill="rgb(239,88,43)" fg:x="659" fg:w="4"/><text x="53.0122%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="52.8423%" y="453" width="0.2402%" height="15" fill="rgb(209,47,11)" fg:x="660" fg:w="3"/><text x="53.0923%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="52.8423%" y="437" width="0.2402%" height="15" fill="rgb(219,179,23)" fg:x="660" fg:w="3"/><text x="53.0923%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.9223%" y="421" width="0.1601%" height="15" fill="rgb(213,183,19)" fg:x="661" fg:w="2"/><text x="53.1723%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.9223%" y="405" width="0.1601%" height="15" fill="rgb(210,11,9)" fg:x="661" fg:w="2"/><text x="53.1723%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="53.1625%" y="533" width="0.0801%" height="15" fill="rgb(239,194,16)" fg:x="664" fg:w="1"/><text x="53.4125%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.1625%" y="517" width="0.0801%" height="15" fill="rgb(246,23,50)" fg:x="664" fg:w="1"/><text x="53.4125%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (3 samples, 0.24%)</title><rect x="53.2426%" y="533" width="0.2402%" height="15" fill="rgb(245,10,41)" fg:x="665" fg:w="3"/><text x="53.4926%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="53.5629%" y="501" width="0.4003%" height="15" fill="rgb(228,43,24)" fg:x="669" fg:w="5"/><text x="53.8129%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="53.6429%" y="485" width="0.3203%" height="15" fill="rgb(220,151,0)" fg:x="670" fg:w="4"/><text x="53.8929%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.6429%" y="469" width="0.3203%" height="15" fill="rgb(232,219,10)" fg:x="670" fg:w="4"/><text x="53.8929%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.7230%" y="453" width="0.2402%" height="15" fill="rgb(227,217,48)" fg:x="671" fg:w="3"/><text x="53.9730%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.7230%" y="437" width="0.2402%" height="15" fill="rgb(210,66,35)" fg:x="671" fg:w="3"/><text x="53.9730%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="53.7230%" y="421" width="0.2402%" height="15" fill="rgb(254,6,7)" fg:x="671" fg:w="3"/><text x="53.9730%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="53.7230%" y="405" width="0.2402%" height="15" fill="rgb(235,222,42)" fg:x="671" fg:w="3"/><text x="53.9730%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="53.7230%" y="389" width="0.2402%" height="15" fill="rgb(245,126,5)" fg:x="671" fg:w="3"/><text x="53.9730%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="53.7230%" y="373" width="0.2402%" height="15" fill="rgb(215,73,17)" fg:x="671" fg:w="3"/><text x="53.9730%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="53.7230%" y="357" width="0.2402%" height="15" fill="rgb(219,198,52)" fg:x="671" fg:w="3"/><text x="53.9730%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="53.7230%" y="341" width="0.2402%" height="15" fill="rgb(217,159,18)" fg:x="671" fg:w="3"/><text x="53.9730%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="53.7230%" y="325" width="0.2402%" height="15" fill="rgb(212,177,18)" fg:x="671" fg:w="3"/><text x="53.9730%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="53.7230%" y="309" width="0.2402%" height="15" fill="rgb(241,10,11)" fg:x="671" fg:w="3"/><text x="53.9730%" y="319.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="53.7230%" y="293" width="0.2402%" height="15" fill="rgb(232,114,35)" fg:x="671" fg:w="3"/><text x="53.9730%" y="303.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.7230%" y="277" width="0.2402%" height="15" fill="rgb(238,222,8)" fg:x="671" fg:w="3"/><text x="53.9730%" y="287.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (2 samples, 0.16%)</title><rect x="54.0432%" y="437" width="0.1601%" height="15" fill="rgb(251,153,44)" fg:x="675" fg:w="2"/><text x="54.2932%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.2034%" y="437" width="0.0801%" height="15" fill="rgb(210,140,51)" fg:x="677" fg:w="1"/><text x="54.4534%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.2834%" y="421" width="0.0801%" height="15" fill="rgb(222,63,0)" fg:x="678" fg:w="1"/><text x="54.5334%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="54.3635%" y="421" width="0.0801%" height="15" fill="rgb(240,18,40)" fg:x="679" fg:w="1"/><text x="54.6135%" y="431.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="54.4436%" y="341" width="0.0801%" height="15" fill="rgb(237,88,16)" fg:x="680" fg:w="1"/><text x="54.6936%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.5236%" y="341" width="0.1601%" height="15" fill="rgb(251,117,13)" fg:x="681" fg:w="2"/><text x="54.7736%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.8439%" y="261" width="0.0801%" height="15" fill="rgb(251,228,8)" fg:x="685" fg:w="1"/><text x="55.0939%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.8439%" y="245" width="0.0801%" height="15" fill="rgb(205,107,49)" fg:x="685" fg:w="1"/><text x="55.0939%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="54.8439%" y="229" width="0.0801%" height="15" fill="rgb(238,72,41)" fg:x="685" fg:w="1"/><text x="55.0939%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8439%" y="213" width="0.0801%" height="15" fill="rgb(248,183,52)" fg:x="685" fg:w="1"/><text x="55.0939%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="54.7638%" y="293" width="0.2402%" height="15" fill="rgb(215,58,20)" fg:x="684" fg:w="3"/><text x="55.0138%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.8439%" y="277" width="0.1601%" height="15" fill="rgb(209,49,13)" fg:x="685" fg:w="2"/><text x="55.0939%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="54.9239%" y="261" width="0.0801%" height="15" fill="rgb(208,113,17)" fg:x="686" fg:w="1"/><text x="55.1739%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.9239%" y="245" width="0.0801%" height="15" fill="rgb(208,14,22)" fg:x="686" fg:w="1"/><text x="55.1739%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="54.9239%" y="229" width="0.0801%" height="15" fill="rgb(222,95,2)" fg:x="686" fg:w="1"/><text x="55.1739%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.9239%" y="213" width="0.0801%" height="15" fill="rgb(253,180,37)" fg:x="686" fg:w="1"/><text x="55.1739%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9239%" y="197" width="0.0801%" height="15" fill="rgb(250,81,33)" fg:x="686" fg:w="1"/><text x="55.1739%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9239%" y="181" width="0.0801%" height="15" fill="rgb(251,151,41)" fg:x="686" fg:w="1"/><text x="55.1739%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.0040%" y="293" width="0.0801%" height="15" fill="rgb(210,135,17)" fg:x="687" fg:w="1"/><text x="55.2540%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.0040%" y="277" width="0.0801%" height="15" fill="rgb(239,21,29)" fg:x="687" fg:w="1"/><text x="55.2540%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.0040%" y="261" width="0.0801%" height="15" fill="rgb(231,215,16)" fg:x="687" fg:w="1"/><text x="55.2540%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="55.0040%" y="245" width="0.0801%" height="15" fill="rgb(239,151,54)" fg:x="687" fg:w="1"/><text x="55.2540%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0841%" y="261" width="0.0801%" height="15" fill="rgb(222,122,38)" fg:x="688" fg:w="1"/><text x="55.3341%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.0841%" y="245" width="0.0801%" height="15" fill="rgb(243,128,1)" fg:x="688" fg:w="1"/><text x="55.3341%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0841%" y="229" width="0.0801%" height="15" fill="rgb(225,74,21)" fg:x="688" fg:w="1"/><text x="55.3341%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="54.6837%" y="341" width="0.5604%" height="15" fill="rgb(216,210,10)" fg:x="683" fg:w="7"/><text x="54.9337%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="54.7638%" y="325" width="0.4804%" height="15" fill="rgb(228,76,19)" fg:x="684" fg:w="6"/><text x="55.0138%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="54.7638%" y="309" width="0.4804%" height="15" fill="rgb(236,80,34)" fg:x="684" fg:w="6"/><text x="55.0138%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.0841%" y="293" width="0.1601%" height="15" fill="rgb(225,173,23)" fg:x="688" fg:w="2"/><text x="55.3341%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.0841%" y="277" width="0.1601%" height="15" fill="rgb(253,38,1)" fg:x="688" fg:w="2"/><text x="55.3341%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.1641%" y="261" width="0.0801%" height="15" fill="rgb(206,155,35)" fg:x="689" fg:w="1"/><text x="55.4141%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="55.1641%" y="245" width="0.0801%" height="15" fill="rgb(254,27,53)" fg:x="689" fg:w="1"/><text x="55.4141%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.1641%" y="229" width="0.0801%" height="15" fill="rgb(225,52,41)" fg:x="689" fg:w="1"/><text x="55.4141%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.1641%" y="213" width="0.0801%" height="15" fill="rgb(244,53,18)" fg:x="689" fg:w="1"/><text x="55.4141%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.4844%" y="309" width="0.0801%" height="15" fill="rgb(254,206,48)" fg:x="693" fg:w="1"/><text x="55.7344%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.4844%" y="293" width="0.0801%" height="15" fill="rgb(236,182,23)" fg:x="693" fg:w="1"/><text x="55.7344%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.5645%" y="309" width="0.0801%" height="15" fill="rgb(236,191,37)" fg:x="694" fg:w="1"/><text x="55.8145%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="55.6445%" y="277" width="0.2402%" height="15" fill="rgb(245,53,8)" fg:x="695" fg:w="3"/><text x="55.8945%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.6445%" y="261" width="0.2402%" height="15" fill="rgb(245,147,9)" fg:x="695" fg:w="3"/><text x="55.8945%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="55.6445%" y="245" width="0.2402%" height="15" fill="rgb(218,24,48)" fg:x="695" fg:w="3"/><text x="55.8945%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8046%" y="229" width="0.0801%" height="15" fill="rgb(254,23,9)" fg:x="697" fg:w="1"/><text x="56.0546%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (19 samples, 1.52%)</title><rect x="54.4436%" y="405" width="1.5212%" height="15" fill="rgb(244,105,9)" fg:x="680" fg:w="19"/><text x="54.6936%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (19 samples, 1.52%)</title><rect x="54.4436%" y="389" width="1.5212%" height="15" fill="rgb(212,142,22)" fg:x="680" fg:w="19"/><text x="54.6936%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (19 samples, 1.52%)</title><rect x="54.4436%" y="373" width="1.5212%" height="15" fill="rgb(221,114,49)" fg:x="680" fg:w="19"/><text x="54.6936%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (19 samples, 1.52%)</title><rect x="54.4436%" y="357" width="1.5212%" height="15" fill="rgb(223,210,25)" fg:x="680" fg:w="19"/><text x="54.6936%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.72%)</title><rect x="55.2442%" y="341" width="0.7206%" height="15" fill="rgb(235,162,44)" fg:x="690" fg:w="9"/><text x="55.4942%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="55.2442%" y="325" width="0.7206%" height="15" fill="rgb(237,65,45)" fg:x="690" fg:w="9"/><text x="55.4942%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="55.6445%" y="309" width="0.3203%" height="15" fill="rgb(208,79,9)" fg:x="695" fg:w="4"/><text x="55.8945%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.6445%" y="293" width="0.3203%" height="15" fill="rgb(215,228,8)" fg:x="695" fg:w="4"/><text x="55.8945%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="55.8847%" y="277" width="0.0801%" height="15" fill="rgb(205,185,17)" fg:x="698" fg:w="1"/><text x="56.1347%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.0448%" y="309" width="0.0801%" height="15" fill="rgb(213,62,36)" fg:x="700" fg:w="1"/><text x="56.2948%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.0448%" y="325" width="0.1601%" height="15" fill="rgb(209,34,9)" fg:x="700" fg:w="2"/><text x="56.2948%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1249%" y="309" width="0.0801%" height="15" fill="rgb(246,151,27)" fg:x="701" fg:w="1"/><text x="56.3749%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2050%" y="325" width="0.0801%" height="15" fill="rgb(218,206,3)" fg:x="702" fg:w="1"/><text x="56.4550%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.2050%" y="309" width="0.0801%" height="15" fill="rgb(242,202,1)" fg:x="702" fg:w="1"/><text x="56.4550%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.2050%" y="293" width="0.0801%" height="15" fill="rgb(227,185,16)" fg:x="702" fg:w="1"/><text x="56.4550%" y="303.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="56.2850%" y="293" width="0.1601%" height="15" fill="rgb(241,1,14)" fg:x="703" fg:w="2"/><text x="56.5350%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="56.2850%" y="277" width="0.1601%" height="15" fill="rgb(212,113,25)" fg:x="703" fg:w="2"/><text x="56.5350%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.4452%" y="293" width="0.0801%" height="15" fill="rgb(247,37,43)" fg:x="705" fg:w="1"/><text x="56.6952%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="56.6053%" y="261" width="0.1601%" height="15" fill="rgb(226,54,8)" fg:x="707" fg:w="2"/><text x="56.8553%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.6853%" y="245" width="0.0801%" height="15" fill="rgb(251,205,25)" fg:x="708" fg:w="1"/><text x="56.9353%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.7654%" y="245" width="0.0801%" height="15" fill="rgb(246,87,35)" fg:x="709" fg:w="1"/><text x="57.0154%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (37 samples, 2.96%)</title><rect x="53.9632%" y="501" width="2.9624%" height="15" fill="rgb(251,145,46)" fg:x="674" fg:w="37"/><text x="54.2132%" y="511.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (37 samples, 2.96%)</title><rect x="53.9632%" y="485" width="2.9624%" height="15" fill="rgb(210,210,33)" fg:x="674" fg:w="37"/><text x="54.2132%" y="495.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (36 samples, 2.88%)</title><rect x="54.0432%" y="469" width="2.8823%" height="15" fill="rgb(221,151,11)" fg:x="675" fg:w="36"/><text x="54.2932%" y="479.50">&lt;a..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (36 samples, 2.88%)</title><rect x="54.0432%" y="453" width="2.8823%" height="15" fill="rgb(208,160,28)" fg:x="675" fg:w="36"/><text x="54.2932%" y="463.50">&lt;e..</text></g><g><title>engine::internal::Entities::prepare_entity (33 samples, 2.64%)</title><rect x="54.2834%" y="437" width="2.6421%" height="15" fill="rgb(243,69,29)" fg:x="678" fg:w="33"/><text x="54.5334%" y="447.50">en..</text></g><g><title>kernel::model::deserialize_entity (31 samples, 2.48%)</title><rect x="54.4436%" y="421" width="2.4820%" height="15" fill="rgb(224,144,4)" fg:x="680" fg:w="31"/><text x="54.6936%" y="431.50">ke..</text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="55.9648%" y="405" width="0.9608%" height="15" fill="rgb(211,140,38)" fg:x="699" fg:w="12"/><text x="56.2148%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="55.9648%" y="389" width="0.9608%" height="15" fill="rgb(252,189,15)" fg:x="699" fg:w="12"/><text x="56.2148%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="55.9648%" y="373" width="0.9608%" height="15" fill="rgb(251,175,23)" fg:x="699" fg:w="12"/><text x="56.2148%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.96%)</title><rect x="55.9648%" y="357" width="0.9608%" height="15" fill="rgb(212,184,11)" fg:x="699" fg:w="12"/><text x="56.2148%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="56.0448%" y="341" width="0.8807%" height="15" fill="rgb(217,205,6)" fg:x="700" fg:w="11"/><text x="56.2948%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="56.2850%" y="325" width="0.6405%" height="15" fill="rgb(235,45,45)" fg:x="703" fg:w="8"/><text x="56.5350%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="56.2850%" y="309" width="0.6405%" height="15" fill="rgb(211,157,53)" fg:x="703" fg:w="8"/><text x="56.5350%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="56.5252%" y="293" width="0.4003%" height="15" fill="rgb(212,13,8)" fg:x="706" fg:w="5"/><text x="56.7752%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="56.5252%" y="277" width="0.4003%" height="15" fill="rgb(218,80,36)" fg:x="706" fg:w="5"/><text x="56.7752%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.7654%" y="261" width="0.1601%" height="15" fill="rgb(211,123,43)" fg:x="709" fg:w="2"/><text x="57.0154%" y="271.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="56.8455%" y="245" width="0.0801%" height="15" fill="rgb(206,165,2)" fg:x="710" fg:w="1"/><text x="57.0955%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.9255%" y="501" width="0.0801%" height="15" fill="rgb(248,63,35)" fg:x="711" fg:w="1"/><text x="57.1755%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="57.0056%" y="501" width="0.0801%" height="15" fill="rgb(219,133,41)" fg:x="712" fg:w="1"/><text x="57.2556%" y="511.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="57.0857%" y="501" width="0.0801%" height="15" fill="rgb(206,175,46)" fg:x="713" fg:w="1"/><text x="57.3357%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.3259%" y="469" width="0.0801%" height="15" fill="rgb(224,41,35)" fg:x="716" fg:w="1"/><text x="57.5759%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.4059%" y="469" width="0.0801%" height="15" fill="rgb(226,113,24)" fg:x="717" fg:w="1"/><text x="57.6559%" y="479.50"></text></g><g><title>plugins_core::tools::get_contained_keys (58 samples, 4.64%)</title><rect x="53.0825%" y="549" width="4.6437%" height="15" fill="rgb(219,51,41)" fg:x="663" fg:w="58"/><text x="53.3325%" y="559.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (53 samples, 4.24%)</title><rect x="53.4828%" y="533" width="4.2434%" height="15" fill="rgb(220,145,47)" fg:x="668" fg:w="53"/><text x="53.7328%" y="543.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (53 samples, 4.24%)</title><rect x="53.4828%" y="517" width="4.2434%" height="15" fill="rgb(239,121,47)" fg:x="668" fg:w="53"/><text x="53.7328%" y="527.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="57.1657%" y="501" width="0.5604%" height="15" fill="rgb(207,60,40)" fg:x="714" fg:w="7"/><text x="57.4157%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="57.1657%" y="485" width="0.5604%" height="15" fill="rgb(224,229,11)" fg:x="714" fg:w="7"/><text x="57.4157%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="57.4860%" y="469" width="0.2402%" height="15" fill="rgb(252,28,32)" fg:x="718" fg:w="3"/><text x="57.7360%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="57.4860%" y="453" width="0.2402%" height="15" fill="rgb(207,52,49)" fg:x="718" fg:w="3"/><text x="57.7360%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="57.4860%" y="437" width="0.2402%" height="15" fill="rgb(243,51,50)" fg:x="718" fg:w="3"/><text x="57.7360%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.4860%" y="421" width="0.2402%" height="15" fill="rgb(212,92,21)" fg:x="718" fg:w="3"/><text x="57.7360%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.4860%" y="405" width="0.2402%" height="15" fill="rgb(230,183,50)" fg:x="718" fg:w="3"/><text x="57.7360%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6461%" y="389" width="0.0801%" height="15" fill="rgb(225,48,9)" fg:x="720" fg:w="1"/><text x="57.8961%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="57.7262%" y="533" width="0.0801%" height="15" fill="rgb(254,44,4)" fg:x="721" fg:w="1"/><text x="57.9762%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (115 samples, 9.21%)</title><rect x="48.9191%" y="581" width="9.2074%" height="15" fill="rgb(252,128,37)" fg:x="611" fg:w="115"/><text x="49.1691%" y="591.50">&lt;alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (115 samples, 9.21%)</title><rect x="48.9191%" y="565" width="9.2074%" height="15" fill="rgb(227,178,8)" fg:x="611" fg:w="115"/><text x="49.1691%" y="575.50">&lt;core::iter::..</text></g><g><title>plugins_core::tools::get_occupant_keys (5 samples, 0.40%)</title><rect x="57.7262%" y="549" width="0.4003%" height="15" fill="rgb(205,206,32)" fg:x="721" fg:w="5"/><text x="57.9762%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="57.8062%" y="533" width="0.3203%" height="15" fill="rgb(220,218,22)" fg:x="722" fg:w="4"/><text x="58.0562%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="57.8863%" y="517" width="0.2402%" height="15" fill="rgb(236,41,28)" fg:x="723" fg:w="3"/><text x="58.1363%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="57.8863%" y="501" width="0.2402%" height="15" fill="rgb(219,37,7)" fg:x="723" fg:w="3"/><text x="58.1363%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.8863%" y="485" width="0.2402%" height="15" fill="rgb(206,160,15)" fg:x="723" fg:w="3"/><text x="58.1363%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.0464%" y="469" width="0.0801%" height="15" fill="rgb(208,82,21)" fg:x="725" fg:w="1"/><text x="58.2964%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.0464%" y="453" width="0.0801%" height="15" fill="rgb(226,130,25)" fg:x="725" fg:w="1"/><text x="58.2964%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="58.0464%" y="437" width="0.0801%" height="15" fill="rgb(212,72,24)" fg:x="725" fg:w="1"/><text x="58.2964%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.0464%" y="421" width="0.0801%" height="15" fill="rgb(206,28,16)" fg:x="725" fg:w="1"/><text x="58.2964%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.0464%" y="405" width="0.0801%" height="15" fill="rgb(249,41,5)" fg:x="725" fg:w="1"/><text x="58.2964%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0464%" y="389" width="0.0801%" height="15" fill="rgb(233,96,48)" fg:x="725" fg:w="1"/><text x="58.2964%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="58.5268%" y="533" width="0.3203%" height="15" fill="rgb(240,198,11)" fg:x="731" fg:w="4"/><text x="58.7768%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="58.5268%" y="517" width="0.3203%" height="15" fill="rgb(209,175,35)" fg:x="731" fg:w="4"/><text x="58.7768%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="58.5268%" y="501" width="0.3203%" height="15" fill="rgb(214,40,51)" fg:x="731" fg:w="4"/><text x="58.7768%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="58.5268%" y="485" width="0.3203%" height="15" fill="rgb(252,56,4)" fg:x="731" fg:w="4"/><text x="58.7768%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="58.5268%" y="469" width="0.3203%" height="15" fill="rgb(219,131,5)" fg:x="731" fg:w="4"/><text x="58.7768%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="58.5268%" y="453" width="0.3203%" height="15" fill="rgb(223,67,53)" fg:x="731" fg:w="4"/><text x="58.7768%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.32%)</title><rect x="58.5268%" y="437" width="0.3203%" height="15" fill="rgb(227,154,8)" fg:x="731" fg:w="4"/><text x="58.7768%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.32%)</title><rect x="58.5268%" y="421" width="0.3203%" height="15" fill="rgb(216,174,51)" fg:x="731" fg:w="4"/><text x="58.7768%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="58.5268%" y="405" width="0.3203%" height="15" fill="rgb(239,60,34)" fg:x="731" fg:w="4"/><text x="58.7768%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="58.5268%" y="389" width="0.3203%" height="15" fill="rgb(236,165,48)" fg:x="731" fg:w="4"/><text x="58.7768%" y="399.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="58.5268%" y="373" width="0.3203%" height="15" fill="rgb(210,37,26)" fg:x="731" fg:w="4"/><text x="58.7768%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="58.5268%" y="357" width="0.3203%" height="15" fill="rgb(211,3,17)" fg:x="731" fg:w="4"/><text x="58.7768%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0072%" y="485" width="0.0801%" height="15" fill="rgb(234,88,49)" fg:x="737" fg:w="1"/><text x="59.2572%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0072%" y="469" width="0.0801%" height="15" fill="rgb(233,40,17)" fg:x="737" fg:w="1"/><text x="59.2572%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.0072%" y="453" width="0.0801%" height="15" fill="rgb(235,127,31)" fg:x="737" fg:w="1"/><text x="59.2572%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.0072%" y="437" width="0.0801%" height="15" fill="rgb(248,167,17)" fg:x="737" fg:w="1"/><text x="59.2572%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.0072%" y="421" width="0.0801%" height="15" fill="rgb(218,179,8)" fg:x="737" fg:w="1"/><text x="59.2572%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.0072%" y="405" width="0.0801%" height="15" fill="rgb(216,92,14)" fg:x="737" fg:w="1"/><text x="59.2572%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.0072%" y="389" width="0.0801%" height="15" fill="rgb(221,198,46)" fg:x="737" fg:w="1"/><text x="59.2572%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.0072%" y="373" width="0.0801%" height="15" fill="rgb(244,7,25)" fg:x="737" fg:w="1"/><text x="59.2572%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.0072%" y="357" width="0.0801%" height="15" fill="rgb(233,75,6)" fg:x="737" fg:w="1"/><text x="59.2572%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.0072%" y="341" width="0.0801%" height="15" fill="rgb(240,189,41)" fg:x="737" fg:w="1"/><text x="59.2572%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.0072%" y="325" width="0.0801%" height="15" fill="rgb(237,157,21)" fg:x="737" fg:w="1"/><text x="59.2572%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.0072%" y="309" width="0.0801%" height="15" fill="rgb(210,136,49)" fg:x="737" fg:w="1"/><text x="59.2572%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0072%" y="293" width="0.0801%" height="15" fill="rgb(210,68,29)" fg:x="737" fg:w="1"/><text x="59.2572%" y="303.50"></text></g><g><title>engine::internal::Entities::prepare_entity (3 samples, 0.24%)</title><rect x="58.9271%" y="517" width="0.2402%" height="15" fill="rgb(247,207,20)" fg:x="736" fg:w="3"/><text x="59.1771%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="58.9271%" y="501" width="0.2402%" height="15" fill="rgb(224,73,48)" fg:x="736" fg:w="3"/><text x="59.1771%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.0873%" y="485" width="0.0801%" height="15" fill="rgb(215,136,47)" fg:x="738" fg:w="1"/><text x="59.3373%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="59.1673%" y="517" width="0.1601%" height="15" fill="rgb(232,222,16)" fg:x="739" fg:w="2"/><text x="59.4173%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.1673%" y="501" width="0.1601%" height="15" fill="rgb(249,202,47)" fg:x="739" fg:w="2"/><text x="59.4173%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.1673%" y="485" width="0.1601%" height="15" fill="rgb(236,56,8)" fg:x="739" fg:w="2"/><text x="59.4173%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.1673%" y="469" width="0.1601%" height="15" fill="rgb(222,6,3)" fg:x="739" fg:w="2"/><text x="59.4173%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.1673%" y="453" width="0.1601%" height="15" fill="rgb(254,222,28)" fg:x="739" fg:w="2"/><text x="59.4173%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.1673%" y="437" width="0.1601%" height="15" fill="rgb(219,57,23)" fg:x="739" fg:w="2"/><text x="59.4173%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.1673%" y="421" width="0.1601%" height="15" fill="rgb(251,106,48)" fg:x="739" fg:w="2"/><text x="59.4173%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.1673%" y="405" width="0.1601%" height="15" fill="rgb(242,2,23)" fg:x="739" fg:w="2"/><text x="59.4173%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.1673%" y="389" width="0.1601%" height="15" fill="rgb(212,109,31)" fg:x="739" fg:w="2"/><text x="59.4173%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.1673%" y="373" width="0.1601%" height="15" fill="rgb(241,9,22)" fg:x="739" fg:w="2"/><text x="59.4173%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.1673%" y="357" width="0.1601%" height="15" fill="rgb(209,64,27)" fg:x="739" fg:w="2"/><text x="59.4173%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.1673%" y="341" width="0.1601%" height="15" fill="rgb(248,13,44)" fg:x="739" fg:w="2"/><text x="59.4173%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.1673%" y="325" width="0.1601%" height="15" fill="rgb(213,86,6)" fg:x="739" fg:w="2"/><text x="59.4173%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3275%" y="501" width="0.0801%" height="15" fill="rgb(247,11,18)" fg:x="741" fg:w="1"/><text x="59.5775%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.3275%" y="485" width="0.0801%" height="15" fill="rgb(252,31,11)" fg:x="741" fg:w="1"/><text x="59.5775%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.3275%" y="469" width="0.0801%" height="15" fill="rgb(215,63,51)" fg:x="741" fg:w="1"/><text x="59.5775%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.3275%" y="453" width="0.0801%" height="15" fill="rgb(222,180,4)" fg:x="741" fg:w="1"/><text x="59.5775%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.3275%" y="437" width="0.0801%" height="15" fill="rgb(233,4,23)" fg:x="741" fg:w="1"/><text x="59.5775%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3275%" y="421" width="0.0801%" height="15" fill="rgb(230,116,22)" fg:x="741" fg:w="1"/><text x="59.5775%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3275%" y="405" width="0.0801%" height="15" fill="rgb(222,20,14)" fg:x="741" fg:w="1"/><text x="59.5775%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.3275%" y="389" width="0.0801%" height="15" fill="rgb(210,176,43)" fg:x="741" fg:w="1"/><text x="59.5775%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.3275%" y="373" width="0.0801%" height="15" fill="rgb(219,67,32)" fg:x="741" fg:w="1"/><text x="59.5775%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.3275%" y="357" width="0.0801%" height="15" fill="rgb(228,91,39)" fg:x="741" fg:w="1"/><text x="59.5775%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.3275%" y="341" width="0.0801%" height="15" fill="rgb(254,63,14)" fg:x="741" fg:w="1"/><text x="59.5775%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3275%" y="325" width="0.0801%" height="15" fill="rgb(216,171,39)" fg:x="741" fg:w="1"/><text x="59.5775%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="59.5677%" y="213" width="0.0801%" height="15" fill="rgb(248,68,25)" fg:x="744" fg:w="1"/><text x="59.8177%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="59.5677%" y="197" width="0.0801%" height="15" fill="rgb(239,63,16)" fg:x="744" fg:w="1"/><text x="59.8177%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="59.5677%" y="181" width="0.0801%" height="15" fill="rgb(225,111,43)" fg:x="744" fg:w="1"/><text x="59.8177%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="59.5677%" y="165" width="0.0801%" height="15" fill="rgb(246,165,17)" fg:x="744" fg:w="1"/><text x="59.8177%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.5677%" y="389" width="0.1601%" height="15" fill="rgb(208,124,1)" fg:x="744" fg:w="2"/><text x="59.8177%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.5677%" y="373" width="0.1601%" height="15" fill="rgb(234,147,33)" fg:x="744" fg:w="2"/><text x="59.8177%" y="383.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="59.5677%" y="357" width="0.1601%" height="15" fill="rgb(240,86,30)" fg:x="744" fg:w="2"/><text x="59.8177%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="59.5677%" y="341" width="0.1601%" height="15" fill="rgb(237,34,51)" fg:x="744" fg:w="2"/><text x="59.8177%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="59.5677%" y="325" width="0.1601%" height="15" fill="rgb(232,131,41)" fg:x="744" fg:w="2"/><text x="59.8177%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="59.5677%" y="309" width="0.1601%" height="15" fill="rgb(227,129,53)" fg:x="744" fg:w="2"/><text x="59.8177%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.5677%" y="293" width="0.1601%" height="15" fill="rgb(230,90,35)" fg:x="744" fg:w="2"/><text x="59.8177%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.5677%" y="277" width="0.1601%" height="15" fill="rgb(248,88,27)" fg:x="744" fg:w="2"/><text x="59.8177%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="59.5677%" y="261" width="0.1601%" height="15" fill="rgb(223,18,17)" fg:x="744" fg:w="2"/><text x="59.8177%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="59.5677%" y="245" width="0.1601%" height="15" fill="rgb(241,11,10)" fg:x="744" fg:w="2"/><text x="59.8177%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="59.5677%" y="229" width="0.1601%" height="15" fill="rgb(232,111,52)" fg:x="744" fg:w="2"/><text x="59.8177%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6477%" y="213" width="0.0801%" height="15" fill="rgb(228,67,8)" fg:x="745" fg:w="1"/><text x="59.8977%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.7278%" y="309" width="0.0801%" height="15" fill="rgb(251,168,31)" fg:x="746" fg:w="1"/><text x="59.9778%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.7278%" y="293" width="0.0801%" height="15" fill="rgb(249,164,11)" fg:x="746" fg:w="1"/><text x="59.9778%" y="303.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.7278%" y="277" width="0.0801%" height="15" fill="rgb(239,81,9)" fg:x="746" fg:w="1"/><text x="59.9778%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.7278%" y="261" width="0.0801%" height="15" fill="rgb(222,145,38)" fg:x="746" fg:w="1"/><text x="59.9778%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.7278%" y="245" width="0.0801%" height="15" fill="rgb(238,80,54)" fg:x="746" fg:w="1"/><text x="59.9778%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.7278%" y="229" width="0.0801%" height="15" fill="rgb(237,116,16)" fg:x="746" fg:w="1"/><text x="59.9778%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.7278%" y="213" width="0.0801%" height="15" fill="rgb(218,135,19)" fg:x="746" fg:w="1"/><text x="59.9778%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.7278%" y="197" width="0.0801%" height="15" fill="rgb(216,207,44)" fg:x="746" fg:w="1"/><text x="59.9778%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.7278%" y="181" width="0.0801%" height="15" fill="rgb(226,152,40)" fg:x="746" fg:w="1"/><text x="59.9778%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.7278%" y="165" width="0.0801%" height="15" fill="rgb(219,98,35)" fg:x="746" fg:w="1"/><text x="59.9778%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="59.7278%" y="149" width="0.0801%" height="15" fill="rgb(222,136,46)" fg:x="746" fg:w="1"/><text x="59.9778%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="59.7278%" y="133" width="0.0801%" height="15" fill="rgb(222,71,8)" fg:x="746" fg:w="1"/><text x="59.9778%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="59.7278%" y="117" width="0.0801%" height="15" fill="rgb(209,89,53)" fg:x="746" fg:w="1"/><text x="59.9778%" y="127.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="59.7278%" y="101" width="0.0801%" height="15" fill="rgb(210,97,51)" fg:x="746" fg:w="1"/><text x="59.9778%" y="111.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="59.7278%" y="85" width="0.0801%" height="15" fill="rgb(248,65,21)" fg:x="746" fg:w="1"/><text x="59.9778%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="59.7278%" y="373" width="0.1601%" height="15" fill="rgb(222,5,31)" fg:x="746" fg:w="2"/><text x="59.9778%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="59.7278%" y="357" width="0.1601%" height="15" fill="rgb(241,16,30)" fg:x="746" fg:w="2"/><text x="59.9778%" y="367.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="59.7278%" y="341" width="0.1601%" height="15" fill="rgb(215,86,30)" fg:x="746" fg:w="2"/><text x="59.9778%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="59.7278%" y="325" width="0.1601%" height="15" fill="rgb(235,26,44)" fg:x="746" fg:w="2"/><text x="59.9778%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="59.8078%" y="309" width="0.0801%" height="15" fill="rgb(228,147,14)" fg:x="747" fg:w="1"/><text x="60.0578%" y="319.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="59.8078%" y="293" width="0.0801%" height="15" fill="rgb(253,38,50)" fg:x="747" fg:w="1"/><text x="60.0578%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.8078%" y="277" width="0.0801%" height="15" fill="rgb(251,151,16)" fg:x="747" fg:w="1"/><text x="60.0578%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="59.8078%" y="261" width="0.0801%" height="15" fill="rgb(224,64,19)" fg:x="747" fg:w="1"/><text x="60.0578%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="59.8078%" y="245" width="0.0801%" height="15" fill="rgb(235,214,47)" fg:x="747" fg:w="1"/><text x="60.0578%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="59.8078%" y="229" width="0.0801%" height="15" fill="rgb(218,15,19)" fg:x="747" fg:w="1"/><text x="60.0578%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="59.8078%" y="213" width="0.0801%" height="15" fill="rgb(247,209,3)" fg:x="747" fg:w="1"/><text x="60.0578%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="59.8078%" y="197" width="0.0801%" height="15" fill="rgb(217,29,2)" fg:x="747" fg:w="1"/><text x="60.0578%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.8078%" y="181" width="0.0801%" height="15" fill="rgb(234,9,9)" fg:x="747" fg:w="1"/><text x="60.0578%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="59.8078%" y="165" width="0.0801%" height="15" fill="rgb(207,43,14)" fg:x="747" fg:w="1"/><text x="60.0578%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="59.8078%" y="149" width="0.0801%" height="15" fill="rgb(216,219,36)" fg:x="747" fg:w="1"/><text x="60.0578%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="59.8078%" y="133" width="0.0801%" height="15" fill="rgb(238,12,26)" fg:x="747" fg:w="1"/><text x="60.0578%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="59.8078%" y="117" width="0.0801%" height="15" fill="rgb(226,67,30)" fg:x="747" fg:w="1"/><text x="60.0578%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (15 samples, 1.20%)</title><rect x="58.8471%" y="533" width="1.2010%" height="15" fill="rgb(229,154,7)" fg:x="735" fg:w="15"/><text x="59.0971%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="59.3275%" y="517" width="0.7206%" height="15" fill="rgb(249,90,18)" fg:x="741" fg:w="9"/><text x="59.5775%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (8 samples, 0.64%)</title><rect x="59.4075%" y="501" width="0.6405%" height="15" fill="rgb(223,53,15)" fg:x="742" fg:w="8"/><text x="59.6575%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (8 samples, 0.64%)</title><rect x="59.4075%" y="485" width="0.6405%" height="15" fill="rgb(253,86,38)" fg:x="742" fg:w="8"/><text x="59.6575%" y="495.50"></text></g><g><title>core::fmt::write (8 samples, 0.64%)</title><rect x="59.4075%" y="469" width="0.6405%" height="15" fill="rgb(222,198,9)" fg:x="742" fg:w="8"/><text x="59.6575%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (8 samples, 0.64%)</title><rect x="59.4075%" y="453" width="0.6405%" height="15" fill="rgb(240,146,25)" fg:x="742" fg:w="8"/><text x="59.6575%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (8 samples, 0.64%)</title><rect x="59.4075%" y="437" width="0.6405%" height="15" fill="rgb(225,38,10)" fg:x="742" fg:w="8"/><text x="59.6575%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (7 samples, 0.56%)</title><rect x="59.4876%" y="421" width="0.5604%" height="15" fill="rgb(246,93,4)" fg:x="743" fg:w="7"/><text x="59.7376%" y="431.50"></text></g><g><title>core::fmt::write (6 samples, 0.48%)</title><rect x="59.5677%" y="405" width="0.4804%" height="15" fill="rgb(222,55,18)" fg:x="744" fg:w="6"/><text x="59.8177%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="59.7278%" y="389" width="0.3203%" height="15" fill="rgb(233,137,48)" fg:x="746" fg:w="4"/><text x="59.9778%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.8879%" y="373" width="0.1601%" height="15" fill="rgb(214,8,54)" fg:x="748" fg:w="2"/><text x="60.1379%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="59.8879%" y="357" width="0.1601%" height="15" fill="rgb(206,75,4)" fg:x="748" fg:w="2"/><text x="60.1379%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="59.8879%" y="341" width="0.1601%" height="15" fill="rgb(238,171,14)" fg:x="748" fg:w="2"/><text x="60.1379%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="59.8879%" y="325" width="0.1601%" height="15" fill="rgb(233,70,41)" fg:x="748" fg:w="2"/><text x="60.1379%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="59.8879%" y="309" width="0.1601%" height="15" fill="rgb(214,68,36)" fg:x="748" fg:w="2"/><text x="60.1379%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="59.8879%" y="293" width="0.1601%" height="15" fill="rgb(223,29,5)" fg:x="748" fg:w="2"/><text x="60.1379%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.8879%" y="277" width="0.1601%" height="15" fill="rgb(251,22,40)" fg:x="748" fg:w="2"/><text x="60.1379%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="59.8879%" y="261" width="0.1601%" height="15" fill="rgb(210,67,41)" fg:x="748" fg:w="2"/><text x="60.1379%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="59.8879%" y="245" width="0.1601%" height="15" fill="rgb(225,177,31)" fg:x="748" fg:w="2"/><text x="60.1379%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="59.8879%" y="229" width="0.1601%" height="15" fill="rgb(221,229,11)" fg:x="748" fg:w="2"/><text x="60.1379%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="59.8879%" y="213" width="0.1601%" height="15" fill="rgb(247,172,52)" fg:x="748" fg:w="2"/><text x="60.1379%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="59.8879%" y="197" width="0.1601%" height="15" fill="rgb(212,73,19)" fg:x="748" fg:w="2"/><text x="60.1379%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="59.8879%" y="181" width="0.1601%" height="15" fill="rgb(244,7,46)" fg:x="748" fg:w="2"/><text x="60.1379%" y="191.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="59.8879%" y="165" width="0.1601%" height="15" fill="rgb(230,113,20)" fg:x="748" fg:w="2"/><text x="60.1379%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="59.9680%" y="149" width="0.0801%" height="15" fill="rgb(209,97,30)" fg:x="749" fg:w="1"/><text x="60.2180%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="61.7294%" y="421" width="0.1601%" height="15" fill="rgb(243,89,12)" fg:x="771" fg:w="2"/><text x="61.9794%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.8094%" y="405" width="0.0801%" height="15" fill="rgb(228,32,19)" fg:x="772" fg:w="1"/><text x="62.0594%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.2098%" y="373" width="0.0801%" height="15" fill="rgb(248,25,17)" fg:x="777" fg:w="1"/><text x="62.4598%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.2098%" y="357" width="0.0801%" height="15" fill="rgb(232,161,29)" fg:x="777" fg:w="1"/><text x="62.4598%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="62.9303%" y="325" width="0.0801%" height="15" fill="rgb(251,192,11)" fg:x="786" fg:w="1"/><text x="63.1803%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="63.4107%" y="277" width="0.1601%" height="15" fill="rgb(240,47,32)" fg:x="792" fg:w="2"/><text x="63.6607%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="63.3307%" y="293" width="0.4804%" height="15" fill="rgb(250,16,45)" fg:x="791" fg:w="6"/><text x="63.5807%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="63.5709%" y="277" width="0.2402%" height="15" fill="rgb(227,217,42)" fg:x="794" fg:w="3"/><text x="63.8209%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.7310%" y="261" width="0.0801%" height="15" fill="rgb(206,82,54)" fg:x="796" fg:w="1"/><text x="63.9810%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.96%)</title><rect x="63.0104%" y="325" width="0.9608%" height="15" fill="rgb(243,145,25)" fg:x="787" fg:w="12"/><text x="63.2604%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="63.3307%" y="309" width="0.6405%" height="15" fill="rgb(207,166,24)" fg:x="791" fg:w="8"/><text x="63.5807%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="63.8110%" y="293" width="0.1601%" height="15" fill="rgb(215,191,44)" fg:x="797" fg:w="2"/><text x="64.0610%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.8110%" y="277" width="0.1601%" height="15" fill="rgb(234,218,51)" fg:x="797" fg:w="2"/><text x="64.0610%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.9712%" y="325" width="0.0801%" height="15" fill="rgb(245,133,21)" fg:x="799" fg:w="1"/><text x="64.2212%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.9712%" y="309" width="0.0801%" height="15" fill="rgb(230,136,45)" fg:x="799" fg:w="1"/><text x="64.2212%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="64.1313%" y="309" width="0.1601%" height="15" fill="rgb(247,63,43)" fg:x="801" fg:w="2"/><text x="64.3813%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.2114%" y="293" width="0.0801%" height="15" fill="rgb(254,223,31)" fg:x="802" fg:w="1"/><text x="64.4614%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 2.08%)</title><rect x="62.3699%" y="341" width="2.0817%" height="15" fill="rgb(236,185,0)" fg:x="779" fg:w="26"/><text x="62.6199%" y="351.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="64.0512%" y="325" width="0.4003%" height="15" fill="rgb(231,139,46)" fg:x="800" fg:w="5"/><text x="64.3012%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="64.2914%" y="309" width="0.1601%" height="15" fill="rgb(236,147,31)" fg:x="803" fg:w="2"/><text x="64.5414%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 2.72%)</title><rect x="62.2898%" y="357" width="2.7222%" height="15" fill="rgb(225,222,22)" fg:x="778" fg:w="34"/><text x="62.5398%" y="367.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="64.4516%" y="341" width="0.5604%" height="15" fill="rgb(225,193,14)" fg:x="805" fg:w="7"/><text x="64.7016%" y="351.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="64.4516%" y="325" width="0.5604%" height="15" fill="rgb(253,193,46)" fg:x="805" fg:w="7"/><text x="64.7016%" y="335.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="65.3323%" y="277" width="0.1601%" height="15" fill="rgb(218,187,39)" fg:x="816" fg:w="2"/><text x="65.5823%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (42 samples, 3.36%)</title><rect x="62.2898%" y="373" width="3.3627%" height="15" fill="rgb(227,162,48)" fg:x="778" fg:w="42"/><text x="62.5398%" y="383.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="65.0120%" y="357" width="0.6405%" height="15" fill="rgb(222,25,5)" fg:x="812" fg:w="8"/><text x="65.2620%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="65.0120%" y="341" width="0.6405%" height="15" fill="rgb(211,205,16)" fg:x="812" fg:w="8"/><text x="65.2620%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (8 samples, 0.64%)</title><rect x="65.0120%" y="325" width="0.6405%" height="15" fill="rgb(244,191,2)" fg:x="812" fg:w="8"/><text x="65.2620%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="65.0921%" y="309" width="0.5604%" height="15" fill="rgb(248,159,12)" fg:x="813" fg:w="7"/><text x="65.3421%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.48%)</title><rect x="65.1721%" y="293" width="0.4804%" height="15" fill="rgb(235,204,17)" fg:x="814" fg:w="6"/><text x="65.4221%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="65.4924%" y="277" width="0.1601%" height="15" fill="rgb(240,21,27)" fg:x="818" fg:w="2"/><text x="65.7424%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="65.4924%" y="261" width="0.1601%" height="15" fill="rgb(224,170,31)" fg:x="818" fg:w="2"/><text x="65.7424%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="65.4924%" y="245" width="0.1601%" height="15" fill="rgb(223,145,32)" fg:x="818" fg:w="2"/><text x="65.7424%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="65.6525%" y="373" width="0.2402%" height="15" fill="rgb(243,100,5)" fg:x="820" fg:w="3"/><text x="65.9025%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="65.7326%" y="357" width="0.1601%" height="15" fill="rgb(242,131,51)" fg:x="821" fg:w="2"/><text x="65.9826%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.0528%" y="357" width="0.0801%" height="15" fill="rgb(223,156,46)" fg:x="825" fg:w="1"/><text x="66.3028%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (52 samples, 4.16%)</title><rect x="62.0496%" y="389" width="4.1633%" height="15" fill="rgb(215,10,40)" fg:x="775" fg:w="52"/><text x="62.2996%" y="399.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="65.8927%" y="373" width="0.3203%" height="15" fill="rgb(233,155,0)" fg:x="823" fg:w="4"/><text x="66.1427%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.1329%" y="357" width="0.0801%" height="15" fill="rgb(247,78,6)" fg:x="826" fg:w="1"/><text x="66.3829%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (56 samples, 4.48%)</title><rect x="62.0496%" y="405" width="4.4836%" height="15" fill="rgb(237,217,21)" fg:x="775" fg:w="56"/><text x="62.2996%" y="415.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="66.2130%" y="389" width="0.3203%" height="15" fill="rgb(212,1,21)" fg:x="827" fg:w="4"/><text x="66.4630%" y="399.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.2930%" y="373" width="0.2402%" height="15" fill="rgb(213,7,14)" fg:x="828" fg:w="3"/><text x="66.5430%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (59 samples, 4.72%)</title><rect x="61.8895%" y="421" width="4.7238%" height="15" fill="rgb(225,84,14)" fg:x="773" fg:w="59"/><text x="62.1395%" y="431.50">&lt;rpc_p..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.5332%" y="405" width="0.0801%" height="15" fill="rgb(239,216,39)" fg:x="831" fg:w="1"/><text x="66.7832%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="66.5332%" y="389" width="0.0801%" height="15" fill="rgb(253,29,23)" fg:x="831" fg:w="1"/><text x="66.7832%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="66.6133%" y="421" width="0.2402%" height="15" fill="rgb(220,167,50)" fg:x="832" fg:w="3"/><text x="66.8633%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.7734%" y="405" width="0.0801%" height="15" fill="rgb(232,141,1)" fg:x="834" fg:w="1"/><text x="67.0234%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="66.8535%" y="405" width="0.1601%" height="15" fill="rgb(222,210,1)" fg:x="835" fg:w="2"/><text x="67.1035%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 5.76%)</title><rect x="61.4091%" y="437" width="5.7646%" height="15" fill="rgb(219,84,10)" fg:x="767" fg:w="72"/><text x="61.6591%" y="447.50">&lt;core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="66.8535%" y="421" width="0.3203%" height="15" fill="rgb(245,188,6)" fg:x="835" fg:w="4"/><text x="67.1035%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="67.0136%" y="405" width="0.1601%" height="15" fill="rgb(252,139,39)" fg:x="837" fg:w="2"/><text x="67.2636%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (93 samples, 7.45%)</title><rect x="61.0088%" y="469" width="7.4460%" height="15" fill="rgb(218,42,26)" fg:x="762" fg:w="93"/><text x="61.2588%" y="479.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (89 samples, 7.13%)</title><rect x="61.3291%" y="453" width="7.1257%" height="15" fill="rgb(237,226,51)" fg:x="766" fg:w="89"/><text x="61.5791%" y="463.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (16 samples, 1.28%)</title><rect x="67.1737%" y="437" width="1.2810%" height="15" fill="rgb(246,15,17)" fg:x="839" fg:w="16"/><text x="67.4237%" y="447.50"></text></g><g><title>__libc_malloc (13 samples, 1.04%)</title><rect x="67.4139%" y="421" width="1.0408%" height="15" fill="rgb(228,170,42)" fg:x="842" fg:w="13"/><text x="67.6639%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4548%" y="469" width="0.0801%" height="15" fill="rgb(248,118,53)" fg:x="855" fg:w="1"/><text x="68.7048%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4548%" y="453" width="0.0801%" height="15" fill="rgb(207,30,10)" fg:x="855" fg:w="1"/><text x="68.7048%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.48%)</title><rect x="68.6950%" y="453" width="0.4804%" height="15" fill="rgb(217,104,38)" fg:x="858" fg:w="6"/><text x="68.9450%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.0953%" y="437" width="0.0801%" height="15" fill="rgb(211,165,26)" fg:x="863" fg:w="1"/><text x="69.3453%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (113 samples, 9.05%)</title><rect x="60.2082%" y="485" width="9.0472%" height="15" fill="rgb(247,38,9)" fg:x="752" fg:w="113"/><text x="60.4582%" y="495.50">&lt;core::iter::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.72%)</title><rect x="68.5348%" y="469" width="0.7206%" height="15" fill="rgb(218,187,8)" fg:x="856" fg:w="9"/><text x="68.7848%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.1753%" y="453" width="0.0801%" height="15" fill="rgb(247,94,28)" fg:x="864" fg:w="1"/><text x="69.4253%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (119 samples, 9.53%)</title><rect x="60.0480%" y="517" width="9.5276%" height="15" fill="rgb(218,173,30)" fg:x="750" fg:w="119"/><text x="60.2980%" y="527.50">&lt;rpc_proto::Js..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (119 samples, 9.53%)</title><rect x="60.0480%" y="501" width="9.5276%" height="15" fill="rgb(245,45,36)" fg:x="750" fg:w="119"/><text x="60.2980%" y="511.50">&lt;std::collecti..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="69.2554%" y="485" width="0.3203%" height="15" fill="rgb(221,172,44)" fg:x="865" fg:w="4"/><text x="69.5054%" y="495.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="69.2554%" y="469" width="0.3203%" height="15" fill="rgb(222,45,12)" fg:x="865" fg:w="4"/><text x="69.5054%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="69.7358%" y="485" width="0.0801%" height="15" fill="rgb(250,10,22)" fg:x="871" fg:w="1"/><text x="69.9858%" y="495.50"></text></g><g><title>__libc_malloc (7 samples, 0.56%)</title><rect x="69.8959%" y="469" width="0.5604%" height="15" fill="rgb(239,27,0)" fg:x="873" fg:w="7"/><text x="70.1459%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6966%" y="437" width="0.0801%" height="15" fill="rgb(223,118,22)" fg:x="883" fg:w="1"/><text x="70.9466%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.96%)</title><rect x="70.4564%" y="469" width="0.9608%" height="15" fill="rgb(251,81,25)" fg:x="880" fg:w="12"/><text x="70.7064%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (10 samples, 0.80%)</title><rect x="70.6165%" y="453" width="0.8006%" height="15" fill="rgb(237,225,53)" fg:x="882" fg:w="10"/><text x="70.8665%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (8 samples, 0.64%)</title><rect x="70.7766%" y="437" width="0.6405%" height="15" fill="rgb(237,186,51)" fg:x="884" fg:w="8"/><text x="71.0266%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="71.4171%" y="469" width="0.1601%" height="15" fill="rgb(247,209,11)" fg:x="892" fg:w="2"/><text x="71.6671%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.4972%" y="453" width="0.0801%" height="15" fill="rgb(223,109,27)" fg:x="893" fg:w="1"/><text x="71.7472%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4972%" y="437" width="0.0801%" height="15" fill="rgb(246,181,13)" fg:x="893" fg:w="1"/><text x="71.7472%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.4972%" y="421" width="0.0801%" height="15" fill="rgb(234,57,44)" fg:x="893" fg:w="1"/><text x="71.7472%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="71.4972%" y="405" width="0.0801%" height="15" fill="rgb(211,227,50)" fg:x="893" fg:w="1"/><text x="71.7472%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="71.4972%" y="389" width="0.0801%" height="15" fill="rgb(254,57,34)" fg:x="893" fg:w="1"/><text x="71.7472%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5773%" y="469" width="0.0801%" height="15" fill="rgb(227,212,26)" fg:x="894" fg:w="1"/><text x="71.8273%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5773%" y="453" width="0.0801%" height="15" fill="rgb(244,169,44)" fg:x="894" fg:w="1"/><text x="71.8273%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5773%" y="437" width="0.0801%" height="15" fill="rgb(236,135,50)" fg:x="894" fg:w="1"/><text x="71.8273%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.5773%" y="421" width="0.0801%" height="15" fill="rgb(241,89,30)" fg:x="894" fg:w="1"/><text x="71.8273%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5773%" y="405" width="0.0801%" height="15" fill="rgb(206,113,34)" fg:x="894" fg:w="1"/><text x="71.8273%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="71.6573%" y="469" width="0.1601%" height="15" fill="rgb(218,104,52)" fg:x="895" fg:w="2"/><text x="71.9073%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="71.6573%" y="453" width="0.1601%" height="15" fill="rgb(223,82,32)" fg:x="895" fg:w="2"/><text x="71.9073%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.6573%" y="437" width="0.1601%" height="15" fill="rgb(249,219,30)" fg:x="895" fg:w="2"/><text x="71.9073%" y="447.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="71.8175%" y="437" width="0.2402%" height="15" fill="rgb(233,141,21)" fg:x="897" fg:w="3"/><text x="72.0675%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="72.2178%" y="421" width="0.3203%" height="15" fill="rgb(252,87,44)" fg:x="902" fg:w="4"/><text x="72.4678%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5380%" y="421" width="0.0801%" height="15" fill="rgb(229,48,33)" fg:x="906" fg:w="1"/><text x="72.7880%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5380%" y="405" width="0.0801%" height="15" fill="rgb(229,23,22)" fg:x="906" fg:w="1"/><text x="72.7880%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5380%" y="389" width="0.0801%" height="15" fill="rgb(244,116,16)" fg:x="906" fg:w="1"/><text x="72.7880%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="72.6982%" y="389" width="0.2402%" height="15" fill="rgb(247,45,10)" fg:x="908" fg:w="3"/><text x="72.9482%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.7782%" y="373" width="0.1601%" height="15" fill="rgb(228,60,29)" fg:x="909" fg:w="2"/><text x="73.0282%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.8583%" y="357" width="0.0801%" height="15" fill="rgb(205,129,15)" fg:x="910" fg:w="1"/><text x="73.1083%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="72.6181%" y="405" width="0.4003%" height="15" fill="rgb(206,229,4)" fg:x="907" fg:w="5"/><text x="72.8681%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="72.9384%" y="389" width="0.0801%" height="15" fill="rgb(249,191,30)" fg:x="911" fg:w="1"/><text x="73.1884%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9384%" y="373" width="0.0801%" height="15" fill="rgb(250,84,54)" fg:x="911" fg:w="1"/><text x="73.1884%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="73.0184%" y="405" width="0.0801%" height="15" fill="rgb(207,25,53)" fg:x="912" fg:w="1"/><text x="73.2684%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.0985%" y="389" width="0.0801%" height="15" fill="rgb(235,40,8)" fg:x="913" fg:w="1"/><text x="73.3485%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1785%" y="389" width="0.0801%" height="15" fill="rgb(226,169,33)" fg:x="914" fg:w="1"/><text x="73.4285%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.1785%" y="373" width="0.0801%" height="15" fill="rgb(238,110,8)" fg:x="914" fg:w="1"/><text x="73.4285%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="73.2586%" y="373" width="0.0801%" height="15" fill="rgb(251,206,12)" fg:x="915" fg:w="1"/><text x="73.5086%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.3387%" y="357" width="0.1601%" height="15" fill="rgb(248,171,18)" fg:x="916" fg:w="2"/><text x="73.5887%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="73.0985%" y="405" width="0.4804%" height="15" fill="rgb(213,65,46)" fg:x="913" fg:w="6"/><text x="73.3485%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="73.2586%" y="389" width="0.3203%" height="15" fill="rgb(211,154,15)" fg:x="915" fg:w="4"/><text x="73.5086%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="73.3387%" y="373" width="0.2402%" height="15" fill="rgb(217,75,43)" fg:x="916" fg:w="3"/><text x="73.5887%" y="383.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.4988%" y="357" width="0.0801%" height="15" fill="rgb(230,32,33)" fg:x="918" fg:w="1"/><text x="73.7488%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="73.4988%" y="341" width="0.0801%" height="15" fill="rgb(221,100,16)" fg:x="918" fg:w="1"/><text x="73.7488%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (24 samples, 1.92%)</title><rect x="71.8175%" y="469" width="1.9215%" height="15" fill="rgb(212,129,47)" fg:x="897" fg:w="24"/><text x="72.0675%" y="479.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 1.92%)</title><rect x="71.8175%" y="453" width="1.9215%" height="15" fill="rgb(239,217,47)" fg:x="897" fg:w="24"/><text x="72.0675%" y="463.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 1.68%)</title><rect x="72.0576%" y="437" width="1.6813%" height="15" fill="rgb(230,84,24)" fg:x="900" fg:w="21"/><text x="72.3076%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (14 samples, 1.12%)</title><rect x="72.6181%" y="421" width="1.1209%" height="15" fill="rgb(214,153,51)" fg:x="907" fg:w="14"/><text x="72.8681%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="73.5789%" y="405" width="0.1601%" height="15" fill="rgb(231,6,35)" fg:x="919" fg:w="2"/><text x="73.8289%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="73.7390%" y="469" width="0.0801%" height="15" fill="rgb(229,122,30)" fg:x="921" fg:w="1"/><text x="73.9890%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.7390%" y="453" width="0.0801%" height="15" fill="rgb(234,71,10)" fg:x="921" fg:w="1"/><text x="73.9890%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.3795%" y="437" width="0.0801%" height="15" fill="rgb(215,173,26)" fg:x="929" fg:w="1"/><text x="74.6295%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="74.4596%" y="437" width="0.0801%" height="15" fill="rgb(248,118,52)" fg:x="930" fg:w="1"/><text x="74.7096%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="74.5396%" y="421" width="0.4804%" height="15" fill="rgb(237,55,46)" fg:x="931" fg:w="6"/><text x="74.7896%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="74.6197%" y="405" width="0.4003%" height="15" fill="rgb(243,214,43)" fg:x="932" fg:w="5"/><text x="74.8697%" y="415.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="74.6998%" y="389" width="0.3203%" height="15" fill="rgb(252,123,30)" fg:x="933" fg:w="4"/><text x="74.9498%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="75.1001%" y="389" width="0.0801%" height="15" fill="rgb(215,73,39)" fg:x="938" fg:w="1"/><text x="75.3501%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.4203%" y="341" width="0.1601%" height="15" fill="rgb(251,194,29)" fg:x="942" fg:w="2"/><text x="75.6703%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="75.3403%" y="373" width="0.4003%" height="15" fill="rgb(224,58,52)" fg:x="941" fg:w="5"/><text x="75.5903%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="75.4203%" y="357" width="0.3203%" height="15" fill="rgb(248,106,46)" fg:x="942" fg:w="4"/><text x="75.6703%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="75.5805%" y="341" width="0.1601%" height="15" fill="rgb(223,80,29)" fg:x="944" fg:w="2"/><text x="75.8305%" y="351.50"></text></g><g><title>serde::ser::Serializer::collect_seq (11 samples, 0.88%)</title><rect x="75.0200%" y="421" width="0.8807%" height="15" fill="rgb(243,137,9)" fg:x="937" fg:w="11"/><text x="75.2700%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="75.0200%" y="405" width="0.8807%" height="15" fill="rgb(235,121,28)" fg:x="937" fg:w="11"/><text x="75.2700%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="75.1801%" y="389" width="0.7206%" height="15" fill="rgb(219,121,41)" fg:x="939" fg:w="9"/><text x="75.4301%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="75.7406%" y="373" width="0.1601%" height="15" fill="rgb(251,60,6)" fg:x="946" fg:w="2"/><text x="75.9906%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8207%" y="357" width="0.0801%" height="15" fill="rgb(208,12,30)" fg:x="947" fg:w="1"/><text x="76.0707%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.1409%" y="405" width="0.0801%" height="15" fill="rgb(207,176,36)" fg:x="951" fg:w="1"/><text x="76.3909%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2210%" y="389" width="0.0801%" height="15" fill="rgb(211,188,29)" fg:x="952" fg:w="1"/><text x="76.4710%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2210%" y="373" width="0.0801%" height="15" fill="rgb(220,184,37)" fg:x="952" fg:w="1"/><text x="76.4710%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2210%" y="357" width="0.0801%" height="15" fill="rgb(239,87,37)" fg:x="952" fg:w="1"/><text x="76.4710%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3010%" y="373" width="0.0801%" height="15" fill="rgb(232,113,44)" fg:x="953" fg:w="1"/><text x="76.5510%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (24 samples, 1.92%)</title><rect x="74.5396%" y="437" width="1.9215%" height="15" fill="rgb(246,25,39)" fg:x="931" fg:w="24"/><text x="74.7896%" y="447.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="75.9007%" y="421" width="0.5604%" height="15" fill="rgb(247,30,13)" fg:x="948" fg:w="7"/><text x="76.1507%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="76.2210%" y="405" width="0.2402%" height="15" fill="rgb(230,176,35)" fg:x="952" fg:w="3"/><text x="76.4710%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="76.3010%" y="389" width="0.1601%" height="15" fill="rgb(222,23,18)" fg:x="953" fg:w="2"/><text x="76.5510%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="76.3811%" y="373" width="0.0801%" height="15" fill="rgb(234,86,8)" fg:x="954" fg:w="1"/><text x="76.6311%" y="383.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (208 samples, 16.65%)</title><rect x="60.0480%" y="533" width="16.6533%" height="15" fill="rgb(206,218,47)" fg:x="750" fg:w="208"/><text x="60.2980%" y="543.50">&lt;rpc_proto::Json as core::..</text></g><g><title>kernel::model::EntityPtr::to_json_value (89 samples, 7.13%)</title><rect x="69.5757%" y="517" width="7.1257%" height="15" fill="rgb(229,35,31)" fg:x="869" fg:w="89"/><text x="69.8257%" y="527.50">kernel::mo..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (89 samples, 7.13%)</title><rect x="69.5757%" y="501" width="7.1257%" height="15" fill="rgb(242,81,7)" fg:x="869" fg:w="89"/><text x="69.8257%" y="511.50">kernel::mo..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (86 samples, 6.89%)</title><rect x="69.8159%" y="485" width="6.8855%" height="15" fill="rgb(231,11,35)" fg:x="872" fg:w="86"/><text x="70.0659%" y="495.50">&lt;serde_js..</text></g><g><title>serde::ser::Serializer::collect_map (36 samples, 2.88%)</title><rect x="73.8191%" y="469" width="2.8823%" height="15" fill="rgb(219,218,17)" fg:x="922" fg:w="36"/><text x="74.0691%" y="479.50">se..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (30 samples, 2.40%)</title><rect x="74.2994%" y="453" width="2.4019%" height="15" fill="rgb(221,83,32)" fg:x="928" fg:w="30"/><text x="74.5494%" y="463.50">ke..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="76.4612%" y="437" width="0.2402%" height="15" fill="rgb(233,49,54)" fg:x="955" fg:w="3"/><text x="76.7112%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.5412%" y="421" width="0.1601%" height="15" fill="rgb(206,18,51)" fg:x="956" fg:w="2"/><text x="76.7912%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="76.7014%" y="533" width="0.0801%" height="15" fill="rgb(249,193,15)" fg:x="958" fg:w="1"/><text x="76.9514%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.7014%" y="517" width="0.0801%" height="15" fill="rgb(245,186,19)" fg:x="958" fg:w="1"/><text x="76.9514%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (233 samples, 18.65%)</title><rect x="58.2066%" y="565" width="18.6549%" height="15" fill="rgb(230,4,24)" fg:x="727" fg:w="233"/><text x="58.4566%" y="575.50">&lt;core::iter::adapters::map::M..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (233 samples, 18.65%)</title><rect x="58.2066%" y="549" width="18.6549%" height="15" fill="rgb(234,75,27)" fg:x="727" fg:w="233"/><text x="58.4566%" y="559.50">plugins_rpc::sessions::Sessio..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="76.7814%" y="533" width="0.0801%" height="15" fill="rgb(244,187,35)" fg:x="959" fg:w="1"/><text x="77.0314%" y="543.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="76.7814%" y="517" width="0.0801%" height="15" fill="rgb(241,97,43)" fg:x="959" fg:w="1"/><text x="77.0314%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7814%" y="501" width="0.0801%" height="15" fill="rgb(236,94,2)" fg:x="959" fg:w="1"/><text x="77.0314%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (351 samples, 28.10%)</title><rect x="48.8391%" y="597" width="28.1025%" height="15" fill="rgb(231,175,7)" fg:x="610" fg:w="351"/><text x="49.0891%" y="607.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (235 samples, 18.82%)</title><rect x="58.1265%" y="581" width="18.8151%" height="15" fill="rgb(236,89,47)" fg:x="726" fg:w="235"/><text x="58.3765%" y="591.50">alloc::vec::in_place_collect:..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.8615%" y="565" width="0.0801%" height="15" fill="rgb(213,191,37)" fg:x="960" fg:w="1"/><text x="77.1115%" y="575.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (366 samples, 29.30%)</title><rect x="47.7982%" y="613" width="29.3034%" height="15" fill="rgb(252,0,34)" fg:x="597" fg:w="366"/><text x="48.0482%" y="623.50">&lt;plugins_rpc::sessions::SessionServices as plug..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.9416%" y="597" width="0.1601%" height="15" fill="rgb(208,145,44)" fg:x="961" fg:w="2"/><text x="77.1916%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.0216%" y="581" width="0.0801%" height="15" fill="rgb(227,95,50)" fg:x="962" fg:w="1"/><text x="77.2716%" y="591.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="77.1017%" y="613" width="0.0801%" height="15" fill="rgb(222,136,24)" fg:x="963" fg:w="1"/><text x="77.3517%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.1017%" y="597" width="0.0801%" height="15" fill="rgb(218,105,10)" fg:x="963" fg:w="1"/><text x="77.3517%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.1017%" y="581" width="0.0801%" height="15" fill="rgb(216,65,28)" fg:x="963" fg:w="1"/><text x="77.3517%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1017%" y="565" width="0.0801%" height="15" fill="rgb(229,6,28)" fg:x="963" fg:w="1"/><text x="77.3517%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1017%" y="549" width="0.0801%" height="15" fill="rgb(222,160,42)" fg:x="963" fg:w="1"/><text x="77.3517%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1017%" y="533" width="0.0801%" height="15" fill="rgb(235,83,49)" fg:x="963" fg:w="1"/><text x="77.3517%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.1017%" y="517" width="0.0801%" height="15" fill="rgb(236,86,36)" fg:x="963" fg:w="1"/><text x="77.3517%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.1017%" y="501" width="0.0801%" height="15" fill="rgb(236,19,41)" fg:x="963" fg:w="1"/><text x="77.3517%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.1017%" y="485" width="0.0801%" height="15" fill="rgb(217,71,31)" fg:x="963" fg:w="1"/><text x="77.3517%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="77.1817%" y="613" width="0.1601%" height="15" fill="rgb(236,209,25)" fg:x="964" fg:w="2"/><text x="77.4317%" y="623.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="77.3419%" y="581" width="0.0801%" height="15" fill="rgb(247,104,21)" fg:x="966" fg:w="1"/><text x="77.5919%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="77.3419%" y="613" width="0.1601%" height="15" fill="rgb(243,80,38)" fg:x="966" fg:w="2"/><text x="77.5919%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="77.3419%" y="597" width="0.1601%" height="15" fill="rgb(232,109,38)" fg:x="966" fg:w="2"/><text x="77.5919%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.4219%" y="581" width="0.0801%" height="15" fill="rgb(212,177,53)" fg:x="967" fg:w="1"/><text x="77.6719%" y="591.50"></text></g><g><title>engine::perform::StandardPerformer::perform (550 samples, 44.04%)</title><rect x="33.5468%" y="677" width="44.0352%" height="15" fill="rgb(227,30,34)" fg:x="419" fg:w="550"/><text x="33.7968%" y="687.50">engine::perform::StandardPerformer::perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (418 samples, 33.47%)</title><rect x="44.1153%" y="661" width="33.4668%" height="15" fill="rgb(205,175,25)" fg:x="551" fg:w="418"/><text x="44.3653%" y="671.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (417 samples, 33.39%)</title><rect x="44.1954%" y="645" width="33.3867%" height="15" fill="rgb(249,39,54)" fg:x="552" fg:w="417"/><text x="44.4454%" y="655.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plu..</text></g><g><title>plugins_rpc::querying::have_surroundings (373 samples, 29.86%)</title><rect x="47.7182%" y="629" width="29.8639%" height="15" fill="rgb(215,54,37)" fg:x="596" fg:w="373"/><text x="47.9682%" y="639.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="77.5020%" y="613" width="0.0801%" height="15" fill="rgb(205,60,46)" fg:x="968" fg:w="1"/><text x="77.7520%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::evaluate (1 samples, 0.08%)</title><rect x="77.5821%" y="677" width="0.0801%" height="15" fill="rgb(238,89,29)" fg:x="969" fg:w="1"/><text x="77.8321%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="77.5821%" y="661" width="0.0801%" height="15" fill="rgb(212,48,10)" fg:x="969" fg:w="1"/><text x="77.8321%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (972 samples, 77.82%)</title><rect x="0.0000%" y="757" width="77.8223%" height="15" fill="rgb(237,186,28)" fg:x="0" fg:w="972"/><text x="0.2500%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (972 samples, 77.82%)</title><rect x="0.0000%" y="741" width="77.8223%" height="15" fill="rgb(237,204,4)" fg:x="0" fg:w="972"/><text x="0.2500%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (972 samples, 77.82%)</title><rect x="0.0000%" y="725" width="77.8223%" height="15" fill="rgb(237,15,47)" fg:x="0" fg:w="972"/><text x="0.2500%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (577 samples, 46.20%)</title><rect x="31.6253%" y="709" width="46.1970%" height="15" fill="rgb(244,110,25)" fg:x="395" fg:w="577"/><text x="31.8753%" y="719.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (577 samples, 46.20%)</title><rect x="31.6253%" y="693" width="46.1970%" height="15" fill="rgb(241,12,16)" fg:x="395" fg:w="577"/><text x="31.8753%" y="703.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="77.6621%" y="677" width="0.1601%" height="15" fill="rgb(235,25,9)" fg:x="970" fg:w="2"/><text x="77.9121%" y="687.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.16%)</title><rect x="77.6621%" y="661" width="0.1601%" height="15" fill="rgb(245,159,19)" fg:x="970" fg:w="2"/><text x="77.9121%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.16%)</title><rect x="77.6621%" y="645" width="0.1601%" height="15" fill="rgb(236,63,32)" fg:x="970" fg:w="2"/><text x="77.9121%" y="655.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="77.6621%" y="629" width="0.1601%" height="15" fill="rgb(235,32,52)" fg:x="970" fg:w="2"/><text x="77.9121%" y="639.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="77.6621%" y="613" width="0.1601%" height="15" fill="rgb(209,176,21)" fg:x="970" fg:w="2"/><text x="77.9121%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="77.9023%" y="693" width="0.0801%" height="15" fill="rgb(205,90,42)" fg:x="973" fg:w="1"/><text x="78.1523%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.9023%" y="677" width="0.0801%" height="15" fill="rgb(213,132,16)" fg:x="973" fg:w="1"/><text x="78.1523%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="77.8223%" y="709" width="0.3203%" height="15" fill="rgb(232,11,22)" fg:x="972" fg:w="4"/><text x="78.0723%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (2 samples, 0.16%)</title><rect x="77.9824%" y="693" width="0.1601%" height="15" fill="rgb(248,167,41)" fg:x="974" fg:w="2"/><text x="78.2324%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.9824%" y="677" width="0.1601%" height="15" fill="rgb(209,127,6)" fg:x="974" fg:w="2"/><text x="78.2324%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (2 samples, 0.16%)</title><rect x="77.9824%" y="661" width="0.1601%" height="15" fill="rgb(246,210,34)" fg:x="974" fg:w="2"/><text x="78.2324%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.9824%" y="645" width="0.1601%" height="15" fill="rgb(238,165,13)" fg:x="974" fg:w="2"/><text x="78.2324%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.9824%" y="629" width="0.1601%" height="15" fill="rgb(233,98,15)" fg:x="974" fg:w="2"/><text x="78.2324%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.9824%" y="613" width="0.1601%" height="15" fill="rgb(215,215,51)" fg:x="974" fg:w="2"/><text x="78.2324%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="77.9824%" y="597" width="0.1601%" height="15" fill="rgb(217,161,25)" fg:x="974" fg:w="2"/><text x="78.2324%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.0624%" y="581" width="0.0801%" height="15" fill="rgb(217,167,48)" fg:x="975" fg:w="1"/><text x="78.3124%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0624%" y="565" width="0.0801%" height="15" fill="rgb(205,163,34)" fg:x="975" fg:w="1"/><text x="78.3124%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="78.1425%" y="645" width="0.0801%" height="15" fill="rgb(241,197,31)" fg:x="976" fg:w="1"/><text x="78.3925%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="78.2226%" y="629" width="0.2402%" height="15" fill="rgb(225,123,11)" fg:x="977" fg:w="3"/><text x="78.4726%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="78.2226%" y="613" width="0.2402%" height="15" fill="rgb(217,4,20)" fg:x="977" fg:w="3"/><text x="78.4726%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="78.2226%" y="597" width="0.2402%" height="15" fill="rgb(215,55,9)" fg:x="977" fg:w="3"/><text x="78.4726%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.2226%" y="581" width="0.2402%" height="15" fill="rgb(218,165,5)" fg:x="977" fg:w="3"/><text x="78.4726%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.3827%" y="565" width="0.0801%" height="15" fill="rgb(222,175,15)" fg:x="979" fg:w="1"/><text x="78.6327%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3827%" y="549" width="0.0801%" height="15" fill="rgb(223,85,34)" fg:x="979" fg:w="1"/><text x="78.6327%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (5 samples, 0.40%)</title><rect x="78.1425%" y="661" width="0.4003%" height="15" fill="rgb(234,228,29)" fg:x="976" fg:w="5"/><text x="78.3925%" y="671.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="78.2226%" y="645" width="0.3203%" height="15" fill="rgb(239,7,28)" fg:x="977" fg:w="4"/><text x="78.4726%" y="655.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="78.4628%" y="629" width="0.0801%" height="15" fill="rgb(252,222,53)" fg:x="980" fg:w="1"/><text x="78.7128%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.4628%" y="613" width="0.0801%" height="15" fill="rgb(232,146,44)" fg:x="980" fg:w="1"/><text x="78.7128%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.4628%" y="597" width="0.0801%" height="15" fill="rgb(243,223,53)" fg:x="980" fg:w="1"/><text x="78.7128%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.4628%" y="581" width="0.0801%" height="15" fill="rgb(219,128,25)" fg:x="980" fg:w="1"/><text x="78.7128%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="78.4628%" y="565" width="0.0801%" height="15" fill="rgb(223,56,32)" fg:x="980" fg:w="1"/><text x="78.7128%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.4628%" y="549" width="0.0801%" height="15" fill="rgb(237,41,3)" fg:x="980" fg:w="1"/><text x="78.7128%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="78.1425%" y="677" width="0.4804%" height="15" fill="rgb(235,138,9)" fg:x="976" fg:w="6"/><text x="78.3925%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.5428%" y="661" width="0.0801%" height="15" fill="rgb(214,131,10)" fg:x="981" fg:w="1"/><text x="78.7928%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.5428%" y="645" width="0.0801%" height="15" fill="rgb(229,89,7)" fg:x="981" fg:w="1"/><text x="78.7928%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="629" width="0.0801%" height="15" fill="rgb(240,24,42)" fg:x="981" fg:w="1"/><text x="78.7928%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5428%" y="613" width="0.0801%" height="15" fill="rgb(243,188,54)" fg:x="981" fg:w="1"/><text x="78.7928%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="597" width="0.0801%" height="15" fill="rgb(246,92,22)" fg:x="981" fg:w="1"/><text x="78.7928%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="581" width="0.0801%" height="15" fill="rgb(211,176,51)" fg:x="981" fg:w="1"/><text x="78.7928%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="565" width="0.0801%" height="15" fill="rgb(246,207,34)" fg:x="981" fg:w="1"/><text x="78.7928%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5428%" y="549" width="0.0801%" height="15" fill="rgb(239,95,2)" fg:x="981" fg:w="1"/><text x="78.7928%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="533" width="0.0801%" height="15" fill="rgb(211,124,25)" fg:x="981" fg:w="1"/><text x="78.7928%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="517" width="0.0801%" height="15" fill="rgb(231,221,19)" fg:x="981" fg:w="1"/><text x="78.7928%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="501" width="0.0801%" height="15" fill="rgb(239,183,19)" fg:x="981" fg:w="1"/><text x="78.7928%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5428%" y="485" width="0.0801%" height="15" fill="rgb(221,130,29)" fg:x="981" fg:w="1"/><text x="78.7928%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="469" width="0.0801%" height="15" fill="rgb(206,130,36)" fg:x="981" fg:w="1"/><text x="78.7928%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5428%" y="453" width="0.0801%" height="15" fill="rgb(215,70,19)" fg:x="981" fg:w="1"/><text x="78.7928%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.5428%" y="437" width="0.0801%" height="15" fill="rgb(244,16,43)" fg:x="981" fg:w="1"/><text x="78.7928%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5428%" y="421" width="0.0801%" height="15" fill="rgb(222,115,32)" fg:x="981" fg:w="1"/><text x="78.7928%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5428%" y="405" width="0.0801%" height="15" fill="rgb(247,48,25)" fg:x="981" fg:w="1"/><text x="78.7928%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.5428%" y="389" width="0.0801%" height="15" fill="rgb(226,180,51)" fg:x="981" fg:w="1"/><text x="78.7928%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.5428%" y="373" width="0.0801%" height="15" fill="rgb(217,142,42)" fg:x="981" fg:w="1"/><text x="78.7928%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.5428%" y="357" width="0.0801%" height="15" fill="rgb(220,178,3)" fg:x="981" fg:w="1"/><text x="78.7928%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.5428%" y="341" width="0.0801%" height="15" fill="rgb(217,221,4)" fg:x="981" fg:w="1"/><text x="78.7928%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5428%" y="325" width="0.0801%" height="15" fill="rgb(237,63,43)" fg:x="981" fg:w="1"/><text x="78.7928%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5428%" y="309" width="0.0801%" height="15" fill="rgb(220,57,8)" fg:x="981" fg:w="1"/><text x="78.7928%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.5428%" y="293" width="0.0801%" height="15" fill="rgb(254,186,27)" fg:x="981" fg:w="1"/><text x="78.7928%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.5428%" y="277" width="0.0801%" height="15" fill="rgb(251,57,28)" fg:x="981" fg:w="1"/><text x="78.7928%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.5428%" y="261" width="0.0801%" height="15" fill="rgb(215,228,0)" fg:x="981" fg:w="1"/><text x="78.7928%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.5428%" y="245" width="0.0801%" height="15" fill="rgb(237,218,39)" fg:x="981" fg:w="1"/><text x="78.7928%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.5428%" y="229" width="0.0801%" height="15" fill="rgb(207,2,54)" fg:x="981" fg:w="1"/><text x="78.7928%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.5428%" y="213" width="0.0801%" height="15" fill="rgb(232,76,50)" fg:x="981" fg:w="1"/><text x="78.7928%" y="223.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.5428%" y="197" width="0.0801%" height="15" fill="rgb(211,85,31)" fg:x="981" fg:w="1"/><text x="78.7928%" y="207.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="78.6229%" y="565" width="0.1601%" height="15" fill="rgb(223,210,27)" fg:x="982" fg:w="2"/><text x="78.8729%" y="575.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="78.6229%" y="549" width="0.1601%" height="15" fill="rgb(254,36,8)" fg:x="982" fg:w="2"/><text x="78.8729%" y="559.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="78.6229%" y="613" width="0.2402%" height="15" fill="rgb(213,4,25)" fg:x="982" fg:w="3"/><text x="78.8729%" y="623.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="78.6229%" y="597" width="0.2402%" height="15" fill="rgb(224,2,39)" fg:x="982" fg:w="3"/><text x="78.8729%" y="607.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="78.6229%" y="581" width="0.2402%" height="15" fill="rgb(208,8,39)" fg:x="982" fg:w="3"/><text x="78.8729%" y="591.50"></text></g><g><title>_dl_signal_exception (1 samples, 0.08%)</title><rect x="78.7830%" y="565" width="0.0801%" height="15" fill="rgb(216,226,3)" fg:x="984" fg:w="1"/><text x="79.0330%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (4 samples, 0.32%)</title><rect x="78.6229%" y="645" width="0.3203%" height="15" fill="rgb(249,139,31)" fg:x="982" fg:w="4"/><text x="78.8729%" y="655.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="78.6229%" y="629" width="0.3203%" height="15" fill="rgb(242,170,35)" fg:x="982" fg:w="4"/><text x="78.8729%" y="639.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="78.8631%" y="613" width="0.0801%" height="15" fill="rgb(238,14,9)" fg:x="985" fg:w="1"/><text x="79.1131%" y="623.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="78.8631%" y="597" width="0.0801%" height="15" fill="rgb(251,81,46)" fg:x="985" fg:w="1"/><text x="79.1131%" y="607.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="78.8631%" y="581" width="0.0801%" height="15" fill="rgb(230,23,4)" fg:x="985" fg:w="1"/><text x="79.1131%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="78.8631%" y="565" width="0.0801%" height="15" fill="rgb(211,85,25)" fg:x="985" fg:w="1"/><text x="79.1131%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8631%" y="549" width="0.0801%" height="15" fill="rgb(252,23,31)" fg:x="985" fg:w="1"/><text x="79.1131%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.8631%" y="533" width="0.0801%" height="15" fill="rgb(234,163,38)" fg:x="985" fg:w="1"/><text x="79.1131%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.8631%" y="517" width="0.0801%" height="15" fill="rgb(210,190,50)" fg:x="985" fg:w="1"/><text x="79.1131%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.8631%" y="501" width="0.0801%" height="15" fill="rgb(228,158,3)" fg:x="985" fg:w="1"/><text x="79.1131%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.8631%" y="485" width="0.0801%" height="15" fill="rgb(216,130,0)" fg:x="985" fg:w="1"/><text x="79.1131%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.8631%" y="469" width="0.0801%" height="15" fill="rgb(224,184,10)" fg:x="985" fg:w="1"/><text x="79.1131%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.8631%" y="453" width="0.0801%" height="15" fill="rgb(214,202,18)" fg:x="985" fg:w="1"/><text x="79.1131%" y="463.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.96%)</title><rect x="78.1425%" y="709" width="0.9608%" height="15" fill="rgb(213,229,54)" fg:x="976" fg:w="12"/><text x="78.3925%" y="719.50"></text></g><g><title>engine::session::Session::new (12 samples, 0.96%)</title><rect x="78.1425%" y="693" width="0.9608%" height="15" fill="rgb(246,120,0)" fg:x="976" fg:w="12"/><text x="78.3925%" y="703.50"></text></g><g><title>engine::session::Session::initialize (6 samples, 0.48%)</title><rect x="78.6229%" y="677" width="0.4804%" height="15" fill="rgb(237,6,15)" fg:x="982" fg:w="6"/><text x="78.8729%" y="687.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="78.6229%" y="661" width="0.4804%" height="15" fill="rgb(252,156,15)" fg:x="982" fg:w="6"/><text x="78.8729%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="78.9432%" y="645" width="0.1601%" height="15" fill="rgb(249,78,18)" fg:x="986" fg:w="2"/><text x="79.1932%" y="655.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="78.9432%" y="629" width="0.1601%" height="15" fill="rgb(230,223,44)" fg:x="986" fg:w="2"/><text x="79.1932%" y="639.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="79.1033%" y="661" width="0.0801%" height="15" fill="rgb(230,222,32)" fg:x="988" fg:w="1"/><text x="79.3533%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="79.1033%" y="645" width="0.0801%" height="15" fill="rgb(247,54,6)" fg:x="988" fg:w="1"/><text x="79.3533%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="79.1033%" y="629" width="0.0801%" height="15" fill="rgb(247,115,45)" fg:x="988" fg:w="1"/><text x="79.3533%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1033%" y="613" width="0.0801%" height="15" fill="rgb(213,203,37)" fg:x="988" fg:w="1"/><text x="79.3533%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.1833%" y="597" width="0.0801%" height="15" fill="rgb(248,188,18)" fg:x="989" fg:w="1"/><text x="79.4333%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="79.1833%" y="613" width="0.2402%" height="15" fill="rgb(206,80,8)" fg:x="989" fg:w="3"/><text x="79.4333%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="79.2634%" y="597" width="0.1601%" height="15" fill="rgb(245,217,31)" fg:x="990" fg:w="2"/><text x="79.5134%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.4235%" y="597" width="0.0801%" height="15" fill="rgb(220,193,15)" fg:x="992" fg:w="1"/><text x="79.6735%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5036%" y="597" width="0.0801%" height="15" fill="rgb(226,7,19)" fg:x="993" fg:w="1"/><text x="79.7536%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.5036%" y="581" width="0.0801%" height="15" fill="rgb(222,145,31)" fg:x="993" fg:w="1"/><text x="79.7536%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5036%" y="565" width="0.0801%" height="15" fill="rgb(241,193,36)" fg:x="993" fg:w="1"/><text x="79.7536%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="79.1833%" y="629" width="0.4804%" height="15" fill="rgb(225,123,33)" fg:x="989" fg:w="6"/><text x="79.4333%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="79.4235%" y="613" width="0.2402%" height="15" fill="rgb(246,136,38)" fg:x="992" fg:w="3"/><text x="79.6735%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5837%" y="597" width="0.0801%" height="15" fill="rgb(243,56,24)" fg:x="994" fg:w="1"/><text x="79.8337%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5837%" y="581" width="0.0801%" height="15" fill="rgb(215,147,2)" fg:x="994" fg:w="1"/><text x="79.8337%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5837%" y="565" width="0.0801%" height="15" fill="rgb(209,155,27)" fg:x="994" fg:w="1"/><text x="79.8337%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6637%" y="597" width="0.0801%" height="15" fill="rgb(222,177,11)" fg:x="995" fg:w="1"/><text x="79.9137%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.6637%" y="629" width="0.1601%" height="15" fill="rgb(212,227,15)" fg:x="995" fg:w="2"/><text x="79.9137%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="79.6637%" y="613" width="0.1601%" height="15" fill="rgb(214,138,20)" fg:x="995" fg:w="2"/><text x="79.9137%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7438%" y="597" width="0.0801%" height="15" fill="rgb(221,170,31)" fg:x="996" fg:w="1"/><text x="79.9938%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7438%" y="581" width="0.0801%" height="15" fill="rgb(253,207,5)" fg:x="996" fg:w="1"/><text x="79.9938%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7438%" y="565" width="0.0801%" height="15" fill="rgb(212,64,37)" fg:x="996" fg:w="1"/><text x="79.9938%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7438%" y="549" width="0.0801%" height="15" fill="rgb(208,113,51)" fg:x="996" fg:w="1"/><text x="79.9938%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.8239%" y="581" width="0.0801%" height="15" fill="rgb(237,15,5)" fg:x="997" fg:w="1"/><text x="80.0739%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.9039%" y="581" width="0.0801%" height="15" fill="rgb(238,33,18)" fg:x="998" fg:w="1"/><text x="80.1539%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9840%" y="533" width="0.0801%" height="15" fill="rgb(253,206,50)" fg:x="999" fg:w="1"/><text x="80.2340%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9840%" y="517" width="0.0801%" height="15" fill="rgb(242,158,43)" fg:x="999" fg:w="1"/><text x="80.2340%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9840%" y="501" width="0.0801%" height="15" fill="rgb(213,125,27)" fg:x="999" fg:w="1"/><text x="80.2340%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.0641%" y="517" width="0.0801%" height="15" fill="rgb(233,161,31)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0641%" y="501" width="0.0801%" height="15" fill="rgb(218,135,6)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.0641%" y="485" width="0.0801%" height="15" fill="rgb(222,73,53)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.0641%" y="469" width="0.0801%" height="15" fill="rgb(229,66,53)" fg:x="1000" fg:w="1"/><text x="80.3141%" y="479.50"></text></g><g><title>engine::session::Session::flush (14 samples, 1.12%)</title><rect x="79.1033%" y="693" width="1.1209%" height="15" fill="rgb(208,128,19)" fg:x="988" fg:w="14"/><text x="79.3533%" y="703.50"></text></g><g><title>engine::session::Session::save_entity_changes (14 samples, 1.12%)</title><rect x="79.1033%" y="677" width="1.1209%" height="15" fill="rgb(235,70,27)" fg:x="988" fg:w="14"/><text x="79.3533%" y="687.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (13 samples, 1.04%)</title><rect x="79.1833%" y="661" width="1.0408%" height="15" fill="rgb(241,130,30)" fg:x="989" fg:w="13"/><text x="79.4333%" y="671.50"></text></g><g><title>engine::session::Session::check_for_changes (13 samples, 1.04%)</title><rect x="79.1833%" y="645" width="1.0408%" height="15" fill="rgb(222,57,48)" fg:x="989" fg:w="13"/><text x="79.4333%" y="655.50"></text></g><g><title>kernel::compare::any_entity_changes (5 samples, 0.40%)</title><rect x="79.8239%" y="629" width="0.4003%" height="15" fill="rgb(225,204,29)" fg:x="997" fg:w="5"/><text x="80.0739%" y="639.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="79.8239%" y="613" width="0.4003%" height="15" fill="rgb(240,196,35)" fg:x="997" fg:w="5"/><text x="80.0739%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="79.8239%" y="597" width="0.4003%" height="15" fill="rgb(215,150,16)" fg:x="997" fg:w="5"/><text x="80.0739%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="79.9840%" y="581" width="0.2402%" height="15" fill="rgb(209,170,13)" fg:x="999" fg:w="3"/><text x="80.2340%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="79.9840%" y="565" width="0.2402%" height="15" fill="rgb(235,75,31)" fg:x="999" fg:w="3"/><text x="80.2340%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="79.9840%" y="549" width="0.2402%" height="15" fill="rgb(252,1,47)" fg:x="999" fg:w="3"/><text x="80.2340%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0641%" y="533" width="0.1601%" height="15" fill="rgb(241,2,36)" fg:x="1000" fg:w="2"/><text x="80.3141%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.1441%" y="517" width="0.0801%" height="15" fill="rgb(236,191,4)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="80.1441%" y="501" width="0.0801%" height="15" fill="rgb(212,65,35)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.1441%" y="485" width="0.0801%" height="15" fill="rgb(209,49,33)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1441%" y="469" width="0.0801%" height="15" fill="rgb(208,36,46)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.1441%" y="453" width="0.0801%" height="15" fill="rgb(210,125,2)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.1441%" y="437" width="0.0801%" height="15" fill="rgb(225,62,6)" fg:x="1001" fg:w="1"/><text x="80.3941%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="80.2242%" y="677" width="0.0801%" height="15" fill="rgb(210,54,27)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.2242%" y="661" width="0.0801%" height="15" fill="rgb(249,189,52)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="80.2242%" y="645" width="0.0801%" height="15" fill="rgb(225,134,40)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="80.2242%" y="629" width="0.0801%" height="15" fill="rgb(206,13,37)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="639.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.2242%" y="613" width="0.0801%" height="15" fill="rgb(232,114,28)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="80.2242%" y="597" width="0.0801%" height="15" fill="rgb(253,215,8)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="80.2242%" y="581" width="0.0801%" height="15" fill="rgb(254,64,19)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="591.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2242%" y="565" width="0.0801%" height="15" fill="rgb(242,18,46)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2242%" y="549" width="0.0801%" height="15" fill="rgb(239,192,30)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2242%" y="533" width="0.0801%" height="15" fill="rgb(232,73,14)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.2242%" y="517" width="0.0801%" height="15" fill="rgb(225,51,9)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2242%" y="501" width="0.0801%" height="15" fill="rgb(242,217,54)" fg:x="1002" fg:w="1"/><text x="80.4742%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="80.3042%" y="677" width="0.0801%" height="15" fill="rgb(216,93,3)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.3042%" y="661" width="0.0801%" height="15" fill="rgb(230,119,33)" fg:x="1003" fg:w="1"/><text x="80.5542%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.4644%" y="597" width="0.0801%" height="15" fill="rgb(238,170,27)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4644%" y="581" width="0.0801%" height="15" fill="rgb(229,8,2)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4644%" y="565" width="0.0801%" height="15" fill="rgb(205,214,42)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4644%" y="549" width="0.0801%" height="15" fill="rgb(245,113,1)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.4644%" y="533" width="0.0801%" height="15" fill="rgb(252,50,2)" fg:x="1005" fg:w="1"/><text x="80.7144%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.5444%" y="581" width="0.0801%" height="15" fill="rgb(225,122,24)" fg:x="1006" fg:w="1"/><text x="80.7944%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.6245%" y="565" width="0.0801%" height="15" fill="rgb(234,129,31)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.6245%" y="549" width="0.0801%" height="15" fill="rgb(219,177,4)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6245%" y="533" width="0.0801%" height="15" fill="rgb(225,142,27)" fg:x="1007" fg:w="1"/><text x="80.8745%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7046%" y="549" width="0.0801%" height="15" fill="rgb(205,107,51)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7046%" y="533" width="0.0801%" height="15" fill="rgb(236,223,15)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7046%" y="517" width="0.0801%" height="15" fill="rgb(235,133,11)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7046%" y="501" width="0.0801%" height="15" fill="rgb(247,172,13)" fg:x="1008" fg:w="1"/><text x="80.9546%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="80.4644%" y="613" width="0.4003%" height="15" fill="rgb(233,191,41)" fg:x="1005" fg:w="5"/><text x="80.7144%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.5444%" y="597" width="0.3203%" height="15" fill="rgb(250,65,16)" fg:x="1006" fg:w="4"/><text x="80.7944%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.6245%" y="581" width="0.2402%" height="15" fill="rgb(206,10,27)" fg:x="1007" fg:w="3"/><text x="80.8745%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.7046%" y="565" width="0.1601%" height="15" fill="rgb(212,96,22)" fg:x="1008" fg:w="2"/><text x="80.9546%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.7846%" y="549" width="0.0801%" height="15" fill="rgb(206,50,0)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.7846%" y="533" width="0.0801%" height="15" fill="rgb(249,105,52)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7846%" y="517" width="0.0801%" height="15" fill="rgb(216,93,51)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7846%" y="501" width="0.0801%" height="15" fill="rgb(217,172,13)" fg:x="1009" fg:w="1"/><text x="81.0346%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="613" width="0.0801%" height="15" fill="rgb(235,199,38)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="597" width="0.0801%" height="15" fill="rgb(221,97,33)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="581" width="0.0801%" height="15" fill="rgb(205,156,50)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="565" width="0.0801%" height="15" fill="rgb(215,142,19)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="549" width="0.0801%" height="15" fill="rgb(232,170,7)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="533" width="0.0801%" height="15" fill="rgb(223,50,17)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.8647%" y="517" width="0.0801%" height="15" fill="rgb(230,103,46)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8647%" y="501" width="0.0801%" height="15" fill="rgb(254,30,34)" fg:x="1010" fg:w="1"/><text x="81.1147%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9448%" y="565" width="0.1601%" height="15" fill="rgb(235,198,1)" fg:x="1011" fg:w="2"/><text x="81.1948%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0248%" y="549" width="0.0801%" height="15" fill="rgb(217,105,47)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0248%" y="533" width="0.0801%" height="15" fill="rgb(231,18,12)" fg:x="1012" fg:w="1"/><text x="81.2748%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1049%" y="565" width="0.0801%" height="15" fill="rgb(218,196,1)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.1049%" y="549" width="0.0801%" height="15" fill="rgb(210,32,3)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.1049%" y="533" width="0.0801%" height="15" fill="rgb(227,178,30)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.1049%" y="517" width="0.0801%" height="15" fill="rgb(231,140,27)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.1049%" y="501" width="0.0801%" height="15" fill="rgb(206,66,35)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1049%" y="485" width="0.0801%" height="15" fill="rgb(212,34,2)" fg:x="1013" fg:w="1"/><text x="81.3549%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1849%" y="517" width="0.0801%" height="15" fill="rgb(207,201,33)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.1849%" y="501" width="0.0801%" height="15" fill="rgb(221,135,32)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.1849%" y="485" width="0.0801%" height="15" fill="rgb(206,77,31)" fg:x="1014" fg:w="1"/><text x="81.4349%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.2650%" y="501" width="0.0801%" height="15" fill="rgb(252,198,50)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2650%" y="485" width="0.0801%" height="15" fill="rgb(206,79,27)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2650%" y="469" width="0.0801%" height="15" fill="rgb(228,108,9)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2650%" y="453" width="0.0801%" height="15" fill="rgb(213,9,39)" fg:x="1015" fg:w="1"/><text x="81.5150%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="80.9448%" y="597" width="0.4804%" height="15" fill="rgb(252,51,13)" fg:x="1011" fg:w="6"/><text x="81.1948%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="80.9448%" y="581" width="0.4804%" height="15" fill="rgb(218,202,39)" fg:x="1011" fg:w="6"/><text x="81.1948%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="81.1849%" y="565" width="0.2402%" height="15" fill="rgb(214,122,21)" fg:x="1014" fg:w="3"/><text x="81.4349%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="81.1849%" y="549" width="0.2402%" height="15" fill="rgb(217,205,48)" fg:x="1014" fg:w="3"/><text x="81.4349%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="81.1849%" y="533" width="0.2402%" height="15" fill="rgb(230,216,13)" fg:x="1014" fg:w="3"/><text x="81.4349%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.2650%" y="517" width="0.1601%" height="15" fill="rgb(249,118,4)" fg:x="1015" fg:w="2"/><text x="81.5150%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3451%" y="501" width="0.0801%" height="15" fill="rgb(212,207,40)" fg:x="1016" fg:w="1"/><text x="81.5951%" y="511.50"></text></g><g><title>engine::session::Session::flush (14 samples, 1.12%)</title><rect x="80.3843%" y="677" width="1.1209%" height="15" fill="rgb(217,156,26)" fg:x="1004" fg:w="14"/><text x="80.6343%" y="687.50"></text></g><g><title>engine::session::Session::save_entity_changes (14 samples, 1.12%)</title><rect x="80.3843%" y="661" width="1.1209%" height="15" fill="rgb(226,86,34)" fg:x="1004" fg:w="14"/><text x="80.6343%" y="671.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (14 samples, 1.12%)</title><rect x="80.3843%" y="645" width="1.1209%" height="15" fill="rgb(217,111,30)" fg:x="1004" fg:w="14"/><text x="80.6343%" y="655.50"></text></g><g><title>engine::session::Session::check_for_changes (14 samples, 1.12%)</title><rect x="80.3843%" y="629" width="1.1209%" height="15" fill="rgb(228,64,18)" fg:x="1004" fg:w="14"/><text x="80.6343%" y="639.50"></text></g><g><title>kernel::compare::any_entity_changes (7 samples, 0.56%)</title><rect x="80.9448%" y="613" width="0.5604%" height="15" fill="rgb(254,217,48)" fg:x="1011" fg:w="7"/><text x="81.1948%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="81.4251%" y="597" width="0.0801%" height="15" fill="rgb(226,156,48)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="81.4251%" y="581" width="0.0801%" height="15" fill="rgb(236,168,20)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.4251%" y="565" width="0.0801%" height="15" fill="rgb(239,210,33)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4251%" y="549" width="0.0801%" height="15" fill="rgb(242,85,17)" fg:x="1017" fg:w="1"/><text x="81.6751%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.5052%" y="661" width="0.4003%" height="15" fill="rgb(221,196,15)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="671.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="81.5052%" y="645" width="0.4003%" height="15" fill="rgb(249,76,21)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="655.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="81.5052%" y="629" width="0.4003%" height="15" fill="rgb(243,67,29)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="81.5052%" y="613" width="0.4003%" height="15" fill="rgb(240,159,2)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="81.5052%" y="597" width="0.4003%" height="15" fill="rgb(244,64,3)" fg:x="1018" fg:w="5"/><text x="81.7552%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="81.5853%" y="581" width="0.3203%" height="15" fill="rgb(220,86,40)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="591.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="81.5853%" y="565" width="0.3203%" height="15" fill="rgb(222,194,51)" fg:x="1019" fg:w="4"/><text x="81.8353%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.48%)</title><rect x="81.5052%" y="677" width="0.4804%" height="15" fill="rgb(207,154,19)" fg:x="1018" fg:w="6"/><text x="81.7552%" y="687.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="81.9055%" y="661" width="0.0801%" height="15" fill="rgb(206,178,36)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="671.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="81.9055%" y="645" width="0.0801%" height="15" fill="rgb(218,8,24)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="655.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="81.9055%" y="629" width="0.0801%" height="15" fill="rgb(226,83,41)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="639.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="81.9055%" y="613" width="0.0801%" height="15" fill="rgb(224,23,22)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.9055%" y="597" width="0.0801%" height="15" fill="rgb(218,198,45)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9055%" y="581" width="0.0801%" height="15" fill="rgb(249,147,41)" fg:x="1023" fg:w="1"/><text x="82.1555%" y="591.50"></text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="81.9856%" y="677" width="0.0801%" height="15" fill="rgb(244,224,13)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="687.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="81.9856%" y="661" width="0.0801%" height="15" fill="rgb(225,97,27)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="81.9856%" y="645" width="0.0801%" height="15" fill="rgb(254,64,0)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="655.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="81.9856%" y="629" width="0.0801%" height="15" fill="rgb(208,130,43)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9856%" y="613" width="0.0801%" height="15" fill="rgb(247,91,25)" fg:x="1024" fg:w="1"/><text x="82.2356%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (24 samples, 1.92%)</title><rect x="80.2242%" y="693" width="1.9215%" height="15" fill="rgb(215,218,42)" fg:x="1002" fg:w="24"/><text x="80.4742%" y="703.50">p..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="82.0657%" y="677" width="0.0801%" height="15" fill="rgb(233,9,24)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="687.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="82.0657%" y="661" width="0.0801%" height="15" fill="rgb(252,105,38)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="82.0657%" y="645" width="0.0801%" height="15" fill="rgb(225,40,49)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="82.0657%" y="629" width="0.0801%" height="15" fill="rgb(232,196,19)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="82.0657%" y="613" width="0.0801%" height="15" fill="rgb(207,35,15)" fg:x="1025" fg:w="1"/><text x="82.3157%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="82.1457%" y="661" width="0.0801%" height="15" fill="rgb(238,68,36)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="671.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="82.1457%" y="645" width="0.0801%" height="15" fill="rgb(205,158,20)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="82.1457%" y="629" width="0.0801%" height="15" fill="rgb(232,32,22)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="639.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="82.1457%" y="613" width="0.0801%" height="15" fill="rgb(210,169,6)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="623.50"></text></g><g><title>kernel::model::EntityKey::new (1 samples, 0.08%)</title><rect x="82.1457%" y="597" width="0.0801%" height="15" fill="rgb(229,28,12)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1457%" y="581" width="0.0801%" height="15" fill="rgb(229,78,10)" fg:x="1026" fg:w="1"/><text x="82.3957%" y="591.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (40 samples, 3.20%)</title><rect x="79.1033%" y="709" width="3.2026%" height="15" fill="rgb(223,139,54)" fg:x="988" fg:w="40"/><text x="79.3533%" y="719.50">&lt;te..</text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="82.1457%" y="693" width="0.1601%" height="15" fill="rgb(207,110,4)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="82.1457%" y="677" width="0.1601%" height="15" fill="rgb(248,30,41)" fg:x="1026" fg:w="2"/><text x="82.3957%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="82.2258%" y="661" width="0.0801%" height="15" fill="rgb(235,54,25)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="82.2258%" y="645" width="0.0801%" height="15" fill="rgb(213,107,41)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="655.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="82.2258%" y="629" width="0.0801%" height="15" fill="rgb(237,102,9)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.2258%" y="613" width="0.0801%" height="15" fill="rgb(252,137,49)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.2258%" y="597" width="0.0801%" height="15" fill="rgb(233,202,33)" fg:x="1027" fg:w="1"/><text x="82.4758%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="82.3058%" y="677" width="0.1601%" height="15" fill="rgb(223,14,51)" fg:x="1028" fg:w="2"/><text x="82.5558%" y="687.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="82.3058%" y="661" width="0.1601%" height="15" fill="rgb(248,70,23)" fg:x="1028" fg:w="2"/><text x="82.5558%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="82.3058%" y="645" width="0.1601%" height="15" fill="rgb(209,207,47)" fg:x="1028" fg:w="2"/><text x="82.5558%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="82.4660%" y="661" width="0.0801%" height="15" fill="rgb(245,124,2)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4660%" y="645" width="0.0801%" height="15" fill="rgb(249,208,11)" fg:x="1030" fg:w="1"/><text x="82.7160%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (4 samples, 0.32%)</title><rect x="82.3058%" y="693" width="0.3203%" height="15" fill="rgb(247,112,7)" fg:x="1028" fg:w="4"/><text x="82.5558%" y="703.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="82.4660%" y="677" width="0.1601%" height="15" fill="rgb(209,192,31)" fg:x="1030" fg:w="2"/><text x="82.7160%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="82.5460%" y="661" width="0.0801%" height="15" fill="rgb(236,55,19)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="671.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.5460%" y="645" width="0.0801%" height="15" fill="rgb(252,89,41)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="655.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="82.5460%" y="629" width="0.0801%" height="15" fill="rgb(220,172,14)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.5460%" y="613" width="0.0801%" height="15" fill="rgb(252,65,2)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="82.5460%" y="597" width="0.0801%" height="15" fill="rgb(250,20,8)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="82.5460%" y="581" width="0.0801%" height="15" fill="rgb(234,149,13)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="82.5460%" y="565" width="0.0801%" height="15" fill="rgb(223,219,12)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="82.5460%" y="549" width="0.0801%" height="15" fill="rgb(234,13,49)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.5460%" y="533" width="0.0801%" height="15" fill="rgb(214,41,25)" fg:x="1031" fg:w="1"/><text x="82.7960%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="82.7062%" y="629" width="0.0801%" height="15" fill="rgb(232,198,52)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7062%" y="613" width="0.0801%" height="15" fill="rgb(236,111,46)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.7062%" y="597" width="0.0801%" height="15" fill="rgb(253,30,20)" fg:x="1033" fg:w="1"/><text x="82.9562%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7862%" y="613" width="0.0801%" height="15" fill="rgb(247,141,17)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.7862%" y="597" width="0.0801%" height="15" fill="rgb(214,195,21)" fg:x="1034" fg:w="1"/><text x="83.0362%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.8663%" y="597" width="0.0801%" height="15" fill="rgb(214,98,12)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8663%" y="581" width="0.0801%" height="15" fill="rgb(239,4,26)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.8663%" y="565" width="0.0801%" height="15" fill="rgb(234,210,35)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.8663%" y="549" width="0.0801%" height="15" fill="rgb(252,178,27)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8663%" y="533" width="0.0801%" height="15" fill="rgb(217,50,1)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8663%" y="517" width="0.0801%" height="15" fill="rgb(233,137,5)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.8663%" y="501" width="0.0801%" height="15" fill="rgb(217,227,25)" fg:x="1035" fg:w="1"/><text x="83.1163%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.8663%" y="613" width="0.1601%" height="15" fill="rgb(242,89,38)" fg:x="1035" fg:w="2"/><text x="83.1163%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.9464%" y="597" width="0.0801%" height="15" fill="rgb(212,190,30)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9464%" y="581" width="0.0801%" height="15" fill="rgb(222,120,8)" fg:x="1036" fg:w="1"/><text x="83.1964%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (5 samples, 0.40%)</title><rect x="82.7062%" y="645" width="0.4003%" height="15" fill="rgb(227,181,9)" fg:x="1033" fg:w="5"/><text x="82.9562%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="82.7862%" y="629" width="0.3203%" height="15" fill="rgb(222,125,29)" fg:x="1034" fg:w="4"/><text x="83.0362%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.0264%" y="613" width="0.0801%" height="15" fill="rgb(215,153,31)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.0264%" y="597" width="0.0801%" height="15" fill="rgb(228,77,30)" fg:x="1037" fg:w="1"/><text x="83.2764%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="645" width="0.0801%" height="15" fill="rgb(226,110,9)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="629" width="0.0801%" height="15" fill="rgb(219,111,7)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="613" width="0.0801%" height="15" fill="rgb(229,167,25)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="597" width="0.0801%" height="15" fill="rgb(209,77,43)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="581" width="0.0801%" height="15" fill="rgb(233,70,39)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="565" width="0.0801%" height="15" fill="rgb(207,171,44)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="549" width="0.0801%" height="15" fill="rgb(244,91,6)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.1065%" y="533" width="0.0801%" height="15" fill="rgb(234,136,12)" fg:x="1038" fg:w="1"/><text x="83.3565%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.1865%" y="629" width="0.0801%" height="15" fill="rgb(216,210,38)" fg:x="1039" fg:w="1"/><text x="83.4365%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.2666%" y="613" width="0.0801%" height="15" fill="rgb(241,227,7)" fg:x="1040" fg:w="1"/><text x="83.5166%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3467%" y="597" width="0.0801%" height="15" fill="rgb(241,222,11)" fg:x="1041" fg:w="1"/><text x="83.5967%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5068%" y="581" width="0.0801%" height="15" fill="rgb(246,86,18)" fg:x="1043" fg:w="1"/><text x="83.7568%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="83.6669%" y="549" width="0.1601%" height="15" fill="rgb(224,151,49)" fg:x="1045" fg:w="2"/><text x="83.9169%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="83.2666%" y="629" width="0.6405%" height="15" fill="rgb(235,4,41)" fg:x="1040" fg:w="8"/><text x="83.5166%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="83.3467%" y="613" width="0.5604%" height="15" fill="rgb(218,30,52)" fg:x="1041" fg:w="7"/><text x="83.5967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="83.4267%" y="597" width="0.4804%" height="15" fill="rgb(205,124,51)" fg:x="1042" fg:w="6"/><text x="83.6767%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.5869%" y="581" width="0.3203%" height="15" fill="rgb(237,126,51)" fg:x="1044" fg:w="4"/><text x="83.8369%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.5869%" y="565" width="0.3203%" height="15" fill="rgb(225,32,46)" fg:x="1044" fg:w="4"/><text x="83.8369%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.8271%" y="549" width="0.0801%" height="15" fill="rgb(251,60,49)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8271%" y="533" width="0.0801%" height="15" fill="rgb(234,18,23)" fg:x="1047" fg:w="1"/><text x="84.0771%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.9071%" y="597" width="0.0801%" height="15" fill="rgb(234,25,23)" fg:x="1048" fg:w="1"/><text x="84.1571%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="83.9872%" y="597" width="0.1601%" height="15" fill="rgb(210,43,52)" fg:x="1049" fg:w="2"/><text x="84.2372%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0673%" y="581" width="0.0801%" height="15" fill="rgb(237,198,21)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="84.0673%" y="565" width="0.0801%" height="15" fill="rgb(211,20,34)" fg:x="1050" fg:w="1"/><text x="84.3173%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="84.1473%" y="597" width="0.0801%" height="15" fill="rgb(221,155,50)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1473%" y="581" width="0.0801%" height="15" fill="rgb(213,214,53)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1473%" y="565" width="0.0801%" height="15" fill="rgb(215,229,48)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1473%" y="549" width="0.0801%" height="15" fill="rgb(243,88,5)" fg:x="1051" fg:w="1"/><text x="84.3973%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3875%" y="549" width="0.0801%" height="15" fill="rgb(216,199,8)" fg:x="1054" fg:w="1"/><text x="84.6375%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="84.2274%" y="597" width="0.3203%" height="15" fill="rgb(241,22,4)" fg:x="1052" fg:w="4"/><text x="84.4774%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="84.2274%" y="581" width="0.3203%" height="15" fill="rgb(209,190,22)" fg:x="1052" fg:w="4"/><text x="84.4774%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="84.3074%" y="565" width="0.2402%" height="15" fill="rgb(251,138,45)" fg:x="1053" fg:w="3"/><text x="84.5574%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4676%" y="549" width="0.0801%" height="15" fill="rgb(219,111,22)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4676%" y="533" width="0.0801%" height="15" fill="rgb(253,29,49)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="84.4676%" y="517" width="0.0801%" height="15" fill="rgb(238,129,49)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.4676%" y="501" width="0.0801%" height="15" fill="rgb(240,26,41)" fg:x="1055" fg:w="1"/><text x="84.7176%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.5476%" y="565" width="0.1601%" height="15" fill="rgb(221,47,33)" fg:x="1056" fg:w="2"/><text x="84.7976%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5476%" y="549" width="0.1601%" height="15" fill="rgb(216,200,17)" fg:x="1056" fg:w="2"/><text x="84.7976%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.5476%" y="533" width="0.1601%" height="15" fill="rgb(230,151,26)" fg:x="1056" fg:w="2"/><text x="84.7976%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6277%" y="517" width="0.0801%" height="15" fill="rgb(242,182,16)" fg:x="1057" fg:w="1"/><text x="84.8777%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="83.9071%" y="629" width="0.8807%" height="15" fill="rgb(236,35,53)" fg:x="1048" fg:w="11"/><text x="84.1571%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="83.9071%" y="613" width="0.8807%" height="15" fill="rgb(214,180,28)" fg:x="1048" fg:w="11"/><text x="84.1571%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="84.5476%" y="597" width="0.2402%" height="15" fill="rgb(208,173,36)" fg:x="1056" fg:w="3"/><text x="84.7976%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="84.5476%" y="581" width="0.2402%" height="15" fill="rgb(218,39,15)" fg:x="1056" fg:w="3"/><text x="84.7976%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.7078%" y="565" width="0.0801%" height="15" fill="rgb(213,145,15)" fg:x="1058" fg:w="1"/><text x="84.9578%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="84.9480%" y="485" width="0.0801%" height="15" fill="rgb(242,110,37)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="84.9480%" y="469" width="0.0801%" height="15" fill="rgb(247,146,22)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="453" width="0.0801%" height="15" fill="rgb(215,191,7)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.9480%" y="437" width="0.0801%" height="15" fill="rgb(240,158,1)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.9480%" y="421" width="0.0801%" height="15" fill="rgb(241,78,32)" fg:x="1061" fg:w="1"/><text x="85.1980%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.0280%" y="469" width="0.1601%" height="15" fill="rgb(248,83,10)" fg:x="1062" fg:w="2"/><text x="85.2780%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.1081%" y="453" width="0.0801%" height="15" fill="rgb(241,52,0)" fg:x="1063" fg:w="1"/><text x="85.3581%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="84.8679%" y="533" width="0.4804%" height="15" fill="rgb(238,37,13)" fg:x="1060" fg:w="6"/><text x="85.1179%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="84.8679%" y="517" width="0.4804%" height="15" fill="rgb(242,194,17)" fg:x="1060" fg:w="6"/><text x="85.1179%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="84.9480%" y="501" width="0.4003%" height="15" fill="rgb(236,96,3)" fg:x="1061" fg:w="5"/><text x="85.1980%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="85.0280%" y="485" width="0.3203%" height="15" fill="rgb(235,148,34)" fg:x="1062" fg:w="4"/><text x="85.2780%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.1882%" y="469" width="0.1601%" height="15" fill="rgb(254,12,11)" fg:x="1064" fg:w="2"/><text x="85.4382%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.2682%" y="453" width="0.0801%" height="15" fill="rgb(207,31,54)" fg:x="1065" fg:w="1"/><text x="85.5182%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.4283%" y="517" width="0.0801%" height="15" fill="rgb(252,14,28)" fg:x="1067" fg:w="1"/><text x="85.6783%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="84.8679%" y="565" width="0.7206%" height="15" fill="rgb(252,108,36)" fg:x="1060" fg:w="9"/><text x="85.1179%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="84.8679%" y="549" width="0.7206%" height="15" fill="rgb(214,149,7)" fg:x="1060" fg:w="9"/><text x="85.1179%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="85.3483%" y="533" width="0.2402%" height="15" fill="rgb(243,94,12)" fg:x="1066" fg:w="3"/><text x="85.5983%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.5084%" y="517" width="0.0801%" height="15" fill="rgb(208,36,10)" fg:x="1068" fg:w="1"/><text x="85.7584%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="84.7878%" y="629" width="0.9608%" height="15" fill="rgb(233,185,52)" fg:x="1059" fg:w="12"/><text x="85.0378%" y="639.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="84.7878%" y="613" width="0.9608%" height="15" fill="rgb(234,50,45)" fg:x="1059" fg:w="12"/><text x="85.0378%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="84.7878%" y="597" width="0.9608%" height="15" fill="rgb(228,92,54)" fg:x="1059" fg:w="12"/><text x="85.0378%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="84.7878%" y="581" width="0.9608%" height="15" fill="rgb(224,85,25)" fg:x="1059" fg:w="12"/><text x="85.0378%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="85.5885%" y="565" width="0.1601%" height="15" fill="rgb(246,1,45)" fg:x="1069" fg:w="2"/><text x="85.8385%" y="575.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.6685%" y="549" width="0.0801%" height="15" fill="rgb(240,66,23)" fg:x="1070" fg:w="1"/><text x="85.9185%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="85.7486%" y="613" width="0.2402%" height="15" fill="rgb(222,96,27)" fg:x="1071" fg:w="3"/><text x="85.9986%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="85.7486%" y="597" width="0.2402%" height="15" fill="rgb(212,136,10)" fg:x="1071" fg:w="3"/><text x="85.9986%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.9087%" y="581" width="0.0801%" height="15" fill="rgb(226,192,50)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.9087%" y="565" width="0.0801%" height="15" fill="rgb(241,182,31)" fg:x="1073" fg:w="1"/><text x="86.1587%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="85.9888%" y="613" width="0.0801%" height="15" fill="rgb(219,205,47)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9888%" y="597" width="0.0801%" height="15" fill="rgb(207,96,14)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9888%" y="581" width="0.0801%" height="15" fill="rgb(216,119,9)" fg:x="1074" fg:w="1"/><text x="86.2388%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0689%" y="597" width="0.0801%" height="15" fill="rgb(235,62,36)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0689%" y="581" width="0.0801%" height="15" fill="rgb(214,41,27)" fg:x="1075" fg:w="1"/><text x="86.3189%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.1489%" y="581" width="0.0801%" height="15" fill="rgb(214,174,37)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="86.1489%" y="565" width="0.0801%" height="15" fill="rgb(212,11,25)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.1489%" y="549" width="0.0801%" height="15" fill="rgb(217,71,35)" fg:x="1076" fg:w="1"/><text x="86.3989%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2290%" y="565" width="0.0801%" height="15" fill="rgb(234,152,9)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2290%" y="549" width="0.0801%" height="15" fill="rgb(228,32,51)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.2290%" y="533" width="0.0801%" height="15" fill="rgb(209,14,47)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.2290%" y="517" width="0.0801%" height="15" fill="rgb(218,201,17)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.2290%" y="501" width="0.0801%" height="15" fill="rgb(218,98,15)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.2290%" y="485" width="0.0801%" height="15" fill="rgb(233,202,29)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2290%" y="469" width="0.0801%" height="15" fill="rgb(207,196,44)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.2290%" y="453" width="0.0801%" height="15" fill="rgb(218,63,34)" fg:x="1077" fg:w="1"/><text x="86.4790%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.3891%" y="549" width="0.0801%" height="15" fill="rgb(209,10,5)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3891%" y="533" width="0.0801%" height="15" fill="rgb(224,36,28)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.3891%" y="517" width="0.0801%" height="15" fill="rgb(249,178,7)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3891%" y="501" width="0.0801%" height="15" fill="rgb(253,163,10)" fg:x="1079" fg:w="1"/><text x="86.6391%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="86.4692%" y="533" width="0.1601%" height="15" fill="rgb(245,67,46)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="86.4692%" y="517" width="0.1601%" height="15" fill="rgb(225,14,18)" fg:x="1080" fg:w="2"/><text x="86.7192%" y="527.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (50 samples, 4.00%)</title><rect x="82.7062%" y="677" width="4.0032%" height="15" fill="rgb(217,41,54)" fg:x="1033" fg:w="50"/><text x="82.9562%" y="687.50">engi..</text></g><g><title>engine::session::Session::check_for_changes (50 samples, 4.00%)</title><rect x="82.7062%" y="661" width="4.0032%" height="15" fill="rgb(222,111,11)" fg:x="1033" fg:w="50"/><text x="82.9562%" y="671.50">engi..</text></g><g><title>kernel::compare::any_entity_changes (44 samples, 3.52%)</title><rect x="83.1865%" y="645" width="3.5228%" height="15" fill="rgb(211,85,31)" fg:x="1039" fg:w="44"/><text x="83.4365%" y="655.50">ker..</text></g><g><title>treediff::diff::diff (12 samples, 0.96%)</title><rect x="85.7486%" y="629" width="0.9608%" height="15" fill="rgb(223,29,26)" fg:x="1071" fg:w="12"/><text x="85.9986%" y="639.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="86.0689%" y="613" width="0.6405%" height="15" fill="rgb(236,124,50)" fg:x="1075" fg:w="8"/><text x="86.3189%" y="623.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="86.1489%" y="597" width="0.5604%" height="15" fill="rgb(219,148,15)" fg:x="1076" fg:w="7"/><text x="86.3989%" y="607.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="86.2290%" y="581" width="0.4804%" height="15" fill="rgb(248,159,33)" fg:x="1077" fg:w="6"/><text x="86.4790%" y="591.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="86.3090%" y="565" width="0.4003%" height="15" fill="rgb(252,65,8)" fg:x="1078" fg:w="5"/><text x="86.5590%" y="575.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="86.4692%" y="549" width="0.2402%" height="15" fill="rgb(236,45,7)" fg:x="1080" fg:w="3"/><text x="86.7192%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="86.6293%" y="533" width="0.0801%" height="15" fill="rgb(244,3,48)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="86.6293%" y="517" width="0.0801%" height="15" fill="rgb(224,123,53)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="86.6293%" y="501" width="0.0801%" height="15" fill="rgb(223,173,15)" fg:x="1082" fg:w="1"/><text x="86.8793%" y="511.50"></text></g><g><title>engine::session::Session::close (56 samples, 4.48%)</title><rect x="82.3058%" y="709" width="4.4836%" height="15" fill="rgb(254,181,5)" fg:x="1028" fg:w="56"/><text x="82.5558%" y="719.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (52 samples, 4.16%)</title><rect x="82.6261%" y="693" width="4.1633%" height="15" fill="rgb(243,124,33)" fg:x="1032" fg:w="52"/><text x="82.8761%" y="703.50">engin..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="86.7094%" y="677" width="0.0801%" height="15" fill="rgb(253,220,11)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="86.7094%" y="661" width="0.0801%" height="15" fill="rgb(217,14,4)" fg:x="1083" fg:w="1"/><text x="86.9594%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="86.7894%" y="565" width="0.0801%" height="15" fill="rgb(209,196,12)" fg:x="1084" fg:w="1"/><text x="87.0394%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="86.7894%" y="677" width="0.1601%" height="15" fill="rgb(237,108,29)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="86.7894%" y="661" width="0.1601%" height="15" fill="rgb(216,173,20)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="86.7894%" y="645" width="0.1601%" height="15" fill="rgb(245,27,6)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="86.7894%" y="629" width="0.1601%" height="15" fill="rgb(210,181,20)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="639.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="86.7894%" y="613" width="0.1601%" height="15" fill="rgb(235,213,1)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="623.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="86.7894%" y="597" width="0.1601%" height="15" fill="rgb(239,68,43)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="86.7894%" y="581" width="0.1601%" height="15" fill="rgb(254,137,43)" fg:x="1084" fg:w="2"/><text x="87.0394%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="86.8695%" y="565" width="0.0801%" height="15" fill="rgb(252,170,38)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="86.8695%" y="549" width="0.0801%" height="15" fill="rgb(234,21,42)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="86.8695%" y="533" width="0.0801%" height="15" fill="rgb(216,145,40)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="86.8695%" y="517" width="0.0801%" height="15" fill="rgb(251,73,9)" fg:x="1085" fg:w="1"/><text x="87.1195%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.9496%" y="565" width="0.0801%" height="15" fill="rgb(242,54,6)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9496%" y="549" width="0.0801%" height="15" fill="rgb(239,70,7)" fg:x="1086" fg:w="1"/><text x="87.1996%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="86.9496%" y="661" width="0.1601%" height="15" fill="rgb(216,159,35)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="671.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="86.9496%" y="645" width="0.1601%" height="15" fill="rgb(224,50,39)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="86.9496%" y="629" width="0.1601%" height="15" fill="rgb(235,9,35)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="639.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="86.9496%" y="613" width="0.1601%" height="15" fill="rgb(239,34,21)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="86.9496%" y="597" width="0.1601%" height="15" fill="rgb(218,162,43)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="86.9496%" y="581" width="0.1601%" height="15" fill="rgb(219,89,33)" fg:x="1086" fg:w="2"/><text x="87.1996%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="87.0296%" y="565" width="0.0801%" height="15" fill="rgb(226,125,37)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.0296%" y="549" width="0.0801%" height="15" fill="rgb(233,149,30)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.0296%" y="533" width="0.0801%" height="15" fill="rgb(236,8,18)" fg:x="1087" fg:w="1"/><text x="87.2796%" y="543.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living (3 samples, 0.24%)</title><rect x="86.9496%" y="677" width="0.2402%" height="15" fill="rgb(205,176,9)" fg:x="1086" fg:w="3"/><text x="87.1996%" y="687.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.1097%" y="661" width="0.0801%" height="15" fill="rgb(252,103,44)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.1097%" y="645" width="0.0801%" height="15" fill="rgb(207,68,53)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.1097%" y="629" width="0.0801%" height="15" fill="rgb(218,193,48)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.1097%" y="613" width="0.0801%" height="15" fill="rgb(234,121,52)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="597" width="0.0801%" height="15" fill="rgb(227,218,49)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1097%" y="581" width="0.0801%" height="15" fill="rgb(221,8,7)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="565" width="0.0801%" height="15" fill="rgb(217,151,36)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="549" width="0.0801%" height="15" fill="rgb(213,71,5)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="533" width="0.0801%" height="15" fill="rgb(225,145,43)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1097%" y="517" width="0.0801%" height="15" fill="rgb(235,118,19)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="501" width="0.0801%" height="15" fill="rgb(214,102,36)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="485" width="0.0801%" height="15" fill="rgb(220,56,43)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="469" width="0.0801%" height="15" fill="rgb(246,136,46)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1097%" y="453" width="0.0801%" height="15" fill="rgb(249,99,12)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="437" width="0.0801%" height="15" fill="rgb(224,31,42)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="447.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1097%" y="421" width="0.0801%" height="15" fill="rgb(208,96,21)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="431.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="87.1097%" y="405" width="0.0801%" height="15" fill="rgb(237,229,7)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1097%" y="389" width="0.0801%" height="15" fill="rgb(210,12,6)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1097%" y="373" width="0.0801%" height="15" fill="rgb(240,9,34)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.1097%" y="357" width="0.0801%" height="15" fill="rgb(211,68,37)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.1097%" y="341" width="0.0801%" height="15" fill="rgb(249,138,50)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.1097%" y="325" width="0.0801%" height="15" fill="rgb(243,185,40)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.1097%" y="309" width="0.0801%" height="15" fill="rgb(242,92,35)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.1097%" y="293" width="0.0801%" height="15" fill="rgb(244,98,5)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.1097%" y="277" width="0.0801%" height="15" fill="rgb(228,186,29)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.1097%" y="261" width="0.0801%" height="15" fill="rgb(253,7,44)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.1097%" y="245" width="0.0801%" height="15" fill="rgb(216,11,45)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.1097%" y="229" width="0.0801%" height="15" fill="rgb(205,67,3)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="87.1097%" y="213" width="0.0801%" height="15" fill="rgb(250,18,3)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="87.1097%" y="197" width="0.0801%" height="15" fill="rgb(241,222,43)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="87.1097%" y="181" width="0.0801%" height="15" fill="rgb(233,115,3)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="191.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.1097%" y="165" width="0.0801%" height="15" fill="rgb(215,165,25)" fg:x="1088" fg:w="1"/><text x="87.3597%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.1898%" y="597" width="0.1601%" height="15" fill="rgb(234,179,6)" fg:x="1089" fg:w="2"/><text x="87.4398%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.1898%" y="581" width="0.1601%" height="15" fill="rgb(215,82,23)" fg:x="1089" fg:w="2"/><text x="87.4398%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2698%" y="565" width="0.0801%" height="15" fill="rgb(211,47,18)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2698%" y="549" width="0.0801%" height="15" fill="rgb(248,17,9)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.2698%" y="533" width="0.0801%" height="15" fill="rgb(210,212,12)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.2698%" y="517" width="0.0801%" height="15" fill="rgb(230,135,45)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.2698%" y="501" width="0.0801%" height="15" fill="rgb(214,121,41)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2698%" y="485" width="0.0801%" height="15" fill="rgb(239,165,45)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.2698%" y="469" width="0.0801%" height="15" fill="rgb(214,85,51)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.2698%" y="453" width="0.0801%" height="15" fill="rgb(223,90,27)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.2698%" y="437" width="0.0801%" height="15" fill="rgb(244,84,11)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.2698%" y="421" width="0.0801%" height="15" fill="rgb(253,41,47)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.2698%" y="405" width="0.0801%" height="15" fill="rgb(232,39,5)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.2698%" y="389" width="0.0801%" height="15" fill="rgb(211,93,4)" fg:x="1090" fg:w="1"/><text x="87.5198%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="87.3499%" y="597" width="0.2402%" height="15" fill="rgb(219,50,49)" fg:x="1091" fg:w="3"/><text x="87.5999%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="87.3499%" y="581" width="0.2402%" height="15" fill="rgb(232,80,19)" fg:x="1091" fg:w="3"/><text x="87.5999%" y="591.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="87.3499%" y="565" width="0.2402%" height="15" fill="rgb(215,227,39)" fg:x="1091" fg:w="3"/><text x="87.5999%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="87.5901%" y="549" width="0.0801%" height="15" fill="rgb(211,99,12)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="87.5901%" y="533" width="0.0801%" height="15" fill="rgb(214,158,5)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.5901%" y="517" width="0.0801%" height="15" fill="rgb(242,19,53)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="87.5901%" y="501" width="0.0801%" height="15" fill="rgb(208,18,20)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="87.5901%" y="485" width="0.0801%" height="15" fill="rgb(250,44,11)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="495.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="87.5901%" y="469" width="0.0801%" height="15" fill="rgb(238,159,13)" fg:x="1094" fg:w="1"/><text x="87.8401%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.56%)</title><rect x="87.1898%" y="613" width="0.5604%" height="15" fill="rgb(231,74,18)" fg:x="1089" fg:w="7"/><text x="87.4398%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="87.5901%" y="597" width="0.1601%" height="15" fill="rgb(229,219,45)" fg:x="1094" fg:w="2"/><text x="87.8401%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="87.5901%" y="581" width="0.1601%" height="15" fill="rgb(210,221,1)" fg:x="1094" fg:w="2"/><text x="87.8401%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="87.5901%" y="565" width="0.1601%" height="15" fill="rgb(209,60,51)" fg:x="1094" fg:w="2"/><text x="87.8401%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6701%" y="549" width="0.0801%" height="15" fill="rgb(252,97,34)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6701%" y="533" width="0.0801%" height="15" fill="rgb(243,211,37)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="87.6701%" y="517" width="0.0801%" height="15" fill="rgb(210,229,37)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="87.6701%" y="501" width="0.0801%" height="15" fill="rgb(220,208,43)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="87.6701%" y="485" width="0.0801%" height="15" fill="rgb(218,118,50)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.6701%" y="469" width="0.0801%" height="15" fill="rgb(254,169,52)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.6701%" y="453" width="0.0801%" height="15" fill="rgb(221,214,37)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="87.6701%" y="437" width="0.0801%" height="15" fill="rgb(254,186,32)" fg:x="1095" fg:w="1"/><text x="87.9201%" y="447.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7502%" y="581" width="0.0801%" height="15" fill="rgb(215,144,43)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7502%" y="565" width="0.0801%" height="15" fill="rgb(252,21,46)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.7502%" y="549" width="0.0801%" height="15" fill="rgb(207,166,46)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.7502%" y="533" width="0.0801%" height="15" fill="rgb(253,37,49)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.7502%" y="517" width="0.0801%" height="15" fill="rgb(222,97,20)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.7502%" y="501" width="0.0801%" height="15" fill="rgb(244,181,26)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7502%" y="485" width="0.0801%" height="15" fill="rgb(241,22,29)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.7502%" y="469" width="0.0801%" height="15" fill="rgb(206,200,43)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.7502%" y="453" width="0.0801%" height="15" fill="rgb(226,224,43)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.7502%" y="437" width="0.0801%" height="15" fill="rgb(253,129,28)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.7502%" y="421" width="0.0801%" height="15" fill="rgb(252,99,33)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.7502%" y="405" width="0.0801%" height="15" fill="rgb(208,123,45)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7502%" y="389" width="0.0801%" height="15" fill="rgb(251,106,12)" fg:x="1096" fg:w="1"/><text x="88.0002%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="87.7502%" y="613" width="0.1601%" height="15" fill="rgb(240,209,35)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.7502%" y="597" width="0.1601%" height="15" fill="rgb(214,52,50)" fg:x="1096" fg:w="2"/><text x="88.0002%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8303%" y="581" width="0.0801%" height="15" fill="rgb(234,119,4)" fg:x="1097" fg:w="1"/><text x="88.0803%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.80%)</title><rect x="87.1898%" y="645" width="0.8006%" height="15" fill="rgb(228,181,36)" fg:x="1089" fg:w="10"/><text x="87.4398%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.80%)</title><rect x="87.1898%" y="629" width="0.8006%" height="15" fill="rgb(213,171,42)" fg:x="1089" fg:w="10"/><text x="87.4398%" y="639.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="87.9103%" y="613" width="0.0801%" height="15" fill="rgb(239,14,41)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9103%" y="597" width="0.0801%" height="15" fill="rgb(239,111,46)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9103%" y="581" width="0.0801%" height="15" fill="rgb(214,72,7)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.9103%" y="565" width="0.0801%" height="15" fill="rgb(221,114,1)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.9103%" y="549" width="0.0801%" height="15" fill="rgb(213,143,14)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.9103%" y="533" width="0.0801%" height="15" fill="rgb(220,221,53)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.9103%" y="517" width="0.0801%" height="15" fill="rgb(236,189,27)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9103%" y="501" width="0.0801%" height="15" fill="rgb(252,139,49)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.9103%" y="485" width="0.0801%" height="15" fill="rgb(231,158,33)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.9103%" y="469" width="0.0801%" height="15" fill="rgb(207,201,15)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.9103%" y="453" width="0.0801%" height="15" fill="rgb(218,43,48)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.9103%" y="437" width="0.0801%" height="15" fill="rgb(244,63,52)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.9103%" y="421" width="0.0801%" height="15" fill="rgb(236,60,17)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.9103%" y="405" width="0.0801%" height="15" fill="rgb(205,206,29)" fg:x="1098" fg:w="1"/><text x="88.1603%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="87.9904%" y="629" width="0.0801%" height="15" fill="rgb(205,209,35)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.9904%" y="613" width="0.0801%" height="15" fill="rgb(227,112,14)" fg:x="1099" fg:w="1"/><text x="88.2404%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.0705%" y="597" width="0.0801%" height="15" fill="rgb(248,151,9)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.0705%" y="581" width="0.0801%" height="15" fill="rgb(247,45,40)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0705%" y="565" width="0.0801%" height="15" fill="rgb(232,185,16)" fg:x="1100" fg:w="1"/><text x="88.3205%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1505%" y="597" width="0.0801%" height="15" fill="rgb(215,45,44)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1505%" y="581" width="0.0801%" height="15" fill="rgb(206,69,32)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="88.1505%" y="565" width="0.0801%" height="15" fill="rgb(233,98,50)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1505%" y="549" width="0.0801%" height="15" fill="rgb(232,217,52)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1505%" y="533" width="0.0801%" height="15" fill="rgb(250,42,51)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1505%" y="517" width="0.0801%" height="15" fill="rgb(241,200,26)" fg:x="1101" fg:w="1"/><text x="88.4005%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="88.0705%" y="629" width="0.2402%" height="15" fill="rgb(207,10,32)" fg:x="1100" fg:w="3"/><text x="88.3205%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (3 samples, 0.24%)</title><rect x="88.0705%" y="613" width="0.2402%" height="15" fill="rgb(214,63,15)" fg:x="1100" fg:w="3"/><text x="88.3205%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2306%" y="597" width="0.0801%" height="15" fill="rgb(234,176,14)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2306%" y="581" width="0.0801%" height="15" fill="rgb(226,104,52)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.2306%" y="565" width="0.0801%" height="15" fill="rgb(211,222,1)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.2306%" y="549" width="0.0801%" height="15" fill="rgb(237,7,3)" fg:x="1102" fg:w="1"/><text x="88.4806%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="88.3106%" y="629" width="0.0801%" height="15" fill="rgb(218,143,7)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="88.3106%" y="613" width="0.0801%" height="15" fill="rgb(208,25,22)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.3106%" y="597" width="0.0801%" height="15" fill="rgb(228,127,16)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="607.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="88.3106%" y="581" width="0.0801%" height="15" fill="rgb(237,86,27)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.3106%" y="565" width="0.0801%" height="15" fill="rgb(207,125,19)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.3106%" y="549" width="0.0801%" height="15" fill="rgb(243,195,0)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3106%" y="533" width="0.0801%" height="15" fill="rgb(230,95,18)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3106%" y="517" width="0.0801%" height="15" fill="rgb(232,157,21)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3106%" y="501" width="0.0801%" height="15" fill="rgb(212,120,50)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3106%" y="485" width="0.0801%" height="15" fill="rgb(222,204,44)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.3106%" y="469" width="0.0801%" height="15" fill="rgb(236,6,33)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.3106%" y="453" width="0.0801%" height="15" fill="rgb(247,11,38)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3106%" y="437" width="0.0801%" height="15" fill="rgb(215,111,0)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3106%" y="421" width="0.0801%" height="15" fill="rgb(211,65,46)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="88.3106%" y="405" width="0.0801%" height="15" fill="rgb(216,5,12)" fg:x="1103" fg:w="1"/><text x="88.5606%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (16 samples, 1.28%)</title><rect x="87.1898%" y="661" width="1.2810%" height="15" fill="rgb(226,7,2)" fg:x="1089" fg:w="16"/><text x="87.4398%" y="671.50"></text></g><g><title>plugins_core::tools::move_between (6 samples, 0.48%)</title><rect x="87.9904%" y="645" width="0.4804%" height="15" fill="rgb(242,116,12)" fg:x="1099" fg:w="6"/><text x="88.2404%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="88.3907%" y="629" width="0.0801%" height="15" fill="rgb(249,209,7)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.3907%" y="613" width="0.0801%" height="15" fill="rgb(232,73,17)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="88.3907%" y="597" width="0.0801%" height="15" fill="rgb(214,13,32)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="88.3907%" y="581" width="0.0801%" height="15" fill="rgb(221,125,10)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="88.3907%" y="565" width="0.0801%" height="15" fill="rgb(246,7,44)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="575.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="88.3907%" y="549" width="0.0801%" height="15" fill="rgb(239,18,35)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.3907%" y="533" width="0.0801%" height="15" fill="rgb(250,222,16)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.3907%" y="517" width="0.0801%" height="15" fill="rgb(219,100,8)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.3907%" y="501" width="0.0801%" height="15" fill="rgb(240,62,13)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.3907%" y="485" width="0.0801%" height="15" fill="rgb(253,194,2)" fg:x="1104" fg:w="1"/><text x="88.6407%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="88.5508%" y="613" width="0.0801%" height="15" fill="rgb(235,58,31)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="88.5508%" y="597" width="0.0801%" height="15" fill="rgb(231,37,11)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5508%" y="581" width="0.0801%" height="15" fill="rgb(235,133,0)" fg:x="1106" fg:w="1"/><text x="88.8008%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (2 samples, 0.16%)</title><rect x="88.5508%" y="645" width="0.1601%" height="15" fill="rgb(212,185,40)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (2 samples, 0.16%)</title><rect x="88.5508%" y="629" width="0.1601%" height="15" fill="rgb(216,68,42)" fg:x="1106" fg:w="2"/><text x="88.8008%" y="639.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (1 samples, 0.08%)</title><rect x="88.6309%" y="613" width="0.0801%" height="15" fill="rgb(239,81,4)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="623.50"></text></g><g><title>plugins_core::tools::contained_by (1 samples, 0.08%)</title><rect x="88.6309%" y="597" width="0.0801%" height="15" fill="rgb(206,86,6)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="88.6309%" y="581" width="0.0801%" height="15" fill="rgb(249,95,27)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="88.6309%" y="565" width="0.0801%" height="15" fill="rgb(205,155,45)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6309%" y="549" width="0.0801%" height="15" fill="rgb(213,55,42)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6309%" y="533" width="0.0801%" height="15" fill="rgb(249,197,4)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6309%" y="517" width="0.0801%" height="15" fill="rgb(212,128,32)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6309%" y="501" width="0.0801%" height="15" fill="rgb(252,47,30)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6309%" y="485" width="0.0801%" height="15" fill="rgb(209,79,18)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.6309%" y="469" width="0.0801%" height="15" fill="rgb(225,81,38)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.6309%" y="453" width="0.0801%" height="15" fill="rgb(205,95,16)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.6309%" y="437" width="0.0801%" height="15" fill="rgb(214,30,4)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6309%" y="421" width="0.0801%" height="15" fill="rgb(232,137,22)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.6309%" y="405" width="0.0801%" height="15" fill="rgb(232,156,19)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.6309%" y="389" width="0.0801%" height="15" fill="rgb(248,157,26)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.6309%" y="373" width="0.0801%" height="15" fill="rgb(242,24,3)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.6309%" y="357" width="0.0801%" height="15" fill="rgb(218,195,48)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.6309%" y="341" width="0.0801%" height="15" fill="rgb(214,193,36)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6309%" y="325" width="0.0801%" height="15" fill="rgb(242,110,40)" fg:x="1107" fg:w="1"/><text x="88.8809%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.7110%" y="597" width="0.0801%" height="15" fill="rgb(233,150,26)" fg:x="1108" fg:w="1"/><text x="88.9610%" y="607.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="88.7910%" y="597" width="0.0801%" height="15" fill="rgb(239,200,30)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="88.7910%" y="581" width="0.0801%" height="15" fill="rgb(226,28,11)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="88.7910%" y="565" width="0.0801%" height="15" fill="rgb(220,26,48)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="88.7910%" y="549" width="0.0801%" height="15" fill="rgb(232,10,11)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="88.7910%" y="533" width="0.0801%" height="15" fill="rgb(252,143,50)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="543.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.7910%" y="517" width="0.0801%" height="15" fill="rgb(206,58,22)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7910%" y="501" width="0.0801%" height="15" fill="rgb(250,9,45)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7910%" y="485" width="0.0801%" height="15" fill="rgb(225,148,14)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.7910%" y="469" width="0.0801%" height="15" fill="rgb(205,178,40)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.7910%" y="453" width="0.0801%" height="15" fill="rgb(215,201,4)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.7910%" y="437" width="0.0801%" height="15" fill="rgb(219,223,24)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.7910%" y="421" width="0.0801%" height="15" fill="rgb(217,19,31)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7910%" y="405" width="0.0801%" height="15" fill="rgb(235,33,3)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.7910%" y="389" width="0.0801%" height="15" fill="rgb(221,39,18)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.7910%" y="373" width="0.0801%" height="15" fill="rgb(242,162,33)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.7910%" y="357" width="0.0801%" height="15" fill="rgb(233,215,28)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.7910%" y="341" width="0.0801%" height="15" fill="rgb(212,117,9)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.7910%" y="325" width="0.0801%" height="15" fill="rgb(237,70,47)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="88.7910%" y="309" width="0.0801%" height="15" fill="rgb(206,177,13)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.7910%" y="293" width="0.0801%" height="15" fill="rgb(209,174,33)" fg:x="1109" fg:w="1"/><text x="89.0410%" y="303.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="88.8711%" y="597" width="0.0801%" height="15" fill="rgb(226,6,11)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="88.8711%" y="581" width="0.0801%" height="15" fill="rgb(240,214,6)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="88.8711%" y="565" width="0.0801%" height="15" fill="rgb(254,214,40)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="575.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.8711%" y="549" width="0.0801%" height="15" fill="rgb(230,187,15)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.8711%" y="533" width="0.0801%" height="15" fill="rgb(250,11,27)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.8711%" y="517" width="0.0801%" height="15" fill="rgb(243,107,19)" fg:x="1110" fg:w="1"/><text x="89.1211%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="88.7110%" y="629" width="0.3203%" height="15" fill="rgb(253,66,26)" fg:x="1108" fg:w="4"/><text x="88.9610%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="88.7110%" y="613" width="0.3203%" height="15" fill="rgb(228,43,8)" fg:x="1108" fg:w="4"/><text x="88.9610%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.9512%" y="597" width="0.0801%" height="15" fill="rgb(232,197,36)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.9512%" y="581" width="0.0801%" height="15" fill="rgb(221,182,31)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.9512%" y="565" width="0.0801%" height="15" fill="rgb(244,25,36)" fg:x="1111" fg:w="1"/><text x="89.2012%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (8 samples, 0.64%)</title><rect x="88.4708%" y="661" width="0.6405%" height="15" fill="rgb(247,101,19)" fg:x="1105" fg:w="8"/><text x="88.7208%" y="671.50"></text></g><g><title>plugins_core::tools::move_between (5 samples, 0.40%)</title><rect x="88.7110%" y="645" width="0.4003%" height="15" fill="rgb(223,117,19)" fg:x="1108" fg:w="5"/><text x="88.9610%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="89.0312%" y="629" width="0.0801%" height="15" fill="rgb(249,63,38)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="89.0312%" y="613" width="0.0801%" height="15" fill="rgb(220,143,23)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="89.0312%" y="597" width="0.0801%" height="15" fill="rgb(252,183,22)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.0312%" y="581" width="0.0801%" height="15" fill="rgb(243,176,15)" fg:x="1112" fg:w="1"/><text x="89.2812%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="89.1113%" y="597" width="0.0801%" height="15" fill="rgb(244,204,46)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="89.1113%" y="581" width="0.0801%" height="15" fill="rgb(227,28,54)" fg:x="1113" fg:w="1"/><text x="89.3613%" y="591.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="89.1113%" y="629" width="0.1601%" height="15" fill="rgb(231,10,15)" fg:x="1113" fg:w="2"/><text x="89.3613%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="89.1113%" y="613" width="0.1601%" height="15" fill="rgb(210,200,17)" fg:x="1113" fg:w="2"/><text x="89.3613%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.1914%" y="597" width="0.0801%" height="15" fill="rgb(251,106,46)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="89.1914%" y="581" width="0.0801%" height="15" fill="rgb(218,211,15)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.1914%" y="565" width="0.0801%" height="15" fill="rgb(239,62,10)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.1914%" y="549" width="0.0801%" height="15" fill="rgb(225,53,53)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.1914%" y="533" width="0.0801%" height="15" fill="rgb(207,16,24)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="89.1914%" y="517" width="0.0801%" height="15" fill="rgb(217,52,28)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="89.1914%" y="501" width="0.0801%" height="15" fill="rgb(246,1,5)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="89.1914%" y="485" width="0.0801%" height="15" fill="rgb(221,29,26)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.1914%" y="469" width="0.0801%" height="15" fill="rgb(250,133,32)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.1914%" y="453" width="0.0801%" height="15" fill="rgb(236,63,16)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.1914%" y="437" width="0.0801%" height="15" fill="rgb(231,159,14)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.1914%" y="421" width="0.0801%" height="15" fill="rgb(207,102,36)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.1914%" y="405" width="0.0801%" height="15" fill="rgb(230,224,31)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.1914%" y="389" width="0.0801%" height="15" fill="rgb(215,182,16)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.1914%" y="373" width="0.0801%" height="15" fill="rgb(226,113,2)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.1914%" y="357" width="0.0801%" height="15" fill="rgb(241,18,35)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.1914%" y="341" width="0.0801%" height="15" fill="rgb(240,165,44)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.1914%" y="325" width="0.0801%" height="15" fill="rgb(229,130,47)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.1914%" y="309" width="0.0801%" height="15" fill="rgb(223,93,7)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.1914%" y="293" width="0.0801%" height="15" fill="rgb(205,180,36)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="89.1914%" y="277" width="0.0801%" height="15" fill="rgb(221,103,28)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="89.1914%" y="261" width="0.0801%" height="15" fill="rgb(212,4,3)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="89.1914%" y="245" width="0.0801%" height="15" fill="rgb(209,221,53)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.1914%" y="229" width="0.0801%" height="15" fill="rgb(233,229,52)" fg:x="1114" fg:w="1"/><text x="89.4414%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3515%" y="485" width="0.0801%" height="15" fill="rgb(254,127,37)" fg:x="1116" fg:w="1"/><text x="89.6015%" y="495.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="89.3515%" y="549" width="0.1601%" height="15" fill="rgb(207,161,26)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="89.3515%" y="533" width="0.1601%" height="15" fill="rgb(223,75,5)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.3515%" y="517" width="0.1601%" height="15" fill="rgb(235,115,52)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.3515%" y="501" width="0.1601%" height="15" fill="rgb(240,91,46)" fg:x="1116" fg:w="2"/><text x="89.6015%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.4315%" y="485" width="0.0801%" height="15" fill="rgb(251,144,21)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4315%" y="469" width="0.0801%" height="15" fill="rgb(247,220,47)" fg:x="1117" fg:w="1"/><text x="89.6815%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.5917%" y="437" width="0.0801%" height="15" fill="rgb(253,122,1)" fg:x="1119" fg:w="1"/><text x="89.8417%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.6717%" y="437" width="0.0801%" height="15" fill="rgb(221,0,24)" fg:x="1120" fg:w="1"/><text x="89.9217%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.48%)</title><rect x="89.3515%" y="597" width="0.4804%" height="15" fill="rgb(220,204,54)" fg:x="1116" fg:w="6"/><text x="89.6015%" y="607.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="89.3515%" y="581" width="0.4804%" height="15" fill="rgb(205,96,25)" fg:x="1116" fg:w="6"/><text x="89.6015%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (6 samples, 0.48%)</title><rect x="89.3515%" y="565" width="0.4804%" height="15" fill="rgb(247,77,20)" fg:x="1116" fg:w="6"/><text x="89.6015%" y="575.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="89.5116%" y="549" width="0.3203%" height="15" fill="rgb(245,151,8)" fg:x="1118" fg:w="4"/><text x="89.7616%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="89.5116%" y="533" width="0.3203%" height="15" fill="rgb(242,158,39)" fg:x="1118" fg:w="4"/><text x="89.7616%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="89.5116%" y="517" width="0.3203%" height="15" fill="rgb(222,214,50)" fg:x="1118" fg:w="4"/><text x="89.7616%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.5917%" y="501" width="0.2402%" height="15" fill="rgb(229,60,39)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.5917%" y="485" width="0.2402%" height="15" fill="rgb(240,148,18)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="89.5917%" y="469" width="0.2402%" height="15" fill="rgb(215,96,11)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="89.5917%" y="453" width="0.2402%" height="15" fill="rgb(238,162,53)" fg:x="1119" fg:w="3"/><text x="89.8417%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.7518%" y="437" width="0.0801%" height="15" fill="rgb(214,83,18)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.7518%" y="421" width="0.0801%" height="15" fill="rgb(248,117,24)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="89.7518%" y="405" width="0.0801%" height="15" fill="rgb(238,190,6)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7518%" y="389" width="0.0801%" height="15" fill="rgb(213,51,6)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.7518%" y="373" width="0.0801%" height="15" fill="rgb(212,136,1)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.7518%" y="357" width="0.0801%" height="15" fill="rgb(221,192,14)" fg:x="1121" fg:w="1"/><text x="90.0018%" y="367.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (10 samples, 0.80%)</title><rect x="89.1113%" y="661" width="0.8006%" height="15" fill="rgb(244,38,54)" fg:x="1113" fg:w="10"/><text x="89.3613%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (10 samples, 0.80%)</title><rect x="89.1113%" y="645" width="0.8006%" height="15" fill="rgb(240,45,28)" fg:x="1113" fg:w="10"/><text x="89.3613%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="89.2714%" y="629" width="0.6405%" height="15" fill="rgb(240,123,12)" fg:x="1115" fg:w="8"/><text x="89.5214%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="89.2714%" y="613" width="0.6405%" height="15" fill="rgb(216,14,30)" fg:x="1115" fg:w="8"/><text x="89.5214%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.8319%" y="597" width="0.0801%" height="15" fill="rgb(212,50,24)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.8319%" y="581" width="0.0801%" height="15" fill="rgb(253,229,47)" fg:x="1122" fg:w="1"/><text x="90.0819%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="90.3122%" y="565" width="0.1601%" height="15" fill="rgb(214,26,17)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.3122%" y="549" width="0.1601%" height="15" fill="rgb(252,60,11)" fg:x="1128" fg:w="2"/><text x="90.5622%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="90.2322%" y="581" width="0.3203%" height="15" fill="rgb(209,59,37)" fg:x="1127" fg:w="4"/><text x="90.4822%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="90.4724%" y="565" width="0.0801%" height="15" fill="rgb(228,126,53)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4724%" y="549" width="0.0801%" height="15" fill="rgb(233,99,2)" fg:x="1130" fg:w="1"/><text x="90.7224%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="90.1521%" y="597" width="0.5604%" height="15" fill="rgb(217,106,34)" fg:x="1126" fg:w="7"/><text x="90.4021%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="90.5524%" y="581" width="0.1601%" height="15" fill="rgb(222,46,19)" fg:x="1131" fg:w="2"/><text x="90.8024%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (14 samples, 1.12%)</title><rect x="89.9920%" y="629" width="1.1209%" height="15" fill="rgb(251,87,31)" fg:x="1124" fg:w="14"/><text x="90.2420%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="89.9920%" y="613" width="1.1209%" height="15" fill="rgb(213,70,51)" fg:x="1124" fg:w="14"/><text x="90.2420%" y="623.50"></text></g><g><title>__libc_free (5 samples, 0.40%)</title><rect x="90.7126%" y="597" width="0.4003%" height="15" fill="rgb(229,144,18)" fg:x="1133" fg:w="5"/><text x="90.9626%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.2730%" y="597" width="0.0801%" height="15" fill="rgb(254,60,26)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="91.2730%" y="581" width="0.0801%" height="15" fill="rgb(243,127,51)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.2730%" y="565" width="0.0801%" height="15" fill="rgb(221,51,25)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.2730%" y="549" width="0.0801%" height="15" fill="rgb(205,42,7)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.2730%" y="533" width="0.0801%" height="15" fill="rgb(236,177,48)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.2730%" y="517" width="0.0801%" height="15" fill="rgb(226,79,31)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="91.2730%" y="501" width="0.0801%" height="15" fill="rgb(216,170,12)" fg:x="1140" fg:w="1"/><text x="91.5230%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="91.3531%" y="565" width="0.0801%" height="15" fill="rgb(208,62,51)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="91.3531%" y="549" width="0.0801%" height="15" fill="rgb(254,129,9)" fg:x="1141" fg:w="1"/><text x="91.6031%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.16%)</title><rect x="91.3531%" y="597" width="0.1601%" height="15" fill="rgb(243,209,31)" fg:x="1141" fg:w="2"/><text x="91.6031%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="91.3531%" y="581" width="0.1601%" height="15" fill="rgb(213,159,23)" fg:x="1141" fg:w="2"/><text x="91.6031%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.4331%" y="565" width="0.0801%" height="15" fill="rgb(249,77,39)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="91.4331%" y="549" width="0.0801%" height="15" fill="rgb(230,13,33)" fg:x="1142" fg:w="1"/><text x="91.6831%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.5132%" y="597" width="0.0801%" height="15" fill="rgb(215,215,7)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.5132%" y="581" width="0.0801%" height="15" fill="rgb(222,92,25)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="91.5132%" y="565" width="0.0801%" height="15" fill="rgb(215,173,22)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="91.5132%" y="549" width="0.0801%" height="15" fill="rgb(247,205,52)" fg:x="1143" fg:w="1"/><text x="91.7632%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.6733%" y="469" width="0.0801%" height="15" fill="rgb(240,210,37)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="91.6733%" y="453" width="0.0801%" height="15" fill="rgb(224,13,10)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6733%" y="437" width="0.0801%" height="15" fill="rgb(209,48,33)" fg:x="1145" fg:w="1"/><text x="91.9233%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="91.7534%" y="165" width="0.0801%" height="15" fill="rgb(228,219,23)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="91.7534%" y="149" width="0.0801%" height="15" fill="rgb(239,46,49)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="91.7534%" y="133" width="0.0801%" height="15" fill="rgb(206,172,51)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="91.7534%" y="117" width="0.0801%" height="15" fill="rgb(213,212,35)" fg:x="1146" fg:w="1"/><text x="92.0034%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.7534%" y="341" width="0.1601%" height="15" fill="rgb(252,40,27)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="91.7534%" y="325" width="0.1601%" height="15" fill="rgb(212,33,41)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="91.7534%" y="309" width="0.1601%" height="15" fill="rgb(232,160,27)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="91.7534%" y="293" width="0.1601%" height="15" fill="rgb(244,160,20)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="91.7534%" y="277" width="0.1601%" height="15" fill="rgb(205,66,20)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="91.7534%" y="261" width="0.1601%" height="15" fill="rgb(236,158,6)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="91.7534%" y="245" width="0.1601%" height="15" fill="rgb(232,25,36)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="91.7534%" y="229" width="0.1601%" height="15" fill="rgb(220,153,35)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="91.7534%" y="213" width="0.1601%" height="15" fill="rgb(216,5,8)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="91.7534%" y="197" width="0.1601%" height="15" fill="rgb(240,97,3)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="91.7534%" y="181" width="0.1601%" height="15" fill="rgb(220,99,26)" fg:x="1146" fg:w="2"/><text x="92.0034%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.8335%" y="165" width="0.0801%" height="15" fill="rgb(237,96,2)" fg:x="1147" fg:w="1"/><text x="92.0835%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="91.6733%" y="517" width="0.3203%" height="15" fill="rgb(217,197,47)" fg:x="1145" fg:w="4"/><text x="91.9233%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.32%)</title><rect x="91.6733%" y="501" width="0.3203%" height="15" fill="rgb(252,133,54)" fg:x="1145" fg:w="4"/><text x="91.9233%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="91.6733%" y="485" width="0.3203%" height="15" fill="rgb(233,37,30)" fg:x="1145" fg:w="4"/><text x="91.9233%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="91.7534%" y="469" width="0.2402%" height="15" fill="rgb(239,182,12)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="91.7534%" y="453" width="0.2402%" height="15" fill="rgb(245,83,39)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="91.7534%" y="437" width="0.2402%" height="15" fill="rgb(222,109,36)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="91.7534%" y="421" width="0.2402%" height="15" fill="rgb(237,95,44)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="91.7534%" y="405" width="0.2402%" height="15" fill="rgb(216,36,54)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="91.7534%" y="389" width="0.2402%" height="15" fill="rgb(236,164,3)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="91.7534%" y="373" width="0.2402%" height="15" fill="rgb(223,15,21)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="91.7534%" y="357" width="0.2402%" height="15" fill="rgb(239,191,12)" fg:x="1146" fg:w="3"/><text x="92.0034%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.9135%" y="341" width="0.0801%" height="15" fill="rgb(231,191,37)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="91.9135%" y="325" width="0.0801%" height="15" fill="rgb(209,155,36)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.9135%" y="309" width="0.0801%" height="15" fill="rgb(216,222,49)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.9135%" y="293" width="0.0801%" height="15" fill="rgb(218,181,2)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.08%)</title><rect x="91.9135%" y="277" width="0.0801%" height="15" fill="rgb(239,125,9)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="287.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.08%)</title><rect x="91.9135%" y="261" width="0.0801%" height="15" fill="rgb(233,103,7)" fg:x="1148" fg:w="1"/><text x="92.1635%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.0737%" y="501" width="0.0801%" height="15" fill="rgb(209,223,5)" fg:x="1150" fg:w="1"/><text x="92.3237%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.1537%" y="469" width="0.0801%" height="15" fill="rgb(234,71,27)" fg:x="1151" fg:w="1"/><text x="92.4037%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.2338%" y="453" width="0.0801%" height="15" fill="rgb(251,202,16)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.2338%" y="437" width="0.0801%" height="15" fill="rgb(231,180,0)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2338%" y="421" width="0.0801%" height="15" fill="rgb(223,58,28)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2338%" y="405" width="0.0801%" height="15" fill="rgb(250,34,24)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.2338%" y="389" width="0.0801%" height="15" fill="rgb(235,24,16)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.2338%" y="373" width="0.0801%" height="15" fill="rgb(219,28,33)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.2338%" y="357" width="0.0801%" height="15" fill="rgb(228,150,43)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2338%" y="341" width="0.0801%" height="15" fill="rgb(221,228,36)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.2338%" y="325" width="0.0801%" height="15" fill="rgb(232,116,17)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.2338%" y="309" width="0.0801%" height="15" fill="rgb(220,110,51)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.2338%" y="293" width="0.0801%" height="15" fill="rgb(207,26,25)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.2338%" y="277" width="0.0801%" height="15" fill="rgb(223,58,19)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.2338%" y="261" width="0.0801%" height="15" fill="rgb(234,125,39)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.2338%" y="245" width="0.0801%" height="15" fill="rgb(241,48,36)" fg:x="1152" fg:w="1"/><text x="92.4838%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="91.6733%" y="533" width="0.7206%" height="15" fill="rgb(217,148,51)" fg:x="1145" fg:w="9"/><text x="91.9233%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="91.9936%" y="517" width="0.4003%" height="15" fill="rgb(247,17,25)" fg:x="1149" fg:w="5"/><text x="92.2436%" y="527.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.24%)</title><rect x="92.1537%" y="501" width="0.2402%" height="15" fill="rgb(219,89,38)" fg:x="1151" fg:w="3"/><text x="92.4037%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.24%)</title><rect x="92.1537%" y="485" width="0.2402%" height="15" fill="rgb(220,145,2)" fg:x="1151" fg:w="3"/><text x="92.4037%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="92.2338%" y="469" width="0.1601%" height="15" fill="rgb(244,66,47)" fg:x="1152" fg:w="2"/><text x="92.4838%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="92.3139%" y="453" width="0.0801%" height="15" fill="rgb(226,182,5)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.3139%" y="437" width="0.0801%" height="15" fill="rgb(211,98,20)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="447.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="92.3139%" y="421" width="0.0801%" height="15" fill="rgb(217,103,52)" fg:x="1153" fg:w="1"/><text x="92.5639%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4740%" y="501" width="0.0801%" height="15" fill="rgb(208,125,52)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4740%" y="485" width="0.0801%" height="15" fill="rgb(244,70,13)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4740%" y="469" width="0.0801%" height="15" fill="rgb(253,124,3)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4740%" y="453" width="0.0801%" height="15" fill="rgb(222,145,32)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4740%" y="437" width="0.0801%" height="15" fill="rgb(232,183,47)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4740%" y="421" width="0.0801%" height="15" fill="rgb(246,226,4)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4740%" y="405" width="0.0801%" height="15" fill="rgb(228,185,46)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4740%" y="389" width="0.0801%" height="15" fill="rgb(213,196,4)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4740%" y="373" width="0.0801%" height="15" fill="rgb(212,2,45)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4740%" y="357" width="0.0801%" height="15" fill="rgb(217,145,50)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4740%" y="341" width="0.0801%" height="15" fill="rgb(242,10,46)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4740%" y="325" width="0.0801%" height="15" fill="rgb(252,91,48)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4740%" y="309" width="0.0801%" height="15" fill="rgb(216,72,13)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4740%" y="293" width="0.0801%" height="15" fill="rgb(219,6,37)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4740%" y="277" width="0.0801%" height="15" fill="rgb(236,185,40)" fg:x="1155" fg:w="1"/><text x="92.7240%" y="287.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="92.5540%" y="485" width="0.0801%" height="15" fill="rgb(208,81,48)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="92.5540%" y="469" width="0.0801%" height="15" fill="rgb(211,42,33)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="92.5540%" y="453" width="0.0801%" height="15" fill="rgb(211,90,39)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="92.5540%" y="437" width="0.0801%" height="15" fill="rgb(218,136,12)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.5540%" y="421" width="0.0801%" height="15" fill="rgb(234,12,32)" fg:x="1156" fg:w="1"/><text x="92.8040%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="92.5540%" y="501" width="0.1601%" height="15" fill="rgb(221,164,18)" fg:x="1156" fg:w="2"/><text x="92.8040%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="92.6341%" y="485" width="0.0801%" height="15" fill="rgb(239,135,14)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.6341%" y="469" width="0.0801%" height="15" fill="rgb(226,198,47)" fg:x="1157" fg:w="1"/><text x="92.8841%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (14 samples, 1.12%)</title><rect x="91.6733%" y="549" width="1.1209%" height="15" fill="rgb(244,121,47)" fg:x="1145" fg:w="14"/><text x="91.9233%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="92.3939%" y="533" width="0.4003%" height="15" fill="rgb(226,21,48)" fg:x="1154" fg:w="5"/><text x="92.6439%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="92.3939%" y="517" width="0.4003%" height="15" fill="rgb(215,178,47)" fg:x="1154" fg:w="5"/><text x="92.6439%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7142%" y="501" width="0.0801%" height="15" fill="rgb(206,212,19)" fg:x="1158" fg:w="1"/><text x="92.9642%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7142%" y="485" width="0.0801%" height="15" fill="rgb(230,104,34)" fg:x="1158" fg:w="1"/><text x="92.9642%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="92.7942%" y="325" width="0.1601%" height="15" fill="rgb(210,96,51)" fg:x="1159" fg:w="2"/><text x="93.0442%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="92.7942%" y="309" width="0.1601%" height="15" fill="rgb(229,111,47)" fg:x="1159" fg:w="2"/><text x="93.0442%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="92.7942%" y="293" width="0.1601%" height="15" fill="rgb(218,174,45)" fg:x="1159" fg:w="2"/><text x="93.0442%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.7942%" y="277" width="0.1601%" height="15" fill="rgb(215,21,32)" fg:x="1159" fg:w="2"/><text x="93.0442%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.7942%" y="501" width="0.2402%" height="15" fill="rgb(235,72,21)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.7942%" y="485" width="0.2402%" height="15" fill="rgb(250,113,30)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.7942%" y="469" width="0.2402%" height="15" fill="rgb(244,136,34)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.7942%" y="453" width="0.2402%" height="15" fill="rgb(213,226,47)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.7942%" y="437" width="0.2402%" height="15" fill="rgb(224,136,40)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="92.7942%" y="421" width="0.2402%" height="15" fill="rgb(253,124,12)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="92.7942%" y="405" width="0.2402%" height="15" fill="rgb(210,67,8)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="92.7942%" y="389" width="0.2402%" height="15" fill="rgb(210,204,0)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="92.7942%" y="373" width="0.2402%" height="15" fill="rgb(217,179,22)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="92.7942%" y="357" width="0.2402%" height="15" fill="rgb(237,192,33)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="92.7942%" y="341" width="0.2402%" height="15" fill="rgb(211,104,28)" fg:x="1159" fg:w="3"/><text x="93.0442%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="92.9544%" y="325" width="0.0801%" height="15" fill="rgb(214,75,30)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="335.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="92.9544%" y="309" width="0.0801%" height="15" fill="rgb(220,227,12)" fg:x="1161" fg:w="1"/><text x="93.2044%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0344%" y="421" width="0.0801%" height="15" fill="rgb(233,134,28)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0344%" y="405" width="0.0801%" height="15" fill="rgb(215,146,24)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0344%" y="389" width="0.0801%" height="15" fill="rgb(248,227,20)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0344%" y="373" width="0.0801%" height="15" fill="rgb(250,44,42)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0344%" y="357" width="0.0801%" height="15" fill="rgb(219,5,35)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0344%" y="341" width="0.0801%" height="15" fill="rgb(241,132,32)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0344%" y="325" width="0.0801%" height="15" fill="rgb(234,212,51)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.0344%" y="309" width="0.0801%" height="15" fill="rgb(242,173,29)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.0344%" y="293" width="0.0801%" height="15" fill="rgb(212,159,2)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.0344%" y="277" width="0.0801%" height="15" fill="rgb(238,165,31)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.0344%" y="261" width="0.0801%" height="15" fill="rgb(241,57,36)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.0344%" y="245" width="0.0801%" height="15" fill="rgb(249,7,4)" fg:x="1162" fg:w="1"/><text x="93.2844%" y="255.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="93.1145%" y="421" width="0.0801%" height="15" fill="rgb(250,137,44)" fg:x="1163" fg:w="1"/><text x="93.3645%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.1145%" y="405" width="0.0801%" height="15" fill="rgb(244,185,1)" fg:x="1163" fg:w="1"/><text x="93.3645%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="93.1946%" y="341" width="0.1601%" height="15" fill="rgb(216,5,53)" fg:x="1164" fg:w="2"/><text x="93.4446%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.3547%" y="293" width="0.1601%" height="15" fill="rgb(234,89,21)" fg:x="1166" fg:w="2"/><text x="93.6047%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.3547%" y="277" width="0.1601%" height="15" fill="rgb(250,81,43)" fg:x="1166" fg:w="2"/><text x="93.6047%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.4347%" y="261" width="0.0801%" height="15" fill="rgb(243,132,11)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4347%" y="245" width="0.0801%" height="15" fill="rgb(253,159,28)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4347%" y="229" width="0.0801%" height="15" fill="rgb(237,167,34)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4347%" y="213" width="0.0801%" height="15" fill="rgb(237,16,50)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.4347%" y="197" width="0.0801%" height="15" fill="rgb(247,125,2)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.4347%" y="181" width="0.0801%" height="15" fill="rgb(254,35,3)" fg:x="1167" fg:w="1"/><text x="93.6847%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="93.3547%" y="341" width="0.3203%" height="15" fill="rgb(237,209,21)" fg:x="1166" fg:w="4"/><text x="93.6047%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="93.3547%" y="325" width="0.3203%" height="15" fill="rgb(224,122,20)" fg:x="1166" fg:w="4"/><text x="93.6047%" y="335.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="93.3547%" y="309" width="0.3203%" height="15" fill="rgb(224,11,46)" fg:x="1166" fg:w="4"/><text x="93.6047%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.5148%" y="293" width="0.1601%" height="15" fill="rgb(248,21,33)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.5148%" y="277" width="0.1601%" height="15" fill="rgb(222,144,7)" fg:x="1168" fg:w="2"/><text x="93.7648%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5949%" y="261" width="0.0801%" height="15" fill="rgb(205,141,37)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.5949%" y="245" width="0.0801%" height="15" fill="rgb(237,130,8)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.5949%" y="229" width="0.0801%" height="15" fill="rgb(209,179,39)" fg:x="1169" fg:w="1"/><text x="93.8449%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.6749%" y="277" width="0.0801%" height="15" fill="rgb(207,52,17)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.6749%" y="261" width="0.0801%" height="15" fill="rgb(253,158,17)" fg:x="1170" fg:w="1"/><text x="93.9249%" y="271.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (8 samples, 0.64%)</title><rect x="93.1946%" y="405" width="0.6405%" height="15" fill="rgb(208,19,53)" fg:x="1164" fg:w="8"/><text x="93.4446%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (8 samples, 0.64%)</title><rect x="93.1946%" y="389" width="0.6405%" height="15" fill="rgb(233,152,13)" fg:x="1164" fg:w="8"/><text x="93.4446%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="93.1946%" y="373" width="0.6405%" height="15" fill="rgb(231,84,1)" fg:x="1164" fg:w="8"/><text x="93.4446%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="93.1946%" y="357" width="0.6405%" height="15" fill="rgb(229,142,48)" fg:x="1164" fg:w="8"/><text x="93.4446%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="93.6749%" y="341" width="0.1601%" height="15" fill="rgb(248,70,29)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6749%" y="325" width="0.1601%" height="15" fill="rgb(250,85,7)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.6749%" y="309" width="0.1601%" height="15" fill="rgb(235,140,43)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.6749%" y="293" width="0.1601%" height="15" fill="rgb(216,0,5)" fg:x="1170" fg:w="2"/><text x="93.9249%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7550%" y="277" width="0.0801%" height="15" fill="rgb(223,167,29)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7550%" y="261" width="0.0801%" height="15" fill="rgb(229,150,33)" fg:x="1171" fg:w="1"/><text x="94.0050%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9952%" y="293" width="0.0801%" height="15" fill="rgb(227,26,52)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.9952%" y="277" width="0.0801%" height="15" fill="rgb(250,60,52)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9952%" y="261" width="0.0801%" height="15" fill="rgb(228,81,46)" fg:x="1174" fg:w="1"/><text x="94.2452%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.0753%" y="261" width="0.0801%" height="15" fill="rgb(225,218,31)" fg:x="1175" fg:w="1"/><text x="94.3253%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1553%" y="261" width="0.0801%" height="15" fill="rgb(230,35,16)" fg:x="1176" fg:w="1"/><text x="94.4053%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (16 samples, 1.28%)</title><rect x="93.0344%" y="501" width="1.2810%" height="15" fill="rgb(247,100,0)" fg:x="1162" fg:w="16"/><text x="93.2844%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (16 samples, 1.28%)</title><rect x="93.0344%" y="485" width="1.2810%" height="15" fill="rgb(223,135,11)" fg:x="1162" fg:w="16"/><text x="93.2844%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 1.28%)</title><rect x="93.0344%" y="469" width="1.2810%" height="15" fill="rgb(207,136,0)" fg:x="1162" fg:w="16"/><text x="93.2844%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.28%)</title><rect x="93.0344%" y="453" width="1.2810%" height="15" fill="rgb(246,131,25)" fg:x="1162" fg:w="16"/><text x="93.2844%" y="463.50"></text></g><g><title>engine::internal::Entities::prepare_entity (16 samples, 1.28%)</title><rect x="93.0344%" y="437" width="1.2810%" height="15" fill="rgb(209,47,12)" fg:x="1162" fg:w="16"/><text x="93.2844%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity (14 samples, 1.12%)</title><rect x="93.1946%" y="421" width="1.1209%" height="15" fill="rgb(221,25,16)" fg:x="1164" fg:w="14"/><text x="93.4446%" y="431.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="93.8351%" y="405" width="0.4804%" height="15" fill="rgb(223,164,33)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.8351%" y="389" width="0.4804%" height="15" fill="rgb(220,26,23)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="93.8351%" y="373" width="0.4804%" height="15" fill="rgb(231,224,1)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.8351%" y="357" width="0.4804%" height="15" fill="rgb(229,221,24)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="93.8351%" y="341" width="0.4804%" height="15" fill="rgb(213,34,10)" fg:x="1172" fg:w="6"/><text x="94.0851%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.9151%" y="325" width="0.4003%" height="15" fill="rgb(215,33,11)" fg:x="1173" fg:w="5"/><text x="94.1651%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.9952%" y="309" width="0.3203%" height="15" fill="rgb(216,20,41)" fg:x="1174" fg:w="4"/><text x="94.2452%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.0753%" y="293" width="0.2402%" height="15" fill="rgb(228,43,31)" fg:x="1175" fg:w="3"/><text x="94.3253%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.0753%" y="277" width="0.2402%" height="15" fill="rgb(227,83,26)" fg:x="1175" fg:w="3"/><text x="94.3253%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2354%" y="261" width="0.0801%" height="15" fill="rgb(217,168,19)" fg:x="1177" fg:w="1"/><text x="94.4854%" y="271.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="94.3155%" y="469" width="0.1601%" height="15" fill="rgb(231,34,33)" fg:x="1178" fg:w="2"/><text x="94.5655%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4756%" y="469" width="0.0801%" height="15" fill="rgb(230,120,51)" fg:x="1180" fg:w="1"/><text x="94.7256%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.5556%" y="469" width="0.0801%" height="15" fill="rgb(215,138,27)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5556%" y="453" width="0.0801%" height="15" fill="rgb(246,80,47)" fg:x="1181" fg:w="1"/><text x="94.8056%" y="463.50"></text></g><g><title>plugins_core::tools::get_contained_keys (26 samples, 2.08%)</title><rect x="92.7942%" y="549" width="2.0817%" height="15" fill="rgb(215,57,53)" fg:x="1159" fg:w="26"/><text x="93.0442%" y="559.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (26 samples, 2.08%)</title><rect x="92.7942%" y="533" width="2.0817%" height="15" fill="rgb(229,137,5)" fg:x="1159" fg:w="26"/><text x="93.0442%" y="543.50">k..</text></g><g><title>kernel::model::Entity::load_scope (26 samples, 2.08%)</title><rect x="92.7942%" y="517" width="2.0817%" height="15" fill="rgb(210,86,2)" fg:x="1159" fg:w="26"/><text x="93.0442%" y="527.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="94.3155%" y="501" width="0.5604%" height="15" fill="rgb(231,226,51)" fg:x="1178" fg:w="7"/><text x="94.5655%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="94.3155%" y="485" width="0.5604%" height="15" fill="rgb(216,62,29)" fg:x="1178" fg:w="7"/><text x="94.5655%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="94.6357%" y="469" width="0.2402%" height="15" fill="rgb(248,202,3)" fg:x="1182" fg:w="3"/><text x="94.8857%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="94.6357%" y="453" width="0.2402%" height="15" fill="rgb(225,181,7)" fg:x="1182" fg:w="3"/><text x="94.8857%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="94.6357%" y="437" width="0.2402%" height="15" fill="rgb(247,170,54)" fg:x="1182" fg:w="3"/><text x="94.8857%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.7158%" y="421" width="0.1601%" height="15" fill="rgb(236,204,33)" fg:x="1183" fg:w="2"/><text x="94.9658%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.7158%" y="405" width="0.1601%" height="15" fill="rgb(216,45,30)" fg:x="1183" fg:w="2"/><text x="94.9658%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7958%" y="389" width="0.0801%" height="15" fill="rgb(213,203,16)" fg:x="1184" fg:w="1"/><text x="95.0458%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.9560%" y="485" width="0.0801%" height="15" fill="rgb(215,46,16)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="94.9560%" y="469" width="0.0801%" height="15" fill="rgb(217,162,46)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="94.9560%" y="453" width="0.0801%" height="15" fill="rgb(224,189,20)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9560%" y="437" width="0.0801%" height="15" fill="rgb(232,35,51)" fg:x="1186" fg:w="1"/><text x="95.2060%" y="447.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="94.9560%" y="501" width="0.1601%" height="15" fill="rgb(243,221,46)" fg:x="1186" fg:w="2"/><text x="95.2060%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.0360%" y="485" width="0.0801%" height="15" fill="rgb(248,16,16)" fg:x="1187" fg:w="1"/><text x="95.2860%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (45 samples, 3.60%)</title><rect x="91.5933%" y="581" width="3.6029%" height="15" fill="rgb(220,168,13)" fg:x="1144" fg:w="45"/><text x="91.8433%" y="591.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (45 samples, 3.60%)</title><rect x="91.5933%" y="565" width="3.6029%" height="15" fill="rgb(243,102,39)" fg:x="1144" fg:w="45"/><text x="91.8433%" y="575.50">&lt;cor..</text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="94.8759%" y="549" width="0.3203%" height="15" fill="rgb(245,82,32)" fg:x="1185" fg:w="4"/><text x="95.1259%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="94.9560%" y="533" width="0.2402%" height="15" fill="rgb(230,164,19)" fg:x="1186" fg:w="3"/><text x="95.2060%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="94.9560%" y="517" width="0.2402%" height="15" fill="rgb(221,9,41)" fg:x="1186" fg:w="3"/><text x="95.2060%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1161%" y="501" width="0.0801%" height="15" fill="rgb(216,93,0)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1161%" y="485" width="0.0801%" height="15" fill="rgb(235,113,9)" fg:x="1188" fg:w="1"/><text x="95.3661%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="95.2762%" y="517" width="0.1601%" height="15" fill="rgb(209,224,10)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="527.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="95.2762%" y="501" width="0.1601%" height="15" fill="rgb(226,54,34)" fg:x="1190" fg:w="2"/><text x="95.5262%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3563%" y="485" width="0.0801%" height="15" fill="rgb(222,60,8)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3563%" y="469" width="0.0801%" height="15" fill="rgb(248,228,41)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3563%" y="453" width="0.0801%" height="15" fill="rgb(226,31,32)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.3563%" y="437" width="0.0801%" height="15" fill="rgb(242,132,49)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.3563%" y="421" width="0.0801%" height="15" fill="rgb(224,194,19)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.3563%" y="405" width="0.0801%" height="15" fill="rgb(232,200,51)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3563%" y="389" width="0.0801%" height="15" fill="rgb(235,60,46)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.3563%" y="373" width="0.0801%" height="15" fill="rgb(240,109,52)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.3563%" y="357" width="0.0801%" height="15" fill="rgb(215,78,37)" fg:x="1191" fg:w="1"/><text x="95.6063%" y="367.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="95.4363%" y="517" width="0.0801%" height="15" fill="rgb(225,141,7)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4363%" y="501" width="0.0801%" height="15" fill="rgb(216,102,54)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4363%" y="485" width="0.0801%" height="15" fill="rgb(238,143,13)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4363%" y="469" width="0.0801%" height="15" fill="rgb(219,45,51)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4363%" y="453" width="0.0801%" height="15" fill="rgb(242,105,46)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4363%" y="437" width="0.0801%" height="15" fill="rgb(206,154,49)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4363%" y="421" width="0.0801%" height="15" fill="rgb(239,215,4)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4363%" y="405" width="0.0801%" height="15" fill="rgb(238,82,17)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4363%" y="389" width="0.0801%" height="15" fill="rgb(242,49,30)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4363%" y="373" width="0.0801%" height="15" fill="rgb(248,5,16)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4363%" y="357" width="0.0801%" height="15" fill="rgb(237,138,32)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4363%" y="341" width="0.0801%" height="15" fill="rgb(235,79,45)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4363%" y="325" width="0.0801%" height="15" fill="rgb(213,105,25)" fg:x="1192" fg:w="1"/><text x="95.6863%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.5164%" y="389" width="0.0801%" height="15" fill="rgb(251,131,7)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.5164%" y="373" width="0.0801%" height="15" fill="rgb(211,155,7)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="383.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.5164%" y="357" width="0.0801%" height="15" fill="rgb(243,70,15)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.5164%" y="341" width="0.0801%" height="15" fill="rgb(215,171,2)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.5164%" y="325" width="0.0801%" height="15" fill="rgb(244,121,35)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.5164%" y="309" width="0.0801%" height="15" fill="rgb(249,147,17)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.5164%" y="293" width="0.0801%" height="15" fill="rgb(241,193,52)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.5164%" y="277" width="0.0801%" height="15" fill="rgb(217,159,39)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.5164%" y="261" width="0.0801%" height="15" fill="rgb(248,110,0)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="95.5164%" y="245" width="0.0801%" height="15" fill="rgb(233,227,0)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="255.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="95.5164%" y="229" width="0.0801%" height="15" fill="rgb(252,55,2)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="95.5164%" y="213" width="0.0801%" height="15" fill="rgb(224,194,24)" fg:x="1193" fg:w="1"/><text x="95.7664%" y="223.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="95.1962%" y="533" width="0.4804%" height="15" fill="rgb(247,5,33)" fg:x="1189" fg:w="6"/><text x="95.4462%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="95.5164%" y="517" width="0.1601%" height="15" fill="rgb(242,66,47)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="95.5164%" y="501" width="0.1601%" height="15" fill="rgb(213,107,12)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="95.5164%" y="485" width="0.1601%" height="15" fill="rgb(206,131,1)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="95.5164%" y="469" width="0.1601%" height="15" fill="rgb(214,9,36)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="95.5164%" y="453" width="0.1601%" height="15" fill="rgb(251,215,18)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="95.5164%" y="437" width="0.1601%" height="15" fill="rgb(251,64,9)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="95.5164%" y="421" width="0.1601%" height="15" fill="rgb(235,68,21)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="431.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="95.5164%" y="405" width="0.1601%" height="15" fill="rgb(240,69,38)" fg:x="1193" fg:w="2"/><text x="95.7664%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.5965%" y="389" width="0.0801%" height="15" fill="rgb(231,18,27)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.5965%" y="373" width="0.0801%" height="15" fill="rgb(215,154,25)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.5965%" y="357" width="0.0801%" height="15" fill="rgb(224,33,46)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.5965%" y="341" width="0.0801%" height="15" fill="rgb(248,191,53)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.5965%" y="325" width="0.0801%" height="15" fill="rgb(231,3,37)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.5965%" y="309" width="0.0801%" height="15" fill="rgb(209,152,2)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.5965%" y="293" width="0.0801%" height="15" fill="rgb(212,208,43)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.5965%" y="277" width="0.0801%" height="15" fill="rgb(208,60,49)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="95.5965%" y="261" width="0.0801%" height="15" fill="rgb(245,135,6)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="95.5965%" y="245" width="0.0801%" height="15" fill="rgb(243,86,23)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="95.5965%" y="229" width="0.0801%" height="15" fill="rgb(223,7,20)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="95.5965%" y="213" width="0.0801%" height="15" fill="rgb(212,182,17)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="223.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="95.5965%" y="197" width="0.0801%" height="15" fill="rgb(237,94,50)" fg:x="1194" fg:w="1"/><text x="95.8465%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="96.5572%" y="293" width="0.0801%" height="15" fill="rgb(232,185,44)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5572%" y="277" width="0.0801%" height="15" fill="rgb(205,50,36)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.5572%" y="261" width="0.0801%" height="15" fill="rgb(252,32,32)" fg:x="1206" fg:w="1"/><text x="96.8072%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (5 samples, 0.40%)</title><rect x="96.3971%" y="325" width="0.4003%" height="15" fill="rgb(241,123,33)" fg:x="1204" fg:w="5"/><text x="96.6471%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="96.5572%" y="309" width="0.2402%" height="15" fill="rgb(212,140,16)" fg:x="1206" fg:w="3"/><text x="96.8072%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.6373%" y="293" width="0.1601%" height="15" fill="rgb(247,132,5)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.6373%" y="277" width="0.1601%" height="15" fill="rgb(209,137,38)" fg:x="1207" fg:w="2"/><text x="96.8873%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.7974%" y="325" width="0.0801%" height="15" fill="rgb(248,32,42)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7974%" y="309" width="0.0801%" height="15" fill="rgb(216,188,40)" fg:x="1209" fg:w="1"/><text x="97.0474%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="96.3971%" y="357" width="0.6405%" height="15" fill="rgb(209,127,53)" fg:x="1204" fg:w="8"/><text x="96.6471%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="96.3971%" y="341" width="0.6405%" height="15" fill="rgb(254,162,9)" fg:x="1204" fg:w="8"/><text x="96.6471%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.8775%" y="325" width="0.1601%" height="15" fill="rgb(219,183,10)" fg:x="1210" fg:w="2"/><text x="97.1275%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9576%" y="309" width="0.0801%" height="15" fill="rgb(217,192,21)" fg:x="1211" fg:w="1"/><text x="97.2076%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (10 samples, 0.80%)</title><rect x="96.3171%" y="373" width="0.8006%" height="15" fill="rgb(251,89,27)" fg:x="1203" fg:w="10"/><text x="96.5671%" y="383.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.0376%" y="357" width="0.0801%" height="15" fill="rgb(253,55,28)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.0376%" y="341" width="0.0801%" height="15" fill="rgb(216,159,8)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="97.0376%" y="325" width="0.0801%" height="15" fill="rgb(231,228,44)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.0376%" y="309" width="0.0801%" height="15" fill="rgb(247,34,48)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="97.0376%" y="293" width="0.0801%" height="15" fill="rgb(247,222,18)" fg:x="1212" fg:w="1"/><text x="97.2876%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.1177%" y="373" width="0.0801%" height="15" fill="rgb(227,49,4)" fg:x="1213" fg:w="1"/><text x="97.3677%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.96%)</title><rect x="96.3171%" y="389" width="0.9608%" height="15" fill="rgb(219,189,53)" fg:x="1203" fg:w="12"/><text x="96.5671%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1978%" y="373" width="0.0801%" height="15" fill="rgb(241,160,53)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.1978%" y="357" width="0.0801%" height="15" fill="rgb(227,115,4)" fg:x="1214" fg:w="1"/><text x="97.4478%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (16 samples, 1.28%)</title><rect x="96.0769%" y="421" width="1.2810%" height="15" fill="rgb(215,28,28)" fg:x="1200" fg:w="16"/><text x="96.3269%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (14 samples, 1.12%)</title><rect x="96.2370%" y="405" width="1.1209%" height="15" fill="rgb(237,143,40)" fg:x="1202" fg:w="14"/><text x="96.4870%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="97.2778%" y="389" width="0.0801%" height="15" fill="rgb(205,107,24)" fg:x="1215" fg:w="1"/><text x="97.5278%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.4380%" y="405" width="0.0801%" height="15" fill="rgb(209,112,35)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.4380%" y="389" width="0.0801%" height="15" fill="rgb(206,135,5)" fg:x="1217" fg:w="1"/><text x="97.6880%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (23 samples, 1.84%)</title><rect x="95.7566%" y="437" width="1.8415%" height="15" fill="rgb(227,217,38)" fg:x="1196" fg:w="23"/><text x="96.0066%" y="447.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.3579%" y="421" width="0.2402%" height="15" fill="rgb(205,0,41)" fg:x="1216" fg:w="3"/><text x="97.6079%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5180%" y="405" width="0.0801%" height="15" fill="rgb(220,20,40)" fg:x="1218" fg:w="1"/><text x="97.7680%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (26 samples, 2.08%)</title><rect x="95.6765%" y="469" width="2.0817%" height="15" fill="rgb(216,145,3)" fg:x="1195" fg:w="26"/><text x="95.9265%" y="479.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 2.08%)</title><rect x="95.6765%" y="453" width="2.0817%" height="15" fill="rgb(207,130,51)" fg:x="1195" fg:w="26"/><text x="95.9265%" y="463.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="97.5981%" y="437" width="0.1601%" height="15" fill="rgb(252,93,13)" fg:x="1219" fg:w="2"/><text x="97.8481%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.7582%" y="453" width="0.0801%" height="15" fill="rgb(210,105,15)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.7582%" y="437" width="0.0801%" height="15" fill="rgb(212,126,31)" fg:x="1221" fg:w="1"/><text x="98.0082%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 2.24%)</title><rect x="95.6765%" y="485" width="2.2418%" height="15" fill="rgb(241,167,46)" fg:x="1195" fg:w="28"/><text x="95.9265%" y="495.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.7582%" y="469" width="0.1601%" height="15" fill="rgb(217,143,19)" fg:x="1221" fg:w="2"/><text x="98.0082%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8383%" y="453" width="0.0801%" height="15" fill="rgb(235,117,33)" fg:x="1222" fg:w="1"/><text x="98.0883%" y="463.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (33 samples, 2.64%)</title><rect x="95.6765%" y="517" width="2.6421%" height="15" fill="rgb(247,95,6)" fg:x="1195" fg:w="33"/><text x="95.9265%" y="527.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 2.64%)</title><rect x="95.6765%" y="501" width="2.6421%" height="15" fill="rgb(243,206,43)" fg:x="1195" fg:w="33"/><text x="95.9265%" y="511.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="97.9183%" y="485" width="0.4003%" height="15" fill="rgb(229,65,54)" fg:x="1223" fg:w="5"/><text x="98.1683%" y="495.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="97.9984%" y="469" width="0.3203%" height="15" fill="rgb(247,137,34)" fg:x="1224" fg:w="4"/><text x="98.2484%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3187%" y="469" width="0.0801%" height="15" fill="rgb(245,174,44)" fg:x="1228" fg:w="1"/><text x="98.5687%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.3987%" y="469" width="0.1601%" height="15" fill="rgb(223,64,15)" fg:x="1229" fg:w="2"/><text x="98.6487%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.4788%" y="453" width="0.0801%" height="15" fill="rgb(243,153,36)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.4788%" y="437" width="0.0801%" height="15" fill="rgb(252,23,4)" fg:x="1230" fg:w="1"/><text x="98.7288%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="98.5588%" y="469" width="0.0801%" height="15" fill="rgb(209,132,13)" fg:x="1231" fg:w="1"/><text x="98.8088%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="98.6389%" y="469" width="0.1601%" height="15" fill="rgb(209,196,21)" fg:x="1232" fg:w="2"/><text x="98.8889%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.6389%" y="453" width="0.1601%" height="15" fill="rgb(252,197,1)" fg:x="1232" fg:w="2"/><text x="98.8889%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.7190%" y="437" width="0.0801%" height="15" fill="rgb(229,42,46)" fg:x="1233" fg:w="1"/><text x="98.9690%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.7990%" y="389" width="0.1601%" height="15" fill="rgb(219,85,8)" fg:x="1234" fg:w="2"/><text x="99.0490%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8791%" y="373" width="0.0801%" height="15" fill="rgb(223,185,14)" fg:x="1235" fg:w="1"/><text x="99.1291%" y="383.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="98.7990%" y="469" width="0.2402%" height="15" fill="rgb(217,196,18)" fg:x="1234" fg:w="3"/><text x="99.0490%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.7990%" y="453" width="0.2402%" height="15" fill="rgb(220,122,37)" fg:x="1234" fg:w="3"/><text x="99.0490%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="98.7990%" y="437" width="0.2402%" height="15" fill="rgb(236,135,33)" fg:x="1234" fg:w="3"/><text x="99.0490%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="98.7990%" y="421" width="0.2402%" height="15" fill="rgb(222,86,54)" fg:x="1234" fg:w="3"/><text x="99.0490%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.7990%" y="405" width="0.2402%" height="15" fill="rgb(227,42,22)" fg:x="1234" fg:w="3"/><text x="99.0490%" y="415.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="98.9592%" y="389" width="0.0801%" height="15" fill="rgb(243,101,27)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.9592%" y="373" width="0.0801%" height="15" fill="rgb(229,100,8)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9592%" y="357" width="0.0801%" height="15" fill="rgb(252,68,10)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9592%" y="341" width="0.0801%" height="15" fill="rgb(219,19,31)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9592%" y="325" width="0.0801%" height="15" fill="rgb(246,150,44)" fg:x="1236" fg:w="1"/><text x="99.2092%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.1193%" y="421" width="0.1601%" height="15" fill="rgb(211,14,39)" fg:x="1238" fg:w="2"/><text x="99.3693%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.1994%" y="405" width="0.0801%" height="15" fill="rgb(221,98,29)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.1994%" y="389" width="0.0801%" height="15" fill="rgb(221,70,26)" fg:x="1239" fg:w="1"/><text x="99.4494%" y="399.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="99.2794%" y="421" width="0.3203%" height="15" fill="rgb(236,146,30)" fg:x="1240" fg:w="4"/><text x="99.5294%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="99.2794%" y="405" width="0.3203%" height="15" fill="rgb(226,94,34)" fg:x="1240" fg:w="4"/><text x="99.5294%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="99.2794%" y="389" width="0.3203%" height="15" fill="rgb(248,132,21)" fg:x="1240" fg:w="4"/><text x="99.5294%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.4396%" y="373" width="0.1601%" height="15" fill="rgb(245,43,50)" fg:x="1242" fg:w="2"/><text x="99.6896%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5196%" y="357" width="0.0801%" height="15" fill="rgb(245,132,31)" fg:x="1243" fg:w="1"/><text x="99.7696%" y="367.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (51 samples, 4.08%)</title><rect x="95.6765%" y="533" width="4.0833%" height="15" fill="rgb(230,171,4)" fg:x="1195" fg:w="51"/><text x="95.9265%" y="543.50">&lt;rpc..</text></g><g><title>kernel::model::EntityPtr::to_json_value (18 samples, 1.44%)</title><rect x="98.3187%" y="517" width="1.4412%" height="15" fill="rgb(235,6,45)" fg:x="1228" fg:w="18"/><text x="98.5687%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="98.3187%" y="501" width="1.4412%" height="15" fill="rgb(220,80,28)" fg:x="1228" fg:w="18"/><text x="98.5687%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="98.3187%" y="485" width="1.4412%" height="15" fill="rgb(242,171,9)" fg:x="1228" fg:w="18"/><text x="98.5687%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="99.0392%" y="469" width="0.7206%" height="15" fill="rgb(214,135,29)" fg:x="1237" fg:w="9"/><text x="99.2892%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (9 samples, 0.72%)</title><rect x="99.0392%" y="453" width="0.7206%" height="15" fill="rgb(221,229,16)" fg:x="1237" fg:w="9"/><text x="99.2892%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="99.0392%" y="437" width="0.7206%" height="15" fill="rgb(253,59,46)" fg:x="1237" fg:w="9"/><text x="99.2892%" y="447.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="99.5997%" y="421" width="0.1601%" height="15" fill="rgb(250,147,20)" fg:x="1244" fg:w="2"/><text x="99.8497%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="99.5997%" y="405" width="0.1601%" height="15" fill="rgb(236,64,48)" fg:x="1244" fg:w="2"/><text x="99.8497%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="99.5997%" y="389" width="0.1601%" height="15" fill="rgb(240,37,42)" fg:x="1244" fg:w="2"/><text x="99.8497%" y="399.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (108 samples, 8.65%)</title><rect x="91.1930%" y="613" width="8.6469%" height="15" fill="rgb(220,41,50)" fg:x="1139" fg:w="108"/><text x="91.4430%" y="623.50">&lt;plugins_rpc..</text></g><g><title>core::iter::adapters::try_process (103 samples, 8.25%)</title><rect x="91.5933%" y="597" width="8.2466%" height="15" fill="rgb(216,51,14)" fg:x="1144" fg:w="103"/><text x="91.8433%" y="607.50">core::iter:..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (58 samples, 4.64%)</title><rect x="95.1962%" y="581" width="4.6437%" height="15" fill="rgb(215,83,10)" fg:x="1189" fg:w="58"/><text x="95.4462%" y="591.50">alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 4.64%)</title><rect x="95.1962%" y="565" width="4.6437%" height="15" fill="rgb(206,144,17)" fg:x="1189" fg:w="58"/><text x="95.4462%" y="575.50">&lt;core..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (58 samples, 4.64%)</title><rect x="95.1962%" y="549" width="4.6437%" height="15" fill="rgb(219,196,37)" fg:x="1189" fg:w="58"/><text x="95.4462%" y="559.50">plugi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.7598%" y="533" width="0.0801%" height="15" fill="rgb(226,135,26)" fg:x="1246" fg:w="1"/><text x="100.0098%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.8399%" y="613" width="0.0801%" height="15" fill="rgb(237,195,40)" fg:x="1247" fg:w="1"/><text x="100.0899%" y="623.50"></text></g><g><title>all (1,249 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(228,182,42)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1071.50"></text></g><g><title>simple-a8fb0ec0 (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(224,135,50)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1055.50">simple-a8fb0ec0</text></g><g><title>_start (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(236,215,34)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1039.50">_start</text></g><g><title>__libc_start_main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(244,213,27)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1023.50">__libc_start_main</text></g><g><title>main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(233,37,53)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="1007.50">main</text></g><g><title>std::rt::lang_start_internal (1,249 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(222,132,14)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,202,29)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(226,157,39)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(235,213,2)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(250,121,2)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="927.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,249 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(206,192,33)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,249 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(240,161,6)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,249 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(246,53,30)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="879.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,249 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(219,123,43)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="863.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,249 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(236,53,49)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="847.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,249 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(241,156,1)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,249 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(209,73,26)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="815.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,249 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(206,114,3)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="799.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,249 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(230,214,9)" fg:x="0" fg:w="1249"/><text x="0.2500%" y="783.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (277 samples, 22.18%)</title><rect x="77.8223%" y="757" width="22.1777%" height="15" fill="rgb(240,184,46)" fg:x="972" fg:w="277"/><text x="78.0723%" y="767.50">&lt;criterion::routine::Function&lt;M,F,T..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (277 samples, 22.18%)</title><rect x="77.8223%" y="741" width="22.1777%" height="15" fill="rgb(242,169,54)" fg:x="972" fg:w="277"/><text x="78.0723%" y="751.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (277 samples, 22.18%)</title><rect x="77.8223%" y="725" width="22.1777%" height="15" fill="rgb(207,168,50)" fg:x="972" fg:w="277"/><text x="78.0723%" y="735.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (165 samples, 13.21%)</title><rect x="86.7894%" y="709" width="13.2106%" height="15" fill="rgb(240,114,2)" fg:x="1084" fg:w="165"/><text x="87.0394%" y="719.50">engine::session::Ses..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (165 samples, 13.21%)</title><rect x="86.7894%" y="693" width="13.2106%" height="15" fill="rgb(211,17,40)" fg:x="1084" fg:w="165"/><text x="87.0394%" y="703.50">engine::perform::Sta..</text></g><g><title>engine::perform::StandardPerformer::perform (160 samples, 12.81%)</title><rect x="87.1898%" y="677" width="12.8102%" height="15" fill="rgb(235,97,36)" fg:x="1089" fg:w="160"/><text x="87.4398%" y="687.50">engine::perform::St..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (126 samples, 10.09%)</title><rect x="89.9119%" y="661" width="10.0881%" height="15" fill="rgb(208,164,11)" fg:x="1123" fg:w="126"/><text x="90.1619%" y="671.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (125 samples, 10.01%)</title><rect x="89.9920%" y="645" width="10.0080%" height="15" fill="rgb(242,11,17)" fg:x="1124" fg:w="125"/><text x="90.2420%" y="655.50">&lt;plugins_dynli..</text></g><g><title>plugins_rpc::querying::have_surroundings (111 samples, 8.89%)</title><rect x="91.1129%" y="629" width="8.8871%" height="15" fill="rgb(215,86,33)" fg:x="1138" fg:w="111"/><text x="91.3629%" y="639.50">plugins_rpc::..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.9199%" y="613" width="0.0801%" height="15" fill="rgb(245,185,28)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="623.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="99.9199%" y="597" width="0.0801%" height="15" fill="rgb(231,89,42)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="607.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="99.9199%" y="581" width="0.0801%" height="15" fill="rgb(210,18,47)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.9199%" y="565" width="0.0801%" height="15" fill="rgb(214,84,8)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.9199%" y="549" width="0.0801%" height="15" fill="rgb(214,222,23)" fg:x="1248" fg:w="1"/><text x="100.1699%" y="559.50"></text></g></svg></svg>