<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1253"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.0000%" y="693" width="0.1596%" height="15" fill="rgb(218,86,23)" fg:x="0" fg:w="2"/><text x="0.2500%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="0.0000%" y="725" width="0.2394%" height="15" fill="rgb(206,62,27)" fg:x="0" fg:w="3"/><text x="0.2500%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.0000%" y="709" width="0.2394%" height="15" fill="rgb(249,174,0)" fg:x="0" fg:w="3"/><text x="0.2500%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="0.1596%" y="693" width="0.0798%" height="15" fill="rgb(246,67,27)" fg:x="2" fg:w="1"/><text x="0.4096%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.1596%" y="677" width="0.0798%" height="15" fill="rgb(250,195,30)" fg:x="2" fg:w="1"/><text x="0.4096%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.6385%" y="645" width="0.1596%" height="15" fill="rgb(251,171,50)" fg:x="8" fg:w="2"/><text x="0.8885%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="0.7981%" y="645" width="0.2394%" height="15" fill="rgb(236,196,10)" fg:x="10" fg:w="3"/><text x="1.0481%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.7981%" y="629" width="0.2394%" height="15" fill="rgb(249,228,52)" fg:x="10" fg:w="3"/><text x="1.0481%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.0375%" y="629" width="0.0798%" height="15" fill="rgb(219,60,51)" fg:x="13" fg:w="1"/><text x="1.2875%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0375%" y="613" width="0.0798%" height="15" fill="rgb(240,198,24)" fg:x="13" fg:w="1"/><text x="1.2875%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1173%" y="629" width="0.0798%" height="15" fill="rgb(240,192,40)" fg:x="14" fg:w="1"/><text x="1.3673%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1971%" y="629" width="0.2394%" height="15" fill="rgb(219,118,5)" fg:x="15" fg:w="3"/><text x="1.4471%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3567%" y="613" width="0.0798%" height="15" fill="rgb(205,202,34)" fg:x="17" fg:w="1"/><text x="1.6067%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5164%" y="613" width="0.1596%" height="15" fill="rgb(234,153,26)" fg:x="19" fg:w="2"/><text x="1.7664%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="0.3990%" y="661" width="1.3567%" height="15" fill="rgb(229,26,29)" fg:x="5" fg:w="17"/><text x="0.6490%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.0375%" y="645" width="0.7183%" height="15" fill="rgb(237,115,21)" fg:x="13" fg:w="9"/><text x="1.2875%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="1.4366%" y="629" width="0.3192%" height="15" fill="rgb(252,144,15)" fg:x="18" fg:w="4"/><text x="1.6866%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.6760%" y="613" width="0.0798%" height="15" fill="rgb(232,26,13)" fg:x="21" fg:w="1"/><text x="1.9260%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.52%)</title><rect x="0.3192%" y="693" width="1.5164%" height="15" fill="rgb(206,44,19)" fg:x="4" fg:w="19"/><text x="0.5692%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.44%)</title><rect x="0.3990%" y="677" width="1.4366%" height="15" fill="rgb(249,159,2)" fg:x="5" fg:w="18"/><text x="0.6490%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7558%" y="661" width="0.0798%" height="15" fill="rgb(231,5,32)" fg:x="22" fg:w="1"/><text x="2.0058%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.68%)</title><rect x="0.3192%" y="709" width="1.6760%" height="15" fill="rgb(249,210,18)" fg:x="4" fg:w="21"/><text x="0.5692%" y="719.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.8356%" y="693" width="0.1596%" height="15" fill="rgb(215,223,36)" fg:x="23" fg:w="2"/><text x="2.0856%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.08%)</title><rect x="0.0000%" y="741" width="2.0750%" height="15" fill="rgb(245,185,20)" fg:x="0" fg:w="26"/><text x="0.2500%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (23 samples, 1.84%)</title><rect x="0.2394%" y="725" width="1.8356%" height="15" fill="rgb(206,224,11)" fg:x="3" fg:w="23"/><text x="0.4894%" y="735.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9952%" y="709" width="0.0798%" height="15" fill="rgb(248,73,42)" fg:x="25" fg:w="1"/><text x="2.2452%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.0750%" y="709" width="0.0798%" height="15" fill="rgb(219,149,31)" fg:x="26" fg:w="1"/><text x="2.3250%" y="719.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="2.1548%" y="693" width="0.0798%" height="15" fill="rgb(243,104,17)" fg:x="27" fg:w="1"/><text x="2.4048%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.3144%" y="677" width="0.0798%" height="15" fill="rgb(244,117,33)" fg:x="29" fg:w="1"/><text x="2.5644%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.3144%" y="661" width="0.0798%" height="15" fill="rgb(251,25,47)" fg:x="29" fg:w="1"/><text x="2.5644%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.3144%" y="645" width="0.0798%" height="15" fill="rgb(249,70,13)" fg:x="29" fg:w="1"/><text x="2.5644%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.4741%" y="645" width="0.0798%" height="15" fill="rgb(217,133,18)" fg:x="31" fg:w="1"/><text x="2.7241%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="2.4741%" y="629" width="0.0798%" height="15" fill="rgb(248,97,28)" fg:x="31" fg:w="1"/><text x="2.7241%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.4741%" y="613" width="0.0798%" height="15" fill="rgb(237,193,4)" fg:x="31" fg:w="1"/><text x="2.7241%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.4741%" y="597" width="0.0798%" height="15" fill="rgb(247,198,45)" fg:x="31" fg:w="1"/><text x="2.7241%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.4741%" y="581" width="0.0798%" height="15" fill="rgb(245,2,20)" fg:x="31" fg:w="1"/><text x="2.7241%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.4741%" y="565" width="0.0798%" height="15" fill="rgb(210,71,36)" fg:x="31" fg:w="1"/><text x="2.7241%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.4741%" y="549" width="0.0798%" height="15" fill="rgb(238,114,30)" fg:x="31" fg:w="1"/><text x="2.7241%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.4741%" y="533" width="0.0798%" height="15" fill="rgb(241,200,2)" fg:x="31" fg:w="1"/><text x="2.7241%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.4741%" y="517" width="0.0798%" height="15" fill="rgb(232,106,18)" fg:x="31" fg:w="1"/><text x="2.7241%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="2.4741%" y="501" width="0.0798%" height="15" fill="rgb(211,141,18)" fg:x="31" fg:w="1"/><text x="2.7241%" y="511.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.5539%" y="629" width="0.0798%" height="15" fill="rgb(224,9,9)" fg:x="32" fg:w="1"/><text x="2.8039%" y="639.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="2.5539%" y="613" width="0.0798%" height="15" fill="rgb(249,137,46)" fg:x="32" fg:w="1"/><text x="2.8039%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="2.5539%" y="597" width="0.0798%" height="15" fill="rgb(236,44,45)" fg:x="32" fg:w="1"/><text x="2.8039%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="2.5539%" y="581" width="0.0798%" height="15" fill="rgb(205,68,40)" fg:x="32" fg:w="1"/><text x="2.8039%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="2.5539%" y="565" width="0.0798%" height="15" fill="rgb(214,198,49)" fg:x="32" fg:w="1"/><text x="2.8039%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="2.5539%" y="549" width="0.0798%" height="15" fill="rgb(226,140,45)" fg:x="32" fg:w="1"/><text x="2.8039%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="2.5539%" y="533" width="0.0798%" height="15" fill="rgb(209,109,20)" fg:x="32" fg:w="1"/><text x="2.8039%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="2.5539%" y="517" width="0.0798%" height="15" fill="rgb(217,33,46)" fg:x="32" fg:w="1"/><text x="2.8039%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="2.5539%" y="501" width="0.0798%" height="15" fill="rgb(232,150,33)" fg:x="32" fg:w="1"/><text x="2.8039%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="2.5539%" y="485" width="0.0798%" height="15" fill="rgb(233,76,25)" fg:x="32" fg:w="1"/><text x="2.8039%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="2.5539%" y="469" width="0.0798%" height="15" fill="rgb(254,219,23)" fg:x="32" fg:w="1"/><text x="2.8039%" y="479.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="2.6337%" y="613" width="0.2394%" height="15" fill="rgb(233,108,4)" fg:x="33" fg:w="3"/><text x="2.8837%" y="623.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="2.7933%" y="597" width="0.0798%" height="15" fill="rgb(229,98,6)" fg:x="35" fg:w="1"/><text x="3.0433%" y="607.50"></text></g><g><title>dlerror (4 samples, 0.32%)</title><rect x="2.6337%" y="629" width="0.3192%" height="15" fill="rgb(217,40,27)" fg:x="33" fg:w="4"/><text x="2.8837%" y="639.50"></text></g><g><title>__tfind (1 samples, 0.08%)</title><rect x="2.8731%" y="613" width="0.0798%" height="15" fill="rgb(221,35,43)" fg:x="36" fg:w="1"/><text x="3.1231%" y="623.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="3.1923%" y="581" width="0.0798%" height="15" fill="rgb(212,107,11)" fg:x="40" fg:w="1"/><text x="3.4423%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.52%)</title><rect x="2.3943%" y="661" width="1.5164%" height="15" fill="rgb(245,42,44)" fg:x="30" fg:w="19"/><text x="2.6443%" y="671.50"></text></g><g><title>libloading::safe::Library::new (17 samples, 1.36%)</title><rect x="2.5539%" y="645" width="1.3567%" height="15" fill="rgb(209,31,12)" fg:x="32" fg:w="17"/><text x="2.8039%" y="655.50"></text></g><g><title>dlopen (12 samples, 0.96%)</title><rect x="2.9529%" y="629" width="0.9577%" height="15" fill="rgb(210,228,54)" fg:x="37" fg:w="12"/><text x="3.2029%" y="639.50"></text></g><g><title>_dl_catch_error (11 samples, 0.88%)</title><rect x="3.0327%" y="613" width="0.8779%" height="15" fill="rgb(241,19,33)" fg:x="38" fg:w="11"/><text x="3.2827%" y="623.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.88%)</title><rect x="3.0327%" y="597" width="0.8779%" height="15" fill="rgb(229,51,27)" fg:x="38" fg:w="11"/><text x="3.2827%" y="607.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="3.2721%" y="581" width="0.6385%" height="15" fill="rgb(214,167,49)" fg:x="41" fg:w="8"/><text x="3.5221%" y="591.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="3.2721%" y="565" width="0.6385%" height="15" fill="rgb(248,140,47)" fg:x="41" fg:w="8"/><text x="3.5221%" y="575.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="3.8308%" y="549" width="0.0798%" height="15" fill="rgb(228,6,51)" fg:x="48" fg:w="1"/><text x="4.0808%" y="559.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="3.8308%" y="533" width="0.0798%" height="15" fill="rgb(242,44,53)" fg:x="48" fg:w="1"/><text x="4.0808%" y="543.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (20 samples, 1.60%)</title><rect x="2.3943%" y="677" width="1.5962%" height="15" fill="rgb(249,90,50)" fg:x="30" fg:w="20"/><text x="2.6443%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.9106%" y="661" width="0.0798%" height="15" fill="rgb(222,84,19)" fg:x="49" fg:w="1"/><text x="4.1606%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.9106%" y="645" width="0.0798%" height="15" fill="rgb(214,140,12)" fg:x="49" fg:w="1"/><text x="4.1606%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.9904%" y="661" width="0.0798%" height="15" fill="rgb(210,20,43)" fg:x="50" fg:w="1"/><text x="4.2404%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.9904%" y="645" width="0.0798%" height="15" fill="rgb(243,1,40)" fg:x="50" fg:w="1"/><text x="4.2404%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.9904%" y="629" width="0.0798%" height="15" fill="rgb(224,102,26)" fg:x="50" fg:w="1"/><text x="4.2404%" y="639.50"></text></g><g><title>engine::session::Session::initialize (25 samples, 2.00%)</title><rect x="2.2346%" y="693" width="1.9952%" height="15" fill="rgb(221,179,1)" fg:x="28" fg:w="25"/><text x="2.4846%" y="703.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="3.9904%" y="677" width="0.2394%" height="15" fill="rgb(216,209,47)" fg:x="50" fg:w="3"/><text x="4.2404%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.0702%" y="661" width="0.1596%" height="15" fill="rgb(251,135,9)" fg:x="51" fg:w="2"/><text x="4.3202%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.0702%" y="645" width="0.1596%" height="15" fill="rgb(242,9,36)" fg:x="51" fg:w="2"/><text x="4.3202%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.0702%" y="629" width="0.1596%" height="15" fill="rgb(249,60,37)" fg:x="51" fg:w="2"/><text x="4.3202%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.1500%" y="613" width="0.0798%" height="15" fill="rgb(230,66,45)" fg:x="52" fg:w="1"/><text x="4.4000%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.1500%" y="597" width="0.0798%" height="15" fill="rgb(216,1,47)" fg:x="52" fg:w="1"/><text x="4.4000%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (28 samples, 2.23%)</title><rect x="2.0750%" y="741" width="2.2346%" height="15" fill="rgb(235,8,23)" fg:x="26" fg:w="28"/><text x="2.3250%" y="751.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (28 samples, 2.23%)</title><rect x="2.0750%" y="725" width="2.2346%" height="15" fill="rgb(225,136,11)" fg:x="26" fg:w="28"/><text x="2.3250%" y="735.50">e..</text></g><g><title>engine::session::Session::new (27 samples, 2.15%)</title><rect x="2.1548%" y="709" width="2.1548%" height="15" fill="rgb(228,63,44)" fg:x="27" fg:w="27"/><text x="2.4048%" y="719.50">e..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.2298%" y="693" width="0.0798%" height="15" fill="rgb(240,43,52)" fg:x="53" fg:w="1"/><text x="4.4798%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="4.3097%" y="725" width="0.0798%" height="15" fill="rgb(217,167,36)" fg:x="54" fg:w="1"/><text x="4.5597%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.3097%" y="709" width="0.0798%" height="15" fill="rgb(250,19,6)" fg:x="54" fg:w="1"/><text x="4.5597%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3097%" y="693" width="0.0798%" height="15" fill="rgb(236,60,51)" fg:x="54" fg:w="1"/><text x="4.5597%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="4.3895%" y="709" width="0.1596%" height="15" fill="rgb(222,217,20)" fg:x="55" fg:w="2"/><text x="4.6395%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4693%" y="693" width="0.0798%" height="15" fill="rgb(242,65,52)" fg:x="56" fg:w="1"/><text x="4.7193%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.4693%" y="677" width="0.0798%" height="15" fill="rgb(217,5,41)" fg:x="56" fg:w="1"/><text x="4.7193%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.4693%" y="661" width="0.0798%" height="15" fill="rgb(223,208,53)" fg:x="56" fg:w="1"/><text x="4.7193%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.4693%" y="645" width="0.0798%" height="15" fill="rgb(221,104,30)" fg:x="56" fg:w="1"/><text x="4.7193%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.4693%" y="629" width="0.0798%" height="15" fill="rgb(230,210,42)" fg:x="56" fg:w="1"/><text x="4.7193%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.4693%" y="613" width="0.0798%" height="15" fill="rgb(206,205,27)" fg:x="56" fg:w="1"/><text x="4.7193%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.4693%" y="597" width="0.0798%" height="15" fill="rgb(233,114,38)" fg:x="56" fg:w="1"/><text x="4.7193%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.4693%" y="581" width="0.0798%" height="15" fill="rgb(216,174,36)" fg:x="56" fg:w="1"/><text x="4.7193%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.4693%" y="565" width="0.0798%" height="15" fill="rgb(211,30,9)" fg:x="56" fg:w="1"/><text x="4.7193%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.4693%" y="549" width="0.0798%" height="15" fill="rgb(216,8,21)" fg:x="56" fg:w="1"/><text x="4.7193%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.4693%" y="533" width="0.0798%" height="15" fill="rgb(237,209,39)" fg:x="56" fg:w="1"/><text x="4.7193%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="4.5491%" y="645" width="0.0798%" height="15" fill="rgb(235,111,47)" fg:x="57" fg:w="1"/><text x="4.7991%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="4.5491%" y="629" width="0.0798%" height="15" fill="rgb(216,139,9)" fg:x="57" fg:w="1"/><text x="4.7991%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="4.5491%" y="613" width="0.0798%" height="15" fill="rgb(248,185,4)" fg:x="57" fg:w="1"/><text x="4.7991%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.6289%" y="613" width="0.2394%" height="15" fill="rgb(239,185,25)" fg:x="58" fg:w="3"/><text x="4.8789%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.6289%" y="597" width="0.2394%" height="15" fill="rgb(233,207,8)" fg:x="58" fg:w="3"/><text x="4.8789%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="4.6289%" y="581" width="0.2394%" height="15" fill="rgb(249,220,24)" fg:x="58" fg:w="3"/><text x="4.8789%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.7885%" y="565" width="0.0798%" height="15" fill="rgb(221,50,14)" fg:x="60" fg:w="1"/><text x="5.0385%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="4.6289%" y="629" width="0.3990%" height="15" fill="rgb(227,79,42)" fg:x="58" fg:w="5"/><text x="4.8789%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.8683%" y="613" width="0.1596%" height="15" fill="rgb(228,218,49)" fg:x="61" fg:w="2"/><text x="5.1183%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.9481%" y="597" width="0.0798%" height="15" fill="rgb(249,18,15)" fg:x="62" fg:w="1"/><text x="5.1981%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9481%" y="581" width="0.0798%" height="15" fill="rgb(212,84,27)" fg:x="62" fg:w="1"/><text x="5.1981%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.1077%" y="613" width="0.1596%" height="15" fill="rgb(207,83,24)" fg:x="64" fg:w="2"/><text x="5.3577%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1875%" y="597" width="0.0798%" height="15" fill="rgb(219,61,7)" fg:x="65" fg:w="1"/><text x="5.4375%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.2674%" y="581" width="0.0798%" height="15" fill="rgb(211,43,29)" fg:x="66" fg:w="1"/><text x="5.5174%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.2674%" y="565" width="0.0798%" height="15" fill="rgb(243,15,23)" fg:x="66" fg:w="1"/><text x="5.5174%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.2674%" y="549" width="0.0798%" height="15" fill="rgb(217,52,28)" fg:x="66" fg:w="1"/><text x="5.5174%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2674%" y="533" width="0.0798%" height="15" fill="rgb(210,35,6)" fg:x="66" fg:w="1"/><text x="5.5174%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2674%" y="517" width="0.0798%" height="15" fill="rgb(237,187,28)" fg:x="66" fg:w="1"/><text x="5.5174%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.2674%" y="597" width="0.1596%" height="15" fill="rgb(231,136,24)" fg:x="66" fg:w="2"/><text x="5.5174%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3472%" y="581" width="0.0798%" height="15" fill="rgb(205,176,52)" fg:x="67" fg:w="1"/><text x="5.5972%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.3472%" y="565" width="0.0798%" height="15" fill="rgb(218,65,12)" fg:x="67" fg:w="1"/><text x="5.5972%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.4270%" y="597" width="0.1596%" height="15" fill="rgb(234,101,21)" fg:x="68" fg:w="2"/><text x="5.6770%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.4270%" y="581" width="0.1596%" height="15" fill="rgb(206,13,20)" fg:x="68" fg:w="2"/><text x="5.6770%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.4270%" y="565" width="0.1596%" height="15" fill="rgb(236,89,44)" fg:x="68" fg:w="2"/><text x="5.6770%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.4270%" y="549" width="0.1596%" height="15" fill="rgb(225,52,17)" fg:x="68" fg:w="2"/><text x="5.6770%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.4270%" y="533" width="0.1596%" height="15" fill="rgb(214,27,25)" fg:x="68" fg:w="2"/><text x="5.6770%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.4270%" y="517" width="0.1596%" height="15" fill="rgb(240,141,35)" fg:x="68" fg:w="2"/><text x="5.6770%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.4270%" y="501" width="0.1596%" height="15" fill="rgb(216,126,3)" fg:x="68" fg:w="2"/><text x="5.6770%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.8260%" y="565" width="0.0798%" height="15" fill="rgb(249,196,23)" fg:x="73" fg:w="1"/><text x="6.0760%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.8260%" y="549" width="0.0798%" height="15" fill="rgb(215,185,43)" fg:x="73" fg:w="1"/><text x="6.0760%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="5.2674%" y="613" width="0.7183%" height="15" fill="rgb(208,194,36)" fg:x="66" fg:w="9"/><text x="5.5174%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="5.5866%" y="597" width="0.3990%" height="15" fill="rgb(245,182,12)" fg:x="70" fg:w="5"/><text x="5.8366%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="5.6664%" y="581" width="0.3192%" height="15" fill="rgb(244,222,52)" fg:x="71" fg:w="4"/><text x="5.9164%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9058%" y="565" width="0.0798%" height="15" fill="rgb(236,222,51)" fg:x="74" fg:w="1"/><text x="6.1558%" y="575.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="6.1453%" y="533" width="0.0798%" height="15" fill="rgb(254,71,22)" fg:x="77" fg:w="1"/><text x="6.3953%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.28%)</title><rect x="5.0279%" y="629" width="1.2769%" height="15" fill="rgb(250,104,15)" fg:x="63" fg:w="16"/><text x="5.2779%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="5.9856%" y="613" width="0.3192%" height="15" fill="rgb(229,223,46)" fg:x="75" fg:w="4"/><text x="6.2356%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="5.9856%" y="597" width="0.3192%" height="15" fill="rgb(209,129,18)" fg:x="75" fg:w="4"/><text x="6.2356%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="5.9856%" y="581" width="0.3192%" height="15" fill="rgb(224,160,1)" fg:x="75" fg:w="4"/><text x="6.2356%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.0654%" y="565" width="0.2394%" height="15" fill="rgb(237,112,21)" fg:x="76" fg:w="3"/><text x="6.3154%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.0654%" y="549" width="0.2394%" height="15" fill="rgb(215,198,53)" fg:x="76" fg:w="3"/><text x="6.3154%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.2251%" y="533" width="0.0798%" height="15" fill="rgb(218,227,35)" fg:x="78" fg:w="1"/><text x="6.4751%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (23 samples, 1.84%)</title><rect x="4.6289%" y="645" width="1.8356%" height="15" fill="rgb(232,121,22)" fg:x="58" fg:w="23"/><text x="4.8789%" y="655.50">&lt;..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.3049%" y="629" width="0.1596%" height="15" fill="rgb(235,52,54)" fg:x="79" fg:w="2"/><text x="6.5549%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.3049%" y="613" width="0.1596%" height="15" fill="rgb(219,21,44)" fg:x="79" fg:w="2"/><text x="6.5549%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.3847%" y="597" width="0.0798%" height="15" fill="rgb(221,51,43)" fg:x="80" fg:w="1"/><text x="6.6347%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.3847%" y="581" width="0.0798%" height="15" fill="rgb(225,77,42)" fg:x="80" fg:w="1"/><text x="6.6347%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.3847%" y="565" width="0.0798%" height="15" fill="rgb(214,117,53)" fg:x="80" fg:w="1"/><text x="6.6347%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.3847%" y="549" width="0.0798%" height="15" fill="rgb(218,227,27)" fg:x="80" fg:w="1"/><text x="6.6347%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.4645%" y="597" width="0.0798%" height="15" fill="rgb(223,214,36)" fg:x="81" fg:w="1"/><text x="6.7145%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="6.5443%" y="597" width="0.1596%" height="15" fill="rgb(235,21,7)" fg:x="82" fg:w="2"/><text x="6.7943%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.6241%" y="581" width="0.0798%" height="15" fill="rgb(244,216,4)" fg:x="83" fg:w="1"/><text x="6.8741%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="6.7039%" y="581" width="0.1596%" height="15" fill="rgb(249,197,24)" fg:x="84" fg:w="2"/><text x="6.9539%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7837%" y="565" width="0.0798%" height="15" fill="rgb(222,169,49)" fg:x="85" fg:w="1"/><text x="7.0337%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="6.4645%" y="645" width="0.5587%" height="15" fill="rgb(207,137,33)" fg:x="81" fg:w="7"/><text x="6.7145%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="6.4645%" y="629" width="0.5587%" height="15" fill="rgb(219,180,40)" fg:x="81" fg:w="7"/><text x="6.7145%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="6.4645%" y="613" width="0.5587%" height="15" fill="rgb(250,163,42)" fg:x="81" fg:w="7"/><text x="6.7145%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="6.7039%" y="597" width="0.3192%" height="15" fill="rgb(239,163,0)" fg:x="84" fg:w="4"/><text x="6.9539%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="6.8635%" y="581" width="0.1596%" height="15" fill="rgb(252,38,28)" fg:x="86" fg:w="2"/><text x="7.1135%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.9433%" y="565" width="0.0798%" height="15" fill="rgb(254,203,26)" fg:x="87" fg:w="1"/><text x="7.1933%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.9433%" y="549" width="0.0798%" height="15" fill="rgb(209,129,32)" fg:x="87" fg:w="1"/><text x="7.1933%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.1030%" y="597" width="0.1596%" height="15" fill="rgb(207,177,52)" fg:x="89" fg:w="2"/><text x="7.3530%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="7.2626%" y="597" width="0.0798%" height="15" fill="rgb(230,209,36)" fg:x="91" fg:w="1"/><text x="7.5126%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3424%" y="597" width="0.0798%" height="15" fill="rgb(238,131,0)" fg:x="92" fg:w="1"/><text x="7.5924%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3424%" y="581" width="0.0798%" height="15" fill="rgb(218,61,31)" fg:x="92" fg:w="1"/><text x="7.5924%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3424%" y="565" width="0.0798%" height="15" fill="rgb(232,6,53)" fg:x="92" fg:w="1"/><text x="7.5924%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.6616%" y="549" width="0.1596%" height="15" fill="rgb(254,100,32)" fg:x="96" fg:w="2"/><text x="7.9116%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.6616%" y="533" width="0.1596%" height="15" fill="rgb(229,194,49)" fg:x="96" fg:w="2"/><text x="7.9116%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="7.6616%" y="517" width="0.1596%" height="15" fill="rgb(206,208,39)" fg:x="96" fg:w="2"/><text x="7.9116%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.8212%" y="517" width="0.0798%" height="15" fill="rgb(246,226,14)" fg:x="98" fg:w="1"/><text x="8.0712%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.8212%" y="501" width="0.0798%" height="15" fill="rgb(226,48,32)" fg:x="98" fg:w="1"/><text x="8.0712%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.9808%" y="501" width="0.0798%" height="15" fill="rgb(252,43,54)" fg:x="100" fg:w="1"/><text x="8.2308%" y="511.50"></text></g><g><title>engine::session::Session::flush (48 samples, 3.83%)</title><rect x="4.3895%" y="725" width="3.8308%" height="15" fill="rgb(207,124,0)" fg:x="55" fg:w="48"/><text x="4.6395%" y="735.50">engi..</text></g><g><title>engine::session::state::State::close (46 samples, 3.67%)</title><rect x="4.5491%" y="709" width="3.6712%" height="15" fill="rgb(248,188,30)" fg:x="57" fg:w="46"/><text x="4.7991%" y="719.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (46 samples, 3.67%)</title><rect x="4.5491%" y="693" width="3.6712%" height="15" fill="rgb(232,14,43)" fg:x="57" fg:w="46"/><text x="4.7991%" y="703.50">engi..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (46 samples, 3.67%)</title><rect x="4.5491%" y="677" width="3.6712%" height="15" fill="rgb(218,52,29)" fg:x="57" fg:w="46"/><text x="4.7991%" y="687.50">engi..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (46 samples, 3.67%)</title><rect x="4.5491%" y="661" width="3.6712%" height="15" fill="rgb(218,176,50)" fg:x="57" fg:w="46"/><text x="4.7991%" y="671.50">engi..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="7.0231%" y="645" width="1.1971%" height="15" fill="rgb(213,112,0)" fg:x="88" fg:w="15"/><text x="7.2731%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.20%)</title><rect x="7.0231%" y="629" width="1.1971%" height="15" fill="rgb(244,216,8)" fg:x="88" fg:w="15"/><text x="7.2731%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.20%)</title><rect x="7.0231%" y="613" width="1.1971%" height="15" fill="rgb(224,148,53)" fg:x="88" fg:w="15"/><text x="7.2731%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="7.4222%" y="597" width="0.7981%" height="15" fill="rgb(241,133,40)" fg:x="93" fg:w="10"/><text x="7.6722%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="7.5020%" y="581" width="0.7183%" height="15" fill="rgb(232,17,44)" fg:x="94" fg:w="9"/><text x="7.7520%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="7.6616%" y="565" width="0.5587%" height="15" fill="rgb(213,32,25)" fg:x="96" fg:w="7"/><text x="7.9116%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="7.8212%" y="549" width="0.3990%" height="15" fill="rgb(249,115,27)" fg:x="98" fg:w="5"/><text x="8.0712%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="7.8212%" y="533" width="0.3990%" height="15" fill="rgb(241,50,1)" fg:x="98" fg:w="5"/><text x="8.0712%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="7.9010%" y="517" width="0.3192%" height="15" fill="rgb(244,175,40)" fg:x="99" fg:w="4"/><text x="8.1510%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.0607%" y="501" width="0.1596%" height="15" fill="rgb(230,94,34)" fg:x="101" fg:w="2"/><text x="8.3107%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3001%" y="629" width="0.0798%" height="15" fill="rgb(223,185,29)" fg:x="104" fg:w="1"/><text x="8.5501%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.3001%" y="613" width="0.0798%" height="15" fill="rgb(225,193,15)" fg:x="104" fg:w="1"/><text x="8.5501%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3001%" y="597" width="0.0798%" height="15" fill="rgb(252,121,38)" fg:x="104" fg:w="1"/><text x="8.5501%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="8.3001%" y="661" width="0.1596%" height="15" fill="rgb(232,44,12)" fg:x="104" fg:w="2"/><text x="8.5501%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.3001%" y="645" width="0.1596%" height="15" fill="rgb(226,45,54)" fg:x="104" fg:w="2"/><text x="8.5501%" y="655.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.3799%" y="629" width="0.0798%" height="15" fill="rgb(209,67,17)" fg:x="105" fg:w="1"/><text x="8.6299%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.3799%" y="613" width="0.0798%" height="15" fill="rgb(219,108,52)" fg:x="105" fg:w="1"/><text x="8.6299%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="8.3001%" y="677" width="0.2394%" height="15" fill="rgb(216,118,19)" fg:x="104" fg:w="3"/><text x="8.5501%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="8.4597%" y="661" width="0.0798%" height="15" fill="rgb(228,120,40)" fg:x="106" fg:w="1"/><text x="8.7097%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="8.4597%" y="645" width="0.0798%" height="15" fill="rgb(221,218,34)" fg:x="106" fg:w="1"/><text x="8.7097%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.4597%" y="629" width="0.0798%" height="15" fill="rgb(235,89,14)" fg:x="106" fg:w="1"/><text x="8.7097%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.4597%" y="613" width="0.0798%" height="15" fill="rgb(248,89,7)" fg:x="106" fg:w="1"/><text x="8.7097%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.5395%" y="661" width="0.0798%" height="15" fill="rgb(212,114,34)" fg:x="107" fg:w="1"/><text x="8.7895%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="8.5395%" y="645" width="0.0798%" height="15" fill="rgb(246,88,32)" fg:x="107" fg:w="1"/><text x="8.7895%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.5395%" y="629" width="0.0798%" height="15" fill="rgb(237,135,0)" fg:x="107" fg:w="1"/><text x="8.7895%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.5395%" y="613" width="0.0798%" height="15" fill="rgb(220,201,54)" fg:x="107" fg:w="1"/><text x="8.7895%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5395%" y="597" width="0.0798%" height="15" fill="rgb(210,142,36)" fg:x="107" fg:w="1"/><text x="8.7895%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.5395%" y="581" width="0.0798%" height="15" fill="rgb(247,189,26)" fg:x="107" fg:w="1"/><text x="8.7895%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.5395%" y="565" width="0.0798%" height="15" fill="rgb(223,89,24)" fg:x="107" fg:w="1"/><text x="8.7895%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.5395%" y="549" width="0.0798%" height="15" fill="rgb(205,90,19)" fg:x="107" fg:w="1"/><text x="8.7895%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="8.5395%" y="677" width="0.1596%" height="15" fill="rgb(234,57,40)" fg:x="107" fg:w="2"/><text x="8.7895%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="8.6193%" y="661" width="0.0798%" height="15" fill="rgb(213,109,10)" fg:x="108" fg:w="1"/><text x="8.8693%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6193%" y="645" width="0.0798%" height="15" fill="rgb(214,189,23)" fg:x="108" fg:w="1"/><text x="8.8693%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.6193%" y="629" width="0.0798%" height="15" fill="rgb(234,200,10)" fg:x="108" fg:w="1"/><text x="8.8693%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="8.6193%" y="613" width="0.0798%" height="15" fill="rgb(221,148,16)" fg:x="108" fg:w="1"/><text x="8.8693%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="8.6991%" y="629" width="0.0798%" height="15" fill="rgb(230,115,10)" fg:x="109" fg:w="1"/><text x="8.9491%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.6991%" y="613" width="0.0798%" height="15" fill="rgb(220,106,42)" fg:x="109" fg:w="1"/><text x="8.9491%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.6991%" y="597" width="0.0798%" height="15" fill="rgb(225,105,39)" fg:x="109" fg:w="1"/><text x="8.9491%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.6991%" y="581" width="0.0798%" height="15" fill="rgb(211,161,38)" fg:x="109" fg:w="1"/><text x="8.9491%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.6991%" y="565" width="0.0798%" height="15" fill="rgb(213,23,19)" fg:x="109" fg:w="1"/><text x="8.9491%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="8.6991%" y="661" width="0.1596%" height="15" fill="rgb(240,2,33)" fg:x="109" fg:w="2"/><text x="8.9491%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="8.6991%" y="645" width="0.1596%" height="15" fill="rgb(221,29,45)" fg:x="109" fg:w="2"/><text x="8.9491%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.7789%" y="629" width="0.0798%" height="15" fill="rgb(242,10,19)" fg:x="110" fg:w="1"/><text x="9.0289%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.7789%" y="613" width="0.0798%" height="15" fill="rgb(250,84,37)" fg:x="110" fg:w="1"/><text x="9.0289%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.7789%" y="597" width="0.0798%" height="15" fill="rgb(214,136,7)" fg:x="110" fg:w="1"/><text x="9.0289%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.7789%" y="581" width="0.0798%" height="15" fill="rgb(231,189,12)" fg:x="110" fg:w="1"/><text x="9.0289%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.7789%" y="565" width="0.0798%" height="15" fill="rgb(244,40,16)" fg:x="110" fg:w="1"/><text x="9.0289%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="8.8587%" y="645" width="0.0798%" height="15" fill="rgb(217,29,15)" fg:x="111" fg:w="1"/><text x="9.1087%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="8.6991%" y="677" width="0.3192%" height="15" fill="rgb(235,172,33)" fg:x="109" fg:w="4"/><text x="8.9491%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="8.8587%" y="661" width="0.1596%" height="15" fill="rgb(206,148,28)" fg:x="111" fg:w="2"/><text x="9.1087%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="8.9385%" y="645" width="0.0798%" height="15" fill="rgb(251,167,37)" fg:x="112" fg:w="1"/><text x="9.1885%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9385%" y="629" width="0.0798%" height="15" fill="rgb(229,94,52)" fg:x="112" fg:w="1"/><text x="9.1885%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9385%" y="613" width="0.0798%" height="15" fill="rgb(216,132,9)" fg:x="112" fg:w="1"/><text x="9.1885%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9385%" y="597" width="0.0798%" height="15" fill="rgb(208,110,29)" fg:x="112" fg:w="1"/><text x="9.1885%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9385%" y="581" width="0.0798%" height="15" fill="rgb(241,23,8)" fg:x="112" fg:w="1"/><text x="9.1885%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9385%" y="565" width="0.0798%" height="15" fill="rgb(208,26,35)" fg:x="112" fg:w="1"/><text x="9.1885%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.9385%" y="549" width="0.0798%" height="15" fill="rgb(242,165,34)" fg:x="112" fg:w="1"/><text x="9.1885%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.9385%" y="533" width="0.0798%" height="15" fill="rgb(222,222,33)" fg:x="112" fg:w="1"/><text x="9.1885%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.9385%" y="517" width="0.0798%" height="15" fill="rgb(227,16,52)" fg:x="112" fg:w="1"/><text x="9.1885%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9385%" y="501" width="0.0798%" height="15" fill="rgb(213,93,12)" fg:x="112" fg:w="1"/><text x="9.1885%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.9385%" y="485" width="0.0798%" height="15" fill="rgb(238,41,5)" fg:x="112" fg:w="1"/><text x="9.1885%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.9385%" y="469" width="0.0798%" height="15" fill="rgb(211,60,15)" fg:x="112" fg:w="1"/><text x="9.1885%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.9385%" y="453" width="0.0798%" height="15" fill="rgb(209,11,34)" fg:x="112" fg:w="1"/><text x="9.1885%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.9385%" y="437" width="0.0798%" height="15" fill="rgb(254,155,53)" fg:x="112" fg:w="1"/><text x="9.1885%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.9385%" y="421" width="0.0798%" height="15" fill="rgb(236,174,8)" fg:x="112" fg:w="1"/><text x="9.1885%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.9385%" y="405" width="0.0798%" height="15" fill="rgb(229,31,27)" fg:x="112" fg:w="1"/><text x="9.1885%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.0982%" y="613" width="0.0798%" height="15" fill="rgb(242,226,26)" fg:x="114" fg:w="1"/><text x="9.3482%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0982%" y="597" width="0.0798%" height="15" fill="rgb(234,32,40)" fg:x="114" fg:w="1"/><text x="9.3482%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.0982%" y="581" width="0.0798%" height="15" fill="rgb(249,226,47)" fg:x="114" fg:w="1"/><text x="9.3482%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.0982%" y="565" width="0.0798%" height="15" fill="rgb(212,6,26)" fg:x="114" fg:w="1"/><text x="9.3482%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.0982%" y="549" width="0.0798%" height="15" fill="rgb(249,202,29)" fg:x="114" fg:w="1"/><text x="9.3482%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.0982%" y="533" width="0.0798%" height="15" fill="rgb(226,106,4)" fg:x="114" fg:w="1"/><text x="9.3482%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.0982%" y="517" width="0.0798%" height="15" fill="rgb(251,2,27)" fg:x="114" fg:w="1"/><text x="9.3482%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.0982%" y="501" width="0.0798%" height="15" fill="rgb(236,208,0)" fg:x="114" fg:w="1"/><text x="9.3482%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.0982%" y="485" width="0.0798%" height="15" fill="rgb(211,66,17)" fg:x="114" fg:w="1"/><text x="9.3482%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.0982%" y="469" width="0.0798%" height="15" fill="rgb(216,129,9)" fg:x="114" fg:w="1"/><text x="9.3482%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.0982%" y="453" width="0.0798%" height="15" fill="rgb(215,130,23)" fg:x="114" fg:w="1"/><text x="9.3482%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.0982%" y="437" width="0.0798%" height="15" fill="rgb(253,157,11)" fg:x="114" fg:w="1"/><text x="9.3482%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.0982%" y="645" width="0.1596%" height="15" fill="rgb(224,25,14)" fg:x="114" fg:w="2"/><text x="9.3482%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.0982%" y="629" width="0.1596%" height="15" fill="rgb(238,16,7)" fg:x="114" fg:w="2"/><text x="9.3482%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.1780%" y="613" width="0.0798%" height="15" fill="rgb(228,74,11)" fg:x="115" fg:w="1"/><text x="9.4280%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1780%" y="597" width="0.0798%" height="15" fill="rgb(239,221,27)" fg:x="115" fg:w="1"/><text x="9.4280%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.1780%" y="581" width="0.0798%" height="15" fill="rgb(229,166,18)" fg:x="115" fg:w="1"/><text x="9.4280%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1780%" y="565" width="0.0798%" height="15" fill="rgb(254,94,46)" fg:x="115" fg:w="1"/><text x="9.4280%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="9.1780%" y="549" width="0.0798%" height="15" fill="rgb(241,79,19)" fg:x="115" fg:w="1"/><text x="9.4280%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="8.2203%" y="693" width="1.1173%" height="15" fill="rgb(228,99,51)" fg:x="103" fg:w="14"/><text x="8.4703%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="9.0184%" y="677" width="0.3192%" height="15" fill="rgb(211,15,6)" fg:x="113" fg:w="4"/><text x="9.2684%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="9.0184%" y="661" width="0.3192%" height="15" fill="rgb(245,107,54)" fg:x="113" fg:w="4"/><text x="9.2684%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="9.2578%" y="645" width="0.0798%" height="15" fill="rgb(243,3,2)" fg:x="116" fg:w="1"/><text x="9.5078%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.2578%" y="629" width="0.0798%" height="15" fill="rgb(206,122,10)" fg:x="116" fg:w="1"/><text x="9.5078%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.2578%" y="613" width="0.0798%" height="15" fill="rgb(224,88,4)" fg:x="116" fg:w="1"/><text x="9.5078%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.2578%" y="597" width="0.0798%" height="15" fill="rgb(230,1,41)" fg:x="116" fg:w="1"/><text x="9.5078%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2578%" y="581" width="0.0798%" height="15" fill="rgb(230,1,31)" fg:x="116" fg:w="1"/><text x="9.5078%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.3376%" y="661" width="0.0798%" height="15" fill="rgb(232,67,19)" fg:x="117" fg:w="1"/><text x="9.5876%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.3376%" y="645" width="0.0798%" height="15" fill="rgb(222,206,20)" fg:x="117" fg:w="1"/><text x="9.5876%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="8.2203%" y="709" width="1.2769%" height="15" fill="rgb(217,225,19)" fg:x="103" fg:w="16"/><text x="8.4703%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.3376%" y="693" width="0.1596%" height="15" fill="rgb(234,13,33)" fg:x="117" fg:w="2"/><text x="9.5876%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.3376%" y="677" width="0.1596%" height="15" fill="rgb(254,5,1)" fg:x="117" fg:w="2"/><text x="9.5876%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4174%" y="661" width="0.0798%" height="15" fill="rgb(211,121,41)" fg:x="118" fg:w="1"/><text x="9.6674%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.4174%" y="645" width="0.0798%" height="15" fill="rgb(213,199,35)" fg:x="118" fg:w="1"/><text x="9.6674%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.4174%" y="629" width="0.0798%" height="15" fill="rgb(240,118,22)" fg:x="118" fg:w="1"/><text x="9.6674%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.4174%" y="613" width="0.0798%" height="15" fill="rgb(238,184,25)" fg:x="118" fg:w="1"/><text x="9.6674%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="9.4174%" y="597" width="0.0798%" height="15" fill="rgb(210,165,6)" fg:x="118" fg:w="1"/><text x="9.6674%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.4972%" y="661" width="0.1596%" height="15" fill="rgb(235,149,5)" fg:x="119" fg:w="2"/><text x="9.7472%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.4972%" y="645" width="0.1596%" height="15" fill="rgb(221,63,5)" fg:x="119" fg:w="2"/><text x="9.7472%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.4972%" y="629" width="0.1596%" height="15" fill="rgb(250,44,41)" fg:x="119" fg:w="2"/><text x="9.7472%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.4972%" y="613" width="0.1596%" height="15" fill="rgb(235,112,47)" fg:x="119" fg:w="2"/><text x="9.7472%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.4972%" y="597" width="0.1596%" height="15" fill="rgb(252,176,34)" fg:x="119" fg:w="2"/><text x="9.7472%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.5770%" y="581" width="0.0798%" height="15" fill="rgb(234,50,19)" fg:x="120" fg:w="1"/><text x="9.8270%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.5770%" y="565" width="0.0798%" height="15" fill="rgb(241,195,31)" fg:x="120" fg:w="1"/><text x="9.8270%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.5770%" y="549" width="0.0798%" height="15" fill="rgb(212,93,11)" fg:x="120" fg:w="1"/><text x="9.8270%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.5770%" y="533" width="0.0798%" height="15" fill="rgb(254,98,51)" fg:x="120" fg:w="1"/><text x="9.8270%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.5770%" y="517" width="0.0798%" height="15" fill="rgb(246,18,45)" fg:x="120" fg:w="1"/><text x="9.8270%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="9.7366%" y="565" width="0.0798%" height="15" fill="rgb(215,148,23)" fg:x="122" fg:w="1"/><text x="9.9866%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.7366%" y="549" width="0.0798%" height="15" fill="rgb(227,22,7)" fg:x="122" fg:w="1"/><text x="9.9866%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.7366%" y="533" width="0.0798%" height="15" fill="rgb(207,210,37)" fg:x="122" fg:w="1"/><text x="9.9866%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="9.4972%" y="693" width="0.3990%" height="15" fill="rgb(247,147,42)" fg:x="119" fg:w="5"/><text x="9.7472%" y="703.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="9.4972%" y="677" width="0.3990%" height="15" fill="rgb(226,213,14)" fg:x="119" fg:w="5"/><text x="9.7472%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="9.6568%" y="661" width="0.2394%" height="15" fill="rgb(223,18,10)" fg:x="121" fg:w="3"/><text x="9.9068%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="9.6568%" y="645" width="0.2394%" height="15" fill="rgb(253,34,22)" fg:x="121" fg:w="3"/><text x="9.9068%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="9.6568%" y="629" width="0.2394%" height="15" fill="rgb(222,90,31)" fg:x="121" fg:w="3"/><text x="9.9068%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="9.6568%" y="613" width="0.2394%" height="15" fill="rgb(220,182,30)" fg:x="121" fg:w="3"/><text x="9.9068%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="9.6568%" y="597" width="0.2394%" height="15" fill="rgb(229,170,12)" fg:x="121" fg:w="3"/><text x="9.9068%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.7366%" y="581" width="0.1596%" height="15" fill="rgb(210,101,21)" fg:x="122" fg:w="2"/><text x="9.9866%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.8164%" y="565" width="0.0798%" height="15" fill="rgb(237,177,31)" fg:x="123" fg:w="1"/><text x="10.0664%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.8164%" y="549" width="0.0798%" height="15" fill="rgb(215,91,34)" fg:x="123" fg:w="1"/><text x="10.0664%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.0559%" y="645" width="0.0798%" height="15" fill="rgb(229,206,16)" fg:x="126" fg:w="1"/><text x="10.3059%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.0559%" y="629" width="0.0798%" height="15" fill="rgb(235,207,10)" fg:x="126" fg:w="1"/><text x="10.3059%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.0559%" y="613" width="0.0798%" height="15" fill="rgb(247,18,10)" fg:x="126" fg:w="1"/><text x="10.3059%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.0559%" y="597" width="0.0798%" height="15" fill="rgb(232,4,6)" fg:x="126" fg:w="1"/><text x="10.3059%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.0559%" y="581" width="0.0798%" height="15" fill="rgb(247,93,45)" fg:x="126" fg:w="1"/><text x="10.3059%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.0559%" y="565" width="0.0798%" height="15" fill="rgb(240,181,18)" fg:x="126" fg:w="1"/><text x="10.3059%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.0559%" y="549" width="0.0798%" height="15" fill="rgb(208,224,0)" fg:x="126" fg:w="1"/><text x="10.3059%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1357%" y="613" width="0.0798%" height="15" fill="rgb(224,207,54)" fg:x="127" fg:w="1"/><text x="10.3857%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1357%" y="597" width="0.0798%" height="15" fill="rgb(217,152,29)" fg:x="127" fg:w="1"/><text x="10.3857%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.1357%" y="581" width="0.0798%" height="15" fill="rgb(243,78,27)" fg:x="127" fg:w="1"/><text x="10.3857%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="10.2155%" y="549" width="0.0798%" height="15" fill="rgb(228,111,9)" fg:x="128" fg:w="1"/><text x="10.4655%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="9.8962%" y="693" width="0.4789%" height="15" fill="rgb(230,213,21)" fg:x="124" fg:w="6"/><text x="10.1462%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="10.0559%" y="677" width="0.3192%" height="15" fill="rgb(248,50,36)" fg:x="126" fg:w="4"/><text x="10.3059%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="10.0559%" y="661" width="0.3192%" height="15" fill="rgb(226,19,31)" fg:x="126" fg:w="4"/><text x="10.3059%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="10.1357%" y="645" width="0.2394%" height="15" fill="rgb(205,132,21)" fg:x="127" fg:w="3"/><text x="10.3857%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="10.1357%" y="629" width="0.2394%" height="15" fill="rgb(207,42,19)" fg:x="127" fg:w="3"/><text x="10.3857%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="10.2155%" y="613" width="0.1596%" height="15" fill="rgb(229,69,35)" fg:x="128" fg:w="2"/><text x="10.4655%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.2155%" y="597" width="0.1596%" height="15" fill="rgb(226,96,11)" fg:x="128" fg:w="2"/><text x="10.4655%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="10.2155%" y="581" width="0.1596%" height="15" fill="rgb(236,133,54)" fg:x="128" fg:w="2"/><text x="10.4655%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="10.2155%" y="565" width="0.1596%" height="15" fill="rgb(247,166,21)" fg:x="128" fg:w="2"/><text x="10.4655%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.2953%" y="549" width="0.0798%" height="15" fill="rgb(220,132,12)" fg:x="129" fg:w="1"/><text x="10.5453%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2953%" y="533" width="0.0798%" height="15" fill="rgb(233,27,30)" fg:x="129" fg:w="1"/><text x="10.5453%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.2953%" y="517" width="0.0798%" height="15" fill="rgb(246,161,27)" fg:x="129" fg:w="1"/><text x="10.5453%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="10.4549%" y="677" width="0.0798%" height="15" fill="rgb(240,56,3)" fg:x="131" fg:w="1"/><text x="10.7049%" y="687.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="10.5347%" y="597" width="0.0798%" height="15" fill="rgb(242,190,9)" fg:x="132" fg:w="1"/><text x="10.7847%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="10.5347%" y="581" width="0.0798%" height="15" fill="rgb(234,3,52)" fg:x="132" fg:w="1"/><text x="10.7847%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (32 samples, 2.55%)</title><rect x="8.2203%" y="725" width="2.5539%" height="15" fill="rgb(220,221,19)" fg:x="103" fg:w="32"/><text x="8.4703%" y="735.50">pl..</text></g><g><title>plugins_core::tools::set_container (16 samples, 1.28%)</title><rect x="9.4972%" y="709" width="1.2769%" height="15" fill="rgb(247,178,30)" fg:x="119" fg:w="16"/><text x="9.7472%" y="719.50"></text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="10.3751%" y="693" width="0.3990%" height="15" fill="rgb(234,212,27)" fg:x="130" fg:w="5"/><text x="10.6251%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="10.5347%" y="677" width="0.2394%" height="15" fill="rgb(226,199,38)" fg:x="132" fg:w="3"/><text x="10.7847%" y="687.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (3 samples, 0.24%)</title><rect x="10.5347%" y="661" width="0.2394%" height="15" fill="rgb(248,114,22)" fg:x="132" fg:w="3"/><text x="10.7847%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="10.5347%" y="645" width="0.2394%" height="15" fill="rgb(221,180,4)" fg:x="132" fg:w="3"/><text x="10.7847%" y="655.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="10.5347%" y="629" width="0.2394%" height="15" fill="rgb(220,229,24)" fg:x="132" fg:w="3"/><text x="10.7847%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="10.5347%" y="613" width="0.2394%" height="15" fill="rgb(226,184,27)" fg:x="132" fg:w="3"/><text x="10.7847%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="10.6145%" y="597" width="0.1596%" height="15" fill="rgb(232,99,15)" fg:x="133" fg:w="2"/><text x="10.8645%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.6943%" y="581" width="0.0798%" height="15" fill="rgb(250,167,16)" fg:x="134" fg:w="1"/><text x="10.9443%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="10.7741%" y="693" width="0.0798%" height="15" fill="rgb(243,113,6)" fg:x="135" fg:w="1"/><text x="11.0241%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.7741%" y="677" width="0.0798%" height="15" fill="rgb(244,147,52)" fg:x="135" fg:w="1"/><text x="11.0241%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.7741%" y="661" width="0.0798%" height="15" fill="rgb(235,59,50)" fg:x="135" fg:w="1"/><text x="11.0241%" y="671.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="10.7741%" y="645" width="0.0798%" height="15" fill="rgb(250,188,6)" fg:x="135" fg:w="1"/><text x="11.0241%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7741%" y="629" width="0.0798%" height="15" fill="rgb(236,173,11)" fg:x="135" fg:w="1"/><text x="11.0241%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.7741%" y="613" width="0.0798%" height="15" fill="rgb(233,64,3)" fg:x="135" fg:w="1"/><text x="11.0241%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="10.8540%" y="693" width="0.0798%" height="15" fill="rgb(207,92,7)" fg:x="136" fg:w="1"/><text x="11.1040%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="10.8540%" y="677" width="0.0798%" height="15" fill="rgb(221,30,19)" fg:x="136" fg:w="1"/><text x="11.1040%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="10.8540%" y="661" width="0.0798%" height="15" fill="rgb(245,22,49)" fg:x="136" fg:w="1"/><text x="11.1040%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="10.8540%" y="645" width="0.0798%" height="15" fill="rgb(218,39,20)" fg:x="136" fg:w="1"/><text x="11.1040%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8540%" y="629" width="0.0798%" height="15" fill="rgb(222,144,21)" fg:x="136" fg:w="1"/><text x="11.1040%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="10.9338%" y="661" width="0.0798%" height="15" fill="rgb(222,78,51)" fg:x="137" fg:w="1"/><text x="11.1838%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.9338%" y="645" width="0.0798%" height="15" fill="rgb(248,213,53)" fg:x="137" fg:w="1"/><text x="11.1838%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="10.9338%" y="629" width="0.0798%" height="15" fill="rgb(245,28,34)" fg:x="137" fg:w="1"/><text x="11.1838%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.9338%" y="677" width="0.1596%" height="15" fill="rgb(229,186,26)" fg:x="137" fg:w="2"/><text x="11.1838%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0136%" y="661" width="0.0798%" height="15" fill="rgb(224,0,41)" fg:x="138" fg:w="1"/><text x="11.2636%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0136%" y="645" width="0.0798%" height="15" fill="rgb(223,136,51)" fg:x="138" fg:w="1"/><text x="11.2636%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.0136%" y="629" width="0.0798%" height="15" fill="rgb(234,50,9)" fg:x="138" fg:w="1"/><text x="11.2636%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="10.9338%" y="693" width="0.2394%" height="15" fill="rgb(242,164,20)" fg:x="137" fg:w="3"/><text x="11.1838%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.0934%" y="677" width="0.0798%" height="15" fill="rgb(230,169,22)" fg:x="139" fg:w="1"/><text x="11.3434%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.0934%" y="661" width="0.0798%" height="15" fill="rgb(228,82,26)" fg:x="139" fg:w="1"/><text x="11.3434%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.0934%" y="645" width="0.0798%" height="15" fill="rgb(244,220,31)" fg:x="139" fg:w="1"/><text x="11.3434%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="11.0934%" y="629" width="0.0798%" height="15" fill="rgb(214,35,25)" fg:x="139" fg:w="1"/><text x="11.3434%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="11.1732%" y="677" width="0.0798%" height="15" fill="rgb(245,162,54)" fg:x="140" fg:w="1"/><text x="11.4232%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="11.1732%" y="661" width="0.0798%" height="15" fill="rgb(210,43,24)" fg:x="140" fg:w="1"/><text x="11.4232%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.1732%" y="645" width="0.0798%" height="15" fill="rgb(226,145,51)" fg:x="140" fg:w="1"/><text x="11.4232%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4126%" y="629" width="0.0798%" height="15" fill="rgb(237,52,53)" fg:x="143" fg:w="1"/><text x="11.6626%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4126%" y="613" width="0.0798%" height="15" fill="rgb(216,226,7)" fg:x="143" fg:w="1"/><text x="11.6626%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4126%" y="597" width="0.0798%" height="15" fill="rgb(206,223,18)" fg:x="143" fg:w="1"/><text x="11.6626%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4126%" y="581" width="0.0798%" height="15" fill="rgb(221,1,10)" fg:x="143" fg:w="1"/><text x="11.6626%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.4126%" y="565" width="0.0798%" height="15" fill="rgb(221,151,42)" fg:x="143" fg:w="1"/><text x="11.6626%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.4126%" y="549" width="0.0798%" height="15" fill="rgb(205,183,46)" fg:x="143" fg:w="1"/><text x="11.6626%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.4126%" y="533" width="0.0798%" height="15" fill="rgb(239,229,1)" fg:x="143" fg:w="1"/><text x="11.6626%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.4126%" y="517" width="0.0798%" height="15" fill="rgb(236,192,23)" fg:x="143" fg:w="1"/><text x="11.6626%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4126%" y="501" width="0.0798%" height="15" fill="rgb(215,146,3)" fg:x="143" fg:w="1"/><text x="11.6626%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.4126%" y="485" width="0.0798%" height="15" fill="rgb(235,52,27)" fg:x="143" fg:w="1"/><text x="11.6626%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.4126%" y="469" width="0.0798%" height="15" fill="rgb(236,45,20)" fg:x="143" fg:w="1"/><text x="11.6626%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.4126%" y="453" width="0.0798%" height="15" fill="rgb(235,86,41)" fg:x="143" fg:w="1"/><text x="11.6626%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.4126%" y="437" width="0.0798%" height="15" fill="rgb(235,27,27)" fg:x="143" fg:w="1"/><text x="11.6626%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.4126%" y="421" width="0.0798%" height="15" fill="rgb(232,4,34)" fg:x="143" fg:w="1"/><text x="11.6626%" y="431.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="11.4126%" y="405" width="0.0798%" height="15" fill="rgb(215,22,10)" fg:x="143" fg:w="1"/><text x="11.6626%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.4126%" y="389" width="0.0798%" height="15" fill="rgb(230,228,27)" fg:x="143" fg:w="1"/><text x="11.6626%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="11.2530%" y="661" width="0.3192%" height="15" fill="rgb(216,26,51)" fg:x="141" fg:w="4"/><text x="11.5030%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.3328%" y="645" width="0.2394%" height="15" fill="rgb(225,180,50)" fg:x="142" fg:w="3"/><text x="11.5828%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.4924%" y="629" width="0.0798%" height="15" fill="rgb(236,211,2)" fg:x="144" fg:w="1"/><text x="11.7424%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.4924%" y="613" width="0.0798%" height="15" fill="rgb(250,51,20)" fg:x="144" fg:w="1"/><text x="11.7424%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.4924%" y="597" width="0.0798%" height="15" fill="rgb(232,70,37)" fg:x="144" fg:w="1"/><text x="11.7424%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.4924%" y="581" width="0.0798%" height="15" fill="rgb(226,183,39)" fg:x="144" fg:w="1"/><text x="11.7424%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.4924%" y="565" width="0.0798%" height="15" fill="rgb(232,228,21)" fg:x="144" fg:w="1"/><text x="11.7424%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.4924%" y="549" width="0.0798%" height="15" fill="rgb(251,118,32)" fg:x="144" fg:w="1"/><text x="11.7424%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="11.5722%" y="629" width="0.0798%" height="15" fill="rgb(235,172,38)" fg:x="145" fg:w="1"/><text x="11.8222%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="11.5722%" y="661" width="0.1596%" height="15" fill="rgb(235,63,18)" fg:x="145" fg:w="2"/><text x="11.8222%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.5722%" y="645" width="0.1596%" height="15" fill="rgb(225,4,7)" fg:x="145" fg:w="2"/><text x="11.8222%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.6520%" y="629" width="0.0798%" height="15" fill="rgb(231,61,1)" fg:x="146" fg:w="1"/><text x="11.9020%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6520%" y="613" width="0.0798%" height="15" fill="rgb(241,155,22)" fg:x="146" fg:w="1"/><text x="11.9020%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.6520%" y="597" width="0.0798%" height="15" fill="rgb(209,100,26)" fg:x="146" fg:w="1"/><text x="11.9020%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6520%" y="581" width="0.0798%" height="15" fill="rgb(248,181,15)" fg:x="146" fg:w="1"/><text x="11.9020%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.7318%" y="613" width="0.0798%" height="15" fill="rgb(214,94,31)" fg:x="147" fg:w="1"/><text x="11.9818%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.7318%" y="597" width="0.0798%" height="15" fill="rgb(207,16,42)" fg:x="147" fg:w="1"/><text x="11.9818%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.7318%" y="581" width="0.0798%" height="15" fill="rgb(208,127,13)" fg:x="147" fg:w="1"/><text x="11.9818%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.7318%" y="565" width="0.0798%" height="15" fill="rgb(220,211,18)" fg:x="147" fg:w="1"/><text x="11.9818%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.7318%" y="549" width="0.0798%" height="15" fill="rgb(221,55,38)" fg:x="147" fg:w="1"/><text x="11.9818%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.7318%" y="533" width="0.0798%" height="15" fill="rgb(252,219,45)" fg:x="147" fg:w="1"/><text x="11.9818%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="11.7318%" y="517" width="0.0798%" height="15" fill="rgb(248,53,35)" fg:x="147" fg:w="1"/><text x="11.9818%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="10.7741%" y="709" width="1.1173%" height="15" fill="rgb(210,87,2)" fg:x="135" fg:w="14"/><text x="11.0241%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (9 samples, 0.72%)</title><rect x="11.1732%" y="693" width="0.7183%" height="15" fill="rgb(239,133,9)" fg:x="140" fg:w="9"/><text x="11.4232%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="11.2530%" y="677" width="0.6385%" height="15" fill="rgb(214,114,5)" fg:x="141" fg:w="8"/><text x="11.5030%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="11.7318%" y="661" width="0.1596%" height="15" fill="rgb(206,124,24)" fg:x="147" fg:w="2"/><text x="11.9818%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="11.7318%" y="645" width="0.1596%" height="15" fill="rgb(212,57,33)" fg:x="147" fg:w="2"/><text x="11.9818%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="11.7318%" y="629" width="0.1596%" height="15" fill="rgb(246,21,20)" fg:x="147" fg:w="2"/><text x="11.9818%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.8117%" y="613" width="0.0798%" height="15" fill="rgb(253,210,39)" fg:x="148" fg:w="1"/><text x="12.0617%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="11.8117%" y="597" width="0.0798%" height="15" fill="rgb(209,187,24)" fg:x="148" fg:w="1"/><text x="12.0617%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="11.8117%" y="581" width="0.0798%" height="15" fill="rgb(246,136,17)" fg:x="148" fg:w="1"/><text x="12.0617%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.8117%" y="565" width="0.0798%" height="15" fill="rgb(211,0,30)" fg:x="148" fg:w="1"/><text x="12.0617%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="11.8117%" y="549" width="0.0798%" height="15" fill="rgb(216,199,7)" fg:x="148" fg:w="1"/><text x="12.0617%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="11.8117%" y="533" width="0.0798%" height="15" fill="rgb(207,210,19)" fg:x="148" fg:w="1"/><text x="12.0617%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="11.8117%" y="517" width="0.0798%" height="15" fill="rgb(237,187,39)" fg:x="148" fg:w="1"/><text x="12.0617%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="11.8117%" y="501" width="0.0798%" height="15" fill="rgb(243,194,42)" fg:x="148" fg:w="1"/><text x="12.0617%" y="511.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.08%)</title><rect x="11.8117%" y="485" width="0.0798%" height="15" fill="rgb(225,194,19)" fg:x="148" fg:w="1"/><text x="12.0617%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.8915%" y="677" width="0.0798%" height="15" fill="rgb(224,192,14)" fg:x="149" fg:w="1"/><text x="12.1415%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.8915%" y="661" width="0.0798%" height="15" fill="rgb(252,21,18)" fg:x="149" fg:w="1"/><text x="12.1415%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.8915%" y="645" width="0.0798%" height="15" fill="rgb(229,69,19)" fg:x="149" fg:w="1"/><text x="12.1415%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.8915%" y="629" width="0.0798%" height="15" fill="rgb(251,31,53)" fg:x="149" fg:w="1"/><text x="12.1415%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="10.7741%" y="725" width="1.2769%" height="15" fill="rgb(218,39,50)" fg:x="135" fg:w="16"/><text x="11.0241%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.8915%" y="709" width="0.1596%" height="15" fill="rgb(231,50,17)" fg:x="149" fg:w="2"/><text x="12.1415%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.8915%" y="693" width="0.1596%" height="15" fill="rgb(223,217,31)" fg:x="149" fg:w="2"/><text x="12.1415%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9713%" y="677" width="0.0798%" height="15" fill="rgb(225,91,12)" fg:x="150" fg:w="1"/><text x="12.2213%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9713%" y="661" width="0.0798%" height="15" fill="rgb(242,58,43)" fg:x="150" fg:w="1"/><text x="12.2213%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9713%" y="645" width="0.0798%" height="15" fill="rgb(242,32,21)" fg:x="150" fg:w="1"/><text x="12.2213%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9713%" y="629" width="0.0798%" height="15" fill="rgb(211,127,1)" fg:x="150" fg:w="1"/><text x="12.2213%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="11.9713%" y="613" width="0.0798%" height="15" fill="rgb(231,93,13)" fg:x="150" fg:w="1"/><text x="12.2213%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.9713%" y="597" width="0.0798%" height="15" fill="rgb(218,83,4)" fg:x="150" fg:w="1"/><text x="12.2213%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9713%" y="581" width="0.0798%" height="15" fill="rgb(230,218,10)" fg:x="150" fg:w="1"/><text x="12.2213%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.0511%" y="693" width="0.0798%" height="15" fill="rgb(235,127,18)" fg:x="151" fg:w="1"/><text x="12.3011%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.0511%" y="677" width="0.0798%" height="15" fill="rgb(213,137,46)" fg:x="151" fg:w="1"/><text x="12.3011%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.0511%" y="661" width="0.0798%" height="15" fill="rgb(235,179,24)" fg:x="151" fg:w="1"/><text x="12.3011%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0511%" y="645" width="0.0798%" height="15" fill="rgb(247,58,49)" fg:x="151" fg:w="1"/><text x="12.3011%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.0511%" y="629" width="0.0798%" height="15" fill="rgb(242,222,5)" fg:x="151" fg:w="1"/><text x="12.3011%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="12.0511%" y="613" width="0.0798%" height="15" fill="rgb(230,16,48)" fg:x="151" fg:w="1"/><text x="12.3011%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.0511%" y="597" width="0.0798%" height="15" fill="rgb(241,192,16)" fg:x="151" fg:w="1"/><text x="12.3011%" y="607.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="12.0511%" y="725" width="0.1596%" height="15" fill="rgb(209,25,37)" fg:x="151" fg:w="2"/><text x="12.3011%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.0511%" y="709" width="0.1596%" height="15" fill="rgb(229,215,13)" fg:x="151" fg:w="2"/><text x="12.3011%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.1309%" y="693" width="0.0798%" height="15" fill="rgb(213,199,8)" fg:x="152" fg:w="1"/><text x="12.3809%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.2107%" y="709" width="0.1596%" height="15" fill="rgb(226,151,19)" fg:x="153" fg:w="2"/><text x="12.4607%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.2107%" y="693" width="0.1596%" height="15" fill="rgb(254,183,12)" fg:x="153" fg:w="2"/><text x="12.4607%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.2107%" y="677" width="0.1596%" height="15" fill="rgb(245,8,3)" fg:x="153" fg:w="2"/><text x="12.4607%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.2905%" y="661" width="0.0798%" height="15" fill="rgb(229,159,35)" fg:x="154" fg:w="1"/><text x="12.5405%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.2905%" y="645" width="0.0798%" height="15" fill="rgb(209,145,1)" fg:x="154" fg:w="1"/><text x="12.5405%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2905%" y="629" width="0.0798%" height="15" fill="rgb(228,183,16)" fg:x="154" fg:w="1"/><text x="12.5405%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.2905%" y="613" width="0.0798%" height="15" fill="rgb(222,68,0)" fg:x="154" fg:w="1"/><text x="12.5405%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2905%" y="597" width="0.0798%" height="15" fill="rgb(209,130,50)" fg:x="154" fg:w="1"/><text x="12.5405%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.4501%" y="613" width="0.0798%" height="15" fill="rgb(228,176,44)" fg:x="156" fg:w="1"/><text x="12.7001%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4501%" y="597" width="0.0798%" height="15" fill="rgb(221,164,2)" fg:x="156" fg:w="1"/><text x="12.7001%" y="607.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="12.4501%" y="645" width="0.1596%" height="15" fill="rgb(249,199,49)" fg:x="156" fg:w="2"/><text x="12.7001%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.4501%" y="629" width="0.1596%" height="15" fill="rgb(228,205,53)" fg:x="156" fg:w="2"/><text x="12.7001%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.5299%" y="613" width="0.0798%" height="15" fill="rgb(235,77,20)" fg:x="157" fg:w="1"/><text x="12.7799%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.5299%" y="597" width="0.0798%" height="15" fill="rgb(227,147,34)" fg:x="157" fg:w="1"/><text x="12.7799%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="12.5299%" y="581" width="0.0798%" height="15" fill="rgb(226,203,52)" fg:x="157" fg:w="1"/><text x="12.7799%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="12.4501%" y="661" width="0.2394%" height="15" fill="rgb(226,186,23)" fg:x="156" fg:w="3"/><text x="12.7001%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.6097%" y="645" width="0.0798%" height="15" fill="rgb(236,13,30)" fg:x="158" fg:w="1"/><text x="12.8597%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.6097%" y="629" width="0.0798%" height="15" fill="rgb(228,121,22)" fg:x="158" fg:w="1"/><text x="12.8597%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="12.6895%" y="613" width="0.2394%" height="15" fill="rgb(248,222,26)" fg:x="159" fg:w="3"/><text x="12.9395%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.6895%" y="597" width="0.2394%" height="15" fill="rgb(251,72,25)" fg:x="159" fg:w="3"/><text x="12.9395%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.8492%" y="581" width="0.0798%" height="15" fill="rgb(223,114,24)" fg:x="161" fg:w="1"/><text x="13.0992%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="12.9290%" y="613" width="0.0798%" height="15" fill="rgb(232,190,43)" fg:x="162" fg:w="1"/><text x="13.1790%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.9290%" y="597" width="0.0798%" height="15" fill="rgb(208,90,0)" fg:x="162" fg:w="1"/><text x="13.1790%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.9290%" y="581" width="0.0798%" height="15" fill="rgb(234,149,31)" fg:x="162" fg:w="1"/><text x="13.1790%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9290%" y="565" width="0.0798%" height="15" fill="rgb(235,188,36)" fg:x="162" fg:w="1"/><text x="13.1790%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9290%" y="549" width="0.0798%" height="15" fill="rgb(219,59,51)" fg:x="162" fg:w="1"/><text x="13.1790%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9290%" y="533" width="0.0798%" height="15" fill="rgb(236,101,40)" fg:x="162" fg:w="1"/><text x="13.1790%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="13.0088%" y="613" width="0.0798%" height="15" fill="rgb(235,33,7)" fg:x="163" fg:w="1"/><text x="13.2588%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="13.0088%" y="597" width="0.0798%" height="15" fill="rgb(213,169,26)" fg:x="163" fg:w="1"/><text x="13.2588%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="13.0088%" y="581" width="0.0798%" height="15" fill="rgb(218,99,34)" fg:x="163" fg:w="1"/><text x="13.2588%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.0088%" y="565" width="0.0798%" height="15" fill="rgb(210,57,24)" fg:x="163" fg:w="1"/><text x="13.2588%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.0886%" y="597" width="0.0798%" height="15" fill="rgb(231,181,54)" fg:x="164" fg:w="1"/><text x="13.3386%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.1684%" y="549" width="0.0798%" height="15" fill="rgb(251,188,48)" fg:x="165" fg:w="1"/><text x="13.4184%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.1684%" y="533" width="0.0798%" height="15" fill="rgb(243,12,45)" fg:x="165" fg:w="1"/><text x="13.4184%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1684%" y="517" width="0.0798%" height="15" fill="rgb(250,197,9)" fg:x="165" fg:w="1"/><text x="13.4184%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.1684%" y="501" width="0.0798%" height="15" fill="rgb(235,149,35)" fg:x="165" fg:w="1"/><text x="13.4184%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.1684%" y="485" width="0.0798%" height="15" fill="rgb(219,27,19)" fg:x="165" fg:w="1"/><text x="13.4184%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.1684%" y="469" width="0.0798%" height="15" fill="rgb(244,78,31)" fg:x="165" fg:w="1"/><text x="13.4184%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.1684%" y="453" width="0.0798%" height="15" fill="rgb(241,13,4)" fg:x="165" fg:w="1"/><text x="13.4184%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1684%" y="437" width="0.0798%" height="15" fill="rgb(212,194,26)" fg:x="165" fg:w="1"/><text x="13.4184%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.1684%" y="421" width="0.0798%" height="15" fill="rgb(236,80,11)" fg:x="165" fg:w="1"/><text x="13.4184%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.1684%" y="405" width="0.0798%" height="15" fill="rgb(206,1,24)" fg:x="165" fg:w="1"/><text x="13.4184%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.1684%" y="389" width="0.0798%" height="15" fill="rgb(238,215,50)" fg:x="165" fg:w="1"/><text x="13.4184%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.1684%" y="373" width="0.0798%" height="15" fill="rgb(254,126,32)" fg:x="165" fg:w="1"/><text x="13.4184%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.1684%" y="357" width="0.0798%" height="15" fill="rgb(206,111,53)" fg:x="165" fg:w="1"/><text x="13.4184%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.1684%" y="341" width="0.0798%" height="15" fill="rgb(218,72,44)" fg:x="165" fg:w="1"/><text x="13.4184%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.1684%" y="565" width="0.1596%" height="15" fill="rgb(238,25,3)" fg:x="165" fg:w="2"/><text x="13.4184%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2482%" y="549" width="0.0798%" height="15" fill="rgb(250,191,7)" fg:x="166" fg:w="1"/><text x="13.4982%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="13.0886%" y="613" width="0.3192%" height="15" fill="rgb(238,56,30)" fg:x="164" fg:w="4"/><text x="13.3386%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.1684%" y="597" width="0.2394%" height="15" fill="rgb(210,27,45)" fg:x="165" fg:w="3"/><text x="13.4184%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.1684%" y="581" width="0.2394%" height="15" fill="rgb(207,10,50)" fg:x="165" fg:w="3"/><text x="13.4184%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3280%" y="565" width="0.0798%" height="15" fill="rgb(249,30,23)" fg:x="167" fg:w="1"/><text x="13.5780%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3280%" y="549" width="0.0798%" height="15" fill="rgb(250,80,12)" fg:x="167" fg:w="1"/><text x="13.5780%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3280%" y="533" width="0.0798%" height="15" fill="rgb(210,221,37)" fg:x="167" fg:w="1"/><text x="13.5780%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3280%" y="517" width="0.0798%" height="15" fill="rgb(205,96,24)" fg:x="167" fg:w="1"/><text x="13.5780%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3280%" y="501" width="0.0798%" height="15" fill="rgb(247,104,22)" fg:x="167" fg:w="1"/><text x="13.5780%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3280%" y="485" width="0.0798%" height="15" fill="rgb(222,61,53)" fg:x="167" fg:w="1"/><text x="13.5780%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4876%" y="549" width="0.0798%" height="15" fill="rgb(241,11,53)" fg:x="169" fg:w="1"/><text x="13.7376%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4876%" y="533" width="0.0798%" height="15" fill="rgb(230,111,47)" fg:x="169" fg:w="1"/><text x="13.7376%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4876%" y="517" width="0.0798%" height="15" fill="rgb(218,187,29)" fg:x="169" fg:w="1"/><text x="13.7376%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4876%" y="501" width="0.0798%" height="15" fill="rgb(210,121,46)" fg:x="169" fg:w="1"/><text x="13.7376%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4876%" y="485" width="0.0798%" height="15" fill="rgb(250,43,19)" fg:x="169" fg:w="1"/><text x="13.7376%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.4876%" y="469" width="0.0798%" height="15" fill="rgb(238,61,12)" fg:x="169" fg:w="1"/><text x="13.7376%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.4876%" y="453" width="0.0798%" height="15" fill="rgb(251,198,9)" fg:x="169" fg:w="1"/><text x="13.7376%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.4876%" y="437" width="0.0798%" height="15" fill="rgb(214,192,38)" fg:x="169" fg:w="1"/><text x="13.7376%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.4876%" y="421" width="0.0798%" height="15" fill="rgb(214,73,19)" fg:x="169" fg:w="1"/><text x="13.7376%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.4876%" y="405" width="0.0798%" height="15" fill="rgb(249,222,49)" fg:x="169" fg:w="1"/><text x="13.7376%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.4876%" y="389" width="0.0798%" height="15" fill="rgb(231,181,54)" fg:x="169" fg:w="1"/><text x="13.7376%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.4876%" y="373" width="0.0798%" height="15" fill="rgb(240,1,13)" fg:x="169" fg:w="1"/><text x="13.7376%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.4876%" y="357" width="0.0798%" height="15" fill="rgb(225,21,16)" fg:x="169" fg:w="1"/><text x="13.7376%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.4876%" y="341" width="0.0798%" height="15" fill="rgb(246,176,50)" fg:x="169" fg:w="1"/><text x="13.7376%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4876%" y="325" width="0.0798%" height="15" fill="rgb(208,96,50)" fg:x="169" fg:w="1"/><text x="13.7376%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.4078%" y="581" width="0.2394%" height="15" fill="rgb(240,219,19)" fg:x="168" fg:w="3"/><text x="13.6578%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.4078%" y="565" width="0.2394%" height="15" fill="rgb(234,73,5)" fg:x="168" fg:w="3"/><text x="13.6578%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.5674%" y="549" width="0.0798%" height="15" fill="rgb(225,52,53)" fg:x="170" fg:w="1"/><text x="13.8174%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="533" width="0.0798%" height="15" fill="rgb(250,12,14)" fg:x="170" fg:w="1"/><text x="13.8174%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.5674%" y="517" width="0.0798%" height="15" fill="rgb(242,185,54)" fg:x="170" fg:w="1"/><text x="13.8174%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.5674%" y="501" width="0.0798%" height="15" fill="rgb(211,206,31)" fg:x="170" fg:w="1"/><text x="13.8174%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5674%" y="485" width="0.0798%" height="15" fill="rgb(252,10,33)" fg:x="170" fg:w="1"/><text x="13.8174%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5674%" y="469" width="0.0798%" height="15" fill="rgb(216,26,7)" fg:x="170" fg:w="1"/><text x="13.8174%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.6472%" y="549" width="0.1596%" height="15" fill="rgb(228,112,40)" fg:x="171" fg:w="2"/><text x="13.8972%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.6472%" y="533" width="0.1596%" height="15" fill="rgb(212,21,16)" fg:x="171" fg:w="2"/><text x="13.8972%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.6472%" y="517" width="0.1596%" height="15" fill="rgb(249,3,29)" fg:x="171" fg:w="2"/><text x="13.8972%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.6472%" y="501" width="0.1596%" height="15" fill="rgb(221,42,51)" fg:x="171" fg:w="2"/><text x="13.8972%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7271%" y="485" width="0.0798%" height="15" fill="rgb(225,90,21)" fg:x="172" fg:w="1"/><text x="13.9771%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7271%" y="469" width="0.0798%" height="15" fill="rgb(242,131,5)" fg:x="172" fg:w="1"/><text x="13.9771%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7271%" y="453" width="0.0798%" height="15" fill="rgb(220,187,28)" fg:x="172" fg:w="1"/><text x="13.9771%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7271%" y="437" width="0.0798%" height="15" fill="rgb(210,75,48)" fg:x="172" fg:w="1"/><text x="13.9771%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7271%" y="421" width="0.0798%" height="15" fill="rgb(211,91,40)" fg:x="172" fg:w="1"/><text x="13.9771%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.7271%" y="405" width="0.0798%" height="15" fill="rgb(205,43,18)" fg:x="172" fg:w="1"/><text x="13.9771%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.7271%" y="389" width="0.0798%" height="15" fill="rgb(207,123,11)" fg:x="172" fg:w="1"/><text x="13.9771%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.7271%" y="373" width="0.0798%" height="15" fill="rgb(235,89,39)" fg:x="172" fg:w="1"/><text x="13.9771%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.7271%" y="357" width="0.0798%" height="15" fill="rgb(245,217,27)" fg:x="172" fg:w="1"/><text x="13.9771%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.7271%" y="341" width="0.0798%" height="15" fill="rgb(216,55,17)" fg:x="172" fg:w="1"/><text x="13.9771%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.7271%" y="325" width="0.0798%" height="15" fill="rgb(252,116,44)" fg:x="172" fg:w="1"/><text x="13.9771%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="12.6895%" y="629" width="1.1971%" height="15" fill="rgb(229,153,4)" fg:x="159" fg:w="15"/><text x="12.9395%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="13.4078%" y="613" width="0.4789%" height="15" fill="rgb(222,24,35)" fg:x="168" fg:w="6"/><text x="13.6578%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="13.4078%" y="597" width="0.4789%" height="15" fill="rgb(214,26,20)" fg:x="168" fg:w="6"/><text x="13.6578%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="13.6472%" y="581" width="0.2394%" height="15" fill="rgb(215,14,45)" fg:x="171" fg:w="3"/><text x="13.8972%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.6472%" y="565" width="0.2394%" height="15" fill="rgb(217,212,50)" fg:x="171" fg:w="3"/><text x="13.8972%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.8069%" y="549" width="0.0798%" height="15" fill="rgb(230,172,52)" fg:x="173" fg:w="1"/><text x="14.0569%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8069%" y="533" width="0.0798%" height="15" fill="rgb(210,48,36)" fg:x="173" fg:w="1"/><text x="14.0569%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.8069%" y="517" width="0.0798%" height="15" fill="rgb(216,213,32)" fg:x="173" fg:w="1"/><text x="14.0569%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8069%" y="501" width="0.0798%" height="15" fill="rgb(237,202,41)" fg:x="173" fg:w="1"/><text x="14.0569%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8069%" y="485" width="0.0798%" height="15" fill="rgb(209,14,29)" fg:x="173" fg:w="1"/><text x="14.0569%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.8069%" y="469" width="0.0798%" height="15" fill="rgb(219,29,3)" fg:x="173" fg:w="1"/><text x="14.0569%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8867%" y="597" width="0.0798%" height="15" fill="rgb(229,13,49)" fg:x="174" fg:w="1"/><text x="14.1367%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.8867%" y="581" width="0.0798%" height="15" fill="rgb(210,206,2)" fg:x="174" fg:w="1"/><text x="14.1367%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="13.9665%" y="597" width="0.0798%" height="15" fill="rgb(216,154,46)" fg:x="175" fg:w="1"/><text x="14.2165%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.9665%" y="581" width="0.0798%" height="15" fill="rgb(211,170,52)" fg:x="175" fg:w="1"/><text x="14.2165%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9665%" y="565" width="0.0798%" height="15" fill="rgb(233,109,47)" fg:x="175" fg:w="1"/><text x="14.2165%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.9665%" y="549" width="0.0798%" height="15" fill="rgb(208,212,30)" fg:x="175" fg:w="1"/><text x="14.2165%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9665%" y="533" width="0.0798%" height="15" fill="rgb(215,190,19)" fg:x="175" fg:w="1"/><text x="14.2165%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (18 samples, 1.44%)</title><rect x="12.6895%" y="645" width="1.4366%" height="15" fill="rgb(207,164,53)" fg:x="159" fg:w="18"/><text x="12.9395%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.8867%" y="629" width="0.2394%" height="15" fill="rgb(213,87,49)" fg:x="174" fg:w="3"/><text x="14.1367%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.8867%" y="613" width="0.2394%" height="15" fill="rgb(241,216,24)" fg:x="174" fg:w="3"/><text x="14.1367%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0463%" y="597" width="0.0798%" height="15" fill="rgb(241,123,45)" fg:x="176" fg:w="1"/><text x="14.2963%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="581" width="0.0798%" height="15" fill="rgb(220,36,15)" fg:x="176" fg:w="1"/><text x="14.2963%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.0463%" y="565" width="0.0798%" height="15" fill="rgb(215,202,9)" fg:x="176" fg:w="1"/><text x="14.2963%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0463%" y="549" width="0.0798%" height="15" fill="rgb(252,71,26)" fg:x="176" fg:w="1"/><text x="14.2963%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.0463%" y="533" width="0.0798%" height="15" fill="rgb(243,195,19)" fg:x="176" fg:w="1"/><text x="14.2963%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.0463%" y="517" width="0.0798%" height="15" fill="rgb(207,167,27)" fg:x="176" fg:w="1"/><text x="14.2963%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="14.1261%" y="581" width="0.0798%" height="15" fill="rgb(250,146,54)" fg:x="177" fg:w="1"/><text x="14.3761%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.1261%" y="597" width="0.1596%" height="15" fill="rgb(245,79,9)" fg:x="177" fg:w="2"/><text x="14.3761%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2059%" y="581" width="0.0798%" height="15" fill="rgb(234,197,22)" fg:x="178" fg:w="1"/><text x="14.4559%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.2059%" y="565" width="0.0798%" height="15" fill="rgb(221,52,48)" fg:x="178" fg:w="1"/><text x="14.4559%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2059%" y="549" width="0.0798%" height="15" fill="rgb(235,80,0)" fg:x="178" fg:w="1"/><text x="14.4559%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.2059%" y="533" width="0.0798%" height="15" fill="rgb(221,117,53)" fg:x="178" fg:w="1"/><text x="14.4559%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2059%" y="517" width="0.0798%" height="15" fill="rgb(239,48,47)" fg:x="178" fg:w="1"/><text x="14.4559%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="14.1261%" y="629" width="0.2394%" height="15" fill="rgb(227,191,52)" fg:x="177" fg:w="3"/><text x="14.3761%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="14.1261%" y="613" width="0.2394%" height="15" fill="rgb(241,118,1)" fg:x="177" fg:w="3"/><text x="14.3761%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.2857%" y="597" width="0.0798%" height="15" fill="rgb(240,85,3)" fg:x="179" fg:w="1"/><text x="14.5357%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.2857%" y="581" width="0.0798%" height="15" fill="rgb(237,68,37)" fg:x="179" fg:w="1"/><text x="14.5357%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2857%" y="565" width="0.0798%" height="15" fill="rgb(212,9,20)" fg:x="179" fg:w="1"/><text x="14.5357%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2857%" y="549" width="0.0798%" height="15" fill="rgb(218,84,17)" fg:x="179" fg:w="1"/><text x="14.5357%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.2857%" y="533" width="0.0798%" height="15" fill="rgb(235,147,20)" fg:x="179" fg:w="1"/><text x="14.5357%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (27 samples, 2.15%)</title><rect x="12.3703%" y="709" width="2.1548%" height="15" fill="rgb(208,224,1)" fg:x="155" fg:w="27"/><text x="12.6203%" y="719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.15%)</title><rect x="12.3703%" y="693" width="2.1548%" height="15" fill="rgb(232,97,50)" fg:x="155" fg:w="27"/><text x="12.6203%" y="703.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (26 samples, 2.08%)</title><rect x="12.4501%" y="677" width="2.0750%" height="15" fill="rgb(238,15,45)" fg:x="156" fg:w="26"/><text x="12.7001%" y="687.50">p..</text></g><g><title>plugins_core::build::Build::leads_to (23 samples, 1.84%)</title><rect x="12.6895%" y="661" width="1.8356%" height="15" fill="rgb(231,46,18)" fg:x="159" fg:w="23"/><text x="12.9395%" y="671.50">p..</text></g><g><title>plugins_core::tools::leads_to (5 samples, 0.40%)</title><rect x="14.1261%" y="645" width="0.3990%" height="15" fill="rgb(254,169,10)" fg:x="177" fg:w="5"/><text x="14.3761%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.3655%" y="629" width="0.1596%" height="15" fill="rgb(243,169,30)" fg:x="180" fg:w="2"/><text x="14.6155%" y="639.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="14.3655%" y="613" width="0.1596%" height="15" fill="rgb(236,90,49)" fg:x="180" fg:w="2"/><text x="14.6155%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.4453%" y="597" width="0.0798%" height="15" fill="rgb(218,80,15)" fg:x="181" fg:w="1"/><text x="14.6953%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6049%" y="677" width="0.0798%" height="15" fill="rgb(222,115,37)" fg:x="183" fg:w="1"/><text x="14.8549%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6049%" y="661" width="0.0798%" height="15" fill="rgb(227,0,6)" fg:x="183" fg:w="1"/><text x="14.8549%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.6049%" y="645" width="0.0798%" height="15" fill="rgb(217,189,13)" fg:x="183" fg:w="1"/><text x="14.8549%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.6049%" y="629" width="0.0798%" height="15" fill="rgb(220,74,19)" fg:x="183" fg:w="1"/><text x="14.8549%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.6049%" y="613" width="0.0798%" height="15" fill="rgb(224,81,18)" fg:x="183" fg:w="1"/><text x="14.8549%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.6049%" y="597" width="0.0798%" height="15" fill="rgb(245,178,48)" fg:x="183" fg:w="1"/><text x="14.8549%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.6049%" y="581" width="0.0798%" height="15" fill="rgb(207,78,24)" fg:x="183" fg:w="1"/><text x="14.8549%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.32%)</title><rect x="14.5251%" y="693" width="0.3192%" height="15" fill="rgb(223,222,30)" fg:x="182" fg:w="4"/><text x="14.7751%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.6848%" y="677" width="0.1596%" height="15" fill="rgb(234,101,12)" fg:x="184" fg:w="2"/><text x="14.9348%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.6848%" y="661" width="0.1596%" height="15" fill="rgb(209,80,46)" fg:x="184" fg:w="2"/><text x="14.9348%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="14.7646%" y="645" width="0.0798%" height="15" fill="rgb(228,79,14)" fg:x="185" fg:w="1"/><text x="15.0146%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.7646%" y="629" width="0.0798%" height="15" fill="rgb(220,219,34)" fg:x="185" fg:w="1"/><text x="15.0146%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="14.8444%" y="645" width="0.0798%" height="15" fill="rgb(207,80,21)" fg:x="186" fg:w="1"/><text x="15.0944%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="14.9242%" y="613" width="0.0798%" height="15" fill="rgb(210,154,44)" fg:x="187" fg:w="1"/><text x="15.1742%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="14.9242%" y="645" width="0.1596%" height="15" fill="rgb(246,44,39)" fg:x="187" fg:w="2"/><text x="15.1742%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="14.9242%" y="629" width="0.1596%" height="15" fill="rgb(252,175,13)" fg:x="187" fg:w="2"/><text x="15.1742%" y="639.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="15.0040%" y="613" width="0.0798%" height="15" fill="rgb(211,50,39)" fg:x="188" fg:w="1"/><text x="15.2540%" y="623.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="15.0040%" y="597" width="0.0798%" height="15" fill="rgb(231,204,27)" fg:x="188" fg:w="1"/><text x="15.2540%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0040%" y="581" width="0.0798%" height="15" fill="rgb(253,26,34)" fg:x="188" fg:w="1"/><text x="15.2540%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.2434%" y="613" width="0.0798%" height="15" fill="rgb(207,139,38)" fg:x="191" fg:w="1"/><text x="15.4934%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.2434%" y="597" width="0.0798%" height="15" fill="rgb(248,54,27)" fg:x="191" fg:w="1"/><text x="15.4934%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.2434%" y="581" width="0.0798%" height="15" fill="rgb(234,25,33)" fg:x="191" fg:w="1"/><text x="15.4934%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.2434%" y="565" width="0.0798%" height="15" fill="rgb(249,107,47)" fg:x="191" fg:w="1"/><text x="15.4934%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.2434%" y="549" width="0.0798%" height="15" fill="rgb(230,190,31)" fg:x="191" fg:w="1"/><text x="15.4934%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.2434%" y="533" width="0.0798%" height="15" fill="rgb(238,173,45)" fg:x="191" fg:w="1"/><text x="15.4934%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="15.4030%" y="581" width="0.1596%" height="15" fill="rgb(222,16,50)" fg:x="193" fg:w="2"/><text x="15.6530%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.4828%" y="565" width="0.0798%" height="15" fill="rgb(251,204,47)" fg:x="194" fg:w="1"/><text x="15.7328%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4828%" y="549" width="0.0798%" height="15" fill="rgb(225,12,3)" fg:x="194" fg:w="1"/><text x="15.7328%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="15.4030%" y="597" width="0.2394%" height="15" fill="rgb(214,208,22)" fg:x="193" fg:w="3"/><text x="15.6530%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.5626%" y="581" width="0.0798%" height="15" fill="rgb(240,57,32)" fg:x="195" fg:w="1"/><text x="15.8126%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="15.7223%" y="581" width="0.0798%" height="15" fill="rgb(243,113,48)" fg:x="197" fg:w="1"/><text x="15.9723%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.7223%" y="565" width="0.0798%" height="15" fill="rgb(225,135,30)" fg:x="197" fg:w="1"/><text x="15.9723%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.7223%" y="549" width="0.0798%" height="15" fill="rgb(222,3,53)" fg:x="197" fg:w="1"/><text x="15.9723%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="15.8021%" y="581" width="0.3990%" height="15" fill="rgb(243,142,2)" fg:x="198" fg:w="5"/><text x="16.0521%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="15.8021%" y="565" width="0.3990%" height="15" fill="rgb(233,67,14)" fg:x="198" fg:w="5"/><text x="16.0521%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="15.8819%" y="549" width="0.3192%" height="15" fill="rgb(245,125,36)" fg:x="199" fg:w="4"/><text x="16.1319%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="15.9617%" y="533" width="0.2394%" height="15" fill="rgb(225,199,6)" fg:x="200" fg:w="3"/><text x="16.2117%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.1213%" y="517" width="0.0798%" height="15" fill="rgb(244,71,6)" fg:x="202" fg:w="1"/><text x="16.3713%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.1213%" y="501" width="0.0798%" height="15" fill="rgb(225,62,9)" fg:x="202" fg:w="1"/><text x="16.3713%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.1213%" y="485" width="0.0798%" height="15" fill="rgb(246,139,53)" fg:x="202" fg:w="1"/><text x="16.3713%" y="495.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.2011%" y="533" width="0.1596%" height="15" fill="rgb(243,161,46)" fg:x="203" fg:w="2"/><text x="16.4511%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.2011%" y="517" width="0.1596%" height="15" fill="rgb(236,153,7)" fg:x="203" fg:w="2"/><text x="16.4511%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.2809%" y="501" width="0.0798%" height="15" fill="rgb(248,42,35)" fg:x="204" fg:w="1"/><text x="16.5309%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.2809%" y="485" width="0.0798%" height="15" fill="rgb(250,17,31)" fg:x="204" fg:w="1"/><text x="16.5309%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.2809%" y="469" width="0.0798%" height="15" fill="rgb(248,138,14)" fg:x="204" fg:w="1"/><text x="16.5309%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.2809%" y="453" width="0.0798%" height="15" fill="rgb(228,161,3)" fg:x="204" fg:w="1"/><text x="16.5309%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.2809%" y="437" width="0.0798%" height="15" fill="rgb(248,116,17)" fg:x="204" fg:w="1"/><text x="16.5309%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="16.2011%" y="565" width="0.2394%" height="15" fill="rgb(207,78,24)" fg:x="203" fg:w="3"/><text x="16.4511%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.2011%" y="549" width="0.2394%" height="15" fill="rgb(234,99,48)" fg:x="203" fg:w="3"/><text x="16.4511%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3607%" y="533" width="0.0798%" height="15" fill="rgb(242,22,26)" fg:x="205" fg:w="1"/><text x="16.6107%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.3607%" y="517" width="0.0798%" height="15" fill="rgb(227,78,32)" fg:x="205" fg:w="1"/><text x="16.6107%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="16.4405%" y="565" width="0.3990%" height="15" fill="rgb(226,189,43)" fg:x="206" fg:w="5"/><text x="16.6905%" y="575.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="16.5204%" y="549" width="0.3192%" height="15" fill="rgb(227,218,35)" fg:x="207" fg:w="4"/><text x="16.7704%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="16.6002%" y="533" width="0.2394%" height="15" fill="rgb(206,111,40)" fg:x="208" fg:w="3"/><text x="16.8502%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="16.6002%" y="517" width="0.2394%" height="15" fill="rgb(208,217,22)" fg:x="208" fg:w="3"/><text x="16.8502%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.7598%" y="501" width="0.0798%" height="15" fill="rgb(248,20,20)" fg:x="210" fg:w="1"/><text x="17.0098%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.7598%" y="485" width="0.0798%" height="15" fill="rgb(239,155,16)" fg:x="210" fg:w="1"/><text x="17.0098%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.7598%" y="469" width="0.0798%" height="15" fill="rgb(238,171,46)" fg:x="210" fg:w="1"/><text x="17.0098%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="16.8396%" y="549" width="0.0798%" height="15" fill="rgb(248,11,36)" fg:x="211" fg:w="1"/><text x="17.0896%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.8396%" y="533" width="0.0798%" height="15" fill="rgb(220,148,37)" fg:x="211" fg:w="1"/><text x="17.0896%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.8396%" y="517" width="0.0798%" height="15" fill="rgb(218,144,42)" fg:x="211" fg:w="1"/><text x="17.0896%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.8396%" y="501" width="0.0798%" height="15" fill="rgb(245,20,20)" fg:x="211" fg:w="1"/><text x="17.0896%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.9194%" y="533" width="0.1596%" height="15" fill="rgb(240,111,48)" fg:x="212" fg:w="2"/><text x="17.1694%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.9992%" y="517" width="0.0798%" height="15" fill="rgb(237,225,32)" fg:x="213" fg:w="1"/><text x="17.2492%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0790%" y="533" width="0.0798%" height="15" fill="rgb(228,161,46)" fg:x="214" fg:w="1"/><text x="17.3290%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="16.9194%" y="549" width="0.3192%" height="15" fill="rgb(235,196,21)" fg:x="212" fg:w="4"/><text x="17.1694%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.1588%" y="533" width="0.0798%" height="15" fill="rgb(250,133,21)" fg:x="215" fg:w="1"/><text x="17.4088%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.1588%" y="517" width="0.0798%" height="15" fill="rgb(236,94,32)" fg:x="215" fg:w="1"/><text x="17.4088%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1588%" y="501" width="0.0798%" height="15" fill="rgb(219,176,25)" fg:x="215" fg:w="1"/><text x="17.4088%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="16.2011%" y="581" width="1.1971%" height="15" fill="rgb(211,17,43)" fg:x="203" fg:w="15"/><text x="16.4511%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="16.8396%" y="565" width="0.5587%" height="15" fill="rgb(220,75,23)" fg:x="211" fg:w="7"/><text x="17.0896%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="17.2386%" y="549" width="0.1596%" height="15" fill="rgb(215,122,32)" fg:x="216" fg:w="2"/><text x="17.4886%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (31 samples, 2.47%)</title><rect x="15.3232%" y="613" width="2.4741%" height="15" fill="rgb(218,57,38)" fg:x="192" fg:w="31"/><text x="15.5732%" y="623.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="15.6425%" y="597" width="2.1548%" height="15" fill="rgb(233,208,46)" fg:x="196" fg:w="27"/><text x="15.8925%" y="607.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="17.3982%" y="581" width="0.3990%" height="15" fill="rgb(221,35,50)" fg:x="218" fg:w="5"/><text x="17.6482%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="17.4781%" y="565" width="0.3192%" height="15" fill="rgb(229,213,29)" fg:x="219" fg:w="4"/><text x="17.7281%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="17.4781%" y="549" width="0.3192%" height="15" fill="rgb(229,110,40)" fg:x="219" fg:w="4"/><text x="17.7281%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="17.4781%" y="533" width="0.3192%" height="15" fill="rgb(247,206,19)" fg:x="219" fg:w="4"/><text x="17.7281%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="17.5579%" y="517" width="0.2394%" height="15" fill="rgb(216,229,45)" fg:x="220" fg:w="3"/><text x="17.8079%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="17.6377%" y="501" width="0.1596%" height="15" fill="rgb(205,184,31)" fg:x="221" fg:w="2"/><text x="17.8877%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Perform&gt; (1 samples, 0.08%)</title><rect x="17.7973%" y="613" width="0.0798%" height="15" fill="rgb(213,91,10)" fg:x="223" fg:w="1"/><text x="18.0473%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.9569%" y="565" width="0.1596%" height="15" fill="rgb(250,49,8)" fg:x="225" fg:w="2"/><text x="18.2069%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.1165%" y="565" width="0.0798%" height="15" fill="rgb(207,26,8)" fg:x="227" fg:w="1"/><text x="18.3665%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2761%" y="549" width="0.0798%" height="15" fill="rgb(224,2,13)" fg:x="229" fg:w="1"/><text x="18.5261%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.3559%" y="533" width="0.0798%" height="15" fill="rgb(219,108,27)" fg:x="230" fg:w="1"/><text x="18.6059%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.3559%" y="517" width="0.0798%" height="15" fill="rgb(240,89,32)" fg:x="230" fg:w="1"/><text x="18.6059%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.4358%" y="517" width="0.0798%" height="15" fill="rgb(248,205,3)" fg:x="231" fg:w="1"/><text x="18.6858%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.8771%" y="613" width="0.7183%" height="15" fill="rgb(236,197,47)" fg:x="224" fg:w="9"/><text x="18.1271%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="17.8771%" y="597" width="0.7183%" height="15" fill="rgb(244,185,52)" fg:x="224" fg:w="9"/><text x="18.1271%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="17.8771%" y="581" width="0.7183%" height="15" fill="rgb(210,206,23)" fg:x="224" fg:w="9"/><text x="18.1271%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="18.1963%" y="565" width="0.3990%" height="15" fill="rgb(251,177,30)" fg:x="228" fg:w="5"/><text x="18.4463%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="18.3559%" y="549" width="0.2394%" height="15" fill="rgb(243,27,45)" fg:x="230" fg:w="3"/><text x="18.6059%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="18.4358%" y="533" width="0.1596%" height="15" fill="rgb(248,141,51)" fg:x="231" fg:w="2"/><text x="18.6858%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.5156%" y="517" width="0.0798%" height="15" fill="rgb(235,102,15)" fg:x="232" fg:w="1"/><text x="18.7656%" y="527.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="18.5954%" y="597" width="0.2394%" height="15" fill="rgb(214,164,53)" fg:x="233" fg:w="3"/><text x="18.8454%" y="607.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="18.6752%" y="581" width="0.1596%" height="15" fill="rgb(228,18,51)" fg:x="234" fg:w="2"/><text x="18.9252%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.7550%" y="565" width="0.0798%" height="15" fill="rgb(205,211,11)" fg:x="235" fg:w="1"/><text x="19.0050%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.7550%" y="549" width="0.0798%" height="15" fill="rgb(208,63,6)" fg:x="235" fg:w="1"/><text x="19.0050%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7550%" y="533" width="0.0798%" height="15" fill="rgb(245,76,14)" fg:x="235" fg:w="1"/><text x="19.0050%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8348%" y="565" width="0.0798%" height="15" fill="rgb(234,176,34)" fg:x="236" fg:w="1"/><text x="19.0848%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="18.9146%" y="565" width="0.1596%" height="15" fill="rgb(243,156,42)" fg:x="237" fg:w="2"/><text x="19.1646%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.9944%" y="549" width="0.0798%" height="15" fill="rgb(237,182,10)" fg:x="238" fg:w="1"/><text x="19.2444%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="18.9944%" y="533" width="0.0798%" height="15" fill="rgb(244,117,0)" fg:x="238" fg:w="1"/><text x="19.2444%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="19.0742%" y="565" width="0.0798%" height="15" fill="rgb(239,91,50)" fg:x="239" fg:w="1"/><text x="19.3242%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.0742%" y="549" width="0.0798%" height="15" fill="rgb(206,38,9)" fg:x="239" fg:w="1"/><text x="19.3242%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.0742%" y="533" width="0.0798%" height="15" fill="rgb(205,25,10)" fg:x="239" fg:w="1"/><text x="19.3242%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="19.0742%" y="517" width="0.0798%" height="15" fill="rgb(206,224,7)" fg:x="239" fg:w="1"/><text x="19.3242%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.3935%" y="517" width="0.1596%" height="15" fill="rgb(227,157,10)" fg:x="243" fg:w="2"/><text x="19.6435%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="19.3935%" y="501" width="0.1596%" height="15" fill="rgb(214,157,37)" fg:x="243" fg:w="2"/><text x="19.6435%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.3935%" y="485" width="0.1596%" height="15" fill="rgb(209,180,35)" fg:x="243" fg:w="2"/><text x="19.6435%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="19.5531%" y="501" width="0.0798%" height="15" fill="rgb(216,174,49)" fg:x="245" fg:w="1"/><text x="19.8031%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.5531%" y="485" width="0.0798%" height="15" fill="rgb(205,96,20)" fg:x="245" fg:w="1"/><text x="19.8031%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="19.5531%" y="517" width="0.1596%" height="15" fill="rgb(214,220,39)" fg:x="245" fg:w="2"/><text x="19.8031%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6329%" y="501" width="0.0798%" height="15" fill="rgb(245,126,30)" fg:x="246" fg:w="1"/><text x="19.8829%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.7127%" y="501" width="0.0798%" height="15" fill="rgb(215,88,33)" fg:x="247" fg:w="1"/><text x="19.9627%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="19.7925%" y="469" width="0.0798%" height="15" fill="rgb(210,1,49)" fg:x="248" fg:w="1"/><text x="20.0425%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="19.3136%" y="549" width="0.7183%" height="15" fill="rgb(207,133,3)" fg:x="242" fg:w="9"/><text x="19.5636%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="19.3935%" y="533" width="0.6385%" height="15" fill="rgb(231,47,43)" fg:x="243" fg:w="8"/><text x="19.6435%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="19.7127%" y="517" width="0.3192%" height="15" fill="rgb(245,64,1)" fg:x="247" fg:w="4"/><text x="19.9627%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="19.7925%" y="501" width="0.2394%" height="15" fill="rgb(253,145,20)" fg:x="248" fg:w="3"/><text x="20.0425%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="19.7925%" y="485" width="0.2394%" height="15" fill="rgb(211,39,18)" fg:x="248" fg:w="3"/><text x="20.0425%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="19.8723%" y="469" width="0.1596%" height="15" fill="rgb(223,225,18)" fg:x="249" fg:w="2"/><text x="20.1223%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="19.8723%" y="453" width="0.1596%" height="15" fill="rgb(210,202,44)" fg:x="249" fg:w="2"/><text x="20.1223%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="19.8723%" y="437" width="0.1596%" height="15" fill="rgb(231,138,36)" fg:x="249" fg:w="2"/><text x="20.1223%" y="447.50"></text></g><g><title>engine::session::Session::flush (70 samples, 5.59%)</title><rect x="14.5251%" y="709" width="5.5866%" height="15" fill="rgb(237,115,25)" fg:x="182" fg:w="70"/><text x="14.7751%" y="719.50">engine:..</text></g><g><title>engine::session::Session::save_changes (66 samples, 5.27%)</title><rect x="14.8444%" y="693" width="5.2674%" height="15" fill="rgb(215,53,48)" fg:x="186" fg:w="66"/><text x="15.0944%" y="703.50">engine..</text></g><g><title>engine::session::state::State::close (66 samples, 5.27%)</title><rect x="14.8444%" y="677" width="5.2674%" height="15" fill="rgb(243,193,24)" fg:x="186" fg:w="66"/><text x="15.0944%" y="687.50">engine..</text></g><g><title>engine::session::state::State::flush_entities (66 samples, 5.27%)</title><rect x="14.8444%" y="661" width="5.2674%" height="15" fill="rgb(210,106,28)" fg:x="186" fg:w="66"/><text x="15.0944%" y="671.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (63 samples, 5.03%)</title><rect x="15.0838%" y="645" width="5.0279%" height="15" fill="rgb(249,192,0)" fg:x="189" fg:w="63"/><text x="15.3338%" y="655.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.03%)</title><rect x="15.0838%" y="629" width="5.0279%" height="15" fill="rgb(224,96,21)" fg:x="189" fg:w="63"/><text x="15.3338%" y="639.50">engine..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.52%)</title><rect x="18.5954%" y="613" width="1.5164%" height="15" fill="rgb(243,160,19)" fg:x="233" fg:w="19"/><text x="18.8454%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.28%)</title><rect x="18.8348%" y="597" width="1.2769%" height="15" fill="rgb(219,205,50)" fg:x="236" fg:w="16"/><text x="19.0848%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 1.28%)</title><rect x="18.8348%" y="581" width="1.2769%" height="15" fill="rgb(218,175,44)" fg:x="236" fg:w="16"/><text x="19.0848%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.96%)</title><rect x="19.1540%" y="565" width="0.9577%" height="15" fill="rgb(251,84,47)" fg:x="240" fg:w="12"/><text x="19.4040%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0319%" y="549" width="0.0798%" height="15" fill="rgb(241,14,16)" fg:x="251" fg:w="1"/><text x="20.2819%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.0319%" y="533" width="0.0798%" height="15" fill="rgb(207,142,28)" fg:x="251" fg:w="1"/><text x="20.2819%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.0319%" y="517" width="0.0798%" height="15" fill="rgb(208,116,22)" fg:x="251" fg:w="1"/><text x="20.2819%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.1117%" y="645" width="0.0798%" height="15" fill="rgb(210,0,43)" fg:x="252" fg:w="1"/><text x="20.3617%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.1915%" y="549" width="0.0798%" height="15" fill="rgb(246,33,21)" fg:x="253" fg:w="1"/><text x="20.4415%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.1915%" y="645" width="0.1596%" height="15" fill="rgb(208,158,54)" fg:x="253" fg:w="2"/><text x="20.4415%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.1915%" y="629" width="0.1596%" height="15" fill="rgb(218,99,29)" fg:x="253" fg:w="2"/><text x="20.4415%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.1915%" y="613" width="0.1596%" height="15" fill="rgb(226,29,7)" fg:x="253" fg:w="2"/><text x="20.4415%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.1915%" y="597" width="0.1596%" height="15" fill="rgb(206,178,46)" fg:x="253" fg:w="2"/><text x="20.4415%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.1915%" y="581" width="0.1596%" height="15" fill="rgb(205,169,32)" fg:x="253" fg:w="2"/><text x="20.4415%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.1915%" y="565" width="0.1596%" height="15" fill="rgb(217,4,13)" fg:x="253" fg:w="2"/><text x="20.4415%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.2713%" y="549" width="0.0798%" height="15" fill="rgb(210,140,37)" fg:x="254" fg:w="1"/><text x="20.5213%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.2713%" y="533" width="0.0798%" height="15" fill="rgb(229,80,10)" fg:x="254" fg:w="1"/><text x="20.5213%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="20.3512%" y="613" width="0.2394%" height="15" fill="rgb(212,175,34)" fg:x="255" fg:w="3"/><text x="20.6012%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.4310%" y="597" width="0.1596%" height="15" fill="rgb(216,207,24)" fg:x="256" fg:w="2"/><text x="20.6810%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.4310%" y="581" width="0.1596%" height="15" fill="rgb(234,163,3)" fg:x="256" fg:w="2"/><text x="20.6810%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="565" width="0.0798%" height="15" fill="rgb(248,101,16)" fg:x="257" fg:w="1"/><text x="20.7608%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5108%" y="549" width="0.0798%" height="15" fill="rgb(209,152,54)" fg:x="257" fg:w="1"/><text x="20.7608%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.5108%" y="533" width="0.0798%" height="15" fill="rgb(229,124,51)" fg:x="257" fg:w="1"/><text x="20.7608%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.5108%" y="517" width="0.0798%" height="15" fill="rgb(219,83,18)" fg:x="257" fg:w="1"/><text x="20.7608%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.5108%" y="501" width="0.0798%" height="15" fill="rgb(206,29,38)" fg:x="257" fg:w="1"/><text x="20.7608%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5108%" y="485" width="0.0798%" height="15" fill="rgb(245,123,23)" fg:x="257" fg:w="1"/><text x="20.7608%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5108%" y="469" width="0.0798%" height="15" fill="rgb(238,50,33)" fg:x="257" fg:w="1"/><text x="20.7608%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.5108%" y="453" width="0.0798%" height="15" fill="rgb(234,165,23)" fg:x="257" fg:w="1"/><text x="20.7608%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.5108%" y="437" width="0.0798%" height="15" fill="rgb(211,82,31)" fg:x="257" fg:w="1"/><text x="20.7608%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.5108%" y="421" width="0.0798%" height="15" fill="rgb(224,166,46)" fg:x="257" fg:w="1"/><text x="20.7608%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.5108%" y="405" width="0.0798%" height="15" fill="rgb(211,13,8)" fg:x="257" fg:w="1"/><text x="20.7608%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5108%" y="389" width="0.0798%" height="15" fill="rgb(212,7,42)" fg:x="257" fg:w="1"/><text x="20.7608%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.5906%" y="549" width="0.0798%" height="15" fill="rgb(249,102,19)" fg:x="258" fg:w="1"/><text x="20.8406%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="20.5906%" y="533" width="0.0798%" height="15" fill="rgb(225,41,13)" fg:x="258" fg:w="1"/><text x="20.8406%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="20.1117%" y="677" width="0.6385%" height="15" fill="rgb(220,65,27)" fg:x="252" fg:w="8"/><text x="20.3617%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="20.1117%" y="661" width="0.6385%" height="15" fill="rgb(206,4,41)" fg:x="252" fg:w="8"/><text x="20.3617%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="20.3512%" y="645" width="0.3990%" height="15" fill="rgb(219,60,39)" fg:x="255" fg:w="5"/><text x="20.6012%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="20.3512%" y="629" width="0.3990%" height="15" fill="rgb(226,4,38)" fg:x="255" fg:w="5"/><text x="20.6012%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.5906%" y="613" width="0.1596%" height="15" fill="rgb(250,52,3)" fg:x="258" fg:w="2"/><text x="20.8406%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5906%" y="597" width="0.1596%" height="15" fill="rgb(234,93,0)" fg:x="258" fg:w="2"/><text x="20.8406%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="20.5906%" y="581" width="0.1596%" height="15" fill="rgb(251,47,47)" fg:x="258" fg:w="2"/><text x="20.8406%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.5906%" y="565" width="0.1596%" height="15" fill="rgb(205,166,47)" fg:x="258" fg:w="2"/><text x="20.8406%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="20.6704%" y="549" width="0.0798%" height="15" fill="rgb(231,148,8)" fg:x="259" fg:w="1"/><text x="20.9204%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6704%" y="533" width="0.0798%" height="15" fill="rgb(244,185,19)" fg:x="259" fg:w="1"/><text x="20.9204%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.8300%" y="629" width="0.0798%" height="15" fill="rgb(224,201,45)" fg:x="261" fg:w="1"/><text x="21.0800%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="20.7502%" y="677" width="0.2394%" height="15" fill="rgb(240,77,39)" fg:x="260" fg:w="3"/><text x="21.0002%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="20.7502%" y="661" width="0.2394%" height="15" fill="rgb(248,211,29)" fg:x="260" fg:w="3"/><text x="21.0002%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="20.7502%" y="645" width="0.2394%" height="15" fill="rgb(232,214,46)" fg:x="260" fg:w="3"/><text x="21.0002%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.9098%" y="629" width="0.0798%" height="15" fill="rgb(213,99,54)" fg:x="262" fg:w="1"/><text x="21.1598%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9896%" y="661" width="0.0798%" height="15" fill="rgb(240,19,46)" fg:x="263" fg:w="1"/><text x="21.2396%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="21.1492%" y="613" width="0.0798%" height="15" fill="rgb(243,89,10)" fg:x="265" fg:w="1"/><text x="21.3992%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2291%" y="597" width="0.0798%" height="15" fill="rgb(249,28,32)" fg:x="266" fg:w="1"/><text x="21.4791%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2291%" y="581" width="0.0798%" height="15" fill="rgb(253,30,9)" fg:x="266" fg:w="1"/><text x="21.4791%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.2291%" y="565" width="0.0798%" height="15" fill="rgb(217,2,26)" fg:x="266" fg:w="1"/><text x="21.4791%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.2291%" y="549" width="0.0798%" height="15" fill="rgb(220,28,10)" fg:x="266" fg:w="1"/><text x="21.4791%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="21.0694%" y="661" width="0.3192%" height="15" fill="rgb(228,167,49)" fg:x="264" fg:w="4"/><text x="21.3194%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="21.0694%" y="645" width="0.3192%" height="15" fill="rgb(238,212,3)" fg:x="264" fg:w="4"/><text x="21.3194%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="21.0694%" y="629" width="0.3192%" height="15" fill="rgb(229,134,44)" fg:x="264" fg:w="4"/><text x="21.3194%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.2291%" y="613" width="0.1596%" height="15" fill="rgb(208,71,4)" fg:x="266" fg:w="2"/><text x="21.4791%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.3089%" y="597" width="0.0798%" height="15" fill="rgb(221,205,45)" fg:x="267" fg:w="1"/><text x="21.5589%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="20.9896%" y="677" width="0.4789%" height="15" fill="rgb(215,132,38)" fg:x="263" fg:w="6"/><text x="21.2396%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="21.3887%" y="661" width="0.0798%" height="15" fill="rgb(227,158,6)" fg:x="268" fg:w="1"/><text x="21.6387%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.3887%" y="645" width="0.0798%" height="15" fill="rgb(250,10,38)" fg:x="268" fg:w="1"/><text x="21.6387%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (18 samples, 1.44%)</title><rect x="20.1117%" y="709" width="1.4366%" height="15" fill="rgb(225,171,40)" fg:x="252" fg:w="18"/><text x="20.3617%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (18 samples, 1.44%)</title><rect x="20.1117%" y="693" width="1.4366%" height="15" fill="rgb(238,17,43)" fg:x="252" fg:w="18"/><text x="20.3617%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="21.4685%" y="677" width="0.0798%" height="15" fill="rgb(208,145,4)" fg:x="269" fg:w="1"/><text x="21.7185%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4685%" y="661" width="0.0798%" height="15" fill="rgb(232,82,7)" fg:x="269" fg:w="1"/><text x="21.7185%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.4685%" y="645" width="0.0798%" height="15" fill="rgb(205,166,38)" fg:x="269" fg:w="1"/><text x="21.7185%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="21.5483%" y="709" width="0.0798%" height="15" fill="rgb(240,228,4)" fg:x="270" fg:w="1"/><text x="21.7983%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="21.5483%" y="693" width="0.0798%" height="15" fill="rgb(233,121,40)" fg:x="270" fg:w="1"/><text x="21.7983%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="21.5483%" y="677" width="0.0798%" height="15" fill="rgb(243,84,30)" fg:x="270" fg:w="1"/><text x="21.7983%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.5483%" y="661" width="0.0798%" height="15" fill="rgb(235,81,48)" fg:x="270" fg:w="1"/><text x="21.7983%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5483%" y="645" width="0.0798%" height="15" fill="rgb(218,137,0)" fg:x="270" fg:w="1"/><text x="21.7983%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="21.5483%" y="629" width="0.0798%" height="15" fill="rgb(223,151,48)" fg:x="270" fg:w="1"/><text x="21.7983%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="21.5483%" y="613" width="0.0798%" height="15" fill="rgb(247,30,19)" fg:x="270" fg:w="1"/><text x="21.7983%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="21.5483%" y="597" width="0.0798%" height="15" fill="rgb(205,129,29)" fg:x="270" fg:w="1"/><text x="21.7983%" y="607.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="21.6281%" y="709" width="0.0798%" height="15" fill="rgb(222,29,2)" fg:x="271" fg:w="1"/><text x="21.8781%" y="719.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="21.6281%" y="693" width="0.0798%" height="15" fill="rgb(232,145,33)" fg:x="271" fg:w="1"/><text x="21.8781%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.7079%" y="597" width="0.0798%" height="15" fill="rgb(217,30,31)" fg:x="272" fg:w="1"/><text x="21.9579%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7079%" y="581" width="0.0798%" height="15" fill="rgb(243,22,52)" fg:x="272" fg:w="1"/><text x="21.9579%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="21.7079%" y="661" width="0.1596%" height="15" fill="rgb(254,228,14)" fg:x="272" fg:w="2"/><text x="21.9579%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.7079%" y="645" width="0.1596%" height="15" fill="rgb(231,45,50)" fg:x="272" fg:w="2"/><text x="21.9579%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.7079%" y="629" width="0.1596%" height="15" fill="rgb(248,125,3)" fg:x="272" fg:w="2"/><text x="21.9579%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="21.7079%" y="613" width="0.1596%" height="15" fill="rgb(213,76,9)" fg:x="272" fg:w="2"/><text x="21.9579%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7877%" y="597" width="0.0798%" height="15" fill="rgb(238,108,21)" fg:x="273" fg:w="1"/><text x="22.0377%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="21.8675%" y="613" width="0.0798%" height="15" fill="rgb(229,214,19)" fg:x="274" fg:w="1"/><text x="22.1175%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="21.8675%" y="597" width="0.0798%" height="15" fill="rgb(252,201,5)" fg:x="274" fg:w="1"/><text x="22.1175%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="21.8675%" y="645" width="0.1596%" height="15" fill="rgb(233,165,49)" fg:x="274" fg:w="2"/><text x="22.1175%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.8675%" y="629" width="0.1596%" height="15" fill="rgb(208,165,19)" fg:x="274" fg:w="2"/><text x="22.1175%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.9473%" y="613" width="0.0798%" height="15" fill="rgb(216,220,31)" fg:x="275" fg:w="1"/><text x="22.1973%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9473%" y="597" width="0.0798%" height="15" fill="rgb(214,8,31)" fg:x="275" fg:w="1"/><text x="22.1973%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.9473%" y="581" width="0.0798%" height="15" fill="rgb(220,32,32)" fg:x="275" fg:w="1"/><text x="22.1973%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.9473%" y="565" width="0.0798%" height="15" fill="rgb(237,172,34)" fg:x="275" fg:w="1"/><text x="22.1973%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="21.8675%" y="661" width="0.2394%" height="15" fill="rgb(240,209,5)" fg:x="274" fg:w="3"/><text x="22.1175%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.0271%" y="645" width="0.0798%" height="15" fill="rgb(221,219,1)" fg:x="276" fg:w="1"/><text x="22.2771%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0271%" y="629" width="0.0798%" height="15" fill="rgb(237,90,36)" fg:x="276" fg:w="1"/><text x="22.2771%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.0271%" y="613" width="0.0798%" height="15" fill="rgb(245,14,51)" fg:x="276" fg:w="1"/><text x="22.2771%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0271%" y="597" width="0.0798%" height="15" fill="rgb(211,71,49)" fg:x="276" fg:w="1"/><text x="22.2771%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.0271%" y="581" width="0.0798%" height="15" fill="rgb(230,223,9)" fg:x="276" fg:w="1"/><text x="22.2771%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.0271%" y="565" width="0.0798%" height="15" fill="rgb(212,33,31)" fg:x="276" fg:w="1"/><text x="22.2771%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.0271%" y="549" width="0.0798%" height="15" fill="rgb(218,141,5)" fg:x="276" fg:w="1"/><text x="22.2771%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.0271%" y="533" width="0.0798%" height="15" fill="rgb(239,194,8)" fg:x="276" fg:w="1"/><text x="22.2771%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0271%" y="517" width="0.0798%" height="15" fill="rgb(225,119,29)" fg:x="276" fg:w="1"/><text x="22.2771%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="22.0271%" y="501" width="0.0798%" height="15" fill="rgb(233,32,3)" fg:x="276" fg:w="1"/><text x="22.2771%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1069%" y="581" width="0.0798%" height="15" fill="rgb(248,126,40)" fg:x="277" fg:w="1"/><text x="22.3569%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.1868%" y="581" width="0.0798%" height="15" fill="rgb(213,102,53)" fg:x="278" fg:w="1"/><text x="22.4368%" y="591.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="22.1069%" y="613" width="0.2394%" height="15" fill="rgb(212,69,15)" fg:x="277" fg:w="3"/><text x="22.3569%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="22.1069%" y="597" width="0.2394%" height="15" fill="rgb(253,39,34)" fg:x="277" fg:w="3"/><text x="22.3569%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2666%" y="581" width="0.0798%" height="15" fill="rgb(205,189,54)" fg:x="279" fg:w="1"/><text x="22.5166%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.2666%" y="565" width="0.0798%" height="15" fill="rgb(234,229,45)" fg:x="279" fg:w="1"/><text x="22.5166%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.2666%" y="549" width="0.0798%" height="15" fill="rgb(243,79,48)" fg:x="279" fg:w="1"/><text x="22.5166%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="22.2666%" y="533" width="0.0798%" height="15" fill="rgb(206,71,50)" fg:x="279" fg:w="1"/><text x="22.5166%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.3464%" y="597" width="0.0798%" height="15" fill="rgb(209,32,17)" fg:x="280" fg:w="1"/><text x="22.5964%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="22.1069%" y="661" width="0.3990%" height="15" fill="rgb(219,229,6)" fg:x="277" fg:w="5"/><text x="22.3569%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="22.1069%" y="645" width="0.3990%" height="15" fill="rgb(226,25,27)" fg:x="277" fg:w="5"/><text x="22.3569%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="22.1069%" y="629" width="0.3990%" height="15" fill="rgb(218,185,23)" fg:x="277" fg:w="5"/><text x="22.3569%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.3464%" y="613" width="0.1596%" height="15" fill="rgb(242,123,5)" fg:x="280" fg:w="2"/><text x="22.5964%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="22.4262%" y="597" width="0.0798%" height="15" fill="rgb(215,53,19)" fg:x="281" fg:w="1"/><text x="22.6762%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.4262%" y="581" width="0.0798%" height="15" fill="rgb(233,20,30)" fg:x="281" fg:w="1"/><text x="22.6762%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.4262%" y="565" width="0.0798%" height="15" fill="rgb(209,67,20)" fg:x="281" fg:w="1"/><text x="22.6762%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="597" width="0.0798%" height="15" fill="rgb(227,181,50)" fg:x="283" fg:w="1"/><text x="22.8358%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5858%" y="581" width="0.0798%" height="15" fill="rgb(252,75,38)" fg:x="283" fg:w="1"/><text x="22.8358%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.5060%" y="645" width="0.2394%" height="15" fill="rgb(235,9,33)" fg:x="282" fg:w="3"/><text x="22.7560%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.5060%" y="629" width="0.2394%" height="15" fill="rgb(208,87,30)" fg:x="282" fg:w="3"/><text x="22.7560%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.5858%" y="613" width="0.1596%" height="15" fill="rgb(215,199,39)" fg:x="283" fg:w="2"/><text x="22.8358%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6656%" y="597" width="0.0798%" height="15" fill="rgb(246,208,12)" fg:x="284" fg:w="1"/><text x="22.9156%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.6656%" y="581" width="0.0798%" height="15" fill="rgb(206,195,10)" fg:x="284" fg:w="1"/><text x="22.9156%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.6656%" y="565" width="0.0798%" height="15" fill="rgb(244,1,30)" fg:x="284" fg:w="1"/><text x="22.9156%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.6656%" y="549" width="0.0798%" height="15" fill="rgb(230,83,5)" fg:x="284" fg:w="1"/><text x="22.9156%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.6656%" y="533" width="0.0798%" height="15" fill="rgb(239,62,17)" fg:x="284" fg:w="1"/><text x="22.9156%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6656%" y="517" width="0.0798%" height="15" fill="rgb(252,193,41)" fg:x="284" fg:w="1"/><text x="22.9156%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6656%" y="501" width="0.0798%" height="15" fill="rgb(216,142,19)" fg:x="284" fg:w="1"/><text x="22.9156%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.6656%" y="485" width="0.0798%" height="15" fill="rgb(240,81,38)" fg:x="284" fg:w="1"/><text x="22.9156%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.6656%" y="469" width="0.0798%" height="15" fill="rgb(240,109,40)" fg:x="284" fg:w="1"/><text x="22.9156%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.6656%" y="453" width="0.0798%" height="15" fill="rgb(230,123,10)" fg:x="284" fg:w="1"/><text x="22.9156%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.6656%" y="437" width="0.0798%" height="15" fill="rgb(253,42,32)" fg:x="284" fg:w="1"/><text x="22.9156%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="22.5060%" y="661" width="0.3192%" height="15" fill="rgb(218,154,8)" fg:x="282" fg:w="4"/><text x="22.7560%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="22.7454%" y="645" width="0.0798%" height="15" fill="rgb(216,197,10)" fg:x="285" fg:w="1"/><text x="22.9954%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="22.7454%" y="629" width="0.0798%" height="15" fill="rgb(223,107,12)" fg:x="285" fg:w="1"/><text x="22.9954%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="22.7454%" y="613" width="0.0798%" height="15" fill="rgb(241,174,42)" fg:x="285" fg:w="1"/><text x="22.9954%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7454%" y="597" width="0.0798%" height="15" fill="rgb(231,78,20)" fg:x="285" fg:w="1"/><text x="22.9954%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="22.7454%" y="581" width="0.0798%" height="15" fill="rgb(230,208,49)" fg:x="285" fg:w="1"/><text x="22.9954%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="22.7454%" y="565" width="0.0798%" height="15" fill="rgb(238,11,34)" fg:x="285" fg:w="1"/><text x="22.9954%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="22.7454%" y="549" width="0.0798%" height="15" fill="rgb(210,130,26)" fg:x="285" fg:w="1"/><text x="22.9954%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="22.7454%" y="533" width="0.0798%" height="15" fill="rgb(242,131,11)" fg:x="285" fg:w="1"/><text x="22.9954%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="22.7454%" y="517" width="0.0798%" height="15" fill="rgb(237,38,28)" fg:x="285" fg:w="1"/><text x="22.9954%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.7454%" y="501" width="0.0798%" height="15" fill="rgb(244,180,43)" fg:x="285" fg:w="1"/><text x="22.9954%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="22.7454%" y="485" width="0.0798%" height="15" fill="rgb(214,171,19)" fg:x="285" fg:w="1"/><text x="22.9954%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="22.7454%" y="469" width="0.0798%" height="15" fill="rgb(252,101,45)" fg:x="285" fg:w="1"/><text x="22.9954%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="22.7454%" y="453" width="0.0798%" height="15" fill="rgb(211,96,33)" fg:x="285" fg:w="1"/><text x="22.9954%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="22.7454%" y="437" width="0.0798%" height="15" fill="rgb(207,80,25)" fg:x="285" fg:w="1"/><text x="22.9954%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="22.7454%" y="421" width="0.0798%" height="15" fill="rgb(225,15,35)" fg:x="285" fg:w="1"/><text x="22.9954%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="22.7454%" y="405" width="0.0798%" height="15" fill="rgb(214,93,43)" fg:x="285" fg:w="1"/><text x="22.9954%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="22.7454%" y="389" width="0.0798%" height="15" fill="rgb(248,42,37)" fg:x="285" fg:w="1"/><text x="22.9954%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="22.7454%" y="373" width="0.0798%" height="15" fill="rgb(217,135,32)" fg:x="285" fg:w="1"/><text x="22.9954%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.8252%" y="629" width="0.0798%" height="15" fill="rgb(216,74,28)" fg:x="286" fg:w="1"/><text x="23.0752%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.8252%" y="613" width="0.0798%" height="15" fill="rgb(247,108,16)" fg:x="286" fg:w="1"/><text x="23.0752%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8252%" y="597" width="0.0798%" height="15" fill="rgb(205,219,30)" fg:x="286" fg:w="1"/><text x="23.0752%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8252%" y="581" width="0.0798%" height="15" fill="rgb(241,122,9)" fg:x="286" fg:w="1"/><text x="23.0752%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.8252%" y="565" width="0.0798%" height="15" fill="rgb(216,148,50)" fg:x="286" fg:w="1"/><text x="23.0752%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.8252%" y="549" width="0.0798%" height="15" fill="rgb(226,154,2)" fg:x="286" fg:w="1"/><text x="23.0752%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="21.7079%" y="677" width="1.2769%" height="15" fill="rgb(220,128,1)" fg:x="272" fg:w="16"/><text x="21.9579%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="22.8252%" y="661" width="0.1596%" height="15" fill="rgb(245,185,29)" fg:x="286" fg:w="2"/><text x="23.0752%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="22.8252%" y="645" width="0.1596%" height="15" fill="rgb(243,161,2)" fg:x="286" fg:w="2"/><text x="23.0752%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.9050%" y="629" width="0.0798%" height="15" fill="rgb(249,215,17)" fg:x="287" fg:w="1"/><text x="23.1550%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.9050%" y="613" width="0.0798%" height="15" fill="rgb(237,67,11)" fg:x="287" fg:w="1"/><text x="23.1550%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9050%" y="597" width="0.0798%" height="15" fill="rgb(239,17,24)" fg:x="287" fg:w="1"/><text x="23.1550%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9050%" y="581" width="0.0798%" height="15" fill="rgb(215,97,29)" fg:x="287" fg:w="1"/><text x="23.1550%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9050%" y="565" width="0.0798%" height="15" fill="rgb(253,228,42)" fg:x="287" fg:w="1"/><text x="23.1550%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9050%" y="549" width="0.0798%" height="15" fill="rgb(240,85,2)" fg:x="287" fg:w="1"/><text x="23.1550%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9050%" y="533" width="0.0798%" height="15" fill="rgb(214,155,4)" fg:x="287" fg:w="1"/><text x="23.1550%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.36%)</title><rect x="21.7079%" y="693" width="1.3567%" height="15" fill="rgb(247,120,22)" fg:x="272" fg:w="17"/><text x="21.9579%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.9848%" y="677" width="0.0798%" height="15" fill="rgb(211,208,6)" fg:x="288" fg:w="1"/><text x="23.2348%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.9848%" y="661" width="0.0798%" height="15" fill="rgb(235,99,41)" fg:x="288" fg:w="1"/><text x="23.2348%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9848%" y="645" width="0.0798%" height="15" fill="rgb(223,28,8)" fg:x="288" fg:w="1"/><text x="23.2348%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9848%" y="629" width="0.0798%" height="15" fill="rgb(212,71,20)" fg:x="288" fg:w="1"/><text x="23.2348%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9848%" y="613" width="0.0798%" height="15" fill="rgb(206,85,3)" fg:x="288" fg:w="1"/><text x="23.2348%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9848%" y="597" width="0.0798%" height="15" fill="rgb(244,180,11)" fg:x="288" fg:w="1"/><text x="23.2348%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="22.9848%" y="581" width="0.0798%" height="15" fill="rgb(223,16,21)" fg:x="288" fg:w="1"/><text x="23.2348%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.9848%" y="565" width="0.0798%" height="15" fill="rgb(238,85,42)" fg:x="288" fg:w="1"/><text x="23.2348%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.9848%" y="549" width="0.0798%" height="15" fill="rgb(205,85,8)" fg:x="288" fg:w="1"/><text x="23.2348%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0646%" y="677" width="0.0798%" height="15" fill="rgb(217,190,15)" fg:x="289" fg:w="1"/><text x="23.3146%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="23.1445%" y="677" width="0.0798%" height="15" fill="rgb(243,192,23)" fg:x="290" fg:w="1"/><text x="23.3945%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="23.1445%" y="661" width="0.0798%" height="15" fill="rgb(223,220,37)" fg:x="290" fg:w="1"/><text x="23.3945%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.1445%" y="645" width="0.0798%" height="15" fill="rgb(208,41,17)" fg:x="290" fg:w="1"/><text x="23.3945%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.1445%" y="629" width="0.0798%" height="15" fill="rgb(224,188,7)" fg:x="290" fg:w="1"/><text x="23.3945%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="23.2243%" y="677" width="0.2394%" height="15" fill="rgb(236,16,50)" fg:x="291" fg:w="3"/><text x="23.4743%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="23.2243%" y="661" width="0.2394%" height="15" fill="rgb(238,6,24)" fg:x="291" fg:w="3"/><text x="23.4743%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.3839%" y="645" width="0.0798%" height="15" fill="rgb(253,67,45)" fg:x="293" fg:w="1"/><text x="23.6339%" y="655.50"></text></g><g><title>plugins_core::build::Build::occupying (23 samples, 1.84%)</title><rect x="21.7079%" y="709" width="1.8356%" height="15" fill="rgb(210,89,32)" fg:x="272" fg:w="23"/><text x="21.9579%" y="719.50">p..</text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.48%)</title><rect x="23.0646%" y="693" width="0.4789%" height="15" fill="rgb(208,89,9)" fg:x="289" fg:w="6"/><text x="23.3146%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.4637%" y="677" width="0.0798%" height="15" fill="rgb(222,180,44)" fg:x="294" fg:w="1"/><text x="23.7137%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4637%" y="661" width="0.0798%" height="15" fill="rgb(250,181,46)" fg:x="294" fg:w="1"/><text x="23.7137%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4637%" y="645" width="0.0798%" height="15" fill="rgb(210,190,26)" fg:x="294" fg:w="1"/><text x="23.7137%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4637%" y="629" width="0.0798%" height="15" fill="rgb(253,49,13)" fg:x="294" fg:w="1"/><text x="23.7137%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.4637%" y="613" width="0.0798%" height="15" fill="rgb(240,184,42)" fg:x="294" fg:w="1"/><text x="23.7137%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4637%" y="597" width="0.0798%" height="15" fill="rgb(246,59,37)" fg:x="294" fg:w="1"/><text x="23.7137%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.5435%" y="661" width="0.0798%" height="15" fill="rgb(207,134,54)" fg:x="295" fg:w="1"/><text x="23.7935%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.5435%" y="645" width="0.0798%" height="15" fill="rgb(250,122,24)" fg:x="295" fg:w="1"/><text x="23.7935%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="629" width="0.0798%" height="15" fill="rgb(239,206,3)" fg:x="295" fg:w="1"/><text x="23.7935%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="613" width="0.0798%" height="15" fill="rgb(253,220,32)" fg:x="295" fg:w="1"/><text x="23.7935%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.5435%" y="597" width="0.0798%" height="15" fill="rgb(209,217,48)" fg:x="295" fg:w="1"/><text x="23.7935%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.5435%" y="581" width="0.0798%" height="15" fill="rgb(242,91,39)" fg:x="295" fg:w="1"/><text x="23.7935%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="23.7031%" y="645" width="0.0798%" height="15" fill="rgb(228,4,13)" fg:x="297" fg:w="1"/><text x="23.9531%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.7031%" y="629" width="0.0798%" height="15" fill="rgb(223,133,4)" fg:x="297" fg:w="1"/><text x="23.9531%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="23.7031%" y="613" width="0.0798%" height="15" fill="rgb(215,105,30)" fg:x="297" fg:w="1"/><text x="23.9531%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7031%" y="597" width="0.0798%" height="15" fill="rgb(230,9,4)" fg:x="297" fg:w="1"/><text x="23.9531%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.7031%" y="581" width="0.0798%" height="15" fill="rgb(248,15,2)" fg:x="297" fg:w="1"/><text x="23.9531%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7031%" y="565" width="0.0798%" height="15" fill="rgb(208,210,22)" fg:x="297" fg:w="1"/><text x="23.9531%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="23.6233%" y="661" width="0.2394%" height="15" fill="rgb(208,112,41)" fg:x="296" fg:w="3"/><text x="23.8733%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.7829%" y="645" width="0.0798%" height="15" fill="rgb(232,83,14)" fg:x="298" fg:w="1"/><text x="24.0329%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="23.7829%" y="629" width="0.0798%" height="15" fill="rgb(229,65,11)" fg:x="298" fg:w="1"/><text x="24.0329%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7829%" y="613" width="0.0798%" height="15" fill="rgb(228,126,24)" fg:x="298" fg:w="1"/><text x="24.0329%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7829%" y="597" width="0.0798%" height="15" fill="rgb(218,66,33)" fg:x="298" fg:w="1"/><text x="24.0329%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9425%" y="581" width="0.0798%" height="15" fill="rgb(251,49,52)" fg:x="300" fg:w="1"/><text x="24.1925%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.9425%" y="565" width="0.0798%" height="15" fill="rgb(219,46,37)" fg:x="300" fg:w="1"/><text x="24.1925%" y="575.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="23.9425%" y="613" width="0.1596%" height="15" fill="rgb(213,53,49)" fg:x="300" fg:w="2"/><text x="24.1925%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.9425%" y="597" width="0.1596%" height="15" fill="rgb(214,134,1)" fg:x="300" fg:w="2"/><text x="24.1925%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0223%" y="581" width="0.0798%" height="15" fill="rgb(208,139,43)" fg:x="301" fg:w="1"/><text x="24.2723%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.0223%" y="565" width="0.0798%" height="15" fill="rgb(231,105,35)" fg:x="301" fg:w="1"/><text x="24.2723%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0223%" y="549" width="0.0798%" height="15" fill="rgb(247,189,9)" fg:x="301" fg:w="1"/><text x="24.2723%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="23.8627%" y="661" width="0.3192%" height="15" fill="rgb(252,48,51)" fg:x="299" fg:w="4"/><text x="24.1127%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="23.9425%" y="645" width="0.2394%" height="15" fill="rgb(209,121,1)" fg:x="300" fg:w="3"/><text x="24.1925%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="23.9425%" y="629" width="0.2394%" height="15" fill="rgb(231,40,26)" fg:x="300" fg:w="3"/><text x="24.1925%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.1022%" y="613" width="0.0798%" height="15" fill="rgb(251,8,13)" fg:x="302" fg:w="1"/><text x="24.3522%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.1022%" y="597" width="0.0798%" height="15" fill="rgb(231,110,2)" fg:x="302" fg:w="1"/><text x="24.3522%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1022%" y="581" width="0.0798%" height="15" fill="rgb(216,153,22)" fg:x="302" fg:w="1"/><text x="24.3522%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.1022%" y="565" width="0.0798%" height="15" fill="rgb(249,116,49)" fg:x="302" fg:w="1"/><text x="24.3522%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1022%" y="549" width="0.0798%" height="15" fill="rgb(230,89,2)" fg:x="302" fg:w="1"/><text x="24.3522%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.1820%" y="661" width="0.0798%" height="15" fill="rgb(231,125,23)" fg:x="303" fg:w="1"/><text x="24.4320%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.1820%" y="645" width="0.0798%" height="15" fill="rgb(212,217,18)" fg:x="303" fg:w="1"/><text x="24.4320%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.1820%" y="629" width="0.0798%" height="15" fill="rgb(210,21,33)" fg:x="303" fg:w="1"/><text x="24.4320%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.1820%" y="613" width="0.0798%" height="15" fill="rgb(241,97,9)" fg:x="303" fg:w="1"/><text x="24.4320%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1820%" y="597" width="0.0798%" height="15" fill="rgb(221,35,31)" fg:x="303" fg:w="1"/><text x="24.4320%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.1820%" y="581" width="0.0798%" height="15" fill="rgb(251,23,23)" fg:x="303" fg:w="1"/><text x="24.4320%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1820%" y="565" width="0.0798%" height="15" fill="rgb(227,165,2)" fg:x="303" fg:w="1"/><text x="24.4320%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.1820%" y="549" width="0.0798%" height="15" fill="rgb(242,24,2)" fg:x="303" fg:w="1"/><text x="24.4320%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.1820%" y="533" width="0.0798%" height="15" fill="rgb(242,138,51)" fg:x="303" fg:w="1"/><text x="24.4320%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.2618%" y="629" width="0.0798%" height="15" fill="rgb(220,219,5)" fg:x="304" fg:w="1"/><text x="24.5118%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.2618%" y="613" width="0.0798%" height="15" fill="rgb(247,53,29)" fg:x="304" fg:w="1"/><text x="24.5118%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2618%" y="597" width="0.0798%" height="15" fill="rgb(233,43,39)" fg:x="304" fg:w="1"/><text x="24.5118%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2618%" y="581" width="0.0798%" height="15" fill="rgb(230,128,54)" fg:x="304" fg:w="1"/><text x="24.5118%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2618%" y="565" width="0.0798%" height="15" fill="rgb(218,20,12)" fg:x="304" fg:w="1"/><text x="24.5118%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2618%" y="549" width="0.0798%" height="15" fill="rgb(206,51,14)" fg:x="304" fg:w="1"/><text x="24.5118%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.2618%" y="533" width="0.0798%" height="15" fill="rgb(223,16,35)" fg:x="304" fg:w="1"/><text x="24.5118%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2618%" y="517" width="0.0798%" height="15" fill="rgb(226,165,37)" fg:x="304" fg:w="1"/><text x="24.5118%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.3416%" y="613" width="0.0798%" height="15" fill="rgb(240,26,21)" fg:x="305" fg:w="1"/><text x="24.5916%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4214%" y="597" width="0.0798%" height="15" fill="rgb(240,72,46)" fg:x="306" fg:w="1"/><text x="24.6714%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4214%" y="581" width="0.0798%" height="15" fill="rgb(211,33,41)" fg:x="306" fg:w="1"/><text x="24.6714%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.4214%" y="565" width="0.0798%" height="15" fill="rgb(224,157,46)" fg:x="306" fg:w="1"/><text x="24.6714%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4214%" y="549" width="0.0798%" height="15" fill="rgb(223,59,19)" fg:x="306" fg:w="1"/><text x="24.6714%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4214%" y="533" width="0.0798%" height="15" fill="rgb(239,187,1)" fg:x="306" fg:w="1"/><text x="24.6714%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.4214%" y="517" width="0.0798%" height="15" fill="rgb(226,95,9)" fg:x="306" fg:w="1"/><text x="24.6714%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.4214%" y="501" width="0.0798%" height="15" fill="rgb(234,61,54)" fg:x="306" fg:w="1"/><text x="24.6714%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.4214%" y="485" width="0.0798%" height="15" fill="rgb(205,209,47)" fg:x="306" fg:w="1"/><text x="24.6714%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="24.4214%" y="469" width="0.0798%" height="15" fill="rgb(228,7,43)" fg:x="306" fg:w="1"/><text x="24.6714%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="24.4214%" y="453" width="0.0798%" height="15" fill="rgb(240,217,52)" fg:x="306" fg:w="1"/><text x="24.6714%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.04%)</title><rect x="23.5435%" y="677" width="1.0375%" height="15" fill="rgb(211,178,21)" fg:x="295" fg:w="13"/><text x="23.7935%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="24.2618%" y="661" width="0.3192%" height="15" fill="rgb(205,25,34)" fg:x="304" fg:w="4"/><text x="24.5118%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="24.2618%" y="645" width="0.3192%" height="15" fill="rgb(209,57,11)" fg:x="304" fg:w="4"/><text x="24.5118%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="24.3416%" y="629" width="0.2394%" height="15" fill="rgb(221,99,2)" fg:x="305" fg:w="3"/><text x="24.5916%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.4214%" y="613" width="0.1596%" height="15" fill="rgb(232,79,22)" fg:x="306" fg:w="2"/><text x="24.6714%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5012%" y="597" width="0.0798%" height="15" fill="rgb(221,145,32)" fg:x="307" fg:w="1"/><text x="24.7512%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5012%" y="581" width="0.0798%" height="15" fill="rgb(236,133,36)" fg:x="307" fg:w="1"/><text x="24.7512%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5012%" y="565" width="0.0798%" height="15" fill="rgb(208,224,44)" fg:x="307" fg:w="1"/><text x="24.7512%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5012%" y="549" width="0.0798%" height="15" fill="rgb(235,143,15)" fg:x="307" fg:w="1"/><text x="24.7512%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5012%" y="533" width="0.0798%" height="15" fill="rgb(249,83,27)" fg:x="307" fg:w="1"/><text x="24.7512%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="24.5012%" y="517" width="0.0798%" height="15" fill="rgb(238,226,19)" fg:x="307" fg:w="1"/><text x="24.7512%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="24.5012%" y="501" width="0.0798%" height="15" fill="rgb(226,206,27)" fg:x="307" fg:w="1"/><text x="24.7512%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (14 samples, 1.12%)</title><rect x="23.5435%" y="693" width="1.1173%" height="15" fill="rgb(251,182,9)" fg:x="295" fg:w="14"/><text x="23.7935%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.5810%" y="677" width="0.0798%" height="15" fill="rgb(212,140,41)" fg:x="308" fg:w="1"/><text x="24.8310%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.5810%" y="661" width="0.0798%" height="15" fill="rgb(220,106,18)" fg:x="308" fg:w="1"/><text x="24.8310%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5810%" y="645" width="0.0798%" height="15" fill="rgb(252,46,41)" fg:x="308" fg:w="1"/><text x="24.8310%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5810%" y="629" width="0.0798%" height="15" fill="rgb(209,222,15)" fg:x="308" fg:w="1"/><text x="24.8310%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5810%" y="613" width="0.0798%" height="15" fill="rgb(233,83,50)" fg:x="308" fg:w="1"/><text x="24.8310%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5810%" y="597" width="0.0798%" height="15" fill="rgb(205,212,0)" fg:x="308" fg:w="1"/><text x="24.8310%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="24.5810%" y="581" width="0.0798%" height="15" fill="rgb(235,117,51)" fg:x="308" fg:w="1"/><text x="24.8310%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5810%" y="565" width="0.0798%" height="15" fill="rgb(233,133,48)" fg:x="308" fg:w="1"/><text x="24.8310%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (158 samples, 12.61%)</title><rect x="12.2107%" y="725" width="12.6097%" height="15" fill="rgb(219,3,2)" fg:x="153" fg:w="158"/><text x="12.4607%" y="735.50">plugins_core::build..</text></g><g><title>plugins_core::build::Build::wearing (16 samples, 1.28%)</title><rect x="23.5435%" y="709" width="1.2769%" height="15" fill="rgb(225,80,52)" fg:x="295" fg:w="16"/><text x="23.7935%" y="719.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="24.6608%" y="693" width="0.1596%" height="15" fill="rgb(235,195,42)" fg:x="309" fg:w="2"/><text x="24.9108%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.7406%" y="677" width="0.0798%" height="15" fill="rgb(240,207,46)" fg:x="310" fg:w="1"/><text x="24.9906%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="24.8204%" y="725" width="0.0798%" height="15" fill="rgb(236,112,50)" fg:x="311" fg:w="1"/><text x="25.0704%" y="735.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="24.8204%" y="709" width="0.0798%" height="15" fill="rgb(249,151,27)" fg:x="311" fg:w="1"/><text x="25.0704%" y="719.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="24.9002%" y="677" width="0.0798%" height="15" fill="rgb(253,223,52)" fg:x="312" fg:w="1"/><text x="25.1502%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9002%" y="661" width="0.0798%" height="15" fill="rgb(215,55,33)" fg:x="312" fg:w="1"/><text x="25.1502%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9002%" y="645" width="0.0798%" height="15" fill="rgb(207,24,17)" fg:x="312" fg:w="1"/><text x="25.1502%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.9002%" y="629" width="0.0798%" height="15" fill="rgb(218,169,32)" fg:x="312" fg:w="1"/><text x="25.1502%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9002%" y="613" width="0.0798%" height="15" fill="rgb(209,210,6)" fg:x="312" fg:w="1"/><text x="25.1502%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="24.9002%" y="693" width="0.1596%" height="15" fill="rgb(225,208,8)" fg:x="312" fg:w="2"/><text x="25.1502%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="24.9800%" y="677" width="0.0798%" height="15" fill="rgb(238,14,32)" fg:x="313" fg:w="1"/><text x="25.2300%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="24.9800%" y="661" width="0.0798%" height="15" fill="rgb(211,137,3)" fg:x="313" fg:w="1"/><text x="25.2300%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.9800%" y="645" width="0.0798%" height="15" fill="rgb(207,171,19)" fg:x="313" fg:w="1"/><text x="25.2300%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="24.9800%" y="629" width="0.0798%" height="15" fill="rgb(250,80,8)" fg:x="313" fg:w="1"/><text x="25.2300%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="24.9800%" y="613" width="0.0798%" height="15" fill="rgb(209,103,53)" fg:x="313" fg:w="1"/><text x="25.2300%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="24.9800%" y="597" width="0.0798%" height="15" fill="rgb(233,198,10)" fg:x="313" fg:w="1"/><text x="25.2300%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.0599%" y="661" width="0.0798%" height="15" fill="rgb(236,125,25)" fg:x="314" fg:w="1"/><text x="25.3099%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.0599%" y="645" width="0.0798%" height="15" fill="rgb(254,182,48)" fg:x="314" fg:w="1"/><text x="25.3099%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.0599%" y="629" width="0.0798%" height="15" fill="rgb(216,108,44)" fg:x="314" fg:w="1"/><text x="25.3099%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.0599%" y="613" width="0.0798%" height="15" fill="rgb(222,72,39)" fg:x="314" fg:w="1"/><text x="25.3099%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.0599%" y="597" width="0.0798%" height="15" fill="rgb(252,70,39)" fg:x="314" fg:w="1"/><text x="25.3099%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.0599%" y="581" width="0.0798%" height="15" fill="rgb(243,99,34)" fg:x="314" fg:w="1"/><text x="25.3099%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="25.1397%" y="661" width="0.1596%" height="15" fill="rgb(252,109,12)" fg:x="315" fg:w="2"/><text x="25.3897%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.1397%" y="645" width="0.1596%" height="15" fill="rgb(211,186,10)" fg:x="315" fg:w="2"/><text x="25.3897%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2195%" y="629" width="0.0798%" height="15" fill="rgb(246,90,8)" fg:x="316" fg:w="1"/><text x="25.4695%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.2195%" y="613" width="0.0798%" height="15" fill="rgb(226,91,24)" fg:x="316" fg:w="1"/><text x="25.4695%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2195%" y="597" width="0.0798%" height="15" fill="rgb(216,28,44)" fg:x="316" fg:w="1"/><text x="25.4695%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.2195%" y="581" width="0.0798%" height="15" fill="rgb(229,36,0)" fg:x="316" fg:w="1"/><text x="25.4695%" y="591.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="25.2993%" y="613" width="0.0798%" height="15" fill="rgb(245,97,18)" fg:x="317" fg:w="1"/><text x="25.5493%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2993%" y="597" width="0.0798%" height="15" fill="rgb(241,97,54)" fg:x="317" fg:w="1"/><text x="25.5493%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.2993%" y="581" width="0.0798%" height="15" fill="rgb(234,125,17)" fg:x="317" fg:w="1"/><text x="25.5493%" y="591.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="25.2993%" y="645" width="0.1596%" height="15" fill="rgb(228,172,39)" fg:x="317" fg:w="2"/><text x="25.5493%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="25.2993%" y="629" width="0.1596%" height="15" fill="rgb(227,169,1)" fg:x="317" fg:w="2"/><text x="25.5493%" y="639.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.3791%" y="613" width="0.0798%" height="15" fill="rgb(206,13,35)" fg:x="318" fg:w="1"/><text x="25.6291%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.3791%" y="597" width="0.0798%" height="15" fill="rgb(211,117,30)" fg:x="318" fg:w="1"/><text x="25.6291%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="25.3791%" y="581" width="0.0798%" height="15" fill="rgb(230,198,4)" fg:x="318" fg:w="1"/><text x="25.6291%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.3791%" y="565" width="0.0798%" height="15" fill="rgb(213,87,54)" fg:x="318" fg:w="1"/><text x="25.6291%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.3791%" y="549" width="0.0798%" height="15" fill="rgb(248,43,22)" fg:x="318" fg:w="1"/><text x="25.6291%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.3791%" y="533" width="0.0798%" height="15" fill="rgb(213,175,48)" fg:x="318" fg:w="1"/><text x="25.6291%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="25.2993%" y="661" width="0.2394%" height="15" fill="rgb(252,55,9)" fg:x="317" fg:w="3"/><text x="25.5493%" y="671.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="25.4589%" y="645" width="0.0798%" height="15" fill="rgb(231,72,33)" fg:x="319" fg:w="1"/><text x="25.7089%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4589%" y="629" width="0.0798%" height="15" fill="rgb(213,2,54)" fg:x="319" fg:w="1"/><text x="25.7089%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4589%" y="613" width="0.0798%" height="15" fill="rgb(208,88,25)" fg:x="319" fg:w="1"/><text x="25.7089%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.4589%" y="597" width="0.0798%" height="15" fill="rgb(215,117,13)" fg:x="319" fg:w="1"/><text x="25.7089%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.4589%" y="581" width="0.0798%" height="15" fill="rgb(243,147,21)" fg:x="319" fg:w="1"/><text x="25.7089%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.4589%" y="565" width="0.0798%" height="15" fill="rgb(208,215,36)" fg:x="319" fg:w="1"/><text x="25.7089%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4589%" y="549" width="0.0798%" height="15" fill="rgb(238,187,24)" fg:x="319" fg:w="1"/><text x="25.7089%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4589%" y="533" width="0.0798%" height="15" fill="rgb(214,173,11)" fg:x="319" fg:w="1"/><text x="25.7089%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.4589%" y="517" width="0.0798%" height="15" fill="rgb(222,71,20)" fg:x="319" fg:w="1"/><text x="25.7089%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.4589%" y="501" width="0.0798%" height="15" fill="rgb(242,125,4)" fg:x="319" fg:w="1"/><text x="25.7089%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.4589%" y="485" width="0.0798%" height="15" fill="rgb(217,101,52)" fg:x="319" fg:w="1"/><text x="25.7089%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.4589%" y="469" width="0.0798%" height="15" fill="rgb(223,2,50)" fg:x="319" fg:w="1"/><text x="25.7089%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4589%" y="453" width="0.0798%" height="15" fill="rgb(225,197,9)" fg:x="319" fg:w="1"/><text x="25.7089%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.5387%" y="645" width="0.0798%" height="15" fill="rgb(234,76,27)" fg:x="320" fg:w="1"/><text x="25.7887%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.5387%" y="629" width="0.0798%" height="15" fill="rgb(213,161,26)" fg:x="320" fg:w="1"/><text x="25.7887%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="25.5387%" y="613" width="0.0798%" height="15" fill="rgb(210,228,2)" fg:x="320" fg:w="1"/><text x="25.7887%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.5387%" y="597" width="0.0798%" height="15" fill="rgb(235,4,16)" fg:x="320" fg:w="1"/><text x="25.7887%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.5387%" y="581" width="0.0798%" height="15" fill="rgb(235,83,42)" fg:x="320" fg:w="1"/><text x="25.7887%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.5387%" y="565" width="0.0798%" height="15" fill="rgb(207,116,39)" fg:x="320" fg:w="1"/><text x="25.7887%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.5387%" y="549" width="0.0798%" height="15" fill="rgb(253,206,9)" fg:x="320" fg:w="1"/><text x="25.7887%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="25.5387%" y="661" width="0.2394%" height="15" fill="rgb(234,32,47)" fg:x="320" fg:w="3"/><text x="25.7887%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="25.6185%" y="645" width="0.1596%" height="15" fill="rgb(247,40,39)" fg:x="321" fg:w="2"/><text x="25.8685%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.6185%" y="629" width="0.1596%" height="15" fill="rgb(236,199,13)" fg:x="321" fg:w="2"/><text x="25.8685%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6185%" y="613" width="0.1596%" height="15" fill="rgb(240,127,44)" fg:x="321" fg:w="2"/><text x="25.8685%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6185%" y="597" width="0.1596%" height="15" fill="rgb(248,220,47)" fg:x="321" fg:w="2"/><text x="25.8685%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.6185%" y="581" width="0.1596%" height="15" fill="rgb(240,78,9)" fg:x="321" fg:w="2"/><text x="25.8685%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.7781%" y="629" width="0.0798%" height="15" fill="rgb(245,119,5)" fg:x="323" fg:w="1"/><text x="26.0281%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7781%" y="613" width="0.0798%" height="15" fill="rgb(238,175,31)" fg:x="323" fg:w="1"/><text x="26.0281%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7781%" y="597" width="0.0798%" height="15" fill="rgb(232,140,42)" fg:x="323" fg:w="1"/><text x="26.0281%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7781%" y="581" width="0.0798%" height="15" fill="rgb(218,179,7)" fg:x="323" fg:w="1"/><text x="26.0281%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="25.0599%" y="677" width="0.8779%" height="15" fill="rgb(232,79,27)" fg:x="314" fg:w="11"/><text x="25.3099%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="25.7781%" y="661" width="0.1596%" height="15" fill="rgb(247,11,19)" fg:x="323" fg:w="2"/><text x="26.0281%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="25.7781%" y="645" width="0.1596%" height="15" fill="rgb(216,171,54)" fg:x="323" fg:w="2"/><text x="26.0281%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="25.8579%" y="629" width="0.0798%" height="15" fill="rgb(233,158,36)" fg:x="324" fg:w="1"/><text x="26.1079%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.8579%" y="613" width="0.0798%" height="15" fill="rgb(215,48,47)" fg:x="324" fg:w="1"/><text x="26.1079%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.8579%" y="597" width="0.0798%" height="15" fill="rgb(230,223,15)" fg:x="324" fg:w="1"/><text x="26.1079%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.8579%" y="581" width="0.0798%" height="15" fill="rgb(234,49,19)" fg:x="324" fg:w="1"/><text x="26.1079%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.8579%" y="565" width="0.0798%" height="15" fill="rgb(232,89,25)" fg:x="324" fg:w="1"/><text x="26.1079%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.8579%" y="549" width="0.0798%" height="15" fill="rgb(237,206,28)" fg:x="324" fg:w="1"/><text x="26.1079%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.9377%" y="645" width="0.0798%" height="15" fill="rgb(249,68,37)" fg:x="325" fg:w="1"/><text x="26.1877%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.20%)</title><rect x="24.9002%" y="725" width="1.1971%" height="15" fill="rgb(226,99,43)" fg:x="312" fg:w="15"/><text x="25.1502%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="24.9002%" y="709" width="1.1971%" height="15" fill="rgb(216,46,28)" fg:x="312" fg:w="15"/><text x="25.1502%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.04%)</title><rect x="25.0599%" y="693" width="1.0375%" height="15" fill="rgb(216,33,9)" fg:x="314" fg:w="13"/><text x="25.3099%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.9377%" y="677" width="0.1596%" height="15" fill="rgb(216,129,4)" fg:x="325" fg:w="2"/><text x="26.1877%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.9377%" y="661" width="0.1596%" height="15" fill="rgb(216,106,3)" fg:x="325" fg:w="2"/><text x="26.1877%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0176%" y="645" width="0.0798%" height="15" fill="rgb(217,79,45)" fg:x="326" fg:w="1"/><text x="26.2676%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="26.0974%" y="693" width="0.0798%" height="15" fill="rgb(239,98,13)" fg:x="327" fg:w="1"/><text x="26.3474%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="26.0974%" y="677" width="0.0798%" height="15" fill="rgb(221,115,4)" fg:x="327" fg:w="1"/><text x="26.3474%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.0974%" y="661" width="0.0798%" height="15" fill="rgb(215,85,0)" fg:x="327" fg:w="1"/><text x="26.3474%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0974%" y="645" width="0.0798%" height="15" fill="rgb(230,62,15)" fg:x="327" fg:w="1"/><text x="26.3474%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.0974%" y="629" width="0.0798%" height="15" fill="rgb(247,162,2)" fg:x="327" fg:w="1"/><text x="26.3474%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.0974%" y="613" width="0.0798%" height="15" fill="rgb(212,112,32)" fg:x="327" fg:w="1"/><text x="26.3474%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.0974%" y="597" width="0.0798%" height="15" fill="rgb(216,137,9)" fg:x="327" fg:w="1"/><text x="26.3474%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="26.0974%" y="709" width="0.1596%" height="15" fill="rgb(250,149,33)" fg:x="327" fg:w="2"/><text x="26.3474%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.1772%" y="693" width="0.0798%" height="15" fill="rgb(246,124,31)" fg:x="328" fg:w="1"/><text x="26.4272%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.1772%" y="677" width="0.0798%" height="15" fill="rgb(216,210,22)" fg:x="328" fg:w="1"/><text x="26.4272%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.1772%" y="661" width="0.0798%" height="15" fill="rgb(228,128,36)" fg:x="328" fg:w="1"/><text x="26.4272%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.1772%" y="645" width="0.0798%" height="15" fill="rgb(231,41,0)" fg:x="328" fg:w="1"/><text x="26.4272%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.2570%" y="677" width="0.0798%" height="15" fill="rgb(232,61,26)" fg:x="329" fg:w="1"/><text x="26.5070%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.2570%" y="661" width="0.0798%" height="15" fill="rgb(217,60,9)" fg:x="329" fg:w="1"/><text x="26.5070%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2570%" y="645" width="0.0798%" height="15" fill="rgb(233,41,35)" fg:x="329" fg:w="1"/><text x="26.5070%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2570%" y="629" width="0.0798%" height="15" fill="rgb(253,139,43)" fg:x="329" fg:w="1"/><text x="26.5070%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2570%" y="613" width="0.0798%" height="15" fill="rgb(245,100,51)" fg:x="329" fg:w="1"/><text x="26.5070%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2570%" y="597" width="0.0798%" height="15" fill="rgb(250,208,18)" fg:x="329" fg:w="1"/><text x="26.5070%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.2570%" y="581" width="0.0798%" height="15" fill="rgb(245,33,2)" fg:x="329" fg:w="1"/><text x="26.5070%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.2570%" y="565" width="0.0798%" height="15" fill="rgb(244,171,31)" fg:x="329" fg:w="1"/><text x="26.5070%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.2570%" y="549" width="0.0798%" height="15" fill="rgb(229,1,43)" fg:x="329" fg:w="1"/><text x="26.5070%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.2570%" y="533" width="0.0798%" height="15" fill="rgb(223,153,28)" fg:x="329" fg:w="1"/><text x="26.5070%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.2570%" y="517" width="0.0798%" height="15" fill="rgb(241,4,46)" fg:x="329" fg:w="1"/><text x="26.5070%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.2570%" y="501" width="0.0798%" height="15" fill="rgb(230,81,11)" fg:x="329" fg:w="1"/><text x="26.5070%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.2570%" y="485" width="0.0798%" height="15" fill="rgb(253,204,39)" fg:x="329" fg:w="1"/><text x="26.5070%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.2570%" y="469" width="0.0798%" height="15" fill="rgb(250,96,8)" fg:x="329" fg:w="1"/><text x="26.5070%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.2570%" y="453" width="0.0798%" height="15" fill="rgb(219,89,54)" fg:x="329" fg:w="1"/><text x="26.5070%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.2570%" y="437" width="0.0798%" height="15" fill="rgb(235,136,39)" fg:x="329" fg:w="1"/><text x="26.5070%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.2570%" y="421" width="0.0798%" height="15" fill="rgb(230,155,37)" fg:x="329" fg:w="1"/><text x="26.5070%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.3368%" y="613" width="0.0798%" height="15" fill="rgb(235,199,50)" fg:x="330" fg:w="1"/><text x="26.5868%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3368%" y="597" width="0.0798%" height="15" fill="rgb(227,81,32)" fg:x="330" fg:w="1"/><text x="26.5868%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="26.4166%" y="597" width="0.0798%" height="15" fill="rgb(225,6,28)" fg:x="331" fg:w="1"/><text x="26.6666%" y="607.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="26.3368%" y="629" width="0.2394%" height="15" fill="rgb(207,211,17)" fg:x="330" fg:w="3"/><text x="26.5868%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.4166%" y="613" width="0.1596%" height="15" fill="rgb(228,31,49)" fg:x="331" fg:w="2"/><text x="26.6666%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.4964%" y="597" width="0.0798%" height="15" fill="rgb(230,185,3)" fg:x="332" fg:w="1"/><text x="26.7464%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.4964%" y="581" width="0.0798%" height="15" fill="rgb(206,167,15)" fg:x="332" fg:w="1"/><text x="26.7464%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.4964%" y="565" width="0.0798%" height="15" fill="rgb(234,2,36)" fg:x="332" fg:w="1"/><text x="26.7464%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.4964%" y="549" width="0.0798%" height="15" fill="rgb(239,160,29)" fg:x="332" fg:w="1"/><text x="26.7464%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.4964%" y="533" width="0.0798%" height="15" fill="rgb(236,117,2)" fg:x="332" fg:w="1"/><text x="26.7464%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4964%" y="517" width="0.0798%" height="15" fill="rgb(215,117,37)" fg:x="332" fg:w="1"/><text x="26.7464%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="26.3368%" y="677" width="0.3192%" height="15" fill="rgb(244,48,36)" fg:x="330" fg:w="4"/><text x="26.5868%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="26.3368%" y="661" width="0.3192%" height="15" fill="rgb(223,101,37)" fg:x="330" fg:w="4"/><text x="26.5868%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="26.3368%" y="645" width="0.3192%" height="15" fill="rgb(205,200,1)" fg:x="330" fg:w="4"/><text x="26.5868%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.5762%" y="629" width="0.0798%" height="15" fill="rgb(209,193,20)" fg:x="333" fg:w="1"/><text x="26.8262%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.5762%" y="613" width="0.0798%" height="15" fill="rgb(214,63,13)" fg:x="333" fg:w="1"/><text x="26.8262%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5762%" y="597" width="0.0798%" height="15" fill="rgb(253,113,46)" fg:x="333" fg:w="1"/><text x="26.8262%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="26.5762%" y="581" width="0.0798%" height="15" fill="rgb(237,103,34)" fg:x="333" fg:w="1"/><text x="26.8262%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5762%" y="565" width="0.0798%" height="15" fill="rgb(223,38,25)" fg:x="333" fg:w="1"/><text x="26.8262%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.5762%" y="549" width="0.0798%" height="15" fill="rgb(251,32,32)" fg:x="333" fg:w="1"/><text x="26.8262%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.6560%" y="661" width="0.0798%" height="15" fill="rgb(228,65,22)" fg:x="334" fg:w="1"/><text x="26.9060%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.6560%" y="645" width="0.0798%" height="15" fill="rgb(205,11,46)" fg:x="334" fg:w="1"/><text x="26.9060%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6560%" y="629" width="0.0798%" height="15" fill="rgb(220,35,2)" fg:x="334" fg:w="1"/><text x="26.9060%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.6560%" y="613" width="0.0798%" height="15" fill="rgb(217,151,17)" fg:x="334" fg:w="1"/><text x="26.9060%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6560%" y="597" width="0.0798%" height="15" fill="rgb(243,227,35)" fg:x="334" fg:w="1"/><text x="26.9060%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7358%" y="661" width="0.0798%" height="15" fill="rgb(214,0,34)" fg:x="335" fg:w="1"/><text x="26.9858%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (8 samples, 0.64%)</title><rect x="26.2570%" y="709" width="0.6385%" height="15" fill="rgb(209,42,37)" fg:x="329" fg:w="8"/><text x="26.5070%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="26.2570%" y="693" width="0.6385%" height="15" fill="rgb(251,176,30)" fg:x="329" fg:w="8"/><text x="26.5070%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="26.6560%" y="677" width="0.2394%" height="15" fill="rgb(223,64,40)" fg:x="334" fg:w="3"/><text x="26.9060%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.8156%" y="661" width="0.0798%" height="15" fill="rgb(227,180,23)" fg:x="336" fg:w="1"/><text x="27.0656%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.8156%" y="645" width="0.0798%" height="15" fill="rgb(220,137,31)" fg:x="336" fg:w="1"/><text x="27.0656%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="26.8156%" y="629" width="0.0798%" height="15" fill="rgb(245,124,25)" fg:x="336" fg:w="1"/><text x="27.0656%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8156%" y="613" width="0.0798%" height="15" fill="rgb(217,157,5)" fg:x="336" fg:w="1"/><text x="27.0656%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="26.8156%" y="597" width="0.0798%" height="15" fill="rgb(225,59,2)" fg:x="336" fg:w="1"/><text x="27.0656%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="26.8156%" y="581" width="0.0798%" height="15" fill="rgb(220,182,9)" fg:x="336" fg:w="1"/><text x="27.0656%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="26.8156%" y="565" width="0.0798%" height="15" fill="rgb(249,54,24)" fg:x="336" fg:w="1"/><text x="27.0656%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="26.8156%" y="549" width="0.0798%" height="15" fill="rgb(216,89,17)" fg:x="336" fg:w="1"/><text x="27.0656%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="26.8156%" y="533" width="0.0798%" height="15" fill="rgb(245,20,45)" fg:x="336" fg:w="1"/><text x="27.0656%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.8156%" y="517" width="0.0798%" height="15" fill="rgb(230,83,14)" fg:x="336" fg:w="1"/><text x="27.0656%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="26.8156%" y="501" width="0.0798%" height="15" fill="rgb(246,109,11)" fg:x="336" fg:w="1"/><text x="27.0656%" y="511.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="26.9753%" y="693" width="0.0798%" height="15" fill="rgb(235,85,23)" fg:x="338" fg:w="1"/><text x="27.2253%" y="703.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.9753%" y="677" width="0.0798%" height="15" fill="rgb(215,101,36)" fg:x="338" fg:w="1"/><text x="27.2253%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9753%" y="661" width="0.0798%" height="15" fill="rgb(228,140,31)" fg:x="338" fg:w="1"/><text x="27.2253%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (286 samples, 22.83%)</title><rect x="4.3097%" y="741" width="22.8252%" height="15" fill="rgb(234,162,37)" fg:x="54" fg:w="286"/><text x="4.5597%" y="751.50">&lt;tests::HoldingKeyInVessel as tests:..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.04%)</title><rect x="26.0974%" y="725" width="1.0375%" height="15" fill="rgb(221,0,24)" fg:x="327" fg:w="13"/><text x="26.3474%" y="735.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="26.8955%" y="709" width="0.2394%" height="15" fill="rgb(230,161,41)" fg:x="337" fg:w="3"/><text x="27.1455%" y="719.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="27.0551%" y="693" width="0.0798%" height="15" fill="rgb(224,46,24)" fg:x="339" fg:w="1"/><text x="27.3051%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="27.1349%" y="741" width="0.1596%" height="15" fill="rgb(205,59,32)" fg:x="340" fg:w="2"/><text x="27.3849%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="27.1349%" y="725" width="0.1596%" height="15" fill="rgb(239,31,20)" fg:x="340" fg:w="2"/><text x="27.3849%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="27.2945%" y="741" width="0.0798%" height="15" fill="rgb(233,149,44)" fg:x="342" fg:w="1"/><text x="27.5445%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="27.2945%" y="725" width="0.0798%" height="15" fill="rgb(243,47,26)" fg:x="342" fg:w="1"/><text x="27.5445%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="27.2945%" y="709" width="0.0798%" height="15" fill="rgb(233,107,5)" fg:x="342" fg:w="1"/><text x="27.5445%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.2945%" y="693" width="0.0798%" height="15" fill="rgb(248,140,33)" fg:x="342" fg:w="1"/><text x="27.5445%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2945%" y="677" width="0.0798%" height="15" fill="rgb(228,178,19)" fg:x="342" fg:w="1"/><text x="27.5445%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="27.6137%" y="725" width="0.0798%" height="15" fill="rgb(224,39,49)" fg:x="346" fg:w="1"/><text x="27.8637%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="27.6935%" y="661" width="0.1596%" height="15" fill="rgb(246,56,47)" fg:x="347" fg:w="2"/><text x="27.9435%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="27.7733%" y="645" width="0.0798%" height="15" fill="rgb(220,73,27)" fg:x="348" fg:w="1"/><text x="28.0233%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="27.6935%" y="725" width="0.2394%" height="15" fill="rgb(239,112,21)" fg:x="347" fg:w="3"/><text x="27.9435%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="27.6935%" y="709" width="0.2394%" height="15" fill="rgb(253,14,51)" fg:x="347" fg:w="3"/><text x="27.9435%" y="719.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.6935%" y="693" width="0.2394%" height="15" fill="rgb(215,58,12)" fg:x="347" fg:w="3"/><text x="27.9435%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="27.6935%" y="677" width="0.2394%" height="15" fill="rgb(207,181,19)" fg:x="347" fg:w="3"/><text x="27.9435%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.08%)</title><rect x="27.8532%" y="661" width="0.0798%" height="15" fill="rgb(211,214,34)" fg:x="349" fg:w="1"/><text x="28.1032%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.9330%" y="709" width="0.0798%" height="15" fill="rgb(243,124,39)" fg:x="350" fg:w="1"/><text x="28.1830%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9330%" y="693" width="0.0798%" height="15" fill="rgb(248,135,21)" fg:x="350" fg:w="1"/><text x="28.1830%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9330%" y="677" width="0.0798%" height="15" fill="rgb(245,218,3)" fg:x="350" fg:w="1"/><text x="28.1830%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.9330%" y="661" width="0.0798%" height="15" fill="rgb(225,144,22)" fg:x="350" fg:w="1"/><text x="28.1830%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="28.0926%" y="677" width="0.0798%" height="15" fill="rgb(250,90,15)" fg:x="352" fg:w="1"/><text x="28.3426%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="28.0926%" y="661" width="0.0798%" height="15" fill="rgb(224,64,29)" fg:x="352" fg:w="1"/><text x="28.3426%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2522%" y="629" width="0.0798%" height="15" fill="rgb(217,50,47)" fg:x="354" fg:w="1"/><text x="28.5022%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.2522%" y="613" width="0.0798%" height="15" fill="rgb(231,159,47)" fg:x="354" fg:w="1"/><text x="28.5022%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2522%" y="597" width="0.0798%" height="15" fill="rgb(213,89,29)" fg:x="354" fg:w="1"/><text x="28.5022%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2522%" y="581" width="0.0798%" height="15" fill="rgb(243,90,23)" fg:x="354" fg:w="1"/><text x="28.5022%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.2522%" y="565" width="0.0798%" height="15" fill="rgb(213,21,6)" fg:x="354" fg:w="1"/><text x="28.5022%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.2522%" y="549" width="0.0798%" height="15" fill="rgb(237,139,17)" fg:x="354" fg:w="1"/><text x="28.5022%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.2522%" y="533" width="0.0798%" height="15" fill="rgb(250,147,17)" fg:x="354" fg:w="1"/><text x="28.5022%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.2522%" y="517" width="0.0798%" height="15" fill="rgb(212,208,42)" fg:x="354" fg:w="1"/><text x="28.5022%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.2522%" y="501" width="0.0798%" height="15" fill="rgb(215,229,40)" fg:x="354" fg:w="1"/><text x="28.5022%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.2522%" y="485" width="0.0798%" height="15" fill="rgb(206,204,1)" fg:x="354" fg:w="1"/><text x="28.5022%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.2522%" y="469" width="0.0798%" height="15" fill="rgb(230,62,32)" fg:x="354" fg:w="1"/><text x="28.5022%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.2522%" y="453" width="0.0798%" height="15" fill="rgb(223,22,42)" fg:x="354" fg:w="1"/><text x="28.5022%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.2522%" y="437" width="0.0798%" height="15" fill="rgb(244,6,23)" fg:x="354" fg:w="1"/><text x="28.5022%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.2522%" y="421" width="0.0798%" height="15" fill="rgb(240,221,42)" fg:x="354" fg:w="1"/><text x="28.5022%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.2522%" y="405" width="0.0798%" height="15" fill="rgb(222,74,7)" fg:x="354" fg:w="1"/><text x="28.5022%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.2522%" y="661" width="0.1596%" height="15" fill="rgb(227,191,38)" fg:x="354" fg:w="2"/><text x="28.5022%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.2522%" y="645" width="0.1596%" height="15" fill="rgb(227,89,34)" fg:x="354" fg:w="2"/><text x="28.5022%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.3320%" y="629" width="0.0798%" height="15" fill="rgb(215,153,25)" fg:x="355" fg:w="1"/><text x="28.5820%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.3320%" y="613" width="0.0798%" height="15" fill="rgb(215,153,46)" fg:x="355" fg:w="1"/><text x="28.5820%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.4118%" y="645" width="0.0798%" height="15" fill="rgb(242,38,52)" fg:x="356" fg:w="1"/><text x="28.6618%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.4118%" y="629" width="0.0798%" height="15" fill="rgb(218,112,4)" fg:x="356" fg:w="1"/><text x="28.6618%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5714%" y="629" width="0.0798%" height="15" fill="rgb(231,210,31)" fg:x="358" fg:w="1"/><text x="28.8214%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.5714%" y="613" width="0.0798%" height="15" fill="rgb(245,223,36)" fg:x="358" fg:w="1"/><text x="28.8214%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5714%" y="597" width="0.0798%" height="15" fill="rgb(246,41,2)" fg:x="358" fg:w="1"/><text x="28.8214%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.5714%" y="581" width="0.0798%" height="15" fill="rgb(227,51,31)" fg:x="358" fg:w="1"/><text x="28.8214%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.5714%" y="565" width="0.0798%" height="15" fill="rgb(222,95,26)" fg:x="358" fg:w="1"/><text x="28.8214%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.5714%" y="549" width="0.0798%" height="15" fill="rgb(224,190,1)" fg:x="358" fg:w="1"/><text x="28.8214%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.5714%" y="533" width="0.0798%" height="15" fill="rgb(209,90,42)" fg:x="358" fg:w="1"/><text x="28.8214%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5714%" y="517" width="0.0798%" height="15" fill="rgb(232,225,50)" fg:x="358" fg:w="1"/><text x="28.8214%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.5714%" y="501" width="0.0798%" height="15" fill="rgb(239,89,47)" fg:x="358" fg:w="1"/><text x="28.8214%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.5714%" y="485" width="0.0798%" height="15" fill="rgb(230,212,50)" fg:x="358" fg:w="1"/><text x="28.8214%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.5714%" y="469" width="0.0798%" height="15" fill="rgb(252,1,27)" fg:x="358" fg:w="1"/><text x="28.8214%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.5714%" y="453" width="0.0798%" height="15" fill="rgb(237,179,41)" fg:x="358" fg:w="1"/><text x="28.8214%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.5714%" y="437" width="0.0798%" height="15" fill="rgb(214,151,37)" fg:x="358" fg:w="1"/><text x="28.8214%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.5714%" y="421" width="0.0798%" height="15" fill="rgb(211,74,11)" fg:x="358" fg:w="1"/><text x="28.8214%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.6512%" y="597" width="0.0798%" height="15" fill="rgb(242,21,21)" fg:x="359" fg:w="1"/><text x="28.9012%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="28.4118%" y="661" width="0.4789%" height="15" fill="rgb(226,106,43)" fg:x="356" fg:w="6"/><text x="28.6618%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="28.4916%" y="645" width="0.3990%" height="15" fill="rgb(229,162,39)" fg:x="357" fg:w="5"/><text x="28.7416%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="28.6512%" y="629" width="0.2394%" height="15" fill="rgb(228,159,25)" fg:x="359" fg:w="3"/><text x="28.9012%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6512%" y="613" width="0.2394%" height="15" fill="rgb(237,32,23)" fg:x="359" fg:w="3"/><text x="28.9012%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.7310%" y="597" width="0.1596%" height="15" fill="rgb(212,35,32)" fg:x="360" fg:w="2"/><text x="28.9810%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.7310%" y="581" width="0.1596%" height="15" fill="rgb(215,199,1)" fg:x="360" fg:w="2"/><text x="28.9810%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.7310%" y="565" width="0.1596%" height="15" fill="rgb(215,67,13)" fg:x="360" fg:w="2"/><text x="28.9810%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.7310%" y="549" width="0.1596%" height="15" fill="rgb(216,20,47)" fg:x="360" fg:w="2"/><text x="28.9810%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.8109%" y="533" width="0.0798%" height="15" fill="rgb(249,183,48)" fg:x="361" fg:w="1"/><text x="29.0609%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8907%" y="613" width="0.0798%" height="15" fill="rgb(208,86,37)" fg:x="362" fg:w="1"/><text x="29.1407%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.8907%" y="597" width="0.0798%" height="15" fill="rgb(251,192,7)" fg:x="362" fg:w="1"/><text x="29.1407%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="28.8907%" y="581" width="0.0798%" height="15" fill="rgb(234,196,3)" fg:x="362" fg:w="1"/><text x="29.1407%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="28.8907%" y="565" width="0.0798%" height="15" fill="rgb(229,150,39)" fg:x="362" fg:w="1"/><text x="29.1407%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="28.8907%" y="549" width="0.0798%" height="15" fill="rgb(226,19,29)" fg:x="362" fg:w="1"/><text x="29.1407%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="28.8907%" y="533" width="0.0798%" height="15" fill="rgb(226,222,2)" fg:x="362" fg:w="1"/><text x="29.1407%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="28.8907%" y="517" width="0.0798%" height="15" fill="rgb(235,85,29)" fg:x="362" fg:w="1"/><text x="29.1407%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (12 samples, 0.96%)</title><rect x="28.0926%" y="693" width="0.9577%" height="15" fill="rgb(237,194,43)" fg:x="352" fg:w="12"/><text x="28.3426%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="28.1724%" y="677" width="0.8779%" height="15" fill="rgb(211,4,42)" fg:x="353" fg:w="11"/><text x="28.4224%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="28.8907%" y="661" width="0.1596%" height="15" fill="rgb(221,80,37)" fg:x="362" fg:w="2"/><text x="29.1407%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="28.8907%" y="645" width="0.1596%" height="15" fill="rgb(222,47,31)" fg:x="362" fg:w="2"/><text x="29.1407%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="28.8907%" y="629" width="0.1596%" height="15" fill="rgb(249,82,52)" fg:x="362" fg:w="2"/><text x="29.1407%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.9705%" y="613" width="0.0798%" height="15" fill="rgb(218,203,2)" fg:x="363" fg:w="1"/><text x="29.2205%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="29.0503%" y="677" width="0.1596%" height="15" fill="rgb(210,175,14)" fg:x="364" fg:w="2"/><text x="29.3003%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="29.0503%" y="661" width="0.1596%" height="15" fill="rgb(216,210,12)" fg:x="364" fg:w="2"/><text x="29.3003%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.2099%" y="645" width="0.0798%" height="15" fill="rgb(229,120,18)" fg:x="366" fg:w="1"/><text x="29.4599%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.2099%" y="629" width="0.0798%" height="15" fill="rgb(231,174,12)" fg:x="366" fg:w="1"/><text x="29.4599%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="29.2897%" y="533" width="0.0798%" height="15" fill="rgb(214,101,53)" fg:x="367" fg:w="1"/><text x="29.5397%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.2897%" y="517" width="0.0798%" height="15" fill="rgb(246,89,43)" fg:x="367" fg:w="1"/><text x="29.5397%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="29.3695%" y="453" width="0.1596%" height="15" fill="rgb(222,9,51)" fg:x="368" fg:w="2"/><text x="29.6195%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="29.3695%" y="437" width="0.1596%" height="15" fill="rgb(252,221,9)" fg:x="368" fg:w="2"/><text x="29.6195%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5291%" y="453" width="0.0798%" height="15" fill="rgb(248,28,15)" fg:x="370" fg:w="1"/><text x="29.7791%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="29.2897%" y="549" width="0.3990%" height="15" fill="rgb(213,54,52)" fg:x="367" fg:w="5"/><text x="29.5397%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="29.3695%" y="533" width="0.3192%" height="15" fill="rgb(240,3,45)" fg:x="368" fg:w="4"/><text x="29.6195%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="29.3695%" y="517" width="0.3192%" height="15" fill="rgb(239,138,24)" fg:x="368" fg:w="4"/><text x="29.6195%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="29.3695%" y="501" width="0.3192%" height="15" fill="rgb(233,45,54)" fg:x="368" fg:w="4"/><text x="29.6195%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="29.3695%" y="485" width="0.3192%" height="15" fill="rgb(220,131,2)" fg:x="368" fg:w="4"/><text x="29.6195%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="29.3695%" y="469" width="0.3192%" height="15" fill="rgb(240,154,36)" fg:x="368" fg:w="4"/><text x="29.6195%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.6089%" y="453" width="0.0798%" height="15" fill="rgb(251,221,1)" fg:x="371" fg:w="1"/><text x="29.8589%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="29.6887%" y="517" width="0.0798%" height="15" fill="rgb(225,217,1)" fg:x="372" fg:w="1"/><text x="29.9387%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.6887%" y="501" width="0.0798%" height="15" fill="rgb(241,105,49)" fg:x="372" fg:w="1"/><text x="29.9387%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.6887%" y="485" width="0.0798%" height="15" fill="rgb(215,44,32)" fg:x="372" fg:w="1"/><text x="29.9387%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6887%" y="469" width="0.0798%" height="15" fill="rgb(213,222,14)" fg:x="372" fg:w="1"/><text x="29.9387%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.7686%" y="453" width="0.0798%" height="15" fill="rgb(207,99,52)" fg:x="373" fg:w="1"/><text x="30.0186%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8484%" y="453" width="0.0798%" height="15" fill="rgb(214,208,52)" fg:x="374" fg:w="1"/><text x="30.0984%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="29.2897%" y="629" width="0.8779%" height="15" fill="rgb(244,169,0)" fg:x="367" fg:w="11"/><text x="29.5397%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.88%)</title><rect x="29.2897%" y="613" width="0.8779%" height="15" fill="rgb(216,193,37)" fg:x="367" fg:w="11"/><text x="29.5397%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="29.2897%" y="597" width="0.8779%" height="15" fill="rgb(212,158,10)" fg:x="367" fg:w="11"/><text x="29.5397%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (11 samples, 0.88%)</title><rect x="29.2897%" y="581" width="0.8779%" height="15" fill="rgb(213,110,20)" fg:x="367" fg:w="11"/><text x="29.5397%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (11 samples, 0.88%)</title><rect x="29.2897%" y="565" width="0.8779%" height="15" fill="rgb(226,5,42)" fg:x="367" fg:w="11"/><text x="29.5397%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="29.6887%" y="549" width="0.4789%" height="15" fill="rgb(211,93,8)" fg:x="372" fg:w="6"/><text x="29.9387%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="29.6887%" y="533" width="0.4789%" height="15" fill="rgb(240,208,12)" fg:x="372" fg:w="6"/><text x="29.9387%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (5 samples, 0.40%)</title><rect x="29.7686%" y="517" width="0.3990%" height="15" fill="rgb(233,127,50)" fg:x="373" fg:w="5"/><text x="30.0186%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="29.7686%" y="501" width="0.3990%" height="15" fill="rgb(227,199,53)" fg:x="373" fg:w="5"/><text x="30.0186%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (5 samples, 0.40%)</title><rect x="29.7686%" y="485" width="0.3990%" height="15" fill="rgb(235,199,10)" fg:x="373" fg:w="5"/><text x="30.0186%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="29.7686%" y="469" width="0.3990%" height="15" fill="rgb(228,148,35)" fg:x="373" fg:w="5"/><text x="30.0186%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="29.9282%" y="453" width="0.2394%" height="15" fill="rgb(217,87,19)" fg:x="375" fg:w="3"/><text x="30.1782%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="29.9282%" y="437" width="0.2394%" height="15" fill="rgb(239,9,32)" fg:x="375" fg:w="3"/><text x="30.1782%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.0878%" y="421" width="0.0798%" height="15" fill="rgb(229,101,29)" fg:x="377" fg:w="1"/><text x="30.3378%" y="431.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (12 samples, 0.96%)</title><rect x="29.2897%" y="645" width="0.9577%" height="15" fill="rgb(208,143,26)" fg:x="367" fg:w="12"/><text x="29.5397%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.1676%" y="629" width="0.0798%" height="15" fill="rgb(214,10,2)" fg:x="378" fg:w="1"/><text x="30.4176%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.1676%" y="613" width="0.0798%" height="15" fill="rgb(254,203,30)" fg:x="378" fg:w="1"/><text x="30.4176%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.2474%" y="645" width="0.0798%" height="15" fill="rgb(242,45,3)" fg:x="379" fg:w="1"/><text x="30.4974%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.2474%" y="629" width="0.0798%" height="15" fill="rgb(209,146,51)" fg:x="379" fg:w="1"/><text x="30.4974%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (31 samples, 2.47%)</title><rect x="28.0128%" y="709" width="2.4741%" height="15" fill="rgb(222,80,5)" fg:x="351" fg:w="31"/><text x="28.2628%" y="719.50">&lt;p..</text></g><g><title>plugins_core::tools::get_occupant_keys (18 samples, 1.44%)</title><rect x="29.0503%" y="693" width="1.4366%" height="15" fill="rgb(252,80,35)" fg:x="364" fg:w="18"/><text x="29.3003%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.28%)</title><rect x="29.2099%" y="677" width="1.2769%" height="15" fill="rgb(246,125,28)" fg:x="366" fg:w="16"/><text x="29.4599%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.28%)</title><rect x="29.2099%" y="661" width="1.2769%" height="15" fill="rgb(224,143,51)" fg:x="366" fg:w="16"/><text x="29.4599%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="30.3272%" y="645" width="0.1596%" height="15" fill="rgb(205,24,17)" fg:x="380" fg:w="2"/><text x="30.5772%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="30.3272%" y="629" width="0.1596%" height="15" fill="rgb(253,128,30)" fg:x="380" fg:w="2"/><text x="30.5772%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.4868%" y="693" width="0.0798%" height="15" fill="rgb(214,153,25)" fg:x="382" fg:w="1"/><text x="30.7368%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="30.5666%" y="661" width="0.0798%" height="15" fill="rgb(214,4,28)" fg:x="383" fg:w="1"/><text x="30.8166%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5666%" y="645" width="0.0798%" height="15" fill="rgb(235,179,52)" fg:x="383" fg:w="1"/><text x="30.8166%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="30.5666%" y="693" width="0.1596%" height="15" fill="rgb(233,27,42)" fg:x="383" fg:w="2"/><text x="30.8166%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="30.5666%" y="677" width="0.1596%" height="15" fill="rgb(238,35,25)" fg:x="383" fg:w="2"/><text x="30.8166%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6464%" y="661" width="0.0798%" height="15" fill="rgb(227,44,31)" fg:x="384" fg:w="1"/><text x="30.8964%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="30.8859%" y="629" width="0.1596%" height="15" fill="rgb(232,201,13)" fg:x="387" fg:w="2"/><text x="31.1359%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="30.8859%" y="613" width="0.1596%" height="15" fill="rgb(224,172,52)" fg:x="387" fg:w="2"/><text x="31.1359%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="30.8859%" y="597" width="0.1596%" height="15" fill="rgb(214,27,26)" fg:x="387" fg:w="2"/><text x="31.1359%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="30.8859%" y="581" width="0.1596%" height="15" fill="rgb(210,185,52)" fg:x="387" fg:w="2"/><text x="31.1359%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="30.8859%" y="645" width="0.3192%" height="15" fill="rgb(249,59,32)" fg:x="387" fg:w="4"/><text x="31.1359%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="31.0455%" y="629" width="0.1596%" height="15" fill="rgb(242,209,18)" fg:x="389" fg:w="2"/><text x="31.2955%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.0455%" y="613" width="0.1596%" height="15" fill="rgb(229,0,18)" fg:x="389" fg:w="2"/><text x="31.2955%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="31.1253%" y="597" width="0.0798%" height="15" fill="rgb(217,138,29)" fg:x="390" fg:w="1"/><text x="31.3753%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="31.2849%" y="629" width="0.3990%" height="15" fill="rgb(215,72,42)" fg:x="392" fg:w="5"/><text x="31.5349%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="31.4445%" y="613" width="0.2394%" height="15" fill="rgb(254,115,11)" fg:x="394" fg:w="3"/><text x="31.6945%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="31.5243%" y="597" width="0.1596%" height="15" fill="rgb(205,133,39)" fg:x="395" fg:w="2"/><text x="31.7743%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="31.6840%" y="597" width="0.0798%" height="15" fill="rgb(211,36,27)" fg:x="397" fg:w="1"/><text x="31.9340%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.6840%" y="581" width="0.0798%" height="15" fill="rgb(221,48,10)" fg:x="397" fg:w="1"/><text x="31.9340%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="31.7638%" y="581" width="0.0798%" height="15" fill="rgb(230,172,50)" fg:x="398" fg:w="1"/><text x="32.0138%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="31.8436%" y="581" width="0.0798%" height="15" fill="rgb(249,72,18)" fg:x="399" fg:w="1"/><text x="32.0936%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="31.8436%" y="565" width="0.0798%" height="15" fill="rgb(237,58,48)" fg:x="399" fg:w="1"/><text x="32.0936%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.8436%" y="549" width="0.0798%" height="15" fill="rgb(242,123,3)" fg:x="399" fg:w="1"/><text x="32.0936%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="31.7638%" y="597" width="0.2394%" height="15" fill="rgb(232,111,32)" fg:x="398" fg:w="3"/><text x="32.0138%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="31.9234%" y="581" width="0.0798%" height="15" fill="rgb(229,108,3)" fg:x="400" fg:w="1"/><text x="32.1734%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="31.6840%" y="613" width="0.4789%" height="15" fill="rgb(222,158,10)" fg:x="397" fg:w="6"/><text x="31.9340%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="32.0032%" y="597" width="0.1596%" height="15" fill="rgb(205,34,49)" fg:x="401" fg:w="2"/><text x="32.2532%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="31.6840%" y="629" width="0.5587%" height="15" fill="rgb(232,21,14)" fg:x="397" fg:w="7"/><text x="31.9340%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.1628%" y="613" width="0.0798%" height="15" fill="rgb(229,127,44)" fg:x="403" fg:w="1"/><text x="32.4128%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.1628%" y="597" width="0.0798%" height="15" fill="rgb(232,171,4)" fg:x="403" fg:w="1"/><text x="32.4128%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="32.1628%" y="581" width="0.0798%" height="15" fill="rgb(250,92,16)" fg:x="403" fg:w="1"/><text x="32.4128%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (19 samples, 1.52%)</title><rect x="30.8061%" y="661" width="1.5164%" height="15" fill="rgb(230,103,38)" fg:x="386" fg:w="19"/><text x="31.0561%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.12%)</title><rect x="31.2051%" y="645" width="1.1173%" height="15" fill="rgb(253,167,9)" fg:x="391" fg:w="14"/><text x="31.4551%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.2426%" y="629" width="0.0798%" height="15" fill="rgb(222,118,11)" fg:x="404" fg:w="1"/><text x="32.4926%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.2426%" y="613" width="0.0798%" height="15" fill="rgb(240,202,0)" fg:x="404" fg:w="1"/><text x="32.4926%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.2426%" y="597" width="0.0798%" height="15" fill="rgb(236,124,4)" fg:x="404" fg:w="1"/><text x="32.4926%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3224%" y="629" width="0.0798%" height="15" fill="rgb(244,128,18)" fg:x="405" fg:w="1"/><text x="32.5724%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.4022%" y="613" width="0.1596%" height="15" fill="rgb(231,206,5)" fg:x="406" fg:w="2"/><text x="32.6522%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.5619%" y="613" width="0.0798%" height="15" fill="rgb(237,111,8)" fg:x="408" fg:w="1"/><text x="32.8119%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9609%" y="581" width="0.0798%" height="15" fill="rgb(225,127,3)" fg:x="413" fg:w="1"/><text x="33.2109%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9609%" y="565" width="0.0798%" height="15" fill="rgb(222,85,48)" fg:x="413" fg:w="1"/><text x="33.2109%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0407%" y="565" width="0.0798%" height="15" fill="rgb(221,108,37)" fg:x="414" fg:w="1"/><text x="33.2907%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="32.3224%" y="661" width="0.8779%" height="15" fill="rgb(226,169,36)" fg:x="405" fg:w="11"/><text x="32.5724%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (11 samples, 0.88%)</title><rect x="32.3224%" y="645" width="0.8779%" height="15" fill="rgb(237,76,12)" fg:x="405" fg:w="11"/><text x="32.5724%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="32.4022%" y="629" width="0.7981%" height="15" fill="rgb(210,227,32)" fg:x="406" fg:w="10"/><text x="32.6522%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="32.6417%" y="613" width="0.5587%" height="15" fill="rgb(214,117,20)" fg:x="409" fg:w="7"/><text x="32.8917%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="32.8013%" y="597" width="0.3990%" height="15" fill="rgb(234,119,41)" fg:x="411" fg:w="5"/><text x="33.0513%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.0407%" y="581" width="0.1596%" height="15" fill="rgb(230,130,47)" fg:x="414" fg:w="2"/><text x="33.2907%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1205%" y="565" width="0.0798%" height="15" fill="rgb(215,21,41)" fg:x="415" fg:w="1"/><text x="33.3705%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1205%" y="549" width="0.0798%" height="15" fill="rgb(226,26,53)" fg:x="415" fg:w="1"/><text x="33.3705%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.3599%" y="597" width="0.1596%" height="15" fill="rgb(221,92,23)" fg:x="418" fg:w="2"/><text x="33.6099%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.5196%" y="597" width="0.1596%" height="15" fill="rgb(213,156,21)" fg:x="420" fg:w="2"/><text x="33.7696%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5994%" y="581" width="0.0798%" height="15" fill="rgb(254,166,29)" fg:x="421" fg:w="1"/><text x="33.8494%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.6792%" y="581" width="0.0798%" height="15" fill="rgb(213,71,1)" fg:x="422" fg:w="1"/><text x="33.9292%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.7590%" y="581" width="0.0798%" height="15" fill="rgb(245,8,13)" fg:x="423" fg:w="1"/><text x="34.0090%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7590%" y="565" width="0.0798%" height="15" fill="rgb(213,32,32)" fg:x="423" fg:w="1"/><text x="34.0090%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.8388%" y="565" width="0.1596%" height="15" fill="rgb(251,86,50)" fg:x="424" fg:w="2"/><text x="34.0888%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.8388%" y="549" width="0.1596%" height="15" fill="rgb(252,92,41)" fg:x="424" fg:w="2"/><text x="34.0888%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.9984%" y="549" width="0.0798%" height="15" fill="rgb(234,70,35)" fg:x="426" fg:w="1"/><text x="34.2484%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="34.0782%" y="549" width="0.1596%" height="15" fill="rgb(210,157,19)" fg:x="427" fg:w="2"/><text x="34.3282%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="34.2378%" y="549" width="0.0798%" height="15" fill="rgb(206,20,45)" fg:x="429" fg:w="1"/><text x="34.4878%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.2378%" y="533" width="0.0798%" height="15" fill="rgb(207,34,7)" fg:x="429" fg:w="1"/><text x="34.4878%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2378%" y="517" width="0.0798%" height="15" fill="rgb(253,151,14)" fg:x="429" fg:w="1"/><text x="34.4878%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.28%)</title><rect x="33.2003%" y="629" width="1.2769%" height="15" fill="rgb(252,1,18)" fg:x="416" fg:w="16"/><text x="33.4503%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.28%)</title><rect x="33.2003%" y="613" width="1.2769%" height="15" fill="rgb(214,77,52)" fg:x="416" fg:w="16"/><text x="33.4503%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="33.6792%" y="597" width="0.7981%" height="15" fill="rgb(254,106,35)" fg:x="422" fg:w="10"/><text x="33.9292%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="33.8388%" y="581" width="0.6385%" height="15" fill="rgb(212,67,40)" fg:x="424" fg:w="8"/><text x="34.0888%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="33.9984%" y="565" width="0.4789%" height="15" fill="rgb(228,76,23)" fg:x="426" fg:w="6"/><text x="34.2484%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="34.3176%" y="549" width="0.1596%" height="15" fill="rgb(250,198,5)" fg:x="430" fg:w="2"/><text x="34.5676%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.3974%" y="533" width="0.0798%" height="15" fill="rgb(209,20,25)" fg:x="431" fg:w="1"/><text x="34.6474%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="34.8763%" y="581" width="0.3192%" height="15" fill="rgb(236,32,4)" fg:x="437" fg:w="4"/><text x="35.1263%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="34.8763%" y="565" width="0.3192%" height="15" fill="rgb(215,31,6)" fg:x="437" fg:w="4"/><text x="35.1263%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="35.0359%" y="549" width="0.1596%" height="15" fill="rgb(207,186,49)" fg:x="439" fg:w="2"/><text x="35.2859%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.72%)</title><rect x="34.5571%" y="613" width="0.7183%" height="15" fill="rgb(211,212,49)" fg:x="433" fg:w="9"/><text x="34.8071%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.48%)</title><rect x="34.7965%" y="597" width="0.4789%" height="15" fill="rgb(229,51,41)" fg:x="436" fg:w="6"/><text x="35.0465%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.1955%" y="581" width="0.0798%" height="15" fill="rgb(205,225,36)" fg:x="441" fg:w="1"/><text x="35.4455%" y="591.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (27 samples, 2.15%)</title><rect x="33.2003%" y="645" width="2.1548%" height="15" fill="rgb(209,213,45)" fg:x="416" fg:w="27"/><text x="33.4503%" y="655.50">&lt;..</text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="34.4773%" y="629" width="0.8779%" height="15" fill="rgb(219,35,49)" fg:x="432" fg:w="11"/><text x="34.7273%" y="639.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="35.2753%" y="613" width="0.0798%" height="15" fill="rgb(215,205,22)" fg:x="442" fg:w="1"/><text x="35.5253%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2753%" y="597" width="0.0798%" height="15" fill="rgb(248,204,34)" fg:x="442" fg:w="1"/><text x="35.5253%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.5148%" y="613" width="0.0798%" height="15" fill="rgb(219,223,31)" fg:x="445" fg:w="1"/><text x="35.7648%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="35.5946%" y="613" width="0.4789%" height="15" fill="rgb(236,14,8)" fg:x="446" fg:w="6"/><text x="35.8446%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="35.7542%" y="597" width="0.3192%" height="15" fill="rgb(243,129,23)" fg:x="448" fg:w="4"/><text x="36.0042%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="35.9138%" y="581" width="0.1596%" height="15" fill="rgb(205,204,5)" fg:x="450" fg:w="2"/><text x="36.1638%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="36.0734%" y="613" width="0.0798%" height="15" fill="rgb(244,115,32)" fg:x="452" fg:w="1"/><text x="36.3234%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.0734%" y="597" width="0.0798%" height="15" fill="rgb(229,123,14)" fg:x="452" fg:w="1"/><text x="36.3234%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.0734%" y="581" width="0.0798%" height="15" fill="rgb(250,85,1)" fg:x="452" fg:w="1"/><text x="36.3234%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="36.0734%" y="565" width="0.0798%" height="15" fill="rgb(209,141,54)" fg:x="452" fg:w="1"/><text x="36.3234%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="36.1532%" y="613" width="0.1596%" height="15" fill="rgb(244,107,39)" fg:x="453" fg:w="2"/><text x="36.4032%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="36.2330%" y="597" width="0.0798%" height="15" fill="rgb(230,68,26)" fg:x="454" fg:w="1"/><text x="36.4830%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2330%" y="581" width="0.0798%" height="15" fill="rgb(220,178,33)" fg:x="454" fg:w="1"/><text x="36.4830%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.2330%" y="565" width="0.0798%" height="15" fill="rgb(220,77,53)" fg:x="454" fg:w="1"/><text x="36.4830%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="36.3128%" y="613" width="0.2394%" height="15" fill="rgb(224,108,19)" fg:x="455" fg:w="3"/><text x="36.5628%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="36.3927%" y="597" width="0.1596%" height="15" fill="rgb(223,203,27)" fg:x="456" fg:w="2"/><text x="36.6427%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="36.6321%" y="581" width="0.0798%" height="15" fill="rgb(211,32,46)" fg:x="459" fg:w="1"/><text x="36.8821%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="36.7119%" y="565" width="0.4789%" height="15" fill="rgb(240,101,27)" fg:x="460" fg:w="6"/><text x="36.9619%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="36.7119%" y="549" width="0.4789%" height="15" fill="rgb(217,210,11)" fg:x="460" fg:w="6"/><text x="36.9619%" y="559.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="36.7917%" y="533" width="0.3990%" height="15" fill="rgb(236,130,21)" fg:x="461" fg:w="5"/><text x="37.0417%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="37.3504%" y="533" width="0.0798%" height="15" fill="rgb(250,136,8)" fg:x="468" fg:w="1"/><text x="37.6004%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="37.4302%" y="533" width="0.0798%" height="15" fill="rgb(243,223,36)" fg:x="469" fg:w="1"/><text x="37.6802%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4302%" y="517" width="0.0798%" height="15" fill="rgb(246,184,8)" fg:x="469" fg:w="1"/><text x="37.6802%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4302%" y="501" width="0.0798%" height="15" fill="rgb(222,158,36)" fg:x="469" fg:w="1"/><text x="37.6802%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.4302%" y="485" width="0.0798%" height="15" fill="rgb(210,220,19)" fg:x="469" fg:w="1"/><text x="37.6802%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="37.1907%" y="565" width="0.3990%" height="15" fill="rgb(246,44,38)" fg:x="466" fg:w="5"/><text x="37.4407%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="37.1907%" y="549" width="0.3990%" height="15" fill="rgb(246,186,14)" fg:x="466" fg:w="5"/><text x="37.4407%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.5100%" y="533" width="0.0798%" height="15" fill="rgb(233,193,20)" fg:x="470" fg:w="1"/><text x="37.7600%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="37.8292%" y="533" width="0.5587%" height="15" fill="rgb(215,60,5)" fg:x="474" fg:w="7"/><text x="38.0792%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="38.0686%" y="517" width="0.3192%" height="15" fill="rgb(207,128,10)" fg:x="477" fg:w="4"/><text x="38.3186%" y="527.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="38.0686%" y="501" width="0.3192%" height="15" fill="rgb(238,84,54)" fg:x="477" fg:w="4"/><text x="38.3186%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="38.3879%" y="517" width="0.0798%" height="15" fill="rgb(213,130,11)" fg:x="481" fg:w="1"/><text x="38.6379%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="38.7071%" y="469" width="0.1596%" height="15" fill="rgb(235,62,9)" fg:x="485" fg:w="2"/><text x="38.9571%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.20%)</title><rect x="37.7494%" y="549" width="1.1971%" height="15" fill="rgb(222,64,24)" fg:x="473" fg:w="15"/><text x="37.9994%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="38.3879%" y="533" width="0.5587%" height="15" fill="rgb(238,193,42)" fg:x="481" fg:w="7"/><text x="38.6379%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="38.4677%" y="517" width="0.4789%" height="15" fill="rgb(243,204,46)" fg:x="482" fg:w="6"/><text x="38.7177%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="38.6273%" y="501" width="0.3192%" height="15" fill="rgb(243,196,11)" fg:x="484" fg:w="4"/><text x="38.8773%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="38.7071%" y="485" width="0.2394%" height="15" fill="rgb(232,77,22)" fg:x="485" fg:w="3"/><text x="38.9571%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="38.8667%" y="469" width="0.0798%" height="15" fill="rgb(215,80,25)" fg:x="487" fg:w="1"/><text x="39.1167%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (29 samples, 2.31%)</title><rect x="36.7119%" y="581" width="2.3144%" height="15" fill="rgb(210,173,7)" fg:x="460" fg:w="29"/><text x="36.9619%" y="591.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (18 samples, 1.44%)</title><rect x="37.5898%" y="565" width="1.4366%" height="15" fill="rgb(207,101,10)" fg:x="471" fg:w="18"/><text x="37.8398%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.9465%" y="549" width="0.0798%" height="15" fill="rgb(246,57,48)" fg:x="488" fg:w="1"/><text x="39.1965%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (31 samples, 2.47%)</title><rect x="36.6321%" y="597" width="2.4741%" height="15" fill="rgb(236,184,40)" fg:x="459" fg:w="31"/><text x="36.8821%" y="607.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="39.0263%" y="581" width="0.0798%" height="15" fill="rgb(210,205,13)" fg:x="489" fg:w="1"/><text x="39.2763%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.0263%" y="565" width="0.0798%" height="15" fill="rgb(231,129,42)" fg:x="489" fg:w="1"/><text x="39.2763%" y="575.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (49 samples, 3.91%)</title><rect x="35.3551%" y="645" width="3.9106%" height="15" fill="rgb(220,229,54)" fg:x="443" fg:w="49"/><text x="35.6051%" y="655.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (48 samples, 3.83%)</title><rect x="35.4350%" y="629" width="3.8308%" height="15" fill="rgb(230,192,26)" fg:x="444" fg:w="48"/><text x="35.6850%" y="639.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.71%)</title><rect x="36.5523%" y="613" width="2.7135%" height="15" fill="rgb(253,18,30)" fg:x="458" fg:w="34"/><text x="36.8023%" y="623.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="39.1061%" y="597" width="0.1596%" height="15" fill="rgb(216,62,53)" fg:x="490" fg:w="2"/><text x="39.3561%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.4254%" y="469" width="0.0798%" height="15" fill="rgb(230,79,29)" fg:x="494" fg:w="1"/><text x="39.6754%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.4254%" y="453" width="0.0798%" height="15" fill="rgb(242,26,26)" fg:x="494" fg:w="1"/><text x="39.6754%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="39.3456%" y="501" width="0.2394%" height="15" fill="rgb(227,125,21)" fg:x="493" fg:w="3"/><text x="39.5956%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="39.3456%" y="485" width="0.2394%" height="15" fill="rgb(229,93,26)" fg:x="493" fg:w="3"/><text x="39.5956%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.5052%" y="469" width="0.0798%" height="15" fill="rgb(227,228,8)" fg:x="495" fg:w="1"/><text x="39.7552%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="39.5850%" y="453" width="0.0798%" height="15" fill="rgb(233,56,0)" fg:x="496" fg:w="1"/><text x="39.8350%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="39.5850%" y="485" width="0.2394%" height="15" fill="rgb(225,185,17)" fg:x="496" fg:w="3"/><text x="39.8350%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="39.5850%" y="469" width="0.2394%" height="15" fill="rgb(238,202,30)" fg:x="496" fg:w="3"/><text x="39.8350%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="39.6648%" y="453" width="0.1596%" height="15" fill="rgb(236,60,13)" fg:x="497" fg:w="2"/><text x="39.9148%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.7446%" y="437" width="0.0798%" height="15" fill="rgb(244,92,0)" fg:x="498" fg:w="1"/><text x="39.9946%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.8244%" y="485" width="0.0798%" height="15" fill="rgb(225,57,15)" fg:x="499" fg:w="1"/><text x="40.0744%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="39.8244%" y="469" width="0.0798%" height="15" fill="rgb(228,5,28)" fg:x="499" fg:w="1"/><text x="40.0744%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="39.3456%" y="517" width="0.6385%" height="15" fill="rgb(252,34,51)" fg:x="493" fg:w="8"/><text x="39.5956%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="39.5850%" y="501" width="0.3990%" height="15" fill="rgb(235,58,7)" fg:x="496" fg:w="5"/><text x="39.8350%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9042%" y="485" width="0.0798%" height="15" fill="rgb(250,132,20)" fg:x="500" fg:w="1"/><text x="40.1542%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="39.9042%" y="469" width="0.0798%" height="15" fill="rgb(217,164,0)" fg:x="500" fg:w="1"/><text x="40.1542%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9042%" y="453" width="0.0798%" height="15" fill="rgb(208,220,35)" fg:x="500" fg:w="1"/><text x="40.1542%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.9840%" y="517" width="0.0798%" height="15" fill="rgb(227,42,51)" fg:x="501" fg:w="1"/><text x="40.2340%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.9840%" y="501" width="0.0798%" height="15" fill="rgb(225,146,38)" fg:x="501" fg:w="1"/><text x="40.2340%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="39.3456%" y="533" width="0.7981%" height="15" fill="rgb(252,108,37)" fg:x="493" fg:w="10"/><text x="39.5956%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.0638%" y="517" width="0.0798%" height="15" fill="rgb(244,101,24)" fg:x="502" fg:w="1"/><text x="40.3138%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="39.3456%" y="549" width="0.8779%" height="15" fill="rgb(213,161,50)" fg:x="493" fg:w="11"/><text x="39.5956%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.1437%" y="533" width="0.0798%" height="15" fill="rgb(248,159,19)" fg:x="503" fg:w="1"/><text x="40.3937%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.2235%" y="549" width="0.0798%" height="15" fill="rgb(233,179,15)" fg:x="504" fg:w="1"/><text x="40.4735%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2235%" y="533" width="0.0798%" height="15" fill="rgb(248,178,3)" fg:x="504" fg:w="1"/><text x="40.4735%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="39.2658%" y="581" width="1.4366%" height="15" fill="rgb(245,190,41)" fg:x="492" fg:w="18"/><text x="39.5158%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="39.2658%" y="565" width="1.4366%" height="15" fill="rgb(218,151,19)" fg:x="492" fg:w="18"/><text x="39.5158%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="40.3033%" y="549" width="0.3990%" height="15" fill="rgb(245,25,44)" fg:x="505" fg:w="5"/><text x="40.5533%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="40.3831%" y="533" width="0.3192%" height="15" fill="rgb(235,172,47)" fg:x="506" fg:w="4"/><text x="40.6331%" y="543.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="40.4629%" y="517" width="0.2394%" height="15" fill="rgb(246,33,12)" fg:x="507" fg:w="3"/><text x="40.7129%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="40.7023%" y="581" width="0.0798%" height="15" fill="rgb(214,124,7)" fg:x="510" fg:w="1"/><text x="40.9523%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7023%" y="565" width="0.0798%" height="15" fill="rgb(246,186,18)" fg:x="510" fg:w="1"/><text x="40.9523%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0215%" y="549" width="0.0798%" height="15" fill="rgb(231,94,1)" fg:x="514" fg:w="1"/><text x="41.2715%" y="559.50"></text></g><g><title>engine::session::state::State::close (166 samples, 13.25%)</title><rect x="27.9330%" y="725" width="13.2482%" height="15" fill="rgb(208,33,48)" fg:x="350" fg:w="166"/><text x="28.1830%" y="735.50">engine::session::sta..</text></g><g><title>engine::session::state::State::flush_entities (134 samples, 10.69%)</title><rect x="30.4868%" y="709" width="10.6943%" height="15" fill="rgb(208,195,44)" fg:x="382" fg:w="134"/><text x="30.7368%" y="719.50">engine::session:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (131 samples, 10.45%)</title><rect x="30.7263%" y="693" width="10.4549%" height="15" fill="rgb(226,13,52)" fg:x="385" fg:w="131"/><text x="30.9763%" y="703.50">engine::session..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (130 samples, 10.38%)</title><rect x="30.8061%" y="677" width="10.3751%" height="15" fill="rgb(217,219,45)" fg:x="386" fg:w="130"/><text x="31.0561%" y="687.50">engine::session..</text></g><g><title>kernel::model::any_entity_changes (100 samples, 7.98%)</title><rect x="33.2003%" y="661" width="7.9808%" height="15" fill="rgb(223,45,25)" fg:x="416" fg:w="100"/><text x="33.4503%" y="671.50">kernel::mod..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (24 samples, 1.92%)</title><rect x="39.2658%" y="645" width="1.9154%" height="15" fill="rgb(241,163,0)" fg:x="492" fg:w="24"/><text x="39.5158%" y="655.50">s..</text></g><g><title>serde_json::de::from_trait (24 samples, 1.92%)</title><rect x="39.2658%" y="629" width="1.9154%" height="15" fill="rgb(216,68,47)" fg:x="492" fg:w="24"/><text x="39.5158%" y="639.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 1.92%)</title><rect x="39.2658%" y="613" width="1.9154%" height="15" fill="rgb(236,119,45)" fg:x="492" fg:w="24"/><text x="39.5158%" y="623.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (24 samples, 1.92%)</title><rect x="39.2658%" y="597" width="1.9154%" height="15" fill="rgb(209,188,24)" fg:x="492" fg:w="24"/><text x="39.5158%" y="607.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="40.7821%" y="581" width="0.3990%" height="15" fill="rgb(221,118,7)" fg:x="511" fg:w="5"/><text x="41.0321%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="41.0215%" y="565" width="0.1596%" height="15" fill="rgb(213,148,43)" fg:x="514" fg:w="2"/><text x="41.2715%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.1014%" y="549" width="0.0798%" height="15" fill="rgb(231,21,43)" fg:x="515" fg:w="1"/><text x="41.3514%" y="559.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (1 samples, 0.08%)</title><rect x="41.1812%" y="709" width="0.0798%" height="15" fill="rgb(232,213,43)" fg:x="516" fg:w="1"/><text x="41.4312%" y="719.50"></text></g><g><title>std::time::Instant::duration_since (1 samples, 0.08%)</title><rect x="41.1812%" y="693" width="0.0798%" height="15" fill="rgb(239,145,50)" fg:x="516" fg:w="1"/><text x="41.4312%" y="703.50"></text></g><g><title>std::time::Instant::checked_duration_since (1 samples, 0.08%)</title><rect x="41.1812%" y="677" width="0.0798%" height="15" fill="rgb(222,131,18)" fg:x="516" fg:w="1"/><text x="41.4312%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (1 samples, 0.08%)</title><rect x="41.1812%" y="661" width="0.0798%" height="15" fill="rgb(243,181,13)" fg:x="516" fg:w="1"/><text x="41.4312%" y="671.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.08%)</title><rect x="41.1812%" y="645" width="0.0798%" height="15" fill="rgb(212,74,41)" fg:x="516" fg:w="1"/><text x="41.4312%" y="655.50"></text></g><g><title>engine::session::Session::close (175 samples, 13.97%)</title><rect x="27.3743%" y="741" width="13.9665%" height="15" fill="rgb(237,143,34)" fg:x="343" fg:w="175"/><text x="27.6243%" y="751.50">engine::session::Sess..</text></g><g><title>std::time::Instant::elapsed (2 samples, 0.16%)</title><rect x="41.1812%" y="725" width="0.1596%" height="15" fill="rgb(228,139,0)" fg:x="516" fg:w="2"/><text x="41.4312%" y="735.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="41.2610%" y="709" width="0.0798%" height="15" fill="rgb(227,214,11)" fg:x="517" fg:w="1"/><text x="41.5110%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="41.2610%" y="693" width="0.0798%" height="15" fill="rgb(228,118,39)" fg:x="517" fg:w="1"/><text x="41.5110%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="41.2610%" y="677" width="0.0798%" height="15" fill="rgb(207,117,22)" fg:x="517" fg:w="1"/><text x="41.5110%" y="687.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="41.2610%" y="661" width="0.0798%" height="15" fill="rgb(225,91,8)" fg:x="517" fg:w="1"/><text x="41.5110%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.5004%" y="549" width="0.1596%" height="15" fill="rgb(230,219,48)" fg:x="520" fg:w="2"/><text x="41.7504%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="41.6600%" y="533" width="0.0798%" height="15" fill="rgb(244,0,23)" fg:x="522" fg:w="1"/><text x="41.9100%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.6600%" y="517" width="0.0798%" height="15" fill="rgb(206,212,23)" fg:x="522" fg:w="1"/><text x="41.9100%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="41.7398%" y="533" width="0.0798%" height="15" fill="rgb(254,62,10)" fg:x="523" fg:w="1"/><text x="41.9898%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="41.7398%" y="517" width="0.0798%" height="15" fill="rgb(236,58,8)" fg:x="523" fg:w="1"/><text x="41.9898%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.7398%" y="501" width="0.0798%" height="15" fill="rgb(232,212,17)" fg:x="523" fg:w="1"/><text x="41.9898%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="41.7398%" y="485" width="0.0798%" height="15" fill="rgb(206,132,9)" fg:x="523" fg:w="1"/><text x="41.9898%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.7398%" y="469" width="0.0798%" height="15" fill="rgb(234,97,28)" fg:x="523" fg:w="1"/><text x="41.9898%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.8196%" y="469" width="0.0798%" height="15" fill="rgb(254,144,9)" fg:x="524" fg:w="1"/><text x="42.0696%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="41.5004%" y="565" width="0.4789%" height="15" fill="rgb(244,204,43)" fg:x="520" fg:w="6"/><text x="41.7504%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="41.6600%" y="549" width="0.3192%" height="15" fill="rgb(248,177,16)" fg:x="522" fg:w="4"/><text x="41.9100%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.8196%" y="533" width="0.1596%" height="15" fill="rgb(219,110,15)" fg:x="524" fg:w="2"/><text x="42.0696%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8196%" y="517" width="0.1596%" height="15" fill="rgb(212,203,25)" fg:x="524" fg:w="2"/><text x="42.0696%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.8196%" y="501" width="0.1596%" height="15" fill="rgb(205,50,1)" fg:x="524" fg:w="2"/><text x="42.0696%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8196%" y="485" width="0.1596%" height="15" fill="rgb(222,152,41)" fg:x="524" fg:w="2"/><text x="42.0696%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="41.8994%" y="469" width="0.0798%" height="15" fill="rgb(236,83,3)" fg:x="525" fg:w="1"/><text x="42.1494%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.8994%" y="453" width="0.0798%" height="15" fill="rgb(214,30,54)" fg:x="525" fg:w="1"/><text x="42.1494%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.9792%" y="533" width="0.0798%" height="15" fill="rgb(250,117,31)" fg:x="526" fg:w="1"/><text x="42.2292%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="41.9792%" y="517" width="0.0798%" height="15" fill="rgb(228,77,14)" fg:x="526" fg:w="1"/><text x="42.2292%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="42.0591%" y="533" width="0.0798%" height="15" fill="rgb(241,3,28)" fg:x="527" fg:w="1"/><text x="42.3091%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.0591%" y="517" width="0.0798%" height="15" fill="rgb(221,175,52)" fg:x="527" fg:w="1"/><text x="42.3091%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.0591%" y="501" width="0.0798%" height="15" fill="rgb(237,91,6)" fg:x="527" fg:w="1"/><text x="42.3091%" y="511.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (10 samples, 0.80%)</title><rect x="41.5004%" y="613" width="0.7981%" height="15" fill="rgb(246,46,42)" fg:x="520" fg:w="10"/><text x="41.7504%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.80%)</title><rect x="41.5004%" y="597" width="0.7981%" height="15" fill="rgb(235,199,0)" fg:x="520" fg:w="10"/><text x="41.7504%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="41.5004%" y="581" width="0.7981%" height="15" fill="rgb(224,44,40)" fg:x="520" fg:w="10"/><text x="41.7504%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="41.9792%" y="565" width="0.3192%" height="15" fill="rgb(209,24,35)" fg:x="526" fg:w="4"/><text x="42.2292%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="41.9792%" y="549" width="0.3192%" height="15" fill="rgb(244,46,22)" fg:x="526" fg:w="4"/><text x="42.2292%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.1389%" y="533" width="0.1596%" height="15" fill="rgb(235,99,8)" fg:x="528" fg:w="2"/><text x="42.3889%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.1389%" y="517" width="0.1596%" height="15" fill="rgb(218,127,36)" fg:x="528" fg:w="2"/><text x="42.3889%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.1389%" y="501" width="0.1596%" height="15" fill="rgb(238,47,46)" fg:x="528" fg:w="2"/><text x="42.3889%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.1389%" y="485" width="0.1596%" height="15" fill="rgb(233,65,17)" fg:x="528" fg:w="2"/><text x="42.3889%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.4581%" y="469" width="0.1596%" height="15" fill="rgb(239,22,33)" fg:x="532" fg:w="2"/><text x="42.7081%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.5379%" y="453" width="0.0798%" height="15" fill="rgb(243,66,43)" fg:x="533" fg:w="1"/><text x="42.7879%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.6975%" y="437" width="0.0798%" height="15" fill="rgb(235,210,28)" fg:x="535" fg:w="1"/><text x="42.9475%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.7773%" y="389" width="0.0798%" height="15" fill="rgb(205,191,50)" fg:x="536" fg:w="1"/><text x="43.0273%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.7773%" y="373" width="0.0798%" height="15" fill="rgb(251,217,19)" fg:x="536" fg:w="1"/><text x="43.0273%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.7773%" y="357" width="0.0798%" height="15" fill="rgb(205,174,37)" fg:x="536" fg:w="1"/><text x="43.0273%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.7773%" y="341" width="0.0798%" height="15" fill="rgb(212,158,42)" fg:x="536" fg:w="1"/><text x="43.0273%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7773%" y="325" width="0.0798%" height="15" fill="rgb(212,208,51)" fg:x="536" fg:w="1"/><text x="43.0273%" y="335.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="42.4581%" y="517" width="0.4789%" height="15" fill="rgb(225,198,20)" fg:x="532" fg:w="6"/><text x="42.7081%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="42.4581%" y="501" width="0.4789%" height="15" fill="rgb(247,41,44)" fg:x="532" fg:w="6"/><text x="42.7081%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="42.4581%" y="485" width="0.4789%" height="15" fill="rgb(228,33,41)" fg:x="532" fg:w="6"/><text x="42.7081%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="42.6177%" y="469" width="0.3192%" height="15" fill="rgb(215,47,52)" fg:x="534" fg:w="4"/><text x="42.8677%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="42.6177%" y="453" width="0.3192%" height="15" fill="rgb(248,106,37)" fg:x="534" fg:w="4"/><text x="42.8677%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.7773%" y="437" width="0.1596%" height="15" fill="rgb(238,91,29)" fg:x="536" fg:w="2"/><text x="43.0273%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="42.7773%" y="421" width="0.1596%" height="15" fill="rgb(226,111,40)" fg:x="536" fg:w="2"/><text x="43.0273%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="42.7773%" y="405" width="0.1596%" height="15" fill="rgb(229,159,36)" fg:x="536" fg:w="2"/><text x="43.0273%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.8571%" y="389" width="0.0798%" height="15" fill="rgb(221,109,4)" fg:x="537" fg:w="1"/><text x="43.1071%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="42.8571%" y="373" width="0.0798%" height="15" fill="rgb(236,56,25)" fg:x="537" fg:w="1"/><text x="43.1071%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="42.8571%" y="357" width="0.0798%" height="15" fill="rgb(244,113,23)" fg:x="537" fg:w="1"/><text x="43.1071%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8571%" y="341" width="0.0798%" height="15" fill="rgb(249,132,2)" fg:x="537" fg:w="1"/><text x="43.1071%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0168%" y="453" width="0.0798%" height="15" fill="rgb(205,185,21)" fg:x="539" fg:w="1"/><text x="43.2668%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.0168%" y="437" width="0.0798%" height="15" fill="rgb(245,130,2)" fg:x="539" fg:w="1"/><text x="43.2668%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="43.0966%" y="437" width="0.0798%" height="15" fill="rgb(246,71,26)" fg:x="540" fg:w="1"/><text x="43.3466%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.0966%" y="421" width="0.0798%" height="15" fill="rgb(234,194,6)" fg:x="540" fg:w="1"/><text x="43.3466%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0966%" y="405" width="0.0798%" height="15" fill="rgb(206,24,32)" fg:x="540" fg:w="1"/><text x="43.3466%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.0966%" y="389" width="0.0798%" height="15" fill="rgb(233,7,54)" fg:x="540" fg:w="1"/><text x="43.3466%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.80%)</title><rect x="42.4581%" y="533" width="0.7981%" height="15" fill="rgb(252,46,1)" fg:x="532" fg:w="10"/><text x="42.7081%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.9370%" y="517" width="0.3192%" height="15" fill="rgb(216,113,53)" fg:x="538" fg:w="4"/><text x="43.1870%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.9370%" y="501" width="0.3192%" height="15" fill="rgb(215,40,24)" fg:x="538" fg:w="4"/><text x="43.1870%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="43.0168%" y="485" width="0.2394%" height="15" fill="rgb(233,222,8)" fg:x="539" fg:w="3"/><text x="43.2668%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="43.0168%" y="469" width="0.2394%" height="15" fill="rgb(248,73,28)" fg:x="539" fg:w="3"/><text x="43.2668%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.0966%" y="453" width="0.1596%" height="15" fill="rgb(247,126,28)" fg:x="540" fg:w="2"/><text x="43.3466%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.1764%" y="437" width="0.0798%" height="15" fill="rgb(242,173,54)" fg:x="541" fg:w="1"/><text x="43.4264%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.1764%" y="421" width="0.0798%" height="15" fill="rgb(244,186,22)" fg:x="541" fg:w="1"/><text x="43.4264%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.1764%" y="405" width="0.0798%" height="15" fill="rgb(231,187,4)" fg:x="541" fg:w="1"/><text x="43.4264%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="42.4581%" y="565" width="1.0375%" height="15" fill="rgb(252,66,47)" fg:x="532" fg:w="13"/><text x="42.7081%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="42.4581%" y="549" width="1.0375%" height="15" fill="rgb(240,228,28)" fg:x="532" fg:w="13"/><text x="42.7081%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="43.2562%" y="533" width="0.2394%" height="15" fill="rgb(237,63,43)" fg:x="542" fg:w="3"/><text x="43.5062%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="43.2562%" y="517" width="0.2394%" height="15" fill="rgb(214,1,44)" fg:x="542" fg:w="3"/><text x="43.5062%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="43.2562%" y="501" width="0.2394%" height="15" fill="rgb(212,2,46)" fg:x="542" fg:w="3"/><text x="43.5062%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4158%" y="485" width="0.0798%" height="15" fill="rgb(213,142,5)" fg:x="544" fg:w="1"/><text x="43.6658%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.4158%" y="469" width="0.0798%" height="15" fill="rgb(229,135,1)" fg:x="544" fg:w="1"/><text x="43.6658%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="43.4956%" y="501" width="0.0798%" height="15" fill="rgb(252,98,38)" fg:x="545" fg:w="1"/><text x="43.7456%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="43.5754%" y="501" width="0.0798%" height="15" fill="rgb(206,89,40)" fg:x="546" fg:w="1"/><text x="43.8254%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="43.5754%" y="485" width="0.0798%" height="15" fill="rgb(219,73,36)" fg:x="546" fg:w="1"/><text x="43.8254%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.5754%" y="469" width="0.0798%" height="15" fill="rgb(207,168,32)" fg:x="546" fg:w="1"/><text x="43.8254%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.7350%" y="469" width="0.0798%" height="15" fill="rgb(215,113,21)" fg:x="548" fg:w="1"/><text x="43.9850%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.7350%" y="453" width="0.0798%" height="15" fill="rgb(217,144,43)" fg:x="548" fg:w="1"/><text x="43.9850%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8148%" y="437" width="0.0798%" height="15" fill="rgb(249,48,50)" fg:x="549" fg:w="1"/><text x="44.0648%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8148%" y="421" width="0.0798%" height="15" fill="rgb(242,1,26)" fg:x="549" fg:w="1"/><text x="44.0648%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="43.4956%" y="533" width="0.4789%" height="15" fill="rgb(231,167,42)" fg:x="545" fg:w="6"/><text x="43.7456%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="43.4956%" y="517" width="0.4789%" height="15" fill="rgb(242,177,45)" fg:x="545" fg:w="6"/><text x="43.7456%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="43.6552%" y="501" width="0.3192%" height="15" fill="rgb(232,121,42)" fg:x="547" fg:w="4"/><text x="43.9052%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="43.6552%" y="485" width="0.3192%" height="15" fill="rgb(205,8,42)" fg:x="547" fg:w="4"/><text x="43.9052%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.8148%" y="469" width="0.1596%" height="15" fill="rgb(238,199,24)" fg:x="549" fg:w="2"/><text x="44.0648%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.8148%" y="453" width="0.1596%" height="15" fill="rgb(228,112,2)" fg:x="549" fg:w="2"/><text x="44.0648%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.8947%" y="437" width="0.0798%" height="15" fill="rgb(215,115,33)" fg:x="550" fg:w="1"/><text x="44.1447%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8947%" y="421" width="0.0798%" height="15" fill="rgb(230,209,34)" fg:x="550" fg:w="1"/><text x="44.1447%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9745%" y="501" width="0.0798%" height="15" fill="rgb(246,76,12)" fg:x="551" fg:w="1"/><text x="44.2245%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9745%" y="485" width="0.0798%" height="15" fill="rgb(240,110,9)" fg:x="551" fg:w="1"/><text x="44.2245%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.9745%" y="469" width="0.0798%" height="15" fill="rgb(224,94,46)" fg:x="551" fg:w="1"/><text x="44.2245%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9745%" y="453" width="0.0798%" height="15" fill="rgb(247,150,22)" fg:x="551" fg:w="1"/><text x="44.2245%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.9745%" y="437" width="0.0798%" height="15" fill="rgb(249,85,13)" fg:x="551" fg:w="1"/><text x="44.2245%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.9745%" y="421" width="0.0798%" height="15" fill="rgb(208,77,41)" fg:x="551" fg:w="1"/><text x="44.2245%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.9745%" y="405" width="0.0798%" height="15" fill="rgb(240,42,44)" fg:x="551" fg:w="1"/><text x="44.2245%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.9745%" y="389" width="0.0798%" height="15" fill="rgb(222,10,51)" fg:x="551" fg:w="1"/><text x="44.2245%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9745%" y="373" width="0.0798%" height="15" fill="rgb(208,146,53)" fg:x="551" fg:w="1"/><text x="44.2245%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.9745%" y="357" width="0.0798%" height="15" fill="rgb(236,162,23)" fg:x="551" fg:w="1"/><text x="44.2245%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.9745%" y="341" width="0.0798%" height="15" fill="rgb(218,66,21)" fg:x="551" fg:w="1"/><text x="44.2245%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.9745%" y="325" width="0.0798%" height="15" fill="rgb(233,6,47)" fg:x="551" fg:w="1"/><text x="44.2245%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.9745%" y="309" width="0.0798%" height="15" fill="rgb(236,59,51)" fg:x="551" fg:w="1"/><text x="44.2245%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.9745%" y="293" width="0.0798%" height="15" fill="rgb(242,12,46)" fg:x="551" fg:w="1"/><text x="44.2245%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9745%" y="277" width="0.0798%" height="15" fill="rgb(243,142,19)" fg:x="551" fg:w="1"/><text x="44.2245%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="44.0543%" y="501" width="0.0798%" height="15" fill="rgb(217,28,17)" fg:x="552" fg:w="1"/><text x="44.3043%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.0543%" y="485" width="0.0798%" height="15" fill="rgb(228,2,27)" fg:x="552" fg:w="1"/><text x="44.3043%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0543%" y="469" width="0.0798%" height="15" fill="rgb(214,221,4)" fg:x="552" fg:w="1"/><text x="44.3043%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.0543%" y="453" width="0.0798%" height="15" fill="rgb(224,69,26)" fg:x="552" fg:w="1"/><text x="44.3043%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.0543%" y="437" width="0.0798%" height="15" fill="rgb(219,70,4)" fg:x="552" fg:w="1"/><text x="44.3043%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.1341%" y="437" width="0.0798%" height="15" fill="rgb(218,157,39)" fg:x="553" fg:w="1"/><text x="44.3841%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (23 samples, 1.84%)</title><rect x="42.4581%" y="581" width="1.8356%" height="15" fill="rgb(238,36,28)" fg:x="532" fg:w="23"/><text x="42.7081%" y="591.50">&lt;..</text></g><g><title>kernel::model::entity::Entity::entity_ref (10 samples, 0.80%)</title><rect x="43.4956%" y="565" width="0.7981%" height="15" fill="rgb(232,29,0)" fg:x="545" fg:w="10"/><text x="43.7456%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="43.4956%" y="549" width="0.7981%" height="15" fill="rgb(243,138,46)" fg:x="545" fg:w="10"/><text x="43.7456%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="43.9745%" y="533" width="0.3192%" height="15" fill="rgb(232,186,41)" fg:x="551" fg:w="4"/><text x="44.2245%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="43.9745%" y="517" width="0.3192%" height="15" fill="rgb(252,166,17)" fg:x="551" fg:w="4"/><text x="44.2245%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.1341%" y="501" width="0.1596%" height="15" fill="rgb(228,179,12)" fg:x="553" fg:w="2"/><text x="44.3841%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1341%" y="485" width="0.1596%" height="15" fill="rgb(254,205,53)" fg:x="553" fg:w="2"/><text x="44.3841%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="44.1341%" y="469" width="0.1596%" height="15" fill="rgb(224,163,47)" fg:x="553" fg:w="2"/><text x="44.3841%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.1341%" y="453" width="0.1596%" height="15" fill="rgb(208,43,47)" fg:x="553" fg:w="2"/><text x="44.3841%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="44.2139%" y="437" width="0.0798%" height="15" fill="rgb(224,198,38)" fg:x="554" fg:w="1"/><text x="44.4639%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.2139%" y="421" width="0.0798%" height="15" fill="rgb(234,12,40)" fg:x="554" fg:w="1"/><text x="44.4639%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.2937%" y="581" width="0.0798%" height="15" fill="rgb(237,212,39)" fg:x="555" fg:w="1"/><text x="44.5437%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2937%" y="565" width="0.0798%" height="15" fill="rgb(253,2,33)" fg:x="555" fg:w="1"/><text x="44.5437%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2937%" y="549" width="0.0798%" height="15" fill="rgb(251,29,16)" fg:x="555" fg:w="1"/><text x="44.5437%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.2937%" y="533" width="0.0798%" height="15" fill="rgb(214,38,29)" fg:x="555" fg:w="1"/><text x="44.5437%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (40 samples, 3.19%)</title><rect x="41.5004%" y="629" width="3.1923%" height="15" fill="rgb(226,226,29)" fg:x="520" fg:w="40"/><text x="41.7504%" y="639.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (30 samples, 2.39%)</title><rect x="42.2985%" y="613" width="2.3943%" height="15" fill="rgb(236,79,42)" fg:x="530" fg:w="30"/><text x="42.5485%" y="623.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (29 samples, 2.31%)</title><rect x="42.3783%" y="597" width="2.3144%" height="15" fill="rgb(222,12,36)" fg:x="531" fg:w="29"/><text x="42.6283%" y="607.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="44.3735%" y="581" width="0.3192%" height="15" fill="rgb(232,123,44)" fg:x="556" fg:w="4"/><text x="44.6235%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="44.3735%" y="565" width="0.3192%" height="15" fill="rgb(234,93,50)" fg:x="556" fg:w="4"/><text x="44.6235%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.4533%" y="549" width="0.2394%" height="15" fill="rgb(210,86,49)" fg:x="557" fg:w="3"/><text x="44.7033%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.4533%" y="533" width="0.2394%" height="15" fill="rgb(224,91,54)" fg:x="557" fg:w="3"/><text x="44.7033%" y="543.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="44.7725%" y="597" width="0.0798%" height="15" fill="rgb(239,169,9)" fg:x="561" fg:w="1"/><text x="45.0225%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.8524%" y="533" width="0.2394%" height="15" fill="rgb(238,29,17)" fg:x="562" fg:w="3"/><text x="45.1024%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="44.8524%" y="517" width="0.2394%" height="15" fill="rgb(227,160,22)" fg:x="562" fg:w="3"/><text x="45.1024%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.9322%" y="501" width="0.1596%" height="15" fill="rgb(231,129,52)" fg:x="563" fg:w="2"/><text x="45.1822%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0120%" y="485" width="0.0798%" height="15" fill="rgb(241,184,9)" fg:x="564" fg:w="1"/><text x="45.2620%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0120%" y="469" width="0.0798%" height="15" fill="rgb(217,43,48)" fg:x="564" fg:w="1"/><text x="45.2620%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0120%" y="453" width="0.0798%" height="15" fill="rgb(213,49,1)" fg:x="564" fg:w="1"/><text x="45.2620%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0120%" y="437" width="0.0798%" height="15" fill="rgb(223,79,39)" fg:x="564" fg:w="1"/><text x="45.2620%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0120%" y="421" width="0.0798%" height="15" fill="rgb(228,227,46)" fg:x="564" fg:w="1"/><text x="45.2620%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0120%" y="405" width="0.0798%" height="15" fill="rgb(245,89,41)" fg:x="564" fg:w="1"/><text x="45.2620%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0120%" y="389" width="0.0798%" height="15" fill="rgb(253,83,21)" fg:x="564" fg:w="1"/><text x="45.2620%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0120%" y="373" width="0.0798%" height="15" fill="rgb(229,116,51)" fg:x="564" fg:w="1"/><text x="45.2620%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0120%" y="357" width="0.0798%" height="15" fill="rgb(246,67,26)" fg:x="564" fg:w="1"/><text x="45.2620%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0120%" y="341" width="0.0798%" height="15" fill="rgb(250,117,20)" fg:x="564" fg:w="1"/><text x="45.2620%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0120%" y="325" width="0.0798%" height="15" fill="rgb(207,88,17)" fg:x="564" fg:w="1"/><text x="45.2620%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="44.8524%" y="549" width="0.3192%" height="15" fill="rgb(212,98,36)" fg:x="562" fg:w="4"/><text x="45.1024%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0918%" y="533" width="0.0798%" height="15" fill="rgb(221,72,6)" fg:x="565" fg:w="1"/><text x="45.3418%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.0918%" y="517" width="0.0798%" height="15" fill="rgb(235,129,19)" fg:x="565" fg:w="1"/><text x="45.3418%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.0918%" y="501" width="0.0798%" height="15" fill="rgb(237,200,6)" fg:x="565" fg:w="1"/><text x="45.3418%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.0918%" y="485" width="0.0798%" height="15" fill="rgb(239,69,54)" fg:x="565" fg:w="1"/><text x="45.3418%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.0918%" y="469" width="0.0798%" height="15" fill="rgb(214,68,45)" fg:x="565" fg:w="1"/><text x="45.3418%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0918%" y="453" width="0.0798%" height="15" fill="rgb(254,160,8)" fg:x="565" fg:w="1"/><text x="45.3418%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.0918%" y="437" width="0.0798%" height="15" fill="rgb(215,226,31)" fg:x="565" fg:w="1"/><text x="45.3418%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.0918%" y="421" width="0.0798%" height="15" fill="rgb(253,6,35)" fg:x="565" fg:w="1"/><text x="45.3418%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.0918%" y="405" width="0.0798%" height="15" fill="rgb(219,96,42)" fg:x="565" fg:w="1"/><text x="45.3418%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.0918%" y="389" width="0.0798%" height="15" fill="rgb(207,170,13)" fg:x="565" fg:w="1"/><text x="45.3418%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.0918%" y="373" width="0.0798%" height="15" fill="rgb(239,101,5)" fg:x="565" fg:w="1"/><text x="45.3418%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.0918%" y="357" width="0.0798%" height="15" fill="rgb(228,183,34)" fg:x="565" fg:w="1"/><text x="45.3418%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="44.8524%" y="581" width="0.3990%" height="15" fill="rgb(205,28,31)" fg:x="562" fg:w="5"/><text x="45.1024%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.8524%" y="565" width="0.3990%" height="15" fill="rgb(214,118,50)" fg:x="562" fg:w="5"/><text x="45.1024%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.1716%" y="549" width="0.0798%" height="15" fill="rgb(213,108,51)" fg:x="566" fg:w="1"/><text x="45.4216%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1716%" y="533" width="0.0798%" height="15" fill="rgb(238,56,37)" fg:x="566" fg:w="1"/><text x="45.4216%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.1716%" y="517" width="0.0798%" height="15" fill="rgb(214,136,28)" fg:x="566" fg:w="1"/><text x="45.4216%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1716%" y="501" width="0.0798%" height="15" fill="rgb(221,201,54)" fg:x="566" fg:w="1"/><text x="45.4216%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.1716%" y="485" width="0.0798%" height="15" fill="rgb(228,216,39)" fg:x="566" fg:w="1"/><text x="45.4216%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.1716%" y="469" width="0.0798%" height="15" fill="rgb(207,229,49)" fg:x="566" fg:w="1"/><text x="45.4216%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.1716%" y="453" width="0.0798%" height="15" fill="rgb(224,23,43)" fg:x="566" fg:w="1"/><text x="45.4216%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.1716%" y="437" width="0.0798%" height="15" fill="rgb(247,97,18)" fg:x="566" fg:w="1"/><text x="45.4216%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.2514%" y="549" width="0.0798%" height="15" fill="rgb(232,53,32)" fg:x="567" fg:w="1"/><text x="45.5014%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.2514%" y="533" width="0.0798%" height="15" fill="rgb(247,38,23)" fg:x="567" fg:w="1"/><text x="45.5014%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2514%" y="517" width="0.0798%" height="15" fill="rgb(228,101,52)" fg:x="567" fg:w="1"/><text x="45.5014%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.2514%" y="501" width="0.0798%" height="15" fill="rgb(231,45,36)" fg:x="567" fg:w="1"/><text x="45.5014%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.2514%" y="485" width="0.0798%" height="15" fill="rgb(221,183,50)" fg:x="567" fg:w="1"/><text x="45.5014%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.2514%" y="469" width="0.0798%" height="15" fill="rgb(251,132,12)" fg:x="567" fg:w="1"/><text x="45.5014%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.2514%" y="453" width="0.0798%" height="15" fill="rgb(252,50,16)" fg:x="567" fg:w="1"/><text x="45.5014%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.2514%" y="437" width="0.0798%" height="15" fill="rgb(224,60,15)" fg:x="567" fg:w="1"/><text x="45.5014%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.2514%" y="421" width="0.0798%" height="15" fill="rgb(254,2,34)" fg:x="567" fg:w="1"/><text x="45.5014%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.2514%" y="405" width="0.0798%" height="15" fill="rgb(232,154,8)" fg:x="567" fg:w="1"/><text x="45.5014%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.2514%" y="389" width="0.0798%" height="15" fill="rgb(235,190,52)" fg:x="567" fg:w="1"/><text x="45.5014%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.2514%" y="373" width="0.0798%" height="15" fill="rgb(213,218,38)" fg:x="567" fg:w="1"/><text x="45.5014%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.2514%" y="357" width="0.0798%" height="15" fill="rgb(237,50,37)" fg:x="567" fg:w="1"/><text x="45.5014%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2514%" y="341" width="0.0798%" height="15" fill="rgb(235,51,35)" fg:x="567" fg:w="1"/><text x="45.5014%" y="351.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (9 samples, 0.72%)</title><rect x="44.6927%" y="629" width="0.7183%" height="15" fill="rgb(244,40,52)" fg:x="560" fg:w="9"/><text x="44.9427%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (9 samples, 0.72%)</title><rect x="44.6927%" y="613" width="0.7183%" height="15" fill="rgb(217,225,45)" fg:x="560" fg:w="9"/><text x="44.9427%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="44.8524%" y="597" width="0.5587%" height="15" fill="rgb(247,191,36)" fg:x="562" fg:w="7"/><text x="45.1024%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="45.2514%" y="581" width="0.1596%" height="15" fill="rgb(251,144,31)" fg:x="567" fg:w="2"/><text x="45.5014%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="45.2514%" y="565" width="0.1596%" height="15" fill="rgb(227,155,41)" fg:x="567" fg:w="2"/><text x="45.5014%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3312%" y="549" width="0.0798%" height="15" fill="rgb(236,121,36)" fg:x="568" fg:w="1"/><text x="45.5812%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3312%" y="533" width="0.0798%" height="15" fill="rgb(221,128,28)" fg:x="568" fg:w="1"/><text x="45.5812%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="45.3312%" y="517" width="0.0798%" height="15" fill="rgb(249,67,50)" fg:x="568" fg:w="1"/><text x="45.5812%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="45.3312%" y="501" width="0.0798%" height="15" fill="rgb(241,126,38)" fg:x="568" fg:w="1"/><text x="45.5812%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.3312%" y="485" width="0.0798%" height="15" fill="rgb(239,33,14)" fg:x="568" fg:w="1"/><text x="45.5812%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.3312%" y="469" width="0.0798%" height="15" fill="rgb(207,221,54)" fg:x="568" fg:w="1"/><text x="45.5812%" y="479.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (50 samples, 3.99%)</title><rect x="41.5004%" y="645" width="3.9904%" height="15" fill="rgb(242,138,43)" fg:x="520" fg:w="50"/><text x="41.7504%" y="655.50">&lt;eng..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.4110%" y="629" width="0.0798%" height="15" fill="rgb(231,118,19)" fg:x="569" fg:w="1"/><text x="45.6610%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.4908%" y="629" width="0.0798%" height="15" fill="rgb(214,128,54)" fg:x="570" fg:w="1"/><text x="45.7408%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="45.8101%" y="485" width="0.0798%" height="15" fill="rgb(236,136,6)" fg:x="574" fg:w="1"/><text x="46.0601%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="45.8101%" y="469" width="0.0798%" height="15" fill="rgb(247,30,38)" fg:x="574" fg:w="1"/><text x="46.0601%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="45.8101%" y="453" width="0.0798%" height="15" fill="rgb(249,189,40)" fg:x="574" fg:w="1"/><text x="46.0601%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="45.8101%" y="437" width="0.0798%" height="15" fill="rgb(247,179,7)" fg:x="574" fg:w="1"/><text x="46.0601%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="45.9697%" y="453" width="0.0798%" height="15" fill="rgb(239,46,52)" fg:x="576" fg:w="1"/><text x="46.2197%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.9697%" y="437" width="0.0798%" height="15" fill="rgb(225,28,52)" fg:x="576" fg:w="1"/><text x="46.2197%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9697%" y="421" width="0.0798%" height="15" fill="rgb(217,208,44)" fg:x="576" fg:w="1"/><text x="46.2197%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.9697%" y="405" width="0.0798%" height="15" fill="rgb(224,11,34)" fg:x="576" fg:w="1"/><text x="46.2197%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.9697%" y="389" width="0.0798%" height="15" fill="rgb(205,134,17)" fg:x="576" fg:w="1"/><text x="46.2197%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.9697%" y="373" width="0.0798%" height="15" fill="rgb(237,125,9)" fg:x="576" fg:w="1"/><text x="46.2197%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="45.8899%" y="485" width="0.2394%" height="15" fill="rgb(208,139,47)" fg:x="575" fg:w="3"/><text x="46.1399%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="45.9697%" y="469" width="0.1596%" height="15" fill="rgb(242,5,5)" fg:x="576" fg:w="2"/><text x="46.2197%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.0495%" y="453" width="0.0798%" height="15" fill="rgb(218,78,2)" fg:x="577" fg:w="1"/><text x="46.2995%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.0495%" y="437" width="0.0798%" height="15" fill="rgb(217,75,16)" fg:x="577" fg:w="1"/><text x="46.2995%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="46.0495%" y="421" width="0.0798%" height="15" fill="rgb(212,56,17)" fg:x="577" fg:w="1"/><text x="46.2995%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.2889%" y="453" width="0.1596%" height="15" fill="rgb(228,61,29)" fg:x="580" fg:w="2"/><text x="46.5389%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.2889%" y="437" width="0.1596%" height="15" fill="rgb(247,202,38)" fg:x="580" fg:w="2"/><text x="46.5389%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.2889%" y="421" width="0.1596%" height="15" fill="rgb(211,216,43)" fg:x="580" fg:w="2"/><text x="46.5389%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4485%" y="453" width="0.0798%" height="15" fill="rgb(220,7,49)" fg:x="582" fg:w="1"/><text x="46.6985%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.5283%" y="453" width="0.0798%" height="15" fill="rgb(219,158,7)" fg:x="583" fg:w="1"/><text x="46.7783%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="46.6081%" y="453" width="0.1596%" height="15" fill="rgb(206,127,9)" fg:x="584" fg:w="2"/><text x="46.8581%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="46.6081%" y="437" width="0.1596%" height="15" fill="rgb(206,103,43)" fg:x="584" fg:w="2"/><text x="46.8581%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="46.6081%" y="421" width="0.1596%" height="15" fill="rgb(240,108,41)" fg:x="584" fg:w="2"/><text x="46.8581%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="46.6081%" y="405" width="0.1596%" height="15" fill="rgb(252,212,6)" fg:x="584" fg:w="2"/><text x="46.8581%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.6879%" y="389" width="0.0798%" height="15" fill="rgb(248,105,31)" fg:x="585" fg:w="1"/><text x="46.9379%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8476%" y="389" width="0.0798%" height="15" fill="rgb(241,123,4)" fg:x="587" fg:w="1"/><text x="47.0976%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8476%" y="373" width="0.0798%" height="15" fill="rgb(223,74,37)" fg:x="587" fg:w="1"/><text x="47.0976%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="46.7678%" y="453" width="0.3192%" height="15" fill="rgb(251,219,28)" fg:x="586" fg:w="4"/><text x="47.0178%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="46.7678%" y="437" width="0.3192%" height="15" fill="rgb(218,36,31)" fg:x="586" fg:w="4"/><text x="47.0178%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="46.8476%" y="421" width="0.2394%" height="15" fill="rgb(229,40,15)" fg:x="587" fg:w="3"/><text x="47.0976%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="46.8476%" y="405" width="0.2394%" height="15" fill="rgb(208,138,37)" fg:x="587" fg:w="3"/><text x="47.0976%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.9274%" y="389" width="0.1596%" height="15" fill="rgb(208,40,52)" fg:x="588" fg:w="2"/><text x="47.1774%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.9274%" y="373" width="0.1596%" height="15" fill="rgb(246,181,48)" fg:x="588" fg:w="2"/><text x="47.1774%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="47.0072%" y="357" width="0.0798%" height="15" fill="rgb(253,178,36)" fg:x="589" fg:w="1"/><text x="47.2572%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.0072%" y="341" width="0.0798%" height="15" fill="rgb(210,170,6)" fg:x="589" fg:w="1"/><text x="47.2572%" y="351.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (17 samples, 1.36%)</title><rect x="45.8101%" y="501" width="1.3567%" height="15" fill="rgb(243,62,22)" fg:x="574" fg:w="17"/><text x="46.0601%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.04%)</title><rect x="46.1293%" y="485" width="1.0375%" height="15" fill="rgb(213,145,26)" fg:x="578" fg:w="13"/><text x="46.3793%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="46.2889%" y="469" width="0.8779%" height="15" fill="rgb(237,177,23)" fg:x="580" fg:w="11"/><text x="46.5389%" y="479.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="47.0870%" y="453" width="0.0798%" height="15" fill="rgb(252,5,24)" fg:x="590" fg:w="1"/><text x="47.3370%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2466%" y="453" width="0.0798%" height="15" fill="rgb(230,108,54)" fg:x="592" fg:w="1"/><text x="47.4966%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2466%" y="437" width="0.0798%" height="15" fill="rgb(252,192,41)" fg:x="592" fg:w="1"/><text x="47.4966%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.2466%" y="421" width="0.0798%" height="15" fill="rgb(218,125,20)" fg:x="592" fg:w="1"/><text x="47.4966%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.2466%" y="405" width="0.0798%" height="15" fill="rgb(230,223,15)" fg:x="592" fg:w="1"/><text x="47.4966%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.2466%" y="389" width="0.0798%" height="15" fill="rgb(239,99,47)" fg:x="592" fg:w="1"/><text x="47.4966%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.2466%" y="373" width="0.0798%" height="15" fill="rgb(222,214,23)" fg:x="592" fg:w="1"/><text x="47.4966%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2466%" y="357" width="0.0798%" height="15" fill="rgb(250,98,43)" fg:x="592" fg:w="1"/><text x="47.4966%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="47.2466%" y="341" width="0.0798%" height="15" fill="rgb(226,140,11)" fg:x="592" fg:w="1"/><text x="47.4966%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="47.2466%" y="325" width="0.0798%" height="15" fill="rgb(239,2,22)" fg:x="592" fg:w="1"/><text x="47.4966%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="47.2466%" y="309" width="0.0798%" height="15" fill="rgb(209,106,26)" fg:x="592" fg:w="1"/><text x="47.4966%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="47.2466%" y="293" width="0.0798%" height="15" fill="rgb(209,135,11)" fg:x="592" fg:w="1"/><text x="47.4966%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="47.2466%" y="277" width="0.0798%" height="15" fill="rgb(241,58,6)" fg:x="592" fg:w="1"/><text x="47.4966%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.2466%" y="261" width="0.0798%" height="15" fill="rgb(214,78,1)" fg:x="592" fg:w="1"/><text x="47.4966%" y="271.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="47.3264%" y="453" width="0.0798%" height="15" fill="rgb(229,135,33)" fg:x="593" fg:w="1"/><text x="47.5764%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="47.4062%" y="373" width="0.0798%" height="15" fill="rgb(245,87,50)" fg:x="594" fg:w="1"/><text x="47.6562%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.4860%" y="357" width="0.0798%" height="15" fill="rgb(222,222,8)" fg:x="595" fg:w="1"/><text x="47.7360%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.4860%" y="341" width="0.0798%" height="15" fill="rgb(214,97,50)" fg:x="595" fg:w="1"/><text x="47.7360%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5658%" y="293" width="0.0798%" height="15" fill="rgb(244,161,51)" fg:x="596" fg:w="1"/><text x="47.8158%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.5658%" y="277" width="0.0798%" height="15" fill="rgb(225,17,4)" fg:x="596" fg:w="1"/><text x="47.8158%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="47.4062%" y="389" width="0.3192%" height="15" fill="rgb(238,10,13)" fg:x="594" fg:w="4"/><text x="47.6562%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="47.4860%" y="373" width="0.2394%" height="15" fill="rgb(239,169,14)" fg:x="595" fg:w="3"/><text x="47.7360%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.5658%" y="357" width="0.1596%" height="15" fill="rgb(213,105,25)" fg:x="596" fg:w="2"/><text x="47.8158%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.5658%" y="341" width="0.1596%" height="15" fill="rgb(233,4,17)" fg:x="596" fg:w="2"/><text x="47.8158%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.5658%" y="325" width="0.1596%" height="15" fill="rgb(212,5,35)" fg:x="596" fg:w="2"/><text x="47.8158%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.5658%" y="309" width="0.1596%" height="15" fill="rgb(216,3,14)" fg:x="596" fg:w="2"/><text x="47.8158%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="47.6457%" y="293" width="0.0798%" height="15" fill="rgb(240,105,33)" fg:x="597" fg:w="1"/><text x="47.8957%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.6457%" y="277" width="0.0798%" height="15" fill="rgb(216,73,0)" fg:x="597" fg:w="1"/><text x="47.8957%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8053%" y="341" width="0.0798%" height="15" fill="rgb(217,153,48)" fg:x="599" fg:w="1"/><text x="48.0553%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8053%" y="325" width="0.0798%" height="15" fill="rgb(218,180,8)" fg:x="599" fg:w="1"/><text x="48.0553%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.8053%" y="309" width="0.0798%" height="15" fill="rgb(252,168,2)" fg:x="599" fg:w="1"/><text x="48.0553%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="47.8053%" y="357" width="0.1596%" height="15" fill="rgb(224,116,33)" fg:x="599" fg:w="2"/><text x="48.0553%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.8851%" y="341" width="0.0798%" height="15" fill="rgb(229,205,17)" fg:x="600" fg:w="1"/><text x="48.1351%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="47.8851%" y="325" width="0.0798%" height="15" fill="rgb(234,1,41)" fg:x="600" fg:w="1"/><text x="48.1351%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="47.8851%" y="309" width="0.0798%" height="15" fill="rgb(244,185,8)" fg:x="600" fg:w="1"/><text x="48.1351%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="47.8851%" y="293" width="0.0798%" height="15" fill="rgb(248,51,21)" fg:x="600" fg:w="1"/><text x="48.1351%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="47.8851%" y="277" width="0.0798%" height="15" fill="rgb(248,157,31)" fg:x="600" fg:w="1"/><text x="48.1351%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="47.8851%" y="261" width="0.0798%" height="15" fill="rgb(210,34,47)" fg:x="600" fg:w="1"/><text x="48.1351%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="47.8851%" y="245" width="0.0798%" height="15" fill="rgb(227,139,53)" fg:x="600" fg:w="1"/><text x="48.1351%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="47.7255%" y="389" width="0.3990%" height="15" fill="rgb(232,211,37)" fg:x="598" fg:w="5"/><text x="47.9755%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="47.7255%" y="373" width="0.3990%" height="15" fill="rgb(236,133,10)" fg:x="598" fg:w="5"/><text x="47.9755%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.9649%" y="357" width="0.1596%" height="15" fill="rgb(243,202,25)" fg:x="601" fg:w="2"/><text x="48.2149%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9649%" y="341" width="0.1596%" height="15" fill="rgb(224,59,9)" fg:x="601" fg:w="2"/><text x="48.2149%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="47.9649%" y="325" width="0.1596%" height="15" fill="rgb(206,146,16)" fg:x="601" fg:w="2"/><text x="48.2149%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.9649%" y="309" width="0.1596%" height="15" fill="rgb(220,47,2)" fg:x="601" fg:w="2"/><text x="48.2149%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.0447%" y="293" width="0.0798%" height="15" fill="rgb(225,124,51)" fg:x="602" fg:w="1"/><text x="48.2947%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.0447%" y="277" width="0.0798%" height="15" fill="rgb(241,220,50)" fg:x="602" fg:w="1"/><text x="48.2947%" y="287.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (11 samples, 0.88%)</title><rect x="47.4062%" y="437" width="0.8779%" height="15" fill="rgb(232,168,5)" fg:x="594" fg:w="11"/><text x="47.6562%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.88%)</title><rect x="47.4062%" y="421" width="0.8779%" height="15" fill="rgb(243,90,22)" fg:x="594" fg:w="11"/><text x="47.6562%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="47.4062%" y="405" width="0.8779%" height="15" fill="rgb(223,153,32)" fg:x="594" fg:w="11"/><text x="47.6562%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="48.1245%" y="389" width="0.1596%" height="15" fill="rgb(243,124,20)" fg:x="603" fg:w="2"/><text x="48.3745%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="48.1245%" y="373" width="0.1596%" height="15" fill="rgb(246,168,39)" fg:x="603" fg:w="2"/><text x="48.3745%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="48.1245%" y="357" width="0.1596%" height="15" fill="rgb(222,165,54)" fg:x="603" fg:w="2"/><text x="48.3745%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.2043%" y="341" width="0.0798%" height="15" fill="rgb(251,142,27)" fg:x="604" fg:w="1"/><text x="48.4543%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.2043%" y="325" width="0.0798%" height="15" fill="rgb(207,168,50)" fg:x="604" fg:w="1"/><text x="48.4543%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.2043%" y="309" width="0.0798%" height="15" fill="rgb(250,139,25)" fg:x="604" fg:w="1"/><text x="48.4543%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="48.2043%" y="293" width="0.0798%" height="15" fill="rgb(214,194,48)" fg:x="604" fg:w="1"/><text x="48.4543%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="48.2043%" y="277" width="0.0798%" height="15" fill="rgb(227,138,47)" fg:x="604" fg:w="1"/><text x="48.4543%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="48.2043%" y="261" width="0.0798%" height="15" fill="rgb(250,162,5)" fg:x="604" fg:w="1"/><text x="48.4543%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="48.2043%" y="245" width="0.0798%" height="15" fill="rgb(229,74,25)" fg:x="604" fg:w="1"/><text x="48.4543%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.2043%" y="229" width="0.0798%" height="15" fill="rgb(221,124,34)" fg:x="604" fg:w="1"/><text x="48.4543%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.2043%" y="213" width="0.0798%" height="15" fill="rgb(225,94,25)" fg:x="604" fg:w="1"/><text x="48.4543%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.2043%" y="197" width="0.0798%" height="15" fill="rgb(210,100,12)" fg:x="604" fg:w="1"/><text x="48.4543%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="48.2043%" y="181" width="0.0798%" height="15" fill="rgb(206,62,48)" fg:x="604" fg:w="1"/><text x="48.4543%" y="191.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4437%" y="405" width="0.0798%" height="15" fill="rgb(222,181,9)" fg:x="607" fg:w="1"/><text x="48.6937%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.4437%" y="389" width="0.0798%" height="15" fill="rgb(248,42,38)" fg:x="607" fg:w="1"/><text x="48.6937%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.4437%" y="373" width="0.0798%" height="15" fill="rgb(213,40,6)" fg:x="607" fg:w="1"/><text x="48.6937%" y="383.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.5235%" y="213" width="0.1596%" height="15" fill="rgb(211,108,15)" fg:x="608" fg:w="2"/><text x="48.7735%" y="223.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.5235%" y="197" width="0.1596%" height="15" fill="rgb(249,62,9)" fg:x="608" fg:w="2"/><text x="48.7735%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.6832%" y="213" width="0.1596%" height="15" fill="rgb(233,26,54)" fg:x="610" fg:w="2"/><text x="48.9332%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.7630%" y="197" width="0.0798%" height="15" fill="rgb(210,175,26)" fg:x="611" fg:w="1"/><text x="49.0130%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.8428%" y="181" width="0.0798%" height="15" fill="rgb(210,43,33)" fg:x="612" fg:w="1"/><text x="49.0928%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.8428%" y="165" width="0.0798%" height="15" fill="rgb(224,46,17)" fg:x="612" fg:w="1"/><text x="49.0928%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.9226%" y="181" width="0.1596%" height="15" fill="rgb(254,24,38)" fg:x="613" fg:w="2"/><text x="49.1726%" y="191.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.9226%" y="165" width="0.1596%" height="15" fill="rgb(248,32,0)" fg:x="613" fg:w="2"/><text x="49.1726%" y="175.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.9226%" y="149" width="0.1596%" height="15" fill="rgb(224,37,41)" fg:x="613" fg:w="2"/><text x="49.1726%" y="159.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="48.5235%" y="293" width="0.7183%" height="15" fill="rgb(252,70,22)" fg:x="608" fg:w="9"/><text x="48.7735%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="48.5235%" y="277" width="0.7183%" height="15" fill="rgb(241,123,50)" fg:x="608" fg:w="9"/><text x="48.7735%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="48.5235%" y="261" width="0.7183%" height="15" fill="rgb(246,138,33)" fg:x="608" fg:w="9"/><text x="48.7735%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="48.5235%" y="245" width="0.7183%" height="15" fill="rgb(218,39,32)" fg:x="608" fg:w="9"/><text x="48.7735%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="48.5235%" y="229" width="0.7183%" height="15" fill="rgb(241,229,10)" fg:x="608" fg:w="9"/><text x="48.7735%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="48.8428%" y="213" width="0.3990%" height="15" fill="rgb(212,160,10)" fg:x="612" fg:w="5"/><text x="49.0928%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="48.8428%" y="197" width="0.3990%" height="15" fill="rgb(227,48,51)" fg:x="612" fg:w="5"/><text x="49.0928%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.0822%" y="181" width="0.1596%" height="15" fill="rgb(238,159,21)" fg:x="615" fg:w="2"/><text x="49.3322%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.0822%" y="165" width="0.1596%" height="15" fill="rgb(216,1,10)" fg:x="615" fg:w="2"/><text x="49.3322%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.0822%" y="149" width="0.1596%" height="15" fill="rgb(209,228,25)" fg:x="615" fg:w="2"/><text x="49.3322%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.0822%" y="133" width="0.1596%" height="15" fill="rgb(234,160,10)" fg:x="615" fg:w="2"/><text x="49.3322%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="49.0822%" y="117" width="0.1596%" height="15" fill="rgb(212,66,25)" fg:x="615" fg:w="2"/><text x="49.3322%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3216%" y="181" width="0.0798%" height="15" fill="rgb(254,121,18)" fg:x="618" fg:w="1"/><text x="49.5716%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.3216%" y="165" width="0.0798%" height="15" fill="rgb(219,127,1)" fg:x="618" fg:w="1"/><text x="49.5716%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.3216%" y="149" width="0.0798%" height="15" fill="rgb(219,224,42)" fg:x="618" fg:w="1"/><text x="49.5716%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.3216%" y="133" width="0.0798%" height="15" fill="rgb(253,130,22)" fg:x="618" fg:w="1"/><text x="49.5716%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.3216%" y="117" width="0.0798%" height="15" fill="rgb(253,39,28)" fg:x="618" fg:w="1"/><text x="49.5716%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="49.3216%" y="101" width="0.0798%" height="15" fill="rgb(231,126,37)" fg:x="618" fg:w="1"/><text x="49.5716%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="49.3216%" y="213" width="0.1596%" height="15" fill="rgb(251,145,14)" fg:x="618" fg:w="2"/><text x="49.5716%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.3216%" y="197" width="0.1596%" height="15" fill="rgb(229,164,30)" fg:x="618" fg:w="2"/><text x="49.5716%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="49.4014%" y="181" width="0.0798%" height="15" fill="rgb(233,227,54)" fg:x="619" fg:w="1"/><text x="49.6514%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="49.4014%" y="165" width="0.0798%" height="15" fill="rgb(240,94,22)" fg:x="619" fg:w="1"/><text x="49.6514%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.4014%" y="149" width="0.0798%" height="15" fill="rgb(217,56,16)" fg:x="619" fg:w="1"/><text x="49.6514%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4812%" y="181" width="0.0798%" height="15" fill="rgb(229,133,38)" fg:x="620" fg:w="1"/><text x="49.7312%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="49.4812%" y="213" width="0.1596%" height="15" fill="rgb(225,139,35)" fg:x="620" fg:w="2"/><text x="49.7312%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="49.4812%" y="197" width="0.1596%" height="15" fill="rgb(223,100,16)" fg:x="620" fg:w="2"/><text x="49.7312%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.5611%" y="181" width="0.0798%" height="15" fill="rgb(207,43,50)" fg:x="621" fg:w="1"/><text x="49.8111%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.5611%" y="165" width="0.0798%" height="15" fill="rgb(237,221,9)" fg:x="621" fg:w="1"/><text x="49.8111%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="49.5611%" y="149" width="0.0798%" height="15" fill="rgb(236,134,24)" fg:x="621" fg:w="1"/><text x="49.8111%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="49.3216%" y="261" width="0.3990%" height="15" fill="rgb(222,173,4)" fg:x="618" fg:w="5"/><text x="49.5716%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="49.3216%" y="245" width="0.3990%" height="15" fill="rgb(234,144,52)" fg:x="618" fg:w="5"/><text x="49.5716%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="49.3216%" y="229" width="0.3990%" height="15" fill="rgb(223,41,7)" fg:x="618" fg:w="5"/><text x="49.5716%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6409%" y="213" width="0.0798%" height="15" fill="rgb(226,143,9)" fg:x="622" fg:w="1"/><text x="49.8909%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.6409%" y="197" width="0.0798%" height="15" fill="rgb(234,43,37)" fg:x="622" fg:w="1"/><text x="49.8909%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="49.6409%" y="181" width="0.0798%" height="15" fill="rgb(224,188,11)" fg:x="622" fg:w="1"/><text x="49.8909%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.6409%" y="165" width="0.0798%" height="15" fill="rgb(233,113,28)" fg:x="622" fg:w="1"/><text x="49.8909%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.28%)</title><rect x="48.5235%" y="309" width="1.2769%" height="15" fill="rgb(215,16,1)" fg:x="608" fg:w="16"/><text x="48.7735%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="49.2418%" y="293" width="0.5587%" height="15" fill="rgb(238,74,38)" fg:x="617" fg:w="7"/><text x="49.4918%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="49.2418%" y="277" width="0.5587%" height="15" fill="rgb(221,66,35)" fg:x="617" fg:w="7"/><text x="49.4918%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7207%" y="261" width="0.0798%" height="15" fill="rgb(251,225,2)" fg:x="623" fg:w="1"/><text x="49.9707%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7207%" y="245" width="0.0798%" height="15" fill="rgb(240,169,18)" fg:x="623" fg:w="1"/><text x="49.9707%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.7207%" y="229" width="0.0798%" height="15" fill="rgb(243,130,50)" fg:x="623" fg:w="1"/><text x="49.9707%" y="239.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.7207%" y="213" width="0.0798%" height="15" fill="rgb(228,75,13)" fg:x="623" fg:w="1"/><text x="49.9707%" y="223.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="49.7207%" y="197" width="0.0798%" height="15" fill="rgb(252,95,35)" fg:x="623" fg:w="1"/><text x="49.9707%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.8005%" y="277" width="0.0798%" height="15" fill="rgb(222,180,54)" fg:x="624" fg:w="1"/><text x="50.0505%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (18 samples, 1.44%)</title><rect x="48.5235%" y="341" width="1.4366%" height="15" fill="rgb(250,110,34)" fg:x="608" fg:w="18"/><text x="48.7735%" y="351.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (18 samples, 1.44%)</title><rect x="48.5235%" y="325" width="1.4366%" height="15" fill="rgb(208,100,21)" fg:x="608" fg:w="18"/><text x="48.7735%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="49.8005%" y="309" width="0.1596%" height="15" fill="rgb(209,123,47)" fg:x="624" fg:w="2"/><text x="50.0505%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.8005%" y="293" width="0.1596%" height="15" fill="rgb(237,147,9)" fg:x="624" fg:w="2"/><text x="50.0505%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.8803%" y="277" width="0.0798%" height="15" fill="rgb(228,206,23)" fg:x="625" fg:w="1"/><text x="50.1303%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.8803%" y="261" width="0.0798%" height="15" fill="rgb(217,174,46)" fg:x="625" fg:w="1"/><text x="50.1303%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.8803%" y="245" width="0.0798%" height="15" fill="rgb(231,126,21)" fg:x="625" fg:w="1"/><text x="50.1303%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.8803%" y="229" width="0.0798%" height="15" fill="rgb(245,26,1)" fg:x="625" fg:w="1"/><text x="50.1303%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.8803%" y="213" width="0.0798%" height="15" fill="rgb(224,138,39)" fg:x="625" fg:w="1"/><text x="50.1303%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.9601%" y="245" width="0.0798%" height="15" fill="rgb(208,97,3)" fg:x="626" fg:w="1"/><text x="50.2101%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.9601%" y="229" width="0.0798%" height="15" fill="rgb(222,77,29)" fg:x="626" fg:w="1"/><text x="50.2101%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.9601%" y="213" width="0.0798%" height="15" fill="rgb(243,188,36)" fg:x="626" fg:w="1"/><text x="50.2101%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.9601%" y="197" width="0.0798%" height="15" fill="rgb(218,214,3)" fg:x="626" fg:w="1"/><text x="50.2101%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.9601%" y="181" width="0.0798%" height="15" fill="rgb(211,183,45)" fg:x="626" fg:w="1"/><text x="50.2101%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.9601%" y="165" width="0.0798%" height="15" fill="rgb(230,218,25)" fg:x="626" fg:w="1"/><text x="50.2101%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.9601%" y="149" width="0.0798%" height="15" fill="rgb(233,86,6)" fg:x="626" fg:w="1"/><text x="50.2101%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.9601%" y="133" width="0.0798%" height="15" fill="rgb(220,59,24)" fg:x="626" fg:w="1"/><text x="50.2101%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.9601%" y="117" width="0.0798%" height="15" fill="rgb(227,60,1)" fg:x="626" fg:w="1"/><text x="50.2101%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.9601%" y="101" width="0.0798%" height="15" fill="rgb(216,212,54)" fg:x="626" fg:w="1"/><text x="50.2101%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.9601%" y="85" width="0.0798%" height="15" fill="rgb(227,81,54)" fg:x="626" fg:w="1"/><text x="50.2101%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.9601%" y="69" width="0.0798%" height="15" fill="rgb(206,204,43)" fg:x="626" fg:w="1"/><text x="50.2101%" y="79.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="49.9601%" y="261" width="0.1596%" height="15" fill="rgb(219,29,26)" fg:x="626" fg:w="2"/><text x="50.2101%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0399%" y="245" width="0.0798%" height="15" fill="rgb(252,40,36)" fg:x="627" fg:w="1"/><text x="50.2899%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="49.9601%" y="277" width="0.2394%" height="15" fill="rgb(224,205,39)" fg:x="626" fg:w="3"/><text x="50.2101%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1197%" y="261" width="0.0798%" height="15" fill="rgb(222,13,21)" fg:x="628" fg:w="1"/><text x="50.3697%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.1197%" y="245" width="0.0798%" height="15" fill="rgb(243,139,6)" fg:x="628" fg:w="1"/><text x="50.3697%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.1197%" y="229" width="0.0798%" height="15" fill="rgb(237,101,11)" fg:x="628" fg:w="1"/><text x="50.3697%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.1197%" y="213" width="0.0798%" height="15" fill="rgb(254,49,28)" fg:x="628" fg:w="1"/><text x="50.3697%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.1197%" y="197" width="0.0798%" height="15" fill="rgb(223,41,21)" fg:x="628" fg:w="1"/><text x="50.3697%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1197%" y="181" width="0.0798%" height="15" fill="rgb(225,103,29)" fg:x="628" fg:w="1"/><text x="50.3697%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.1197%" y="165" width="0.0798%" height="15" fill="rgb(244,82,43)" fg:x="628" fg:w="1"/><text x="50.3697%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.1197%" y="149" width="0.0798%" height="15" fill="rgb(217,39,3)" fg:x="628" fg:w="1"/><text x="50.3697%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.1197%" y="133" width="0.0798%" height="15" fill="rgb(239,128,25)" fg:x="628" fg:w="1"/><text x="50.3697%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.1197%" y="117" width="0.0798%" height="15" fill="rgb(210,192,37)" fg:x="628" fg:w="1"/><text x="50.3697%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.1197%" y="101" width="0.0798%" height="15" fill="rgb(219,98,18)" fg:x="628" fg:w="1"/><text x="50.3697%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1197%" y="85" width="0.0798%" height="15" fill="rgb(224,228,38)" fg:x="628" fg:w="1"/><text x="50.3697%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="50.1995%" y="277" width="0.0798%" height="15" fill="rgb(241,129,43)" fg:x="629" fg:w="1"/><text x="50.4495%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="50.1995%" y="261" width="0.0798%" height="15" fill="rgb(223,8,51)" fg:x="629" fg:w="1"/><text x="50.4495%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.1995%" y="245" width="0.0798%" height="15" fill="rgb(233,76,24)" fg:x="629" fg:w="1"/><text x="50.4495%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.1995%" y="229" width="0.0798%" height="15" fill="rgb(219,115,10)" fg:x="629" fg:w="1"/><text x="50.4495%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.1995%" y="213" width="0.0798%" height="15" fill="rgb(222,137,12)" fg:x="629" fg:w="1"/><text x="50.4495%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="49.9601%" y="309" width="0.3990%" height="15" fill="rgb(216,192,16)" fg:x="626" fg:w="5"/><text x="50.2101%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.9601%" y="293" width="0.3990%" height="15" fill="rgb(247,6,27)" fg:x="626" fg:w="5"/><text x="50.2101%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.2793%" y="277" width="0.0798%" height="15" fill="rgb(254,39,44)" fg:x="630" fg:w="1"/><text x="50.5293%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2793%" y="261" width="0.0798%" height="15" fill="rgb(251,116,35)" fg:x="630" fg:w="1"/><text x="50.5293%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.2793%" y="245" width="0.0798%" height="15" fill="rgb(208,61,44)" fg:x="630" fg:w="1"/><text x="50.5293%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2793%" y="229" width="0.0798%" height="15" fill="rgb(250,34,5)" fg:x="630" fg:w="1"/><text x="50.5293%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.2793%" y="213" width="0.0798%" height="15" fill="rgb(241,40,15)" fg:x="630" fg:w="1"/><text x="50.5293%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.2793%" y="197" width="0.0798%" height="15" fill="rgb(229,182,2)" fg:x="630" fg:w="1"/><text x="50.5293%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3591%" y="293" width="0.0798%" height="15" fill="rgb(244,148,52)" fg:x="631" fg:w="1"/><text x="50.6091%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3591%" y="277" width="0.0798%" height="15" fill="rgb(225,211,4)" fg:x="631" fg:w="1"/><text x="50.6091%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.3591%" y="261" width="0.0798%" height="15" fill="rgb(208,222,47)" fg:x="631" fg:w="1"/><text x="50.6091%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.3591%" y="245" width="0.0798%" height="15" fill="rgb(233,162,0)" fg:x="631" fg:w="1"/><text x="50.6091%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.3591%" y="229" width="0.0798%" height="15" fill="rgb(241,54,13)" fg:x="631" fg:w="1"/><text x="50.6091%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3591%" y="213" width="0.0798%" height="15" fill="rgb(213,89,18)" fg:x="631" fg:w="1"/><text x="50.6091%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3591%" y="197" width="0.0798%" height="15" fill="rgb(215,170,37)" fg:x="631" fg:w="1"/><text x="50.6091%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.3591%" y="181" width="0.0798%" height="15" fill="rgb(216,133,15)" fg:x="631" fg:w="1"/><text x="50.6091%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.3591%" y="165" width="0.0798%" height="15" fill="rgb(230,42,19)" fg:x="631" fg:w="1"/><text x="50.6091%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.3591%" y="149" width="0.0798%" height="15" fill="rgb(221,103,41)" fg:x="631" fg:w="1"/><text x="50.6091%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.3591%" y="133" width="0.0798%" height="15" fill="rgb(220,142,31)" fg:x="631" fg:w="1"/><text x="50.6091%" y="143.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="50.3591%" y="117" width="0.0798%" height="15" fill="rgb(239,218,4)" fg:x="631" fg:w="1"/><text x="50.6091%" y="127.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.3591%" y="101" width="0.0798%" height="15" fill="rgb(232,16,4)" fg:x="631" fg:w="1"/><text x="50.6091%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="50.4389%" y="293" width="0.0798%" height="15" fill="rgb(226,213,25)" fg:x="632" fg:w="1"/><text x="50.6889%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.4389%" y="277" width="0.0798%" height="15" fill="rgb(235,135,19)" fg:x="632" fg:w="1"/><text x="50.6889%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="50.5188%" y="293" width="0.0798%" height="15" fill="rgb(240,107,29)" fg:x="633" fg:w="1"/><text x="50.7688%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5986%" y="277" width="0.0798%" height="15" fill="rgb(206,164,44)" fg:x="634" fg:w="1"/><text x="50.8486%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="50.5986%" y="261" width="0.0798%" height="15" fill="rgb(210,23,48)" fg:x="634" fg:w="1"/><text x="50.8486%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.5986%" y="245" width="0.0798%" height="15" fill="rgb(212,138,25)" fg:x="634" fg:w="1"/><text x="50.8486%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (28 samples, 2.23%)</title><rect x="48.5235%" y="405" width="2.2346%" height="15" fill="rgb(224,152,3)" fg:x="608" fg:w="28"/><text x="48.7735%" y="415.50">&lt;..</text></g><g><title>core::iter::adapters::try_process (28 samples, 2.23%)</title><rect x="48.5235%" y="389" width="2.2346%" height="15" fill="rgb(214,38,23)" fg:x="608" fg:w="28"/><text x="48.7735%" y="399.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.23%)</title><rect x="48.5235%" y="373" width="2.2346%" height="15" fill="rgb(215,161,10)" fg:x="608" fg:w="28"/><text x="48.7735%" y="383.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (28 samples, 2.23%)</title><rect x="48.5235%" y="357" width="2.2346%" height="15" fill="rgb(240,185,7)" fg:x="608" fg:w="28"/><text x="48.7735%" y="367.50">&lt;..</text></g><g><title>kernel::model::entity::Entity::entity_ref (10 samples, 0.80%)</title><rect x="49.9601%" y="341" width="0.7981%" height="15" fill="rgb(244,104,25)" fg:x="626" fg:w="10"/><text x="50.2101%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="49.9601%" y="325" width="0.7981%" height="15" fill="rgb(242,140,44)" fg:x="626" fg:w="10"/><text x="50.2101%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="50.3591%" y="309" width="0.3990%" height="15" fill="rgb(245,30,19)" fg:x="631" fg:w="5"/><text x="50.6091%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.5986%" y="293" width="0.1596%" height="15" fill="rgb(219,208,35)" fg:x="634" fg:w="2"/><text x="50.8486%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.6784%" y="277" width="0.0798%" height="15" fill="rgb(235,200,7)" fg:x="635" fg:w="1"/><text x="50.9284%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6784%" y="261" width="0.0798%" height="15" fill="rgb(220,193,10)" fg:x="635" fg:w="1"/><text x="50.9284%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.6784%" y="245" width="0.0798%" height="15" fill="rgb(212,216,39)" fg:x="635" fg:w="1"/><text x="50.9284%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6784%" y="229" width="0.0798%" height="15" fill="rgb(212,134,19)" fg:x="635" fg:w="1"/><text x="50.9284%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.6784%" y="213" width="0.0798%" height="15" fill="rgb(230,57,24)" fg:x="635" fg:w="1"/><text x="50.9284%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6784%" y="197" width="0.0798%" height="15" fill="rgb(238,209,37)" fg:x="635" fg:w="1"/><text x="50.9284%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.6784%" y="181" width="0.0798%" height="15" fill="rgb(247,11,45)" fg:x="635" fg:w="1"/><text x="50.9284%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.7582%" y="405" width="0.0798%" height="15" fill="rgb(222,126,6)" fg:x="636" fg:w="1"/><text x="51.0082%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.7582%" y="389" width="0.0798%" height="15" fill="rgb(245,77,24)" fg:x="636" fg:w="1"/><text x="51.0082%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="50.7582%" y="373" width="0.0798%" height="15" fill="rgb(227,14,24)" fg:x="636" fg:w="1"/><text x="51.0082%" y="383.50"></text></g><g><title>plugins_core::tools::contained_by (44 samples, 3.51%)</title><rect x="47.4062%" y="453" width="3.5116%" height="15" fill="rgb(211,112,42)" fg:x="594" fg:w="44"/><text x="47.6562%" y="463.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (33 samples, 2.63%)</title><rect x="48.2841%" y="437" width="2.6337%" height="15" fill="rgb(230,103,42)" fg:x="605" fg:w="33"/><text x="48.5341%" y="447.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (33 samples, 2.63%)</title><rect x="48.2841%" y="421" width="2.6337%" height="15" fill="rgb(228,125,42)" fg:x="605" fg:w="33"/><text x="48.5341%" y="431.50">ke..</text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="50.8380%" y="405" width="0.0798%" height="15" fill="rgb(243,33,6)" fg:x="637" fg:w="1"/><text x="51.0880%" y="415.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="50.8380%" y="389" width="0.0798%" height="15" fill="rgb(231,2,40)" fg:x="637" fg:w="1"/><text x="51.0880%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="50.9178%" y="341" width="0.1596%" height="15" fill="rgb(224,200,53)" fg:x="638" fg:w="2"/><text x="51.1678%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="50.9178%" y="325" width="0.1596%" height="15" fill="rgb(215,116,36)" fg:x="638" fg:w="2"/><text x="51.1678%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.9178%" y="309" width="0.1596%" height="15" fill="rgb(240,23,51)" fg:x="638" fg:w="2"/><text x="51.1678%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.9178%" y="293" width="0.1596%" height="15" fill="rgb(221,72,5)" fg:x="638" fg:w="2"/><text x="51.1678%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.9178%" y="277" width="0.1596%" height="15" fill="rgb(245,142,9)" fg:x="638" fg:w="2"/><text x="51.1678%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.9178%" y="261" width="0.1596%" height="15" fill="rgb(207,34,16)" fg:x="638" fg:w="2"/><text x="51.1678%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.9976%" y="245" width="0.0798%" height="15" fill="rgb(252,101,12)" fg:x="639" fg:w="1"/><text x="51.2476%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9976%" y="229" width="0.0798%" height="15" fill="rgb(239,89,37)" fg:x="639" fg:w="1"/><text x="51.2476%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.0774%" y="309" width="0.0798%" height="15" fill="rgb(252,227,37)" fg:x="640" fg:w="1"/><text x="51.3274%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.0774%" y="293" width="0.0798%" height="15" fill="rgb(212,164,17)" fg:x="640" fg:w="1"/><text x="51.3274%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.1572%" y="277" width="0.0798%" height="15" fill="rgb(240,86,13)" fg:x="641" fg:w="1"/><text x="51.4072%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.1572%" y="261" width="0.0798%" height="15" fill="rgb(233,183,32)" fg:x="641" fg:w="1"/><text x="51.4072%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="51.2370%" y="245" width="0.0798%" height="15" fill="rgb(205,201,38)" fg:x="642" fg:w="1"/><text x="51.4870%" y="255.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="50.9178%" y="437" width="0.4789%" height="15" fill="rgb(210,122,38)" fg:x="638" fg:w="6"/><text x="51.1678%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="50.9178%" y="421" width="0.4789%" height="15" fill="rgb(241,174,26)" fg:x="638" fg:w="6"/><text x="51.1678%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="50.9178%" y="405" width="0.4789%" height="15" fill="rgb(219,89,7)" fg:x="638" fg:w="6"/><text x="51.1678%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="50.9178%" y="389" width="0.4789%" height="15" fill="rgb(246,9,24)" fg:x="638" fg:w="6"/><text x="51.1678%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="50.9178%" y="373" width="0.4789%" height="15" fill="rgb(205,132,21)" fg:x="638" fg:w="6"/><text x="51.1678%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="50.9178%" y="357" width="0.4789%" height="15" fill="rgb(210,11,17)" fg:x="638" fg:w="6"/><text x="51.1678%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="51.0774%" y="341" width="0.3192%" height="15" fill="rgb(226,138,14)" fg:x="640" fg:w="4"/><text x="51.3274%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="51.0774%" y="325" width="0.3192%" height="15" fill="rgb(224,108,44)" fg:x="640" fg:w="4"/><text x="51.3274%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="51.1572%" y="309" width="0.2394%" height="15" fill="rgb(247,114,36)" fg:x="641" fg:w="3"/><text x="51.4072%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.1572%" y="293" width="0.2394%" height="15" fill="rgb(231,183,14)" fg:x="641" fg:w="3"/><text x="51.4072%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="51.2370%" y="277" width="0.1596%" height="15" fill="rgb(218,168,4)" fg:x="642" fg:w="2"/><text x="51.4870%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.2370%" y="261" width="0.1596%" height="15" fill="rgb(210,8,3)" fg:x="642" fg:w="2"/><text x="51.4870%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.3168%" y="245" width="0.0798%" height="15" fill="rgb(216,165,0)" fg:x="643" fg:w="1"/><text x="51.5668%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.3168%" y="229" width="0.0798%" height="15" fill="rgb(245,120,5)" fg:x="643" fg:w="1"/><text x="51.5668%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.3168%" y="213" width="0.0798%" height="15" fill="rgb(249,121,32)" fg:x="643" fg:w="1"/><text x="51.5668%" y="223.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.3966%" y="405" width="0.1596%" height="15" fill="rgb(211,55,33)" fg:x="644" fg:w="2"/><text x="51.6466%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.4765%" y="389" width="0.0798%" height="15" fill="rgb(254,46,35)" fg:x="645" fg:w="1"/><text x="51.7265%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5563%" y="309" width="0.0798%" height="15" fill="rgb(213,213,19)" fg:x="646" fg:w="1"/><text x="51.8063%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5563%" y="293" width="0.0798%" height="15" fill="rgb(207,152,44)" fg:x="646" fg:w="1"/><text x="51.8063%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.5563%" y="277" width="0.0798%" height="15" fill="rgb(227,195,36)" fg:x="646" fg:w="1"/><text x="51.8063%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.5563%" y="261" width="0.0798%" height="15" fill="rgb(210,137,36)" fg:x="646" fg:w="1"/><text x="51.8063%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.5563%" y="245" width="0.0798%" height="15" fill="rgb(253,47,47)" fg:x="646" fg:w="1"/><text x="51.8063%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5563%" y="229" width="0.0798%" height="15" fill="rgb(230,147,18)" fg:x="646" fg:w="1"/><text x="51.8063%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5563%" y="213" width="0.0798%" height="15" fill="rgb(247,33,49)" fg:x="646" fg:w="1"/><text x="51.8063%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.5563%" y="197" width="0.0798%" height="15" fill="rgb(239,26,29)" fg:x="646" fg:w="1"/><text x="51.8063%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.5563%" y="181" width="0.0798%" height="15" fill="rgb(245,145,52)" fg:x="646" fg:w="1"/><text x="51.8063%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.5563%" y="165" width="0.0798%" height="15" fill="rgb(224,139,32)" fg:x="646" fg:w="1"/><text x="51.8063%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.5563%" y="149" width="0.0798%" height="15" fill="rgb(238,202,19)" fg:x="646" fg:w="1"/><text x="51.8063%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5563%" y="133" width="0.0798%" height="15" fill="rgb(249,211,53)" fg:x="646" fg:w="1"/><text x="51.8063%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="51.6361%" y="309" width="0.0798%" height="15" fill="rgb(237,229,33)" fg:x="647" fg:w="1"/><text x="51.8861%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.6361%" y="293" width="0.0798%" height="15" fill="rgb(208,97,40)" fg:x="647" fg:w="1"/><text x="51.8861%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6361%" y="277" width="0.0798%" height="15" fill="rgb(254,36,16)" fg:x="647" fg:w="1"/><text x="51.8861%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6361%" y="261" width="0.0798%" height="15" fill="rgb(221,7,12)" fg:x="647" fg:w="1"/><text x="51.8861%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6361%" y="245" width="0.0798%" height="15" fill="rgb(205,11,12)" fg:x="647" fg:w="1"/><text x="51.8861%" y="255.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="51.5563%" y="405" width="0.2394%" height="15" fill="rgb(227,72,28)" fg:x="646" fg:w="3"/><text x="51.8063%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="51.5563%" y="389" width="0.2394%" height="15" fill="rgb(228,7,34)" fg:x="646" fg:w="3"/><text x="51.8063%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="51.5563%" y="373" width="0.2394%" height="15" fill="rgb(230,52,42)" fg:x="646" fg:w="3"/><text x="51.8063%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="51.5563%" y="357" width="0.2394%" height="15" fill="rgb(219,177,53)" fg:x="646" fg:w="3"/><text x="51.8063%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="51.5563%" y="341" width="0.2394%" height="15" fill="rgb(243,196,34)" fg:x="646" fg:w="3"/><text x="51.8063%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="51.5563%" y="325" width="0.2394%" height="15" fill="rgb(213,66,49)" fg:x="646" fg:w="3"/><text x="51.8063%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="51.7159%" y="309" width="0.0798%" height="15" fill="rgb(233,11,50)" fg:x="648" fg:w="1"/><text x="51.9659%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.7159%" y="293" width="0.0798%" height="15" fill="rgb(235,190,6)" fg:x="648" fg:w="1"/><text x="51.9659%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.7159%" y="277" width="0.0798%" height="15" fill="rgb(212,64,44)" fg:x="648" fg:w="1"/><text x="51.9659%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.7159%" y="261" width="0.0798%" height="15" fill="rgb(206,95,44)" fg:x="648" fg:w="1"/><text x="51.9659%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="51.7159%" y="245" width="0.0798%" height="15" fill="rgb(227,136,25)" fg:x="648" fg:w="1"/><text x="51.9659%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.7159%" y="229" width="0.0798%" height="15" fill="rgb(206,178,17)" fg:x="648" fg:w="1"/><text x="51.9659%" y="239.50"></text></g><g><title>plugins_core::tools::occupied_by (13 samples, 1.04%)</title><rect x="50.9178%" y="453" width="1.0375%" height="15" fill="rgb(208,168,35)" fg:x="638" fg:w="13"/><text x="51.1678%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="51.3966%" y="437" width="0.5587%" height="15" fill="rgb(213,210,40)" fg:x="644" fg:w="7"/><text x="51.6466%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="51.3966%" y="421" width="0.5587%" height="15" fill="rgb(236,60,6)" fg:x="644" fg:w="7"/><text x="51.6466%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.7957%" y="405" width="0.1596%" height="15" fill="rgb(220,186,36)" fg:x="649" fg:w="2"/><text x="52.0457%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.7957%" y="389" width="0.1596%" height="15" fill="rgb(225,120,49)" fg:x="649" fg:w="2"/><text x="52.0457%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.8755%" y="373" width="0.0798%" height="15" fill="rgb(250,115,20)" fg:x="650" fg:w="1"/><text x="52.1255%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.8755%" y="357" width="0.0798%" height="15" fill="rgb(207,214,23)" fg:x="650" fg:w="1"/><text x="52.1255%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="51.8755%" y="341" width="0.0798%" height="15" fill="rgb(240,9,18)" fg:x="650" fg:w="1"/><text x="52.1255%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.8755%" y="325" width="0.0798%" height="15" fill="rgb(232,170,48)" fg:x="650" fg:w="1"/><text x="52.1255%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.8755%" y="309" width="0.0798%" height="15" fill="rgb(236,149,23)" fg:x="650" fg:w="1"/><text x="52.1255%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (61 samples, 4.87%)</title><rect x="47.1668%" y="469" width="4.8683%" height="15" fill="rgb(210,125,42)" fg:x="591" fg:w="61"/><text x="47.4168%" y="479.50">plugin..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="51.9553%" y="453" width="0.0798%" height="15" fill="rgb(207,201,52)" fg:x="651" fg:w="1"/><text x="52.2053%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="51.9553%" y="437" width="0.0798%" height="15" fill="rgb(250,187,37)" fg:x="651" fg:w="1"/><text x="52.2053%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.9553%" y="421" width="0.0798%" height="15" fill="rgb(214,186,2)" fg:x="651" fg:w="1"/><text x="52.2053%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.9553%" y="405" width="0.0798%" height="15" fill="rgb(207,189,15)" fg:x="651" fg:w="1"/><text x="52.2053%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.9553%" y="389" width="0.0798%" height="15" fill="rgb(221,99,21)" fg:x="651" fg:w="1"/><text x="52.2053%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="51.9553%" y="373" width="0.0798%" height="15" fill="rgb(212,67,18)" fg:x="651" fg:w="1"/><text x="52.2053%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="52.0351%" y="453" width="0.2394%" height="15" fill="rgb(226,24,24)" fg:x="652" fg:w="3"/><text x="52.2851%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1947%" y="437" width="0.0798%" height="15" fill="rgb(252,123,31)" fg:x="654" fg:w="1"/><text x="52.4447%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.1947%" y="421" width="0.0798%" height="15" fill="rgb(251,227,47)" fg:x="654" fg:w="1"/><text x="52.4447%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.1947%" y="405" width="0.0798%" height="15" fill="rgb(233,84,53)" fg:x="654" fg:w="1"/><text x="52.4447%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.1947%" y="389" width="0.0798%" height="15" fill="rgb(228,57,19)" fg:x="654" fg:w="1"/><text x="52.4447%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.1947%" y="373" width="0.0798%" height="15" fill="rgb(251,81,5)" fg:x="654" fg:w="1"/><text x="52.4447%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1947%" y="357" width="0.0798%" height="15" fill="rgb(236,211,27)" fg:x="654" fg:w="1"/><text x="52.4447%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.1947%" y="341" width="0.0798%" height="15" fill="rgb(218,21,6)" fg:x="654" fg:w="1"/><text x="52.4447%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.1947%" y="325" width="0.0798%" height="15" fill="rgb(239,104,19)" fg:x="654" fg:w="1"/><text x="52.4447%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.1947%" y="309" width="0.0798%" height="15" fill="rgb(234,179,27)" fg:x="654" fg:w="1"/><text x="52.4447%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.1947%" y="293" width="0.0798%" height="15" fill="rgb(221,154,39)" fg:x="654" fg:w="1"/><text x="52.4447%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.1947%" y="277" width="0.0798%" height="15" fill="rgb(228,190,1)" fg:x="654" fg:w="1"/><text x="52.4447%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.1947%" y="261" width="0.0798%" height="15" fill="rgb(244,122,33)" fg:x="654" fg:w="1"/><text x="52.4447%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3543%" y="373" width="0.0798%" height="15" fill="rgb(227,56,37)" fg:x="656" fg:w="1"/><text x="52.6043%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3543%" y="357" width="0.0798%" height="15" fill="rgb(207,158,16)" fg:x="656" fg:w="1"/><text x="52.6043%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.3543%" y="341" width="0.0798%" height="15" fill="rgb(251,222,30)" fg:x="656" fg:w="1"/><text x="52.6043%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.4342%" y="373" width="0.0798%" height="15" fill="rgb(240,22,49)" fg:x="657" fg:w="1"/><text x="52.6842%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="52.3543%" y="421" width="0.3192%" height="15" fill="rgb(224,207,37)" fg:x="656" fg:w="4"/><text x="52.6043%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="52.3543%" y="405" width="0.3192%" height="15" fill="rgb(249,188,40)" fg:x="656" fg:w="4"/><text x="52.6043%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="52.3543%" y="389" width="0.3192%" height="15" fill="rgb(254,141,11)" fg:x="656" fg:w="4"/><text x="52.6043%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="52.5140%" y="373" width="0.1596%" height="15" fill="rgb(231,177,6)" fg:x="658" fg:w="2"/><text x="52.7640%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5140%" y="357" width="0.1596%" height="15" fill="rgb(241,6,16)" fg:x="658" fg:w="2"/><text x="52.7640%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="52.5140%" y="341" width="0.1596%" height="15" fill="rgb(230,50,14)" fg:x="658" fg:w="2"/><text x="52.7640%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5140%" y="325" width="0.1596%" height="15" fill="rgb(254,36,3)" fg:x="658" fg:w="2"/><text x="52.7640%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="52.5938%" y="309" width="0.0798%" height="15" fill="rgb(226,149,37)" fg:x="659" fg:w="1"/><text x="52.8438%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.5938%" y="293" width="0.0798%" height="15" fill="rgb(253,49,27)" fg:x="659" fg:w="1"/><text x="52.8438%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5938%" y="277" width="0.0798%" height="15" fill="rgb(249,182,52)" fg:x="659" fg:w="1"/><text x="52.8438%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (70 samples, 5.59%)</title><rect x="47.1668%" y="501" width="5.5866%" height="15" fill="rgb(223,42,15)" fg:x="591" fg:w="70"/><text x="47.4168%" y="511.50">&lt;engine..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (70 samples, 5.59%)</title><rect x="47.1668%" y="485" width="5.5866%" height="15" fill="rgb(232,31,42)" fg:x="591" fg:w="70"/><text x="47.4168%" y="495.50">&lt;plugin..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (9 samples, 0.72%)</title><rect x="52.0351%" y="469" width="0.7183%" height="15" fill="rgb(233,56,46)" fg:x="652" fg:w="9"/><text x="52.2851%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="52.2745%" y="453" width="0.4789%" height="15" fill="rgb(241,143,21)" fg:x="655" fg:w="6"/><text x="52.5245%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="52.3543%" y="437" width="0.3990%" height="15" fill="rgb(251,222,15)" fg:x="656" fg:w="5"/><text x="52.6043%" y="447.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="52.6736%" y="421" width="0.0798%" height="15" fill="rgb(242,101,40)" fg:x="660" fg:w="1"/><text x="52.9236%" y="431.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="52.6736%" y="405" width="0.0798%" height="15" fill="rgb(247,60,44)" fg:x="660" fg:w="1"/><text x="52.9236%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.7534%" y="501" width="0.0798%" height="15" fill="rgb(254,48,47)" fg:x="661" fg:w="1"/><text x="53.0034%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="52.8332%" y="485" width="0.1596%" height="15" fill="rgb(253,30,33)" fg:x="662" fg:w="2"/><text x="53.0832%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="52.8332%" y="469" width="0.1596%" height="15" fill="rgb(253,214,47)" fg:x="662" fg:w="2"/><text x="53.0832%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="52.9130%" y="453" width="0.0798%" height="15" fill="rgb(241,108,29)" fg:x="663" fg:w="1"/><text x="53.1630%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="52.9130%" y="437" width="0.0798%" height="15" fill="rgb(240,36,2)" fg:x="663" fg:w="1"/><text x="53.1630%" y="447.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="52.9130%" y="421" width="0.0798%" height="15" fill="rgb(243,198,24)" fg:x="663" fg:w="1"/><text x="53.1630%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="52.9130%" y="405" width="0.0798%" height="15" fill="rgb(225,98,27)" fg:x="663" fg:w="1"/><text x="53.1630%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="52.9130%" y="389" width="0.0798%" height="15" fill="rgb(208,86,30)" fg:x="663" fg:w="1"/><text x="53.1630%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="52.9130%" y="373" width="0.0798%" height="15" fill="rgb(242,157,11)" fg:x="663" fg:w="1"/><text x="53.1630%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="52.9130%" y="357" width="0.0798%" height="15" fill="rgb(244,84,16)" fg:x="663" fg:w="1"/><text x="53.1630%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9130%" y="341" width="0.0798%" height="15" fill="rgb(247,20,46)" fg:x="663" fg:w="1"/><text x="53.1630%" y="351.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="52.9928%" y="485" width="0.0798%" height="15" fill="rgb(240,157,20)" fg:x="664" fg:w="1"/><text x="53.2428%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (1 samples, 0.08%)</title><rect x="52.9928%" y="469" width="0.0798%" height="15" fill="rgb(212,151,38)" fg:x="664" fg:w="1"/><text x="53.2428%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.9928%" y="453" width="0.0798%" height="15" fill="rgb(233,197,14)" fg:x="664" fg:w="1"/><text x="53.2428%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="52.9928%" y="437" width="0.0798%" height="15" fill="rgb(226,148,28)" fg:x="664" fg:w="1"/><text x="53.2428%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="52.9928%" y="421" width="0.0798%" height="15" fill="rgb(244,141,30)" fg:x="664" fg:w="1"/><text x="53.2428%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9928%" y="405" width="0.0798%" height="15" fill="rgb(215,73,38)" fg:x="664" fg:w="1"/><text x="53.2428%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.9928%" y="389" width="0.0798%" height="15" fill="rgb(230,148,29)" fg:x="664" fg:w="1"/><text x="53.2428%" y="399.50"></text></g><g><title>plugins_core::library::actions::reply_ok (4 samples, 0.32%)</title><rect x="52.8332%" y="501" width="0.3192%" height="15" fill="rgb(250,41,52)" fg:x="662" fg:w="4"/><text x="53.0832%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="53.0726%" y="485" width="0.0798%" height="15" fill="rgb(215,48,1)" fg:x="665" fg:w="1"/><text x="53.3226%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="53.3919%" y="485" width="0.1596%" height="15" fill="rgb(205,223,38)" fg:x="669" fg:w="2"/><text x="53.6419%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="53.3919%" y="469" width="0.1596%" height="15" fill="rgb(213,51,8)" fg:x="669" fg:w="2"/><text x="53.6419%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="53.3919%" y="453" width="0.1596%" height="15" fill="rgb(248,53,11)" fg:x="669" fg:w="2"/><text x="53.6419%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.5515%" y="421" width="0.0798%" height="15" fill="rgb(218,140,4)" fg:x="671" fg:w="1"/><text x="53.8015%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.5515%" y="405" width="0.0798%" height="15" fill="rgb(248,161,31)" fg:x="671" fg:w="1"/><text x="53.8015%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.5515%" y="389" width="0.0798%" height="15" fill="rgb(239,88,32)" fg:x="671" fg:w="1"/><text x="53.8015%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="53.5515%" y="485" width="0.1596%" height="15" fill="rgb(234,14,28)" fg:x="671" fg:w="2"/><text x="53.8015%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="53.5515%" y="469" width="0.1596%" height="15" fill="rgb(235,173,11)" fg:x="671" fg:w="2"/><text x="53.8015%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="53.5515%" y="453" width="0.1596%" height="15" fill="rgb(222,70,2)" fg:x="671" fg:w="2"/><text x="53.8015%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.5515%" y="437" width="0.1596%" height="15" fill="rgb(228,196,41)" fg:x="671" fg:w="2"/><text x="53.8015%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.6313%" y="421" width="0.0798%" height="15" fill="rgb(249,19,9)" fg:x="672" fg:w="1"/><text x="53.8813%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6313%" y="405" width="0.0798%" height="15" fill="rgb(221,16,43)" fg:x="672" fg:w="1"/><text x="53.8813%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.6313%" y="389" width="0.0798%" height="15" fill="rgb(225,207,6)" fg:x="672" fg:w="1"/><text x="53.8813%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6313%" y="373" width="0.0798%" height="15" fill="rgb(249,32,32)" fg:x="672" fg:w="1"/><text x="53.8813%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="53.6313%" y="357" width="0.0798%" height="15" fill="rgb(232,163,43)" fg:x="672" fg:w="1"/><text x="53.8813%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6313%" y="341" width="0.0798%" height="15" fill="rgb(236,158,54)" fg:x="672" fg:w="1"/><text x="53.8813%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="53.7111%" y="469" width="0.0798%" height="15" fill="rgb(205,126,44)" fg:x="673" fg:w="1"/><text x="53.9611%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7909%" y="453" width="0.0798%" height="15" fill="rgb(210,162,12)" fg:x="674" fg:w="1"/><text x="54.0409%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7909%" y="437" width="0.0798%" height="15" fill="rgb(218,156,48)" fg:x="674" fg:w="1"/><text x="54.0409%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="53.8707%" y="325" width="0.0798%" height="15" fill="rgb(248,210,3)" fg:x="675" fg:w="1"/><text x="54.1207%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.8707%" y="309" width="0.0798%" height="15" fill="rgb(212,43,27)" fg:x="675" fg:w="1"/><text x="54.1207%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.8707%" y="293" width="0.0798%" height="15" fill="rgb(241,52,6)" fg:x="675" fg:w="1"/><text x="54.1207%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.8707%" y="277" width="0.0798%" height="15" fill="rgb(222,178,35)" fg:x="675" fg:w="1"/><text x="54.1207%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.8707%" y="261" width="0.0798%" height="15" fill="rgb(205,121,46)" fg:x="675" fg:w="1"/><text x="54.1207%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.8707%" y="245" width="0.0798%" height="15" fill="rgb(249,67,1)" fg:x="675" fg:w="1"/><text x="54.1207%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="53.8707%" y="357" width="0.2394%" height="15" fill="rgb(238,168,42)" fg:x="675" fg:w="3"/><text x="54.1207%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="53.8707%" y="341" width="0.2394%" height="15" fill="rgb(205,36,48)" fg:x="675" fg:w="3"/><text x="54.1207%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="53.9505%" y="325" width="0.1596%" height="15" fill="rgb(240,85,12)" fg:x="676" fg:w="2"/><text x="54.2005%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0303%" y="309" width="0.0798%" height="15" fill="rgb(245,27,39)" fg:x="677" fg:w="1"/><text x="54.2803%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.0303%" y="293" width="0.0798%" height="15" fill="rgb(218,129,34)" fg:x="677" fg:w="1"/><text x="54.2803%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.0303%" y="277" width="0.0798%" height="15" fill="rgb(221,157,12)" fg:x="677" fg:w="1"/><text x="54.2803%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.0303%" y="261" width="0.0798%" height="15" fill="rgb(213,206,20)" fg:x="677" fg:w="1"/><text x="54.2803%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.1899%" y="149" width="0.0798%" height="15" fill="rgb(227,115,30)" fg:x="679" fg:w="1"/><text x="54.4399%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.1899%" y="133" width="0.0798%" height="15" fill="rgb(221,40,47)" fg:x="679" fg:w="1"/><text x="54.4399%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.1899%" y="117" width="0.0798%" height="15" fill="rgb(239,96,49)" fg:x="679" fg:w="1"/><text x="54.4399%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.1101%" y="293" width="0.2394%" height="15" fill="rgb(223,24,38)" fg:x="678" fg:w="3"/><text x="54.3601%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1899%" y="277" width="0.1596%" height="15" fill="rgb(242,35,45)" fg:x="679" fg:w="2"/><text x="54.4399%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.1899%" y="261" width="0.1596%" height="15" fill="rgb(236,20,9)" fg:x="679" fg:w="2"/><text x="54.4399%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.1899%" y="245" width="0.1596%" height="15" fill="rgb(239,124,8)" fg:x="679" fg:w="2"/><text x="54.4399%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.1899%" y="229" width="0.1596%" height="15" fill="rgb(228,92,29)" fg:x="679" fg:w="2"/><text x="54.4399%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.1899%" y="213" width="0.1596%" height="15" fill="rgb(251,53,39)" fg:x="679" fg:w="2"/><text x="54.4399%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1899%" y="197" width="0.1596%" height="15" fill="rgb(224,44,10)" fg:x="679" fg:w="2"/><text x="54.4399%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.1899%" y="181" width="0.1596%" height="15" fill="rgb(254,10,15)" fg:x="679" fg:w="2"/><text x="54.4399%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.1899%" y="165" width="0.1596%" height="15" fill="rgb(245,173,6)" fg:x="679" fg:w="2"/><text x="54.4399%" y="175.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="54.2698%" y="149" width="0.0798%" height="15" fill="rgb(228,74,0)" fg:x="680" fg:w="1"/><text x="54.5198%" y="159.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="54.2698%" y="133" width="0.0798%" height="15" fill="rgb(206,138,29)" fg:x="680" fg:w="1"/><text x="54.5198%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.1101%" y="325" width="0.3192%" height="15" fill="rgb(253,27,43)" fg:x="678" fg:w="4"/><text x="54.3601%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.1101%" y="309" width="0.3192%" height="15" fill="rgb(231,73,0)" fg:x="678" fg:w="4"/><text x="54.3601%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3496%" y="293" width="0.0798%" height="15" fill="rgb(218,9,23)" fg:x="681" fg:w="1"/><text x="54.5996%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.3496%" y="277" width="0.0798%" height="15" fill="rgb(251,55,29)" fg:x="681" fg:w="1"/><text x="54.5996%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.3496%" y="261" width="0.0798%" height="15" fill="rgb(223,180,22)" fg:x="681" fg:w="1"/><text x="54.5996%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.3496%" y="245" width="0.0798%" height="15" fill="rgb(223,29,21)" fg:x="681" fg:w="1"/><text x="54.5996%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.3496%" y="229" width="0.0798%" height="15" fill="rgb(251,103,37)" fg:x="681" fg:w="1"/><text x="54.5996%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3496%" y="213" width="0.0798%" height="15" fill="rgb(214,11,21)" fg:x="681" fg:w="1"/><text x="54.5996%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.3496%" y="197" width="0.0798%" height="15" fill="rgb(205,137,13)" fg:x="681" fg:w="1"/><text x="54.5996%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.3496%" y="181" width="0.0798%" height="15" fill="rgb(225,58,47)" fg:x="681" fg:w="1"/><text x="54.5996%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.3496%" y="165" width="0.0798%" height="15" fill="rgb(222,197,14)" fg:x="681" fg:w="1"/><text x="54.5996%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.3496%" y="149" width="0.0798%" height="15" fill="rgb(215,210,33)" fg:x="681" fg:w="1"/><text x="54.5996%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.3496%" y="133" width="0.0798%" height="15" fill="rgb(242,13,9)" fg:x="681" fg:w="1"/><text x="54.5996%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3496%" y="117" width="0.0798%" height="15" fill="rgb(218,31,39)" fg:x="681" fg:w="1"/><text x="54.5996%" y="127.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="53.8707%" y="405" width="0.6385%" height="15" fill="rgb(211,214,23)" fg:x="675" fg:w="8"/><text x="54.1207%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (8 samples, 0.64%)</title><rect x="53.8707%" y="389" width="0.6385%" height="15" fill="rgb(237,92,14)" fg:x="675" fg:w="8"/><text x="54.1207%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="53.8707%" y="373" width="0.6385%" height="15" fill="rgb(220,78,5)" fg:x="675" fg:w="8"/><text x="54.1207%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="54.1101%" y="357" width="0.3990%" height="15" fill="rgb(237,23,21)" fg:x="678" fg:w="5"/><text x="54.3601%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="54.1101%" y="341" width="0.3990%" height="15" fill="rgb(251,207,51)" fg:x="678" fg:w="5"/><text x="54.3601%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.4294%" y="325" width="0.0798%" height="15" fill="rgb(249,206,18)" fg:x="682" fg:w="1"/><text x="54.6794%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4294%" y="309" width="0.0798%" height="15" fill="rgb(236,20,19)" fg:x="682" fg:w="1"/><text x="54.6794%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.4294%" y="293" width="0.0798%" height="15" fill="rgb(214,227,29)" fg:x="682" fg:w="1"/><text x="54.6794%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4294%" y="277" width="0.0798%" height="15" fill="rgb(209,183,4)" fg:x="682" fg:w="1"/><text x="54.6794%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.4294%" y="261" width="0.0798%" height="15" fill="rgb(233,111,23)" fg:x="682" fg:w="1"/><text x="54.6794%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4294%" y="245" width="0.0798%" height="15" fill="rgb(238,121,27)" fg:x="682" fg:w="1"/><text x="54.6794%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (9 samples, 0.72%)</title><rect x="53.8707%" y="453" width="0.7183%" height="15" fill="rgb(236,120,41)" fg:x="675" fg:w="9"/><text x="54.1207%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="53.8707%" y="437" width="0.7183%" height="15" fill="rgb(241,143,10)" fg:x="675" fg:w="9"/><text x="54.1207%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="53.8707%" y="421" width="0.7183%" height="15" fill="rgb(224,86,31)" fg:x="675" fg:w="9"/><text x="54.1207%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.5092%" y="405" width="0.0798%" height="15" fill="rgb(236,212,27)" fg:x="683" fg:w="1"/><text x="54.7592%" y="415.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="54.5890%" y="453" width="0.0798%" height="15" fill="rgb(219,43,51)" fg:x="684" fg:w="1"/><text x="54.8390%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (13 samples, 1.04%)</title><rect x="53.7111%" y="485" width="1.0375%" height="15" fill="rgb(232,216,8)" fg:x="673" fg:w="13"/><text x="53.9611%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="53.7909%" y="469" width="0.9577%" height="15" fill="rgb(206,222,39)" fg:x="674" fg:w="12"/><text x="54.0409%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6688%" y="453" width="0.0798%" height="15" fill="rgb(209,149,48)" fg:x="685" fg:w="1"/><text x="54.9188%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6688%" y="437" width="0.0798%" height="15" fill="rgb(229,155,21)" fg:x="685" fg:w="1"/><text x="54.9188%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="54.6688%" y="421" width="0.0798%" height="15" fill="rgb(246,152,26)" fg:x="685" fg:w="1"/><text x="54.9188%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="54.6688%" y="405" width="0.0798%" height="15" fill="rgb(206,70,42)" fg:x="685" fg:w="1"/><text x="54.9188%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="54.6688%" y="389" width="0.0798%" height="15" fill="rgb(236,9,11)" fg:x="685" fg:w="1"/><text x="54.9188%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.6688%" y="373" width="0.0798%" height="15" fill="rgb(238,145,47)" fg:x="685" fg:w="1"/><text x="54.9188%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.6688%" y="357" width="0.0798%" height="15" fill="rgb(252,189,7)" fg:x="685" fg:w="1"/><text x="54.9188%" y="367.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::EntityGid&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.6688%" y="341" width="0.0798%" height="15" fill="rgb(254,168,51)" fg:x="685" fg:w="1"/><text x="54.9188%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.8284%" y="405" width="0.2394%" height="15" fill="rgb(227,105,46)" fg:x="687" fg:w="3"/><text x="55.0784%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="54.8284%" y="389" width="0.2394%" height="15" fill="rgb(227,74,30)" fg:x="687" fg:w="3"/><text x="55.0784%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="54.8284%" y="373" width="0.2394%" height="15" fill="rgb(206,212,44)" fg:x="687" fg:w="3"/><text x="55.0784%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="54.8284%" y="357" width="0.2394%" height="15" fill="rgb(252,69,11)" fg:x="687" fg:w="3"/><text x="55.0784%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="54.8284%" y="341" width="0.2394%" height="15" fill="rgb(239,116,0)" fg:x="687" fg:w="3"/><text x="55.0784%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="54.8284%" y="325" width="0.2394%" height="15" fill="rgb(246,189,23)" fg:x="687" fg:w="3"/><text x="55.0784%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="54.8284%" y="309" width="0.2394%" height="15" fill="rgb(229,50,41)" fg:x="687" fg:w="3"/><text x="55.0784%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="54.8284%" y="293" width="0.2394%" height="15" fill="rgb(214,66,37)" fg:x="687" fg:w="3"/><text x="55.0784%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="54.8284%" y="277" width="0.2394%" height="15" fill="rgb(226,28,6)" fg:x="687" fg:w="3"/><text x="55.0784%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="54.8284%" y="261" width="0.2394%" height="15" fill="rgb(239,154,0)" fg:x="687" fg:w="3"/><text x="55.0784%" y="271.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="54.8284%" y="245" width="0.2394%" height="15" fill="rgb(233,97,11)" fg:x="687" fg:w="3"/><text x="55.0784%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="54.8284%" y="229" width="0.2394%" height="15" fill="rgb(236,215,16)" fg:x="687" fg:w="3"/><text x="55.0784%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.8284%" y="453" width="0.3192%" height="15" fill="rgb(246,188,29)" fg:x="687" fg:w="4"/><text x="55.0784%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="54.8284%" y="437" width="0.3192%" height="15" fill="rgb(207,7,29)" fg:x="687" fg:w="4"/><text x="55.0784%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="54.8284%" y="421" width="0.3192%" height="15" fill="rgb(238,112,43)" fg:x="687" fg:w="4"/><text x="55.0784%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0678%" y="405" width="0.0798%" height="15" fill="rgb(230,110,32)" fg:x="690" fg:w="1"/><text x="55.3178%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.1476%" y="421" width="0.0798%" height="15" fill="rgb(218,197,32)" fg:x="691" fg:w="1"/><text x="55.3976%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1476%" y="405" width="0.0798%" height="15" fill="rgb(252,61,9)" fg:x="691" fg:w="1"/><text x="55.3976%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="55.1476%" y="453" width="0.1596%" height="15" fill="rgb(244,140,14)" fg:x="691" fg:w="2"/><text x="55.3976%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="55.1476%" y="437" width="0.1596%" height="15" fill="rgb(216,14,47)" fg:x="691" fg:w="2"/><text x="55.3976%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.2275%" y="421" width="0.0798%" height="15" fill="rgb(224,130,52)" fg:x="692" fg:w="1"/><text x="55.4775%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="55.2275%" y="405" width="0.0798%" height="15" fill="rgb(210,229,51)" fg:x="692" fg:w="1"/><text x="55.4775%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.2275%" y="389" width="0.0798%" height="15" fill="rgb(242,13,9)" fg:x="692" fg:w="1"/><text x="55.4775%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.2275%" y="373" width="0.0798%" height="15" fill="rgb(252,71,50)" fg:x="692" fg:w="1"/><text x="55.4775%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.72%)</title><rect x="54.7486%" y="485" width="0.7183%" height="15" fill="rgb(218,225,6)" fg:x="686" fg:w="9"/><text x="54.9986%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="54.8284%" y="469" width="0.6385%" height="15" fill="rgb(219,27,35)" fg:x="687" fg:w="8"/><text x="55.0784%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="55.3073%" y="453" width="0.1596%" height="15" fill="rgb(226,30,1)" fg:x="693" fg:w="2"/><text x="55.5573%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="55.3073%" y="437" width="0.1596%" height="15" fill="rgb(227,164,34)" fg:x="693" fg:w="2"/><text x="55.5573%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.3871%" y="421" width="0.0798%" height="15" fill="rgb(206,103,4)" fg:x="694" fg:w="1"/><text x="55.6371%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.5467%" y="357" width="0.0798%" height="15" fill="rgb(214,166,19)" fg:x="696" fg:w="1"/><text x="55.7967%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.5467%" y="341" width="0.0798%" height="15" fill="rgb(240,56,20)" fg:x="696" fg:w="1"/><text x="55.7967%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.5467%" y="325" width="0.0798%" height="15" fill="rgb(224,25,3)" fg:x="696" fg:w="1"/><text x="55.7967%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5467%" y="309" width="0.0798%" height="15" fill="rgb(216,206,54)" fg:x="696" fg:w="1"/><text x="55.7967%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.5467%" y="293" width="0.0798%" height="15" fill="rgb(225,142,10)" fg:x="696" fg:w="1"/><text x="55.7967%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.5467%" y="277" width="0.0798%" height="15" fill="rgb(246,9,18)" fg:x="696" fg:w="1"/><text x="55.7967%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.5467%" y="261" width="0.0798%" height="15" fill="rgb(247,140,18)" fg:x="696" fg:w="1"/><text x="55.7967%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.5467%" y="245" width="0.0798%" height="15" fill="rgb(239,184,22)" fg:x="696" fg:w="1"/><text x="55.7967%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5467%" y="229" width="0.0798%" height="15" fill="rgb(227,94,44)" fg:x="696" fg:w="1"/><text x="55.7967%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.5467%" y="213" width="0.0798%" height="15" fill="rgb(219,43,3)" fg:x="696" fg:w="1"/><text x="55.7967%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.5467%" y="197" width="0.0798%" height="15" fill="rgb(210,76,31)" fg:x="696" fg:w="1"/><text x="55.7967%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.5467%" y="181" width="0.0798%" height="15" fill="rgb(225,85,12)" fg:x="696" fg:w="1"/><text x="55.7967%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.5467%" y="165" width="0.0798%" height="15" fill="rgb(214,191,28)" fg:x="696" fg:w="1"/><text x="55.7967%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.5467%" y="149" width="0.0798%" height="15" fill="rgb(214,43,14)" fg:x="696" fg:w="1"/><text x="55.7967%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.5467%" y="133" width="0.0798%" height="15" fill="rgb(253,117,5)" fg:x="696" fg:w="1"/><text x="55.7967%" y="143.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="55.4669%" y="469" width="0.2394%" height="15" fill="rgb(208,124,26)" fg:x="695" fg:w="3"/><text x="55.7169%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="55.5467%" y="453" width="0.1596%" height="15" fill="rgb(228,208,39)" fg:x="696" fg:w="2"/><text x="55.7967%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="55.5467%" y="437" width="0.1596%" height="15" fill="rgb(206,180,39)" fg:x="696" fg:w="2"/><text x="55.7967%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="55.5467%" y="421" width="0.1596%" height="15" fill="rgb(205,111,37)" fg:x="696" fg:w="2"/><text x="55.7967%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="55.5467%" y="405" width="0.1596%" height="15" fill="rgb(208,121,24)" fg:x="696" fg:w="2"/><text x="55.7967%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="55.5467%" y="389" width="0.1596%" height="15" fill="rgb(218,215,32)" fg:x="696" fg:w="2"/><text x="55.7967%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="55.5467%" y="373" width="0.1596%" height="15" fill="rgb(244,168,53)" fg:x="696" fg:w="2"/><text x="55.7967%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.6265%" y="357" width="0.0798%" height="15" fill="rgb(214,9,36)" fg:x="697" fg:w="1"/><text x="55.8765%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.6265%" y="341" width="0.0798%" height="15" fill="rgb(231,4,34)" fg:x="697" fg:w="1"/><text x="55.8765%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.6265%" y="325" width="0.0798%" height="15" fill="rgb(210,83,51)" fg:x="697" fg:w="1"/><text x="55.8765%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.6265%" y="309" width="0.0798%" height="15" fill="rgb(224,112,1)" fg:x="697" fg:w="1"/><text x="55.8765%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.6265%" y="293" width="0.0798%" height="15" fill="rgb(216,33,41)" fg:x="697" fg:w="1"/><text x="55.8765%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.6265%" y="277" width="0.0798%" height="15" fill="rgb(215,179,42)" fg:x="697" fg:w="1"/><text x="55.8765%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="55.7063%" y="437" width="0.0798%" height="15" fill="rgb(205,81,48)" fg:x="698" fg:w="1"/><text x="55.9563%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="55.7063%" y="421" width="0.0798%" height="15" fill="rgb(246,17,30)" fg:x="698" fg:w="1"/><text x="55.9563%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.7063%" y="405" width="0.0798%" height="15" fill="rgb(226,19,16)" fg:x="698" fg:w="1"/><text x="55.9563%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7063%" y="389" width="0.0798%" height="15" fill="rgb(207,3,14)" fg:x="698" fg:w="1"/><text x="55.9563%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.7063%" y="373" width="0.0798%" height="15" fill="rgb(226,77,12)" fg:x="698" fg:w="1"/><text x="55.9563%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7063%" y="357" width="0.0798%" height="15" fill="rgb(226,76,25)" fg:x="698" fg:w="1"/><text x="55.9563%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.7063%" y="341" width="0.0798%" height="15" fill="rgb(217,216,25)" fg:x="698" fg:w="1"/><text x="55.9563%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7063%" y="325" width="0.0798%" height="15" fill="rgb(247,127,42)" fg:x="698" fg:w="1"/><text x="55.9563%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7063%" y="309" width="0.0798%" height="15" fill="rgb(226,10,34)" fg:x="698" fg:w="1"/><text x="55.9563%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7063%" y="293" width="0.0798%" height="15" fill="rgb(249,78,0)" fg:x="698" fg:w="1"/><text x="55.9563%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.7861%" y="405" width="0.0798%" height="15" fill="rgb(226,218,38)" fg:x="699" fg:w="1"/><text x="56.0361%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.8659%" y="341" width="0.0798%" height="15" fill="rgb(240,92,1)" fg:x="700" fg:w="1"/><text x="56.1159%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.8659%" y="325" width="0.0798%" height="15" fill="rgb(237,224,33)" fg:x="700" fg:w="1"/><text x="56.1159%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="55.7063%" y="469" width="0.3192%" height="15" fill="rgb(211,46,1)" fg:x="698" fg:w="4"/><text x="55.9563%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="55.7063%" y="453" width="0.3192%" height="15" fill="rgb(239,190,4)" fg:x="698" fg:w="4"/><text x="55.9563%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="55.7861%" y="437" width="0.2394%" height="15" fill="rgb(221,50,22)" fg:x="699" fg:w="3"/><text x="56.0361%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="55.7861%" y="421" width="0.2394%" height="15" fill="rgb(207,176,8)" fg:x="699" fg:w="3"/><text x="56.0361%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.8659%" y="405" width="0.1596%" height="15" fill="rgb(244,114,50)" fg:x="700" fg:w="2"/><text x="56.1159%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.8659%" y="389" width="0.1596%" height="15" fill="rgb(226,206,19)" fg:x="700" fg:w="2"/><text x="56.1159%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.8659%" y="373" width="0.1596%" height="15" fill="rgb(208,199,16)" fg:x="700" fg:w="2"/><text x="56.1159%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.8659%" y="357" width="0.1596%" height="15" fill="rgb(208,38,14)" fg:x="700" fg:w="2"/><text x="56.1159%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.9457%" y="341" width="0.0798%" height="15" fill="rgb(221,211,49)" fg:x="701" fg:w="1"/><text x="56.1957%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9457%" y="325" width="0.0798%" height="15" fill="rgb(227,214,34)" fg:x="701" fg:w="1"/><text x="56.1957%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.9457%" y="309" width="0.0798%" height="15" fill="rgb(234,5,54)" fg:x="701" fg:w="1"/><text x="56.1957%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="56.0255%" y="437" width="0.1596%" height="15" fill="rgb(236,215,22)" fg:x="702" fg:w="2"/><text x="56.2755%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="56.1053%" y="421" width="0.0798%" height="15" fill="rgb(244,0,11)" fg:x="703" fg:w="1"/><text x="56.3553%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="56.1053%" y="405" width="0.0798%" height="15" fill="rgb(212,140,16)" fg:x="703" fg:w="1"/><text x="56.3553%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.80%)</title><rect x="55.4669%" y="485" width="0.7981%" height="15" fill="rgb(238,101,37)" fg:x="695" fg:w="10"/><text x="55.7169%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="56.0255%" y="469" width="0.2394%" height="15" fill="rgb(247,46,3)" fg:x="702" fg:w="3"/><text x="56.2755%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.0255%" y="453" width="0.2394%" height="15" fill="rgb(208,106,19)" fg:x="702" fg:w="3"/><text x="56.2755%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.1852%" y="437" width="0.0798%" height="15" fill="rgb(240,227,15)" fg:x="704" fg:w="1"/><text x="56.4352%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="56.3448%" y="469" width="0.0798%" height="15" fill="rgb(226,173,6)" fg:x="706" fg:w="1"/><text x="56.5948%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="56.3448%" y="453" width="0.0798%" height="15" fill="rgb(213,191,1)" fg:x="706" fg:w="1"/><text x="56.5948%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="56.3448%" y="437" width="0.0798%" height="15" fill="rgb(246,51,36)" fg:x="706" fg:w="1"/><text x="56.5948%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="56.4246%" y="469" width="0.0798%" height="15" fill="rgb(238,40,32)" fg:x="707" fg:w="1"/><text x="56.6746%" y="479.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="56.5842%" y="405" width="0.0798%" height="15" fill="rgb(208,126,27)" fg:x="709" fg:w="1"/><text x="56.8342%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (6 samples, 0.48%)</title><rect x="56.2650%" y="485" width="0.4789%" height="15" fill="rgb(227,117,38)" fg:x="705" fg:w="6"/><text x="56.5150%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="56.5044%" y="469" width="0.2394%" height="15" fill="rgb(232,16,1)" fg:x="708" fg:w="3"/><text x="56.7544%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.5044%" y="453" width="0.2394%" height="15" fill="rgb(212,111,31)" fg:x="708" fg:w="3"/><text x="56.7544%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (3 samples, 0.24%)</title><rect x="56.5044%" y="437" width="0.2394%" height="15" fill="rgb(253,227,2)" fg:x="708" fg:w="3"/><text x="56.7544%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="56.5842%" y="421" width="0.1596%" height="15" fill="rgb(216,122,17)" fg:x="709" fg:w="2"/><text x="56.8342%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="56.6640%" y="405" width="0.0798%" height="15" fill="rgb(227,37,2)" fg:x="710" fg:w="1"/><text x="56.9140%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="56.6640%" y="389" width="0.0798%" height="15" fill="rgb(244,113,40)" fg:x="710" fg:w="1"/><text x="56.9140%" y="399.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="56.6640%" y="373" width="0.0798%" height="15" fill="rgb(217,193,34)" fg:x="710" fg:w="1"/><text x="56.9140%" y="383.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="56.6640%" y="357" width="0.0798%" height="15" fill="rgb(212,223,15)" fg:x="710" fg:w="1"/><text x="56.9140%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="56.7438%" y="373" width="0.0798%" height="15" fill="rgb(238,143,18)" fg:x="711" fg:w="1"/><text x="56.9938%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="56.7438%" y="357" width="0.0798%" height="15" fill="rgb(231,18,49)" fg:x="711" fg:w="1"/><text x="56.9938%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.7438%" y="341" width="0.0798%" height="15" fill="rgb(249,122,4)" fg:x="711" fg:w="1"/><text x="56.9938%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.7438%" y="325" width="0.0798%" height="15" fill="rgb(245,138,54)" fg:x="711" fg:w="1"/><text x="56.9938%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.7438%" y="309" width="0.0798%" height="15" fill="rgb(218,130,18)" fg:x="711" fg:w="1"/><text x="56.9938%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.7438%" y="293" width="0.0798%" height="15" fill="rgb(235,94,13)" fg:x="711" fg:w="1"/><text x="56.9938%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.7438%" y="277" width="0.0798%" height="15" fill="rgb(247,143,5)" fg:x="711" fg:w="1"/><text x="56.9938%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.7438%" y="261" width="0.0798%" height="15" fill="rgb(212,59,54)" fg:x="711" fg:w="1"/><text x="56.9938%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.8236%" y="277" width="0.0798%" height="15" fill="rgb(206,121,24)" fg:x="712" fg:w="1"/><text x="57.0736%" y="287.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (4 samples, 0.32%)</title><rect x="56.7438%" y="437" width="0.3192%" height="15" fill="rgb(235,38,8)" fg:x="711" fg:w="4"/><text x="56.9938%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="56.7438%" y="421" width="0.3192%" height="15" fill="rgb(227,102,26)" fg:x="711" fg:w="4"/><text x="56.9938%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="56.7438%" y="405" width="0.3192%" height="15" fill="rgb(240,183,46)" fg:x="711" fg:w="4"/><text x="56.9938%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="56.7438%" y="389" width="0.3192%" height="15" fill="rgb(208,177,23)" fg:x="711" fg:w="4"/><text x="56.9938%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="56.8236%" y="373" width="0.2394%" height="15" fill="rgb(216,152,5)" fg:x="712" fg:w="3"/><text x="57.0736%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.8236%" y="357" width="0.2394%" height="15" fill="rgb(238,199,2)" fg:x="712" fg:w="3"/><text x="57.0736%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.8236%" y="341" width="0.2394%" height="15" fill="rgb(235,142,28)" fg:x="712" fg:w="3"/><text x="57.0736%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.8236%" y="325" width="0.2394%" height="15" fill="rgb(225,97,25)" fg:x="712" fg:w="3"/><text x="57.0736%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="56.8236%" y="309" width="0.2394%" height="15" fill="rgb(208,75,46)" fg:x="712" fg:w="3"/><text x="57.0736%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.8236%" y="293" width="0.2394%" height="15" fill="rgb(240,136,15)" fg:x="712" fg:w="3"/><text x="57.0736%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="56.9034%" y="277" width="0.1596%" height="15" fill="rgb(235,36,27)" fg:x="713" fg:w="2"/><text x="57.1534%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9034%" y="261" width="0.1596%" height="15" fill="rgb(231,132,23)" fg:x="713" fg:w="2"/><text x="57.1534%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.9832%" y="245" width="0.0798%" height="15" fill="rgb(205,208,20)" fg:x="714" fg:w="1"/><text x="57.2332%" y="255.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (6 samples, 0.48%)</title><rect x="56.7438%" y="469" width="0.4789%" height="15" fill="rgb(215,26,40)" fg:x="711" fg:w="6"/><text x="56.9938%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="56.7438%" y="453" width="0.4789%" height="15" fill="rgb(238,183,34)" fg:x="711" fg:w="6"/><text x="56.9938%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.0630%" y="437" width="0.1596%" height="15" fill="rgb(207,96,10)" fg:x="715" fg:w="2"/><text x="57.3130%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.0630%" y="421" width="0.1596%" height="15" fill="rgb(218,88,6)" fg:x="715" fg:w="2"/><text x="57.3130%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.1429%" y="405" width="0.0798%" height="15" fill="rgb(217,22,49)" fg:x="716" fg:w="1"/><text x="57.3929%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.1429%" y="389" width="0.0798%" height="15" fill="rgb(240,195,14)" fg:x="716" fg:w="1"/><text x="57.3929%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="57.2227%" y="453" width="0.0798%" height="15" fill="rgb(229,48,27)" fg:x="717" fg:w="1"/><text x="57.4727%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="57.2227%" y="437" width="0.0798%" height="15" fill="rgb(220,194,45)" fg:x="717" fg:w="1"/><text x="57.4727%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.2227%" y="421" width="0.0798%" height="15" fill="rgb(252,60,20)" fg:x="717" fg:w="1"/><text x="57.4727%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.3025%" y="453" width="0.1596%" height="15" fill="rgb(244,169,33)" fg:x="718" fg:w="2"/><text x="57.5525%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="57.3025%" y="437" width="0.1596%" height="15" fill="rgb(234,141,34)" fg:x="718" fg:w="2"/><text x="57.5525%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="57.3025%" y="421" width="0.1596%" height="15" fill="rgb(241,141,9)" fg:x="718" fg:w="2"/><text x="57.5525%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (148 samples, 11.81%)</title><rect x="45.7302%" y="517" width="11.8117%" height="15" fill="rgb(246,27,36)" fg:x="573" fg:w="148"/><text x="45.9802%" y="527.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::location::change_location (55 samples, 4.39%)</title><rect x="53.1524%" y="501" width="4.3895%" height="15" fill="rgb(216,188,42)" fg:x="666" fg:w="55"/><text x="53.4024%" y="511.50">plugi..</text></g><g><title>plugins_core::location::Location::set (10 samples, 0.80%)</title><rect x="56.7438%" y="485" width="0.7981%" height="15" fill="rgb(234,205,22)" fg:x="711" fg:w="10"/><text x="56.9938%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="57.2227%" y="469" width="0.3192%" height="15" fill="rgb(210,202,32)" fg:x="717" fg:w="4"/><text x="57.4727%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="57.4621%" y="453" width="0.0798%" height="15" fill="rgb(217,0,48)" fg:x="720" fg:w="1"/><text x="57.7121%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="57.4621%" y="437" width="0.0798%" height="15" fill="rgb(207,115,37)" fg:x="720" fg:w="1"/><text x="57.7121%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="57.4621%" y="421" width="0.0798%" height="15" fill="rgb(237,221,44)" fg:x="720" fg:w="1"/><text x="57.7121%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="57.4621%" y="405" width="0.0798%" height="15" fill="rgb(249,78,2)" fg:x="720" fg:w="1"/><text x="57.7121%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4621%" y="389" width="0.0798%" height="15" fill="rgb(211,169,23)" fg:x="720" fg:w="1"/><text x="57.7121%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4621%" y="373" width="0.0798%" height="15" fill="rgb(207,116,29)" fg:x="720" fg:w="1"/><text x="57.7121%" y="383.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="57.5419%" y="485" width="0.0798%" height="15" fill="rgb(240,84,33)" fg:x="721" fg:w="1"/><text x="57.7919%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="57.5419%" y="469" width="0.0798%" height="15" fill="rgb(229,224,31)" fg:x="721" fg:w="1"/><text x="57.7919%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.5419%" y="453" width="0.0798%" height="15" fill="rgb(227,90,31)" fg:x="721" fg:w="1"/><text x="57.7919%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.5419%" y="437" width="0.0798%" height="15" fill="rgb(249,22,41)" fg:x="721" fg:w="1"/><text x="57.7919%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.5419%" y="421" width="0.0798%" height="15" fill="rgb(239,65,11)" fg:x="721" fg:w="1"/><text x="57.7919%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="57.6217%" y="469" width="0.0798%" height="15" fill="rgb(205,5,23)" fg:x="722" fg:w="1"/><text x="57.8717%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6217%" y="453" width="0.0798%" height="15" fill="rgb(254,78,52)" fg:x="722" fg:w="1"/><text x="57.8717%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.7015%" y="453" width="0.0798%" height="15" fill="rgb(214,156,33)" fg:x="723" fg:w="1"/><text x="57.9515%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.7015%" y="437" width="0.0798%" height="15" fill="rgb(208,20,30)" fg:x="723" fg:w="1"/><text x="57.9515%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.7813%" y="389" width="0.0798%" height="15" fill="rgb(223,133,18)" fg:x="724" fg:w="1"/><text x="58.0313%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="57.9409%" y="357" width="0.0798%" height="15" fill="rgb(222,91,41)" fg:x="726" fg:w="1"/><text x="58.1909%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.9409%" y="341" width="0.0798%" height="15" fill="rgb(247,137,48)" fg:x="726" fg:w="1"/><text x="58.1909%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (6 samples, 0.48%)</title><rect x="57.6217%" y="485" width="0.4789%" height="15" fill="rgb(239,156,11)" fg:x="722" fg:w="6"/><text x="57.8717%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="57.7015%" y="469" width="0.3990%" height="15" fill="rgb(244,56,26)" fg:x="723" fg:w="5"/><text x="57.9515%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.7813%" y="453" width="0.3192%" height="15" fill="rgb(205,131,49)" fg:x="724" fg:w="4"/><text x="58.0313%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.7813%" y="437" width="0.3192%" height="15" fill="rgb(224,0,2)" fg:x="724" fg:w="4"/><text x="58.0313%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="57.7813%" y="421" width="0.3192%" height="15" fill="rgb(247,59,36)" fg:x="724" fg:w="4"/><text x="58.0313%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.7813%" y="405" width="0.3192%" height="15" fill="rgb(215,4,47)" fg:x="724" fg:w="4"/><text x="58.0313%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="57.8611%" y="389" width="0.2394%" height="15" fill="rgb(242,72,42)" fg:x="725" fg:w="3"/><text x="58.1111%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.8611%" y="373" width="0.2394%" height="15" fill="rgb(232,145,44)" fg:x="725" fg:w="3"/><text x="58.1111%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0208%" y="357" width="0.0798%" height="15" fill="rgb(205,108,43)" fg:x="727" fg:w="1"/><text x="58.2708%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1006%" y="469" width="0.0798%" height="15" fill="rgb(215,190,17)" fg:x="728" fg:w="1"/><text x="58.3506%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1006%" y="453" width="0.0798%" height="15" fill="rgb(223,90,34)" fg:x="728" fg:w="1"/><text x="58.3506%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.1006%" y="437" width="0.0798%" height="15" fill="rgb(216,25,0)" fg:x="728" fg:w="1"/><text x="58.3506%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.1006%" y="421" width="0.0798%" height="15" fill="rgb(223,51,28)" fg:x="728" fg:w="1"/><text x="58.3506%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.1006%" y="405" width="0.0798%" height="15" fill="rgb(227,131,7)" fg:x="728" fg:w="1"/><text x="58.3506%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1006%" y="389" width="0.0798%" height="15" fill="rgb(216,72,36)" fg:x="728" fg:w="1"/><text x="58.3506%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1006%" y="373" width="0.0798%" height="15" fill="rgb(243,158,40)" fg:x="728" fg:w="1"/><text x="58.3506%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.1006%" y="357" width="0.0798%" height="15" fill="rgb(218,60,54)" fg:x="728" fg:w="1"/><text x="58.3506%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.1006%" y="341" width="0.0798%" height="15" fill="rgb(230,15,46)" fg:x="728" fg:w="1"/><text x="58.3506%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.1006%" y="325" width="0.0798%" height="15" fill="rgb(250,22,26)" fg:x="728" fg:w="1"/><text x="58.3506%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.1006%" y="309" width="0.0798%" height="15" fill="rgb(239,194,40)" fg:x="728" fg:w="1"/><text x="58.3506%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1804%" y="469" width="0.0798%" height="15" fill="rgb(219,62,9)" fg:x="729" fg:w="1"/><text x="58.4304%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (3 samples, 0.24%)</title><rect x="58.2602%" y="469" width="0.2394%" height="15" fill="rgb(228,45,21)" fg:x="730" fg:w="3"/><text x="58.5102%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.4996%" y="453" width="0.0798%" height="15" fill="rgb(242,56,44)" fg:x="733" fg:w="1"/><text x="58.7496%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4996%" y="437" width="0.0798%" height="15" fill="rgb(239,170,14)" fg:x="733" fg:w="1"/><text x="58.7496%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4996%" y="421" width="0.0798%" height="15" fill="rgb(236,150,13)" fg:x="733" fg:w="1"/><text x="58.7496%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.4996%" y="405" width="0.0798%" height="15" fill="rgb(228,15,30)" fg:x="733" fg:w="1"/><text x="58.7496%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.4996%" y="389" width="0.0798%" height="15" fill="rgb(217,43,28)" fg:x="733" fg:w="1"/><text x="58.7496%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.4996%" y="373" width="0.0798%" height="15" fill="rgb(246,223,1)" fg:x="733" fg:w="1"/><text x="58.7496%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4996%" y="357" width="0.0798%" height="15" fill="rgb(247,103,7)" fg:x="733" fg:w="1"/><text x="58.7496%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.4996%" y="341" width="0.0798%" height="15" fill="rgb(205,105,39)" fg:x="733" fg:w="1"/><text x="58.7496%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.4996%" y="325" width="0.0798%" height="15" fill="rgb(216,134,18)" fg:x="733" fg:w="1"/><text x="58.7496%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.4996%" y="309" width="0.0798%" height="15" fill="rgb(226,139,50)" fg:x="733" fg:w="1"/><text x="58.7496%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.4996%" y="293" width="0.0798%" height="15" fill="rgb(251,152,38)" fg:x="733" fg:w="1"/><text x="58.7496%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.4996%" y="277" width="0.0798%" height="15" fill="rgb(222,63,15)" fg:x="733" fg:w="1"/><text x="58.7496%" y="287.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="58.4996%" y="261" width="0.0798%" height="15" fill="rgb(212,198,28)" fg:x="733" fg:w="1"/><text x="58.7496%" y="271.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.4996%" y="245" width="0.0798%" height="15" fill="rgb(216,93,38)" fg:x="733" fg:w="1"/><text x="58.7496%" y="255.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (16 samples, 1.28%)</title><rect x="57.5419%" y="501" width="1.2769%" height="15" fill="rgb(247,202,44)" fg:x="721" fg:w="16"/><text x="57.7919%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="58.1006%" y="485" width="0.7183%" height="15" fill="rgb(237,204,46)" fg:x="728" fg:w="9"/><text x="58.3506%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="58.4996%" y="469" width="0.3192%" height="15" fill="rgb(224,98,48)" fg:x="733" fg:w="4"/><text x="58.7496%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="58.5794%" y="453" width="0.2394%" height="15" fill="rgb(247,105,21)" fg:x="734" fg:w="3"/><text x="58.8294%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.5794%" y="437" width="0.2394%" height="15" fill="rgb(212,137,52)" fg:x="734" fg:w="3"/><text x="58.8294%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.6592%" y="421" width="0.1596%" height="15" fill="rgb(223,76,33)" fg:x="735" fg:w="2"/><text x="58.9092%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7390%" y="405" width="0.0798%" height="15" fill="rgb(209,156,27)" fg:x="736" fg:w="1"/><text x="58.9890%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="58.7390%" y="389" width="0.0798%" height="15" fill="rgb(249,81,54)" fg:x="736" fg:w="1"/><text x="58.9890%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.7390%" y="373" width="0.0798%" height="15" fill="rgb(241,46,29)" fg:x="736" fg:w="1"/><text x="58.9890%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="58.8986%" y="453" width="0.0798%" height="15" fill="rgb(213,193,39)" fg:x="738" fg:w="1"/><text x="59.1486%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="58.8986%" y="437" width="0.0798%" height="15" fill="rgb(214,85,16)" fg:x="738" fg:w="1"/><text x="59.1486%" y="447.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="58.8986%" y="421" width="0.0798%" height="15" fill="rgb(216,184,17)" fg:x="738" fg:w="1"/><text x="59.1486%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="58.9785%" y="453" width="0.0798%" height="15" fill="rgb(254,219,29)" fg:x="739" fg:w="1"/><text x="59.2285%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.9785%" y="437" width="0.0798%" height="15" fill="rgb(209,148,34)" fg:x="739" fg:w="1"/><text x="59.2285%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="59.0583%" y="405" width="0.0798%" height="15" fill="rgb(253,215,11)" fg:x="740" fg:w="1"/><text x="59.3083%" y="415.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="59.0583%" y="389" width="0.0798%" height="15" fill="rgb(232,126,20)" fg:x="740" fg:w="1"/><text x="59.3083%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.0583%" y="373" width="0.0798%" height="15" fill="rgb(248,118,51)" fg:x="740" fg:w="1"/><text x="59.3083%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.0583%" y="357" width="0.0798%" height="15" fill="rgb(226,121,21)" fg:x="740" fg:w="1"/><text x="59.3083%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1381%" y="357" width="0.1596%" height="15" fill="rgb(216,128,16)" fg:x="741" fg:w="2"/><text x="59.3881%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1381%" y="341" width="0.1596%" height="15" fill="rgb(205,17,9)" fg:x="741" fg:w="2"/><text x="59.3881%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.1381%" y="325" width="0.1596%" height="15" fill="rgb(206,197,21)" fg:x="741" fg:w="2"/><text x="59.3881%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2179%" y="309" width="0.0798%" height="15" fill="rgb(212,202,9)" fg:x="742" fg:w="1"/><text x="59.4679%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.2179%" y="293" width="0.0798%" height="15" fill="rgb(241,131,50)" fg:x="742" fg:w="1"/><text x="59.4679%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.2179%" y="277" width="0.0798%" height="15" fill="rgb(228,115,51)" fg:x="742" fg:w="1"/><text x="59.4679%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.2179%" y="261" width="0.0798%" height="15" fill="rgb(237,209,8)" fg:x="742" fg:w="1"/><text x="59.4679%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.2179%" y="245" width="0.0798%" height="15" fill="rgb(241,121,28)" fg:x="742" fg:w="1"/><text x="59.4679%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2179%" y="229" width="0.0798%" height="15" fill="rgb(238,194,51)" fg:x="742" fg:w="1"/><text x="59.4679%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.2179%" y="213" width="0.0798%" height="15" fill="rgb(208,41,39)" fg:x="742" fg:w="1"/><text x="59.4679%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.2179%" y="197" width="0.0798%" height="15" fill="rgb(223,95,44)" fg:x="742" fg:w="1"/><text x="59.4679%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.2179%" y="181" width="0.0798%" height="15" fill="rgb(253,98,40)" fg:x="742" fg:w="1"/><text x="59.4679%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.2179%" y="165" width="0.0798%" height="15" fill="rgb(210,5,12)" fg:x="742" fg:w="1"/><text x="59.4679%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.2179%" y="149" width="0.0798%" height="15" fill="rgb(233,201,23)" fg:x="742" fg:w="1"/><text x="59.4679%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2179%" y="133" width="0.0798%" height="15" fill="rgb(251,68,15)" fg:x="742" fg:w="1"/><text x="59.4679%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.1381%" y="389" width="0.2394%" height="15" fill="rgb(243,10,46)" fg:x="741" fg:w="3"/><text x="59.3881%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="59.1381%" y="373" width="0.2394%" height="15" fill="rgb(253,130,44)" fg:x="741" fg:w="3"/><text x="59.3881%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="59.2977%" y="357" width="0.0798%" height="15" fill="rgb(244,5,26)" fg:x="743" fg:w="1"/><text x="59.5477%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2977%" y="341" width="0.0798%" height="15" fill="rgb(220,126,20)" fg:x="743" fg:w="1"/><text x="59.5477%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.2977%" y="325" width="0.0798%" height="15" fill="rgb(212,188,29)" fg:x="743" fg:w="1"/><text x="59.5477%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.2977%" y="309" width="0.0798%" height="15" fill="rgb(227,194,48)" fg:x="743" fg:w="1"/><text x="59.5477%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2977%" y="293" width="0.0798%" height="15" fill="rgb(245,64,28)" fg:x="743" fg:w="1"/><text x="59.5477%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.4573%" y="373" width="0.0798%" height="15" fill="rgb(205,44,7)" fg:x="745" fg:w="1"/><text x="59.7073%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5371%" y="357" width="0.1596%" height="15" fill="rgb(213,193,11)" fg:x="746" fg:w="2"/><text x="59.7871%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5371%" y="341" width="0.1596%" height="15" fill="rgb(238,157,6)" fg:x="746" fg:w="2"/><text x="59.7871%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.5371%" y="325" width="0.1596%" height="15" fill="rgb(222,73,7)" fg:x="746" fg:w="2"/><text x="59.7871%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6169%" y="309" width="0.0798%" height="15" fill="rgb(224,78,15)" fg:x="747" fg:w="1"/><text x="59.8669%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.6169%" y="293" width="0.0798%" height="15" fill="rgb(218,149,46)" fg:x="747" fg:w="1"/><text x="59.8669%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.6169%" y="277" width="0.0798%" height="15" fill="rgb(218,175,44)" fg:x="747" fg:w="1"/><text x="59.8669%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.6169%" y="261" width="0.0798%" height="15" fill="rgb(215,183,45)" fg:x="747" fg:w="1"/><text x="59.8669%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.6169%" y="245" width="0.0798%" height="15" fill="rgb(226,116,37)" fg:x="747" fg:w="1"/><text x="59.8669%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6169%" y="229" width="0.0798%" height="15" fill="rgb(252,224,12)" fg:x="747" fg:w="1"/><text x="59.8669%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.6169%" y="213" width="0.0798%" height="15" fill="rgb(232,212,21)" fg:x="747" fg:w="1"/><text x="59.8669%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.6169%" y="197" width="0.0798%" height="15" fill="rgb(226,191,16)" fg:x="747" fg:w="1"/><text x="59.8669%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.6169%" y="181" width="0.0798%" height="15" fill="rgb(231,156,11)" fg:x="747" fg:w="1"/><text x="59.8669%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.6169%" y="165" width="0.0798%" height="15" fill="rgb(225,134,49)" fg:x="747" fg:w="1"/><text x="59.8669%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.6169%" y="149" width="0.0798%" height="15" fill="rgb(254,55,32)" fg:x="747" fg:w="1"/><text x="59.8669%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6169%" y="133" width="0.0798%" height="15" fill="rgb(242,195,29)" fg:x="747" fg:w="1"/><text x="59.8669%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.8563%" y="293" width="0.0798%" height="15" fill="rgb(210,155,20)" fg:x="750" fg:w="1"/><text x="60.1063%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (5 samples, 0.40%)</title><rect x="59.7765%" y="325" width="0.3990%" height="15" fill="rgb(243,170,23)" fg:x="749" fg:w="5"/><text x="60.0265%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="59.7765%" y="309" width="0.3990%" height="15" fill="rgb(242,197,51)" fg:x="749" fg:w="5"/><text x="60.0265%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="59.9362%" y="293" width="0.2394%" height="15" fill="rgb(248,48,13)" fg:x="751" fg:w="3"/><text x="60.1862%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.9362%" y="277" width="0.2394%" height="15" fill="rgb(221,185,15)" fg:x="751" fg:w="3"/><text x="60.1862%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="59.3775%" y="389" width="0.8779%" height="15" fill="rgb(244,49,7)" fg:x="744" fg:w="11"/><text x="59.6275%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="59.5371%" y="373" width="0.7183%" height="15" fill="rgb(213,182,52)" fg:x="746" fg:w="9"/><text x="59.7871%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (7 samples, 0.56%)</title><rect x="59.6967%" y="357" width="0.5587%" height="15" fill="rgb(209,15,45)" fg:x="748" fg:w="7"/><text x="59.9467%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="59.7765%" y="341" width="0.4789%" height="15" fill="rgb(233,23,44)" fg:x="749" fg:w="6"/><text x="60.0265%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.1756%" y="325" width="0.0798%" height="15" fill="rgb(220,182,30)" fg:x="754" fg:w="1"/><text x="60.4256%" y="335.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (16 samples, 1.28%)</title><rect x="59.0583%" y="437" width="1.2769%" height="15" fill="rgb(219,116,33)" fg:x="740" fg:w="16"/><text x="59.3083%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (16 samples, 1.28%)</title><rect x="59.0583%" y="421" width="1.2769%" height="15" fill="rgb(231,15,21)" fg:x="740" fg:w="16"/><text x="59.3083%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (15 samples, 1.20%)</title><rect x="59.1381%" y="405" width="1.1971%" height="15" fill="rgb(238,119,25)" fg:x="741" fg:w="15"/><text x="59.3881%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="60.2554%" y="389" width="0.0798%" height="15" fill="rgb(232,30,39)" fg:x="755" fg:w="1"/><text x="60.5054%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="373" width="0.0798%" height="15" fill="rgb(241,26,30)" fg:x="755" fg:w="1"/><text x="60.5054%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.2554%" y="357" width="0.0798%" height="15" fill="rgb(234,154,4)" fg:x="755" fg:w="1"/><text x="60.5054%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="341" width="0.0798%" height="15" fill="rgb(229,199,39)" fg:x="755" fg:w="1"/><text x="60.5054%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="325" width="0.0798%" height="15" fill="rgb(236,213,10)" fg:x="755" fg:w="1"/><text x="60.5054%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="309" width="0.0798%" height="15" fill="rgb(247,28,19)" fg:x="755" fg:w="1"/><text x="60.5054%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="60.2554%" y="293" width="0.0798%" height="15" fill="rgb(239,199,24)" fg:x="755" fg:w="1"/><text x="60.5054%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="277" width="0.0798%" height="15" fill="rgb(246,122,13)" fg:x="755" fg:w="1"/><text x="60.5054%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="60.2554%" y="261" width="0.0798%" height="15" fill="rgb(210,203,29)" fg:x="755" fg:w="1"/><text x="60.5054%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="60.2554%" y="245" width="0.0798%" height="15" fill="rgb(218,4,50)" fg:x="755" fg:w="1"/><text x="60.5054%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.2554%" y="229" width="0.0798%" height="15" fill="rgb(236,142,48)" fg:x="755" fg:w="1"/><text x="60.5054%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="60.2554%" y="213" width="0.0798%" height="15" fill="rgb(245,173,2)" fg:x="755" fg:w="1"/><text x="60.5054%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="60.2554%" y="197" width="0.0798%" height="15" fill="rgb(244,196,18)" fg:x="755" fg:w="1"/><text x="60.5054%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="60.2554%" y="181" width="0.0798%" height="15" fill="rgb(221,27,33)" fg:x="755" fg:w="1"/><text x="60.5054%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="60.2554%" y="165" width="0.0798%" height="15" fill="rgb(210,206,16)" fg:x="755" fg:w="1"/><text x="60.5054%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="60.2554%" y="149" width="0.0798%" height="15" fill="rgb(238,161,34)" fg:x="755" fg:w="1"/><text x="60.5054%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="60.2554%" y="133" width="0.0798%" height="15" fill="rgb(243,118,39)" fg:x="755" fg:w="1"/><text x="60.5054%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7342%" y="341" width="0.0798%" height="15" fill="rgb(234,126,9)" fg:x="761" fg:w="1"/><text x="60.9842%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.7342%" y="325" width="0.0798%" height="15" fill="rgb(234,167,42)" fg:x="761" fg:w="1"/><text x="60.9842%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.7342%" y="309" width="0.0798%" height="15" fill="rgb(238,54,48)" fg:x="761" fg:w="1"/><text x="60.9842%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.7342%" y="293" width="0.0798%" height="15" fill="rgb(226,105,2)" fg:x="761" fg:w="1"/><text x="60.9842%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.7342%" y="277" width="0.0798%" height="15" fill="rgb(223,95,23)" fg:x="761" fg:w="1"/><text x="60.9842%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7342%" y="261" width="0.0798%" height="15" fill="rgb(249,212,19)" fg:x="761" fg:w="1"/><text x="60.9842%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.7342%" y="245" width="0.0798%" height="15" fill="rgb(234,158,54)" fg:x="761" fg:w="1"/><text x="60.9842%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.7342%" y="229" width="0.0798%" height="15" fill="rgb(247,114,32)" fg:x="761" fg:w="1"/><text x="60.9842%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.7342%" y="213" width="0.0798%" height="15" fill="rgb(250,68,44)" fg:x="761" fg:w="1"/><text x="60.9842%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.7342%" y="197" width="0.0798%" height="15" fill="rgb(242,3,15)" fg:x="761" fg:w="1"/><text x="60.9842%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.7342%" y="181" width="0.0798%" height="15" fill="rgb(223,110,32)" fg:x="761" fg:w="1"/><text x="60.9842%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.7342%" y="165" width="0.0798%" height="15" fill="rgb(216,26,54)" fg:x="761" fg:w="1"/><text x="60.9842%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.6544%" y="405" width="0.2394%" height="15" fill="rgb(209,145,42)" fg:x="760" fg:w="3"/><text x="60.9044%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="60.6544%" y="389" width="0.2394%" height="15" fill="rgb(240,111,53)" fg:x="760" fg:w="3"/><text x="60.9044%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.6544%" y="373" width="0.2394%" height="15" fill="rgb(209,101,4)" fg:x="760" fg:w="3"/><text x="60.9044%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="60.7342%" y="357" width="0.1596%" height="15" fill="rgb(231,74,29)" fg:x="761" fg:w="2"/><text x="60.9842%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8140%" y="341" width="0.0798%" height="15" fill="rgb(223,12,12)" fg:x="762" fg:w="1"/><text x="61.0640%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="60.8939%" y="341" width="0.0798%" height="15" fill="rgb(207,162,2)" fg:x="763" fg:w="1"/><text x="61.1439%" y="351.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="60.8939%" y="325" width="0.0798%" height="15" fill="rgb(230,152,0)" fg:x="763" fg:w="1"/><text x="61.1439%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="60.9737%" y="293" width="0.0798%" height="15" fill="rgb(254,156,19)" fg:x="764" fg:w="1"/><text x="61.2237%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9737%" y="277" width="0.0798%" height="15" fill="rgb(250,28,0)" fg:x="764" fg:w="1"/><text x="61.2237%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.0535%" y="293" width="0.0798%" height="15" fill="rgb(253,27,5)" fg:x="765" fg:w="1"/><text x="61.3035%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="61.0535%" y="277" width="0.0798%" height="15" fill="rgb(244,154,7)" fg:x="765" fg:w="1"/><text x="61.3035%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.2131%" y="277" width="0.0798%" height="15" fill="rgb(242,108,21)" fg:x="767" fg:w="1"/><text x="61.4631%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.2131%" y="261" width="0.0798%" height="15" fill="rgb(254,200,38)" fg:x="767" fg:w="1"/><text x="61.4631%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="60.9737%" y="309" width="0.3990%" height="15" fill="rgb(250,145,41)" fg:x="764" fg:w="5"/><text x="61.2237%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.1333%" y="293" width="0.2394%" height="15" fill="rgb(235,136,31)" fg:x="766" fg:w="3"/><text x="61.3833%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.2929%" y="277" width="0.0798%" height="15" fill="rgb(215,13,18)" fg:x="768" fg:w="1"/><text x="61.5429%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.2929%" y="261" width="0.0798%" height="15" fill="rgb(238,199,12)" fg:x="768" fg:w="1"/><text x="61.5429%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.2929%" y="245" width="0.0798%" height="15" fill="rgb(242,179,49)" fg:x="768" fg:w="1"/><text x="61.5429%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.2929%" y="229" width="0.0798%" height="15" fill="rgb(214,10,44)" fg:x="768" fg:w="1"/><text x="61.5429%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.2929%" y="213" width="0.0798%" height="15" fill="rgb(229,181,11)" fg:x="768" fg:w="1"/><text x="61.5429%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.2929%" y="197" width="0.0798%" height="15" fill="rgb(244,155,10)" fg:x="768" fg:w="1"/><text x="61.5429%" y="207.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.3727%" y="293" width="0.0798%" height="15" fill="rgb(254,13,48)" fg:x="769" fg:w="1"/><text x="61.6227%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4525%" y="277" width="0.1596%" height="15" fill="rgb(210,164,6)" fg:x="770" fg:w="2"/><text x="61.7025%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4525%" y="261" width="0.1596%" height="15" fill="rgb(216,187,40)" fg:x="770" fg:w="2"/><text x="61.7025%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4525%" y="245" width="0.1596%" height="15" fill="rgb(208,143,21)" fg:x="770" fg:w="2"/><text x="61.7025%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5323%" y="229" width="0.0798%" height="15" fill="rgb(211,73,41)" fg:x="771" fg:w="1"/><text x="61.7823%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5323%" y="213" width="0.0798%" height="15" fill="rgb(244,69,21)" fg:x="771" fg:w="1"/><text x="61.7823%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5323%" y="197" width="0.0798%" height="15" fill="rgb(230,152,32)" fg:x="771" fg:w="1"/><text x="61.7823%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5323%" y="181" width="0.0798%" height="15" fill="rgb(208,110,18)" fg:x="771" fg:w="1"/><text x="61.7823%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5323%" y="165" width="0.0798%" height="15" fill="rgb(214,201,49)" fg:x="771" fg:w="1"/><text x="61.7823%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5323%" y="149" width="0.0798%" height="15" fill="rgb(253,153,27)" fg:x="771" fg:w="1"/><text x="61.7823%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.5323%" y="133" width="0.0798%" height="15" fill="rgb(238,61,11)" fg:x="771" fg:w="1"/><text x="61.7823%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="61.6121%" y="277" width="0.0798%" height="15" fill="rgb(227,84,2)" fg:x="772" fg:w="1"/><text x="61.8621%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.6121%" y="261" width="0.0798%" height="15" fill="rgb(233,52,8)" fg:x="772" fg:w="1"/><text x="61.8621%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.6121%" y="245" width="0.0798%" height="15" fill="rgb(209,136,13)" fg:x="772" fg:w="1"/><text x="61.8621%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.6121%" y="229" width="0.0798%" height="15" fill="rgb(229,86,25)" fg:x="772" fg:w="1"/><text x="61.8621%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6121%" y="213" width="0.0798%" height="15" fill="rgb(235,47,16)" fg:x="772" fg:w="1"/><text x="61.8621%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (11 samples, 0.88%)</title><rect x="60.8939%" y="405" width="0.8779%" height="15" fill="rgb(231,186,4)" fg:x="763" fg:w="11"/><text x="61.1439%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="60.8939%" y="389" width="0.8779%" height="15" fill="rgb(209,213,23)" fg:x="763" fg:w="11"/><text x="61.1439%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="60.8939%" y="373" width="0.8779%" height="15" fill="rgb(212,142,47)" fg:x="763" fg:w="11"/><text x="61.1439%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="60.8939%" y="357" width="0.8779%" height="15" fill="rgb(251,86,24)" fg:x="763" fg:w="11"/><text x="61.1439%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (10 samples, 0.80%)</title><rect x="60.9737%" y="341" width="0.7981%" height="15" fill="rgb(206,217,17)" fg:x="764" fg:w="10"/><text x="61.2237%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (10 samples, 0.80%)</title><rect x="60.9737%" y="325" width="0.7981%" height="15" fill="rgb(248,92,38)" fg:x="764" fg:w="10"/><text x="61.2237%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="61.3727%" y="309" width="0.3990%" height="15" fill="rgb(214,25,29)" fg:x="769" fg:w="5"/><text x="61.6227%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="61.4525%" y="293" width="0.3192%" height="15" fill="rgb(245,117,13)" fg:x="770" fg:w="4"/><text x="61.7025%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.6919%" y="277" width="0.0798%" height="15" fill="rgb(205,169,9)" fg:x="773" fg:w="1"/><text x="61.9419%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6919%" y="261" width="0.0798%" height="15" fill="rgb(223,134,38)" fg:x="773" fg:w="1"/><text x="61.9419%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.6919%" y="245" width="0.0798%" height="15" fill="rgb(249,129,49)" fg:x="773" fg:w="1"/><text x="61.9419%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6919%" y="229" width="0.0798%" height="15" fill="rgb(229,157,45)" fg:x="773" fg:w="1"/><text x="61.9419%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="61.7717%" y="405" width="0.0798%" height="15" fill="rgb(232,159,11)" fg:x="774" fg:w="1"/><text x="62.0217%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="61.7717%" y="389" width="0.0798%" height="15" fill="rgb(230,134,26)" fg:x="774" fg:w="1"/><text x="62.0217%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.7717%" y="373" width="0.0798%" height="15" fill="rgb(234,149,40)" fg:x="774" fg:w="1"/><text x="62.0217%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.7717%" y="357" width="0.0798%" height="15" fill="rgb(221,122,15)" fg:x="774" fg:w="1"/><text x="62.0217%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.8516%" y="373" width="0.0798%" height="15" fill="rgb(228,127,0)" fg:x="775" fg:w="1"/><text x="62.1016%" y="383.50"></text></g><g><title>plugins_core::tools::contained_by (37 samples, 2.95%)</title><rect x="59.0583%" y="453" width="2.9529%" height="15" fill="rgb(248,37,7)" fg:x="740" fg:w="37"/><text x="59.3083%" y="463.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.68%)</title><rect x="60.3352%" y="437" width="1.6760%" height="15" fill="rgb(215,140,49)" fg:x="756" fg:w="21"/><text x="60.5852%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (20 samples, 1.60%)</title><rect x="60.4150%" y="421" width="1.5962%" height="15" fill="rgb(236,65,39)" fg:x="757" fg:w="20"/><text x="60.6650%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.8516%" y="405" width="0.1596%" height="15" fill="rgb(253,102,38)" fg:x="775" fg:w="2"/><text x="62.1016%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.8516%" y="389" width="0.1596%" height="15" fill="rgb(244,100,34)" fg:x="775" fg:w="2"/><text x="62.1016%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.9314%" y="373" width="0.0798%" height="15" fill="rgb(210,179,47)" fg:x="776" fg:w="1"/><text x="62.1814%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.9314%" y="357" width="0.0798%" height="15" fill="rgb(231,41,37)" fg:x="776" fg:w="1"/><text x="62.1814%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.9314%" y="341" width="0.0798%" height="15" fill="rgb(226,209,17)" fg:x="776" fg:w="1"/><text x="62.1814%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.9314%" y="325" width="0.0798%" height="15" fill="rgb(231,154,20)" fg:x="776" fg:w="1"/><text x="62.1814%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.9314%" y="309" width="0.0798%" height="15" fill="rgb(216,134,24)" fg:x="776" fg:w="1"/><text x="62.1814%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="62.0112%" y="341" width="0.1596%" height="15" fill="rgb(224,71,42)" fg:x="777" fg:w="2"/><text x="62.2612%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="62.0112%" y="325" width="0.1596%" height="15" fill="rgb(250,65,23)" fg:x="777" fg:w="2"/><text x="62.2612%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.0112%" y="309" width="0.1596%" height="15" fill="rgb(209,160,35)" fg:x="777" fg:w="2"/><text x="62.2612%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0112%" y="293" width="0.1596%" height="15" fill="rgb(215,8,11)" fg:x="777" fg:w="2"/><text x="62.2612%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="62.0112%" y="277" width="0.1596%" height="15" fill="rgb(227,27,12)" fg:x="777" fg:w="2"/><text x="62.2612%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.0112%" y="261" width="0.1596%" height="15" fill="rgb(226,111,41)" fg:x="777" fg:w="2"/><text x="62.2612%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.0910%" y="245" width="0.0798%" height="15" fill="rgb(212,195,15)" fg:x="778" fg:w="1"/><text x="62.3410%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.0910%" y="229" width="0.0798%" height="15" fill="rgb(216,191,17)" fg:x="778" fg:w="1"/><text x="62.3410%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1708%" y="309" width="0.0798%" height="15" fill="rgb(215,57,44)" fg:x="779" fg:w="1"/><text x="62.4208%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1708%" y="293" width="0.0798%" height="15" fill="rgb(209,38,4)" fg:x="779" fg:w="1"/><text x="62.4208%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1708%" y="277" width="0.0798%" height="15" fill="rgb(238,49,31)" fg:x="779" fg:w="1"/><text x="62.4208%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2506%" y="277" width="0.0798%" height="15" fill="rgb(219,48,39)" fg:x="780" fg:w="1"/><text x="62.5006%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="62.1708%" y="341" width="0.2394%" height="15" fill="rgb(252,223,43)" fg:x="779" fg:w="3"/><text x="62.4208%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="62.1708%" y="325" width="0.2394%" height="15" fill="rgb(247,205,46)" fg:x="779" fg:w="3"/><text x="62.4208%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="62.2506%" y="309" width="0.1596%" height="15" fill="rgb(231,16,40)" fg:x="780" fg:w="2"/><text x="62.5006%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.2506%" y="293" width="0.1596%" height="15" fill="rgb(231,115,5)" fg:x="780" fg:w="2"/><text x="62.5006%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.3304%" y="277" width="0.0798%" height="15" fill="rgb(206,127,43)" fg:x="781" fg:w="1"/><text x="62.5804%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.3304%" y="261" width="0.0798%" height="15" fill="rgb(218,101,9)" fg:x="781" fg:w="1"/><text x="62.5804%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.3304%" y="245" width="0.0798%" height="15" fill="rgb(235,138,50)" fg:x="781" fg:w="1"/><text x="62.5804%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.3304%" y="229" width="0.0798%" height="15" fill="rgb(214,197,52)" fg:x="781" fg:w="1"/><text x="62.5804%" y="239.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="62.0112%" y="437" width="0.4789%" height="15" fill="rgb(230,80,19)" fg:x="777" fg:w="6"/><text x="62.2612%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="62.0112%" y="421" width="0.4789%" height="15" fill="rgb(224,77,16)" fg:x="777" fg:w="6"/><text x="62.2612%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="62.0112%" y="405" width="0.4789%" height="15" fill="rgb(246,4,13)" fg:x="777" fg:w="6"/><text x="62.2612%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (6 samples, 0.48%)</title><rect x="62.0112%" y="389" width="0.4789%" height="15" fill="rgb(220,177,26)" fg:x="777" fg:w="6"/><text x="62.2612%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.48%)</title><rect x="62.0112%" y="373" width="0.4789%" height="15" fill="rgb(215,114,45)" fg:x="777" fg:w="6"/><text x="62.2612%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="62.0112%" y="357" width="0.4789%" height="15" fill="rgb(215,71,54)" fg:x="777" fg:w="6"/><text x="62.2612%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="62.4102%" y="341" width="0.0798%" height="15" fill="rgb(211,155,22)" fg:x="782" fg:w="1"/><text x="62.6602%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="62.4102%" y="325" width="0.0798%" height="15" fill="rgb(245,206,18)" fg:x="782" fg:w="1"/><text x="62.6602%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="62.4102%" y="309" width="0.0798%" height="15" fill="rgb(248,216,48)" fg:x="782" fg:w="1"/><text x="62.6602%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="62.4102%" y="293" width="0.0798%" height="15" fill="rgb(244,84,45)" fg:x="782" fg:w="1"/><text x="62.6602%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5698%" y="405" width="0.0798%" height="15" fill="rgb(245,13,45)" fg:x="784" fg:w="1"/><text x="62.8198%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5698%" y="389" width="0.0798%" height="15" fill="rgb(247,163,2)" fg:x="784" fg:w="1"/><text x="62.8198%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.5698%" y="373" width="0.0798%" height="15" fill="rgb(211,175,10)" fg:x="784" fg:w="1"/><text x="62.8198%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.5698%" y="357" width="0.0798%" height="15" fill="rgb(215,186,31)" fg:x="784" fg:w="1"/><text x="62.8198%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="62.5698%" y="341" width="0.0798%" height="15" fill="rgb(207,42,11)" fg:x="784" fg:w="1"/><text x="62.8198%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="62.5698%" y="325" width="0.0798%" height="15" fill="rgb(224,197,20)" fg:x="784" fg:w="1"/><text x="62.8198%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="62.6496%" y="341" width="0.1596%" height="15" fill="rgb(244,119,36)" fg:x="785" fg:w="2"/><text x="62.8996%" y="351.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="62.6496%" y="325" width="0.1596%" height="15" fill="rgb(250,60,27)" fg:x="785" fg:w="2"/><text x="62.8996%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.7294%" y="309" width="0.0798%" height="15" fill="rgb(252,202,1)" fg:x="786" fg:w="1"/><text x="62.9794%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="62.8093%" y="309" width="0.0798%" height="15" fill="rgb(206,53,25)" fg:x="787" fg:w="1"/><text x="63.0593%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.8093%" y="293" width="0.0798%" height="15" fill="rgb(210,88,4)" fg:x="787" fg:w="1"/><text x="63.0593%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="62.9689%" y="293" width="0.0798%" height="15" fill="rgb(211,144,28)" fg:x="789" fg:w="1"/><text x="63.2189%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.0487%" y="213" width="0.0798%" height="15" fill="rgb(247,81,32)" fg:x="790" fg:w="1"/><text x="63.2987%" y="223.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="62.6496%" y="405" width="0.5587%" height="15" fill="rgb(225,192,11)" fg:x="785" fg:w="7"/><text x="62.8996%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="62.6496%" y="389" width="0.5587%" height="15" fill="rgb(232,212,27)" fg:x="785" fg:w="7"/><text x="62.8996%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.56%)</title><rect x="62.6496%" y="373" width="0.5587%" height="15" fill="rgb(239,3,29)" fg:x="785" fg:w="7"/><text x="62.8996%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="62.6496%" y="357" width="0.5587%" height="15" fill="rgb(252,225,29)" fg:x="785" fg:w="7"/><text x="62.8996%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (5 samples, 0.40%)</title><rect x="62.8093%" y="341" width="0.3990%" height="15" fill="rgb(205,151,9)" fg:x="787" fg:w="5"/><text x="63.0593%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="62.8093%" y="325" width="0.3990%" height="15" fill="rgb(216,171,47)" fg:x="787" fg:w="5"/><text x="63.0593%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="62.8891%" y="309" width="0.3192%" height="15" fill="rgb(206,181,1)" fg:x="788" fg:w="4"/><text x="63.1391%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.0487%" y="293" width="0.1596%" height="15" fill="rgb(232,218,10)" fg:x="790" fg:w="2"/><text x="63.2987%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.0487%" y="277" width="0.1596%" height="15" fill="rgb(244,222,51)" fg:x="790" fg:w="2"/><text x="63.2987%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0487%" y="261" width="0.1596%" height="15" fill="rgb(252,215,16)" fg:x="790" fg:w="2"/><text x="63.2987%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.0487%" y="245" width="0.1596%" height="15" fill="rgb(212,130,13)" fg:x="790" fg:w="2"/><text x="63.2987%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.0487%" y="229" width="0.1596%" height="15" fill="rgb(227,103,37)" fg:x="790" fg:w="2"/><text x="63.2987%" y="239.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="63.1285%" y="213" width="0.0798%" height="15" fill="rgb(249,48,15)" fg:x="791" fg:w="1"/><text x="63.3785%" y="223.50"></text></g><g><title>plugins_core::tools::occupied_by (17 samples, 1.36%)</title><rect x="62.0112%" y="453" width="1.3567%" height="15" fill="rgb(225,96,9)" fg:x="777" fg:w="17"/><text x="62.2612%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (11 samples, 0.88%)</title><rect x="62.4900%" y="437" width="0.8779%" height="15" fill="rgb(213,81,41)" fg:x="783" fg:w="11"/><text x="62.7400%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="62.5698%" y="421" width="0.7981%" height="15" fill="rgb(230,15,12)" fg:x="784" fg:w="10"/><text x="62.8198%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.2083%" y="405" width="0.1596%" height="15" fill="rgb(218,106,37)" fg:x="792" fg:w="2"/><text x="63.4583%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.2083%" y="389" width="0.1596%" height="15" fill="rgb(223,172,47)" fg:x="792" fg:w="2"/><text x="63.4583%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="63.2881%" y="373" width="0.0798%" height="15" fill="rgb(246,180,49)" fg:x="793" fg:w="1"/><text x="63.5381%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.2881%" y="357" width="0.0798%" height="15" fill="rgb(231,63,37)" fg:x="793" fg:w="1"/><text x="63.5381%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="63.2881%" y="341" width="0.0798%" height="15" fill="rgb(235,70,40)" fg:x="793" fg:w="1"/><text x="63.5381%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.2881%" y="325" width="0.0798%" height="15" fill="rgb(250,54,26)" fg:x="793" fg:w="1"/><text x="63.5381%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.2881%" y="309" width="0.0798%" height="15" fill="rgb(214,190,1)" fg:x="793" fg:w="1"/><text x="63.5381%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (58 samples, 4.63%)</title><rect x="58.8188%" y="469" width="4.6289%" height="15" fill="rgb(212,40,35)" fg:x="737" fg:w="58"/><text x="59.0688%" y="479.50">plugi..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="63.3679%" y="453" width="0.0798%" height="15" fill="rgb(239,183,47)" fg:x="794" fg:w="1"/><text x="63.6179%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="63.3679%" y="437" width="0.0798%" height="15" fill="rgb(211,171,49)" fg:x="794" fg:w="1"/><text x="63.6179%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.3679%" y="421" width="0.0798%" height="15" fill="rgb(249,186,27)" fg:x="794" fg:w="1"/><text x="63.6179%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.3679%" y="405" width="0.0798%" height="15" fill="rgb(223,23,48)" fg:x="794" fg:w="1"/><text x="63.6179%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3679%" y="389" width="0.0798%" height="15" fill="rgb(209,203,21)" fg:x="794" fg:w="1"/><text x="63.6179%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3679%" y="373" width="0.0798%" height="15" fill="rgb(229,33,27)" fg:x="794" fg:w="1"/><text x="63.6179%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4477%" y="453" width="0.0798%" height="15" fill="rgb(207,8,53)" fg:x="795" fg:w="1"/><text x="63.6977%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4477%" y="437" width="0.0798%" height="15" fill="rgb(221,42,0)" fg:x="795" fg:w="1"/><text x="63.6977%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4477%" y="421" width="0.0798%" height="15" fill="rgb(223,115,3)" fg:x="795" fg:w="1"/><text x="63.6977%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4477%" y="405" width="0.0798%" height="15" fill="rgb(239,35,26)" fg:x="795" fg:w="1"/><text x="63.6977%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4477%" y="389" width="0.0798%" height="15" fill="rgb(233,22,9)" fg:x="795" fg:w="1"/><text x="63.6977%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4477%" y="373" width="0.0798%" height="15" fill="rgb(236,221,48)" fg:x="795" fg:w="1"/><text x="63.6977%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4477%" y="357" width="0.0798%" height="15" fill="rgb(235,52,30)" fg:x="795" fg:w="1"/><text x="63.6977%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.4477%" y="341" width="0.0798%" height="15" fill="rgb(238,133,51)" fg:x="795" fg:w="1"/><text x="63.6977%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.4477%" y="325" width="0.0798%" height="15" fill="rgb(213,122,23)" fg:x="795" fg:w="1"/><text x="63.6977%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.4477%" y="309" width="0.0798%" height="15" fill="rgb(225,8,15)" fg:x="795" fg:w="1"/><text x="63.6977%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.4477%" y="293" width="0.0798%" height="15" fill="rgb(219,126,35)" fg:x="795" fg:w="1"/><text x="63.6977%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4477%" y="277" width="0.0798%" height="15" fill="rgb(246,113,21)" fg:x="795" fg:w="1"/><text x="63.6977%" y="287.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.5275%" y="405" width="0.0798%" height="15" fill="rgb(241,193,32)" fg:x="796" fg:w="1"/><text x="63.7775%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="63.5275%" y="437" width="0.1596%" height="15" fill="rgb(218,99,18)" fg:x="796" fg:w="2"/><text x="63.7775%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="63.5275%" y="421" width="0.1596%" height="15" fill="rgb(225,114,4)" fg:x="796" fg:w="2"/><text x="63.7775%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.6073%" y="405" width="0.0798%" height="15" fill="rgb(235,0,15)" fg:x="797" fg:w="1"/><text x="63.8573%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.6073%" y="389" width="0.0798%" height="15" fill="rgb(247,45,27)" fg:x="797" fg:w="1"/><text x="63.8573%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6073%" y="373" width="0.0798%" height="15" fill="rgb(249,88,53)" fg:x="797" fg:w="1"/><text x="63.8573%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="63.6073%" y="357" width="0.0798%" height="15" fill="rgb(207,58,45)" fg:x="797" fg:w="1"/><text x="63.8573%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6073%" y="341" width="0.0798%" height="15" fill="rgb(216,7,11)" fg:x="797" fg:w="1"/><text x="63.8573%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.6073%" y="325" width="0.0798%" height="15" fill="rgb(230,40,33)" fg:x="797" fg:w="1"/><text x="63.8573%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.6073%" y="309" width="0.0798%" height="15" fill="rgb(232,24,46)" fg:x="797" fg:w="1"/><text x="63.8573%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6872%" y="421" width="0.0798%" height="15" fill="rgb(219,222,45)" fg:x="798" fg:w="1"/><text x="63.9372%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (63 samples, 5.03%)</title><rect x="58.8188%" y="501" width="5.0279%" height="15" fill="rgb(229,85,44)" fg:x="737" fg:w="63"/><text x="59.0688%" y="511.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (63 samples, 5.03%)</title><rect x="58.8188%" y="485" width="5.0279%" height="15" fill="rgb(243,71,36)" fg:x="737" fg:w="63"/><text x="59.0688%" y="495.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="63.4477%" y="469" width="0.3990%" height="15" fill="rgb(230,203,45)" fg:x="795" fg:w="5"/><text x="63.6977%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="63.5275%" y="453" width="0.3192%" height="15" fill="rgb(224,77,49)" fg:x="796" fg:w="4"/><text x="63.7775%" y="463.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="63.6872%" y="437" width="0.1596%" height="15" fill="rgb(210,186,47)" fg:x="798" fg:w="2"/><text x="63.9372%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="63.7670%" y="421" width="0.0798%" height="15" fill="rgb(232,146,10)" fg:x="799" fg:w="1"/><text x="64.0170%" y="431.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.7670%" y="405" width="0.0798%" height="15" fill="rgb(236,185,51)" fg:x="799" fg:w="1"/><text x="64.0170%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.7670%" y="389" width="0.0798%" height="15" fill="rgb(223,206,43)" fg:x="799" fg:w="1"/><text x="64.0170%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="63.7670%" y="373" width="0.0798%" height="15" fill="rgb(227,212,9)" fg:x="799" fg:w="1"/><text x="64.0170%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="63.7670%" y="357" width="0.0798%" height="15" fill="rgb(205,82,3)" fg:x="799" fg:w="1"/><text x="64.0170%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="63.8468%" y="485" width="0.0798%" height="15" fill="rgb(214,2,27)" fg:x="800" fg:w="1"/><text x="64.0968%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="63.8468%" y="469" width="0.0798%" height="15" fill="rgb(241,37,22)" fg:x="800" fg:w="1"/><text x="64.0968%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="63.8468%" y="453" width="0.0798%" height="15" fill="rgb(219,182,1)" fg:x="800" fg:w="1"/><text x="64.0968%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="63.8468%" y="437" width="0.0798%" height="15" fill="rgb(208,224,23)" fg:x="800" fg:w="1"/><text x="64.0968%" y="447.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="63.8468%" y="421" width="0.0798%" height="15" fill="rgb(219,121,32)" fg:x="800" fg:w="1"/><text x="64.0968%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="63.8468%" y="405" width="0.0798%" height="15" fill="rgb(253,13,40)" fg:x="800" fg:w="1"/><text x="64.0968%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="63.8468%" y="389" width="0.0798%" height="15" fill="rgb(233,6,28)" fg:x="800" fg:w="1"/><text x="64.0968%" y="399.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="63.9266%" y="485" width="0.1596%" height="15" fill="rgb(233,73,8)" fg:x="801" fg:w="2"/><text x="64.1766%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (2 samples, 0.16%)</title><rect x="63.9266%" y="469" width="0.1596%" height="15" fill="rgb(223,48,27)" fg:x="801" fg:w="2"/><text x="64.1766%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (1 samples, 0.08%)</title><rect x="64.0064%" y="453" width="0.0798%" height="15" fill="rgb(231,98,37)" fg:x="802" fg:w="1"/><text x="64.2564%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="64.0064%" y="437" width="0.0798%" height="15" fill="rgb(249,43,32)" fg:x="802" fg:w="1"/><text x="64.2564%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="64.0064%" y="421" width="0.0798%" height="15" fill="rgb(246,184,20)" fg:x="802" fg:w="1"/><text x="64.2564%" y="431.50"></text></g><g><title>plugins_core::library::actions::reply_ok (4 samples, 0.32%)</title><rect x="63.8468%" y="501" width="0.3192%" height="15" fill="rgb(251,216,0)" fg:x="800" fg:w="4"/><text x="64.0968%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="64.0862%" y="485" width="0.0798%" height="15" fill="rgb(238,41,42)" fg:x="803" fg:w="1"/><text x="64.3362%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.0862%" y="469" width="0.0798%" height="15" fill="rgb(227,224,50)" fg:x="803" fg:w="1"/><text x="64.3362%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="64.1660%" y="485" width="0.0798%" height="15" fill="rgb(237,189,18)" fg:x="804" fg:w="1"/><text x="64.4160%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.1660%" y="469" width="0.0798%" height="15" fill="rgb(238,108,6)" fg:x="804" fg:w="1"/><text x="64.4160%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.3256%" y="389" width="0.0798%" height="15" fill="rgb(214,197,53)" fg:x="806" fg:w="1"/><text x="64.5756%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3256%" y="373" width="0.0798%" height="15" fill="rgb(206,183,15)" fg:x="806" fg:w="1"/><text x="64.5756%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.4054%" y="389" width="0.0798%" height="15" fill="rgb(208,130,32)" fg:x="807" fg:w="1"/><text x="64.6554%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="64.2458%" y="453" width="0.3192%" height="15" fill="rgb(226,128,52)" fg:x="805" fg:w="4"/><text x="64.4958%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="64.2458%" y="437" width="0.3192%" height="15" fill="rgb(231,183,21)" fg:x="805" fg:w="4"/><text x="64.4958%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="64.2458%" y="421" width="0.3192%" height="15" fill="rgb(216,8,35)" fg:x="805" fg:w="4"/><text x="64.4958%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="64.2458%" y="405" width="0.3192%" height="15" fill="rgb(224,221,8)" fg:x="805" fg:w="4"/><text x="64.4958%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.4852%" y="389" width="0.0798%" height="15" fill="rgb(210,111,33)" fg:x="808" fg:w="1"/><text x="64.7352%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.4852%" y="373" width="0.0798%" height="15" fill="rgb(232,211,38)" fg:x="808" fg:w="1"/><text x="64.7352%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.4852%" y="357" width="0.0798%" height="15" fill="rgb(216,190,27)" fg:x="808" fg:w="1"/><text x="64.7352%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.4852%" y="341" width="0.0798%" height="15" fill="rgb(237,215,27)" fg:x="808" fg:w="1"/><text x="64.7352%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="64.5650%" y="437" width="0.0798%" height="15" fill="rgb(251,121,39)" fg:x="809" fg:w="1"/><text x="64.8150%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="64.2458%" y="485" width="0.4789%" height="15" fill="rgb(244,21,14)" fg:x="805" fg:w="6"/><text x="64.4958%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="64.2458%" y="469" width="0.4789%" height="15" fill="rgb(221,192,22)" fg:x="805" fg:w="6"/><text x="64.4958%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="64.5650%" y="453" width="0.1596%" height="15" fill="rgb(251,190,28)" fg:x="809" fg:w="2"/><text x="64.8150%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.6449%" y="437" width="0.0798%" height="15" fill="rgb(217,4,51)" fg:x="810" fg:w="1"/><text x="64.8949%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.6449%" y="421" width="0.0798%" height="15" fill="rgb(215,183,49)" fg:x="810" fg:w="1"/><text x="64.8949%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6449%" y="405" width="0.0798%" height="15" fill="rgb(249,28,49)" fg:x="810" fg:w="1"/><text x="64.8949%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.6449%" y="389" width="0.0798%" height="15" fill="rgb(214,42,20)" fg:x="810" fg:w="1"/><text x="64.8949%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6449%" y="373" width="0.0798%" height="15" fill="rgb(222,77,27)" fg:x="810" fg:w="1"/><text x="64.8949%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6449%" y="357" width="0.0798%" height="15" fill="rgb(252,198,32)" fg:x="810" fg:w="1"/><text x="64.8949%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.8045%" y="453" width="0.1596%" height="15" fill="rgb(207,140,50)" fg:x="812" fg:w="2"/><text x="65.0545%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.8045%" y="437" width="0.1596%" height="15" fill="rgb(251,170,16)" fg:x="812" fg:w="2"/><text x="65.0545%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8843%" y="421" width="0.0798%" height="15" fill="rgb(249,111,45)" fg:x="813" fg:w="1"/><text x="65.1343%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.8843%" y="405" width="0.0798%" height="15" fill="rgb(241,99,35)" fg:x="813" fg:w="1"/><text x="65.1343%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8843%" y="389" width="0.0798%" height="15" fill="rgb(216,188,17)" fg:x="813" fg:w="1"/><text x="65.1343%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.8843%" y="373" width="0.0798%" height="15" fill="rgb(254,209,53)" fg:x="813" fg:w="1"/><text x="65.1343%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.8843%" y="357" width="0.0798%" height="15" fill="rgb(231,105,41)" fg:x="813" fg:w="1"/><text x="65.1343%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.8843%" y="341" width="0.0798%" height="15" fill="rgb(242,93,23)" fg:x="813" fg:w="1"/><text x="65.1343%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.8843%" y="325" width="0.0798%" height="15" fill="rgb(218,159,11)" fg:x="813" fg:w="1"/><text x="65.1343%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8843%" y="309" width="0.0798%" height="15" fill="rgb(209,90,32)" fg:x="813" fg:w="1"/><text x="65.1343%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.8843%" y="293" width="0.0798%" height="15" fill="rgb(253,118,46)" fg:x="813" fg:w="1"/><text x="65.1343%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="64.9641%" y="357" width="0.0798%" height="15" fill="rgb(219,121,2)" fg:x="814" fg:w="1"/><text x="65.2141%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="64.9641%" y="341" width="0.0798%" height="15" fill="rgb(207,57,47)" fg:x="814" fg:w="1"/><text x="65.2141%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.0439%" y="341" width="0.0798%" height="15" fill="rgb(235,113,43)" fg:x="815" fg:w="1"/><text x="65.2939%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.0439%" y="325" width="0.0798%" height="15" fill="rgb(238,30,50)" fg:x="815" fg:w="1"/><text x="65.2939%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1237%" y="309" width="0.0798%" height="15" fill="rgb(237,47,29)" fg:x="816" fg:w="1"/><text x="65.3737%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1237%" y="293" width="0.0798%" height="15" fill="rgb(245,102,24)" fg:x="816" fg:w="1"/><text x="65.3737%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.1237%" y="325" width="0.1596%" height="15" fill="rgb(245,152,9)" fg:x="816" fg:w="2"/><text x="65.3737%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2035%" y="309" width="0.0798%" height="15" fill="rgb(223,213,17)" fg:x="817" fg:w="1"/><text x="65.4535%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.2035%" y="293" width="0.0798%" height="15" fill="rgb(241,164,4)" fg:x="817" fg:w="1"/><text x="65.4535%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.2035%" y="277" width="0.0798%" height="15" fill="rgb(205,209,31)" fg:x="817" fg:w="1"/><text x="65.4535%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.2035%" y="261" width="0.0798%" height="15" fill="rgb(248,173,2)" fg:x="817" fg:w="1"/><text x="65.4535%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.2035%" y="245" width="0.0798%" height="15" fill="rgb(207,67,32)" fg:x="817" fg:w="1"/><text x="65.4535%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.2035%" y="229" width="0.0798%" height="15" fill="rgb(239,109,13)" fg:x="817" fg:w="1"/><text x="65.4535%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.2035%" y="213" width="0.0798%" height="15" fill="rgb(233,123,24)" fg:x="817" fg:w="1"/><text x="65.4535%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.2035%" y="197" width="0.0798%" height="15" fill="rgb(232,120,19)" fg:x="817" fg:w="1"/><text x="65.4535%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.2035%" y="181" width="0.0798%" height="15" fill="rgb(225,17,50)" fg:x="817" fg:w="1"/><text x="65.4535%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.2035%" y="165" width="0.0798%" height="15" fill="rgb(239,216,13)" fg:x="817" fg:w="1"/><text x="65.4535%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.2035%" y="149" width="0.0798%" height="15" fill="rgb(232,213,26)" fg:x="817" fg:w="1"/><text x="65.4535%" y="159.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="65.2833%" y="325" width="0.0798%" height="15" fill="rgb(244,59,39)" fg:x="818" fg:w="1"/><text x="65.5333%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="65.2833%" y="309" width="0.0798%" height="15" fill="rgb(234,61,35)" fg:x="818" fg:w="1"/><text x="65.5333%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (7 samples, 0.56%)</title><rect x="64.9641%" y="453" width="0.5587%" height="15" fill="rgb(245,94,24)" fg:x="814" fg:w="7"/><text x="65.2141%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="64.9641%" y="437" width="0.5587%" height="15" fill="rgb(238,190,44)" fg:x="814" fg:w="7"/><text x="65.2141%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="64.9641%" y="421" width="0.5587%" height="15" fill="rgb(205,145,25)" fg:x="814" fg:w="7"/><text x="65.2141%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="64.9641%" y="405" width="0.5587%" height="15" fill="rgb(229,158,41)" fg:x="814" fg:w="7"/><text x="65.2141%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (7 samples, 0.56%)</title><rect x="64.9641%" y="389" width="0.5587%" height="15" fill="rgb(224,121,5)" fg:x="814" fg:w="7"/><text x="65.2141%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="64.9641%" y="373" width="0.5587%" height="15" fill="rgb(238,168,35)" fg:x="814" fg:w="7"/><text x="65.2141%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="65.0439%" y="357" width="0.4789%" height="15" fill="rgb(231,11,42)" fg:x="815" fg:w="6"/><text x="65.2939%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="65.1237%" y="341" width="0.3990%" height="15" fill="rgb(241,105,19)" fg:x="816" fg:w="5"/><text x="65.3737%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3631%" y="325" width="0.1596%" height="15" fill="rgb(253,210,20)" fg:x="819" fg:w="2"/><text x="65.6131%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3631%" y="309" width="0.1596%" height="15" fill="rgb(215,72,52)" fg:x="819" fg:w="2"/><text x="65.6131%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3631%" y="293" width="0.1596%" height="15" fill="rgb(223,225,30)" fg:x="819" fg:w="2"/><text x="65.6131%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3631%" y="277" width="0.1596%" height="15" fill="rgb(220,138,44)" fg:x="819" fg:w="2"/><text x="65.6131%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="65.3631%" y="261" width="0.1596%" height="15" fill="rgb(206,128,12)" fg:x="819" fg:w="2"/><text x="65.6131%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3631%" y="245" width="0.1596%" height="15" fill="rgb(245,194,0)" fg:x="819" fg:w="2"/><text x="65.6131%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.4429%" y="229" width="0.0798%" height="15" fill="rgb(235,175,41)" fg:x="820" fg:w="1"/><text x="65.6929%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="65.5227%" y="453" width="0.0798%" height="15" fill="rgb(216,15,48)" fg:x="821" fg:w="1"/><text x="65.7727%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.5227%" y="437" width="0.0798%" height="15" fill="rgb(223,179,5)" fg:x="821" fg:w="1"/><text x="65.7727%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5227%" y="421" width="0.0798%" height="15" fill="rgb(220,80,15)" fg:x="821" fg:w="1"/><text x="65.7727%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.96%)</title><rect x="64.7247%" y="485" width="0.9577%" height="15" fill="rgb(228,20,30)" fg:x="811" fg:w="12"/><text x="64.9747%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="64.7247%" y="469" width="0.9577%" height="15" fill="rgb(229,194,27)" fg:x="811" fg:w="12"/><text x="64.9747%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.6026%" y="453" width="0.0798%" height="15" fill="rgb(238,202,32)" fg:x="822" fg:w="1"/><text x="65.8526%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.6026%" y="437" width="0.0798%" height="15" fill="rgb(207,82,27)" fg:x="822" fg:w="1"/><text x="65.8526%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="65.6026%" y="421" width="0.0798%" height="15" fill="rgb(246,122,46)" fg:x="822" fg:w="1"/><text x="65.8526%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="65.6026%" y="405" width="0.0798%" height="15" fill="rgb(220,101,26)" fg:x="822" fg:w="1"/><text x="65.8526%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="65.6026%" y="389" width="0.0798%" height="15" fill="rgb(251,63,9)" fg:x="822" fg:w="1"/><text x="65.8526%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.6026%" y="373" width="0.0798%" height="15" fill="rgb(235,186,5)" fg:x="822" fg:w="1"/><text x="65.8526%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.6026%" y="357" width="0.0798%" height="15" fill="rgb(241,139,37)" fg:x="822" fg:w="1"/><text x="65.8526%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8420%" y="453" width="0.0798%" height="15" fill="rgb(252,177,51)" fg:x="825" fg:w="1"/><text x="66.0920%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8420%" y="437" width="0.0798%" height="15" fill="rgb(214,131,22)" fg:x="825" fg:w="1"/><text x="66.0920%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0016%" y="373" width="0.0798%" height="15" fill="rgb(246,53,19)" fg:x="827" fg:w="1"/><text x="66.2516%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="65.6824%" y="485" width="0.4789%" height="15" fill="rgb(231,158,27)" fg:x="823" fg:w="6"/><text x="65.9324%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="65.6824%" y="469" width="0.4789%" height="15" fill="rgb(226,166,46)" fg:x="823" fg:w="6"/><text x="65.9324%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (3 samples, 0.24%)</title><rect x="65.9218%" y="453" width="0.2394%" height="15" fill="rgb(218,178,26)" fg:x="826" fg:w="3"/><text x="66.1718%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="65.9218%" y="437" width="0.2394%" height="15" fill="rgb(206,25,39)" fg:x="826" fg:w="3"/><text x="66.1718%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.0016%" y="421" width="0.1596%" height="15" fill="rgb(232,218,41)" fg:x="827" fg:w="2"/><text x="66.2516%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="66.0016%" y="405" width="0.1596%" height="15" fill="rgb(212,151,15)" fg:x="827" fg:w="2"/><text x="66.2516%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.0016%" y="389" width="0.1596%" height="15" fill="rgb(213,49,22)" fg:x="827" fg:w="2"/><text x="66.2516%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.0814%" y="373" width="0.0798%" height="15" fill="rgb(247,116,21)" fg:x="828" fg:w="1"/><text x="66.3314%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="66.1612%" y="437" width="0.1596%" height="15" fill="rgb(248,98,14)" fg:x="829" fg:w="2"/><text x="66.4112%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="66.2410%" y="421" width="0.0798%" height="15" fill="rgb(247,72,6)" fg:x="830" fg:w="1"/><text x="66.4910%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="66.3208%" y="421" width="0.0798%" height="15" fill="rgb(213,9,22)" fg:x="831" fg:w="1"/><text x="66.5708%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4006%" y="405" width="0.0798%" height="15" fill="rgb(213,122,30)" fg:x="832" fg:w="1"/><text x="66.6506%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4006%" y="389" width="0.0798%" height="15" fill="rgb(244,11,30)" fg:x="832" fg:w="1"/><text x="66.6506%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.4006%" y="373" width="0.0798%" height="15" fill="rgb(236,102,26)" fg:x="832" fg:w="1"/><text x="66.6506%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4006%" y="357" width="0.0798%" height="15" fill="rgb(231,166,37)" fg:x="832" fg:w="1"/><text x="66.6506%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4006%" y="341" width="0.0798%" height="15" fill="rgb(220,224,29)" fg:x="832" fg:w="1"/><text x="66.6506%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4006%" y="325" width="0.0798%" height="15" fill="rgb(227,30,40)" fg:x="832" fg:w="1"/><text x="66.6506%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4006%" y="309" width="0.0798%" height="15" fill="rgb(235,8,36)" fg:x="832" fg:w="1"/><text x="66.6506%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4006%" y="293" width="0.0798%" height="15" fill="rgb(232,175,19)" fg:x="832" fg:w="1"/><text x="66.6506%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4006%" y="277" width="0.0798%" height="15" fill="rgb(217,114,10)" fg:x="832" fg:w="1"/><text x="66.6506%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4006%" y="261" width="0.0798%" height="15" fill="rgb(214,112,41)" fg:x="832" fg:w="1"/><text x="66.6506%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4006%" y="245" width="0.0798%" height="15" fill="rgb(226,69,34)" fg:x="832" fg:w="1"/><text x="66.6506%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4006%" y="229" width="0.0798%" height="15" fill="rgb(219,23,46)" fg:x="832" fg:w="1"/><text x="66.6506%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4006%" y="213" width="0.0798%" height="15" fill="rgb(233,3,8)" fg:x="832" fg:w="1"/><text x="66.6506%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4006%" y="197" width="0.0798%" height="15" fill="rgb(251,34,42)" fg:x="832" fg:w="1"/><text x="66.6506%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4006%" y="181" width="0.0798%" height="15" fill="rgb(215,84,9)" fg:x="832" fg:w="1"/><text x="66.6506%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4804%" y="373" width="0.0798%" height="15" fill="rgb(231,75,52)" fg:x="833" fg:w="1"/><text x="66.7304%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="66.1612%" y="485" width="0.4789%" height="15" fill="rgb(247,201,31)" fg:x="829" fg:w="6"/><text x="66.4112%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="66.1612%" y="469" width="0.4789%" height="15" fill="rgb(215,171,37)" fg:x="829" fg:w="6"/><text x="66.4112%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="66.1612%" y="453" width="0.4789%" height="15" fill="rgb(208,208,44)" fg:x="829" fg:w="6"/><text x="66.4112%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="66.3208%" y="437" width="0.3192%" height="15" fill="rgb(247,146,54)" fg:x="831" fg:w="4"/><text x="66.5708%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="66.4006%" y="421" width="0.2394%" height="15" fill="rgb(209,0,40)" fg:x="832" fg:w="3"/><text x="66.6506%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.4804%" y="405" width="0.1596%" height="15" fill="rgb(221,59,4)" fg:x="833" fg:w="2"/><text x="66.7304%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.4804%" y="389" width="0.1596%" height="15" fill="rgb(227,153,47)" fg:x="833" fg:w="2"/><text x="66.7304%" y="399.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="66.5603%" y="373" width="0.0798%" height="15" fill="rgb(253,225,10)" fg:x="834" fg:w="1"/><text x="66.8103%" y="383.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="66.6401%" y="405" width="0.0798%" height="15" fill="rgb(237,201,24)" fg:x="835" fg:w="1"/><text x="66.8901%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="66.6401%" y="485" width="0.1596%" height="15" fill="rgb(238,23,27)" fg:x="835" fg:w="2"/><text x="66.8901%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="66.6401%" y="469" width="0.1596%" height="15" fill="rgb(236,54,50)" fg:x="835" fg:w="2"/><text x="66.8901%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="66.6401%" y="453" width="0.1596%" height="15" fill="rgb(216,106,0)" fg:x="835" fg:w="2"/><text x="66.8901%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (2 samples, 0.16%)</title><rect x="66.6401%" y="437" width="0.1596%" height="15" fill="rgb(234,179,35)" fg:x="835" fg:w="2"/><text x="66.8901%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="66.6401%" y="421" width="0.1596%" height="15" fill="rgb(210,35,8)" fg:x="835" fg:w="2"/><text x="66.8901%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="66.7199%" y="405" width="0.0798%" height="15" fill="rgb(238,144,16)" fg:x="836" fg:w="1"/><text x="66.9699%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.7199%" y="389" width="0.0798%" height="15" fill="rgb(244,54,7)" fg:x="836" fg:w="1"/><text x="66.9699%" y="399.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8795%" y="437" width="0.0798%" height="15" fill="rgb(233,225,40)" fg:x="838" fg:w="1"/><text x="67.1295%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8795%" y="421" width="0.0798%" height="15" fill="rgb(249,227,23)" fg:x="838" fg:w="1"/><text x="67.1295%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="66.8795%" y="405" width="0.0798%" height="15" fill="rgb(215,42,44)" fg:x="838" fg:w="1"/><text x="67.1295%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8795%" y="389" width="0.0798%" height="15" fill="rgb(220,145,40)" fg:x="838" fg:w="1"/><text x="67.1295%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.8795%" y="373" width="0.0798%" height="15" fill="rgb(228,218,40)" fg:x="838" fg:w="1"/><text x="67.1295%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.8795%" y="357" width="0.0798%" height="15" fill="rgb(217,52,54)" fg:x="838" fg:w="1"/><text x="67.1295%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.8795%" y="341" width="0.0798%" height="15" fill="rgb(223,90,22)" fg:x="838" fg:w="1"/><text x="67.1295%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.8795%" y="325" width="0.0798%" height="15" fill="rgb(232,114,35)" fg:x="838" fg:w="1"/><text x="67.1295%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="66.8795%" y="309" width="0.0798%" height="15" fill="rgb(227,223,50)" fg:x="838" fg:w="1"/><text x="67.1295%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="66.8795%" y="293" width="0.0798%" height="15" fill="rgb(249,175,7)" fg:x="838" fg:w="1"/><text x="67.1295%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="66.9593%" y="437" width="0.0798%" height="15" fill="rgb(249,173,15)" fg:x="839" fg:w="1"/><text x="67.2093%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.9593%" y="421" width="0.0798%" height="15" fill="rgb(240,131,6)" fg:x="839" fg:w="1"/><text x="67.2093%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.9593%" y="405" width="0.0798%" height="15" fill="rgb(246,117,16)" fg:x="839" fg:w="1"/><text x="67.2093%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9593%" y="389" width="0.0798%" height="15" fill="rgb(209,32,16)" fg:x="839" fg:w="1"/><text x="67.2093%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1189%" y="341" width="0.0798%" height="15" fill="rgb(207,45,44)" fg:x="841" fg:w="1"/><text x="67.3689%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="67.1987%" y="341" width="0.0798%" height="15" fill="rgb(210,66,3)" fg:x="842" fg:w="1"/><text x="67.4487%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.1987%" y="325" width="0.0798%" height="15" fill="rgb(246,133,30)" fg:x="842" fg:w="1"/><text x="67.4487%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.1987%" y="309" width="0.0798%" height="15" fill="rgb(224,37,17)" fg:x="842" fg:w="1"/><text x="67.4487%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.1987%" y="293" width="0.0798%" height="15" fill="rgb(237,218,18)" fg:x="842" fg:w="1"/><text x="67.4487%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="67.0391%" y="373" width="0.3192%" height="15" fill="rgb(240,57,8)" fg:x="840" fg:w="4"/><text x="67.2891%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.0391%" y="357" width="0.3192%" height="15" fill="rgb(231,51,38)" fg:x="840" fg:w="4"/><text x="67.2891%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.2785%" y="341" width="0.0798%" height="15" fill="rgb(230,89,50)" fg:x="843" fg:w="1"/><text x="67.5285%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.2785%" y="325" width="0.0798%" height="15" fill="rgb(234,103,34)" fg:x="843" fg:w="1"/><text x="67.5285%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2785%" y="309" width="0.0798%" height="15" fill="rgb(220,45,48)" fg:x="843" fg:w="1"/><text x="67.5285%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="67.4381%" y="341" width="0.1596%" height="15" fill="rgb(250,210,3)" fg:x="845" fg:w="2"/><text x="67.6881%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.4381%" y="325" width="0.1596%" height="15" fill="rgb(210,118,12)" fg:x="845" fg:w="2"/><text x="67.6881%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.4381%" y="309" width="0.1596%" height="15" fill="rgb(238,154,21)" fg:x="845" fg:w="2"/><text x="67.6881%" y="319.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="67.4381%" y="293" width="0.1596%" height="15" fill="rgb(227,220,4)" fg:x="845" fg:w="2"/><text x="67.6881%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.5978%" y="277" width="0.0798%" height="15" fill="rgb(207,179,27)" fg:x="847" fg:w="1"/><text x="67.8478%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (11 samples, 0.88%)</title><rect x="66.8795%" y="469" width="0.8779%" height="15" fill="rgb(240,111,30)" fg:x="838" fg:w="11"/><text x="67.1295%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="66.8795%" y="453" width="0.8779%" height="15" fill="rgb(251,29,1)" fg:x="838" fg:w="11"/><text x="67.1295%" y="463.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (9 samples, 0.72%)</title><rect x="67.0391%" y="437" width="0.7183%" height="15" fill="rgb(224,141,39)" fg:x="840" fg:w="9"/><text x="67.2891%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="67.0391%" y="421" width="0.7183%" height="15" fill="rgb(207,98,26)" fg:x="840" fg:w="9"/><text x="67.2891%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (9 samples, 0.72%)</title><rect x="67.0391%" y="405" width="0.7183%" height="15" fill="rgb(221,37,6)" fg:x="840" fg:w="9"/><text x="67.2891%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="67.0391%" y="389" width="0.7183%" height="15" fill="rgb(217,32,44)" fg:x="840" fg:w="9"/><text x="67.2891%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="67.3583%" y="373" width="0.3990%" height="15" fill="rgb(253,149,2)" fg:x="844" fg:w="5"/><text x="67.6083%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.4381%" y="357" width="0.3192%" height="15" fill="rgb(220,165,39)" fg:x="845" fg:w="4"/><text x="67.6881%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.5978%" y="341" width="0.1596%" height="15" fill="rgb(235,33,48)" fg:x="847" fg:w="2"/><text x="67.8478%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.5978%" y="325" width="0.1596%" height="15" fill="rgb(221,89,6)" fg:x="847" fg:w="2"/><text x="67.8478%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.5978%" y="309" width="0.1596%" height="15" fill="rgb(215,214,6)" fg:x="847" fg:w="2"/><text x="67.8478%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.5978%" y="293" width="0.1596%" height="15" fill="rgb(241,1,30)" fg:x="847" fg:w="2"/><text x="67.8478%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.6776%" y="277" width="0.0798%" height="15" fill="rgb(211,140,32)" fg:x="848" fg:w="1"/><text x="67.9276%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.6776%" y="261" width="0.0798%" height="15" fill="rgb(232,48,21)" fg:x="848" fg:w="1"/><text x="67.9276%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7574%" y="405" width="0.0798%" height="15" fill="rgb(252,217,9)" fg:x="849" fg:w="1"/><text x="68.0074%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="67.7574%" y="453" width="0.1596%" height="15" fill="rgb(206,123,34)" fg:x="849" fg:w="2"/><text x="68.0074%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.7574%" y="437" width="0.1596%" height="15" fill="rgb(245,161,38)" fg:x="849" fg:w="2"/><text x="68.0074%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.7574%" y="421" width="0.1596%" height="15" fill="rgb(233,205,7)" fg:x="849" fg:w="2"/><text x="68.0074%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.8372%" y="405" width="0.0798%" height="15" fill="rgb(217,119,18)" fg:x="850" fg:w="1"/><text x="68.0872%" y="415.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (131 samples, 10.45%)</title><rect x="57.5419%" y="517" width="10.4549%" height="15" fill="rgb(252,126,3)" fg:x="721" fg:w="131"/><text x="57.7919%" y="527.50">&lt;plugins_core::..</text></g><g><title>plugins_core::location::change_location (48 samples, 3.83%)</title><rect x="64.1660%" y="501" width="3.8308%" height="15" fill="rgb(252,188,15)" fg:x="804" fg:w="48"/><text x="64.4160%" y="511.50">plug..</text></g><g><title>plugins_core::location::Location::set (15 samples, 1.20%)</title><rect x="66.7997%" y="485" width="1.1971%" height="15" fill="rgb(228,1,48)" fg:x="837" fg:w="15"/><text x="67.0497%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="67.7574%" y="469" width="0.2394%" height="15" fill="rgb(205,187,8)" fg:x="849" fg:w="3"/><text x="68.0074%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="67.9170%" y="453" width="0.0798%" height="15" fill="rgb(205,105,50)" fg:x="851" fg:w="1"/><text x="68.1670%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="67.9170%" y="437" width="0.0798%" height="15" fill="rgb(211,31,46)" fg:x="851" fg:w="1"/><text x="68.1670%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (334 samples, 26.66%)</title><rect x="41.4206%" y="709" width="26.6560%" height="15" fill="rgb(213,126,5)" fg:x="519" fg:w="334"/><text x="41.6706%" y="719.50">&lt;engine::session::Session as kernel::action..</text></g><g><title>kernel::plugins::mw::apply_middleware (334 samples, 26.66%)</title><rect x="41.4206%" y="693" width="26.6560%" height="15" fill="rgb(231,87,9)" fg:x="519" fg:w="334"/><text x="41.6706%" y="703.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (334 samples, 26.66%)</title><rect x="41.4206%" y="677" width="26.6560%" height="15" fill="rgb(219,224,20)" fg:x="519" fg:w="334"/><text x="41.6706%" y="687.50">kernel::plugins::mw::MiddlewareNext::handle</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (334 samples, 26.66%)</title><rect x="41.4206%" y="661" width="26.6560%" height="15" fill="rgb(230,84,21)" fg:x="519" fg:w="334"/><text x="41.6706%" y="671.50">&lt;engine::session::ExpandSurroundingsMiddlew..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (283 samples, 22.59%)</title><rect x="45.4908%" y="645" width="22.5858%" height="15" fill="rgb(224,169,42)" fg:x="570" fg:w="283"/><text x="45.7408%" y="655.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (282 samples, 22.51%)</title><rect x="45.5706%" y="629" width="22.5060%" height="15" fill="rgb(227,182,13)" fg:x="571" fg:w="282"/><text x="45.8206%" y="639.50">&lt;plugins_dynlib::DynamicMiddleware a..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (282 samples, 22.51%)</title><rect x="45.5706%" y="613" width="22.5060%" height="15" fill="rgb(249,57,41)" fg:x="571" fg:w="282"/><text x="45.8206%" y="623.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (282 samples, 22.51%)</title><rect x="45.5706%" y="597" width="22.5060%" height="15" fill="rgb(214,93,52)" fg:x="571" fg:w="282"/><text x="45.8206%" y="607.50">core::ops::function::FnOnce::call_on..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (282 samples, 22.51%)</title><rect x="45.5706%" y="581" width="22.5060%" height="15" fill="rgb(229,161,34)" fg:x="571" fg:w="282"/><text x="45.8206%" y="591.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (282 samples, 22.51%)</title><rect x="45.5706%" y="565" width="22.5060%" height="15" fill="rgb(227,193,17)" fg:x="571" fg:w="282"/><text x="45.8206%" y="575.50">core::ops::function::FnOnce::call_on..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (282 samples, 22.51%)</title><rect x="45.5706%" y="549" width="22.5060%" height="15" fill="rgb(242,164,46)" fg:x="571" fg:w="282"/><text x="45.8206%" y="559.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (281 samples, 22.43%)</title><rect x="45.6504%" y="533" width="22.4262%" height="15" fill="rgb(242,142,47)" fg:x="572" fg:w="281"/><text x="45.9004%" y="543.50">&lt;engine::session::state::State as ke..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9968%" y="517" width="0.0798%" height="15" fill="rgb(208,23,18)" fg:x="852" fg:w="1"/><text x="68.2468%" y="527.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="68.0766%" y="693" width="0.1596%" height="15" fill="rgb(219,54,38)" fg:x="853" fg:w="2"/><text x="68.3266%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="68.2362%" y="581" width="0.0798%" height="15" fill="rgb(206,97,35)" fg:x="855" fg:w="1"/><text x="68.4862%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.3958%" y="517" width="0.0798%" height="15" fill="rgb(208,76,8)" fg:x="857" fg:w="1"/><text x="68.6458%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="68.3958%" y="501" width="0.0798%" height="15" fill="rgb(220,92,28)" fg:x="857" fg:w="1"/><text x="68.6458%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.3958%" y="533" width="0.2394%" height="15" fill="rgb(209,158,39)" fg:x="857" fg:w="3"/><text x="68.6458%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="68.4757%" y="517" width="0.1596%" height="15" fill="rgb(238,175,9)" fg:x="858" fg:w="2"/><text x="68.7257%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.5555%" y="501" width="0.0798%" height="15" fill="rgb(240,116,17)" fg:x="859" fg:w="1"/><text x="68.8055%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.5555%" y="485" width="0.0798%" height="15" fill="rgb(208,7,2)" fg:x="859" fg:w="1"/><text x="68.8055%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="68.5555%" y="469" width="0.0798%" height="15" fill="rgb(252,52,4)" fg:x="859" fg:w="1"/><text x="68.8055%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="68.5555%" y="453" width="0.0798%" height="15" fill="rgb(222,68,34)" fg:x="859" fg:w="1"/><text x="68.8055%" y="463.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="68.2362%" y="661" width="0.4789%" height="15" fill="rgb(242,154,35)" fg:x="855" fg:w="6"/><text x="68.4862%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="68.2362%" y="645" width="0.4789%" height="15" fill="rgb(210,125,54)" fg:x="855" fg:w="6"/><text x="68.4862%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.2362%" y="629" width="0.4789%" height="15" fill="rgb(247,121,18)" fg:x="855" fg:w="6"/><text x="68.4862%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="68.2362%" y="613" width="0.4789%" height="15" fill="rgb(223,48,51)" fg:x="855" fg:w="6"/><text x="68.4862%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="68.2362%" y="597" width="0.4789%" height="15" fill="rgb(211,156,48)" fg:x="855" fg:w="6"/><text x="68.4862%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="68.3160%" y="581" width="0.3990%" height="15" fill="rgb(236,56,31)" fg:x="856" fg:w="5"/><text x="68.5660%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="68.3958%" y="565" width="0.3192%" height="15" fill="rgb(247,157,52)" fg:x="857" fg:w="4"/><text x="68.6458%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.3958%" y="549" width="0.3192%" height="15" fill="rgb(244,121,39)" fg:x="857" fg:w="4"/><text x="68.6458%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.6353%" y="533" width="0.0798%" height="15" fill="rgb(239,4,40)" fg:x="860" fg:w="1"/><text x="68.8853%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.6353%" y="517" width="0.0798%" height="15" fill="rgb(213,204,45)" fg:x="860" fg:w="1"/><text x="68.8853%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7151%" y="629" width="0.0798%" height="15" fill="rgb(242,107,0)" fg:x="861" fg:w="1"/><text x="68.9651%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.7949%" y="597" width="0.0798%" height="15" fill="rgb(215,152,25)" fg:x="862" fg:w="1"/><text x="69.0449%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7949%" y="581" width="0.0798%" height="15" fill="rgb(233,151,6)" fg:x="862" fg:w="1"/><text x="69.0449%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="68.8747%" y="549" width="0.0798%" height="15" fill="rgb(206,126,44)" fg:x="863" fg:w="1"/><text x="69.1247%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.9545%" y="549" width="0.0798%" height="15" fill="rgb(209,145,15)" fg:x="864" fg:w="1"/><text x="69.2045%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.9545%" y="533" width="0.0798%" height="15" fill="rgb(235,214,8)" fg:x="864" fg:w="1"/><text x="69.2045%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="68.9545%" y="517" width="0.0798%" height="15" fill="rgb(216,140,51)" fg:x="864" fg:w="1"/><text x="69.2045%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="68.9545%" y="501" width="0.0798%" height="15" fill="rgb(213,83,34)" fg:x="864" fg:w="1"/><text x="69.2045%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="68.9545%" y="485" width="0.0798%" height="15" fill="rgb(218,186,44)" fg:x="864" fg:w="1"/><text x="69.2045%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="68.8747%" y="581" width="0.2394%" height="15" fill="rgb(225,147,10)" fg:x="863" fg:w="3"/><text x="69.1247%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="68.8747%" y="565" width="0.2394%" height="15" fill="rgb(209,214,20)" fg:x="863" fg:w="3"/><text x="69.1247%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.0343%" y="549" width="0.0798%" height="15" fill="rgb(252,61,32)" fg:x="865" fg:w="1"/><text x="69.2843%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.96%)</title><rect x="68.2362%" y="677" width="0.9577%" height="15" fill="rgb(237,204,10)" fg:x="855" fg:w="12"/><text x="68.4862%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="68.7151%" y="661" width="0.4789%" height="15" fill="rgb(246,118,16)" fg:x="861" fg:w="6"/><text x="68.9651%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="68.7151%" y="645" width="0.4789%" height="15" fill="rgb(214,50,9)" fg:x="861" fg:w="6"/><text x="68.9651%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="68.7949%" y="629" width="0.3990%" height="15" fill="rgb(212,41,1)" fg:x="862" fg:w="5"/><text x="69.0449%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="68.7949%" y="613" width="0.3990%" height="15" fill="rgb(228,172,32)" fg:x="862" fg:w="5"/><text x="69.0449%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="68.8747%" y="597" width="0.3192%" height="15" fill="rgb(231,85,38)" fg:x="863" fg:w="4"/><text x="69.1247%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1141%" y="581" width="0.0798%" height="15" fill="rgb(223,120,31)" fg:x="866" fg:w="1"/><text x="69.3641%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1141%" y="565" width="0.0798%" height="15" fill="rgb(254,174,9)" fg:x="866" fg:w="1"/><text x="69.3641%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="69.1141%" y="549" width="0.0798%" height="15" fill="rgb(243,197,0)" fg:x="866" fg:w="1"/><text x="69.3641%" y="559.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.1141%" y="533" width="0.0798%" height="15" fill="rgb(226,186,17)" fg:x="866" fg:w="1"/><text x="69.3641%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.1141%" y="517" width="0.0798%" height="15" fill="rgb(229,38,38)" fg:x="866" fg:w="1"/><text x="69.3641%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.1141%" y="501" width="0.0798%" height="15" fill="rgb(238,82,14)" fg:x="866" fg:w="1"/><text x="69.3641%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="69.1141%" y="485" width="0.0798%" height="15" fill="rgb(230,154,54)" fg:x="866" fg:w="1"/><text x="69.3641%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.1141%" y="469" width="0.0798%" height="15" fill="rgb(243,84,17)" fg:x="866" fg:w="1"/><text x="69.3641%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1939%" y="645" width="0.0798%" height="15" fill="rgb(226,41,37)" fg:x="867" fg:w="1"/><text x="69.4439%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1939%" y="629" width="0.0798%" height="15" fill="rgb(219,20,18)" fg:x="867" fg:w="1"/><text x="69.4439%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.1939%" y="613" width="0.0798%" height="15" fill="rgb(243,173,39)" fg:x="867" fg:w="1"/><text x="69.4439%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1939%" y="597" width="0.0798%" height="15" fill="rgb(245,79,20)" fg:x="867" fg:w="1"/><text x="69.4439%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1939%" y="581" width="0.0798%" height="15" fill="rgb(229,101,45)" fg:x="867" fg:w="1"/><text x="69.4439%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.1939%" y="565" width="0.0798%" height="15" fill="rgb(215,123,52)" fg:x="867" fg:w="1"/><text x="69.4439%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.1939%" y="549" width="0.0798%" height="15" fill="rgb(215,11,33)" fg:x="867" fg:w="1"/><text x="69.4439%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.1939%" y="533" width="0.0798%" height="15" fill="rgb(245,105,20)" fg:x="867" fg:w="1"/><text x="69.4439%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1939%" y="517" width="0.0798%" height="15" fill="rgb(231,132,30)" fg:x="867" fg:w="1"/><text x="69.4439%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1939%" y="501" width="0.0798%" height="15" fill="rgb(224,62,21)" fg:x="867" fg:w="1"/><text x="69.4439%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.1939%" y="485" width="0.0798%" height="15" fill="rgb(209,221,38)" fg:x="867" fg:w="1"/><text x="69.4439%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.1939%" y="469" width="0.0798%" height="15" fill="rgb(229,200,30)" fg:x="867" fg:w="1"/><text x="69.4439%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.1939%" y="453" width="0.0798%" height="15" fill="rgb(237,142,41)" fg:x="867" fg:w="1"/><text x="69.4439%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.1939%" y="437" width="0.0798%" height="15" fill="rgb(238,37,22)" fg:x="867" fg:w="1"/><text x="69.4439%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1939%" y="421" width="0.0798%" height="15" fill="rgb(234,182,17)" fg:x="867" fg:w="1"/><text x="69.4439%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (17 samples, 1.36%)</title><rect x="68.0766%" y="709" width="1.3567%" height="15" fill="rgb(237,58,48)" fg:x="853" fg:w="17"/><text x="68.3266%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (15 samples, 1.20%)</title><rect x="68.2362%" y="693" width="1.1971%" height="15" fill="rgb(226,112,37)" fg:x="855" fg:w="15"/><text x="68.4862%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="69.1939%" y="677" width="0.2394%" height="15" fill="rgb(230,201,20)" fg:x="867" fg:w="3"/><text x="69.4439%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.1939%" y="661" width="0.2394%" height="15" fill="rgb(252,95,39)" fg:x="867" fg:w="3"/><text x="69.4439%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="69.2737%" y="645" width="0.1596%" height="15" fill="rgb(240,150,33)" fg:x="868" fg:w="2"/><text x="69.5237%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.2737%" y="629" width="0.1596%" height="15" fill="rgb(208,202,37)" fg:x="868" fg:w="2"/><text x="69.5237%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="69.3536%" y="613" width="0.0798%" height="15" fill="rgb(251,37,12)" fg:x="869" fg:w="1"/><text x="69.6036%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.3536%" y="597" width="0.0798%" height="15" fill="rgb(247,150,26)" fg:x="869" fg:w="1"/><text x="69.6036%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="69.3536%" y="581" width="0.0798%" height="15" fill="rgb(232,28,8)" fg:x="869" fg:w="1"/><text x="69.6036%" y="591.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.32%)</title><rect x="69.4334%" y="709" width="0.3192%" height="15" fill="rgb(226,121,34)" fg:x="870" fg:w="4"/><text x="69.6834%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="69.4334%" y="693" width="0.3192%" height="15" fill="rgb(237,23,13)" fg:x="870" fg:w="4"/><text x="69.6834%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="69.5930%" y="677" width="0.1596%" height="15" fill="rgb(214,42,29)" fg:x="872" fg:w="2"/><text x="69.8430%" y="687.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="69.5930%" y="661" width="0.1596%" height="15" fill="rgb(246,204,29)" fg:x="872" fg:w="2"/><text x="69.8430%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="69.5930%" y="645" width="0.1596%" height="15" fill="rgb(242,28,40)" fg:x="872" fg:w="2"/><text x="69.8430%" y="655.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="69.6728%" y="629" width="0.0798%" height="15" fill="rgb(243,64,49)" fg:x="873" fg:w="1"/><text x="69.9228%" y="639.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="69.6728%" y="613" width="0.0798%" height="15" fill="rgb(226,93,13)" fg:x="873" fg:w="1"/><text x="69.9228%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.7526%" y="709" width="0.0798%" height="15" fill="rgb(241,113,26)" fg:x="874" fg:w="1"/><text x="70.0026%" y="719.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="69.8324%" y="709" width="0.0798%" height="15" fill="rgb(209,209,0)" fg:x="875" fg:w="1"/><text x="70.0824%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="69.9122%" y="693" width="0.0798%" height="15" fill="rgb(251,183,50)" fg:x="876" fg:w="1"/><text x="70.1622%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="69.9122%" y="677" width="0.0798%" height="15" fill="rgb(248,24,43)" fg:x="876" fg:w="1"/><text x="70.1622%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9920%" y="661" width="0.0798%" height="15" fill="rgb(218,102,9)" fg:x="877" fg:w="1"/><text x="70.2420%" y="671.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="69.9122%" y="709" width="0.3192%" height="15" fill="rgb(249,209,39)" fg:x="876" fg:w="4"/><text x="70.1622%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="69.9920%" y="693" width="0.2394%" height="15" fill="rgb(210,37,6)" fg:x="877" fg:w="3"/><text x="70.2420%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="69.9920%" y="677" width="0.2394%" height="15" fill="rgb(212,99,4)" fg:x="877" fg:w="3"/><text x="70.2420%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.0718%" y="661" width="0.1596%" height="15" fill="rgb(253,59,46)" fg:x="878" fg:w="2"/><text x="70.3218%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.0718%" y="645" width="0.1596%" height="15" fill="rgb(229,96,9)" fg:x="878" fg:w="2"/><text x="70.3218%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.1516%" y="629" width="0.0798%" height="15" fill="rgb(207,103,49)" fg:x="879" fg:w="1"/><text x="70.4016%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1516%" y="613" width="0.0798%" height="15" fill="rgb(250,226,20)" fg:x="879" fg:w="1"/><text x="70.4016%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2314%" y="693" width="0.0798%" height="15" fill="rgb(238,220,11)" fg:x="880" fg:w="1"/><text x="70.4814%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2314%" y="677" width="0.0798%" height="15" fill="rgb(236,74,15)" fg:x="880" fg:w="1"/><text x="70.4814%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.2314%" y="661" width="0.0798%" height="15" fill="rgb(218,43,40)" fg:x="880" fg:w="1"/><text x="70.4814%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.2314%" y="645" width="0.0798%" height="15" fill="rgb(245,206,37)" fg:x="880" fg:w="1"/><text x="70.4814%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.2314%" y="629" width="0.0798%" height="15" fill="rgb(206,30,3)" fg:x="880" fg:w="1"/><text x="70.4814%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2314%" y="613" width="0.0798%" height="15" fill="rgb(211,29,35)" fg:x="880" fg:w="1"/><text x="70.4814%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2314%" y="597" width="0.0798%" height="15" fill="rgb(218,49,50)" fg:x="880" fg:w="1"/><text x="70.4814%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.2314%" y="581" width="0.0798%" height="15" fill="rgb(211,114,30)" fg:x="880" fg:w="1"/><text x="70.4814%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.2314%" y="565" width="0.0798%" height="15" fill="rgb(238,70,33)" fg:x="880" fg:w="1"/><text x="70.4814%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.2314%" y="549" width="0.0798%" height="15" fill="rgb(238,141,50)" fg:x="880" fg:w="1"/><text x="70.4814%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.2314%" y="533" width="0.0798%" height="15" fill="rgb(205,69,6)" fg:x="880" fg:w="1"/><text x="70.4814%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2314%" y="517" width="0.0798%" height="15" fill="rgb(229,65,0)" fg:x="880" fg:w="1"/><text x="70.4814%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3113%" y="661" width="0.0798%" height="15" fill="rgb(211,3,37)" fg:x="881" fg:w="1"/><text x="70.5613%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.3113%" y="645" width="0.0798%" height="15" fill="rgb(223,196,42)" fg:x="881" fg:w="1"/><text x="70.5613%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.3113%" y="693" width="0.1596%" height="15" fill="rgb(227,191,15)" fg:x="881" fg:w="2"/><text x="70.5613%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="70.3113%" y="677" width="0.1596%" height="15" fill="rgb(229,210,53)" fg:x="881" fg:w="2"/><text x="70.5613%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.3911%" y="661" width="0.0798%" height="15" fill="rgb(250,203,10)" fg:x="882" fg:w="1"/><text x="70.6411%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3911%" y="645" width="0.0798%" height="15" fill="rgb(247,8,37)" fg:x="882" fg:w="1"/><text x="70.6411%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.3911%" y="629" width="0.0798%" height="15" fill="rgb(240,52,9)" fg:x="882" fg:w="1"/><text x="70.6411%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3911%" y="613" width="0.0798%" height="15" fill="rgb(243,100,52)" fg:x="882" fg:w="1"/><text x="70.6411%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.3911%" y="597" width="0.0798%" height="15" fill="rgb(224,149,30)" fg:x="882" fg:w="1"/><text x="70.6411%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3911%" y="581" width="0.0798%" height="15" fill="rgb(232,27,45)" fg:x="882" fg:w="1"/><text x="70.6411%" y="591.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="70.4709%" y="677" width="0.1596%" height="15" fill="rgb(242,161,36)" fg:x="883" fg:w="2"/><text x="70.7209%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="70.4709%" y="661" width="0.1596%" height="15" fill="rgb(235,223,32)" fg:x="883" fg:w="2"/><text x="70.7209%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.5507%" y="645" width="0.0798%" height="15" fill="rgb(242,78,19)" fg:x="884" fg:w="1"/><text x="70.8007%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.6305%" y="661" width="0.1596%" height="15" fill="rgb(233,157,47)" fg:x="885" fg:w="2"/><text x="70.8805%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7103%" y="645" width="0.0798%" height="15" fill="rgb(251,213,5)" fg:x="886" fg:w="1"/><text x="70.9603%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.7103%" y="629" width="0.0798%" height="15" fill="rgb(215,223,5)" fg:x="886" fg:w="1"/><text x="70.9603%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7103%" y="613" width="0.0798%" height="15" fill="rgb(230,14,7)" fg:x="886" fg:w="1"/><text x="70.9603%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7103%" y="597" width="0.0798%" height="15" fill="rgb(249,179,20)" fg:x="886" fg:w="1"/><text x="70.9603%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7103%" y="581" width="0.0798%" height="15" fill="rgb(230,204,44)" fg:x="886" fg:w="1"/><text x="70.9603%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7103%" y="565" width="0.0798%" height="15" fill="rgb(233,229,46)" fg:x="886" fg:w="1"/><text x="70.9603%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7103%" y="549" width="0.0798%" height="15" fill="rgb(210,154,35)" fg:x="886" fg:w="1"/><text x="70.9603%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7103%" y="533" width="0.0798%" height="15" fill="rgb(220,178,16)" fg:x="886" fg:w="1"/><text x="70.9603%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7103%" y="517" width="0.0798%" height="15" fill="rgb(243,0,53)" fg:x="886" fg:w="1"/><text x="70.9603%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7103%" y="501" width="0.0798%" height="15" fill="rgb(223,221,47)" fg:x="886" fg:w="1"/><text x="70.9603%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7103%" y="485" width="0.0798%" height="15" fill="rgb(233,82,15)" fg:x="886" fg:w="1"/><text x="70.9603%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7103%" y="469" width="0.0798%" height="15" fill="rgb(222,8,38)" fg:x="886" fg:w="1"/><text x="70.9603%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7103%" y="453" width="0.0798%" height="15" fill="rgb(241,28,48)" fg:x="886" fg:w="1"/><text x="70.9603%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7103%" y="437" width="0.0798%" height="15" fill="rgb(209,227,15)" fg:x="886" fg:w="1"/><text x="70.9603%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::new (10 samples, 0.80%)</title><rect x="70.2314%" y="709" width="0.7981%" height="15" fill="rgb(234,189,48)" fg:x="880" fg:w="10"/><text x="70.4814%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="70.4709%" y="693" width="0.5587%" height="15" fill="rgb(212,27,44)" fg:x="883" fg:w="7"/><text x="70.7209%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="70.6305%" y="677" width="0.3990%" height="15" fill="rgb(249,55,42)" fg:x="885" fg:w="5"/><text x="70.8805%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="70.7901%" y="661" width="0.2394%" height="15" fill="rgb(215,211,28)" fg:x="887" fg:w="3"/><text x="71.0401%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.7901%" y="645" width="0.2394%" height="15" fill="rgb(221,155,16)" fg:x="887" fg:w="3"/><text x="71.0401%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.8699%" y="629" width="0.1596%" height="15" fill="rgb(247,106,30)" fg:x="888" fg:w="2"/><text x="71.1199%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.8699%" y="613" width="0.1596%" height="15" fill="rgb(230,76,31)" fg:x="888" fg:w="2"/><text x="71.1199%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.9497%" y="597" width="0.0798%" height="15" fill="rgb(222,6,48)" fg:x="889" fg:w="1"/><text x="71.1997%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.9497%" y="581" width="0.0798%" height="15" fill="rgb(228,82,3)" fg:x="889" fg:w="1"/><text x="71.1997%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.9497%" y="565" width="0.0798%" height="15" fill="rgb(245,208,52)" fg:x="889" fg:w="1"/><text x="71.1997%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="71.0295%" y="597" width="0.2394%" height="15" fill="rgb(218,65,17)" fg:x="890" fg:w="3"/><text x="71.2795%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="71.1093%" y="581" width="0.1596%" height="15" fill="rgb(242,63,26)" fg:x="891" fg:w="2"/><text x="71.3593%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2690%" y="597" width="0.0798%" height="15" fill="rgb(224,119,39)" fg:x="893" fg:w="1"/><text x="71.5190%" y="607.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="71.0295%" y="645" width="0.5587%" height="15" fill="rgb(229,106,3)" fg:x="890" fg:w="7"/><text x="71.2795%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="71.0295%" y="629" width="0.5587%" height="15" fill="rgb(248,6,33)" fg:x="890" fg:w="7"/><text x="71.2795%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="71.0295%" y="613" width="0.5587%" height="15" fill="rgb(226,3,49)" fg:x="890" fg:w="7"/><text x="71.2795%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="71.3488%" y="597" width="0.2394%" height="15" fill="rgb(228,142,14)" fg:x="894" fg:w="3"/><text x="71.5988%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="71.4286%" y="581" width="0.1596%" height="15" fill="rgb(241,141,54)" fg:x="895" fg:w="2"/><text x="71.6786%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.5084%" y="565" width="0.0798%" height="15" fill="rgb(252,17,50)" fg:x="896" fg:w="1"/><text x="71.7584%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.5084%" y="549" width="0.0798%" height="15" fill="rgb(221,120,48)" fg:x="896" fg:w="1"/><text x="71.7584%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (8 samples, 0.64%)</title><rect x="71.0295%" y="661" width="0.6385%" height="15" fill="rgb(229,171,33)" fg:x="890" fg:w="8"/><text x="71.2795%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.5882%" y="645" width="0.0798%" height="15" fill="rgb(236,207,21)" fg:x="897" fg:w="1"/><text x="71.8382%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5882%" y="629" width="0.0798%" height="15" fill="rgb(218,93,35)" fg:x="897" fg:w="1"/><text x="71.8382%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.5882%" y="613" width="0.0798%" height="15" fill="rgb(207,101,8)" fg:x="897" fg:w="1"/><text x="71.8382%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5882%" y="597" width="0.0798%" height="15" fill="rgb(237,67,44)" fg:x="897" fg:w="1"/><text x="71.8382%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.5882%" y="581" width="0.0798%" height="15" fill="rgb(236,218,7)" fg:x="897" fg:w="1"/><text x="71.8382%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5882%" y="565" width="0.0798%" height="15" fill="rgb(252,207,10)" fg:x="897" fg:w="1"/><text x="71.8382%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="71.5882%" y="549" width="0.0798%" height="15" fill="rgb(221,175,6)" fg:x="897" fg:w="1"/><text x="71.8382%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="71.5882%" y="533" width="0.0798%" height="15" fill="rgb(230,105,53)" fg:x="897" fg:w="1"/><text x="71.8382%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5882%" y="517" width="0.0798%" height="15" fill="rgb(253,83,6)" fg:x="897" fg:w="1"/><text x="71.8382%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.6680%" y="661" width="0.0798%" height="15" fill="rgb(206,198,44)" fg:x="898" fg:w="1"/><text x="71.9180%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.6680%" y="645" width="0.0798%" height="15" fill="rgb(206,164,29)" fg:x="898" fg:w="1"/><text x="71.9180%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7478%" y="645" width="0.0798%" height="15" fill="rgb(215,2,50)" fg:x="899" fg:w="1"/><text x="71.9978%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7478%" y="629" width="0.0798%" height="15" fill="rgb(246,127,18)" fg:x="899" fg:w="1"/><text x="71.9978%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.7478%" y="613" width="0.0798%" height="15" fill="rgb(232,6,21)" fg:x="899" fg:w="1"/><text x="71.9978%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.7478%" y="597" width="0.0798%" height="15" fill="rgb(224,154,1)" fg:x="899" fg:w="1"/><text x="71.9978%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.7478%" y="581" width="0.0798%" height="15" fill="rgb(248,135,32)" fg:x="899" fg:w="1"/><text x="71.9978%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7478%" y="565" width="0.0798%" height="15" fill="rgb(253,129,38)" fg:x="899" fg:w="1"/><text x="71.9978%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7478%" y="549" width="0.0798%" height="15" fill="rgb(214,110,11)" fg:x="899" fg:w="1"/><text x="71.9978%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.7478%" y="533" width="0.0798%" height="15" fill="rgb(246,150,22)" fg:x="899" fg:w="1"/><text x="71.9978%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.7478%" y="517" width="0.0798%" height="15" fill="rgb(219,170,39)" fg:x="899" fg:w="1"/><text x="71.9978%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.7478%" y="501" width="0.0798%" height="15" fill="rgb(221,143,52)" fg:x="899" fg:w="1"/><text x="71.9978%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.7478%" y="485" width="0.0798%" height="15" fill="rgb(237,122,11)" fg:x="899" fg:w="1"/><text x="71.9978%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="71.7478%" y="469" width="0.0798%" height="15" fill="rgb(217,114,13)" fg:x="899" fg:w="1"/><text x="71.9978%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="71.7478%" y="453" width="0.0798%" height="15" fill="rgb(218,184,28)" fg:x="899" fg:w="1"/><text x="71.9978%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.96%)</title><rect x="71.0295%" y="677" width="0.9577%" height="15" fill="rgb(237,33,22)" fg:x="890" fg:w="12"/><text x="71.2795%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="71.7478%" y="661" width="0.2394%" height="15" fill="rgb(224,56,42)" fg:x="899" fg:w="3"/><text x="71.9978%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.8276%" y="645" width="0.1596%" height="15" fill="rgb(216,138,53)" fg:x="900" fg:w="2"/><text x="72.0776%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="71.8276%" y="629" width="0.1596%" height="15" fill="rgb(233,229,40)" fg:x="900" fg:w="2"/><text x="72.0776%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="71.9074%" y="613" width="0.0798%" height="15" fill="rgb(252,105,0)" fg:x="901" fg:w="1"/><text x="72.1574%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.04%)</title><rect x="71.0295%" y="693" width="1.0375%" height="15" fill="rgb(212,75,24)" fg:x="890" fg:w="13"/><text x="71.2795%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="71.9872%" y="677" width="0.0798%" height="15" fill="rgb(235,168,50)" fg:x="902" fg:w="1"/><text x="72.2372%" y="687.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="72.0670%" y="693" width="0.0798%" height="15" fill="rgb(247,204,12)" fg:x="903" fg:w="1"/><text x="72.3170%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0670%" y="677" width="0.0798%" height="15" fill="rgb(250,203,27)" fg:x="903" fg:w="1"/><text x="72.3170%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="72.1468%" y="677" width="0.1596%" height="15" fill="rgb(221,215,2)" fg:x="904" fg:w="2"/><text x="72.3968%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="72.1468%" y="661" width="0.1596%" height="15" fill="rgb(242,163,47)" fg:x="904" fg:w="2"/><text x="72.3968%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="72.2267%" y="645" width="0.0798%" height="15" fill="rgb(237,136,50)" fg:x="905" fg:w="1"/><text x="72.4767%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.2267%" y="629" width="0.0798%" height="15" fill="rgb(217,201,47)" fg:x="905" fg:w="1"/><text x="72.4767%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.3065%" y="613" width="0.0798%" height="15" fill="rgb(212,38,47)" fg:x="906" fg:w="1"/><text x="72.5565%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.3065%" y="597" width="0.0798%" height="15" fill="rgb(254,113,41)" fg:x="906" fg:w="1"/><text x="72.5565%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.3065%" y="629" width="0.2394%" height="15" fill="rgb(236,7,22)" fg:x="906" fg:w="3"/><text x="72.5565%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.3863%" y="613" width="0.1596%" height="15" fill="rgb(235,81,25)" fg:x="907" fg:w="2"/><text x="72.6363%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="72.3065%" y="645" width="0.3192%" height="15" fill="rgb(216,41,31)" fg:x="906" fg:w="4"/><text x="72.5565%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5459%" y="629" width="0.0798%" height="15" fill="rgb(249,219,15)" fg:x="909" fg:w="1"/><text x="72.7959%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.5459%" y="613" width="0.0798%" height="15" fill="rgb(248,201,3)" fg:x="909" fg:w="1"/><text x="72.7959%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.5459%" y="597" width="0.0798%" height="15" fill="rgb(249,141,18)" fg:x="909" fg:w="1"/><text x="72.7959%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.5459%" y="581" width="0.0798%" height="15" fill="rgb(222,32,39)" fg:x="909" fg:w="1"/><text x="72.7959%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.5459%" y="565" width="0.0798%" height="15" fill="rgb(237,139,51)" fg:x="909" fg:w="1"/><text x="72.7959%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5459%" y="549" width="0.0798%" height="15" fill="rgb(218,210,4)" fg:x="909" fg:w="1"/><text x="72.7959%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.5459%" y="533" width="0.0798%" height="15" fill="rgb(217,199,13)" fg:x="909" fg:w="1"/><text x="72.7959%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.5459%" y="517" width="0.0798%" height="15" fill="rgb(222,118,25)" fg:x="909" fg:w="1"/><text x="72.7959%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.5459%" y="501" width="0.0798%" height="15" fill="rgb(241,70,28)" fg:x="909" fg:w="1"/><text x="72.7959%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.5459%" y="485" width="0.0798%" height="15" fill="rgb(205,51,41)" fg:x="909" fg:w="1"/><text x="72.7959%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.5459%" y="469" width="0.0798%" height="15" fill="rgb(237,165,49)" fg:x="909" fg:w="1"/><text x="72.7959%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.5459%" y="453" width="0.0798%" height="15" fill="rgb(213,10,51)" fg:x="909" fg:w="1"/><text x="72.7959%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="72.3065%" y="677" width="0.3990%" height="15" fill="rgb(245,89,32)" fg:x="906" fg:w="5"/><text x="72.5565%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.3065%" y="661" width="0.3990%" height="15" fill="rgb(249,81,54)" fg:x="906" fg:w="5"/><text x="72.5565%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.6257%" y="645" width="0.0798%" height="15" fill="rgb(223,134,14)" fg:x="910" fg:w="1"/><text x="72.8757%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6257%" y="629" width="0.0798%" height="15" fill="rgb(233,62,37)" fg:x="910" fg:w="1"/><text x="72.8757%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.6257%" y="613" width="0.0798%" height="15" fill="rgb(219,117,42)" fg:x="910" fg:w="1"/><text x="72.8757%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6257%" y="597" width="0.0798%" height="15" fill="rgb(248,40,28)" fg:x="910" fg:w="1"/><text x="72.8757%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="72.6257%" y="581" width="0.0798%" height="15" fill="rgb(246,66,35)" fg:x="910" fg:w="1"/><text x="72.8757%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.6257%" y="565" width="0.0798%" height="15" fill="rgb(250,229,22)" fg:x="910" fg:w="1"/><text x="72.8757%" y="575.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (394 samples, 31.44%)</title><rect x="41.3408%" y="741" width="31.4445%" height="15" fill="rgb(213,89,18)" fg:x="518" fg:w="394"/><text x="41.5908%" y="751.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::session::Session::evaluate_and_perform_as (394 samples, 31.44%)</title><rect x="41.3408%" y="725" width="31.4445%" height="15" fill="rgb(213,122,9)" fg:x="518" fg:w="394"/><text x="41.5908%" y="735.50">engine::session::Session::evaluate_and_perform_as</text></g><g><title>kernel::model::entry::EntryResolver::world (22 samples, 1.76%)</title><rect x="71.0295%" y="709" width="1.7558%" height="15" fill="rgb(220,213,48)" fg:x="890" fg:w="22"/><text x="71.2795%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="72.1468%" y="693" width="0.6385%" height="15" fill="rgb(244,109,54)" fg:x="904" fg:w="8"/><text x="72.3968%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.7055%" y="677" width="0.0798%" height="15" fill="rgb(254,104,49)" fg:x="911" fg:w="1"/><text x="72.9555%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.7055%" y="661" width="0.0798%" height="15" fill="rgb(219,28,32)" fg:x="911" fg:w="1"/><text x="72.9555%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.7055%" y="645" width="0.0798%" height="15" fill="rgb(249,153,33)" fg:x="911" fg:w="1"/><text x="72.9555%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="72.7055%" y="629" width="0.0798%" height="15" fill="rgb(230,116,21)" fg:x="911" fg:w="1"/><text x="72.9555%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (914 samples, 72.94%)</title><rect x="0.0000%" y="789" width="72.9449%" height="15" fill="rgb(247,110,3)" fg:x="0" fg:w="914"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (914 samples, 72.94%)</title><rect x="0.0000%" y="773" width="72.9449%" height="15" fill="rgb(227,128,3)" fg:x="0" fg:w="914"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (914 samples, 72.94%)</title><rect x="0.0000%" y="757" width="72.9449%" height="15" fill="rgb(208,21,1)" fg:x="0" fg:w="914"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (2 samples, 0.16%)</title><rect x="72.7853%" y="741" width="0.1596%" height="15" fill="rgb(225,24,20)" fg:x="912" fg:w="2"/><text x="73.0353%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="72.7853%" y="725" width="0.1596%" height="15" fill="rgb(250,159,24)" fg:x="912" fg:w="2"/><text x="73.0353%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="72.7853%" y="709" width="0.1596%" height="15" fill="rgb(214,30,53)" fg:x="912" fg:w="2"/><text x="73.0353%" y="719.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="72.7853%" y="693" width="0.1596%" height="15" fill="rgb(243,198,11)" fg:x="912" fg:w="2"/><text x="73.0353%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1844%" y="645" width="0.0798%" height="15" fill="rgb(232,33,1)" fg:x="917" fg:w="1"/><text x="73.4344%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2642%" y="645" width="0.0798%" height="15" fill="rgb(242,60,11)" fg:x="918" fg:w="1"/><text x="73.5142%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="73.1844%" y="661" width="0.3990%" height="15" fill="rgb(241,229,34)" fg:x="917" fg:w="5"/><text x="73.4344%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.3440%" y="645" width="0.2394%" height="15" fill="rgb(230,92,51)" fg:x="919" fg:w="3"/><text x="73.5940%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5036%" y="629" width="0.0798%" height="15" fill="rgb(212,209,8)" fg:x="921" fg:w="1"/><text x="73.7536%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.64%)</title><rect x="73.1045%" y="677" width="0.6385%" height="15" fill="rgb(241,55,35)" fg:x="916" fg:w="8"/><text x="73.3545%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.5834%" y="661" width="0.1596%" height="15" fill="rgb(208,187,52)" fg:x="922" fg:w="2"/><text x="73.8334%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="73.0247%" y="741" width="0.7981%" height="15" fill="rgb(251,110,17)" fg:x="915" fg:w="10"/><text x="73.2747%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.72%)</title><rect x="73.1045%" y="725" width="0.7183%" height="15" fill="rgb(246,225,54)" fg:x="916" fg:w="9"/><text x="73.3545%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="73.1045%" y="709" width="0.7183%" height="15" fill="rgb(220,109,6)" fg:x="916" fg:w="9"/><text x="73.3545%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="73.1045%" y="693" width="0.7183%" height="15" fill="rgb(228,56,50)" fg:x="916" fg:w="9"/><text x="73.3545%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7430%" y="677" width="0.0798%" height="15" fill="rgb(230,34,30)" fg:x="924" fg:w="1"/><text x="73.9930%" y="687.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="73.9026%" y="629" width="0.0798%" height="15" fill="rgb(205,28,42)" fg:x="926" fg:w="1"/><text x="74.1526%" y="639.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="73.9026%" y="613" width="0.0798%" height="15" fill="rgb(215,68,0)" fg:x="926" fg:w="1"/><text x="74.1526%" y="623.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="73.9026%" y="597" width="0.0798%" height="15" fill="rgb(206,91,47)" fg:x="926" fg:w="1"/><text x="74.1526%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="73.9026%" y="581" width="0.0798%" height="15" fill="rgb(241,159,43)" fg:x="926" fg:w="1"/><text x="74.1526%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="73.9026%" y="565" width="0.0798%" height="15" fill="rgb(232,191,38)" fg:x="926" fg:w="1"/><text x="74.1526%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="73.9026%" y="549" width="0.0798%" height="15" fill="rgb(212,180,41)" fg:x="926" fg:w="1"/><text x="74.1526%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.9026%" y="533" width="0.0798%" height="15" fill="rgb(236,134,49)" fg:x="926" fg:w="1"/><text x="74.1526%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.9026%" y="517" width="0.0798%" height="15" fill="rgb(221,83,26)" fg:x="926" fg:w="1"/><text x="74.1526%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.9026%" y="501" width="0.0798%" height="15" fill="rgb(215,87,39)" fg:x="926" fg:w="1"/><text x="74.1526%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.9026%" y="485" width="0.0798%" height="15" fill="rgb(242,28,29)" fg:x="926" fg:w="1"/><text x="74.1526%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.9026%" y="469" width="0.0798%" height="15" fill="rgb(212,219,47)" fg:x="926" fg:w="1"/><text x="74.1526%" y="479.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="73.9824%" y="613" width="0.0798%" height="15" fill="rgb(221,35,20)" fg:x="927" fg:w="1"/><text x="74.2324%" y="623.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="73.9824%" y="629" width="0.1596%" height="15" fill="rgb(234,144,13)" fg:x="927" fg:w="2"/><text x="74.2324%" y="639.50"></text></g><g><title>pthread_rwlock_unlock (1 samples, 0.08%)</title><rect x="74.0623%" y="613" width="0.0798%" height="15" fill="rgb(237,41,27)" fg:x="928" fg:w="1"/><text x="74.3123%" y="623.50"></text></g><g><title>libloading::safe::Library::new (13 samples, 1.04%)</title><rect x="73.9026%" y="645" width="1.0375%" height="15" fill="rgb(253,175,5)" fg:x="926" fg:w="13"/><text x="74.1526%" y="655.50"></text></g><g><title>dlopen (10 samples, 0.80%)</title><rect x="74.1421%" y="629" width="0.7981%" height="15" fill="rgb(235,210,51)" fg:x="929" fg:w="10"/><text x="74.3921%" y="639.50"></text></g><g><title>_dl_catch_error (10 samples, 0.80%)</title><rect x="74.1421%" y="613" width="0.7981%" height="15" fill="rgb(241,180,35)" fg:x="929" fg:w="10"/><text x="74.3921%" y="623.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.80%)</title><rect x="74.1421%" y="597" width="0.7981%" height="15" fill="rgb(219,45,16)" fg:x="929" fg:w="10"/><text x="74.3921%" y="607.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="74.2219%" y="581" width="0.7183%" height="15" fill="rgb(247,212,4)" fg:x="930" fg:w="9"/><text x="74.4719%" y="591.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="74.2219%" y="565" width="0.7183%" height="15" fill="rgb(224,211,1)" fg:x="930" fg:w="9"/><text x="74.4719%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.12%)</title><rect x="73.9026%" y="677" width="1.1173%" height="15" fill="rgb(210,193,36)" fg:x="926" fg:w="14"/><text x="74.1526%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (14 samples, 1.12%)</title><rect x="73.9026%" y="661" width="1.1173%" height="15" fill="rgb(215,121,20)" fg:x="926" fg:w="14"/><text x="74.1526%" y="671.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="74.9401%" y="645" width="0.0798%" height="15" fill="rgb(238,146,2)" fg:x="939" fg:w="1"/><text x="75.1901%" y="655.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="74.9401%" y="629" width="0.0798%" height="15" fill="rgb(254,123,45)" fg:x="939" fg:w="1"/><text x="75.1901%" y="639.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="74.9401%" y="613" width="0.0798%" height="15" fill="rgb(225,126,11)" fg:x="939" fg:w="1"/><text x="75.1901%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.0200%" y="661" width="0.0798%" height="15" fill="rgb(239,12,5)" fg:x="940" fg:w="1"/><text x="75.2700%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0200%" y="645" width="0.0798%" height="15" fill="rgb(241,207,14)" fg:x="940" fg:w="1"/><text x="75.2700%" y="655.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (17 samples, 1.36%)</title><rect x="73.8228%" y="741" width="1.3567%" height="15" fill="rgb(227,134,33)" fg:x="925" fg:w="17"/><text x="74.0728%" y="751.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (17 samples, 1.36%)</title><rect x="73.8228%" y="725" width="1.3567%" height="15" fill="rgb(221,40,52)" fg:x="925" fg:w="17"/><text x="74.0728%" y="735.50"></text></g><g><title>engine::session::Session::new (16 samples, 1.28%)</title><rect x="73.9026%" y="709" width="1.2769%" height="15" fill="rgb(206,93,8)" fg:x="926" fg:w="16"/><text x="74.1526%" y="719.50"></text></g><g><title>engine::session::Session::initialize (16 samples, 1.28%)</title><rect x="73.9026%" y="693" width="1.2769%" height="15" fill="rgb(242,160,22)" fg:x="926" fg:w="16"/><text x="74.1526%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="75.0200%" y="677" width="0.1596%" height="15" fill="rgb(232,204,40)" fg:x="940" fg:w="2"/><text x="75.2700%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="75.0998%" y="661" width="0.0798%" height="15" fill="rgb(247,210,47)" fg:x="941" fg:w="1"/><text x="75.3498%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.0998%" y="645" width="0.0798%" height="15" fill="rgb(211,91,7)" fg:x="941" fg:w="1"/><text x="75.3498%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.0998%" y="629" width="0.0798%" height="15" fill="rgb(252,160,34)" fg:x="941" fg:w="1"/><text x="75.3498%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.0998%" y="613" width="0.0798%" height="15" fill="rgb(220,34,39)" fg:x="941" fg:w="1"/><text x="75.3498%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.0998%" y="597" width="0.0798%" height="15" fill="rgb(247,49,38)" fg:x="941" fg:w="1"/><text x="75.3498%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="75.3392%" y="629" width="0.0798%" height="15" fill="rgb(228,175,44)" fg:x="944" fg:w="1"/><text x="75.5892%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.3392%" y="613" width="0.0798%" height="15" fill="rgb(218,214,32)" fg:x="944" fg:w="1"/><text x="75.5892%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.3392%" y="597" width="0.0798%" height="15" fill="rgb(213,50,12)" fg:x="944" fg:w="1"/><text x="75.5892%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="75.4190%" y="613" width="0.0798%" height="15" fill="rgb(219,35,41)" fg:x="945" fg:w="1"/><text x="75.6690%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.4190%" y="597" width="0.0798%" height="15" fill="rgb(219,18,38)" fg:x="945" fg:w="1"/><text x="75.6690%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.4190%" y="581" width="0.0798%" height="15" fill="rgb(223,217,6)" fg:x="945" fg:w="1"/><text x="75.6690%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.4190%" y="565" width="0.0798%" height="15" fill="rgb(208,193,35)" fg:x="945" fg:w="1"/><text x="75.6690%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="75.4988%" y="597" width="0.1596%" height="15" fill="rgb(254,212,54)" fg:x="946" fg:w="2"/><text x="75.7488%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="75.4988%" y="581" width="0.1596%" height="15" fill="rgb(205,10,2)" fg:x="946" fg:w="2"/><text x="75.7488%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="75.4988%" y="565" width="0.1596%" height="15" fill="rgb(230,133,29)" fg:x="946" fg:w="2"/><text x="75.7488%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.5786%" y="549" width="0.0798%" height="15" fill="rgb(226,14,15)" fg:x="947" fg:w="1"/><text x="75.8286%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6584%" y="597" width="0.0798%" height="15" fill="rgb(226,140,54)" fg:x="948" fg:w="1"/><text x="75.9084%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6584%" y="581" width="0.0798%" height="15" fill="rgb(250,47,41)" fg:x="948" fg:w="1"/><text x="75.9084%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6584%" y="565" width="0.0798%" height="15" fill="rgb(227,218,41)" fg:x="948" fg:w="1"/><text x="75.9084%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.6584%" y="549" width="0.0798%" height="15" fill="rgb(254,183,7)" fg:x="948" fg:w="1"/><text x="75.9084%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.6584%" y="533" width="0.0798%" height="15" fill="rgb(206,84,53)" fg:x="948" fg:w="1"/><text x="75.9084%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.6584%" y="517" width="0.0798%" height="15" fill="rgb(213,177,2)" fg:x="948" fg:w="1"/><text x="75.9084%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.6584%" y="501" width="0.0798%" height="15" fill="rgb(234,28,29)" fg:x="948" fg:w="1"/><text x="75.9084%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.6584%" y="485" width="0.0798%" height="15" fill="rgb(248,211,38)" fg:x="948" fg:w="1"/><text x="75.9084%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.6584%" y="469" width="0.0798%" height="15" fill="rgb(246,30,0)" fg:x="948" fg:w="1"/><text x="75.9084%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="75.4988%" y="613" width="0.3192%" height="15" fill="rgb(244,115,24)" fg:x="946" fg:w="4"/><text x="75.7488%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.7382%" y="597" width="0.0798%" height="15" fill="rgb(226,193,14)" fg:x="949" fg:w="1"/><text x="75.9882%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.7382%" y="581" width="0.0798%" height="15" fill="rgb(211,196,48)" fg:x="949" fg:w="1"/><text x="75.9882%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="75.7382%" y="565" width="0.0798%" height="15" fill="rgb(235,32,20)" fg:x="949" fg:w="1"/><text x="75.9882%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="75.4190%" y="629" width="0.4789%" height="15" fill="rgb(251,151,49)" fg:x="945" fg:w="6"/><text x="75.6690%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.8180%" y="613" width="0.0798%" height="15" fill="rgb(254,141,38)" fg:x="950" fg:w="1"/><text x="76.0680%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.8180%" y="597" width="0.0798%" height="15" fill="rgb(209,118,44)" fg:x="950" fg:w="1"/><text x="76.0680%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="75.3392%" y="645" width="0.6385%" height="15" fill="rgb(205,81,4)" fg:x="944" fg:w="8"/><text x="75.5892%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="75.8978%" y="629" width="0.0798%" height="15" fill="rgb(241,25,6)" fg:x="951" fg:w="1"/><text x="76.1478%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="75.8978%" y="613" width="0.0798%" height="15" fill="rgb(212,179,29)" fg:x="951" fg:w="1"/><text x="76.1478%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.8978%" y="597" width="0.0798%" height="15" fill="rgb(241,40,32)" fg:x="951" fg:w="1"/><text x="76.1478%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.8978%" y="581" width="0.0798%" height="15" fill="rgb(223,35,2)" fg:x="951" fg:w="1"/><text x="76.1478%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.8978%" y="565" width="0.0798%" height="15" fill="rgb(221,125,54)" fg:x="951" fg:w="1"/><text x="76.1478%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.8978%" y="549" width="0.0798%" height="15" fill="rgb(230,5,49)" fg:x="951" fg:w="1"/><text x="76.1478%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.9777%" y="613" width="0.0798%" height="15" fill="rgb(221,157,7)" fg:x="952" fg:w="1"/><text x="76.2277%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="75.9777%" y="645" width="0.2394%" height="15" fill="rgb(242,163,10)" fg:x="952" fg:w="3"/><text x="76.2277%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="75.9777%" y="629" width="0.2394%" height="15" fill="rgb(232,30,2)" fg:x="952" fg:w="3"/><text x="76.2277%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.0575%" y="613" width="0.1596%" height="15" fill="rgb(245,102,40)" fg:x="953" fg:w="2"/><text x="76.3075%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1373%" y="597" width="0.0798%" height="15" fill="rgb(242,10,41)" fg:x="954" fg:w="1"/><text x="76.3873%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2171%" y="597" width="0.0798%" height="15" fill="rgb(236,184,36)" fg:x="955" fg:w="1"/><text x="76.4671%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2171%" y="581" width="0.0798%" height="15" fill="rgb(247,147,48)" fg:x="955" fg:w="1"/><text x="76.4671%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.2171%" y="565" width="0.0798%" height="15" fill="rgb(226,166,2)" fg:x="955" fg:w="1"/><text x="76.4671%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="76.2969%" y="597" width="0.0798%" height="15" fill="rgb(251,196,7)" fg:x="956" fg:w="1"/><text x="76.5469%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.2969%" y="581" width="0.0798%" height="15" fill="rgb(241,40,13)" fg:x="956" fg:w="1"/><text x="76.5469%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="76.3767%" y="597" width="0.0798%" height="15" fill="rgb(254,4,12)" fg:x="957" fg:w="1"/><text x="76.6267%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.3767%" y="581" width="0.0798%" height="15" fill="rgb(244,139,49)" fg:x="957" fg:w="1"/><text x="76.6267%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3767%" y="565" width="0.0798%" height="15" fill="rgb(227,28,42)" fg:x="957" fg:w="1"/><text x="76.6267%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.4565%" y="565" width="0.0798%" height="15" fill="rgb(231,135,32)" fg:x="958" fg:w="1"/><text x="76.7065%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.4565%" y="549" width="0.0798%" height="15" fill="rgb(244,182,3)" fg:x="958" fg:w="1"/><text x="76.7065%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4565%" y="533" width="0.0798%" height="15" fill="rgb(247,46,19)" fg:x="958" fg:w="1"/><text x="76.7065%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="76.4565%" y="517" width="0.0798%" height="15" fill="rgb(251,179,10)" fg:x="958" fg:w="1"/><text x="76.7065%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="76.4565%" y="501" width="0.0798%" height="15" fill="rgb(229,222,18)" fg:x="958" fg:w="1"/><text x="76.7065%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="76.4565%" y="581" width="0.1596%" height="15" fill="rgb(251,107,20)" fg:x="958" fg:w="2"/><text x="76.7065%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.5363%" y="565" width="0.0798%" height="15" fill="rgb(233,193,19)" fg:x="959" fg:w="1"/><text x="76.7863%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.5363%" y="549" width="0.0798%" height="15" fill="rgb(229,146,53)" fg:x="959" fg:w="1"/><text x="76.7863%" y="559.50"></text></g><g><title>engine::session::Session::flush (18 samples, 1.44%)</title><rect x="75.2594%" y="725" width="1.4366%" height="15" fill="rgb(244,52,11)" fg:x="943" fg:w="18"/><text x="75.5094%" y="735.50"></text></g><g><title>engine::session::state::State::close (18 samples, 1.44%)</title><rect x="75.2594%" y="709" width="1.4366%" height="15" fill="rgb(245,211,46)" fg:x="943" fg:w="18"/><text x="75.5094%" y="719.50"></text></g><g><title>engine::session::state::State::flush_entities (18 samples, 1.44%)</title><rect x="75.2594%" y="693" width="1.4366%" height="15" fill="rgb(213,8,31)" fg:x="943" fg:w="18"/><text x="75.5094%" y="703.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (18 samples, 1.44%)</title><rect x="75.2594%" y="677" width="1.4366%" height="15" fill="rgb(205,101,39)" fg:x="943" fg:w="18"/><text x="75.5094%" y="687.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (18 samples, 1.44%)</title><rect x="75.2594%" y="661" width="1.4366%" height="15" fill="rgb(212,157,1)" fg:x="943" fg:w="18"/><text x="75.5094%" y="671.50"></text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="76.2171%" y="645" width="0.4789%" height="15" fill="rgb(232,30,46)" fg:x="955" fg:w="6"/><text x="76.4671%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="76.2171%" y="629" width="0.4789%" height="15" fill="rgb(216,201,6)" fg:x="955" fg:w="6"/><text x="76.4671%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="76.2171%" y="613" width="0.4789%" height="15" fill="rgb(209,18,6)" fg:x="955" fg:w="6"/><text x="76.4671%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="76.4565%" y="597" width="0.2394%" height="15" fill="rgb(219,138,3)" fg:x="958" fg:w="3"/><text x="76.7065%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6161%" y="581" width="0.0798%" height="15" fill="rgb(210,91,46)" fg:x="960" fg:w="1"/><text x="76.8661%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="76.6959%" y="677" width="0.0798%" height="15" fill="rgb(241,80,44)" fg:x="961" fg:w="1"/><text x="76.9459%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.6959%" y="661" width="0.0798%" height="15" fill="rgb(236,205,36)" fg:x="961" fg:w="1"/><text x="76.9459%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.6959%" y="645" width="0.0798%" height="15" fill="rgb(205,59,37)" fg:x="961" fg:w="1"/><text x="76.9459%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="76.7757%" y="677" width="0.0798%" height="15" fill="rgb(239,166,39)" fg:x="962" fg:w="1"/><text x="77.0257%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="76.7757%" y="661" width="0.0798%" height="15" fill="rgb(239,146,40)" fg:x="962" fg:w="1"/><text x="77.0257%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7757%" y="645" width="0.0798%" height="15" fill="rgb(231,11,52)" fg:x="962" fg:w="1"/><text x="77.0257%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7757%" y="629" width="0.0798%" height="15" fill="rgb(253,21,37)" fg:x="962" fg:w="1"/><text x="77.0257%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="76.7757%" y="613" width="0.0798%" height="15" fill="rgb(224,87,39)" fg:x="962" fg:w="1"/><text x="77.0257%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.8555%" y="677" width="0.0798%" height="15" fill="rgb(249,15,46)" fg:x="963" fg:w="1"/><text x="77.1055%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.8555%" y="661" width="0.0798%" height="15" fill="rgb(250,37,51)" fg:x="963" fg:w="1"/><text x="77.1055%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.8555%" y="645" width="0.0798%" height="15" fill="rgb(205,185,43)" fg:x="963" fg:w="1"/><text x="77.1055%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.8555%" y="629" width="0.0798%" height="15" fill="rgb(206,65,41)" fg:x="963" fg:w="1"/><text x="77.1055%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8555%" y="613" width="0.0798%" height="15" fill="rgb(236,159,32)" fg:x="963" fg:w="1"/><text x="77.1055%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.8555%" y="597" width="0.0798%" height="15" fill="rgb(228,199,27)" fg:x="963" fg:w="1"/><text x="77.1055%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8555%" y="581" width="0.0798%" height="15" fill="rgb(212,0,37)" fg:x="963" fg:w="1"/><text x="77.1055%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="76.6959%" y="709" width="0.3192%" height="15" fill="rgb(248,50,11)" fg:x="961" fg:w="4"/><text x="76.9459%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="76.6959%" y="693" width="0.3192%" height="15" fill="rgb(231,164,25)" fg:x="961" fg:w="4"/><text x="76.9459%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="76.9354%" y="677" width="0.0798%" height="15" fill="rgb(238,38,39)" fg:x="964" fg:w="1"/><text x="77.1854%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="76.9354%" y="661" width="0.0798%" height="15" fill="rgb(210,15,50)" fg:x="964" fg:w="1"/><text x="77.1854%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="76.9354%" y="645" width="0.0798%" height="15" fill="rgb(251,126,36)" fg:x="964" fg:w="1"/><text x="77.1854%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.9354%" y="629" width="0.0798%" height="15" fill="rgb(243,59,26)" fg:x="964" fg:w="1"/><text x="77.1854%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.9354%" y="613" width="0.0798%" height="15" fill="rgb(215,24,30)" fg:x="964" fg:w="1"/><text x="77.1854%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.9354%" y="597" width="0.0798%" height="15" fill="rgb(253,50,51)" fg:x="964" fg:w="1"/><text x="77.1854%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.0152%" y="693" width="0.0798%" height="15" fill="rgb(252,2,16)" fg:x="965" fg:w="1"/><text x="77.2652%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.0950%" y="693" width="0.0798%" height="15" fill="rgb(209,123,36)" fg:x="966" fg:w="1"/><text x="77.3450%" y="703.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.0950%" y="677" width="0.0798%" height="15" fill="rgb(245,60,15)" fg:x="966" fg:w="1"/><text x="77.3450%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.0950%" y="661" width="0.0798%" height="15" fill="rgb(246,4,13)" fg:x="966" fg:w="1"/><text x="77.3450%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.0950%" y="645" width="0.0798%" height="15" fill="rgb(210,223,46)" fg:x="966" fg:w="1"/><text x="77.3450%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="77.0950%" y="629" width="0.0798%" height="15" fill="rgb(248,1,9)" fg:x="966" fg:w="1"/><text x="77.3450%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.0950%" y="613" width="0.0798%" height="15" fill="rgb(254,2,34)" fg:x="966" fg:w="1"/><text x="77.3450%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0950%" y="597" width="0.0798%" height="15" fill="rgb(239,176,1)" fg:x="966" fg:w="1"/><text x="77.3450%" y="607.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="76.6959%" y="725" width="0.5587%" height="15" fill="rgb(250,25,32)" fg:x="961" fg:w="7"/><text x="76.9459%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="77.0152%" y="709" width="0.2394%" height="15" fill="rgb(225,28,39)" fg:x="965" fg:w="3"/><text x="77.2652%" y="719.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="77.1748%" y="693" width="0.0798%" height="15" fill="rgb(230,166,37)" fg:x="967" fg:w="1"/><text x="77.4248%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.1748%" y="677" width="0.0798%" height="15" fill="rgb(246,220,4)" fg:x="967" fg:w="1"/><text x="77.4248%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.1748%" y="661" width="0.0798%" height="15" fill="rgb(219,119,33)" fg:x="967" fg:w="1"/><text x="77.4248%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="77.1748%" y="645" width="0.0798%" height="15" fill="rgb(221,207,38)" fg:x="967" fg:w="1"/><text x="77.4248%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.3344%" y="693" width="0.0798%" height="15" fill="rgb(214,153,5)" fg:x="969" fg:w="1"/><text x="77.5844%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.3344%" y="677" width="0.0798%" height="15" fill="rgb(223,50,16)" fg:x="969" fg:w="1"/><text x="77.5844%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3344%" y="661" width="0.0798%" height="15" fill="rgb(209,207,12)" fg:x="969" fg:w="1"/><text x="77.5844%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3344%" y="645" width="0.0798%" height="15" fill="rgb(207,3,46)" fg:x="969" fg:w="1"/><text x="77.5844%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="77.4142%" y="693" width="0.0798%" height="15" fill="rgb(232,45,53)" fg:x="970" fg:w="1"/><text x="77.6642%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.4142%" y="677" width="0.0798%" height="15" fill="rgb(206,140,15)" fg:x="970" fg:w="1"/><text x="77.6642%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.4940%" y="693" width="0.0798%" height="15" fill="rgb(245,66,17)" fg:x="971" fg:w="1"/><text x="77.7440%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.4940%" y="677" width="0.0798%" height="15" fill="rgb(221,25,37)" fg:x="971" fg:w="1"/><text x="77.7440%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4940%" y="661" width="0.0798%" height="15" fill="rgb(215,99,47)" fg:x="971" fg:w="1"/><text x="77.7440%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="77.3344%" y="709" width="0.3192%" height="15" fill="rgb(219,154,44)" fg:x="969" fg:w="4"/><text x="77.5844%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="77.5738%" y="693" width="0.0798%" height="15" fill="rgb(210,197,36)" fg:x="972" fg:w="1"/><text x="77.8238%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="77.5738%" y="677" width="0.0798%" height="15" fill="rgb(217,137,10)" fg:x="972" fg:w="1"/><text x="77.8238%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="77.5738%" y="661" width="0.0798%" height="15" fill="rgb(240,216,26)" fg:x="972" fg:w="1"/><text x="77.8238%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.5738%" y="645" width="0.0798%" height="15" fill="rgb(242,76,17)" fg:x="972" fg:w="1"/><text x="77.8238%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.5738%" y="629" width="0.0798%" height="15" fill="rgb(243,142,51)" fg:x="972" fg:w="1"/><text x="77.8238%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5738%" y="613" width="0.0798%" height="15" fill="rgb(233,109,46)" fg:x="972" fg:w="1"/><text x="77.8238%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.5738%" y="597" width="0.0798%" height="15" fill="rgb(252,45,32)" fg:x="972" fg:w="1"/><text x="77.8238%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5738%" y="581" width="0.0798%" height="15" fill="rgb(210,69,52)" fg:x="972" fg:w="1"/><text x="77.8238%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="77.5738%" y="565" width="0.0798%" height="15" fill="rgb(242,30,2)" fg:x="972" fg:w="1"/><text x="77.8238%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.5738%" y="549" width="0.0798%" height="15" fill="rgb(246,137,1)" fg:x="972" fg:w="1"/><text x="77.8238%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.5738%" y="533" width="0.0798%" height="15" fill="rgb(221,205,25)" fg:x="972" fg:w="1"/><text x="77.8238%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="77.2546%" y="725" width="0.4789%" height="15" fill="rgb(224,44,43)" fg:x="968" fg:w="6"/><text x="77.5046%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.6536%" y="709" width="0.0798%" height="15" fill="rgb(209,81,13)" fg:x="973" fg:w="1"/><text x="77.9036%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.6536%" y="693" width="0.0798%" height="15" fill="rgb(227,88,4)" fg:x="973" fg:w="1"/><text x="77.9036%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.7334%" y="693" width="0.0798%" height="15" fill="rgb(228,118,49)" fg:x="974" fg:w="1"/><text x="77.9834%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="77.7334%" y="725" width="0.1596%" height="15" fill="rgb(225,215,27)" fg:x="974" fg:w="2"/><text x="77.9834%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="77.7334%" y="709" width="0.1596%" height="15" fill="rgb(235,226,1)" fg:x="974" fg:w="2"/><text x="77.9834%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.8132%" y="693" width="0.0798%" height="15" fill="rgb(205,107,17)" fg:x="975" fg:w="1"/><text x="78.0632%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.8132%" y="677" width="0.0798%" height="15" fill="rgb(247,85,8)" fg:x="975" fg:w="1"/><text x="78.0632%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8132%" y="661" width="0.0798%" height="15" fill="rgb(230,220,20)" fg:x="975" fg:w="1"/><text x="78.0632%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8132%" y="645" width="0.0798%" height="15" fill="rgb(237,22,6)" fg:x="975" fg:w="1"/><text x="78.0632%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8132%" y="629" width="0.0798%" height="15" fill="rgb(253,39,1)" fg:x="975" fg:w="1"/><text x="78.0632%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8132%" y="613" width="0.0798%" height="15" fill="rgb(251,206,50)" fg:x="975" fg:w="1"/><text x="78.0632%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8132%" y="597" width="0.0798%" height="15" fill="rgb(239,162,11)" fg:x="975" fg:w="1"/><text x="78.0632%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8132%" y="581" width="0.0798%" height="15" fill="rgb(234,164,6)" fg:x="975" fg:w="1"/><text x="78.0632%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8132%" y="565" width="0.0798%" height="15" fill="rgb(238,112,10)" fg:x="975" fg:w="1"/><text x="78.0632%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8132%" y="549" width="0.0798%" height="15" fill="rgb(232,78,29)" fg:x="975" fg:w="1"/><text x="78.0632%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8132%" y="533" width="0.0798%" height="15" fill="rgb(232,20,13)" fg:x="975" fg:w="1"/><text x="78.0632%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8132%" y="517" width="0.0798%" height="15" fill="rgb(222,175,9)" fg:x="975" fg:w="1"/><text x="78.0632%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8132%" y="501" width="0.0798%" height="15" fill="rgb(233,61,14)" fg:x="975" fg:w="1"/><text x="78.0632%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8132%" y="485" width="0.0798%" height="15" fill="rgb(224,152,29)" fg:x="975" fg:w="1"/><text x="78.0632%" y="495.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="77.8931%" y="709" width="0.0798%" height="15" fill="rgb(232,26,6)" fg:x="976" fg:w="1"/><text x="78.1431%" y="719.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="77.8931%" y="693" width="0.0798%" height="15" fill="rgb(210,116,11)" fg:x="976" fg:w="1"/><text x="78.1431%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.8931%" y="677" width="0.0798%" height="15" fill="rgb(238,213,15)" fg:x="976" fg:w="1"/><text x="78.1431%" y="687.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="77.8931%" y="661" width="0.0798%" height="15" fill="rgb(236,177,32)" fg:x="976" fg:w="1"/><text x="78.1431%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.8931%" y="645" width="0.0798%" height="15" fill="rgb(230,36,43)" fg:x="976" fg:w="1"/><text x="78.1431%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.8931%" y="629" width="0.0798%" height="15" fill="rgb(212,76,23)" fg:x="976" fg:w="1"/><text x="78.1431%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8931%" y="613" width="0.0798%" height="15" fill="rgb(225,168,24)" fg:x="976" fg:w="1"/><text x="78.1431%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="77.9729%" y="661" width="0.0798%" height="15" fill="rgb(206,40,44)" fg:x="977" fg:w="1"/><text x="78.2229%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="77.9729%" y="645" width="0.0798%" height="15" fill="rgb(251,213,6)" fg:x="977" fg:w="1"/><text x="78.2229%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.9729%" y="629" width="0.0798%" height="15" fill="rgb(220,7,47)" fg:x="977" fg:w="1"/><text x="78.2229%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="77.9729%" y="613" width="0.0798%" height="15" fill="rgb(254,130,53)" fg:x="977" fg:w="1"/><text x="78.2229%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.9729%" y="597" width="0.0798%" height="15" fill="rgb(240,2,46)" fg:x="977" fg:w="1"/><text x="78.2229%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.9729%" y="581" width="0.0798%" height="15" fill="rgb(252,144,40)" fg:x="977" fg:w="1"/><text x="78.2229%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0527%" y="549" width="0.0798%" height="15" fill="rgb(226,23,10)" fg:x="978" fg:w="1"/><text x="78.3027%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0527%" y="533" width="0.0798%" height="15" fill="rgb(212,204,35)" fg:x="978" fg:w="1"/><text x="78.3027%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.0527%" y="517" width="0.0798%" height="15" fill="rgb(218,201,15)" fg:x="978" fg:w="1"/><text x="78.3027%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0527%" y="501" width="0.0798%" height="15" fill="rgb(224,197,5)" fg:x="978" fg:w="1"/><text x="78.3027%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.0527%" y="485" width="0.0798%" height="15" fill="rgb(224,185,18)" fg:x="978" fg:w="1"/><text x="78.3027%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.0527%" y="469" width="0.0798%" height="15" fill="rgb(251,71,45)" fg:x="978" fg:w="1"/><text x="78.3027%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.0527%" y="453" width="0.0798%" height="15" fill="rgb(216,74,24)" fg:x="978" fg:w="1"/><text x="78.3027%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.0527%" y="437" width="0.0798%" height="15" fill="rgb(250,36,51)" fg:x="978" fg:w="1"/><text x="78.3027%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0527%" y="421" width="0.0798%" height="15" fill="rgb(209,224,28)" fg:x="978" fg:w="1"/><text x="78.3027%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0527%" y="405" width="0.0798%" height="15" fill="rgb(228,5,10)" fg:x="978" fg:w="1"/><text x="78.3027%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.0527%" y="389" width="0.0798%" height="15" fill="rgb(250,57,40)" fg:x="978" fg:w="1"/><text x="78.3027%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.0527%" y="373" width="0.0798%" height="15" fill="rgb(228,194,41)" fg:x="978" fg:w="1"/><text x="78.3027%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.0527%" y="357" width="0.0798%" height="15" fill="rgb(206,68,23)" fg:x="978" fg:w="1"/><text x="78.3027%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.0527%" y="341" width="0.0798%" height="15" fill="rgb(230,33,29)" fg:x="978" fg:w="1"/><text x="78.3027%" y="351.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="78.0527%" y="325" width="0.0798%" height="15" fill="rgb(210,39,32)" fg:x="978" fg:w="1"/><text x="78.3027%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.0527%" y="309" width="0.0798%" height="15" fill="rgb(236,89,23)" fg:x="978" fg:w="1"/><text x="78.3027%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="78.1325%" y="549" width="0.0798%" height="15" fill="rgb(218,52,52)" fg:x="979" fg:w="1"/><text x="78.3825%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.1325%" y="533" width="0.0798%" height="15" fill="rgb(235,154,5)" fg:x="979" fg:w="1"/><text x="78.3825%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1325%" y="517" width="0.0798%" height="15" fill="rgb(223,168,9)" fg:x="979" fg:w="1"/><text x="78.3825%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.0527%" y="613" width="0.2394%" height="15" fill="rgb(220,8,33)" fg:x="978" fg:w="3"/><text x="78.3027%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="78.0527%" y="597" width="0.2394%" height="15" fill="rgb(216,176,3)" fg:x="978" fg:w="3"/><text x="78.3027%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="78.0527%" y="581" width="0.2394%" height="15" fill="rgb(254,150,22)" fg:x="978" fg:w="3"/><text x="78.3027%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.0527%" y="565" width="0.2394%" height="15" fill="rgb(231,61,53)" fg:x="978" fg:w="3"/><text x="78.3027%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.2123%" y="549" width="0.0798%" height="15" fill="rgb(249,177,41)" fg:x="980" fg:w="1"/><text x="78.4623%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2123%" y="533" width="0.0798%" height="15" fill="rgb(221,122,7)" fg:x="980" fg:w="1"/><text x="78.4623%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.2123%" y="517" width="0.0798%" height="15" fill="rgb(215,115,7)" fg:x="980" fg:w="1"/><text x="78.4623%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.2123%" y="501" width="0.0798%" height="15" fill="rgb(218,108,33)" fg:x="980" fg:w="1"/><text x="78.4623%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="78.2123%" y="485" width="0.0798%" height="15" fill="rgb(221,205,39)" fg:x="980" fg:w="1"/><text x="78.4623%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.2921%" y="613" width="0.0798%" height="15" fill="rgb(220,171,18)" fg:x="981" fg:w="1"/><text x="78.5421%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.2921%" y="597" width="0.0798%" height="15" fill="rgb(236,188,29)" fg:x="981" fg:w="1"/><text x="78.5421%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.2921%" y="581" width="0.0798%" height="15" fill="rgb(239,29,5)" fg:x="981" fg:w="1"/><text x="78.5421%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="78.2921%" y="565" width="0.0798%" height="15" fill="rgb(236,114,44)" fg:x="981" fg:w="1"/><text x="78.5421%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.2921%" y="549" width="0.0798%" height="15" fill="rgb(239,214,48)" fg:x="981" fg:w="1"/><text x="78.5421%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="78.0527%" y="645" width="0.3990%" height="15" fill="rgb(241,56,8)" fg:x="978" fg:w="5"/><text x="78.3027%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="78.0527%" y="629" width="0.3990%" height="15" fill="rgb(228,201,0)" fg:x="978" fg:w="5"/><text x="78.3027%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="78.3719%" y="613" width="0.0798%" height="15" fill="rgb(226,219,34)" fg:x="982" fg:w="1"/><text x="78.6219%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.3719%" y="597" width="0.0798%" height="15" fill="rgb(209,204,54)" fg:x="982" fg:w="1"/><text x="78.6219%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.3719%" y="581" width="0.0798%" height="15" fill="rgb(251,160,17)" fg:x="982" fg:w="1"/><text x="78.6219%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.3719%" y="565" width="0.0798%" height="15" fill="rgb(235,15,25)" fg:x="982" fg:w="1"/><text x="78.6219%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.3719%" y="549" width="0.0798%" height="15" fill="rgb(216,209,28)" fg:x="982" fg:w="1"/><text x="78.6219%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3719%" y="533" width="0.0798%" height="15" fill="rgb(248,123,21)" fg:x="982" fg:w="1"/><text x="78.6219%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.3719%" y="517" width="0.0798%" height="15" fill="rgb(226,138,44)" fg:x="982" fg:w="1"/><text x="78.6219%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3719%" y="501" width="0.0798%" height="15" fill="rgb(211,104,54)" fg:x="982" fg:w="1"/><text x="78.6219%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.3719%" y="485" width="0.0798%" height="15" fill="rgb(241,198,15)" fg:x="982" fg:w="1"/><text x="78.6219%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.3719%" y="469" width="0.0798%" height="15" fill="rgb(227,155,54)" fg:x="982" fg:w="1"/><text x="78.6219%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.56%)</title><rect x="77.9729%" y="709" width="0.5587%" height="15" fill="rgb(225,131,31)" fg:x="977" fg:w="7"/><text x="78.2229%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="77.9729%" y="693" width="0.5587%" height="15" fill="rgb(242,40,17)" fg:x="977" fg:w="7"/><text x="78.2229%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="77.9729%" y="677" width="0.5587%" height="15" fill="rgb(254,57,35)" fg:x="977" fg:w="7"/><text x="78.2229%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="78.0527%" y="661" width="0.4789%" height="15" fill="rgb(240,64,32)" fg:x="978" fg:w="6"/><text x="78.3027%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="78.4517%" y="645" width="0.0798%" height="15" fill="rgb(251,136,26)" fg:x="983" fg:w="1"/><text x="78.7017%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="78.4517%" y="629" width="0.0798%" height="15" fill="rgb(208,60,54)" fg:x="983" fg:w="1"/><text x="78.7017%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="78.4517%" y="613" width="0.0798%" height="15" fill="rgb(220,13,12)" fg:x="983" fg:w="1"/><text x="78.7017%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="78.4517%" y="597" width="0.0798%" height="15" fill="rgb(213,149,1)" fg:x="983" fg:w="1"/><text x="78.7017%" y="607.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.4517%" y="581" width="0.0798%" height="15" fill="rgb(212,191,39)" fg:x="983" fg:w="1"/><text x="78.7017%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.4517%" y="565" width="0.0798%" height="15" fill="rgb(215,221,42)" fg:x="983" fg:w="1"/><text x="78.7017%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5315%" y="677" width="0.0798%" height="15" fill="rgb(244,79,23)" fg:x="984" fg:w="1"/><text x="78.7815%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="78.5315%" y="693" width="0.1596%" height="15" fill="rgb(247,17,29)" fg:x="984" fg:w="2"/><text x="78.7815%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.6113%" y="677" width="0.0798%" height="15" fill="rgb(251,221,21)" fg:x="985" fg:w="1"/><text x="78.8613%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="78.8508%" y="597" width="0.0798%" height="15" fill="rgb(207,202,34)" fg:x="988" fg:w="1"/><text x="79.1008%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.8508%" y="581" width="0.0798%" height="15" fill="rgb(217,4,34)" fg:x="988" fg:w="1"/><text x="79.1008%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="79.0104%" y="565" width="0.1596%" height="15" fill="rgb(253,17,16)" fg:x="990" fg:w="2"/><text x="79.2604%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.0104%" y="549" width="0.1596%" height="15" fill="rgb(223,91,48)" fg:x="990" fg:w="2"/><text x="79.2604%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="79.0104%" y="533" width="0.1596%" height="15" fill="rgb(244,191,22)" fg:x="990" fg:w="2"/><text x="79.2604%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0902%" y="517" width="0.0798%" height="15" fill="rgb(211,107,14)" fg:x="991" fg:w="1"/><text x="79.3402%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0902%" y="501" width="0.0798%" height="15" fill="rgb(232,81,23)" fg:x="991" fg:w="1"/><text x="79.3402%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.1700%" y="533" width="0.0798%" height="15" fill="rgb(237,126,14)" fg:x="992" fg:w="1"/><text x="79.4200%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.1700%" y="517" width="0.0798%" height="15" fill="rgb(230,65,39)" fg:x="992" fg:w="1"/><text x="79.4200%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.1700%" y="501" width="0.0798%" height="15" fill="rgb(208,106,41)" fg:x="992" fg:w="1"/><text x="79.4200%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1700%" y="485" width="0.0798%" height="15" fill="rgb(206,125,25)" fg:x="992" fg:w="1"/><text x="79.4200%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.1700%" y="469" width="0.0798%" height="15" fill="rgb(250,24,29)" fg:x="992" fg:w="1"/><text x="79.4200%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.1700%" y="453" width="0.0798%" height="15" fill="rgb(226,49,32)" fg:x="992" fg:w="1"/><text x="79.4200%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.1700%" y="437" width="0.0798%" height="15" fill="rgb(217,110,16)" fg:x="992" fg:w="1"/><text x="79.4200%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.0104%" y="581" width="0.3192%" height="15" fill="rgb(252,16,53)" fg:x="990" fg:w="4"/><text x="79.2604%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.1700%" y="565" width="0.1596%" height="15" fill="rgb(238,163,11)" fg:x="992" fg:w="2"/><text x="79.4200%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="79.1700%" y="549" width="0.1596%" height="15" fill="rgb(206,210,1)" fg:x="992" fg:w="2"/><text x="79.4200%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.2498%" y="533" width="0.0798%" height="15" fill="rgb(229,8,25)" fg:x="993" fg:w="1"/><text x="79.4998%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.2498%" y="517" width="0.0798%" height="15" fill="rgb(247,155,23)" fg:x="993" fg:w="1"/><text x="79.4998%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.2498%" y="501" width="0.0798%" height="15" fill="rgb(207,26,7)" fg:x="993" fg:w="1"/><text x="79.4998%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="78.9306%" y="597" width="0.6385%" height="15" fill="rgb(215,179,12)" fg:x="989" fg:w="8"/><text x="79.1806%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.3296%" y="581" width="0.2394%" height="15" fill="rgb(238,208,11)" fg:x="994" fg:w="3"/><text x="79.5796%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.4892%" y="565" width="0.0798%" height="15" fill="rgb(238,102,42)" fg:x="996" fg:w="1"/><text x="79.7392%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4892%" y="549" width="0.0798%" height="15" fill="rgb(239,35,9)" fg:x="996" fg:w="1"/><text x="79.7392%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.4892%" y="533" width="0.0798%" height="15" fill="rgb(244,182,30)" fg:x="996" fg:w="1"/><text x="79.7392%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4892%" y="517" width="0.0798%" height="15" fill="rgb(232,181,23)" fg:x="996" fg:w="1"/><text x="79.7392%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.4892%" y="501" width="0.0798%" height="15" fill="rgb(242,154,29)" fg:x="996" fg:w="1"/><text x="79.7392%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.80%)</title><rect x="78.8508%" y="613" width="0.7981%" height="15" fill="rgb(219,23,2)" fg:x="988" fg:w="10"/><text x="79.1008%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.5690%" y="597" width="0.0798%" height="15" fill="rgb(234,94,43)" fg:x="997" fg:w="1"/><text x="79.8190%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.5690%" y="581" width="0.0798%" height="15" fill="rgb(223,55,45)" fg:x="997" fg:w="1"/><text x="79.8190%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.5690%" y="565" width="0.0798%" height="15" fill="rgb(241,215,54)" fg:x="997" fg:w="1"/><text x="79.8190%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.5690%" y="549" width="0.0798%" height="15" fill="rgb(247,63,53)" fg:x="997" fg:w="1"/><text x="79.8190%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.5690%" y="533" width="0.0798%" height="15" fill="rgb(220,166,7)" fg:x="997" fg:w="1"/><text x="79.8190%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.5690%" y="517" width="0.0798%" height="15" fill="rgb(248,53,45)" fg:x="997" fg:w="1"/><text x="79.8190%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6488%" y="581" width="0.0798%" height="15" fill="rgb(224,207,20)" fg:x="998" fg:w="1"/><text x="79.8988%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.6488%" y="613" width="0.1596%" height="15" fill="rgb(244,185,11)" fg:x="998" fg:w="2"/><text x="79.8988%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="79.6488%" y="597" width="0.1596%" height="15" fill="rgb(230,13,42)" fg:x="998" fg:w="2"/><text x="79.8988%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.7287%" y="581" width="0.0798%" height="15" fill="rgb(243,191,18)" fg:x="999" fg:w="1"/><text x="79.9787%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.8883%" y="517" width="0.0798%" height="15" fill="rgb(249,135,15)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8883%" y="501" width="0.0798%" height="15" fill="rgb(229,26,35)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.8883%" y="485" width="0.0798%" height="15" fill="rgb(216,191,16)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8883%" y="469" width="0.0798%" height="15" fill="rgb(242,18,7)" fg:x="1001" fg:w="1"/><text x="80.1383%" y="479.50"></text></g><g><title>engine::session::Session::flush (23 samples, 1.84%)</title><rect x="78.5315%" y="709" width="1.8356%" height="15" fill="rgb(205,128,17)" fg:x="984" fg:w="23"/><text x="78.7815%" y="719.50">e..</text></g><g><title>engine::session::Session::save_changes (21 samples, 1.68%)</title><rect x="78.6911%" y="693" width="1.6760%" height="15" fill="rgb(229,199,44)" fg:x="986" fg:w="21"/><text x="78.9411%" y="703.50"></text></g><g><title>engine::session::state::State::close (21 samples, 1.68%)</title><rect x="78.6911%" y="677" width="1.6760%" height="15" fill="rgb(234,222,3)" fg:x="986" fg:w="21"/><text x="78.9411%" y="687.50"></text></g><g><title>engine::session::state::State::flush_entities (21 samples, 1.68%)</title><rect x="78.6911%" y="661" width="1.6760%" height="15" fill="rgb(220,170,20)" fg:x="986" fg:w="21"/><text x="78.9411%" y="671.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (21 samples, 1.68%)</title><rect x="78.6911%" y="645" width="1.6760%" height="15" fill="rgb(207,138,8)" fg:x="986" fg:w="21"/><text x="78.9411%" y="655.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (20 samples, 1.60%)</title><rect x="78.7709%" y="629" width="1.5962%" height="15" fill="rgb(244,130,36)" fg:x="987" fg:w="20"/><text x="79.0209%" y="639.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="79.8085%" y="613" width="0.5587%" height="15" fill="rgb(207,197,52)" fg:x="1000" fg:w="7"/><text x="80.0585%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="79.8883%" y="597" width="0.4789%" height="15" fill="rgb(206,9,21)" fg:x="1001" fg:w="6"/><text x="80.1383%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="79.8883%" y="581" width="0.4789%" height="15" fill="rgb(250,15,47)" fg:x="1001" fg:w="6"/><text x="80.1383%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="79.8883%" y="565" width="0.4789%" height="15" fill="rgb(235,202,14)" fg:x="1001" fg:w="6"/><text x="80.1383%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="79.8883%" y="549" width="0.4789%" height="15" fill="rgb(211,180,47)" fg:x="1001" fg:w="6"/><text x="80.1383%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="79.8883%" y="533" width="0.4789%" height="15" fill="rgb(209,61,11)" fg:x="1001" fg:w="6"/><text x="80.1383%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="79.9681%" y="517" width="0.3990%" height="15" fill="rgb(243,197,29)" fg:x="1002" fg:w="5"/><text x="80.2181%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="79.9681%" y="501" width="0.3990%" height="15" fill="rgb(216,185,16)" fg:x="1002" fg:w="5"/><text x="80.2181%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="80.1277%" y="485" width="0.2394%" height="15" fill="rgb(248,5,15)" fg:x="1004" fg:w="3"/><text x="80.3777%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.2075%" y="469" width="0.1596%" height="15" fill="rgb(240,39,41)" fg:x="1005" fg:w="2"/><text x="80.4575%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.2075%" y="453" width="0.1596%" height="15" fill="rgb(224,220,43)" fg:x="1005" fg:w="2"/><text x="80.4575%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="80.3671%" y="677" width="0.0798%" height="15" fill="rgb(215,21,24)" fg:x="1007" fg:w="1"/><text x="80.6171%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.4469%" y="629" width="0.0798%" height="15" fill="rgb(220,102,8)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.4469%" y="613" width="0.0798%" height="15" fill="rgb(225,185,10)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4469%" y="597" width="0.0798%" height="15" fill="rgb(212,108,24)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4469%" y="581" width="0.0798%" height="15" fill="rgb(237,27,0)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="80.4469%" y="565" width="0.0798%" height="15" fill="rgb(212,106,38)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4469%" y="549" width="0.0798%" height="15" fill="rgb(210,125,30)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4469%" y="533" width="0.0798%" height="15" fill="rgb(215,219,1)" fg:x="1008" fg:w="1"/><text x="80.6969%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="80.4469%" y="677" width="0.1596%" height="15" fill="rgb(223,10,12)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="80.4469%" y="661" width="0.1596%" height="15" fill="rgb(245,40,34)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="80.4469%" y="645" width="0.1596%" height="15" fill="rgb(211,185,19)" fg:x="1008" fg:w="2"/><text x="80.6969%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.5267%" y="629" width="0.0798%" height="15" fill="rgb(243,190,43)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.5267%" y="613" width="0.0798%" height="15" fill="rgb(232,208,29)" fg:x="1009" fg:w="1"/><text x="80.7767%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="80.3671%" y="709" width="0.3192%" height="15" fill="rgb(234,134,27)" fg:x="1007" fg:w="4"/><text x="80.6171%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="80.3671%" y="693" width="0.3192%" height="15" fill="rgb(225,41,29)" fg:x="1007" fg:w="4"/><text x="80.6171%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="80.6065%" y="677" width="0.0798%" height="15" fill="rgb(241,214,44)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.6065%" y="661" width="0.0798%" height="15" fill="rgb(205,219,41)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.6065%" y="645" width="0.0798%" height="15" fill="rgb(226,15,26)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.6065%" y="629" width="0.0798%" height="15" fill="rgb(210,83,41)" fg:x="1010" fg:w="1"/><text x="80.8565%" y="639.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="80.6864%" y="709" width="0.0798%" height="15" fill="rgb(247,9,39)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="719.50"></text></g><g><title>kernel::model::builder::build_entity (1 samples, 0.08%)</title><rect x="80.6864%" y="693" width="0.0798%" height="15" fill="rgb(209,37,30)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="703.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="80.6864%" y="677" width="0.0798%" height="15" fill="rgb(248,170,46)" fg:x="1011" fg:w="1"/><text x="80.9364%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="80.7662%" y="613" width="0.0798%" height="15" fill="rgb(237,129,44)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="80.7662%" y="597" width="0.0798%" height="15" fill="rgb(225,117,51)" fg:x="1012" fg:w="1"/><text x="81.0162%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="80.7662%" y="661" width="0.2394%" height="15" fill="rgb(212,165,2)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="80.7662%" y="645" width="0.2394%" height="15" fill="rgb(213,53,45)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="80.7662%" y="629" width="0.2394%" height="15" fill="rgb(220,148,3)" fg:x="1012" fg:w="3"/><text x="81.0162%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (2 samples, 0.16%)</title><rect x="80.8460%" y="613" width="0.1596%" height="15" fill="rgb(228,37,29)" fg:x="1013" fg:w="2"/><text x="81.0960%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.8460%" y="597" width="0.1596%" height="15" fill="rgb(209,76,29)" fg:x="1013" fg:w="2"/><text x="81.0960%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.9258%" y="581" width="0.0798%" height="15" fill="rgb(215,90,5)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9258%" y="565" width="0.0798%" height="15" fill="rgb(227,207,32)" fg:x="1014" fg:w="1"/><text x="81.1758%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="81.0056%" y="661" width="0.0798%" height="15" fill="rgb(251,218,44)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.0056%" y="645" width="0.0798%" height="15" fill="rgb(211,44,16)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.0056%" y="629" width="0.0798%" height="15" fill="rgb(242,170,37)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.0056%" y="613" width="0.0798%" height="15" fill="rgb(205,181,22)" fg:x="1015" fg:w="1"/><text x="81.2556%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="80.7662%" y="693" width="0.3990%" height="15" fill="rgb(228,130,19)" fg:x="1012" fg:w="5"/><text x="81.0162%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="80.7662%" y="677" width="0.3990%" height="15" fill="rgb(228,9,15)" fg:x="1012" fg:w="5"/><text x="81.0162%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="81.0854%" y="661" width="0.0798%" height="15" fill="rgb(219,66,48)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.0854%" y="645" width="0.0798%" height="15" fill="rgb(234,203,10)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.0854%" y="629" width="0.0798%" height="15" fill="rgb(219,209,1)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.0854%" y="613" width="0.0798%" height="15" fill="rgb(206,167,9)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.0854%" y="597" width="0.0798%" height="15" fill="rgb(210,11,39)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.0854%" y="581" width="0.0798%" height="15" fill="rgb(251,90,47)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.0854%" y="565" width="0.0798%" height="15" fill="rgb(237,7,4)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.0854%" y="549" width="0.0798%" height="15" fill="rgb(232,205,47)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="81.0854%" y="533" width="0.0798%" height="15" fill="rgb(215,86,48)" fg:x="1016" fg:w="1"/><text x="81.3354%" y="543.50"></text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="80.7662%" y="709" width="0.4789%" height="15" fill="rgb(232,14,47)" fg:x="1012" fg:w="6"/><text x="81.0162%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="81.1652%" y="693" width="0.0798%" height="15" fill="rgb(240,28,46)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.1652%" y="677" width="0.0798%" height="15" fill="rgb(224,85,5)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.1652%" y="661" width="0.0798%" height="15" fill="rgb(219,34,25)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.1652%" y="645" width="0.0798%" height="15" fill="rgb(247,137,45)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.1652%" y="629" width="0.0798%" height="15" fill="rgb(237,121,47)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1652%" y="613" width="0.0798%" height="15" fill="rgb(247,148,27)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1652%" y="597" width="0.0798%" height="15" fill="rgb(220,44,0)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1652%" y="581" width="0.0798%" height="15" fill="rgb(236,61,29)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1652%" y="565" width="0.0798%" height="15" fill="rgb(244,180,35)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.1652%" y="549" width="0.0798%" height="15" fill="rgb(242,14,54)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.1652%" y="533" width="0.0798%" height="15" fill="rgb(206,24,45)" fg:x="1017" fg:w="1"/><text x="81.4152%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.2450%" y="661" width="0.0798%" height="15" fill="rgb(215,211,6)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.2450%" y="645" width="0.0798%" height="15" fill="rgb(207,56,2)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.2450%" y="629" width="0.0798%" height="15" fill="rgb(220,135,9)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2450%" y="613" width="0.0798%" height="15" fill="rgb(214,145,52)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.2450%" y="597" width="0.0798%" height="15" fill="rgb(241,83,53)" fg:x="1018" fg:w="1"/><text x="81.4950%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (44 samples, 3.51%)</title><rect x="77.8931%" y="725" width="3.5116%" height="15" fill="rgb(222,66,13)" fg:x="976" fg:w="44"/><text x="78.1431%" y="735.50">plu..</text></g><g><title>plugins_core::build::Build::wearing (2 samples, 0.16%)</title><rect x="81.2450%" y="709" width="0.1596%" height="15" fill="rgb(239,164,54)" fg:x="1018" fg:w="2"/><text x="81.4950%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="81.2450%" y="693" width="0.1596%" height="15" fill="rgb(216,189,13)" fg:x="1018" fg:w="2"/><text x="81.4950%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="81.2450%" y="677" width="0.1596%" height="15" fill="rgb(228,212,51)" fg:x="1018" fg:w="2"/><text x="81.4950%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="81.3248%" y="661" width="0.0798%" height="15" fill="rgb(207,190,21)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.3248%" y="645" width="0.0798%" height="15" fill="rgb(245,28,35)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.3248%" y="629" width="0.0798%" height="15" fill="rgb(239,23,40)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3248%" y="613" width="0.0798%" height="15" fill="rgb(242,10,51)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.3248%" y="597" width="0.0798%" height="15" fill="rgb(207,186,5)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.3248%" y="581" width="0.0798%" height="15" fill="rgb(242,21,16)" fg:x="1019" fg:w="1"/><text x="81.5748%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="81.4046%" y="725" width="0.0798%" height="15" fill="rgb(237,0,53)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="735.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="81.4046%" y="709" width="0.0798%" height="15" fill="rgb(215,8,52)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="719.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="81.4046%" y="693" width="0.0798%" height="15" fill="rgb(248,62,44)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="81.4046%" y="677" width="0.0798%" height="15" fill="rgb(224,83,15)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="81.4046%" y="661" width="0.0798%" height="15" fill="rgb(249,100,46)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="81.4046%" y="645" width="0.0798%" height="15" fill="rgb(213,35,48)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="81.4046%" y="629" width="0.0798%" height="15" fill="rgb(251,2,13)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="81.4046%" y="613" width="0.0798%" height="15" fill="rgb(212,132,21)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4046%" y="597" width="0.0798%" height="15" fill="rgb(247,17,21)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="81.4046%" y="581" width="0.0798%" height="15" fill="rgb(220,177,38)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="81.4046%" y="565" width="0.0798%" height="15" fill="rgb(233,219,21)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="81.4046%" y="549" width="0.0798%" height="15" fill="rgb(246,17,7)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="81.4046%" y="533" width="0.0798%" height="15" fill="rgb(212,4,22)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="81.4046%" y="517" width="0.0798%" height="15" fill="rgb(243,85,21)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4046%" y="501" width="0.0798%" height="15" fill="rgb(232,218,2)" fg:x="1020" fg:w="1"/><text x="81.6546%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="81.4844%" y="693" width="0.0798%" height="15" fill="rgb(253,168,47)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.4844%" y="677" width="0.0798%" height="15" fill="rgb(238,101,25)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.4844%" y="661" width="0.0798%" height="15" fill="rgb(251,86,12)" fg:x="1021" fg:w="1"/><text x="81.7344%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="81.5642%" y="645" width="0.1596%" height="15" fill="rgb(241,112,44)" fg:x="1022" fg:w="2"/><text x="81.8142%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.6441%" y="629" width="0.0798%" height="15" fill="rgb(224,28,25)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.6441%" y="613" width="0.0798%" height="15" fill="rgb(209,201,1)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.6441%" y="597" width="0.0798%" height="15" fill="rgb(231,30,22)" fg:x="1023" fg:w="1"/><text x="81.8941%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="81.5642%" y="661" width="0.2394%" height="15" fill="rgb(247,96,31)" fg:x="1022" fg:w="3"/><text x="81.8142%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.7239%" y="645" width="0.0798%" height="15" fill="rgb(251,100,12)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7239%" y="629" width="0.0798%" height="15" fill="rgb(224,174,7)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7239%" y="613" width="0.0798%" height="15" fill="rgb(231,168,19)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7239%" y="597" width="0.0798%" height="15" fill="rgb(226,85,5)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7239%" y="581" width="0.0798%" height="15" fill="rgb(210,215,5)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.7239%" y="565" width="0.0798%" height="15" fill="rgb(233,70,8)" fg:x="1024" fg:w="1"/><text x="81.9739%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="81.5642%" y="677" width="0.3192%" height="15" fill="rgb(229,109,53)" fg:x="1022" fg:w="4"/><text x="81.8142%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="81.8037%" y="661" width="0.0798%" height="15" fill="rgb(213,125,35)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="81.8037%" y="645" width="0.0798%" height="15" fill="rgb(215,12,48)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8037%" y="629" width="0.0798%" height="15" fill="rgb(207,12,38)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8037%" y="613" width="0.0798%" height="15" fill="rgb(216,229,2)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.8037%" y="597" width="0.0798%" height="15" fill="rgb(229,209,31)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8037%" y="581" width="0.0798%" height="15" fill="rgb(239,57,22)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.8037%" y="565" width="0.0798%" height="15" fill="rgb(239,119,54)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8037%" y="549" width="0.0798%" height="15" fill="rgb(231,80,45)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="81.8037%" y="533" width="0.0798%" height="15" fill="rgb(219,138,19)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8037%" y="517" width="0.0798%" height="15" fill="rgb(216,53,26)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.8037%" y="501" width="0.0798%" height="15" fill="rgb(224,30,16)" fg:x="1025" fg:w="1"/><text x="82.0537%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="81.5642%" y="693" width="0.3990%" height="15" fill="rgb(224,151,24)" fg:x="1022" fg:w="5"/><text x="81.8142%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8835%" y="677" width="0.0798%" height="15" fill="rgb(236,75,7)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="687.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="81.8835%" y="661" width="0.0798%" height="15" fill="rgb(248,106,42)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.8835%" y="645" width="0.0798%" height="15" fill="rgb(222,217,11)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="81.8835%" y="629" width="0.0798%" height="15" fill="rgb(234,143,31)" fg:x="1026" fg:w="1"/><text x="82.1335%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (86 samples, 6.86%)</title><rect x="75.1796%" y="741" width="6.8635%" height="15" fill="rgb(237,148,28)" fg:x="942" fg:w="86"/><text x="75.4296%" y="751.50">&lt;tests::H..</text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.56%)</title><rect x="81.4844%" y="725" width="0.5587%" height="15" fill="rgb(241,151,6)" fg:x="1021" fg:w="7"/><text x="81.7344%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.56%)</title><rect x="81.4844%" y="709" width="0.5587%" height="15" fill="rgb(226,55,18)" fg:x="1021" fg:w="7"/><text x="81.7344%" y="719.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="81.9633%" y="693" width="0.0798%" height="15" fill="rgb(226,196,6)" fg:x="1027" fg:w="1"/><text x="82.2133%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.1229%" y="709" width="0.0798%" height="15" fill="rgb(251,228,11)" fg:x="1029" fg:w="1"/><text x="82.3729%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="82.1229%" y="725" width="0.1596%" height="15" fill="rgb(219,197,15)" fg:x="1029" fg:w="2"/><text x="82.3729%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2027%" y="709" width="0.0798%" height="15" fill="rgb(243,105,44)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.2027%" y="693" width="0.0798%" height="15" fill="rgb(205,183,40)" fg:x="1030" fg:w="1"/><text x="82.4527%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="82.2825%" y="725" width="0.0798%" height="15" fill="rgb(232,138,46)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="82.2825%" y="709" width="0.0798%" height="15" fill="rgb(234,161,14)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.2825%" y="693" width="0.0798%" height="15" fill="rgb(238,211,18)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.2825%" y="677" width="0.0798%" height="15" fill="rgb(217,130,2)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="82.2825%" y="661" width="0.0798%" height="15" fill="rgb(251,17,29)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="82.2825%" y="645" width="0.0798%" height="15" fill="rgb(243,18,0)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="82.2825%" y="629" width="0.0798%" height="15" fill="rgb(227,220,45)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="82.2825%" y="613" width="0.0798%" height="15" fill="rgb(212,34,2)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="82.2825%" y="597" width="0.0798%" height="15" fill="rgb(236,23,8)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="82.2825%" y="581" width="0.0798%" height="15" fill="rgb(210,113,39)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="82.2825%" y="565" width="0.0798%" height="15" fill="rgb(243,123,48)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.2825%" y="549" width="0.0798%" height="15" fill="rgb(223,175,36)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.2825%" y="533" width="0.0798%" height="15" fill="rgb(226,100,30)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="82.2825%" y="517" width="0.0798%" height="15" fill="rgb(221,225,39)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="82.2825%" y="501" width="0.0798%" height="15" fill="rgb(224,222,42)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="82.2825%" y="485" width="0.0798%" height="15" fill="rgb(221,53,1)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="82.2825%" y="469" width="0.0798%" height="15" fill="rgb(216,187,48)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.2825%" y="453" width="0.0798%" height="15" fill="rgb(220,108,2)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="82.2825%" y="437" width="0.0798%" height="15" fill="rgb(216,13,42)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="82.2825%" y="421" width="0.0798%" height="15" fill="rgb(205,14,29)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="82.2825%" y="405" width="0.0798%" height="15" fill="rgb(217,168,30)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="82.2825%" y="389" width="0.0798%" height="15" fill="rgb(246,173,54)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="82.2825%" y="373" width="0.0798%" height="15" fill="rgb(227,177,11)" fg:x="1031" fg:w="1"/><text x="82.5325%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.3623%" y="709" width="0.0798%" height="15" fill="rgb(223,215,51)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3623%" y="693" width="0.0798%" height="15" fill="rgb(253,4,17)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.3623%" y="677" width="0.0798%" height="15" fill="rgb(206,150,43)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3623%" y="661" width="0.0798%" height="15" fill="rgb(241,100,52)" fg:x="1032" fg:w="1"/><text x="82.6123%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="82.4421%" y="677" width="0.0798%" height="15" fill="rgb(234,120,21)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="82.4421%" y="661" width="0.0798%" height="15" fill="rgb(231,60,11)" fg:x="1033" fg:w="1"/><text x="82.6921%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5219%" y="629" width="0.0798%" height="15" fill="rgb(247,77,50)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5219%" y="613" width="0.0798%" height="15" fill="rgb(251,199,54)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5219%" y="597" width="0.0798%" height="15" fill="rgb(212,120,38)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5219%" y="581" width="0.0798%" height="15" fill="rgb(250,161,37)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.5219%" y="565" width="0.0798%" height="15" fill="rgb(232,158,45)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.5219%" y="549" width="0.0798%" height="15" fill="rgb(233,114,2)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.5219%" y="533" width="0.0798%" height="15" fill="rgb(248,139,0)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.5219%" y="517" width="0.0798%" height="15" fill="rgb(222,164,18)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5219%" y="501" width="0.0798%" height="15" fill="rgb(221,140,42)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.5219%" y="485" width="0.0798%" height="15" fill="rgb(209,186,11)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.5219%" y="469" width="0.0798%" height="15" fill="rgb(254,212,38)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.5219%" y="453" width="0.0798%" height="15" fill="rgb(219,156,31)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.5219%" y="437" width="0.0798%" height="15" fill="rgb(222,148,42)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.5219%" y="421" width="0.0798%" height="15" fill="rgb(225,65,5)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.5219%" y="405" width="0.0798%" height="15" fill="rgb(235,28,12)" fg:x="1034" fg:w="1"/><text x="82.7719%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.5219%" y="661" width="0.1596%" height="15" fill="rgb(245,58,4)" fg:x="1034" fg:w="2"/><text x="82.7719%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.5219%" y="645" width="0.1596%" height="15" fill="rgb(235,118,5)" fg:x="1034" fg:w="2"/><text x="82.7719%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.6018%" y="629" width="0.0798%" height="15" fill="rgb(253,196,3)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.6018%" y="613" width="0.0798%" height="15" fill="rgb(238,90,28)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="82.6018%" y="597" width="0.0798%" height="15" fill="rgb(254,227,4)" fg:x="1035" fg:w="1"/><text x="82.8518%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6816%" y="597" width="0.0798%" height="15" fill="rgb(237,114,35)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.6816%" y="581" width="0.0798%" height="15" fill="rgb(221,147,29)" fg:x="1036" fg:w="1"/><text x="82.9316%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="82.4421%" y="693" width="0.3990%" height="15" fill="rgb(216,201,17)" fg:x="1033" fg:w="5"/><text x="82.6921%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="82.5219%" y="677" width="0.3192%" height="15" fill="rgb(251,46,50)" fg:x="1034" fg:w="4"/><text x="82.7719%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.6816%" y="661" width="0.1596%" height="15" fill="rgb(216,143,48)" fg:x="1036" fg:w="2"/><text x="82.9316%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.6816%" y="645" width="0.1596%" height="15" fill="rgb(224,62,51)" fg:x="1036" fg:w="2"/><text x="82.9316%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.6816%" y="629" width="0.1596%" height="15" fill="rgb(232,152,20)" fg:x="1036" fg:w="2"/><text x="82.9316%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.6816%" y="613" width="0.1596%" height="15" fill="rgb(233,194,7)" fg:x="1036" fg:w="2"/><text x="82.9316%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7614%" y="597" width="0.0798%" height="15" fill="rgb(207,33,22)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7614%" y="581" width="0.0798%" height="15" fill="rgb(226,54,34)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7614%" y="565" width="0.0798%" height="15" fill="rgb(227,161,47)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7614%" y="549" width="0.0798%" height="15" fill="rgb(218,58,37)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7614%" y="533" width="0.0798%" height="15" fill="rgb(208,173,18)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7614%" y="517" width="0.0798%" height="15" fill="rgb(230,159,11)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7614%" y="501" width="0.0798%" height="15" fill="rgb(238,90,51)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7614%" y="485" width="0.0798%" height="15" fill="rgb(225,97,36)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7614%" y="469" width="0.0798%" height="15" fill="rgb(211,205,42)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7614%" y="453" width="0.0798%" height="15" fill="rgb(219,152,7)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7614%" y="437" width="0.0798%" height="15" fill="rgb(222,79,10)" fg:x="1037" fg:w="1"/><text x="83.0114%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.8412%" y="645" width="0.0798%" height="15" fill="rgb(242,13,11)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8412%" y="629" width="0.0798%" height="15" fill="rgb(231,143,41)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.8412%" y="613" width="0.0798%" height="15" fill="rgb(222,147,19)" fg:x="1038" fg:w="1"/><text x="83.0912%" y="623.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="82.9210%" y="645" width="0.0798%" height="15" fill="rgb(235,5,39)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.9210%" y="629" width="0.0798%" height="15" fill="rgb(246,155,51)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="82.9210%" y="613" width="0.0798%" height="15" fill="rgb(218,157,4)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="82.9210%" y="597" width="0.0798%" height="15" fill="rgb(226,184,4)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="82.9210%" y="581" width="0.0798%" height="15" fill="rgb(210,103,26)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="591.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.9210%" y="565" width="0.0798%" height="15" fill="rgb(228,23,31)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.9210%" y="549" width="0.0798%" height="15" fill="rgb(205,176,34)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9210%" y="533" width="0.0798%" height="15" fill="rgb(246,213,37)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9210%" y="517" width="0.0798%" height="15" fill="rgb(213,52,45)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9210%" y="501" width="0.0798%" height="15" fill="rgb(249,9,52)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9210%" y="485" width="0.0798%" height="15" fill="rgb(205,97,16)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9210%" y="469" width="0.0798%" height="15" fill="rgb(214,11,46)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.9210%" y="453" width="0.0798%" height="15" fill="rgb(221,66,18)" fg:x="1039" fg:w="1"/><text x="83.1710%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.0008%" y="645" width="0.0798%" height="15" fill="rgb(213,49,1)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.0008%" y="629" width="0.0798%" height="15" fill="rgb(232,75,51)" fg:x="1040" fg:w="1"/><text x="83.2508%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (9 samples, 0.72%)</title><rect x="82.4421%" y="709" width="0.7183%" height="15" fill="rgb(208,218,40)" fg:x="1033" fg:w="9"/><text x="82.6921%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.32%)</title><rect x="82.8412%" y="693" width="0.3192%" height="15" fill="rgb(206,144,50)" fg:x="1038" fg:w="4"/><text x="83.0912%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="82.8412%" y="677" width="0.3192%" height="15" fill="rgb(216,9,51)" fg:x="1038" fg:w="4"/><text x="83.0912%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="82.8412%" y="661" width="0.3192%" height="15" fill="rgb(226,6,53)" fg:x="1038" fg:w="4"/><text x="83.0912%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0806%" y="645" width="0.0798%" height="15" fill="rgb(216,9,50)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0806%" y="629" width="0.0798%" height="15" fill="rgb(214,101,31)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="83.0806%" y="613" width="0.0798%" height="15" fill="rgb(247,85,17)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0806%" y="597" width="0.0798%" height="15" fill="rgb(248,138,25)" fg:x="1041" fg:w="1"/><text x="83.3306%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.1604%" y="693" width="0.0798%" height="15" fill="rgb(225,146,20)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.1604%" y="677" width="0.0798%" height="15" fill="rgb(224,184,17)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.1604%" y="661" width="0.0798%" height="15" fill="rgb(231,10,20)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.1604%" y="645" width="0.0798%" height="15" fill="rgb(210,93,37)" fg:x="1042" fg:w="1"/><text x="83.4104%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.2402%" y="693" width="0.0798%" height="15" fill="rgb(226,84,42)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.2402%" y="677" width="0.0798%" height="15" fill="rgb(253,192,7)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="83.2402%" y="661" width="0.0798%" height="15" fill="rgb(214,107,27)" fg:x="1043" fg:w="1"/><text x="83.4902%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="83.3200%" y="661" width="0.1596%" height="15" fill="rgb(238,146,21)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="83.3200%" y="645" width="0.1596%" height="15" fill="rgb(209,136,30)" fg:x="1044" fg:w="2"/><text x="83.5700%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.3998%" y="629" width="0.0798%" height="15" fill="rgb(226,60,22)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.3998%" y="613" width="0.0798%" height="15" fill="rgb(243,92,26)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3998%" y="597" width="0.0798%" height="15" fill="rgb(211,85,33)" fg:x="1045" fg:w="1"/><text x="83.6498%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.4796%" y="645" width="0.0798%" height="15" fill="rgb(243,187,44)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.4796%" y="629" width="0.0798%" height="15" fill="rgb(251,172,23)" fg:x="1046" fg:w="1"/><text x="83.7296%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.5595%" y="629" width="0.0798%" height="15" fill="rgb(254,162,50)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5595%" y="613" width="0.0798%" height="15" fill="rgb(239,14,53)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5595%" y="597" width="0.0798%" height="15" fill="rgb(242,208,8)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.5595%" y="581" width="0.0798%" height="15" fill="rgb(225,61,41)" fg:x="1047" fg:w="1"/><text x="83.8095%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7191%" y="597" width="0.1596%" height="15" fill="rgb(219,154,6)" fg:x="1049" fg:w="2"/><text x="83.9691%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="83.7191%" y="581" width="0.1596%" height="15" fill="rgb(227,223,44)" fg:x="1049" fg:w="2"/><text x="83.9691%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7989%" y="565" width="0.0798%" height="15" fill="rgb(220,188,6)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.7989%" y="549" width="0.0798%" height="15" fill="rgb(216,65,22)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.7989%" y="533" width="0.0798%" height="15" fill="rgb(236,66,46)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.7989%" y="517" width="0.0798%" height="15" fill="rgb(211,150,52)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.7989%" y="501" width="0.0798%" height="15" fill="rgb(253,89,19)" fg:x="1050" fg:w="1"/><text x="84.0489%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="83.7191%" y="613" width="0.2394%" height="15" fill="rgb(245,4,1)" fg:x="1049" fg:w="3"/><text x="83.9691%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8787%" y="597" width="0.0798%" height="15" fill="rgb(230,109,16)" fg:x="1051" fg:w="1"/><text x="84.1287%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8787%" y="581" width="0.0798%" height="15" fill="rgb(213,7,47)" fg:x="1051" fg:w="1"/><text x="84.1287%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8787%" y="565" width="0.0798%" height="15" fill="rgb(242,148,14)" fg:x="1051" fg:w="1"/><text x="84.1287%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.9585%" y="613" width="0.0798%" height="15" fill="rgb(238,51,34)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9585%" y="597" width="0.0798%" height="15" fill="rgb(222,49,22)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9585%" y="581" width="0.0798%" height="15" fill="rgb(237,102,50)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9585%" y="565" width="0.0798%" height="15" fill="rgb(237,195,8)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.9585%" y="549" width="0.0798%" height="15" fill="rgb(245,60,18)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.9585%" y="533" width="0.0798%" height="15" fill="rgb(253,74,32)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.9585%" y="517" width="0.0798%" height="15" fill="rgb(240,91,39)" fg:x="1052" fg:w="1"/><text x="84.2085%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.1181%" y="581" width="0.1596%" height="15" fill="rgb(221,162,34)" fg:x="1054" fg:w="2"/><text x="84.3681%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.1181%" y="565" width="0.1596%" height="15" fill="rgb(223,32,2)" fg:x="1054" fg:w="2"/><text x="84.3681%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.1979%" y="549" width="0.0798%" height="15" fill="rgb(245,220,46)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.1979%" y="533" width="0.0798%" height="15" fill="rgb(216,38,33)" fg:x="1055" fg:w="1"/><text x="84.4479%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2777%" y="581" width="0.0798%" height="15" fill="rgb(210,123,14)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2777%" y="565" width="0.0798%" height="15" fill="rgb(214,38,47)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.2777%" y="549" width="0.0798%" height="15" fill="rgb(244,180,16)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.2777%" y="533" width="0.0798%" height="15" fill="rgb(252,21,32)" fg:x="1056" fg:w="1"/><text x="84.5277%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="84.0383%" y="613" width="0.3990%" height="15" fill="rgb(245,218,31)" fg:x="1053" fg:w="5"/><text x="84.2883%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="84.1181%" y="597" width="0.3192%" height="15" fill="rgb(247,81,18)" fg:x="1054" fg:w="4"/><text x="84.3681%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.3575%" y="581" width="0.0798%" height="15" fill="rgb(220,151,1)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.3575%" y="565" width="0.0798%" height="15" fill="rgb(211,157,11)" fg:x="1057" fg:w="1"/><text x="84.6075%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="83.6393%" y="629" width="0.8779%" height="15" fill="rgb(239,46,30)" fg:x="1048" fg:w="11"/><text x="83.8893%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.4374%" y="613" width="0.0798%" height="15" fill="rgb(236,144,43)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.4374%" y="597" width="0.0798%" height="15" fill="rgb(206,71,45)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.4374%" y="581" width="0.0798%" height="15" fill="rgb(240,85,31)" fg:x="1058" fg:w="1"/><text x="84.6874%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (14 samples, 1.12%)</title><rect x="83.4796%" y="661" width="1.1173%" height="15" fill="rgb(221,43,52)" fg:x="1046" fg:w="14"/><text x="83.7296%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.04%)</title><rect x="83.5595%" y="645" width="1.0375%" height="15" fill="rgb(243,106,22)" fg:x="1047" fg:w="13"/><text x="83.8095%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5172%" y="629" width="0.0798%" height="15" fill="rgb(209,138,38)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5172%" y="613" width="0.0798%" height="15" fill="rgb(216,63,40)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5172%" y="597" width="0.0798%" height="15" fill="rgb(206,115,21)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.5172%" y="581" width="0.0798%" height="15" fill="rgb(235,53,44)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.5172%" y="565" width="0.0798%" height="15" fill="rgb(244,160,14)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.5172%" y="549" width="0.0798%" height="15" fill="rgb(223,16,19)" fg:x="1059" fg:w="1"/><text x="84.7672%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="661" width="0.0798%" height="15" fill="rgb(242,63,42)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="645" width="0.0798%" height="15" fill="rgb(209,66,49)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="629" width="0.0798%" height="15" fill="rgb(207,126,46)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="613" width="0.0798%" height="15" fill="rgb(218,160,41)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="597" width="0.0798%" height="15" fill="rgb(234,125,46)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.5970%" y="581" width="0.0798%" height="15" fill="rgb(205,66,36)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5970%" y="565" width="0.0798%" height="15" fill="rgb(220,135,16)" fg:x="1060" fg:w="1"/><text x="84.8470%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.6768%" y="629" width="0.0798%" height="15" fill="rgb(214,217,54)" fg:x="1061" fg:w="1"/><text x="84.9268%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8364%" y="581" width="0.0798%" height="15" fill="rgb(206,30,9)" fg:x="1063" fg:w="1"/><text x="85.0864%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.7566%" y="629" width="0.2394%" height="15" fill="rgb(207,196,5)" fg:x="1062" fg:w="3"/><text x="85.0066%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="84.7566%" y="613" width="0.2394%" height="15" fill="rgb(227,116,12)" fg:x="1062" fg:w="3"/><text x="85.0066%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.7566%" y="597" width="0.2394%" height="15" fill="rgb(235,227,13)" fg:x="1062" fg:w="3"/><text x="85.0066%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9162%" y="581" width="0.0798%" height="15" fill="rgb(238,212,29)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9162%" y="565" width="0.0798%" height="15" fill="rgb(230,152,17)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9162%" y="549" width="0.0798%" height="15" fill="rgb(220,197,1)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9162%" y="533" width="0.0798%" height="15" fill="rgb(229,227,40)" fg:x="1064" fg:w="1"/><text x="85.1662%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="85.1556%" y="549" width="0.0798%" height="15" fill="rgb(227,179,16)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.1556%" y="533" width="0.0798%" height="15" fill="rgb(246,116,44)" fg:x="1067" fg:w="1"/><text x="85.4056%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="84.9960%" y="597" width="0.3192%" height="15" fill="rgb(205,191,4)" fg:x="1065" fg:w="4"/><text x="85.2460%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="85.0758%" y="581" width="0.2394%" height="15" fill="rgb(245,69,19)" fg:x="1066" fg:w="3"/><text x="85.3258%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="85.1556%" y="565" width="0.1596%" height="15" fill="rgb(230,29,26)" fg:x="1067" fg:w="2"/><text x="85.4056%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.2354%" y="549" width="0.0798%" height="15" fill="rgb(239,192,26)" fg:x="1068" fg:w="1"/><text x="85.4854%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.40%)</title><rect x="84.9960%" y="613" width="0.3990%" height="15" fill="rgb(219,92,16)" fg:x="1065" fg:w="5"/><text x="85.2460%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.3152%" y="597" width="0.0798%" height="15" fill="rgb(246,147,43)" fg:x="1069" fg:w="1"/><text x="85.5652%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (10 samples, 0.80%)</title><rect x="84.6768%" y="645" width="0.7981%" height="15" fill="rgb(222,147,11)" fg:x="1061" fg:w="10"/><text x="84.9268%" y="655.50"></text></g><g><title>treediff::diff::diff (6 samples, 0.48%)</title><rect x="84.9960%" y="629" width="0.4789%" height="15" fill="rgb(243,71,8)" fg:x="1065" fg:w="6"/><text x="85.2460%" y="639.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="85.3951%" y="613" width="0.0798%" height="15" fill="rgb(250,36,12)" fg:x="1070" fg:w="1"/><text x="85.6451%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6345%" y="613" width="0.0798%" height="15" fill="rgb(207,168,14)" fg:x="1073" fg:w="1"/><text x="85.8845%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.7143%" y="613" width="0.1596%" height="15" fill="rgb(254,210,51)" fg:x="1074" fg:w="2"/><text x="85.9643%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7941%" y="597" width="0.0798%" height="15" fill="rgb(236,152,38)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.7941%" y="581" width="0.0798%" height="15" fill="rgb(240,164,36)" fg:x="1075" fg:w="1"/><text x="86.0441%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="85.8739%" y="613" width="0.0798%" height="15" fill="rgb(210,171,36)" fg:x="1076" fg:w="1"/><text x="86.1239%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.9537%" y="581" width="0.0798%" height="15" fill="rgb(254,156,34)" fg:x="1077" fg:w="1"/><text x="86.2037%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="85.9537%" y="613" width="0.1596%" height="15" fill="rgb(216,204,23)" fg:x="1077" fg:w="2"/><text x="86.2037%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.9537%" y="597" width="0.1596%" height="15" fill="rgb(230,75,38)" fg:x="1077" fg:w="2"/><text x="86.2037%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0335%" y="581" width="0.0798%" height="15" fill="rgb(248,197,25)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.0335%" y="565" width="0.0798%" height="15" fill="rgb(234,121,26)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="575.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="86.0335%" y="549" width="0.0798%" height="15" fill="rgb(220,41,36)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="559.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="86.0335%" y="533" width="0.0798%" height="15" fill="rgb(227,33,32)" fg:x="1078" fg:w="1"/><text x="86.2835%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="86.1931%" y="581" width="0.0798%" height="15" fill="rgb(208,214,54)" fg:x="1080" fg:w="1"/><text x="86.4431%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2729%" y="565" width="0.0798%" height="15" fill="rgb(205,37,38)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2729%" y="549" width="0.0798%" height="15" fill="rgb(252,2,0)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2729%" y="533" width="0.0798%" height="15" fill="rgb(212,171,10)" fg:x="1081" fg:w="1"/><text x="86.5229%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="86.3528%" y="565" width="0.1596%" height="15" fill="rgb(239,35,46)" fg:x="1082" fg:w="2"/><text x="86.6028%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.4326%" y="549" width="0.0798%" height="15" fill="rgb(209,34,42)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.4326%" y="533" width="0.0798%" height="15" fill="rgb(237,9,4)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4326%" y="517" width="0.0798%" height="15" fill="rgb(254,55,38)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4326%" y="501" width="0.0798%" height="15" fill="rgb(222,95,29)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4326%" y="485" width="0.0798%" height="15" fill="rgb(241,218,37)" fg:x="1083" fg:w="1"/><text x="86.6826%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.5922%" y="533" width="0.0798%" height="15" fill="rgb(225,89,28)" fg:x="1085" fg:w="1"/><text x="86.8422%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.6720%" y="533" width="0.0798%" height="15" fill="rgb(231,17,25)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="86.6720%" y="517" width="0.0798%" height="15" fill="rgb(206,216,48)" fg:x="1086" fg:w="1"/><text x="86.9220%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="86.8316%" y="517" width="0.0798%" height="15" fill="rgb(247,190,28)" fg:x="1088" fg:w="1"/><text x="87.0816%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.9114%" y="517" width="0.0798%" height="15" fill="rgb(216,196,12)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.9114%" y="501" width="0.0798%" height="15" fill="rgb(232,114,19)" fg:x="1089" fg:w="1"/><text x="87.1614%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="86.2729%" y="581" width="0.7981%" height="15" fill="rgb(240,60,14)" fg:x="1081" fg:w="10"/><text x="86.5229%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="86.5124%" y="565" width="0.5587%" height="15" fill="rgb(250,108,9)" fg:x="1084" fg:w="7"/><text x="86.7624%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="86.5124%" y="549" width="0.5587%" height="15" fill="rgb(227,228,21)" fg:x="1084" fg:w="7"/><text x="86.7624%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="86.7518%" y="533" width="0.3192%" height="15" fill="rgb(254,16,52)" fg:x="1087" fg:w="4"/><text x="87.0018%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9912%" y="517" width="0.0798%" height="15" fill="rgb(222,58,2)" fg:x="1090" fg:w="1"/><text x="87.2412%" y="527.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (21 samples, 1.68%)</title><rect x="85.4749%" y="645" width="1.6760%" height="15" fill="rgb(253,68,14)" fg:x="1071" fg:w="21"/><text x="85.7249%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 1.68%)</title><rect x="85.4749%" y="629" width="1.6760%" height="15" fill="rgb(226,96,17)" fg:x="1071" fg:w="21"/><text x="85.7249%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="86.1133%" y="613" width="1.0375%" height="15" fill="rgb(227,199,2)" fg:x="1079" fg:w="13"/><text x="86.3633%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.04%)</title><rect x="86.1133%" y="597" width="1.0375%" height="15" fill="rgb(228,227,48)" fg:x="1079" fg:w="13"/><text x="86.3633%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="87.0710%" y="581" width="0.0798%" height="15" fill="rgb(249,183,0)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0710%" y="565" width="0.0798%" height="15" fill="rgb(250,89,38)" fg:x="1091" fg:w="1"/><text x="87.3210%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.3105%" y="501" width="0.0798%" height="15" fill="rgb(240,227,8)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="87.3105%" y="485" width="0.0798%" height="15" fill="rgb(242,197,35)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.3105%" y="469" width="0.0798%" height="15" fill="rgb(224,37,41)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3105%" y="453" width="0.0798%" height="15" fill="rgb(236,127,7)" fg:x="1094" fg:w="1"/><text x="87.5605%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="87.4701%" y="453" width="0.0798%" height="15" fill="rgb(230,62,52)" fg:x="1096" fg:w="1"/><text x="87.7201%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="87.3903%" y="485" width="0.2394%" height="15" fill="rgb(235,114,23)" fg:x="1095" fg:w="3"/><text x="87.6403%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="87.3903%" y="469" width="0.2394%" height="15" fill="rgb(211,55,40)" fg:x="1095" fg:w="3"/><text x="87.6403%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5499%" y="453" width="0.0798%" height="15" fill="rgb(228,123,1)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5499%" y="437" width="0.0798%" height="15" fill="rgb(244,208,8)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.5499%" y="421" width="0.0798%" height="15" fill="rgb(237,118,14)" fg:x="1097" fg:w="1"/><text x="87.7999%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="87.1508%" y="549" width="0.5587%" height="15" fill="rgb(219,170,13)" fg:x="1092" fg:w="7"/><text x="87.4008%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="87.2306%" y="533" width="0.4789%" height="15" fill="rgb(212,39,43)" fg:x="1093" fg:w="6"/><text x="87.4806%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="87.3105%" y="517" width="0.3990%" height="15" fill="rgb(244,191,2)" fg:x="1094" fg:w="5"/><text x="87.5605%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="87.3903%" y="501" width="0.3192%" height="15" fill="rgb(219,201,46)" fg:x="1095" fg:w="4"/><text x="87.6403%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.6297%" y="485" width="0.0798%" height="15" fill="rgb(218,82,7)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6297%" y="469" width="0.0798%" height="15" fill="rgb(208,192,8)" fg:x="1098" fg:w="1"/><text x="87.8797%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="87.7095%" y="533" width="0.0798%" height="15" fill="rgb(244,54,32)" fg:x="1099" fg:w="1"/><text x="87.9595%" y="543.50"></text></g><g><title>engine::session::state::State::close (69 samples, 5.51%)</title><rect x="82.3623%" y="725" width="5.5068%" height="15" fill="rgb(240,43,52)" fg:x="1032" fg:w="69"/><text x="82.6123%" y="735.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (59 samples, 4.71%)</title><rect x="83.1604%" y="709" width="4.7087%" height="15" fill="rgb(233,134,29)" fg:x="1042" fg:w="59"/><text x="83.4104%" y="719.50">engin..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (57 samples, 4.55%)</title><rect x="83.3200%" y="693" width="4.5491%" height="15" fill="rgb(236,128,10)" fg:x="1044" fg:w="57"/><text x="83.5700%" y="703.50">engin..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (57 samples, 4.55%)</title><rect x="83.3200%" y="677" width="4.5491%" height="15" fill="rgb(207,46,54)" fg:x="1044" fg:w="57"/><text x="83.5700%" y="687.50">engin..</text></g><g><title>kernel::model::any_entity_changes (40 samples, 3.19%)</title><rect x="84.6768%" y="661" width="3.1923%" height="15" fill="rgb(248,140,35)" fg:x="1061" fg:w="40"/><text x="84.9268%" y="671.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="87.1508%" y="645" width="0.7183%" height="15" fill="rgb(241,103,35)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="655.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.72%)</title><rect x="87.1508%" y="629" width="0.7183%" height="15" fill="rgb(223,19,48)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="87.1508%" y="613" width="0.7183%" height="15" fill="rgb(238,177,46)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="87.1508%" y="597" width="0.7183%" height="15" fill="rgb(213,102,15)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="87.1508%" y="581" width="0.7183%" height="15" fill="rgb(254,135,52)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="87.1508%" y="565" width="0.7183%" height="15" fill="rgb(240,59,6)" fg:x="1092" fg:w="9"/><text x="87.4008%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="87.7095%" y="549" width="0.1596%" height="15" fill="rgb(207,226,5)" fg:x="1099" fg:w="2"/><text x="87.9595%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.7893%" y="533" width="0.0798%" height="15" fill="rgb(208,167,17)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.7893%" y="517" width="0.0798%" height="15" fill="rgb(254,94,10)" fg:x="1100" fg:w="1"/><text x="88.0393%" y="527.50"></text></g><g><title>engine::session::Session::close (74 samples, 5.91%)</title><rect x="82.0431%" y="741" width="5.9058%" height="15" fill="rgb(229,33,11)" fg:x="1028" fg:w="74"/><text x="82.2931%" y="751.50">engine::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="87.8691%" y="725" width="0.0798%" height="15" fill="rgb(249,145,48)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="735.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="87.8691%" y="709" width="0.0798%" height="15" fill="rgb(253,68,54)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="87.8691%" y="693" width="0.0798%" height="15" fill="rgb(223,27,42)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="87.8691%" y="677" width="0.0798%" height="15" fill="rgb(235,123,13)" fg:x="1101" fg:w="1"/><text x="88.1191%" y="687.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="87.9489%" y="613" width="0.0798%" height="15" fill="rgb(244,154,7)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.9489%" y="597" width="0.0798%" height="15" fill="rgb(214,30,25)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.9489%" y="581" width="0.0798%" height="15" fill="rgb(252,189,13)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.9489%" y="565" width="0.0798%" height="15" fill="rgb(234,27,40)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.9489%" y="549" width="0.0798%" height="15" fill="rgb(252,199,25)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.9489%" y="533" width="0.0798%" height="15" fill="rgb(234,207,20)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="87.9489%" y="517" width="0.0798%" height="15" fill="rgb(244,220,10)" fg:x="1102" fg:w="1"/><text x="88.1989%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="88.1085%" y="437" width="0.0798%" height="15" fill="rgb(247,68,23)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.1085%" y="421" width="0.0798%" height="15" fill="rgb(254,61,4)" fg:x="1104" fg:w="1"/><text x="88.3585%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1883%" y="437" width="0.0798%" height="15" fill="rgb(245,208,35)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1883%" y="421" width="0.0798%" height="15" fill="rgb(235,90,11)" fg:x="1105" fg:w="1"/><text x="88.4383%" y="431.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="88.1085%" y="517" width="0.2394%" height="15" fill="rgb(239,139,43)" fg:x="1104" fg:w="3"/><text x="88.3585%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.1085%" y="501" width="0.2394%" height="15" fill="rgb(209,187,9)" fg:x="1104" fg:w="3"/><text x="88.3585%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.1085%" y="485" width="0.2394%" height="15" fill="rgb(241,30,6)" fg:x="1104" fg:w="3"/><text x="88.3585%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="88.1085%" y="469" width="0.2394%" height="15" fill="rgb(216,104,1)" fg:x="1104" fg:w="3"/><text x="88.3585%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="88.1085%" y="453" width="0.2394%" height="15" fill="rgb(238,55,39)" fg:x="1104" fg:w="3"/><text x="88.3585%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2682%" y="437" width="0.0798%" height="15" fill="rgb(226,151,41)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2682%" y="421" width="0.0798%" height="15" fill="rgb(228,73,40)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2682%" y="405" width="0.0798%" height="15" fill="rgb(215,81,0)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2682%" y="389" width="0.0798%" height="15" fill="rgb(209,52,39)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.2682%" y="373" width="0.0798%" height="15" fill="rgb(221,127,5)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.2682%" y="357" width="0.0798%" height="15" fill="rgb(213,215,6)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="367.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="88.2682%" y="341" width="0.0798%" height="15" fill="rgb(214,118,13)" fg:x="1106" fg:w="1"/><text x="88.5182%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="88.3480%" y="485" width="0.0798%" height="15" fill="rgb(207,205,41)" fg:x="1107" fg:w="1"/><text x="88.5980%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="88.4278%" y="437" width="0.0798%" height="15" fill="rgb(218,208,45)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.4278%" y="421" width="0.0798%" height="15" fill="rgb(244,81,54)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4278%" y="405" width="0.0798%" height="15" fill="rgb(244,175,1)" fg:x="1108" fg:w="1"/><text x="88.6778%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.48%)</title><rect x="88.1085%" y="533" width="0.4789%" height="15" fill="rgb(232,128,28)" fg:x="1104" fg:w="6"/><text x="88.3585%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="88.3480%" y="517" width="0.2394%" height="15" fill="rgb(234,83,13)" fg:x="1107" fg:w="3"/><text x="88.5980%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="88.3480%" y="501" width="0.2394%" height="15" fill="rgb(233,222,35)" fg:x="1107" fg:w="3"/><text x="88.5980%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.4278%" y="485" width="0.1596%" height="15" fill="rgb(244,204,21)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.4278%" y="469" width="0.1596%" height="15" fill="rgb(225,121,40)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="88.4278%" y="453" width="0.1596%" height="15" fill="rgb(231,89,18)" fg:x="1108" fg:w="2"/><text x="88.6778%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="437" width="0.0798%" height="15" fill="rgb(205,41,50)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.5076%" y="421" width="0.0798%" height="15" fill="rgb(254,25,22)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="88.5076%" y="405" width="0.0798%" height="15" fill="rgb(208,44,21)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.5076%" y="389" width="0.0798%" height="15" fill="rgb(237,59,53)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="88.5076%" y="373" width="0.0798%" height="15" fill="rgb(233,24,36)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5076%" y="357" width="0.0798%" height="15" fill="rgb(216,92,41)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.5076%" y="341" width="0.0798%" height="15" fill="rgb(225,158,49)" fg:x="1109" fg:w="1"/><text x="88.7576%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.56%)</title><rect x="88.1085%" y="565" width="0.5587%" height="15" fill="rgb(244,11,16)" fg:x="1104" fg:w="7"/><text x="88.3585%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="88.1085%" y="549" width="0.5587%" height="15" fill="rgb(208,215,38)" fg:x="1104" fg:w="7"/><text x="88.3585%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5874%" y="533" width="0.0798%" height="15" fill="rgb(250,69,53)" fg:x="1110" fg:w="1"/><text x="88.8374%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="88.6672%" y="517" width="0.0798%" height="15" fill="rgb(240,187,52)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.6672%" y="501" width="0.0798%" height="15" fill="rgb(235,22,25)" fg:x="1111" fg:w="1"/><text x="88.9172%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (11 samples, 0.88%)</title><rect x="87.9489%" y="629" width="0.8779%" height="15" fill="rgb(213,173,22)" fg:x="1102" fg:w="11"/><text x="88.1989%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (10 samples, 0.80%)</title><rect x="88.0287%" y="613" width="0.7981%" height="15" fill="rgb(218,47,0)" fg:x="1103" fg:w="10"/><text x="88.2787%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="88.1085%" y="597" width="0.7183%" height="15" fill="rgb(254,157,11)" fg:x="1104" fg:w="9"/><text x="88.3585%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (9 samples, 0.72%)</title><rect x="88.1085%" y="581" width="0.7183%" height="15" fill="rgb(233,154,6)" fg:x="1104" fg:w="9"/><text x="88.3585%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (2 samples, 0.16%)</title><rect x="88.6672%" y="565" width="0.1596%" height="15" fill="rgb(233,207,47)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="575.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.6672%" y="549" width="0.1596%" height="15" fill="rgb(249,128,18)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.6672%" y="533" width="0.1596%" height="15" fill="rgb(211,27,42)" fg:x="1111" fg:w="2"/><text x="88.9172%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.7470%" y="517" width="0.0798%" height="15" fill="rgb(240,163,26)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="527.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7470%" y="501" width="0.0798%" height="15" fill="rgb(232,118,46)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7470%" y="485" width="0.0798%" height="15" fill="rgb(238,158,34)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="495.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7470%" y="469" width="0.0798%" height="15" fill="rgb(254,99,45)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.7470%" y="453" width="0.0798%" height="15" fill="rgb(247,205,20)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.7470%" y="437" width="0.0798%" height="15" fill="rgb(240,20,41)" fg:x="1112" fg:w="1"/><text x="88.9970%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.8268%" y="597" width="0.0798%" height="15" fill="rgb(231,22,43)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="607.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.8268%" y="581" width="0.0798%" height="15" fill="rgb(207,86,33)" fg:x="1113" fg:w="1"/><text x="89.0768%" y="591.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="88.9066%" y="597" width="0.0798%" height="15" fill="rgb(231,148,5)" fg:x="1114" fg:w="1"/><text x="89.1566%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="88.9864%" y="549" width="0.0798%" height="15" fill="rgb(253,77,28)" fg:x="1115" fg:w="1"/><text x="89.2364%" y="559.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (16 samples, 1.28%)</title><rect x="87.9489%" y="645" width="1.2769%" height="15" fill="rgb(253,227,9)" fg:x="1102" fg:w="16"/><text x="88.1989%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (5 samples, 0.40%)</title><rect x="88.8268%" y="629" width="0.3990%" height="15" fill="rgb(235,4,18)" fg:x="1113" fg:w="5"/><text x="89.0768%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="88.8268%" y="613" width="0.3990%" height="15" fill="rgb(205,206,45)" fg:x="1113" fg:w="5"/><text x="89.0768%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="88.9864%" y="597" width="0.2394%" height="15" fill="rgb(252,34,0)" fg:x="1115" fg:w="3"/><text x="89.2364%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="88.9864%" y="581" width="0.2394%" height="15" fill="rgb(213,56,7)" fg:x="1115" fg:w="3"/><text x="89.2364%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="88.9864%" y="565" width="0.2394%" height="15" fill="rgb(227,74,29)" fg:x="1115" fg:w="3"/><text x="89.2364%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0662%" y="549" width="0.1596%" height="15" fill="rgb(221,32,48)" fg:x="1116" fg:w="2"/><text x="89.3162%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.0662%" y="533" width="0.1596%" height="15" fill="rgb(230,205,25)" fg:x="1116" fg:w="2"/><text x="89.3162%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="89.0662%" y="517" width="0.1596%" height="15" fill="rgb(215,110,9)" fg:x="1116" fg:w="2"/><text x="89.3162%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.1460%" y="501" width="0.0798%" height="15" fill="rgb(245,220,47)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="89.1460%" y="485" width="0.0798%" height="15" fill="rgb(224,117,5)" fg:x="1117" fg:w="1"/><text x="89.3960%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.3057%" y="453" width="0.0798%" height="15" fill="rgb(242,208,25)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="89.3057%" y="437" width="0.0798%" height="15" fill="rgb(226,12,37)" fg:x="1119" fg:w="1"/><text x="89.5557%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="453" width="0.0798%" height="15" fill="rgb(224,221,22)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="437" width="0.0798%" height="15" fill="rgb(239,38,44)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.3855%" y="421" width="0.0798%" height="15" fill="rgb(218,25,46)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.3855%" y="405" width="0.0798%" height="15" fill="rgb(206,137,51)" fg:x="1120" fg:w="1"/><text x="89.6355%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="89.3057%" y="485" width="0.2394%" height="15" fill="rgb(233,174,3)" fg:x="1119" fg:w="3"/><text x="89.5557%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="89.3057%" y="469" width="0.2394%" height="15" fill="rgb(207,224,43)" fg:x="1119" fg:w="3"/><text x="89.5557%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4653%" y="453" width="0.0798%" height="15" fill="rgb(230,46,27)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4653%" y="437" width="0.0798%" height="15" fill="rgb(251,215,32)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4653%" y="421" width="0.0798%" height="15" fill="rgb(244,219,19)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4653%" y="405" width="0.0798%" height="15" fill="rgb(242,125,36)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.4653%" y="389" width="0.0798%" height="15" fill="rgb(251,211,12)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4653%" y="373" width="0.0798%" height="15" fill="rgb(209,179,33)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.4653%" y="357" width="0.0798%" height="15" fill="rgb(205,161,48)" fg:x="1121" fg:w="1"/><text x="89.7153%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="89.5451%" y="469" width="0.0798%" height="15" fill="rgb(241,139,8)" fg:x="1122" fg:w="1"/><text x="89.7951%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.6249%" y="453" width="0.1596%" height="15" fill="rgb(246,159,53)" fg:x="1123" fg:w="2"/><text x="89.8749%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.6249%" y="437" width="0.1596%" height="15" fill="rgb(212,62,27)" fg:x="1123" fg:w="2"/><text x="89.8749%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.6249%" y="421" width="0.1596%" height="15" fill="rgb(216,168,18)" fg:x="1123" fg:w="2"/><text x="89.8749%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.6249%" y="405" width="0.1596%" height="15" fill="rgb(228,136,50)" fg:x="1123" fg:w="2"/><text x="89.8749%" y="415.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (8 samples, 0.64%)</title><rect x="89.3057%" y="501" width="0.6385%" height="15" fill="rgb(237,19,45)" fg:x="1119" fg:w="8"/><text x="89.5557%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="89.5451%" y="485" width="0.3990%" height="15" fill="rgb(249,150,28)" fg:x="1122" fg:w="5"/><text x="89.7951%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.6249%" y="469" width="0.3192%" height="15" fill="rgb(236,179,39)" fg:x="1123" fg:w="4"/><text x="89.8749%" y="479.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.7845%" y="453" width="0.1596%" height="15" fill="rgb(250,113,27)" fg:x="1125" fg:w="2"/><text x="90.0345%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="89.9441%" y="437" width="0.0798%" height="15" fill="rgb(223,13,14)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.9441%" y="421" width="0.0798%" height="15" fill="rgb(226,68,24)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="89.9441%" y="405" width="0.0798%" height="15" fill="rgb(239,40,50)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="89.9441%" y="389" width="0.0798%" height="15" fill="rgb(209,187,0)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.9441%" y="373" width="0.0798%" height="15" fill="rgb(240,61,8)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="89.9441%" y="357" width="0.0798%" height="15" fill="rgb(236,137,5)" fg:x="1127" fg:w="1"/><text x="90.1941%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.0239%" y="405" width="0.0798%" height="15" fill="rgb(247,214,21)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.0239%" y="389" width="0.0798%" height="15" fill="rgb(244,115,25)" fg:x="1128" fg:w="1"/><text x="90.2739%" y="399.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="90.1836%" y="293" width="0.0798%" height="15" fill="rgb(230,58,38)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.1836%" y="277" width="0.0798%" height="15" fill="rgb(206,122,6)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.1836%" y="261" width="0.0798%" height="15" fill="rgb(217,135,53)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.1836%" y="245" width="0.0798%" height="15" fill="rgb(225,120,8)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.1836%" y="229" width="0.0798%" height="15" fill="rgb(226,3,30)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.1836%" y="213" width="0.0798%" height="15" fill="rgb(214,159,38)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.1836%" y="197" width="0.0798%" height="15" fill="rgb(242,182,47)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.1836%" y="181" width="0.0798%" height="15" fill="rgb(245,202,26)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.1836%" y="165" width="0.0798%" height="15" fill="rgb(226,163,3)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.1836%" y="149" width="0.0798%" height="15" fill="rgb(219,4,4)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.1836%" y="133" width="0.0798%" height="15" fill="rgb(223,85,4)" fg:x="1130" fg:w="1"/><text x="90.4336%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="90.2634%" y="213" width="0.1596%" height="15" fill="rgb(242,170,11)" fg:x="1131" fg:w="2"/><text x="90.5134%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="90.2634%" y="197" width="0.1596%" height="15" fill="rgb(221,97,42)" fg:x="1131" fg:w="2"/><text x="90.5134%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="90.3432%" y="181" width="0.0798%" height="15" fill="rgb(231,206,45)" fg:x="1132" fg:w="1"/><text x="90.5932%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="90.1836%" y="309" width="0.3192%" height="15" fill="rgb(216,23,48)" fg:x="1130" fg:w="4"/><text x="90.4336%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="90.2634%" y="293" width="0.2394%" height="15" fill="rgb(225,49,9)" fg:x="1131" fg:w="3"/><text x="90.5134%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.2634%" y="277" width="0.2394%" height="15" fill="rgb(247,24,47)" fg:x="1131" fg:w="3"/><text x="90.5134%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="90.2634%" y="261" width="0.2394%" height="15" fill="rgb(253,145,10)" fg:x="1131" fg:w="3"/><text x="90.5134%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.2634%" y="245" width="0.2394%" height="15" fill="rgb(206,62,10)" fg:x="1131" fg:w="3"/><text x="90.5134%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="90.2634%" y="229" width="0.2394%" height="15" fill="rgb(224,159,31)" fg:x="1131" fg:w="3"/><text x="90.5134%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.4230%" y="213" width="0.0798%" height="15" fill="rgb(234,184,15)" fg:x="1133" fg:w="1"/><text x="90.6730%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5826%" y="277" width="0.0798%" height="15" fill="rgb(237,101,1)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.5826%" y="261" width="0.0798%" height="15" fill="rgb(211,99,29)" fg:x="1135" fg:w="1"/><text x="90.8326%" y="271.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="90.1038%" y="325" width="0.6385%" height="15" fill="rgb(250,167,3)" fg:x="1129" fg:w="8"/><text x="90.3538%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.5028%" y="309" width="0.2394%" height="15" fill="rgb(225,58,6)" fg:x="1134" fg:w="3"/><text x="90.7528%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.5028%" y="293" width="0.2394%" height="15" fill="rgb(251,161,21)" fg:x="1134" fg:w="3"/><text x="90.7528%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6624%" y="277" width="0.0798%" height="15" fill="rgb(253,203,35)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="261" width="0.0798%" height="15" fill="rgb(214,220,52)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6624%" y="245" width="0.0798%" height="15" fill="rgb(235,216,33)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="229" width="0.0798%" height="15" fill="rgb(231,79,26)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="239.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.6624%" y="213" width="0.0798%" height="15" fill="rgb(244,218,10)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.6624%" y="197" width="0.0798%" height="15" fill="rgb(238,15,9)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.6624%" y="181" width="0.0798%" height="15" fill="rgb(235,112,15)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6624%" y="165" width="0.0798%" height="15" fill="rgb(239,126,18)" fg:x="1136" fg:w="1"/><text x="90.9124%" y="175.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="90.1038%" y="341" width="0.7183%" height="15" fill="rgb(253,171,19)" fg:x="1129" fg:w="9"/><text x="90.3538%" y="351.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="90.7422%" y="325" width="0.0798%" height="15" fill="rgb(237,218,25)" fg:x="1137" fg:w="1"/><text x="90.9922%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="90.8220%" y="309" width="0.0798%" height="15" fill="rgb(213,88,46)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="319.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.8220%" y="293" width="0.0798%" height="15" fill="rgb(222,124,54)" fg:x="1138" fg:w="1"/><text x="91.0720%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (11 samples, 0.88%)</title><rect x="90.1038%" y="405" width="0.8779%" height="15" fill="rgb(209,206,42)" fg:x="1129" fg:w="11"/><text x="90.3538%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (11 samples, 0.88%)</title><rect x="90.1038%" y="389" width="0.8779%" height="15" fill="rgb(219,25,49)" fg:x="1129" fg:w="11"/><text x="90.3538%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="90.1038%" y="373" width="0.8779%" height="15" fill="rgb(228,207,53)" fg:x="1129" fg:w="11"/><text x="90.3538%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (11 samples, 0.88%)</title><rect x="90.1038%" y="357" width="0.8779%" height="15" fill="rgb(224,3,4)" fg:x="1129" fg:w="11"/><text x="90.3538%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (2 samples, 0.16%)</title><rect x="90.8220%" y="341" width="0.1596%" height="15" fill="rgb(254,206,26)" fg:x="1138" fg:w="2"/><text x="91.0720%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="90.8220%" y="325" width="0.1596%" height="15" fill="rgb(209,4,26)" fg:x="1138" fg:w="2"/><text x="91.0720%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="90.9018%" y="309" width="0.0798%" height="15" fill="rgb(243,193,32)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9018%" y="293" width="0.0798%" height="15" fill="rgb(225,150,36)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9018%" y="277" width="0.0798%" height="15" fill="rgb(225,131,26)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.9018%" y="261" width="0.0798%" height="15" fill="rgb(236,126,12)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.9018%" y="245" width="0.0798%" height="15" fill="rgb(238,167,44)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.9018%" y="229" width="0.0798%" height="15" fill="rgb(238,153,31)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9018%" y="213" width="0.0798%" height="15" fill="rgb(254,41,51)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9018%" y="197" width="0.0798%" height="15" fill="rgb(224,100,52)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.9018%" y="181" width="0.0798%" height="15" fill="rgb(246,226,38)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.9018%" y="165" width="0.0798%" height="15" fill="rgb(252,21,43)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.9018%" y="149" width="0.0798%" height="15" fill="rgb(250,44,8)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.9018%" y="133" width="0.0798%" height="15" fill="rgb(224,200,45)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9018%" y="117" width="0.0798%" height="15" fill="rgb(208,75,52)" fg:x="1139" fg:w="1"/><text x="91.1518%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.0615%" y="373" width="0.0798%" height="15" fill="rgb(213,167,20)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0615%" y="357" width="0.0798%" height="15" fill="rgb(236,163,42)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="91.0615%" y="341" width="0.0798%" height="15" fill="rgb(210,98,31)" fg:x="1141" fg:w="1"/><text x="91.3115%" y="351.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.28%)</title><rect x="89.9441%" y="453" width="1.2769%" height="15" fill="rgb(246,166,15)" fg:x="1127" fg:w="16"/><text x="90.1941%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.20%)</title><rect x="90.0239%" y="437" width="1.1971%" height="15" fill="rgb(214,114,7)" fg:x="1128" fg:w="15"/><text x="90.2739%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.20%)</title><rect x="90.0239%" y="421" width="1.1971%" height="15" fill="rgb(217,202,34)" fg:x="1128" fg:w="15"/><text x="90.2739%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="90.9816%" y="405" width="0.2394%" height="15" fill="rgb(227,226,29)" fg:x="1140" fg:w="3"/><text x="91.2316%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="90.9816%" y="389" width="0.2394%" height="15" fill="rgb(254,65,44)" fg:x="1140" fg:w="3"/><text x="91.2316%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="91.1413%" y="373" width="0.0798%" height="15" fill="rgb(213,150,32)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="91.1413%" y="357" width="0.0798%" height="15" fill="rgb(208,86,46)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.1413%" y="341" width="0.0798%" height="15" fill="rgb(222,75,3)" fg:x="1142" fg:w="1"/><text x="91.3913%" y="351.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="91.2211%" y="437" width="0.0798%" height="15" fill="rgb(225,213,9)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.2211%" y="421" width="0.0798%" height="15" fill="rgb(209,199,10)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.2211%" y="405" width="0.0798%" height="15" fill="rgb(213,18,17)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="91.2211%" y="389" width="0.0798%" height="15" fill="rgb(243,79,44)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="91.2211%" y="373" width="0.0798%" height="15" fill="rgb(226,20,5)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.2211%" y="357" width="0.0798%" height="15" fill="rgb(217,52,31)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.2211%" y="341" width="0.0798%" height="15" fill="rgb(229,42,7)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.2211%" y="325" width="0.0798%" height="15" fill="rgb(206,118,29)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.2211%" y="309" width="0.0798%" height="15" fill="rgb(248,132,44)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.2211%" y="293" width="0.0798%" height="15" fill="rgb(231,56,33)" fg:x="1143" fg:w="1"/><text x="91.4711%" y="303.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="91.3009%" y="405" width="0.0798%" height="15" fill="rgb(208,31,11)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.3009%" y="389" width="0.0798%" height="15" fill="rgb(216,56,33)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="91.3009%" y="373" width="0.0798%" height="15" fill="rgb(213,100,0)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="91.3009%" y="357" width="0.0798%" height="15" fill="rgb(236,166,18)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (1 samples, 0.08%)</title><rect x="91.3009%" y="341" width="0.0798%" height="15" fill="rgb(251,132,12)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="91.3009%" y="325" width="0.0798%" height="15" fill="rgb(216,117,7)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.3009%" y="309" width="0.0798%" height="15" fill="rgb(243,184,8)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3009%" y="293" width="0.0798%" height="15" fill="rgb(212,91,32)" fg:x="1144" fg:w="1"/><text x="91.5509%" y="303.50"></text></g><g><title>plugins_core::tools::occupied_by (3 samples, 0.24%)</title><rect x="91.2211%" y="453" width="0.2394%" height="15" fill="rgb(224,147,15)" fg:x="1143" fg:w="3"/><text x="91.4711%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="91.3009%" y="437" width="0.1596%" height="15" fill="rgb(228,84,10)" fg:x="1144" fg:w="2"/><text x="91.5509%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.3009%" y="421" width="0.1596%" height="15" fill="rgb(221,161,22)" fg:x="1144" fg:w="2"/><text x="91.5509%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.3807%" y="405" width="0.0798%" height="15" fill="rgb(250,132,20)" fg:x="1145" fg:w="1"/><text x="91.6307%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4605%" y="405" width="0.0798%" height="15" fill="rgb(209,161,12)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.4605%" y="389" width="0.0798%" height="15" fill="rgb(232,142,42)" fg:x="1146" fg:w="1"/><text x="91.7105%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.68%)</title><rect x="89.9441%" y="469" width="1.6760%" height="15" fill="rgb(240,228,27)" fg:x="1127" fg:w="21"/><text x="90.1941%" y="479.50"></text></g><g><title>plugins_core::tools::worn_by (2 samples, 0.16%)</title><rect x="91.4605%" y="453" width="0.1596%" height="15" fill="rgb(243,0,31)" fg:x="1146" fg:w="2"/><text x="91.7105%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="91.4605%" y="437" width="0.1596%" height="15" fill="rgb(237,100,15)" fg:x="1146" fg:w="2"/><text x="91.7105%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.4605%" y="421" width="0.1596%" height="15" fill="rgb(230,26,48)" fg:x="1146" fg:w="2"/><text x="91.7105%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.5403%" y="405" width="0.0798%" height="15" fill="rgb(215,7,13)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5403%" y="389" width="0.0798%" height="15" fill="rgb(227,172,5)" fg:x="1147" fg:w="1"/><text x="91.7903%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.6201%" y="453" width="0.0798%" height="15" fill="rgb(248,206,14)" fg:x="1148" fg:w="1"/><text x="91.8701%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (24 samples, 1.92%)</title><rect x="89.9441%" y="501" width="1.9154%" height="15" fill="rgb(231,62,54)" fg:x="1127" fg:w="24"/><text x="90.1941%" y="511.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (24 samples, 1.92%)</title><rect x="89.9441%" y="485" width="1.9154%" height="15" fill="rgb(222,136,26)" fg:x="1127" fg:w="24"/><text x="90.1941%" y="495.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="91.6201%" y="469" width="0.2394%" height="15" fill="rgb(211,115,42)" fg:x="1148" fg:w="3"/><text x="91.8701%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="91.6999%" y="453" width="0.1596%" height="15" fill="rgb(234,5,17)" fg:x="1149" fg:w="2"/><text x="91.9499%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="91.6999%" y="437" width="0.1596%" height="15" fill="rgb(233,67,14)" fg:x="1149" fg:w="2"/><text x="91.9499%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="91.6999%" y="421" width="0.1596%" height="15" fill="rgb(225,133,51)" fg:x="1149" fg:w="2"/><text x="91.9499%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.7797%" y="405" width="0.0798%" height="15" fill="rgb(206,107,40)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.7797%" y="389" width="0.0798%" height="15" fill="rgb(210,56,9)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.7797%" y="373" width="0.0798%" height="15" fill="rgb(222,204,4)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7797%" y="357" width="0.0798%" height="15" fill="rgb(210,168,3)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7797%" y="341" width="0.0798%" height="15" fill="rgb(246,183,26)" fg:x="1150" fg:w="1"/><text x="92.0297%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="91.8595%" y="501" width="0.0798%" height="15" fill="rgb(228,27,31)" fg:x="1151" fg:w="1"/><text x="92.1095%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.9393%" y="405" width="0.0798%" height="15" fill="rgb(206,8,2)" fg:x="1152" fg:w="1"/><text x="92.1893%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_ok (3 samples, 0.24%)</title><rect x="91.9393%" y="501" width="0.2394%" height="15" fill="rgb(251,229,16)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="511.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="91.9393%" y="485" width="0.2394%" height="15" fill="rgb(208,84,44)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (3 samples, 0.24%)</title><rect x="91.9393%" y="469" width="0.2394%" height="15" fill="rgb(221,228,13)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.9393%" y="453" width="0.2394%" height="15" fill="rgb(248,42,47)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="91.9393%" y="437" width="0.2394%" height="15" fill="rgb(222,124,41)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="91.9393%" y="421" width="0.2394%" height="15" fill="rgb(244,191,35)" fg:x="1152" fg:w="3"/><text x="92.1893%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="92.0192%" y="405" width="0.1596%" height="15" fill="rgb(222,223,54)" fg:x="1153" fg:w="2"/><text x="92.2692%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="92.1788%" y="485" width="0.0798%" height="15" fill="rgb(248,178,42)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.1788%" y="469" width="0.0798%" height="15" fill="rgb(238,21,24)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.1788%" y="453" width="0.0798%" height="15" fill="rgb(227,134,7)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.1788%" y="437" width="0.0798%" height="15" fill="rgb(205,191,1)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.1788%" y="421" width="0.0798%" height="15" fill="rgb(222,166,30)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1788%" y="405" width="0.0798%" height="15" fill="rgb(229,94,26)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.1788%" y="389" width="0.0798%" height="15" fill="rgb(246,97,2)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1788%" y="373" width="0.0798%" height="15" fill="rgb(252,112,53)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1788%" y="357" width="0.0798%" height="15" fill="rgb(225,52,38)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.1788%" y="341" width="0.0798%" height="15" fill="rgb(215,203,24)" fg:x="1155" fg:w="1"/><text x="92.4288%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.2586%" y="357" width="0.0798%" height="15" fill="rgb(210,122,52)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="367.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="92.2586%" y="341" width="0.0798%" height="15" fill="rgb(209,161,44)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="92.2586%" y="325" width="0.0798%" height="15" fill="rgb(221,97,16)" fg:x="1156" fg:w="1"/><text x="92.5086%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="92.2586%" y="485" width="0.1596%" height="15" fill="rgb(209,87,13)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.2586%" y="469" width="0.1596%" height="15" fill="rgb(242,1,21)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="92.2586%" y="453" width="0.1596%" height="15" fill="rgb(251,170,41)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="92.2586%" y="437" width="0.1596%" height="15" fill="rgb(227,201,10)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.2586%" y="421" width="0.1596%" height="15" fill="rgb(231,100,29)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="92.2586%" y="405" width="0.1596%" height="15" fill="rgb(226,31,35)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (2 samples, 0.16%)</title><rect x="92.2586%" y="389" width="0.1596%" height="15" fill="rgb(254,99,26)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.2586%" y="373" width="0.1596%" height="15" fill="rgb(217,228,17)" fg:x="1156" fg:w="2"/><text x="92.5086%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.3384%" y="357" width="0.0798%" height="15" fill="rgb(226,132,8)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.3384%" y="341" width="0.0798%" height="15" fill="rgb(220,202,47)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3384%" y="325" width="0.0798%" height="15" fill="rgb(245,194,10)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3384%" y="309" width="0.0798%" height="15" fill="rgb(225,44,52)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3384%" y="293" width="0.0798%" height="15" fill="rgb(235,10,4)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="277" width="0.0798%" height="15" fill="rgb(244,32,23)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3384%" y="261" width="0.0798%" height="15" fill="rgb(210,115,0)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="271.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.3384%" y="245" width="0.0798%" height="15" fill="rgb(246,72,16)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="255.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.3384%" y="229" width="0.0798%" height="15" fill="rgb(223,32,10)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="239.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.3384%" y="213" width="0.0798%" height="15" fill="rgb(223,97,52)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3384%" y="197" width="0.0798%" height="15" fill="rgb(238,69,38)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.3384%" y="181" width="0.0798%" height="15" fill="rgb(226,61,1)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.3384%" y="165" width="0.0798%" height="15" fill="rgb(244,56,14)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.3384%" y="149" width="0.0798%" height="15" fill="rgb(242,164,18)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="159.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.3384%" y="133" width="0.0798%" height="15" fill="rgb(217,130,28)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="143.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.3384%" y="117" width="0.0798%" height="15" fill="rgb(218,118,52)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3384%" y="101" width="0.0798%" height="15" fill="rgb(251,112,38)" fg:x="1157" fg:w="1"/><text x="92.5884%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4980%" y="453" width="0.0798%" height="15" fill="rgb(239,14,50)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4980%" y="437" width="0.0798%" height="15" fill="rgb(228,141,54)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4980%" y="421" width="0.0798%" height="15" fill="rgb(236,128,15)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4980%" y="405" width="0.0798%" height="15" fill="rgb(206,140,54)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4980%" y="389" width="0.0798%" height="15" fill="rgb(240,0,44)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4980%" y="373" width="0.0798%" height="15" fill="rgb(243,207,23)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4980%" y="357" width="0.0798%" height="15" fill="rgb(247,202,1)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="92.4980%" y="341" width="0.0798%" height="15" fill="rgb(239,83,27)" fg:x="1159" fg:w="1"/><text x="92.7480%" y="351.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="92.4182%" y="485" width="0.2394%" height="15" fill="rgb(219,205,7)" fg:x="1158" fg:w="3"/><text x="92.6682%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="92.4182%" y="469" width="0.2394%" height="15" fill="rgb(249,184,22)" fg:x="1158" fg:w="3"/><text x="92.6682%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="92.5778%" y="453" width="0.0798%" height="15" fill="rgb(230,150,14)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="92.5778%" y="437" width="0.0798%" height="15" fill="rgb(240,118,34)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="92.5778%" y="421" width="0.0798%" height="15" fill="rgb(227,162,21)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="92.5778%" y="405" width="0.0798%" height="15" fill="rgb(219,14,9)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="92.5778%" y="389" width="0.0798%" height="15" fill="rgb(223,226,16)" fg:x="1160" fg:w="1"/><text x="92.8278%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="92.7374%" y="469" width="0.1596%" height="15" fill="rgb(246,161,37)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="92.7374%" y="453" width="0.1596%" height="15" fill="rgb(205,221,43)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="92.7374%" y="437" width="0.1596%" height="15" fill="rgb(228,216,26)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="92.7374%" y="421" width="0.1596%" height="15" fill="rgb(251,33,17)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="92.7374%" y="405" width="0.1596%" height="15" fill="rgb(246,126,36)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.7374%" y="389" width="0.1596%" height="15" fill="rgb(217,160,24)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.7374%" y="373" width="0.1596%" height="15" fill="rgb(211,64,12)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.7374%" y="357" width="0.1596%" height="15" fill="rgb(238,47,36)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.7374%" y="341" width="0.1596%" height="15" fill="rgb(210,157,42)" fg:x="1162" fg:w="2"/><text x="92.9874%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.8172%" y="325" width="0.0798%" height="15" fill="rgb(242,84,39)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8172%" y="309" width="0.0798%" height="15" fill="rgb(207,65,41)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.8172%" y="293" width="0.0798%" height="15" fill="rgb(246,97,27)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8172%" y="277" width="0.0798%" height="15" fill="rgb(229,9,43)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8172%" y="261" width="0.0798%" height="15" fill="rgb(211,82,44)" fg:x="1163" fg:w="1"/><text x="93.0672%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.8970%" y="437" width="0.0798%" height="15" fill="rgb(253,45,54)" fg:x="1164" fg:w="1"/><text x="93.1470%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="92.8970%" y="421" width="0.0798%" height="15" fill="rgb(235,94,32)" fg:x="1164" fg:w="1"/><text x="93.1470%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8970%" y="405" width="0.0798%" height="15" fill="rgb(252,143,1)" fg:x="1164" fg:w="1"/><text x="93.1470%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="92.9769%" y="421" width="0.0798%" height="15" fill="rgb(239,164,4)" fg:x="1165" fg:w="1"/><text x="93.2269%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="92.6576%" y="485" width="0.4789%" height="15" fill="rgb(222,25,39)" fg:x="1161" fg:w="6"/><text x="92.9076%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="92.8970%" y="469" width="0.2394%" height="15" fill="rgb(234,175,9)" fg:x="1164" fg:w="3"/><text x="93.1470%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="92.8970%" y="453" width="0.2394%" height="15" fill="rgb(247,200,41)" fg:x="1164" fg:w="3"/><text x="93.1470%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.9769%" y="437" width="0.1596%" height="15" fill="rgb(245,101,27)" fg:x="1165" fg:w="2"/><text x="93.2269%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.0567%" y="421" width="0.0798%" height="15" fill="rgb(221,29,7)" fg:x="1166" fg:w="1"/><text x="93.3067%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2163%" y="341" width="0.0798%" height="15" fill="rgb(240,184,10)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2163%" y="325" width="0.0798%" height="15" fill="rgb(251,85,15)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2163%" y="309" width="0.0798%" height="15" fill="rgb(252,84,16)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2163%" y="293" width="0.0798%" height="15" fill="rgb(233,136,6)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2163%" y="277" width="0.0798%" height="15" fill="rgb(226,169,30)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2163%" y="261" width="0.0798%" height="15" fill="rgb(241,83,18)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2163%" y="245" width="0.0798%" height="15" fill="rgb(239,151,5)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2163%" y="229" width="0.0798%" height="15" fill="rgb(238,56,13)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2163%" y="213" width="0.0798%" height="15" fill="rgb(224,100,0)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2163%" y="197" width="0.0798%" height="15" fill="rgb(231,168,26)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.2163%" y="181" width="0.0798%" height="15" fill="rgb(238,110,3)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.2163%" y="165" width="0.0798%" height="15" fill="rgb(216,190,1)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.2163%" y="149" width="0.0798%" height="15" fill="rgb(208,130,52)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.2163%" y="133" width="0.0798%" height="15" fill="rgb(233,74,12)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2163%" y="117" width="0.0798%" height="15" fill="rgb(248,12,15)" fg:x="1168" fg:w="1"/><text x="93.4663%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="93.2961%" y="341" width="0.0798%" height="15" fill="rgb(228,18,29)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.2961%" y="325" width="0.0798%" height="15" fill="rgb(206,153,11)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2961%" y="309" width="0.0798%" height="15" fill="rgb(216,50,30)" fg:x="1169" fg:w="1"/><text x="93.5461%" y="319.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (3 samples, 0.24%)</title><rect x="93.2163%" y="437" width="0.2394%" height="15" fill="rgb(217,20,39)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="93.2163%" y="421" width="0.2394%" height="15" fill="rgb(232,130,46)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="93.2163%" y="405" width="0.2394%" height="15" fill="rgb(233,141,43)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="93.2163%" y="389" width="0.2394%" height="15" fill="rgb(240,64,34)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.2163%" y="373" width="0.2394%" height="15" fill="rgb(230,28,31)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.2163%" y="357" width="0.2394%" height="15" fill="rgb(223,56,30)" fg:x="1168" fg:w="3"/><text x="93.4663%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.3759%" y="341" width="0.0798%" height="15" fill="rgb(248,134,16)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3759%" y="325" width="0.0798%" height="15" fill="rgb(206,202,4)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.3759%" y="309" width="0.0798%" height="15" fill="rgb(219,116,48)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3759%" y="293" width="0.0798%" height="15" fill="rgb(224,122,46)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="303.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="93.3759%" y="277" width="0.0798%" height="15" fill="rgb(219,114,47)" fg:x="1170" fg:w="1"/><text x="93.6259%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="93.1365%" y="469" width="0.3990%" height="15" fill="rgb(244,60,44)" fg:x="1167" fg:w="5"/><text x="93.3865%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="93.1365%" y="453" width="0.3990%" height="15" fill="rgb(243,226,25)" fg:x="1167" fg:w="5"/><text x="93.3865%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4557%" y="437" width="0.0798%" height="15" fill="rgb(243,101,52)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4557%" y="421" width="0.0798%" height="15" fill="rgb(207,69,25)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4557%" y="405" width="0.0798%" height="15" fill="rgb(222,204,53)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4557%" y="389" width="0.0798%" height="15" fill="rgb(234,84,49)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4557%" y="373" width="0.0798%" height="15" fill="rgb(233,77,41)" fg:x="1171" fg:w="1"/><text x="93.7057%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (54 samples, 4.31%)</title><rect x="89.3057%" y="517" width="4.3097%" height="15" fill="rgb(221,200,42)" fg:x="1119" fg:w="54"/><text x="89.5557%" y="527.50">&lt;plug..</text></g><g><title>plugins_core::location::change_location (18 samples, 1.44%)</title><rect x="92.1788%" y="501" width="1.4366%" height="15" fill="rgb(221,29,35)" fg:x="1155" fg:w="18"/><text x="92.4288%" y="511.50"></text></g><g><title>plugins_core::location::Location::set (6 samples, 0.48%)</title><rect x="93.1365%" y="485" width="0.4789%" height="15" fill="rgb(221,71,22)" fg:x="1167" fg:w="6"/><text x="93.3865%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="93.5355%" y="469" width="0.0798%" height="15" fill="rgb(216,162,23)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5355%" y="453" width="0.0798%" height="15" fill="rgb(248,32,48)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.5355%" y="437" width="0.0798%" height="15" fill="rgb(241,156,30)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="93.5355%" y="421" width="0.0798%" height="15" fill="rgb(237,196,46)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.5355%" y="405" width="0.0798%" height="15" fill="rgb(216,2,6)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.5355%" y="389" width="0.0798%" height="15" fill="rgb(214,47,16)" fg:x="1172" fg:w="1"/><text x="93.7855%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="93.6153%" y="485" width="0.0798%" height="15" fill="rgb(240,123,13)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.6153%" y="469" width="0.0798%" height="15" fill="rgb(206,47,48)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.6153%" y="453" width="0.0798%" height="15" fill="rgb(252,88,27)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6153%" y="437" width="0.0798%" height="15" fill="rgb(218,105,30)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.6153%" y="421" width="0.0798%" height="15" fill="rgb(227,52,46)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.6153%" y="405" width="0.0798%" height="15" fill="rgb(222,190,21)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.6153%" y="389" width="0.0798%" height="15" fill="rgb(205,86,20)" fg:x="1173" fg:w="1"/><text x="93.8653%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6951%" y="469" width="0.0798%" height="15" fill="rgb(233,45,1)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6951%" y="453" width="0.0798%" height="15" fill="rgb(208,39,6)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6951%" y="437" width="0.0798%" height="15" fill="rgb(211,178,22)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6951%" y="421" width="0.0798%" height="15" fill="rgb(227,112,23)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6951%" y="405" width="0.0798%" height="15" fill="rgb(214,41,4)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6951%" y="389" width="0.0798%" height="15" fill="rgb(219,144,46)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6951%" y="373" width="0.0798%" height="15" fill="rgb(253,176,50)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6951%" y="357" width="0.0798%" height="15" fill="rgb(206,123,1)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6951%" y="341" width="0.0798%" height="15" fill="rgb(250,111,32)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6951%" y="325" width="0.0798%" height="15" fill="rgb(229,17,49)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6951%" y="309" width="0.0798%" height="15" fill="rgb(250,123,19)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6951%" y="293" width="0.0798%" height="15" fill="rgb(220,124,20)" fg:x="1174" fg:w="1"/><text x="93.9451%" y="303.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (3 samples, 0.24%)</title><rect x="93.6153%" y="501" width="0.2394%" height="15" fill="rgb(242,85,25)" fg:x="1173" fg:w="3"/><text x="93.8653%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="93.6951%" y="485" width="0.1596%" height="15" fill="rgb(245,217,7)" fg:x="1174" fg:w="2"/><text x="93.9451%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.7749%" y="469" width="0.0798%" height="15" fill="rgb(242,50,25)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.7749%" y="453" width="0.0798%" height="15" fill="rgb(251,210,24)" fg:x="1175" fg:w="1"/><text x="94.0249%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8547%" y="453" width="0.0798%" height="15" fill="rgb(238,24,8)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8547%" y="437" width="0.0798%" height="15" fill="rgb(211,96,19)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8547%" y="421" width="0.0798%" height="15" fill="rgb(222,186,12)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8547%" y="405" width="0.0798%" height="15" fill="rgb(212,70,49)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8547%" y="389" width="0.0798%" height="15" fill="rgb(238,69,49)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8547%" y="373" width="0.0798%" height="15" fill="rgb(225,13,3)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8547%" y="357" width="0.0798%" height="15" fill="rgb(229,188,14)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8547%" y="341" width="0.0798%" height="15" fill="rgb(218,58,16)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8547%" y="325" width="0.0798%" height="15" fill="rgb(206,213,49)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8547%" y="309" width="0.0798%" height="15" fill="rgb(225,152,48)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8547%" y="293" width="0.0798%" height="15" fill="rgb(216,103,42)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8547%" y="277" width="0.0798%" height="15" fill="rgb(212,214,39)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8547%" y="261" width="0.0798%" height="15" fill="rgb(249,52,41)" fg:x="1176" fg:w="1"/><text x="94.1047%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.0144%" y="357" width="0.0798%" height="15" fill="rgb(212,173,53)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0144%" y="341" width="0.0798%" height="15" fill="rgb(232,222,21)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.0144%" y="325" width="0.0798%" height="15" fill="rgb(206,228,31)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.0144%" y="309" width="0.0798%" height="15" fill="rgb(231,121,16)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.0144%" y="293" width="0.0798%" height="15" fill="rgb(241,3,23)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.0144%" y="277" width="0.0798%" height="15" fill="rgb(220,68,37)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0144%" y="261" width="0.0798%" height="15" fill="rgb(212,23,49)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.0144%" y="245" width="0.0798%" height="15" fill="rgb(231,38,8)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.0144%" y="229" width="0.0798%" height="15" fill="rgb(222,137,29)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.0144%" y="213" width="0.0798%" height="15" fill="rgb(239,8,6)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.0144%" y="197" width="0.0798%" height="15" fill="rgb(224,142,47)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.0144%" y="181" width="0.0798%" height="15" fill="rgb(226,67,29)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.0144%" y="165" width="0.0798%" height="15" fill="rgb(212,144,29)" fg:x="1178" fg:w="1"/><text x="94.2644%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.0942%" y="293" width="0.0798%" height="15" fill="rgb(252,2,51)" fg:x="1179" fg:w="1"/><text x="94.3442%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="93.9346%" y="389" width="0.3192%" height="15" fill="rgb(246,103,52)" fg:x="1177" fg:w="4"/><text x="94.1846%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="93.9346%" y="373" width="0.3192%" height="15" fill="rgb(229,229,35)" fg:x="1177" fg:w="4"/><text x="94.1846%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.0942%" y="357" width="0.1596%" height="15" fill="rgb(209,83,15)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0942%" y="341" width="0.1596%" height="15" fill="rgb(218,54,16)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.0942%" y="325" width="0.1596%" height="15" fill="rgb(205,2,26)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.0942%" y="309" width="0.1596%" height="15" fill="rgb(248,180,0)" fg:x="1179" fg:w="2"/><text x="94.3442%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.1740%" y="293" width="0.0798%" height="15" fill="rgb(231,136,16)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1740%" y="277" width="0.0798%" height="15" fill="rgb(215,90,4)" fg:x="1180" fg:w="1"/><text x="94.4240%" y="287.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="93.9346%" y="437" width="0.3990%" height="15" fill="rgb(251,131,3)" fg:x="1177" fg:w="5"/><text x="94.1846%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="93.9346%" y="421" width="0.3990%" height="15" fill="rgb(244,47,21)" fg:x="1177" fg:w="5"/><text x="94.1846%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="93.9346%" y="405" width="0.3990%" height="15" fill="rgb(231,115,9)" fg:x="1177" fg:w="5"/><text x="94.1846%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.2538%" y="389" width="0.0798%" height="15" fill="rgb(241,119,20)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.2538%" y="373" width="0.0798%" height="15" fill="rgb(224,99,0)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="357" width="0.0798%" height="15" fill="rgb(219,213,18)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2538%" y="341" width="0.0798%" height="15" fill="rgb(209,71,34)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="325" width="0.0798%" height="15" fill="rgb(245,203,20)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2538%" y="309" width="0.0798%" height="15" fill="rgb(221,44,20)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2538%" y="293" width="0.0798%" height="15" fill="rgb(229,97,0)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.2538%" y="277" width="0.0798%" height="15" fill="rgb(206,56,49)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.2538%" y="261" width="0.0798%" height="15" fill="rgb(208,216,41)" fg:x="1181" fg:w="1"/><text x="94.5038%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.4134%" y="309" width="0.0798%" height="15" fill="rgb(231,31,6)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4134%" y="293" width="0.0798%" height="15" fill="rgb(239,88,23)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4134%" y="277" width="0.0798%" height="15" fill="rgb(227,111,45)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4134%" y="261" width="0.0798%" height="15" fill="rgb(207,167,18)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.4134%" y="245" width="0.0798%" height="15" fill="rgb(253,127,17)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4134%" y="229" width="0.0798%" height="15" fill="rgb(211,229,9)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.4134%" y="213" width="0.0798%" height="15" fill="rgb(249,25,14)" fg:x="1183" fg:w="1"/><text x="94.6634%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4932%" y="277" width="0.0798%" height="15" fill="rgb(237,177,4)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4932%" y="261" width="0.0798%" height="15" fill="rgb(248,163,50)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4932%" y="245" width="0.0798%" height="15" fill="rgb(246,67,42)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4932%" y="229" width="0.0798%" height="15" fill="rgb(228,136,45)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4932%" y="213" width="0.0798%" height="15" fill="rgb(218,93,4)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4932%" y="197" width="0.0798%" height="15" fill="rgb(209,82,29)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4932%" y="181" width="0.0798%" height="15" fill="rgb(213,219,38)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4932%" y="165" width="0.0798%" height="15" fill="rgb(233,212,17)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4932%" y="149" width="0.0798%" height="15" fill="rgb(225,65,3)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4932%" y="133" width="0.0798%" height="15" fill="rgb(226,25,1)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4932%" y="117" width="0.0798%" height="15" fill="rgb(229,83,27)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4932%" y="101" width="0.0798%" height="15" fill="rgb(245,80,47)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4932%" y="85" width="0.0798%" height="15" fill="rgb(213,79,27)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="95.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4932%" y="69" width="0.0798%" height="15" fill="rgb(232,38,28)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="79.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="94.4932%" y="53" width="0.0798%" height="15" fill="rgb(253,63,39)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="94.4932%" y="37" width="0.0798%" height="15" fill="rgb(222,204,17)" fg:x="1184" fg:w="1"/><text x="94.7432%" y="47.50"></text></g><g><title>plugins_core::tools::contained_by (9 samples, 0.72%)</title><rect x="93.9346%" y="453" width="0.7183%" height="15" fill="rgb(254,135,49)" fg:x="1177" fg:w="9"/><text x="94.1846%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="94.3336%" y="437" width="0.3192%" height="15" fill="rgb(226,203,24)" fg:x="1182" fg:w="4"/><text x="94.5836%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.3336%" y="421" width="0.3192%" height="15" fill="rgb(225,2,17)" fg:x="1182" fg:w="4"/><text x="94.5836%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="94.3336%" y="405" width="0.3192%" height="15" fill="rgb(234,135,43)" fg:x="1182" fg:w="4"/><text x="94.5836%" y="415.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="94.3336%" y="389" width="0.3192%" height="15" fill="rgb(224,14,46)" fg:x="1182" fg:w="4"/><text x="94.5836%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="94.3336%" y="373" width="0.3192%" height="15" fill="rgb(206,42,0)" fg:x="1182" fg:w="4"/><text x="94.5836%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="94.4134%" y="357" width="0.2394%" height="15" fill="rgb(244,38,23)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="94.4134%" y="341" width="0.2394%" height="15" fill="rgb(230,25,21)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="94.4134%" y="325" width="0.2394%" height="15" fill="rgb(252,217,28)" fg:x="1183" fg:w="3"/><text x="94.6634%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.4932%" y="309" width="0.1596%" height="15" fill="rgb(251,4,49)" fg:x="1184" fg:w="2"/><text x="94.7432%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.4932%" y="293" width="0.1596%" height="15" fill="rgb(217,126,31)" fg:x="1184" fg:w="2"/><text x="94.7432%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="94.5730%" y="277" width="0.0798%" height="15" fill="rgb(242,181,33)" fg:x="1185" fg:w="1"/><text x="94.8230%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.6528%" y="341" width="0.0798%" height="15" fill="rgb(241,108,6)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.6528%" y="325" width="0.0798%" height="15" fill="rgb(238,87,39)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.6528%" y="309" width="0.0798%" height="15" fill="rgb(244,101,49)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6528%" y="293" width="0.0798%" height="15" fill="rgb(211,43,42)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.6528%" y="277" width="0.0798%" height="15" fill="rgb(210,93,2)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6528%" y="261" width="0.0798%" height="15" fill="rgb(242,149,32)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="271.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.6528%" y="245" width="0.0798%" height="15" fill="rgb(228,1,6)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.6528%" y="229" width="0.0798%" height="15" fill="rgb(221,0,20)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6528%" y="213" width="0.0798%" height="15" fill="rgb(230,39,32)" fg:x="1186" fg:w="1"/><text x="94.9028%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="94.6528%" y="437" width="0.1596%" height="15" fill="rgb(240,89,38)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="94.6528%" y="421" width="0.1596%" height="15" fill="rgb(208,221,23)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="94.6528%" y="405" width="0.1596%" height="15" fill="rgb(220,145,29)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="94.6528%" y="389" width="0.1596%" height="15" fill="rgb(219,146,23)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="94.6528%" y="373" width="0.1596%" height="15" fill="rgb(244,114,49)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="94.6528%" y="357" width="0.1596%" height="15" fill="rgb(221,17,10)" fg:x="1186" fg:w="2"/><text x="94.9028%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="94.7326%" y="341" width="0.0798%" height="15" fill="rgb(228,133,21)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="94.7326%" y="325" width="0.0798%" height="15" fill="rgb(218,81,30)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="94.7326%" y="309" width="0.0798%" height="15" fill="rgb(240,29,36)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.7326%" y="293" width="0.0798%" height="15" fill="rgb(246,0,36)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="303.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="94.7326%" y="277" width="0.0798%" height="15" fill="rgb(217,79,8)" fg:x="1187" fg:w="1"/><text x="94.9826%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.8125%" y="309" width="0.0798%" height="15" fill="rgb(229,124,44)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.8125%" y="293" width="0.0798%" height="15" fill="rgb(210,187,22)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="303.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.8125%" y="277" width="0.0798%" height="15" fill="rgb(212,115,40)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.8125%" y="261" width="0.0798%" height="15" fill="rgb(210,2,54)" fg:x="1188" fg:w="1"/><text x="95.0625%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.8923%" y="293" width="0.0798%" height="15" fill="rgb(227,168,43)" fg:x="1189" fg:w="1"/><text x="95.1423%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.8923%" y="277" width="0.0798%" height="15" fill="rgb(249,92,8)" fg:x="1189" fg:w="1"/><text x="95.1423%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.8923%" y="261" width="0.0798%" height="15" fill="rgb(239,111,35)" fg:x="1189" fg:w="1"/><text x="95.1423%" y="271.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="94.8125%" y="405" width="0.2394%" height="15" fill="rgb(230,126,13)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="94.8125%" y="389" width="0.2394%" height="15" fill="rgb(243,116,33)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="94.8125%" y="373" width="0.2394%" height="15" fill="rgb(246,103,21)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="94.8125%" y="357" width="0.2394%" height="15" fill="rgb(237,53,26)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (3 samples, 0.24%)</title><rect x="94.8125%" y="341" width="0.2394%" height="15" fill="rgb(213,121,15)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="351.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="94.8125%" y="325" width="0.2394%" height="15" fill="rgb(251,83,35)" fg:x="1188" fg:w="3"/><text x="95.0625%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="94.8923%" y="309" width="0.1596%" height="15" fill="rgb(222,79,8)" fg:x="1189" fg:w="2"/><text x="95.1423%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.9721%" y="293" width="0.0798%" height="15" fill="rgb(217,74,36)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9721%" y="277" width="0.0798%" height="15" fill="rgb(221,14,30)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9721%" y="261" width="0.0798%" height="15" fill="rgb(216,221,5)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.9721%" y="245" width="0.0798%" height="15" fill="rgb(236,118,16)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9721%" y="229" width="0.0798%" height="15" fill="rgb(243,91,43)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.9721%" y="213" width="0.0798%" height="15" fill="rgb(231,110,7)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.9721%" y="197" width="0.0798%" height="15" fill="rgb(217,80,6)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.9721%" y="181" width="0.0798%" height="15" fill="rgb(251,116,7)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.9721%" y="165" width="0.0798%" height="15" fill="rgb(236,70,22)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.9721%" y="149" width="0.0798%" height="15" fill="rgb(245,13,10)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="159.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.9721%" y="133" width="0.0798%" height="15" fill="rgb(233,146,34)" fg:x="1190" fg:w="1"/><text x="95.2221%" y="143.50"></text></g><g><title>plugins_core::tools::occupied_by (6 samples, 0.48%)</title><rect x="94.6528%" y="453" width="0.4789%" height="15" fill="rgb(241,196,34)" fg:x="1186" fg:w="6"/><text x="94.9028%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="94.8125%" y="437" width="0.3192%" height="15" fill="rgb(207,150,20)" fg:x="1188" fg:w="4"/><text x="95.0625%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="94.8125%" y="421" width="0.3192%" height="15" fill="rgb(251,27,52)" fg:x="1188" fg:w="4"/><text x="95.0625%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0519%" y="405" width="0.0798%" height="15" fill="rgb(221,76,2)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0519%" y="389" width="0.0798%" height="15" fill="rgb(242,94,41)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.0519%" y="373" width="0.0798%" height="15" fill="rgb(245,9,8)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.0519%" y="357" width="0.0798%" height="15" fill="rgb(236,139,26)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.0519%" y="341" width="0.0798%" height="15" fill="rgb(249,11,18)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0519%" y="325" width="0.0798%" height="15" fill="rgb(206,175,35)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0519%" y="309" width="0.0798%" height="15" fill="rgb(231,3,46)" fg:x="1191" fg:w="1"/><text x="95.3019%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (17 samples, 1.36%)</title><rect x="93.8547%" y="469" width="1.3567%" height="15" fill="rgb(243,27,8)" fg:x="1176" fg:w="17"/><text x="94.1047%" y="479.50"></text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="95.1317%" y="453" width="0.0798%" height="15" fill="rgb(223,53,13)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="95.1317%" y="437" width="0.0798%" height="15" fill="rgb(248,68,15)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.1317%" y="421" width="0.0798%" height="15" fill="rgb(216,61,26)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.1317%" y="405" width="0.0798%" height="15" fill="rgb(213,201,24)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.1317%" y="389" width="0.0798%" height="15" fill="rgb(214,20,17)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.1317%" y="373" width="0.0798%" height="15" fill="rgb(206,21,46)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.1317%" y="357" width="0.0798%" height="15" fill="rgb(234,222,24)" fg:x="1192" fg:w="1"/><text x="95.3817%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.2115%" y="165" width="0.0798%" height="15" fill="rgb(221,25,26)" fg:x="1193" fg:w="1"/><text x="95.4615%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2115%" y="389" width="0.1596%" height="15" fill="rgb(241,148,26)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2115%" y="373" width="0.1596%" height="15" fill="rgb(248,119,35)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.2115%" y="357" width="0.1596%" height="15" fill="rgb(239,126,23)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.2115%" y="341" width="0.1596%" height="15" fill="rgb(247,120,25)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="95.2115%" y="325" width="0.1596%" height="15" fill="rgb(220,93,32)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="95.2115%" y="309" width="0.1596%" height="15" fill="rgb(236,46,26)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="95.2115%" y="293" width="0.1596%" height="15" fill="rgb(229,20,45)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="95.2115%" y="277" width="0.1596%" height="15" fill="rgb(225,168,41)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.2115%" y="261" width="0.1596%" height="15" fill="rgb(253,123,20)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="95.2115%" y="245" width="0.1596%" height="15" fill="rgb(244,17,29)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="95.2115%" y="229" width="0.1596%" height="15" fill="rgb(242,196,24)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="95.2115%" y="213" width="0.1596%" height="15" fill="rgb(210,113,45)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="95.2115%" y="197" width="0.1596%" height="15" fill="rgb(205,129,3)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="95.2115%" y="181" width="0.1596%" height="15" fill="rgb(232,74,10)" fg:x="1193" fg:w="2"/><text x="95.4615%" y="191.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="95.2913%" y="165" width="0.0798%" height="15" fill="rgb(251,63,43)" fg:x="1194" fg:w="1"/><text x="95.5413%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="95.3711%" y="389" width="0.0798%" height="15" fill="rgb(228,215,15)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.3711%" y="373" width="0.0798%" height="15" fill="rgb(233,179,38)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.3711%" y="357" width="0.0798%" height="15" fill="rgb(227,187,9)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.3711%" y="341" width="0.0798%" height="15" fill="rgb(231,89,27)" fg:x="1195" fg:w="1"/><text x="95.6211%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (21 samples, 1.68%)</title><rect x="93.8547%" y="501" width="1.6760%" height="15" fill="rgb(225,117,1)" fg:x="1176" fg:w="21"/><text x="94.1047%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (21 samples, 1.68%)</title><rect x="93.8547%" y="485" width="1.6760%" height="15" fill="rgb(239,120,49)" fg:x="1176" fg:w="21"/><text x="94.1047%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="95.2115%" y="469" width="0.3192%" height="15" fill="rgb(236,137,37)" fg:x="1193" fg:w="4"/><text x="95.4615%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="95.2115%" y="453" width="0.3192%" height="15" fill="rgb(239,73,42)" fg:x="1193" fg:w="4"/><text x="95.4615%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="95.2115%" y="437" width="0.3192%" height="15" fill="rgb(207,169,6)" fg:x="1193" fg:w="4"/><text x="95.4615%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="95.2115%" y="421" width="0.3192%" height="15" fill="rgb(228,171,10)" fg:x="1193" fg:w="4"/><text x="95.4615%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="95.2115%" y="405" width="0.3192%" height="15" fill="rgb(217,228,47)" fg:x="1193" fg:w="4"/><text x="95.4615%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4509%" y="389" width="0.0798%" height="15" fill="rgb(227,116,17)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4509%" y="373" width="0.0798%" height="15" fill="rgb(245,128,36)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4509%" y="357" width="0.0798%" height="15" fill="rgb(221,139,3)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4509%" y="341" width="0.0798%" height="15" fill="rgb(207,59,54)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4509%" y="325" width="0.0798%" height="15" fill="rgb(231,129,12)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4509%" y="309" width="0.0798%" height="15" fill="rgb(235,49,17)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="319.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="95.4509%" y="293" width="0.0798%" height="15" fill="rgb(229,175,11)" fg:x="1196" fg:w="1"/><text x="95.7009%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5307%" y="501" width="0.0798%" height="15" fill="rgb(206,187,30)" fg:x="1197" fg:w="1"/><text x="95.7807%" y="511.50"></text></g><g><title>plugins_core::library::actions::reply_ok (2 samples, 0.16%)</title><rect x="95.6105%" y="501" width="0.1596%" height="15" fill="rgb(214,39,19)" fg:x="1198" fg:w="2"/><text x="95.8605%" y="511.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (2 samples, 0.16%)</title><rect x="95.6105%" y="485" width="0.1596%" height="15" fill="rgb(243,92,46)" fg:x="1198" fg:w="2"/><text x="95.8605%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (2 samples, 0.16%)</title><rect x="95.6105%" y="469" width="0.1596%" height="15" fill="rgb(240,125,36)" fg:x="1198" fg:w="2"/><text x="95.8605%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (1 samples, 0.08%)</title><rect x="95.6903%" y="453" width="0.0798%" height="15" fill="rgb(217,193,45)" fg:x="1199" fg:w="1"/><text x="95.9403%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7702%" y="485" width="0.0798%" height="15" fill="rgb(230,127,16)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.7702%" y="469" width="0.0798%" height="15" fill="rgb(208,161,0)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7702%" y="453" width="0.0798%" height="15" fill="rgb(251,69,39)" fg:x="1200" fg:w="1"/><text x="96.0202%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8500%" y="453" width="0.0798%" height="15" fill="rgb(229,86,22)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8500%" y="437" width="0.0798%" height="15" fill="rgb(223,67,43)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8500%" y="421" width="0.0798%" height="15" fill="rgb(254,80,31)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.8500%" y="405" width="0.0798%" height="15" fill="rgb(225,149,52)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8500%" y="389" width="0.0798%" height="15" fill="rgb(214,169,18)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.8500%" y="373" width="0.0798%" height="15" fill="rgb(236,224,43)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.8500%" y="357" width="0.0798%" height="15" fill="rgb(251,125,34)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.8500%" y="341" width="0.0798%" height="15" fill="rgb(224,39,44)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.8500%" y="325" width="0.0798%" height="15" fill="rgb(206,111,46)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8500%" y="309" width="0.0798%" height="15" fill="rgb(227,147,50)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.8500%" y="293" width="0.0798%" height="15" fill="rgb(239,144,36)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.8500%" y="277" width="0.0798%" height="15" fill="rgb(216,17,19)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.8500%" y="261" width="0.0798%" height="15" fill="rgb(211,192,29)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.8500%" y="245" width="0.0798%" height="15" fill="rgb(238,195,20)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.8500%" y="229" width="0.0798%" height="15" fill="rgb(213,210,42)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8500%" y="213" width="0.0798%" height="15" fill="rgb(244,4,49)" fg:x="1201" fg:w="1"/><text x="96.1000%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.9298%" y="325" width="0.0798%" height="15" fill="rgb(254,106,42)" fg:x="1202" fg:w="1"/><text x="96.1798%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="95.9298%" y="357" width="0.1596%" height="15" fill="rgb(222,182,12)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.9298%" y="341" width="0.1596%" height="15" fill="rgb(228,160,15)" fg:x="1202" fg:w="2"/><text x="96.1798%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.0096%" y="325" width="0.0798%" height="15" fill="rgb(243,149,43)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0096%" y="309" width="0.0798%" height="15" fill="rgb(245,150,32)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.0096%" y="293" width="0.0798%" height="15" fill="rgb(205,43,19)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.0096%" y="277" width="0.0798%" height="15" fill="rgb(249,189,35)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0096%" y="261" width="0.0798%" height="15" fill="rgb(223,9,0)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.0096%" y="245" width="0.0798%" height="15" fill="rgb(213,142,45)" fg:x="1203" fg:w="1"/><text x="96.2596%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="96.0894%" y="325" width="0.0798%" height="15" fill="rgb(208,148,2)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.0894%" y="309" width="0.0798%" height="15" fill="rgb(207,191,42)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0894%" y="293" width="0.0798%" height="15" fill="rgb(215,218,38)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0894%" y="277" width="0.0798%" height="15" fill="rgb(223,195,24)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.0894%" y="261" width="0.0798%" height="15" fill="rgb(254,60,30)" fg:x="1204" fg:w="1"/><text x="96.3394%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.32%)</title><rect x="95.9298%" y="453" width="0.3192%" height="15" fill="rgb(223,2,9)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="95.9298%" y="437" width="0.3192%" height="15" fill="rgb(253,134,46)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.9298%" y="421" width="0.3192%" height="15" fill="rgb(206,209,20)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="95.9298%" y="405" width="0.3192%" height="15" fill="rgb(253,104,42)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="415.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="95.9298%" y="389" width="0.3192%" height="15" fill="rgb(223,47,23)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="399.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="95.9298%" y="373" width="0.3192%" height="15" fill="rgb(247,148,44)" fg:x="1202" fg:w="4"/><text x="96.1798%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.0894%" y="357" width="0.1596%" height="15" fill="rgb(221,224,16)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.0894%" y="341" width="0.1596%" height="15" fill="rgb(252,103,29)" fg:x="1204" fg:w="2"/><text x="96.3394%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.1692%" y="325" width="0.0798%" height="15" fill="rgb(244,185,34)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1692%" y="309" width="0.0798%" height="15" fill="rgb(218,18,50)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.1692%" y="293" width="0.0798%" height="15" fill="rgb(234,105,8)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.1692%" y="277" width="0.0798%" height="15" fill="rgb(249,51,19)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.1692%" y="261" width="0.0798%" height="15" fill="rgb(233,132,7)" fg:x="1205" fg:w="1"/><text x="96.4192%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.2490%" y="373" width="0.0798%" height="15" fill="rgb(229,181,43)" fg:x="1206" fg:w="1"/><text x="96.4990%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="96.2490%" y="453" width="0.1596%" height="15" fill="rgb(223,20,7)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.2490%" y="437" width="0.1596%" height="15" fill="rgb(245,13,34)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="96.2490%" y="421" width="0.1596%" height="15" fill="rgb(242,0,53)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="96.2490%" y="405" width="0.1596%" height="15" fill="rgb(233,115,19)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="96.2490%" y="389" width="0.1596%" height="15" fill="rgb(216,170,26)" fg:x="1206" fg:w="2"/><text x="96.4990%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.3288%" y="373" width="0.0798%" height="15" fill="rgb(233,13,0)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.3288%" y="357" width="0.0798%" height="15" fill="rgb(228,79,21)" fg:x="1207" fg:w="1"/><text x="96.5788%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (8 samples, 0.64%)</title><rect x="95.8500%" y="485" width="0.6385%" height="15" fill="rgb(244,17,41)" fg:x="1201" fg:w="8"/><text x="96.1000%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="95.8500%" y="469" width="0.6385%" height="15" fill="rgb(253,152,11)" fg:x="1201" fg:w="8"/><text x="96.1000%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4086%" y="453" width="0.0798%" height="15" fill="rgb(254,94,47)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4086%" y="437" width="0.0798%" height="15" fill="rgb(239,66,43)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.4086%" y="421" width="0.0798%" height="15" fill="rgb(251,25,22)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.4086%" y="405" width="0.0798%" height="15" fill="rgb(227,65,46)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.4086%" y="389" width="0.0798%" height="15" fill="rgb(240,180,32)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.4086%" y="373" width="0.0798%" height="15" fill="rgb(242,11,35)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.4086%" y="357" width="0.0798%" height="15" fill="rgb(221,41,49)" fg:x="1208" fg:w="1"/><text x="96.6586%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="453" width="0.0798%" height="15" fill="rgb(253,80,52)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="437" width="0.0798%" height="15" fill="rgb(232,152,28)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="421" width="0.0798%" height="15" fill="rgb(219,110,12)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="405" width="0.0798%" height="15" fill="rgb(218,98,43)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="96.4884%" y="389" width="0.0798%" height="15" fill="rgb(253,96,49)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.4884%" y="373" width="0.0798%" height="15" fill="rgb(238,132,17)" fg:x="1209" fg:w="1"/><text x="96.7384%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.5682%" y="453" width="0.0798%" height="15" fill="rgb(208,82,25)" fg:x="1210" fg:w="1"/><text x="96.8182%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="96.4884%" y="485" width="0.2394%" height="15" fill="rgb(237,77,13)" fg:x="1209" fg:w="3"/><text x="96.7384%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="96.4884%" y="469" width="0.2394%" height="15" fill="rgb(230,6,11)" fg:x="1209" fg:w="3"/><text x="96.7384%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="96.6480%" y="453" width="0.0798%" height="15" fill="rgb(207,29,48)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.6480%" y="437" width="0.0798%" height="15" fill="rgb(247,105,22)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.6480%" y="421" width="0.0798%" height="15" fill="rgb(223,114,44)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.6480%" y="405" width="0.0798%" height="15" fill="rgb(242,3,46)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.6480%" y="389" width="0.0798%" height="15" fill="rgb(243,197,8)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6480%" y="373" width="0.0798%" height="15" fill="rgb(238,171,27)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6480%" y="357" width="0.0798%" height="15" fill="rgb(254,144,27)" fg:x="1211" fg:w="1"/><text x="96.8980%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="96.7279%" y="421" width="0.0798%" height="15" fill="rgb(216,203,36)" fg:x="1212" fg:w="1"/><text x="96.9779%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="96.7279%" y="485" width="0.1596%" height="15" fill="rgb(247,27,26)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="96.7279%" y="469" width="0.1596%" height="15" fill="rgb(234,180,24)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="96.7279%" y="453" width="0.1596%" height="15" fill="rgb(221,50,43)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.7279%" y="437" width="0.1596%" height="15" fill="rgb(236,50,6)" fg:x="1212" fg:w="2"/><text x="96.9779%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.8077%" y="421" width="0.0798%" height="15" fill="rgb(245,172,32)" fg:x="1213" fg:w="1"/><text x="97.0577%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.8875%" y="437" width="0.0798%" height="15" fill="rgb(207,54,46)" fg:x="1214" fg:w="1"/><text x="97.1375%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0471%" y="341" width="0.0798%" height="15" fill="rgb(218,67,44)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0471%" y="325" width="0.0798%" height="15" fill="rgb(208,152,22)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0471%" y="309" width="0.0798%" height="15" fill="rgb(243,177,0)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0471%" y="293" width="0.0798%" height="15" fill="rgb(212,75,12)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0471%" y="277" width="0.0798%" height="15" fill="rgb(212,129,29)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.0471%" y="261" width="0.0798%" height="15" fill="rgb(241,229,35)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.0471%" y="245" width="0.0798%" height="15" fill="rgb(232,49,32)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.0471%" y="229" width="0.0798%" height="15" fill="rgb(243,119,48)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0471%" y="213" width="0.0798%" height="15" fill="rgb(212,205,30)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.0471%" y="197" width="0.0798%" height="15" fill="rgb(218,175,42)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.0471%" y="181" width="0.0798%" height="15" fill="rgb(230,156,27)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.0471%" y="165" width="0.0798%" height="15" fill="rgb(254,32,43)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.0471%" y="149" width="0.0798%" height="15" fill="rgb(246,89,34)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.0471%" y="133" width="0.0798%" height="15" fill="rgb(247,162,17)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="143.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.0471%" y="117" width="0.0798%" height="15" fill="rgb(219,71,37)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.0471%" y="101" width="0.0798%" height="15" fill="rgb(210,184,7)" fg:x="1216" fg:w="1"/><text x="97.2971%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="96.9673%" y="373" width="0.2394%" height="15" fill="rgb(245,16,32)" fg:x="1215" fg:w="3"/><text x="97.2173%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.9673%" y="357" width="0.2394%" height="15" fill="rgb(209,62,7)" fg:x="1215" fg:w="3"/><text x="97.2173%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.1269%" y="341" width="0.0798%" height="15" fill="rgb(215,16,15)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.1269%" y="325" width="0.0798%" height="15" fill="rgb(223,60,14)" fg:x="1217" fg:w="1"/><text x="97.3769%" y="335.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (4 samples, 0.32%)</title><rect x="96.9673%" y="437" width="0.3192%" height="15" fill="rgb(244,134,12)" fg:x="1215" fg:w="4"/><text x="97.2173%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="96.9673%" y="421" width="0.3192%" height="15" fill="rgb(224,3,41)" fg:x="1215" fg:w="4"/><text x="97.2173%" y="431.50"></text></g><g><title>kernel::model::entity::Entity::entity_ref (4 samples, 0.32%)</title><rect x="96.9673%" y="405" width="0.3192%" height="15" fill="rgb(213,84,2)" fg:x="1215" fg:w="4"/><text x="97.2173%" y="415.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="96.9673%" y="389" width="0.3192%" height="15" fill="rgb(213,216,27)" fg:x="1215" fg:w="4"/><text x="97.2173%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.2067%" y="373" width="0.0798%" height="15" fill="rgb(218,76,35)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.2067%" y="357" width="0.0798%" height="15" fill="rgb(253,89,24)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2067%" y="341" width="0.0798%" height="15" fill="rgb(217,188,40)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2067%" y="325" width="0.0798%" height="15" fill="rgb(237,79,38)" fg:x="1218" fg:w="1"/><text x="97.4567%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="96.8875%" y="469" width="0.5587%" height="15" fill="rgb(215,116,13)" fg:x="1214" fg:w="7"/><text x="97.1375%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="96.8875%" y="453" width="0.5587%" height="15" fill="rgb(249,66,35)" fg:x="1214" fg:w="7"/><text x="97.1375%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.2865%" y="437" width="0.1596%" height="15" fill="rgb(253,86,18)" fg:x="1219" fg:w="2"/><text x="97.5365%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.2865%" y="421" width="0.1596%" height="15" fill="rgb(209,175,36)" fg:x="1219" fg:w="2"/><text x="97.5365%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="97.3663%" y="405" width="0.0798%" height="15" fill="rgb(253,149,3)" fg:x="1220" fg:w="1"/><text x="97.6163%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5259%" y="421" width="0.0798%" height="15" fill="rgb(242,124,49)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.5259%" y="405" width="0.0798%" height="15" fill="rgb(219,171,24)" fg:x="1222" fg:w="1"/><text x="97.7759%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (106 samples, 8.46%)</title><rect x="89.2259%" y="629" width="8.4597%" height="15" fill="rgb(216,121,30)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="639.50">&lt;plugins_dyn..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (106 samples, 8.46%)</title><rect x="89.2259%" y="613" width="8.4597%" height="15" fill="rgb(234,165,21)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="623.50">kernel::plug..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (106 samples, 8.46%)</title><rect x="89.2259%" y="597" width="8.4597%" height="15" fill="rgb(234,103,40)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="607.50">core::ops::f..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (106 samples, 8.46%)</title><rect x="89.2259%" y="581" width="8.4597%" height="15" fill="rgb(250,137,24)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="591.50">kernel::plug..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (106 samples, 8.46%)</title><rect x="89.2259%" y="565" width="8.4597%" height="15" fill="rgb(253,22,21)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="575.50">core::ops::f..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (106 samples, 8.46%)</title><rect x="89.2259%" y="549" width="8.4597%" height="15" fill="rgb(243,22,5)" fg:x="1118" fg:w="106"/><text x="89.4759%" y="559.50">&lt;alloc::boxe..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (105 samples, 8.38%)</title><rect x="89.3057%" y="533" width="8.3799%" height="15" fill="rgb(212,56,7)" fg:x="1119" fg:w="105"/><text x="89.5557%" y="543.50">&lt;engine::ses..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (51 samples, 4.07%)</title><rect x="93.6153%" y="517" width="4.0702%" height="15" fill="rgb(223,190,49)" fg:x="1173" fg:w="51"/><text x="93.8653%" y="527.50">&lt;plu..</text></g><g><title>plugins_core::location::change_location (24 samples, 1.92%)</title><rect x="95.7702%" y="501" width="1.9154%" height="15" fill="rgb(221,110,35)" fg:x="1200" fg:w="24"/><text x="96.0202%" y="511.50">p..</text></g><g><title>plugins_core::location::Location::set (10 samples, 0.80%)</title><rect x="96.8875%" y="485" width="0.7981%" height="15" fill="rgb(212,113,34)" fg:x="1214" fg:w="10"/><text x="97.1375%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="97.4461%" y="469" width="0.2394%" height="15" fill="rgb(216,125,47)" fg:x="1221" fg:w="3"/><text x="97.6961%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="97.5259%" y="453" width="0.1596%" height="15" fill="rgb(251,112,19)" fg:x="1222" fg:w="2"/><text x="97.7759%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.5259%" y="437" width="0.1596%" height="15" fill="rgb(254,200,41)" fg:x="1222" fg:w="2"/><text x="97.7759%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="97.6057%" y="421" width="0.0798%" height="15" fill="rgb(225,17,42)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.6057%" y="405" width="0.0798%" height="15" fill="rgb(208,105,35)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6057%" y="389" width="0.0798%" height="15" fill="rgb(210,125,51)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6057%" y="373" width="0.0798%" height="15" fill="rgb(227,213,18)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.6057%" y="357" width="0.0798%" height="15" fill="rgb(221,174,32)" fg:x="1223" fg:w="1"/><text x="97.8557%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (123 samples, 9.82%)</title><rect x="87.9489%" y="709" width="9.8164%" height="15" fill="rgb(234,23,1)" fg:x="1102" fg:w="123"/><text x="88.1989%" y="719.50">&lt;engine::sessi..</text></g><g><title>kernel::plugins::mw::apply_middleware (123 samples, 9.82%)</title><rect x="87.9489%" y="693" width="9.8164%" height="15" fill="rgb(209,65,17)" fg:x="1102" fg:w="123"/><text x="88.1989%" y="703.50">kernel::plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (123 samples, 9.82%)</title><rect x="87.9489%" y="677" width="9.8164%" height="15" fill="rgb(206,224,31)" fg:x="1102" fg:w="123"/><text x="88.1989%" y="687.50">kernel::plugin..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (123 samples, 9.82%)</title><rect x="87.9489%" y="661" width="9.8164%" height="15" fill="rgb(230,20,38)" fg:x="1102" fg:w="123"/><text x="88.1989%" y="671.50">&lt;engine::sessi..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (107 samples, 8.54%)</title><rect x="89.2259%" y="645" width="8.5395%" height="15" fill="rgb(211,9,41)" fg:x="1118" fg:w="107"/><text x="89.4759%" y="655.50">kernel::plug..</text></g><g><title>&lt;plugins_dynlib::LibraryMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="97.6856%" y="629" width="0.0798%" height="15" fill="rgb(233,214,4)" fg:x="1224" fg:w="1"/><text x="97.9356%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.7654%" y="613" width="0.0798%" height="15" fill="rgb(225,60,54)" fg:x="1225" fg:w="1"/><text x="98.0154%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="97.7654%" y="597" width="0.0798%" height="15" fill="rgb(206,228,35)" fg:x="1225" fg:w="1"/><text x="98.0154%" y="607.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="97.7654%" y="661" width="0.2394%" height="15" fill="rgb(212,178,50)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.7654%" y="645" width="0.2394%" height="15" fill="rgb(206,192,33)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="97.7654%" y="629" width="0.2394%" height="15" fill="rgb(238,210,1)" fg:x="1225" fg:w="3"/><text x="98.0154%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="97.8452%" y="613" width="0.1596%" height="15" fill="rgb(205,65,52)" fg:x="1226" fg:w="2"/><text x="98.0952%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.9250%" y="597" width="0.0798%" height="15" fill="rgb(237,204,51)" fg:x="1227" fg:w="1"/><text x="98.1750%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="97.7654%" y="709" width="0.3192%" height="15" fill="rgb(213,119,51)" fg:x="1225" fg:w="4"/><text x="98.0154%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="97.7654%" y="693" width="0.3192%" height="15" fill="rgb(244,156,37)" fg:x="1225" fg:w="4"/><text x="98.0154%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="97.7654%" y="677" width="0.3192%" height="15" fill="rgb(249,96,18)" fg:x="1225" fg:w="4"/><text x="98.0154%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0048%" y="661" width="0.0798%" height="15" fill="rgb(231,65,11)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0048%" y="645" width="0.0798%" height="15" fill="rgb(240,187,2)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0048%" y="629" width="0.0798%" height="15" fill="rgb(242,121,39)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0048%" y="613" width="0.0798%" height="15" fill="rgb(233,205,18)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0048%" y="597" width="0.0798%" height="15" fill="rgb(219,67,33)" fg:x="1228" fg:w="1"/><text x="98.2548%" y="607.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="98.0846%" y="709" width="0.2394%" height="15" fill="rgb(227,84,12)" fg:x="1229" fg:w="3"/><text x="98.3346%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="98.0846%" y="693" width="0.2394%" height="15" fill="rgb(227,42,52)" fg:x="1229" fg:w="3"/><text x="98.3346%" y="703.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="98.2442%" y="677" width="0.0798%" height="15" fill="rgb(231,27,28)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="687.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="98.2442%" y="661" width="0.0798%" height="15" fill="rgb(238,42,2)" fg:x="1231" fg:w="1"/><text x="98.4942%" y="671.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="98.3240%" y="709" width="0.1596%" height="15" fill="rgb(215,15,9)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="98.3240%" y="693" width="0.1596%" height="15" fill="rgb(205,195,15)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.3240%" y="677" width="0.1596%" height="15" fill="rgb(233,143,2)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.3240%" y="661" width="0.1596%" height="15" fill="rgb(207,108,8)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.3240%" y="645" width="0.1596%" height="15" fill="rgb(214,53,21)" fg:x="1232" fg:w="2"/><text x="98.5740%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.4038%" y="629" width="0.0798%" height="15" fill="rgb(238,212,36)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4038%" y="613" width="0.0798%" height="15" fill="rgb(218,151,47)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.4038%" y="597" width="0.0798%" height="15" fill="rgb(245,160,3)" fg:x="1233" fg:w="1"/><text x="98.6538%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4836%" y="661" width="0.0798%" height="15" fill="rgb(238,106,19)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.4836%" y="645" width="0.0798%" height="15" fill="rgb(207,206,9)" fg:x="1234" fg:w="1"/><text x="98.7336%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="98.4836%" y="709" width="0.2394%" height="15" fill="rgb(254,40,10)" fg:x="1234" fg:w="3"/><text x="98.7336%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="98.4836%" y="693" width="0.2394%" height="15" fill="rgb(245,81,8)" fg:x="1234" fg:w="3"/><text x="98.7336%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="98.4836%" y="677" width="0.2394%" height="15" fill="rgb(214,119,17)" fg:x="1234" fg:w="3"/><text x="98.7336%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5634%" y="661" width="0.1596%" height="15" fill="rgb(245,100,39)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5634%" y="645" width="0.1596%" height="15" fill="rgb(243,105,16)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5634%" y="629" width="0.1596%" height="15" fill="rgb(214,53,2)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5634%" y="613" width="0.1596%" height="15" fill="rgb(251,54,50)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.5634%" y="597" width="0.1596%" height="15" fill="rgb(244,121,37)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.5634%" y="581" width="0.1596%" height="15" fill="rgb(236,158,39)" fg:x="1235" fg:w="2"/><text x="98.8134%" y="591.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="98.6433%" y="565" width="0.0798%" height="15" fill="rgb(226,25,37)" fg:x="1236" fg:w="1"/><text x="98.8933%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="98.7231%" y="677" width="0.0798%" height="15" fill="rgb(222,71,46)" fg:x="1237" fg:w="1"/><text x="98.9731%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="98.8029%" y="677" width="0.0798%" height="15" fill="rgb(209,27,29)" fg:x="1238" fg:w="1"/><text x="99.0529%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8827%" y="597" width="0.0798%" height="15" fill="rgb(210,196,17)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8827%" y="581" width="0.0798%" height="15" fill="rgb(236,76,23)" fg:x="1239" fg:w="1"/><text x="99.1327%" y="591.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="98.8827%" y="645" width="0.1596%" height="15" fill="rgb(214,33,32)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8827%" y="629" width="0.1596%" height="15" fill="rgb(243,16,26)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8827%" y="613" width="0.1596%" height="15" fill="rgb(241,30,48)" fg:x="1239" fg:w="2"/><text x="99.1327%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9625%" y="597" width="0.0798%" height="15" fill="rgb(241,106,1)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9625%" y="581" width="0.0798%" height="15" fill="rgb(230,62,29)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9625%" y="565" width="0.0798%" height="15" fill="rgb(207,166,53)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9625%" y="549" width="0.0798%" height="15" fill="rgb(244,54,13)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9625%" y="533" width="0.0798%" height="15" fill="rgb(205,144,19)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9625%" y="517" width="0.0798%" height="15" fill="rgb(225,165,45)" fg:x="1240" fg:w="1"/><text x="99.2125%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="98.8827%" y="661" width="0.3990%" height="15" fill="rgb(220,140,6)" fg:x="1239" fg:w="5"/><text x="99.1327%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.0423%" y="645" width="0.2394%" height="15" fill="rgb(234,69,14)" fg:x="1241" fg:w="3"/><text x="99.2923%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0423%" y="629" width="0.2394%" height="15" fill="rgb(243,24,33)" fg:x="1241" fg:w="3"/><text x="99.2923%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.2019%" y="613" width="0.0798%" height="15" fill="rgb(253,100,43)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2019%" y="597" width="0.0798%" height="15" fill="rgb(221,168,15)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2019%" y="581" width="0.0798%" height="15" fill="rgb(237,15,11)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2019%" y="565" width="0.0798%" height="15" fill="rgb(229,207,40)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.2019%" y="549" width="0.0798%" height="15" fill="rgb(246,125,48)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2019%" y="533" width="0.0798%" height="15" fill="rgb(231,65,10)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.2019%" y="517" width="0.0798%" height="15" fill="rgb(222,152,40)" fg:x="1243" fg:w="1"/><text x="99.4519%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.2817%" y="661" width="0.0798%" height="15" fill="rgb(214,12,30)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.2817%" y="645" width="0.0798%" height="15" fill="rgb(239,80,41)" fg:x="1244" fg:w="1"/><text x="99.5317%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="98.7231%" y="693" width="0.7183%" height="15" fill="rgb(206,175,27)" fg:x="1237" fg:w="9"/><text x="98.9731%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="98.8827%" y="677" width="0.5587%" height="15" fill="rgb(222,43,39)" fg:x="1239" fg:w="7"/><text x="99.1327%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.3615%" y="661" width="0.0798%" height="15" fill="rgb(243,47,50)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.3615%" y="645" width="0.0798%" height="15" fill="rgb(243,61,21)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.3615%" y="629" width="0.0798%" height="15" fill="rgb(208,172,5)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.3615%" y="613" width="0.0798%" height="15" fill="rgb(219,24,25)" fg:x="1245" fg:w="1"/><text x="99.6115%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4413%" y="645" width="0.0798%" height="15" fill="rgb(235,42,41)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4413%" y="629" width="0.0798%" height="15" fill="rgb(226,190,24)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4413%" y="613" width="0.0798%" height="15" fill="rgb(216,55,27)" fg:x="1246" fg:w="1"/><text x="99.6913%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.4413%" y="677" width="0.1596%" height="15" fill="rgb(231,77,14)" fg:x="1246" fg:w="2"/><text x="99.6913%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.4413%" y="661" width="0.1596%" height="15" fill="rgb(208,108,34)" fg:x="1246" fg:w="2"/><text x="99.6913%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5211%" y="645" width="0.0798%" height="15" fill="rgb(228,183,52)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5211%" y="629" width="0.0798%" height="15" fill="rgb(224,152,1)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5211%" y="613" width="0.0798%" height="15" fill="rgb(246,115,8)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5211%" y="597" width="0.0798%" height="15" fill="rgb(211,76,13)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5211%" y="581" width="0.0798%" height="15" fill="rgb(233,214,49)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5211%" y="565" width="0.0798%" height="15" fill="rgb(223,44,51)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.5211%" y="549" width="0.0798%" height="15" fill="rgb(225,111,51)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.5211%" y="533" width="0.0798%" height="15" fill="rgb(231,185,26)" fg:x="1247" fg:w="1"/><text x="99.7711%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6010%" y="645" width="0.1596%" height="15" fill="rgb(233,111,30)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6010%" y="629" width="0.1596%" height="15" fill="rgb(250,1,47)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="99.6010%" y="613" width="0.1596%" height="15" fill="rgb(254,210,3)" fg:x="1248" fg:w="2"/><text x="99.8510%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="99.7606%" y="581" width="0.1596%" height="15" fill="rgb(234,14,22)" fg:x="1250" fg:w="2"/><text x="100.0106%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.8404%" y="565" width="0.0798%" height="15" fill="rgb(221,117,4)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.8404%" y="549" width="0.0798%" height="15" fill="rgb(251,147,27)" fg:x="1251" fg:w="1"/><text x="100.0904%" y="559.50"></text></g><g><title>all (1,253 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(226,52,11)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-aff86222 (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(229,222,5)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1087.50">simple-aff86222</text></g><g><title>_start (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(232,76,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(242,108,2)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(213,165,6)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,253 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(222,24,42)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(242,170,24)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(209,110,40)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(233,146,36)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(229,33,32)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,253 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(225,55,34)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,253 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(217,32,50)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,253 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(206,110,53)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,253 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(247,25,10)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,253 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(226,67,48)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,253 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(239,73,28)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,253 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(234,200,41)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,253 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(233,76,35)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,253 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(238,166,31)" fg:x="0" fg:w="1253"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (339 samples, 27.06%)</title><rect x="72.9449%" y="789" width="27.0551%" height="15" fill="rgb(219,218,51)" fg:x="914" fg:w="339"/><text x="73.1949%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as cri..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (339 samples, 27.06%)</title><rect x="72.9449%" y="773" width="27.0551%" height="15" fill="rgb(221,82,53)" fg:x="914" fg:w="339"/><text x="73.1949%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (339 samples, 27.06%)</title><rect x="72.9449%" y="757" width="27.0551%" height="15" fill="rgb(218,179,13)" fg:x="914" fg:w="339"/><text x="73.1949%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (151 samples, 12.05%)</title><rect x="87.9489%" y="741" width="12.0511%" height="15" fill="rgb(210,53,38)" fg:x="1102" fg:w="151"/><text x="88.1989%" y="751.50">engine::session::S..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (151 samples, 12.05%)</title><rect x="87.9489%" y="725" width="12.0511%" height="15" fill="rgb(214,167,31)" fg:x="1102" fg:w="151"/><text x="88.1989%" y="735.50">engine::session::S..</text></g><g><title>kernel::model::entry::EntryResolver::world (16 samples, 1.28%)</title><rect x="98.7231%" y="709" width="1.2769%" height="15" fill="rgb(223,26,5)" fg:x="1237" fg:w="16"/><text x="98.9731%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="99.4413%" y="693" width="0.5587%" height="15" fill="rgb(218,95,23)" fg:x="1246" fg:w="7"/><text x="99.6913%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="99.6010%" y="677" width="0.3990%" height="15" fill="rgb(248,205,45)" fg:x="1248" fg:w="5"/><text x="99.8510%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="99.6010%" y="661" width="0.3990%" height="15" fill="rgb(211,76,6)" fg:x="1248" fg:w="5"/><text x="99.8510%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.7606%" y="645" width="0.2394%" height="15" fill="rgb(250,176,29)" fg:x="1250" fg:w="3"/><text x="100.0106%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.7606%" y="629" width="0.2394%" height="15" fill="rgb(240,107,31)" fg:x="1250" fg:w="3"/><text x="100.0106%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.7606%" y="613" width="0.2394%" height="15" fill="rgb(229,215,17)" fg:x="1250" fg:w="3"/><text x="100.0106%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.7606%" y="597" width="0.2394%" height="15" fill="rgb(240,79,8)" fg:x="1250" fg:w="3"/><text x="100.0106%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.9202%" y="581" width="0.0798%" height="15" fill="rgb(243,110,48)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.9202%" y="565" width="0.0798%" height="15" fill="rgb(236,201,9)" fg:x="1252" fg:w="1"/><text x="100.1702%" y="575.50"></text></g></svg></svg>