<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="1257"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0796%" y="773" width="0.0796%" height="15" fill="rgb(227,102,26)" fg:x="1" fg:w="1"/><text x="0.3296%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0796%" y="757" width="0.0796%" height="15" fill="rgb(240,183,46)" fg:x="1" fg:w="1"/><text x="0.3296%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1591%" y="741" width="0.0796%" height="15" fill="rgb(208,177,23)" fg:x="2" fg:w="1"/><text x="0.4091%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2387%" y="677" width="0.1591%" height="15" fill="rgb(216,152,5)" fg:x="3" fg:w="2"/><text x="0.4887%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6364%" y="661" width="0.0796%" height="15" fill="rgb(238,199,2)" fg:x="8" fg:w="1"/><text x="0.8864%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.7160%" y="661" width="0.1591%" height="15" fill="rgb(235,142,28)" fg:x="9" fg:w="2"/><text x="0.9660%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="1.1138%" y="629" width="0.2387%" height="15" fill="rgb(225,97,25)" fg:x="14" fg:w="3"/><text x="1.3638%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2729%" y="613" width="0.0796%" height="15" fill="rgb(208,75,46)" fg:x="16" fg:w="1"/><text x="1.5229%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.35%)</title><rect x="0.2387%" y="725" width="1.3524%" height="15" fill="rgb(240,136,15)" fg:x="3" fg:w="17"/><text x="0.4887%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.35%)</title><rect x="0.2387%" y="709" width="1.3524%" height="15" fill="rgb(235,36,27)" fg:x="3" fg:w="17"/><text x="0.4887%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.35%)</title><rect x="0.2387%" y="693" width="1.3524%" height="15" fill="rgb(231,132,23)" fg:x="3" fg:w="17"/><text x="0.4887%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.19%)</title><rect x="0.3978%" y="677" width="1.1933%" height="15" fill="rgb(205,208,20)" fg:x="5" fg:w="15"/><text x="0.6478%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="0.8751%" y="661" width="0.7160%" height="15" fill="rgb(215,26,40)" fg:x="11" fg:w="9"/><text x="1.1251%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="1.0342%" y="645" width="0.5569%" height="15" fill="rgb(238,183,34)" fg:x="13" fg:w="7"/><text x="1.2842%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="1.3524%" y="629" width="0.2387%" height="15" fill="rgb(207,96,10)" fg:x="17" fg:w="3"/><text x="1.6024%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5115%" y="613" width="0.0796%" height="15" fill="rgb(218,88,6)" fg:x="19" fg:w="1"/><text x="1.7615%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5115%" y="597" width="0.0796%" height="15" fill="rgb(217,22,49)" fg:x="19" fg:w="1"/><text x="1.7615%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.51%)</title><rect x="0.1591%" y="757" width="1.5115%" height="15" fill="rgb(240,195,14)" fg:x="2" fg:w="19"/><text x="0.4091%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (18 samples, 1.43%)</title><rect x="0.2387%" y="741" width="1.4320%" height="15" fill="rgb(229,48,27)" fg:x="3" fg:w="18"/><text x="0.4887%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="1.5911%" y="725" width="0.0796%" height="15" fill="rgb(220,194,45)" fg:x="20" fg:w="1"/><text x="1.8411%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.5911%" y="709" width="0.0796%" height="15" fill="rgb(252,60,20)" fg:x="20" fg:w="1"/><text x="1.8411%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.67%)</title><rect x="0.0796%" y="789" width="1.6706%" height="15" fill="rgb(244,169,33)" fg:x="1" fg:w="21"/><text x="0.3296%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (20 samples, 1.59%)</title><rect x="0.1591%" y="773" width="1.5911%" height="15" fill="rgb(234,141,34)" fg:x="2" fg:w="20"/><text x="0.4091%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6706%" y="757" width="0.0796%" height="15" fill="rgb(241,141,9)" fg:x="21" fg:w="1"/><text x="1.9206%" y="767.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="1.8298%" y="693" width="0.0796%" height="15" fill="rgb(246,27,36)" fg:x="23" fg:w="1"/><text x="2.0798%" y="703.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="1.9093%" y="693" width="0.0796%" height="15" fill="rgb(216,188,42)" fg:x="24" fg:w="1"/><text x="2.1593%" y="703.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="1.9093%" y="677" width="0.0796%" height="15" fill="rgb(234,205,22)" fg:x="24" fg:w="1"/><text x="2.1593%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="1.9093%" y="661" width="0.0796%" height="15" fill="rgb(210,202,32)" fg:x="24" fg:w="1"/><text x="2.1593%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="1.9093%" y="645" width="0.0796%" height="15" fill="rgb(217,0,48)" fg:x="24" fg:w="1"/><text x="2.1593%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="1.9093%" y="629" width="0.0796%" height="15" fill="rgb(207,115,37)" fg:x="24" fg:w="1"/><text x="2.1593%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="1.9093%" y="613" width="0.0796%" height="15" fill="rgb(237,221,44)" fg:x="24" fg:w="1"/><text x="2.1593%" y="623.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="1.9889%" y="677" width="0.0796%" height="15" fill="rgb(249,78,2)" fg:x="25" fg:w="1"/><text x="2.2389%" y="687.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="1.9889%" y="661" width="0.0796%" height="15" fill="rgb(211,169,23)" fg:x="25" fg:w="1"/><text x="2.2389%" y="671.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.03%)</title><rect x="2.1480%" y="629" width="1.0342%" height="15" fill="rgb(207,116,29)" fg:x="27" fg:w="13"/><text x="2.3980%" y="639.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.95%)</title><rect x="2.2275%" y="613" width="0.9547%" height="15" fill="rgb(240,84,33)" fg:x="28" fg:w="12"/><text x="2.4775%" y="623.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="3.1026%" y="597" width="0.0796%" height="15" fill="rgb(229,224,31)" fg:x="39" fg:w="1"/><text x="3.3526%" y="607.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="3.1026%" y="581" width="0.0796%" height="15" fill="rgb(227,90,31)" fg:x="39" fg:w="1"/><text x="3.3526%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.1026%" y="565" width="0.0796%" height="15" fill="rgb(249,22,41)" fg:x="39" fg:w="1"/><text x="3.3526%" y="575.50"></text></g><g><title>dlopen (15 samples, 1.19%)</title><rect x="2.0684%" y="677" width="1.1933%" height="15" fill="rgb(239,65,11)" fg:x="26" fg:w="15"/><text x="2.3184%" y="687.50"></text></g><g><title>_dl_catch_error (14 samples, 1.11%)</title><rect x="2.1480%" y="661" width="1.1138%" height="15" fill="rgb(205,5,23)" fg:x="27" fg:w="14"/><text x="2.3980%" y="671.50"></text></g><g><title>_dl_catch_exception (14 samples, 1.11%)</title><rect x="2.1480%" y="645" width="1.1138%" height="15" fill="rgb(254,78,52)" fg:x="27" fg:w="14"/><text x="2.3980%" y="655.50"></text></g><g><title>_dl_signal_exception (1 samples, 0.08%)</title><rect x="3.1822%" y="629" width="0.0796%" height="15" fill="rgb(214,156,33)" fg:x="40" fg:w="1"/><text x="3.4322%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.51%)</title><rect x="1.8298%" y="709" width="1.5115%" height="15" fill="rgb(208,20,30)" fg:x="23" fg:w="19"/><text x="2.0798%" y="719.50"></text></g><g><title>libloading::safe::Library::new (17 samples, 1.35%)</title><rect x="1.9889%" y="693" width="1.3524%" height="15" fill="rgb(223,133,18)" fg:x="25" fg:w="17"/><text x="2.2389%" y="703.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="3.2617%" y="677" width="0.0796%" height="15" fill="rgb(222,91,41)" fg:x="41" fg:w="1"/><text x="3.5117%" y="687.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="3.2617%" y="661" width="0.0796%" height="15" fill="rgb(247,137,48)" fg:x="41" fg:w="1"/><text x="3.5117%" y="671.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="3.2617%" y="645" width="0.0796%" height="15" fill="rgb(239,156,11)" fg:x="41" fg:w="1"/><text x="3.5117%" y="655.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="3.2617%" y="629" width="0.0796%" height="15" fill="rgb(244,56,26)" fg:x="41" fg:w="1"/><text x="3.5117%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (1 samples, 0.08%)</title><rect x="3.2617%" y="613" width="0.0796%" height="15" fill="rgb(205,131,49)" fg:x="41" fg:w="1"/><text x="3.5117%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.67%)</title><rect x="1.8298%" y="725" width="1.6706%" height="15" fill="rgb(224,0,2)" fg:x="23" fg:w="21"/><text x="2.0798%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="3.3413%" y="709" width="0.1591%" height="15" fill="rgb(247,59,36)" fg:x="42" fg:w="2"/><text x="3.5913%" y="719.50"></text></g><g><title>clock_gettime (2 samples, 0.16%)</title><rect x="3.3413%" y="693" width="0.1591%" height="15" fill="rgb(215,4,47)" fg:x="42" fg:w="2"/><text x="3.5913%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="3.5004%" y="693" width="0.0796%" height="15" fill="rgb(242,72,42)" fg:x="44" fg:w="1"/><text x="3.7504%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (25 samples, 1.99%)</title><rect x="1.7502%" y="789" width="1.9889%" height="15" fill="rgb(232,145,44)" fg:x="22" fg:w="25"/><text x="2.0002%" y="799.50">&lt;..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (25 samples, 1.99%)</title><rect x="1.7502%" y="773" width="1.9889%" height="15" fill="rgb(205,108,43)" fg:x="22" fg:w="25"/><text x="2.0002%" y="783.50">e..</text></g><g><title>engine::session::Session::new (25 samples, 1.99%)</title><rect x="1.7502%" y="757" width="1.9889%" height="15" fill="rgb(215,190,17)" fg:x="22" fg:w="25"/><text x="2.0002%" y="767.50">e..</text></g><g><title>engine::session::Session::initialize (25 samples, 1.99%)</title><rect x="1.7502%" y="741" width="1.9889%" height="15" fill="rgb(223,90,34)" fg:x="22" fg:w="25"/><text x="2.0002%" y="751.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="3.5004%" y="725" width="0.2387%" height="15" fill="rgb(216,25,0)" fg:x="44" fg:w="3"/><text x="3.7504%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.5004%" y="709" width="0.2387%" height="15" fill="rgb(223,51,28)" fg:x="44" fg:w="3"/><text x="3.7504%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.5800%" y="693" width="0.1591%" height="15" fill="rgb(227,131,7)" fg:x="45" fg:w="2"/><text x="3.8300%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.5800%" y="677" width="0.1591%" height="15" fill="rgb(216,72,36)" fg:x="45" fg:w="2"/><text x="3.8300%" y="687.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="3.5800%" y="661" width="0.1591%" height="15" fill="rgb(243,158,40)" fg:x="45" fg:w="2"/><text x="3.8300%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="3.7391%" y="773" width="0.0796%" height="15" fill="rgb(218,60,54)" fg:x="47" fg:w="1"/><text x="3.9891%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.7391%" y="757" width="0.0796%" height="15" fill="rgb(230,15,46)" fg:x="47" fg:w="1"/><text x="3.9891%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="3.8186%" y="773" width="0.0796%" height="15" fill="rgb(250,22,26)" fg:x="48" fg:w="1"/><text x="4.0686%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.8186%" y="757" width="0.0796%" height="15" fill="rgb(239,194,40)" fg:x="48" fg:w="1"/><text x="4.0686%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.8982%" y="725" width="0.1591%" height="15" fill="rgb(219,62,9)" fg:x="49" fg:w="2"/><text x="4.1482%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.9777%" y="709" width="0.0796%" height="15" fill="rgb(228,45,21)" fg:x="50" fg:w="1"/><text x="4.2277%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.9777%" y="693" width="0.0796%" height="15" fill="rgb(242,56,44)" fg:x="50" fg:w="1"/><text x="4.2277%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.9777%" y="677" width="0.0796%" height="15" fill="rgb(239,170,14)" fg:x="50" fg:w="1"/><text x="4.2277%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="4.1368%" y="501" width="0.0796%" height="15" fill="rgb(236,150,13)" fg:x="52" fg:w="1"/><text x="4.3868%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="4.0573%" y="725" width="0.2387%" height="15" fill="rgb(228,15,30)" fg:x="51" fg:w="3"/><text x="4.3073%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="4.0573%" y="709" width="0.2387%" height="15" fill="rgb(217,43,28)" fg:x="51" fg:w="3"/><text x="4.3073%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="4.0573%" y="693" width="0.2387%" height="15" fill="rgb(246,223,1)" fg:x="51" fg:w="3"/><text x="4.3073%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.1368%" y="677" width="0.1591%" height="15" fill="rgb(247,103,7)" fg:x="52" fg:w="2"/><text x="4.3868%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="4.1368%" y="661" width="0.1591%" height="15" fill="rgb(205,105,39)" fg:x="52" fg:w="2"/><text x="4.3868%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="4.1368%" y="645" width="0.1591%" height="15" fill="rgb(216,134,18)" fg:x="52" fg:w="2"/><text x="4.3868%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="4.1368%" y="629" width="0.1591%" height="15" fill="rgb(226,139,50)" fg:x="52" fg:w="2"/><text x="4.3868%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="4.1368%" y="613" width="0.1591%" height="15" fill="rgb(251,152,38)" fg:x="52" fg:w="2"/><text x="4.3868%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="4.1368%" y="597" width="0.1591%" height="15" fill="rgb(222,63,15)" fg:x="52" fg:w="2"/><text x="4.3868%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="4.1368%" y="581" width="0.1591%" height="15" fill="rgb(212,198,28)" fg:x="52" fg:w="2"/><text x="4.3868%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="4.1368%" y="565" width="0.1591%" height="15" fill="rgb(216,93,38)" fg:x="52" fg:w="2"/><text x="4.3868%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="4.1368%" y="549" width="0.1591%" height="15" fill="rgb(247,202,44)" fg:x="52" fg:w="2"/><text x="4.3868%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="4.1368%" y="533" width="0.1591%" height="15" fill="rgb(237,204,46)" fg:x="52" fg:w="2"/><text x="4.3868%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="4.1368%" y="517" width="0.1591%" height="15" fill="rgb(224,98,48)" fg:x="52" fg:w="2"/><text x="4.3868%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2164%" y="501" width="0.0796%" height="15" fill="rgb(247,105,21)" fg:x="53" fg:w="1"/><text x="4.4664%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="4.4551%" y="661" width="0.0796%" height="15" fill="rgb(212,137,52)" fg:x="56" fg:w="1"/><text x="4.7051%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.4551%" y="645" width="0.0796%" height="15" fill="rgb(223,76,33)" fg:x="56" fg:w="1"/><text x="4.7051%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.4551%" y="629" width="0.0796%" height="15" fill="rgb(209,156,27)" fg:x="56" fg:w="1"/><text x="4.7051%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="4.4551%" y="677" width="0.1591%" height="15" fill="rgb(249,81,54)" fg:x="56" fg:w="2"/><text x="4.7051%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.5346%" y="661" width="0.0796%" height="15" fill="rgb(241,46,29)" fg:x="57" fg:w="1"/><text x="4.7846%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.5346%" y="645" width="0.0796%" height="15" fill="rgb(213,193,39)" fg:x="57" fg:w="1"/><text x="4.7846%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="4.6937%" y="661" width="0.4773%" height="15" fill="rgb(214,85,16)" fg:x="59" fg:w="6"/><text x="4.9437%" y="671.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="4.6937%" y="645" width="0.4773%" height="15" fill="rgb(216,184,17)" fg:x="59" fg:w="6"/><text x="4.9437%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.0119%" y="629" width="0.1591%" height="15" fill="rgb(254,219,29)" fg:x="63" fg:w="2"/><text x="5.2619%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.0119%" y="613" width="0.1591%" height="15" fill="rgb(209,148,34)" fg:x="63" fg:w="2"/><text x="5.2619%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.0915%" y="597" width="0.0796%" height="15" fill="rgb(253,215,11)" fg:x="64" fg:w="1"/><text x="5.3415%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.2506%" y="597" width="0.0796%" height="15" fill="rgb(232,126,20)" fg:x="66" fg:w="1"/><text x="5.5006%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2506%" y="581" width="0.0796%" height="15" fill="rgb(248,118,51)" fg:x="66" fg:w="1"/><text x="5.5006%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2506%" y="565" width="0.0796%" height="15" fill="rgb(226,121,21)" fg:x="66" fg:w="1"/><text x="5.5006%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.2506%" y="645" width="0.1591%" height="15" fill="rgb(216,128,16)" fg:x="66" fg:w="2"/><text x="5.5006%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.2506%" y="629" width="0.1591%" height="15" fill="rgb(205,17,9)" fg:x="66" fg:w="2"/><text x="5.5006%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.2506%" y="613" width="0.1591%" height="15" fill="rgb(206,197,21)" fg:x="66" fg:w="2"/><text x="5.5006%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3302%" y="597" width="0.0796%" height="15" fill="rgb(212,202,9)" fg:x="67" fg:w="1"/><text x="5.5802%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="5.4097%" y="645" width="0.2387%" height="15" fill="rgb(241,131,50)" fg:x="68" fg:w="3"/><text x="5.6597%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5688%" y="629" width="0.0796%" height="15" fill="rgb(228,115,51)" fg:x="70" fg:w="1"/><text x="5.8188%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.5688%" y="613" width="0.0796%" height="15" fill="rgb(237,209,8)" fg:x="70" fg:w="1"/><text x="5.8188%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.7279%" y="629" width="0.0796%" height="15" fill="rgb(241,121,28)" fg:x="72" fg:w="1"/><text x="5.9779%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.8075%" y="613" width="0.1591%" height="15" fill="rgb(238,194,51)" fg:x="73" fg:w="2"/><text x="6.0575%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.8075%" y="597" width="0.1591%" height="15" fill="rgb(208,41,39)" fg:x="73" fg:w="2"/><text x="6.0575%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.8870%" y="581" width="0.0796%" height="15" fill="rgb(223,95,44)" fg:x="74" fg:w="1"/><text x="6.1370%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.8870%" y="565" width="0.0796%" height="15" fill="rgb(253,98,40)" fg:x="74" fg:w="1"/><text x="6.1370%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.9666%" y="597" width="0.0796%" height="15" fill="rgb(210,5,12)" fg:x="75" fg:w="1"/><text x="6.2166%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.9666%" y="581" width="0.0796%" height="15" fill="rgb(233,201,23)" fg:x="75" fg:w="1"/><text x="6.2166%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="6.0461%" y="581" width="0.2387%" height="15" fill="rgb(251,68,15)" fg:x="76" fg:w="3"/><text x="6.2961%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.0461%" y="565" width="0.2387%" height="15" fill="rgb(243,10,46)" fg:x="76" fg:w="3"/><text x="6.2961%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="6.0461%" y="549" width="0.2387%" height="15" fill="rgb(253,130,44)" fg:x="76" fg:w="3"/><text x="6.2961%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="6.0461%" y="533" width="0.2387%" height="15" fill="rgb(244,5,26)" fg:x="76" fg:w="3"/><text x="6.2961%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="6.0461%" y="517" width="0.2387%" height="15" fill="rgb(220,126,20)" fg:x="76" fg:w="3"/><text x="6.2961%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="6.0461%" y="501" width="0.2387%" height="15" fill="rgb(212,188,29)" fg:x="76" fg:w="3"/><text x="6.2961%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="6.0461%" y="485" width="0.2387%" height="15" fill="rgb(227,194,48)" fg:x="76" fg:w="3"/><text x="6.2961%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="5.9666%" y="613" width="0.3978%" height="15" fill="rgb(245,64,28)" fg:x="75" fg:w="5"/><text x="6.2166%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="6.0461%" y="597" width="0.3182%" height="15" fill="rgb(205,44,7)" fg:x="76" fg:w="4"/><text x="6.2961%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.2848%" y="581" width="0.0796%" height="15" fill="rgb(213,193,11)" fg:x="79" fg:w="1"/><text x="6.5348%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.2848%" y="565" width="0.0796%" height="15" fill="rgb(238,157,6)" fg:x="79" fg:w="1"/><text x="6.5348%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="5.6484%" y="645" width="0.7955%" height="15" fill="rgb(222,73,7)" fg:x="71" fg:w="10"/><text x="5.8984%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="5.8075%" y="629" width="0.6364%" height="15" fill="rgb(224,78,15)" fg:x="73" fg:w="8"/><text x="6.0575%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.3644%" y="613" width="0.0796%" height="15" fill="rgb(218,149,46)" fg:x="80" fg:w="1"/><text x="6.6144%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.43%)</title><rect x="5.1710%" y="661" width="1.4320%" height="15" fill="rgb(218,175,44)" fg:x="65" fg:w="18"/><text x="5.4210%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4439%" y="645" width="0.1591%" height="15" fill="rgb(215,183,45)" fg:x="81" fg:w="2"/><text x="6.6939%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5235%" y="629" width="0.0796%" height="15" fill="rgb(226,116,37)" fg:x="82" fg:w="1"/><text x="6.7735%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.5235%" y="613" width="0.0796%" height="15" fill="rgb(252,224,12)" fg:x="82" fg:w="1"/><text x="6.7735%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.31%)</title><rect x="4.4551%" y="693" width="2.3071%" height="15" fill="rgb(232,212,21)" fg:x="56" fg:w="29"/><text x="4.7051%" y="703.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.15%)</title><rect x="4.6142%" y="677" width="2.1480%" height="15" fill="rgb(226,191,16)" fg:x="58" fg:w="27"/><text x="4.8642%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.6030%" y="661" width="0.1591%" height="15" fill="rgb(231,156,11)" fg:x="83" fg:w="2"/><text x="6.8530%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6826%" y="645" width="0.0796%" height="15" fill="rgb(225,134,49)" fg:x="84" fg:w="1"/><text x="6.9326%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.6826%" y="629" width="0.0796%" height="15" fill="rgb(254,55,32)" fg:x="84" fg:w="1"/><text x="6.9326%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.7621%" y="661" width="0.0796%" height="15" fill="rgb(242,195,29)" fg:x="85" fg:w="1"/><text x="7.0121%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.8417%" y="645" width="0.0796%" height="15" fill="rgb(210,155,20)" fg:x="86" fg:w="1"/><text x="7.0917%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.9212%" y="645" width="0.0796%" height="15" fill="rgb(243,170,23)" fg:x="87" fg:w="1"/><text x="7.1712%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.9212%" y="629" width="0.0796%" height="15" fill="rgb(242,197,51)" fg:x="87" fg:w="1"/><text x="7.1712%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="7.0804%" y="629" width="0.1591%" height="15" fill="rgb(248,48,13)" fg:x="89" fg:w="2"/><text x="7.3304%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1599%" y="613" width="0.0796%" height="15" fill="rgb(221,185,15)" fg:x="90" fg:w="1"/><text x="7.4099%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="7.2395%" y="613" width="0.0796%" height="15" fill="rgb(244,49,7)" fg:x="91" fg:w="1"/><text x="7.4895%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="7.2395%" y="597" width="0.0796%" height="15" fill="rgb(213,182,52)" fg:x="91" fg:w="1"/><text x="7.4895%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2395%" y="581" width="0.0796%" height="15" fill="rgb(209,15,45)" fg:x="91" fg:w="1"/><text x="7.4895%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="6.7621%" y="693" width="0.7160%" height="15" fill="rgb(233,23,44)" fg:x="85" fg:w="9"/><text x="7.0121%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="6.7621%" y="677" width="0.7160%" height="15" fill="rgb(220,182,30)" fg:x="85" fg:w="9"/><text x="7.0121%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="6.8417%" y="661" width="0.6364%" height="15" fill="rgb(219,116,33)" fg:x="86" fg:w="8"/><text x="7.0917%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="7.0008%" y="645" width="0.4773%" height="15" fill="rgb(231,15,21)" fg:x="88" fg:w="6"/><text x="7.2508%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="7.2395%" y="629" width="0.2387%" height="15" fill="rgb(238,119,25)" fg:x="91" fg:w="3"/><text x="7.4895%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.3190%" y="613" width="0.1591%" height="15" fill="rgb(232,30,39)" fg:x="92" fg:w="2"/><text x="7.5690%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="7.3190%" y="597" width="0.1591%" height="15" fill="rgb(241,26,30)" fg:x="92" fg:w="2"/><text x="7.5690%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.3986%" y="581" width="0.0796%" height="15" fill="rgb(234,154,4)" fg:x="93" fg:w="1"/><text x="7.6486%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="7.5577%" y="645" width="0.3182%" height="15" fill="rgb(229,199,39)" fg:x="95" fg:w="4"/><text x="7.8077%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="7.7168%" y="629" width="0.1591%" height="15" fill="rgb(236,213,10)" fg:x="97" fg:w="2"/><text x="7.9668%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="7.7963%" y="613" width="0.0796%" height="15" fill="rgb(247,28,19)" fg:x="98" fg:w="1"/><text x="8.0463%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="7.8759%" y="645" width="0.0796%" height="15" fill="rgb(239,199,24)" fg:x="99" fg:w="1"/><text x="8.1259%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.0350%" y="613" width="0.0796%" height="15" fill="rgb(246,122,13)" fg:x="101" fg:w="1"/><text x="8.2850%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="7.9554%" y="645" width="0.2387%" height="15" fill="rgb(210,203,29)" fg:x="100" fg:w="3"/><text x="8.2054%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="8.0350%" y="629" width="0.1591%" height="15" fill="rgb(218,4,50)" fg:x="101" fg:w="2"/><text x="8.2850%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1146%" y="613" width="0.0796%" height="15" fill="rgb(236,142,48)" fg:x="102" fg:w="1"/><text x="8.3646%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.1146%" y="597" width="0.0796%" height="15" fill="rgb(245,173,2)" fg:x="102" fg:w="1"/><text x="8.3646%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.1146%" y="581" width="0.0796%" height="15" fill="rgb(244,196,18)" fg:x="102" fg:w="1"/><text x="8.3646%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2737%" y="597" width="0.0796%" height="15" fill="rgb(221,27,33)" fg:x="104" fg:w="1"/><text x="8.5237%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.2737%" y="581" width="0.0796%" height="15" fill="rgb(210,206,16)" fg:x="104" fg:w="1"/><text x="8.5237%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.2737%" y="565" width="0.0796%" height="15" fill="rgb(238,161,34)" fg:x="104" fg:w="1"/><text x="8.5237%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="8.3532%" y="597" width="0.2387%" height="15" fill="rgb(243,118,39)" fg:x="105" fg:w="3"/><text x="8.6032%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="8.3532%" y="581" width="0.2387%" height="15" fill="rgb(234,126,9)" fg:x="105" fg:w="3"/><text x="8.6032%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="8.5123%" y="565" width="0.0796%" height="15" fill="rgb(234,167,42)" fg:x="107" fg:w="1"/><text x="8.7623%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.5123%" y="549" width="0.0796%" height="15" fill="rgb(238,54,48)" fg:x="107" fg:w="1"/><text x="8.7623%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.5123%" y="533" width="0.0796%" height="15" fill="rgb(226,105,2)" fg:x="107" fg:w="1"/><text x="8.7623%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5123%" y="517" width="0.0796%" height="15" fill="rgb(223,95,23)" fg:x="107" fg:w="1"/><text x="8.7623%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7510%" y="565" width="0.0796%" height="15" fill="rgb(249,212,19)" fg:x="110" fg:w="1"/><text x="9.0010%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.9897%" y="517" width="0.0796%" height="15" fill="rgb(234,158,54)" fg:x="113" fg:w="1"/><text x="9.2397%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="9.0692%" y="485" width="0.0796%" height="15" fill="rgb(247,114,32)" fg:x="114" fg:w="1"/><text x="9.3192%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.0692%" y="469" width="0.0796%" height="15" fill="rgb(250,68,44)" fg:x="114" fg:w="1"/><text x="9.3192%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="9.0692%" y="453" width="0.0796%" height="15" fill="rgb(242,3,15)" fg:x="114" fg:w="1"/><text x="9.3192%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="9.1488%" y="485" width="0.0796%" height="15" fill="rgb(223,110,32)" fg:x="115" fg:w="1"/><text x="9.3988%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="9.0692%" y="517" width="0.2387%" height="15" fill="rgb(216,26,54)" fg:x="114" fg:w="3"/><text x="9.3192%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="9.0692%" y="501" width="0.2387%" height="15" fill="rgb(209,145,42)" fg:x="114" fg:w="3"/><text x="9.3192%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.2283%" y="485" width="0.0796%" height="15" fill="rgb(240,111,53)" fg:x="116" fg:w="1"/><text x="9.4783%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="8.9897%" y="549" width="0.4773%" height="15" fill="rgb(209,101,4)" fg:x="113" fg:w="6"/><text x="9.2397%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="8.9897%" y="533" width="0.4773%" height="15" fill="rgb(231,74,29)" fg:x="113" fg:w="6"/><text x="9.2397%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.3079%" y="517" width="0.1591%" height="15" fill="rgb(223,12,12)" fg:x="117" fg:w="2"/><text x="9.5579%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="8.6714%" y="581" width="0.8751%" height="15" fill="rgb(207,162,2)" fg:x="109" fg:w="11"/><text x="8.9214%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="8.8305%" y="565" width="0.7160%" height="15" fill="rgb(230,152,0)" fg:x="111" fg:w="9"/><text x="9.0805%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4670%" y="549" width="0.0796%" height="15" fill="rgb(254,156,19)" fg:x="119" fg:w="1"/><text x="9.7170%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.51%)</title><rect x="8.2737%" y="613" width="1.5115%" height="15" fill="rgb(250,28,0)" fg:x="104" fg:w="19"/><text x="8.5237%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.19%)</title><rect x="8.5919%" y="597" width="1.1933%" height="15" fill="rgb(253,27,5)" fg:x="108" fg:w="15"/><text x="8.8419%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="9.5465%" y="581" width="0.2387%" height="15" fill="rgb(244,154,7)" fg:x="120" fg:w="3"/><text x="9.7965%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 1.67%)</title><rect x="8.1941%" y="629" width="1.6706%" height="15" fill="rgb(242,108,21)" fg:x="103" fg:w="21"/><text x="8.4441%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="9.7852%" y="613" width="0.0796%" height="15" fill="rgb(254,200,38)" fg:x="123" fg:w="1"/><text x="10.0352%" y="623.50"></text></g><g><title>engine::session::Session::flush (76 samples, 6.05%)</title><rect x="3.8982%" y="773" width="6.0461%" height="15" fill="rgb(250,145,41)" fg:x="49" fg:w="76"/><text x="4.1482%" y="783.50">engine::..</text></g><g><title>engine::session::state::State::close (76 samples, 6.05%)</title><rect x="3.8982%" y="757" width="6.0461%" height="15" fill="rgb(235,136,31)" fg:x="49" fg:w="76"/><text x="4.1482%" y="767.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (76 samples, 6.05%)</title><rect x="3.8982%" y="741" width="6.0461%" height="15" fill="rgb(215,13,18)" fg:x="49" fg:w="76"/><text x="4.1482%" y="751.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (71 samples, 5.65%)</title><rect x="4.2959%" y="725" width="5.6484%" height="15" fill="rgb(238,199,12)" fg:x="54" fg:w="71"/><text x="4.5459%" y="735.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (70 samples, 5.57%)</title><rect x="4.3755%" y="709" width="5.5688%" height="15" fill="rgb(242,179,49)" fg:x="55" fg:w="70"/><text x="4.6255%" y="719.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (31 samples, 2.47%)</title><rect x="7.4781%" y="693" width="2.4662%" height="15" fill="rgb(214,10,44)" fg:x="94" fg:w="31"/><text x="7.7281%" y="703.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (31 samples, 2.47%)</title><rect x="7.4781%" y="677" width="2.4662%" height="15" fill="rgb(229,181,11)" fg:x="94" fg:w="31"/><text x="7.7281%" y="687.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (31 samples, 2.47%)</title><rect x="7.4781%" y="661" width="2.4662%" height="15" fill="rgb(244,155,10)" fg:x="94" fg:w="31"/><text x="7.7281%" y="671.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 1.75%)</title><rect x="8.1941%" y="645" width="1.7502%" height="15" fill="rgb(254,13,48)" fg:x="103" fg:w="22"/><text x="8.4441%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.8648%" y="629" width="0.0796%" height="15" fill="rgb(210,164,6)" fg:x="124" fg:w="1"/><text x="10.1148%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.1034%" y="741" width="0.0796%" height="15" fill="rgb(216,187,40)" fg:x="127" fg:w="1"/><text x="10.3534%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="10.1034%" y="725" width="0.0796%" height="15" fill="rgb(208,143,21)" fg:x="127" fg:w="1"/><text x="10.3534%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="10.1034%" y="709" width="0.0796%" height="15" fill="rgb(211,73,41)" fg:x="127" fg:w="1"/><text x="10.3534%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="10.1830%" y="741" width="0.0796%" height="15" fill="rgb(244,69,21)" fg:x="128" fg:w="1"/><text x="10.4330%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.1830%" y="725" width="0.0796%" height="15" fill="rgb(230,152,32)" fg:x="128" fg:w="1"/><text x="10.4330%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.1830%" y="709" width="0.0796%" height="15" fill="rgb(208,110,18)" fg:x="128" fg:w="1"/><text x="10.4330%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1830%" y="693" width="0.0796%" height="15" fill="rgb(214,201,49)" fg:x="128" fg:w="1"/><text x="10.4330%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1830%" y="677" width="0.0796%" height="15" fill="rgb(253,153,27)" fg:x="128" fg:w="1"/><text x="10.4330%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1830%" y="661" width="0.0796%" height="15" fill="rgb(238,61,11)" fg:x="128" fg:w="1"/><text x="10.4330%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1830%" y="645" width="0.0796%" height="15" fill="rgb(227,84,2)" fg:x="128" fg:w="1"/><text x="10.4330%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.1830%" y="629" width="0.0796%" height="15" fill="rgb(233,52,8)" fg:x="128" fg:w="1"/><text x="10.4330%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1830%" y="613" width="0.0796%" height="15" fill="rgb(209,136,13)" fg:x="128" fg:w="1"/><text x="10.4330%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.1830%" y="597" width="0.0796%" height="15" fill="rgb(229,86,25)" fg:x="128" fg:w="1"/><text x="10.4330%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.1830%" y="581" width="0.0796%" height="15" fill="rgb(235,47,16)" fg:x="128" fg:w="1"/><text x="10.4330%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.1830%" y="565" width="0.0796%" height="15" fill="rgb(231,186,4)" fg:x="128" fg:w="1"/><text x="10.4330%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="10.2625%" y="741" width="0.0796%" height="15" fill="rgb(209,213,23)" fg:x="129" fg:w="1"/><text x="10.5125%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.2625%" y="725" width="0.0796%" height="15" fill="rgb(212,142,47)" fg:x="129" fg:w="1"/><text x="10.5125%" y="735.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.2625%" y="709" width="0.0796%" height="15" fill="rgb(251,86,24)" fg:x="129" fg:w="1"/><text x="10.5125%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.2625%" y="693" width="0.0796%" height="15" fill="rgb(206,217,17)" fg:x="129" fg:w="1"/><text x="10.5125%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.2625%" y="677" width="0.0796%" height="15" fill="rgb(248,92,38)" fg:x="129" fg:w="1"/><text x="10.5125%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.2625%" y="661" width="0.0796%" height="15" fill="rgb(214,25,29)" fg:x="129" fg:w="1"/><text x="10.5125%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.2625%" y="645" width="0.0796%" height="15" fill="rgb(245,117,13)" fg:x="129" fg:w="1"/><text x="10.5125%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.2625%" y="629" width="0.0796%" height="15" fill="rgb(205,169,9)" fg:x="129" fg:w="1"/><text x="10.5125%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.2625%" y="613" width="0.0796%" height="15" fill="rgb(223,134,38)" fg:x="129" fg:w="1"/><text x="10.5125%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="10.2625%" y="597" width="0.0796%" height="15" fill="rgb(249,129,49)" fg:x="129" fg:w="1"/><text x="10.5125%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="10.2625%" y="581" width="0.0796%" height="15" fill="rgb(229,157,45)" fg:x="129" fg:w="1"/><text x="10.5125%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="10.2625%" y="565" width="0.0796%" height="15" fill="rgb(232,159,11)" fg:x="129" fg:w="1"/><text x="10.5125%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="10.2625%" y="549" width="0.0796%" height="15" fill="rgb(230,134,26)" fg:x="129" fg:w="1"/><text x="10.5125%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="10.2625%" y="533" width="0.0796%" height="15" fill="rgb(234,149,40)" fg:x="129" fg:w="1"/><text x="10.5125%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2625%" y="517" width="0.0796%" height="15" fill="rgb(221,122,15)" fg:x="129" fg:w="1"/><text x="10.5125%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.3421%" y="725" width="0.0796%" height="15" fill="rgb(228,127,0)" fg:x="130" fg:w="1"/><text x="10.5921%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.3421%" y="709" width="0.0796%" height="15" fill="rgb(248,37,7)" fg:x="130" fg:w="1"/><text x="10.5921%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="10.3421%" y="693" width="0.0796%" height="15" fill="rgb(215,140,49)" fg:x="130" fg:w="1"/><text x="10.5921%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="10.3421%" y="677" width="0.0796%" height="15" fill="rgb(236,65,39)" fg:x="130" fg:w="1"/><text x="10.5921%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="10.3421%" y="661" width="0.0796%" height="15" fill="rgb(253,102,38)" fg:x="130" fg:w="1"/><text x="10.5921%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="10.3421%" y="645" width="0.0796%" height="15" fill="rgb(244,100,34)" fg:x="130" fg:w="1"/><text x="10.5921%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="10.3421%" y="629" width="0.0796%" height="15" fill="rgb(210,179,47)" fg:x="130" fg:w="1"/><text x="10.5921%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="10.3421%" y="613" width="0.0796%" height="15" fill="rgb(231,41,37)" fg:x="130" fg:w="1"/><text x="10.5921%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4216%" y="661" width="0.0796%" height="15" fill="rgb(226,209,17)" fg:x="131" fg:w="1"/><text x="10.6716%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4216%" y="645" width="0.0796%" height="15" fill="rgb(231,154,20)" fg:x="131" fg:w="1"/><text x="10.6716%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4216%" y="629" width="0.0796%" height="15" fill="rgb(216,134,24)" fg:x="131" fg:w="1"/><text x="10.6716%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.4216%" y="613" width="0.0796%" height="15" fill="rgb(224,71,42)" fg:x="131" fg:w="1"/><text x="10.6716%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="10.4216%" y="693" width="0.1591%" height="15" fill="rgb(250,65,23)" fg:x="131" fg:w="2"/><text x="10.6716%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.4216%" y="677" width="0.1591%" height="15" fill="rgb(209,160,35)" fg:x="131" fg:w="2"/><text x="10.6716%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5012%" y="661" width="0.0796%" height="15" fill="rgb(215,8,11)" fg:x="132" fg:w="1"/><text x="10.7512%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5012%" y="645" width="0.0796%" height="15" fill="rgb(227,27,12)" fg:x="132" fg:w="1"/><text x="10.7512%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.5012%" y="629" width="0.0796%" height="15" fill="rgb(226,111,41)" fg:x="132" fg:w="1"/><text x="10.7512%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5012%" y="613" width="0.0796%" height="15" fill="rgb(212,195,15)" fg:x="132" fg:w="1"/><text x="10.7512%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.5012%" y="597" width="0.0796%" height="15" fill="rgb(216,191,17)" fg:x="132" fg:w="1"/><text x="10.7512%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.5012%" y="581" width="0.0796%" height="15" fill="rgb(215,57,44)" fg:x="132" fg:w="1"/><text x="10.7512%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5012%" y="565" width="0.0796%" height="15" fill="rgb(209,38,4)" fg:x="132" fg:w="1"/><text x="10.7512%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5012%" y="549" width="0.0796%" height="15" fill="rgb(238,49,31)" fg:x="132" fg:w="1"/><text x="10.7512%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.5807%" y="661" width="0.0796%" height="15" fill="rgb(219,48,39)" fg:x="133" fg:w="1"/><text x="10.8307%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.5807%" y="645" width="0.0796%" height="15" fill="rgb(252,223,43)" fg:x="133" fg:w="1"/><text x="10.8307%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.5807%" y="629" width="0.0796%" height="15" fill="rgb(247,205,46)" fg:x="133" fg:w="1"/><text x="10.8307%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.5807%" y="613" width="0.0796%" height="15" fill="rgb(231,16,40)" fg:x="133" fg:w="1"/><text x="10.8307%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5807%" y="597" width="0.0796%" height="15" fill="rgb(231,115,5)" fg:x="133" fg:w="1"/><text x="10.8307%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="10.4216%" y="725" width="0.3182%" height="15" fill="rgb(206,127,43)" fg:x="131" fg:w="4"/><text x="10.6716%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="10.4216%" y="709" width="0.3182%" height="15" fill="rgb(218,101,9)" fg:x="131" fg:w="4"/><text x="10.6716%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="10.5807%" y="693" width="0.1591%" height="15" fill="rgb(235,138,50)" fg:x="133" fg:w="2"/><text x="10.8307%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.5807%" y="677" width="0.1591%" height="15" fill="rgb(214,197,52)" fg:x="133" fg:w="2"/><text x="10.8307%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6603%" y="661" width="0.0796%" height="15" fill="rgb(230,80,19)" fg:x="134" fg:w="1"/><text x="10.9103%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6603%" y="645" width="0.0796%" height="15" fill="rgb(224,77,16)" fg:x="134" fg:w="1"/><text x="10.9103%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6603%" y="629" width="0.0796%" height="15" fill="rgb(246,4,13)" fg:x="134" fg:w="1"/><text x="10.9103%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.6603%" y="613" width="0.0796%" height="15" fill="rgb(220,177,26)" fg:x="134" fg:w="1"/><text x="10.9103%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="10.6603%" y="597" width="0.0796%" height="15" fill="rgb(215,114,45)" fg:x="134" fg:w="1"/><text x="10.9103%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.03%)</title><rect x="10.3421%" y="741" width="1.0342%" height="15" fill="rgb(215,71,54)" fg:x="130" fg:w="13"/><text x="10.5921%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="10.7399%" y="725" width="0.6364%" height="15" fill="rgb(211,155,22)" fg:x="135" fg:w="8"/><text x="10.9899%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.56%)</title><rect x="10.8194%" y="709" width="0.5569%" height="15" fill="rgb(245,206,18)" fg:x="136" fg:w="7"/><text x="11.0694%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.56%)</title><rect x="10.8194%" y="693" width="0.5569%" height="15" fill="rgb(248,216,48)" fg:x="136" fg:w="7"/><text x="11.0694%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.56%)</title><rect x="10.8194%" y="677" width="0.5569%" height="15" fill="rgb(244,84,45)" fg:x="136" fg:w="7"/><text x="11.0694%" y="687.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="10.8990%" y="661" width="0.4773%" height="15" fill="rgb(245,13,45)" fg:x="137" fg:w="6"/><text x="11.1490%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.35%)</title><rect x="10.1034%" y="757" width="1.3524%" height="15" fill="rgb(247,163,2)" fg:x="127" fg:w="17"/><text x="10.3534%" y="767.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="11.3763%" y="741" width="0.0796%" height="15" fill="rgb(211,175,10)" fg:x="143" fg:w="1"/><text x="11.6263%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.5354%" y="661" width="0.0796%" height="15" fill="rgb(215,186,31)" fg:x="145" fg:w="1"/><text x="11.7854%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.5354%" y="645" width="0.0796%" height="15" fill="rgb(207,42,11)" fg:x="145" fg:w="1"/><text x="11.7854%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.5354%" y="629" width="0.0796%" height="15" fill="rgb(224,197,20)" fg:x="145" fg:w="1"/><text x="11.7854%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.5354%" y="613" width="0.0796%" height="15" fill="rgb(244,119,36)" fg:x="145" fg:w="1"/><text x="11.7854%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5354%" y="597" width="0.0796%" height="15" fill="rgb(250,60,27)" fg:x="145" fg:w="1"/><text x="11.7854%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.5354%" y="581" width="0.0796%" height="15" fill="rgb(252,202,1)" fg:x="145" fg:w="1"/><text x="11.7854%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.5354%" y="565" width="0.0796%" height="15" fill="rgb(206,53,25)" fg:x="145" fg:w="1"/><text x="11.7854%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.5354%" y="549" width="0.0796%" height="15" fill="rgb(210,88,4)" fg:x="145" fg:w="1"/><text x="11.7854%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.5354%" y="533" width="0.0796%" height="15" fill="rgb(211,144,28)" fg:x="145" fg:w="1"/><text x="11.7854%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.5354%" y="517" width="0.0796%" height="15" fill="rgb(247,81,32)" fg:x="145" fg:w="1"/><text x="11.7854%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.5354%" y="501" width="0.0796%" height="15" fill="rgb(225,192,11)" fg:x="145" fg:w="1"/><text x="11.7854%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.5354%" y="485" width="0.0796%" height="15" fill="rgb(232,212,27)" fg:x="145" fg:w="1"/><text x="11.7854%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.5354%" y="469" width="0.0796%" height="15" fill="rgb(239,3,29)" fg:x="145" fg:w="1"/><text x="11.7854%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.5354%" y="453" width="0.0796%" height="15" fill="rgb(252,225,29)" fg:x="145" fg:w="1"/><text x="11.7854%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.5354%" y="437" width="0.0796%" height="15" fill="rgb(205,151,9)" fg:x="145" fg:w="1"/><text x="11.7854%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="11.5354%" y="709" width="0.1591%" height="15" fill="rgb(216,171,47)" fg:x="145" fg:w="2"/><text x="11.7854%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="11.5354%" y="693" width="0.1591%" height="15" fill="rgb(206,181,1)" fg:x="145" fg:w="2"/><text x="11.7854%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="11.5354%" y="677" width="0.1591%" height="15" fill="rgb(232,218,10)" fg:x="145" fg:w="2"/><text x="11.7854%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6150%" y="661" width="0.0796%" height="15" fill="rgb(244,222,51)" fg:x="146" fg:w="1"/><text x="11.8650%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6150%" y="645" width="0.0796%" height="15" fill="rgb(252,215,16)" fg:x="146" fg:w="1"/><text x="11.8650%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6150%" y="629" width="0.0796%" height="15" fill="rgb(212,130,13)" fg:x="146" fg:w="1"/><text x="11.8650%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6150%" y="613" width="0.0796%" height="15" fill="rgb(227,103,37)" fg:x="146" fg:w="1"/><text x="11.8650%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="11.6150%" y="597" width="0.0796%" height="15" fill="rgb(249,48,15)" fg:x="146" fg:w="1"/><text x="11.8650%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6150%" y="581" width="0.0796%" height="15" fill="rgb(225,96,9)" fg:x="146" fg:w="1"/><text x="11.8650%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6150%" y="565" width="0.0796%" height="15" fill="rgb(213,81,41)" fg:x="146" fg:w="1"/><text x="11.8650%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6150%" y="549" width="0.0796%" height="15" fill="rgb(230,15,12)" fg:x="146" fg:w="1"/><text x="11.8650%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="11.6150%" y="533" width="0.0796%" height="15" fill="rgb(218,106,37)" fg:x="146" fg:w="1"/><text x="11.8650%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="11.6150%" y="517" width="0.0796%" height="15" fill="rgb(223,172,47)" fg:x="146" fg:w="1"/><text x="11.8650%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="11.5354%" y="741" width="0.2387%" height="15" fill="rgb(246,180,49)" fg:x="145" fg:w="3"/><text x="11.7854%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="11.5354%" y="725" width="0.2387%" height="15" fill="rgb(231,63,37)" fg:x="145" fg:w="3"/><text x="11.7854%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.6945%" y="709" width="0.0796%" height="15" fill="rgb(235,70,40)" fg:x="147" fg:w="1"/><text x="11.9445%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.6945%" y="693" width="0.0796%" height="15" fill="rgb(250,54,26)" fg:x="147" fg:w="1"/><text x="11.9445%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6945%" y="677" width="0.0796%" height="15" fill="rgb(214,190,1)" fg:x="147" fg:w="1"/><text x="11.9445%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6945%" y="661" width="0.0796%" height="15" fill="rgb(212,40,35)" fg:x="147" fg:w="1"/><text x="11.9445%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6945%" y="645" width="0.0796%" height="15" fill="rgb(239,183,47)" fg:x="147" fg:w="1"/><text x="11.9445%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.6945%" y="629" width="0.0796%" height="15" fill="rgb(211,171,49)" fg:x="147" fg:w="1"/><text x="11.9445%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6945%" y="613" width="0.0796%" height="15" fill="rgb(249,186,27)" fg:x="147" fg:w="1"/><text x="11.9445%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.6945%" y="597" width="0.0796%" height="15" fill="rgb(223,23,48)" fg:x="147" fg:w="1"/><text x="11.9445%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.6945%" y="581" width="0.0796%" height="15" fill="rgb(209,203,21)" fg:x="147" fg:w="1"/><text x="11.9445%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.6945%" y="565" width="0.0796%" height="15" fill="rgb(229,33,27)" fg:x="147" fg:w="1"/><text x="11.9445%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.6945%" y="549" width="0.0796%" height="15" fill="rgb(207,8,53)" fg:x="147" fg:w="1"/><text x="11.9445%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6945%" y="533" width="0.0796%" height="15" fill="rgb(221,42,0)" fg:x="147" fg:w="1"/><text x="11.9445%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.6945%" y="517" width="0.0796%" height="15" fill="rgb(223,115,3)" fg:x="147" fg:w="1"/><text x="11.9445%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.6945%" y="501" width="0.0796%" height="15" fill="rgb(239,35,26)" fg:x="147" fg:w="1"/><text x="11.9445%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.6945%" y="485" width="0.0796%" height="15" fill="rgb(233,22,9)" fg:x="147" fg:w="1"/><text x="11.9445%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.6945%" y="469" width="0.0796%" height="15" fill="rgb(236,221,48)" fg:x="147" fg:w="1"/><text x="11.9445%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.6945%" y="453" width="0.0796%" height="15" fill="rgb(235,52,30)" fg:x="147" fg:w="1"/><text x="11.9445%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6945%" y="437" width="0.0796%" height="15" fill="rgb(238,133,51)" fg:x="147" fg:w="1"/><text x="11.9445%" y="447.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.7741%" y="741" width="0.0796%" height="15" fill="rgb(213,122,23)" fg:x="148" fg:w="1"/><text x="12.0241%" y="751.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="11.7741%" y="725" width="0.0796%" height="15" fill="rgb(225,8,15)" fg:x="148" fg:w="1"/><text x="12.0241%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.7741%" y="709" width="0.0796%" height="15" fill="rgb(219,126,35)" fg:x="148" fg:w="1"/><text x="12.0241%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.8536%" y="613" width="0.0796%" height="15" fill="rgb(246,113,21)" fg:x="149" fg:w="1"/><text x="12.1036%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.8536%" y="645" width="0.1591%" height="15" fill="rgb(241,193,32)" fg:x="149" fg:w="2"/><text x="12.1036%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.8536%" y="629" width="0.1591%" height="15" fill="rgb(218,99,18)" fg:x="149" fg:w="2"/><text x="12.1036%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.9332%" y="613" width="0.0796%" height="15" fill="rgb(225,114,4)" fg:x="150" fg:w="1"/><text x="12.1832%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.9332%" y="597" width="0.0796%" height="15" fill="rgb(235,0,15)" fg:x="150" fg:w="1"/><text x="12.1832%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.9332%" y="581" width="0.0796%" height="15" fill="rgb(247,45,27)" fg:x="150" fg:w="1"/><text x="12.1832%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.9332%" y="565" width="0.0796%" height="15" fill="rgb(249,88,53)" fg:x="150" fg:w="1"/><text x="12.1832%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.9332%" y="549" width="0.0796%" height="15" fill="rgb(207,58,45)" fg:x="150" fg:w="1"/><text x="12.1832%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.9332%" y="533" width="0.0796%" height="15" fill="rgb(216,7,11)" fg:x="150" fg:w="1"/><text x="12.1832%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.9332%" y="517" width="0.0796%" height="15" fill="rgb(230,40,33)" fg:x="150" fg:w="1"/><text x="12.1832%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.9332%" y="501" width="0.0796%" height="15" fill="rgb(232,24,46)" fg:x="150" fg:w="1"/><text x="12.1832%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.9332%" y="485" width="0.0796%" height="15" fill="rgb(219,222,45)" fg:x="150" fg:w="1"/><text x="12.1832%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.9332%" y="469" width="0.0796%" height="15" fill="rgb(229,85,44)" fg:x="150" fg:w="1"/><text x="12.1832%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.9332%" y="453" width="0.0796%" height="15" fill="rgb(243,71,36)" fg:x="150" fg:w="1"/><text x="12.1832%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.8536%" y="693" width="0.2387%" height="15" fill="rgb(230,203,45)" fg:x="149" fg:w="3"/><text x="12.1036%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="11.8536%" y="677" width="0.2387%" height="15" fill="rgb(224,77,49)" fg:x="149" fg:w="3"/><text x="12.1036%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.8536%" y="661" width="0.2387%" height="15" fill="rgb(210,186,47)" fg:x="149" fg:w="3"/><text x="12.1036%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0127%" y="645" width="0.0796%" height="15" fill="rgb(232,146,10)" fg:x="151" fg:w="1"/><text x="12.2627%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0127%" y="629" width="0.0796%" height="15" fill="rgb(236,185,51)" fg:x="151" fg:w="1"/><text x="12.2627%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0127%" y="613" width="0.0796%" height="15" fill="rgb(223,206,43)" fg:x="151" fg:w="1"/><text x="12.2627%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0127%" y="597" width="0.0796%" height="15" fill="rgb(227,212,9)" fg:x="151" fg:w="1"/><text x="12.2627%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.0127%" y="581" width="0.0796%" height="15" fill="rgb(205,82,3)" fg:x="151" fg:w="1"/><text x="12.2627%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0127%" y="565" width="0.0796%" height="15" fill="rgb(214,2,27)" fg:x="151" fg:w="1"/><text x="12.2627%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.0127%" y="549" width="0.0796%" height="15" fill="rgb(241,37,22)" fg:x="151" fg:w="1"/><text x="12.2627%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.0127%" y="533" width="0.0796%" height="15" fill="rgb(219,182,1)" fg:x="151" fg:w="1"/><text x="12.2627%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.0127%" y="517" width="0.0796%" height="15" fill="rgb(208,224,23)" fg:x="151" fg:w="1"/><text x="12.2627%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0923%" y="645" width="0.0796%" height="15" fill="rgb(219,121,32)" fg:x="152" fg:w="1"/><text x="12.3423%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0923%" y="629" width="0.0796%" height="15" fill="rgb(253,13,40)" fg:x="152" fg:w="1"/><text x="12.3423%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0923%" y="613" width="0.0796%" height="15" fill="rgb(233,6,28)" fg:x="152" fg:w="1"/><text x="12.3423%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0923%" y="597" width="0.0796%" height="15" fill="rgb(233,73,8)" fg:x="152" fg:w="1"/><text x="12.3423%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.0923%" y="581" width="0.0796%" height="15" fill="rgb(223,48,27)" fg:x="152" fg:w="1"/><text x="12.3423%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1718%" y="645" width="0.0796%" height="15" fill="rgb(231,98,37)" fg:x="153" fg:w="1"/><text x="12.4218%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1718%" y="629" width="0.0796%" height="15" fill="rgb(249,43,32)" fg:x="153" fg:w="1"/><text x="12.4218%" y="639.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="11.8536%" y="741" width="0.4773%" height="15" fill="rgb(246,184,20)" fg:x="149" fg:w="6"/><text x="12.1036%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="11.8536%" y="725" width="0.4773%" height="15" fill="rgb(251,216,0)" fg:x="149" fg:w="6"/><text x="12.1036%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="11.8536%" y="709" width="0.4773%" height="15" fill="rgb(238,41,42)" fg:x="149" fg:w="6"/><text x="12.1036%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="12.0923%" y="693" width="0.2387%" height="15" fill="rgb(227,224,50)" fg:x="152" fg:w="3"/><text x="12.3423%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="12.0923%" y="677" width="0.2387%" height="15" fill="rgb(237,189,18)" fg:x="152" fg:w="3"/><text x="12.3423%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.0923%" y="661" width="0.2387%" height="15" fill="rgb(238,108,6)" fg:x="152" fg:w="3"/><text x="12.3423%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2514%" y="645" width="0.0796%" height="15" fill="rgb(214,197,53)" fg:x="154" fg:w="1"/><text x="12.5014%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2514%" y="629" width="0.0796%" height="15" fill="rgb(206,183,15)" fg:x="154" fg:w="1"/><text x="12.5014%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2514%" y="613" width="0.0796%" height="15" fill="rgb(208,130,32)" fg:x="154" fg:w="1"/><text x="12.5014%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2514%" y="597" width="0.0796%" height="15" fill="rgb(226,128,52)" fg:x="154" fg:w="1"/><text x="12.5014%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.2514%" y="581" width="0.0796%" height="15" fill="rgb(231,183,21)" fg:x="154" fg:w="1"/><text x="12.5014%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2514%" y="565" width="0.0796%" height="15" fill="rgb(216,8,35)" fg:x="154" fg:w="1"/><text x="12.5014%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2514%" y="549" width="0.0796%" height="15" fill="rgb(224,221,8)" fg:x="154" fg:w="1"/><text x="12.5014%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2514%" y="533" width="0.0796%" height="15" fill="rgb(210,111,33)" fg:x="154" fg:w="1"/><text x="12.5014%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.3309%" y="709" width="0.0796%" height="15" fill="rgb(232,211,38)" fg:x="155" fg:w="1"/><text x="12.5809%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="12.3309%" y="693" width="0.0796%" height="15" fill="rgb(216,190,27)" fg:x="155" fg:w="1"/><text x="12.5809%" y="703.50"></text></g><g><title>plugins_core::build::Build::holding (32 samples, 2.55%)</title><rect x="9.9443%" y="773" width="2.5457%" height="15" fill="rgb(237,215,27)" fg:x="125" fg:w="32"/><text x="10.1943%" y="783.50">pl..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.03%)</title><rect x="11.4558%" y="757" width="1.0342%" height="15" fill="rgb(251,121,39)" fg:x="144" fg:w="13"/><text x="11.7058%" y="767.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="12.3309%" y="741" width="0.1591%" height="15" fill="rgb(244,21,14)" fg:x="155" fg:w="2"/><text x="12.5809%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.3309%" y="725" width="0.1591%" height="15" fill="rgb(221,192,22)" fg:x="155" fg:w="2"/><text x="12.5809%" y="735.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4105%" y="709" width="0.0796%" height="15" fill="rgb(251,190,28)" fg:x="156" fg:w="1"/><text x="12.6605%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4105%" y="693" width="0.0796%" height="15" fill="rgb(217,4,51)" fg:x="156" fg:w="1"/><text x="12.6605%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4105%" y="677" width="0.0796%" height="15" fill="rgb(215,183,49)" fg:x="156" fg:w="1"/><text x="12.6605%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.4105%" y="661" width="0.0796%" height="15" fill="rgb(249,28,49)" fg:x="156" fg:w="1"/><text x="12.6605%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="12.4901%" y="741" width="0.0796%" height="15" fill="rgb(214,42,20)" fg:x="157" fg:w="1"/><text x="12.7401%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="12.4901%" y="725" width="0.0796%" height="15" fill="rgb(222,77,27)" fg:x="157" fg:w="1"/><text x="12.7401%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="12.4901%" y="709" width="0.0796%" height="15" fill="rgb(252,198,32)" fg:x="157" fg:w="1"/><text x="12.7401%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4901%" y="693" width="0.0796%" height="15" fill="rgb(207,140,50)" fg:x="157" fg:w="1"/><text x="12.7401%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4901%" y="677" width="0.0796%" height="15" fill="rgb(251,170,16)" fg:x="157" fg:w="1"/><text x="12.7401%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.4901%" y="661" width="0.0796%" height="15" fill="rgb(249,111,45)" fg:x="157" fg:w="1"/><text x="12.7401%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.4901%" y="645" width="0.0796%" height="15" fill="rgb(241,99,35)" fg:x="157" fg:w="1"/><text x="12.7401%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.4901%" y="629" width="0.0796%" height="15" fill="rgb(216,188,17)" fg:x="157" fg:w="1"/><text x="12.7401%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.4901%" y="613" width="0.0796%" height="15" fill="rgb(254,209,53)" fg:x="157" fg:w="1"/><text x="12.7401%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.4901%" y="597" width="0.0796%" height="15" fill="rgb(231,105,41)" fg:x="157" fg:w="1"/><text x="12.7401%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.4901%" y="581" width="0.0796%" height="15" fill="rgb(242,93,23)" fg:x="157" fg:w="1"/><text x="12.7401%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.4901%" y="565" width="0.0796%" height="15" fill="rgb(218,159,11)" fg:x="157" fg:w="1"/><text x="12.7401%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.4901%" y="549" width="0.0796%" height="15" fill="rgb(209,90,32)" fg:x="157" fg:w="1"/><text x="12.7401%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.4901%" y="533" width="0.0796%" height="15" fill="rgb(253,118,46)" fg:x="157" fg:w="1"/><text x="12.7401%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.4901%" y="517" width="0.0796%" height="15" fill="rgb(219,121,2)" fg:x="157" fg:w="1"/><text x="12.7401%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.5696%" y="741" width="0.0796%" height="15" fill="rgb(207,57,47)" fg:x="158" fg:w="1"/><text x="12.8196%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.5696%" y="725" width="0.0796%" height="15" fill="rgb(235,113,43)" fg:x="158" fg:w="1"/><text x="12.8196%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.5696%" y="709" width="0.0796%" height="15" fill="rgb(238,30,50)" fg:x="158" fg:w="1"/><text x="12.8196%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5696%" y="693" width="0.0796%" height="15" fill="rgb(237,47,29)" fg:x="158" fg:w="1"/><text x="12.8196%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5696%" y="677" width="0.0796%" height="15" fill="rgb(245,102,24)" fg:x="158" fg:w="1"/><text x="12.8196%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5696%" y="661" width="0.0796%" height="15" fill="rgb(245,152,9)" fg:x="158" fg:w="1"/><text x="12.8196%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5696%" y="645" width="0.0796%" height="15" fill="rgb(223,213,17)" fg:x="158" fg:w="1"/><text x="12.8196%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.5696%" y="629" width="0.0796%" height="15" fill="rgb(241,164,4)" fg:x="158" fg:w="1"/><text x="12.8196%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5696%" y="613" width="0.0796%" height="15" fill="rgb(205,209,31)" fg:x="158" fg:w="1"/><text x="12.8196%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.5696%" y="597" width="0.0796%" height="15" fill="rgb(248,173,2)" fg:x="158" fg:w="1"/><text x="12.8196%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.5696%" y="581" width="0.0796%" height="15" fill="rgb(207,67,32)" fg:x="158" fg:w="1"/><text x="12.8196%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="12.6492%" y="725" width="0.0796%" height="15" fill="rgb(239,109,13)" fg:x="159" fg:w="1"/><text x="12.8992%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.6492%" y="709" width="0.0796%" height="15" fill="rgb(233,123,24)" fg:x="159" fg:w="1"/><text x="12.8992%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.6492%" y="693" width="0.0796%" height="15" fill="rgb(232,120,19)" fg:x="159" fg:w="1"/><text x="12.8992%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.6492%" y="677" width="0.0796%" height="15" fill="rgb(225,17,50)" fg:x="159" fg:w="1"/><text x="12.8992%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="12.6492%" y="741" width="0.2387%" height="15" fill="rgb(239,216,13)" fg:x="159" fg:w="3"/><text x="12.8992%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="12.7287%" y="725" width="0.1591%" height="15" fill="rgb(232,213,26)" fg:x="160" fg:w="2"/><text x="12.9787%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="709" width="0.0796%" height="15" fill="rgb(244,59,39)" fg:x="161" fg:w="1"/><text x="13.0583%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.8083%" y="693" width="0.0796%" height="15" fill="rgb(234,61,35)" fg:x="161" fg:w="1"/><text x="13.0583%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.8083%" y="677" width="0.0796%" height="15" fill="rgb(245,94,24)" fg:x="161" fg:w="1"/><text x="13.0583%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="12.8878%" y="741" width="0.0796%" height="15" fill="rgb(238,190,44)" fg:x="162" fg:w="1"/><text x="13.1378%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="12.8878%" y="725" width="0.0796%" height="15" fill="rgb(205,145,25)" fg:x="162" fg:w="1"/><text x="13.1378%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="12.8878%" y="709" width="0.0796%" height="15" fill="rgb(229,158,41)" fg:x="162" fg:w="1"/><text x="13.1378%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.8878%" y="693" width="0.0796%" height="15" fill="rgb(224,121,5)" fg:x="162" fg:w="1"/><text x="13.1378%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.8878%" y="677" width="0.0796%" height="15" fill="rgb(238,168,35)" fg:x="162" fg:w="1"/><text x="13.1378%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8878%" y="661" width="0.0796%" height="15" fill="rgb(231,11,42)" fg:x="162" fg:w="1"/><text x="13.1378%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8878%" y="645" width="0.0796%" height="15" fill="rgb(241,105,19)" fg:x="162" fg:w="1"/><text x="13.1378%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.8878%" y="629" width="0.0796%" height="15" fill="rgb(253,210,20)" fg:x="162" fg:w="1"/><text x="13.1378%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8878%" y="613" width="0.0796%" height="15" fill="rgb(215,72,52)" fg:x="162" fg:w="1"/><text x="13.1378%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.8878%" y="597" width="0.0796%" height="15" fill="rgb(223,225,30)" fg:x="162" fg:w="1"/><text x="13.1378%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.8878%" y="581" width="0.0796%" height="15" fill="rgb(220,138,44)" fg:x="162" fg:w="1"/><text x="13.1378%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.8878%" y="565" width="0.0796%" height="15" fill="rgb(206,128,12)" fg:x="162" fg:w="1"/><text x="13.1378%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8878%" y="549" width="0.0796%" height="15" fill="rgb(245,194,0)" fg:x="162" fg:w="1"/><text x="13.1378%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="12.4901%" y="773" width="0.5569%" height="15" fill="rgb(235,175,41)" fg:x="157" fg:w="7"/><text x="12.7401%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="12.4901%" y="757" width="0.5569%" height="15" fill="rgb(216,15,48)" fg:x="157" fg:w="7"/><text x="12.7401%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="12.9674%" y="741" width="0.0796%" height="15" fill="rgb(223,179,5)" fg:x="163" fg:w="1"/><text x="13.2174%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9674%" y="725" width="0.0796%" height="15" fill="rgb(220,80,15)" fg:x="163" fg:w="1"/><text x="13.2174%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9674%" y="709" width="0.0796%" height="15" fill="rgb(228,20,30)" fg:x="163" fg:w="1"/><text x="13.2174%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9674%" y="693" width="0.0796%" height="15" fill="rgb(229,194,27)" fg:x="163" fg:w="1"/><text x="13.2174%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9674%" y="677" width="0.0796%" height="15" fill="rgb(238,202,32)" fg:x="163" fg:w="1"/><text x="13.2174%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9674%" y="661" width="0.0796%" height="15" fill="rgb(207,82,27)" fg:x="163" fg:w="1"/><text x="13.2174%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9674%" y="645" width="0.0796%" height="15" fill="rgb(246,122,46)" fg:x="163" fg:w="1"/><text x="13.2174%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9674%" y="629" width="0.0796%" height="15" fill="rgb(220,101,26)" fg:x="163" fg:w="1"/><text x="13.2174%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.9674%" y="613" width="0.0796%" height="15" fill="rgb(251,63,9)" fg:x="163" fg:w="1"/><text x="13.2174%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.9674%" y="597" width="0.0796%" height="15" fill="rgb(235,186,5)" fg:x="163" fg:w="1"/><text x="13.2174%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.9674%" y="581" width="0.0796%" height="15" fill="rgb(241,139,37)" fg:x="163" fg:w="1"/><text x="13.2174%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.9674%" y="565" width="0.0796%" height="15" fill="rgb(252,177,51)" fg:x="163" fg:w="1"/><text x="13.2174%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9674%" y="549" width="0.0796%" height="15" fill="rgb(214,131,22)" fg:x="163" fg:w="1"/><text x="13.2174%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.0469%" y="709" width="0.0796%" height="15" fill="rgb(246,53,19)" fg:x="164" fg:w="1"/><text x="13.2969%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.0469%" y="693" width="0.0796%" height="15" fill="rgb(231,158,27)" fg:x="164" fg:w="1"/><text x="13.2969%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1265%" y="709" width="0.0796%" height="15" fill="rgb(226,166,46)" fg:x="165" fg:w="1"/><text x="13.3765%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.1265%" y="693" width="0.0796%" height="15" fill="rgb(218,178,26)" fg:x="165" fg:w="1"/><text x="13.3765%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.1265%" y="677" width="0.0796%" height="15" fill="rgb(206,25,39)" fg:x="165" fg:w="1"/><text x="13.3765%" y="687.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="13.0469%" y="773" width="0.3182%" height="15" fill="rgb(232,218,41)" fg:x="164" fg:w="4"/><text x="13.2969%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="13.0469%" y="757" width="0.3182%" height="15" fill="rgb(212,151,15)" fg:x="164" fg:w="4"/><text x="13.2969%" y="767.50"></text></g><g><title>kernel::model::props::save_props (4 samples, 0.32%)</title><rect x="13.0469%" y="741" width="0.3182%" height="15" fill="rgb(213,49,22)" fg:x="164" fg:w="4"/><text x="13.2969%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="13.0469%" y="725" width="0.3182%" height="15" fill="rgb(247,116,21)" fg:x="164" fg:w="4"/><text x="13.2969%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="13.2060%" y="709" width="0.1591%" height="15" fill="rgb(248,98,14)" fg:x="166" fg:w="2"/><text x="13.4560%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.2060%" y="693" width="0.1591%" height="15" fill="rgb(247,72,6)" fg:x="166" fg:w="2"/><text x="13.4560%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="13.2856%" y="677" width="0.0796%" height="15" fill="rgb(213,9,22)" fg:x="167" fg:w="1"/><text x="13.5356%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.2856%" y="661" width="0.0796%" height="15" fill="rgb(213,122,30)" fg:x="167" fg:w="1"/><text x="13.5356%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.2856%" y="645" width="0.0796%" height="15" fill="rgb(244,11,30)" fg:x="167" fg:w="1"/><text x="13.5356%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="13.3652%" y="757" width="0.1591%" height="15" fill="rgb(236,102,26)" fg:x="168" fg:w="2"/><text x="13.6152%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="13.3652%" y="741" width="0.1591%" height="15" fill="rgb(231,166,37)" fg:x="168" fg:w="2"/><text x="13.6152%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="13.3652%" y="725" width="0.1591%" height="15" fill="rgb(220,224,29)" fg:x="168" fg:w="2"/><text x="13.6152%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.4447%" y="709" width="0.0796%" height="15" fill="rgb(227,30,40)" fg:x="169" fg:w="1"/><text x="13.6947%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="13.5243%" y="741" width="0.0796%" height="15" fill="rgb(235,8,36)" fg:x="170" fg:w="1"/><text x="13.7743%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="13.5243%" y="725" width="0.0796%" height="15" fill="rgb(232,175,19)" fg:x="170" fg:w="1"/><text x="13.7743%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.5243%" y="709" width="0.0796%" height="15" fill="rgb(217,114,10)" fg:x="170" fg:w="1"/><text x="13.7743%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="693" width="0.0796%" height="15" fill="rgb(214,112,41)" fg:x="170" fg:w="1"/><text x="13.7743%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5243%" y="677" width="0.0796%" height="15" fill="rgb(226,69,34)" fg:x="170" fg:w="1"/><text x="13.7743%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="661" width="0.0796%" height="15" fill="rgb(219,23,46)" fg:x="170" fg:w="1"/><text x="13.7743%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="645" width="0.0796%" height="15" fill="rgb(233,3,8)" fg:x="170" fg:w="1"/><text x="13.7743%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="629" width="0.0796%" height="15" fill="rgb(251,34,42)" fg:x="170" fg:w="1"/><text x="13.7743%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5243%" y="613" width="0.0796%" height="15" fill="rgb(215,84,9)" fg:x="170" fg:w="1"/><text x="13.7743%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="597" width="0.0796%" height="15" fill="rgb(231,75,52)" fg:x="170" fg:w="1"/><text x="13.7743%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="581" width="0.0796%" height="15" fill="rgb(247,201,31)" fg:x="170" fg:w="1"/><text x="13.7743%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="565" width="0.0796%" height="15" fill="rgb(215,171,37)" fg:x="170" fg:w="1"/><text x="13.7743%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.5243%" y="549" width="0.0796%" height="15" fill="rgb(208,208,44)" fg:x="170" fg:w="1"/><text x="13.7743%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.5243%" y="533" width="0.0796%" height="15" fill="rgb(247,146,54)" fg:x="170" fg:w="1"/><text x="13.7743%" y="543.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="13.5243%" y="517" width="0.0796%" height="15" fill="rgb(209,0,40)" fg:x="170" fg:w="1"/><text x="13.7743%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6038%" y="693" width="0.0796%" height="15" fill="rgb(221,59,4)" fg:x="171" fg:w="1"/><text x="13.8538%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6038%" y="677" width="0.0796%" height="15" fill="rgb(227,153,47)" fg:x="171" fg:w="1"/><text x="13.8538%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6038%" y="661" width="0.0796%" height="15" fill="rgb(253,225,10)" fg:x="171" fg:w="1"/><text x="13.8538%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6038%" y="645" width="0.0796%" height="15" fill="rgb(237,201,24)" fg:x="171" fg:w="1"/><text x="13.8538%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6038%" y="629" width="0.0796%" height="15" fill="rgb(238,23,27)" fg:x="171" fg:w="1"/><text x="13.8538%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6038%" y="613" width="0.0796%" height="15" fill="rgb(236,54,50)" fg:x="171" fg:w="1"/><text x="13.8538%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.6038%" y="597" width="0.0796%" height="15" fill="rgb(216,106,0)" fg:x="171" fg:w="1"/><text x="13.8538%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.6038%" y="581" width="0.0796%" height="15" fill="rgb(234,179,35)" fg:x="171" fg:w="1"/><text x="13.8538%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.6038%" y="565" width="0.0796%" height="15" fill="rgb(210,35,8)" fg:x="171" fg:w="1"/><text x="13.8538%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6038%" y="549" width="0.0796%" height="15" fill="rgb(238,144,16)" fg:x="171" fg:w="1"/><text x="13.8538%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6038%" y="533" width="0.0796%" height="15" fill="rgb(244,54,7)" fg:x="171" fg:w="1"/><text x="13.8538%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.6038%" y="517" width="0.0796%" height="15" fill="rgb(233,225,40)" fg:x="171" fg:w="1"/><text x="13.8538%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.6038%" y="501" width="0.0796%" height="15" fill="rgb(249,227,23)" fg:x="171" fg:w="1"/><text x="13.8538%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.6038%" y="485" width="0.0796%" height="15" fill="rgb(215,42,44)" fg:x="171" fg:w="1"/><text x="13.8538%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.6038%" y="469" width="0.0796%" height="15" fill="rgb(220,145,40)" fg:x="171" fg:w="1"/><text x="13.8538%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6038%" y="453" width="0.0796%" height="15" fill="rgb(228,218,40)" fg:x="171" fg:w="1"/><text x="13.8538%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="13.5243%" y="757" width="0.2387%" height="15" fill="rgb(217,52,54)" fg:x="170" fg:w="3"/><text x="13.7743%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.6038%" y="741" width="0.1591%" height="15" fill="rgb(223,90,22)" fg:x="171" fg:w="2"/><text x="13.8538%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.6038%" y="725" width="0.1591%" height="15" fill="rgb(232,114,35)" fg:x="171" fg:w="2"/><text x="13.8538%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.6038%" y="709" width="0.1591%" height="15" fill="rgb(227,223,50)" fg:x="171" fg:w="2"/><text x="13.8538%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6834%" y="693" width="0.0796%" height="15" fill="rgb(249,175,7)" fg:x="172" fg:w="1"/><text x="13.9334%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6834%" y="677" width="0.0796%" height="15" fill="rgb(249,173,15)" fg:x="172" fg:w="1"/><text x="13.9334%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6834%" y="661" width="0.0796%" height="15" fill="rgb(240,131,6)" fg:x="172" fg:w="1"/><text x="13.9334%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6834%" y="645" width="0.0796%" height="15" fill="rgb(246,117,16)" fg:x="172" fg:w="1"/><text x="13.9334%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.6834%" y="629" width="0.0796%" height="15" fill="rgb(209,32,16)" fg:x="172" fg:w="1"/><text x="13.9334%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6834%" y="613" width="0.0796%" height="15" fill="rgb(207,45,44)" fg:x="172" fg:w="1"/><text x="13.9334%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.6834%" y="597" width="0.0796%" height="15" fill="rgb(210,66,3)" fg:x="172" fg:w="1"/><text x="13.9334%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6834%" y="581" width="0.0796%" height="15" fill="rgb(246,133,30)" fg:x="172" fg:w="1"/><text x="13.9334%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="13.7629%" y="757" width="0.0796%" height="15" fill="rgb(224,37,17)" fg:x="173" fg:w="1"/><text x="14.0129%" y="767.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="13.7629%" y="741" width="0.0796%" height="15" fill="rgb(237,218,18)" fg:x="173" fg:w="1"/><text x="14.0129%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="13.7629%" y="725" width="0.0796%" height="15" fill="rgb(240,57,8)" fg:x="173" fg:w="1"/><text x="14.0129%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.7629%" y="709" width="0.0796%" height="15" fill="rgb(231,51,38)" fg:x="173" fg:w="1"/><text x="14.0129%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="13.7629%" y="693" width="0.0796%" height="15" fill="rgb(230,89,50)" fg:x="173" fg:w="1"/><text x="14.0129%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="13.9220%" y="709" width="0.0796%" height="15" fill="rgb(234,103,34)" fg:x="175" fg:w="1"/><text x="14.1720%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="13.9220%" y="693" width="0.0796%" height="15" fill="rgb(220,45,48)" fg:x="175" fg:w="1"/><text x="14.1720%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="13.9220%" y="677" width="0.0796%" height="15" fill="rgb(250,210,3)" fg:x="175" fg:w="1"/><text x="14.1720%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="13.9220%" y="661" width="0.0796%" height="15" fill="rgb(210,118,12)" fg:x="175" fg:w="1"/><text x="14.1720%" y="671.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="13.9220%" y="645" width="0.0796%" height="15" fill="rgb(238,154,21)" fg:x="175" fg:w="1"/><text x="14.1720%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="13.9220%" y="629" width="0.0796%" height="15" fill="rgb(227,220,4)" fg:x="175" fg:w="1"/><text x="14.1720%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9220%" y="613" width="0.0796%" height="15" fill="rgb(207,179,27)" fg:x="175" fg:w="1"/><text x="14.1720%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9220%" y="597" width="0.0796%" height="15" fill="rgb(240,111,30)" fg:x="175" fg:w="1"/><text x="14.1720%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9220%" y="581" width="0.0796%" height="15" fill="rgb(251,29,1)" fg:x="175" fg:w="1"/><text x="14.1720%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9220%" y="565" width="0.0796%" height="15" fill="rgb(224,141,39)" fg:x="175" fg:w="1"/><text x="14.1720%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9220%" y="549" width="0.0796%" height="15" fill="rgb(207,98,26)" fg:x="175" fg:w="1"/><text x="14.1720%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9220%" y="533" width="0.0796%" height="15" fill="rgb(221,37,6)" fg:x="175" fg:w="1"/><text x="14.1720%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9220%" y="517" width="0.0796%" height="15" fill="rgb(217,32,44)" fg:x="175" fg:w="1"/><text x="14.1720%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0016%" y="597" width="0.0796%" height="15" fill="rgb(253,149,2)" fg:x="176" fg:w="1"/><text x="14.2516%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0016%" y="581" width="0.0796%" height="15" fill="rgb(220,165,39)" fg:x="176" fg:w="1"/><text x="14.2516%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.0016%" y="565" width="0.0796%" height="15" fill="rgb(235,33,48)" fg:x="176" fg:w="1"/><text x="14.2516%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0016%" y="549" width="0.0796%" height="15" fill="rgb(221,89,6)" fg:x="176" fg:w="1"/><text x="14.2516%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.0016%" y="533" width="0.0796%" height="15" fill="rgb(215,214,6)" fg:x="176" fg:w="1"/><text x="14.2516%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.0016%" y="517" width="0.0796%" height="15" fill="rgb(241,1,30)" fg:x="176" fg:w="1"/><text x="14.2516%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.0016%" y="501" width="0.0796%" height="15" fill="rgb(211,140,32)" fg:x="176" fg:w="1"/><text x="14.2516%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.0016%" y="485" width="0.0796%" height="15" fill="rgb(232,48,21)" fg:x="176" fg:w="1"/><text x="14.2516%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0016%" y="469" width="0.0796%" height="15" fill="rgb(252,217,9)" fg:x="176" fg:w="1"/><text x="14.2516%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.0016%" y="453" width="0.0796%" height="15" fill="rgb(206,123,34)" fg:x="176" fg:w="1"/><text x="14.2516%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.0016%" y="437" width="0.0796%" height="15" fill="rgb(245,161,38)" fg:x="176" fg:w="1"/><text x="14.2516%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.0016%" y="421" width="0.0796%" height="15" fill="rgb(233,205,7)" fg:x="176" fg:w="1"/><text x="14.2516%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.0016%" y="405" width="0.0796%" height="15" fill="rgb(217,119,18)" fg:x="176" fg:w="1"/><text x="14.2516%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.0016%" y="389" width="0.0796%" height="15" fill="rgb(252,126,3)" fg:x="176" fg:w="1"/><text x="14.2516%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0016%" y="373" width="0.0796%" height="15" fill="rgb(252,188,15)" fg:x="176" fg:w="1"/><text x="14.2516%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="14.0016%" y="709" width="0.1591%" height="15" fill="rgb(228,1,48)" fg:x="176" fg:w="2"/><text x="14.2516%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="14.0016%" y="693" width="0.1591%" height="15" fill="rgb(205,187,8)" fg:x="176" fg:w="2"/><text x="14.2516%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.0016%" y="677" width="0.1591%" height="15" fill="rgb(205,105,50)" fg:x="176" fg:w="2"/><text x="14.2516%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.0016%" y="661" width="0.1591%" height="15" fill="rgb(211,31,46)" fg:x="176" fg:w="2"/><text x="14.2516%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.0016%" y="645" width="0.1591%" height="15" fill="rgb(213,126,5)" fg:x="176" fg:w="2"/><text x="14.2516%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.0016%" y="629" width="0.1591%" height="15" fill="rgb(231,87,9)" fg:x="176" fg:w="2"/><text x="14.2516%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.0016%" y="613" width="0.1591%" height="15" fill="rgb(219,224,20)" fg:x="176" fg:w="2"/><text x="14.2516%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0811%" y="597" width="0.0796%" height="15" fill="rgb(230,84,21)" fg:x="177" fg:w="1"/><text x="14.3311%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.1607%" y="629" width="0.0796%" height="15" fill="rgb(224,169,42)" fg:x="178" fg:w="1"/><text x="14.4107%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1607%" y="613" width="0.0796%" height="15" fill="rgb(227,182,13)" fg:x="178" fg:w="1"/><text x="14.4107%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1607%" y="597" width="0.0796%" height="15" fill="rgb(249,57,41)" fg:x="178" fg:w="1"/><text x="14.4107%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1607%" y="581" width="0.0796%" height="15" fill="rgb(214,93,52)" fg:x="178" fg:w="1"/><text x="14.4107%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1607%" y="565" width="0.0796%" height="15" fill="rgb(229,161,34)" fg:x="178" fg:w="1"/><text x="14.4107%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1607%" y="549" width="0.0796%" height="15" fill="rgb(227,193,17)" fg:x="178" fg:w="1"/><text x="14.4107%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.1607%" y="533" width="0.0796%" height="15" fill="rgb(242,164,46)" fg:x="178" fg:w="1"/><text x="14.4107%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.1607%" y="517" width="0.0796%" height="15" fill="rgb(242,142,47)" fg:x="178" fg:w="1"/><text x="14.4107%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.1607%" y="677" width="0.1591%" height="15" fill="rgb(208,23,18)" fg:x="178" fg:w="2"/><text x="14.4107%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.1607%" y="661" width="0.1591%" height="15" fill="rgb(219,54,38)" fg:x="178" fg:w="2"/><text x="14.4107%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.1607%" y="645" width="0.1591%" height="15" fill="rgb(206,97,35)" fg:x="178" fg:w="2"/><text x="14.4107%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2403%" y="629" width="0.0796%" height="15" fill="rgb(208,76,8)" fg:x="179" fg:w="1"/><text x="14.4903%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2403%" y="613" width="0.0796%" height="15" fill="rgb(220,92,28)" fg:x="179" fg:w="1"/><text x="14.4903%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2403%" y="597" width="0.0796%" height="15" fill="rgb(209,158,39)" fg:x="179" fg:w="1"/><text x="14.4903%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2403%" y="581" width="0.0796%" height="15" fill="rgb(238,175,9)" fg:x="179" fg:w="1"/><text x="14.4903%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.2403%" y="565" width="0.0796%" height="15" fill="rgb(240,116,17)" fg:x="179" fg:w="1"/><text x="14.4903%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2403%" y="549" width="0.0796%" height="15" fill="rgb(208,7,2)" fg:x="179" fg:w="1"/><text x="14.4903%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2403%" y="533" width="0.0796%" height="15" fill="rgb(252,52,4)" fg:x="179" fg:w="1"/><text x="14.4903%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2403%" y="517" width="0.0796%" height="15" fill="rgb(222,68,34)" fg:x="179" fg:w="1"/><text x="14.4903%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.2403%" y="501" width="0.0796%" height="15" fill="rgb(242,154,35)" fg:x="179" fg:w="1"/><text x="14.4903%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.2403%" y="485" width="0.0796%" height="15" fill="rgb(210,125,54)" fg:x="179" fg:w="1"/><text x="14.4903%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="14.3198%" y="661" width="0.0796%" height="15" fill="rgb(247,121,18)" fg:x="180" fg:w="1"/><text x="14.5698%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="14.3198%" y="677" width="0.2387%" height="15" fill="rgb(223,48,51)" fg:x="180" fg:w="3"/><text x="14.5698%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.3994%" y="661" width="0.1591%" height="15" fill="rgb(211,156,48)" fg:x="181" fg:w="2"/><text x="14.6494%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.4789%" y="645" width="0.0796%" height="15" fill="rgb(236,56,31)" fg:x="182" fg:w="1"/><text x="14.7289%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4789%" y="629" width="0.0796%" height="15" fill="rgb(247,157,52)" fg:x="182" fg:w="1"/><text x="14.7289%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.4789%" y="613" width="0.0796%" height="15" fill="rgb(244,121,39)" fg:x="182" fg:w="1"/><text x="14.7289%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5585%" y="597" width="0.0796%" height="15" fill="rgb(239,4,40)" fg:x="183" fg:w="1"/><text x="14.8085%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5585%" y="581" width="0.0796%" height="15" fill="rgb(213,204,45)" fg:x="183" fg:w="1"/><text x="14.8085%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5585%" y="565" width="0.0796%" height="15" fill="rgb(242,107,0)" fg:x="183" fg:w="1"/><text x="14.8085%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5585%" y="549" width="0.0796%" height="15" fill="rgb(215,152,25)" fg:x="183" fg:w="1"/><text x="14.8085%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5585%" y="533" width="0.0796%" height="15" fill="rgb(233,151,6)" fg:x="183" fg:w="1"/><text x="14.8085%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5585%" y="517" width="0.0796%" height="15" fill="rgb(206,126,44)" fg:x="183" fg:w="1"/><text x="14.8085%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.5585%" y="501" width="0.0796%" height="15" fill="rgb(209,145,15)" fg:x="183" fg:w="1"/><text x="14.8085%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.5585%" y="485" width="0.0796%" height="15" fill="rgb(235,214,8)" fg:x="183" fg:w="1"/><text x="14.8085%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.5585%" y="469" width="0.0796%" height="15" fill="rgb(216,140,51)" fg:x="183" fg:w="1"/><text x="14.8085%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5585%" y="453" width="0.0796%" height="15" fill="rgb(213,83,34)" fg:x="183" fg:w="1"/><text x="14.8085%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5585%" y="437" width="0.0796%" height="15" fill="rgb(218,186,44)" fg:x="183" fg:w="1"/><text x="14.8085%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.5585%" y="421" width="0.0796%" height="15" fill="rgb(225,147,10)" fg:x="183" fg:w="1"/><text x="14.8085%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.5585%" y="405" width="0.0796%" height="15" fill="rgb(209,214,20)" fg:x="183" fg:w="1"/><text x="14.8085%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.5585%" y="389" width="0.0796%" height="15" fill="rgb(252,61,32)" fg:x="183" fg:w="1"/><text x="14.8085%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.5585%" y="373" width="0.0796%" height="15" fill="rgb(237,204,10)" fg:x="183" fg:w="1"/><text x="14.8085%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5585%" y="357" width="0.0796%" height="15" fill="rgb(246,118,16)" fg:x="183" fg:w="1"/><text x="14.8085%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.6380%" y="597" width="0.0796%" height="15" fill="rgb(214,50,9)" fg:x="184" fg:w="1"/><text x="14.8880%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.6380%" y="581" width="0.0796%" height="15" fill="rgb(212,41,1)" fg:x="184" fg:w="1"/><text x="14.8880%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.6380%" y="565" width="0.0796%" height="15" fill="rgb(228,172,32)" fg:x="184" fg:w="1"/><text x="14.8880%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.6380%" y="549" width="0.0796%" height="15" fill="rgb(231,85,38)" fg:x="184" fg:w="1"/><text x="14.8880%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="14.5585%" y="629" width="0.3182%" height="15" fill="rgb(223,120,31)" fg:x="183" fg:w="4"/><text x="14.8085%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="14.5585%" y="613" width="0.3182%" height="15" fill="rgb(254,174,9)" fg:x="183" fg:w="4"/><text x="14.8085%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.7176%" y="597" width="0.1591%" height="15" fill="rgb(243,197,0)" fg:x="185" fg:w="2"/><text x="14.9676%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.7176%" y="581" width="0.1591%" height="15" fill="rgb(226,186,17)" fg:x="185" fg:w="2"/><text x="14.9676%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.7176%" y="565" width="0.1591%" height="15" fill="rgb(229,38,38)" fg:x="185" fg:w="2"/><text x="14.9676%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7971%" y="549" width="0.0796%" height="15" fill="rgb(238,82,14)" fg:x="186" fg:w="1"/><text x="15.0471%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.7971%" y="533" width="0.0796%" height="15" fill="rgb(230,154,54)" fg:x="186" fg:w="1"/><text x="15.0471%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7971%" y="517" width="0.0796%" height="15" fill="rgb(243,84,17)" fg:x="186" fg:w="1"/><text x="15.0471%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.7971%" y="501" width="0.0796%" height="15" fill="rgb(226,41,37)" fg:x="186" fg:w="1"/><text x="15.0471%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.7971%" y="485" width="0.0796%" height="15" fill="rgb(219,20,18)" fg:x="186" fg:w="1"/><text x="15.0471%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="597" width="0.0796%" height="15" fill="rgb(243,173,39)" fg:x="187" fg:w="1"/><text x="15.1267%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="581" width="0.0796%" height="15" fill="rgb(245,79,20)" fg:x="187" fg:w="1"/><text x="15.1267%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="565" width="0.0796%" height="15" fill="rgb(229,101,45)" fg:x="187" fg:w="1"/><text x="15.1267%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="549" width="0.0796%" height="15" fill="rgb(215,123,52)" fg:x="187" fg:w="1"/><text x="15.1267%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="533" width="0.0796%" height="15" fill="rgb(215,11,33)" fg:x="187" fg:w="1"/><text x="15.1267%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.8767%" y="517" width="0.0796%" height="15" fill="rgb(245,105,20)" fg:x="187" fg:w="1"/><text x="15.1267%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="14.1607%" y="693" width="0.8751%" height="15" fill="rgb(231,132,30)" fg:x="178" fg:w="11"/><text x="14.4107%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="14.5585%" y="677" width="0.4773%" height="15" fill="rgb(224,62,21)" fg:x="183" fg:w="6"/><text x="14.8085%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="14.5585%" y="661" width="0.4773%" height="15" fill="rgb(209,221,38)" fg:x="183" fg:w="6"/><text x="14.8085%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (6 samples, 0.48%)</title><rect x="14.5585%" y="645" width="0.4773%" height="15" fill="rgb(229,200,30)" fg:x="183" fg:w="6"/><text x="14.8085%" y="655.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="14.8767%" y="629" width="0.1591%" height="15" fill="rgb(237,142,41)" fg:x="187" fg:w="2"/><text x="15.1267%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.8767%" y="613" width="0.1591%" height="15" fill="rgb(238,37,22)" fg:x="187" fg:w="2"/><text x="15.1267%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9562%" y="597" width="0.0796%" height="15" fill="rgb(234,182,17)" fg:x="188" fg:w="1"/><text x="15.2062%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9562%" y="581" width="0.0796%" height="15" fill="rgb(237,58,48)" fg:x="188" fg:w="1"/><text x="15.2062%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9562%" y="565" width="0.0796%" height="15" fill="rgb(226,112,37)" fg:x="188" fg:w="1"/><text x="15.2062%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9562%" y="549" width="0.0796%" height="15" fill="rgb(230,201,20)" fg:x="188" fg:w="1"/><text x="15.2062%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.9562%" y="533" width="0.0796%" height="15" fill="rgb(252,95,39)" fg:x="188" fg:w="1"/><text x="15.2062%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9562%" y="517" width="0.0796%" height="15" fill="rgb(240,150,33)" fg:x="188" fg:w="1"/><text x="15.2062%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="14.9562%" y="501" width="0.0796%" height="15" fill="rgb(208,202,37)" fg:x="188" fg:w="1"/><text x="15.2062%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9562%" y="485" width="0.0796%" height="15" fill="rgb(251,37,12)" fg:x="188" fg:w="1"/><text x="15.2062%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="15.0358%" y="677" width="0.0796%" height="15" fill="rgb(247,150,26)" fg:x="189" fg:w="1"/><text x="15.2858%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="15.0358%" y="661" width="0.0796%" height="15" fill="rgb(232,28,8)" fg:x="189" fg:w="1"/><text x="15.2858%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.1154%" y="469" width="0.0796%" height="15" fill="rgb(226,121,34)" fg:x="190" fg:w="1"/><text x="15.3654%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="15.1154%" y="677" width="0.1591%" height="15" fill="rgb(237,23,13)" fg:x="190" fg:w="2"/><text x="15.3654%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="15.1154%" y="661" width="0.1591%" height="15" fill="rgb(214,42,29)" fg:x="190" fg:w="2"/><text x="15.3654%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.1154%" y="645" width="0.1591%" height="15" fill="rgb(246,204,29)" fg:x="190" fg:w="2"/><text x="15.3654%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="15.1154%" y="629" width="0.1591%" height="15" fill="rgb(242,28,40)" fg:x="190" fg:w="2"/><text x="15.3654%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.1154%" y="613" width="0.1591%" height="15" fill="rgb(243,64,49)" fg:x="190" fg:w="2"/><text x="15.3654%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1154%" y="597" width="0.1591%" height="15" fill="rgb(226,93,13)" fg:x="190" fg:w="2"/><text x="15.3654%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1154%" y="581" width="0.1591%" height="15" fill="rgb(241,113,26)" fg:x="190" fg:w="2"/><text x="15.3654%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1154%" y="565" width="0.1591%" height="15" fill="rgb(209,209,0)" fg:x="190" fg:w="2"/><text x="15.3654%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1154%" y="549" width="0.1591%" height="15" fill="rgb(251,183,50)" fg:x="190" fg:w="2"/><text x="15.3654%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.1154%" y="533" width="0.1591%" height="15" fill="rgb(248,24,43)" fg:x="190" fg:w="2"/><text x="15.3654%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1154%" y="517" width="0.1591%" height="15" fill="rgb(218,102,9)" fg:x="190" fg:w="2"/><text x="15.3654%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.1154%" y="501" width="0.1591%" height="15" fill="rgb(249,209,39)" fg:x="190" fg:w="2"/><text x="15.3654%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.1154%" y="485" width="0.1591%" height="15" fill="rgb(210,37,6)" fg:x="190" fg:w="2"/><text x="15.3654%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1949%" y="469" width="0.0796%" height="15" fill="rgb(212,99,4)" fg:x="191" fg:w="1"/><text x="15.4449%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="15.2745%" y="677" width="0.2387%" height="15" fill="rgb(253,59,46)" fg:x="192" fg:w="3"/><text x="15.5245%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4336%" y="661" width="0.0796%" height="15" fill="rgb(229,96,9)" fg:x="194" fg:w="1"/><text x="15.6836%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4336%" y="645" width="0.0796%" height="15" fill="rgb(207,103,49)" fg:x="194" fg:w="1"/><text x="15.6836%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.4336%" y="629" width="0.0796%" height="15" fill="rgb(250,226,20)" fg:x="194" fg:w="1"/><text x="15.6836%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.4336%" y="613" width="0.0796%" height="15" fill="rgb(238,220,11)" fg:x="194" fg:w="1"/><text x="15.6836%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.4336%" y="597" width="0.0796%" height="15" fill="rgb(236,74,15)" fg:x="194" fg:w="1"/><text x="15.6836%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.4336%" y="581" width="0.0796%" height="15" fill="rgb(218,43,40)" fg:x="194" fg:w="1"/><text x="15.6836%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.4336%" y="565" width="0.0796%" height="15" fill="rgb(245,206,37)" fg:x="194" fg:w="1"/><text x="15.6836%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.4336%" y="549" width="0.0796%" height="15" fill="rgb(206,30,3)" fg:x="194" fg:w="1"/><text x="15.6836%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.4336%" y="533" width="0.0796%" height="15" fill="rgb(211,29,35)" fg:x="194" fg:w="1"/><text x="15.6836%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.4336%" y="517" width="0.0796%" height="15" fill="rgb(218,49,50)" fg:x="194" fg:w="1"/><text x="15.6836%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.4336%" y="501" width="0.0796%" height="15" fill="rgb(211,114,30)" fg:x="194" fg:w="1"/><text x="15.6836%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.4336%" y="485" width="0.0796%" height="15" fill="rgb(238,70,33)" fg:x="194" fg:w="1"/><text x="15.6836%" y="495.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="15.4336%" y="469" width="0.0796%" height="15" fill="rgb(238,141,50)" fg:x="194" fg:w="1"/><text x="15.6836%" y="479.50"></text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.51%)</title><rect x="14.1607%" y="709" width="1.5115%" height="15" fill="rgb(205,69,6)" fg:x="178" fg:w="19"/><text x="14.4107%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (8 samples, 0.64%)</title><rect x="15.0358%" y="693" width="0.6364%" height="15" fill="rgb(229,65,0)" fg:x="189" fg:w="8"/><text x="15.2858%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.5131%" y="677" width="0.1591%" height="15" fill="rgb(211,3,37)" fg:x="195" fg:w="2"/><text x="15.7631%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="15.5131%" y="661" width="0.1591%" height="15" fill="rgb(223,196,42)" fg:x="195" fg:w="2"/><text x="15.7631%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.5131%" y="645" width="0.1591%" height="15" fill="rgb(227,191,15)" fg:x="195" fg:w="2"/><text x="15.7631%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="15.5131%" y="629" width="0.1591%" height="15" fill="rgb(229,210,53)" fg:x="195" fg:w="2"/><text x="15.7631%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="15.5131%" y="613" width="0.1591%" height="15" fill="rgb(250,203,10)" fg:x="195" fg:w="2"/><text x="15.7631%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.5131%" y="597" width="0.1591%" height="15" fill="rgb(247,8,37)" fg:x="195" fg:w="2"/><text x="15.7631%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5927%" y="581" width="0.0796%" height="15" fill="rgb(240,52,9)" fg:x="196" fg:w="1"/><text x="15.8427%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.6722%" y="677" width="0.0796%" height="15" fill="rgb(243,100,52)" fg:x="197" fg:w="1"/><text x="15.9222%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.6722%" y="661" width="0.0796%" height="15" fill="rgb(224,149,30)" fg:x="197" fg:w="1"/><text x="15.9222%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.6722%" y="645" width="0.0796%" height="15" fill="rgb(232,27,45)" fg:x="197" fg:w="1"/><text x="15.9222%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="15.6722%" y="709" width="0.1591%" height="15" fill="rgb(242,161,36)" fg:x="197" fg:w="2"/><text x="15.9222%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="15.6722%" y="693" width="0.1591%" height="15" fill="rgb(235,223,32)" fg:x="197" fg:w="2"/><text x="15.9222%" y="703.50"></text></g><g><title>serde_json::value::from::&lt;impl core::convert::From&lt;&amp;str&gt; for serde_json::value::Value&gt;::from (1 samples, 0.08%)</title><rect x="15.7518%" y="677" width="0.0796%" height="15" fill="rgb(242,78,19)" fg:x="198" fg:w="1"/><text x="16.0018%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.7518%" y="661" width="0.0796%" height="15" fill="rgb(233,157,47)" fg:x="198" fg:w="1"/><text x="16.0018%" y="671.50"></text></g><g><title>core::iter::adapters::try_process (26 samples, 2.07%)</title><rect x="13.8425%" y="757" width="2.0684%" height="15" fill="rgb(251,213,5)" fg:x="174" fg:w="26"/><text x="14.0925%" y="767.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 1.99%)</title><rect x="13.9220%" y="741" width="1.9889%" height="15" fill="rgb(215,223,5)" fg:x="175" fg:w="25"/><text x="14.1720%" y="751.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (25 samples, 1.99%)</title><rect x="13.9220%" y="725" width="1.9889%" height="15" fill="rgb(230,14,7)" fg:x="175" fg:w="25"/><text x="14.1720%" y="735.50">p..</text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="15.8313%" y="709" width="0.0796%" height="15" fill="rgb(249,179,20)" fg:x="199" fg:w="1"/><text x="16.0813%" y="719.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8313%" y="693" width="0.0796%" height="15" fill="rgb(230,204,44)" fg:x="199" fg:w="1"/><text x="16.0813%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.9905%" y="709" width="0.0796%" height="15" fill="rgb(233,229,46)" fg:x="201" fg:w="1"/><text x="16.2405%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="15.9905%" y="693" width="0.0796%" height="15" fill="rgb(210,154,35)" fg:x="201" fg:w="1"/><text x="16.2405%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="15.9109%" y="741" width="0.2387%" height="15" fill="rgb(220,178,16)" fg:x="200" fg:w="3"/><text x="16.1609%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="15.9109%" y="725" width="0.2387%" height="15" fill="rgb(243,0,53)" fg:x="200" fg:w="3"/><text x="16.1609%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.0700%" y="709" width="0.0796%" height="15" fill="rgb(223,221,47)" fg:x="202" fg:w="1"/><text x="16.3200%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="16.0700%" y="693" width="0.0796%" height="15" fill="rgb(233,82,15)" fg:x="202" fg:w="1"/><text x="16.3200%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.1496%" y="693" width="0.0796%" height="15" fill="rgb(222,8,38)" fg:x="203" fg:w="1"/><text x="16.3996%" y="703.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="16.2291%" y="693" width="0.0796%" height="15" fill="rgb(241,28,48)" fg:x="204" fg:w="1"/><text x="16.4791%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="16.2291%" y="677" width="0.0796%" height="15" fill="rgb(209,227,15)" fg:x="204" fg:w="1"/><text x="16.4791%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="16.2291%" y="661" width="0.0796%" height="15" fill="rgb(234,189,48)" fg:x="204" fg:w="1"/><text x="16.4791%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2291%" y="645" width="0.0796%" height="15" fill="rgb(212,27,44)" fg:x="204" fg:w="1"/><text x="16.4791%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2291%" y="629" width="0.0796%" height="15" fill="rgb(249,55,42)" fg:x="204" fg:w="1"/><text x="16.4791%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.2291%" y="613" width="0.0796%" height="15" fill="rgb(215,211,28)" fg:x="204" fg:w="1"/><text x="16.4791%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.2291%" y="597" width="0.0796%" height="15" fill="rgb(221,155,16)" fg:x="204" fg:w="1"/><text x="16.4791%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.2291%" y="581" width="0.0796%" height="15" fill="rgb(247,106,30)" fg:x="204" fg:w="1"/><text x="16.4791%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2291%" y="565" width="0.0796%" height="15" fill="rgb(230,76,31)" fg:x="204" fg:w="1"/><text x="16.4791%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.2291%" y="549" width="0.0796%" height="15" fill="rgb(222,6,48)" fg:x="204" fg:w="1"/><text x="16.4791%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.2291%" y="533" width="0.0796%" height="15" fill="rgb(228,82,3)" fg:x="204" fg:w="1"/><text x="16.4791%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.2291%" y="517" width="0.0796%" height="15" fill="rgb(245,208,52)" fg:x="204" fg:w="1"/><text x="16.4791%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.2291%" y="501" width="0.0796%" height="15" fill="rgb(218,65,17)" fg:x="204" fg:w="1"/><text x="16.4791%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.2291%" y="485" width="0.0796%" height="15" fill="rgb(242,63,26)" fg:x="204" fg:w="1"/><text x="16.4791%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2291%" y="469" width="0.0796%" height="15" fill="rgb(224,119,39)" fg:x="204" fg:w="1"/><text x="16.4791%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="16.3087%" y="677" width="0.0796%" height="15" fill="rgb(229,106,3)" fg:x="205" fg:w="1"/><text x="16.5587%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="16.3087%" y="661" width="0.0796%" height="15" fill="rgb(248,6,33)" fg:x="205" fg:w="1"/><text x="16.5587%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="16.3087%" y="645" width="0.0796%" height="15" fill="rgb(226,3,49)" fg:x="205" fg:w="1"/><text x="16.5587%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3882%" y="661" width="0.0796%" height="15" fill="rgb(228,142,14)" fg:x="206" fg:w="1"/><text x="16.6382%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3882%" y="645" width="0.0796%" height="15" fill="rgb(241,141,54)" fg:x="206" fg:w="1"/><text x="16.6382%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.3882%" y="629" width="0.0796%" height="15" fill="rgb(252,17,50)" fg:x="206" fg:w="1"/><text x="16.6382%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.3882%" y="613" width="0.0796%" height="15" fill="rgb(221,120,48)" fg:x="206" fg:w="1"/><text x="16.6382%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.3882%" y="597" width="0.0796%" height="15" fill="rgb(229,171,33)" fg:x="206" fg:w="1"/><text x="16.6382%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.3882%" y="581" width="0.0796%" height="15" fill="rgb(236,207,21)" fg:x="206" fg:w="1"/><text x="16.6382%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.3882%" y="565" width="0.0796%" height="15" fill="rgb(218,93,35)" fg:x="206" fg:w="1"/><text x="16.6382%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="16.4678%" y="661" width="0.1591%" height="15" fill="rgb(207,101,8)" fg:x="207" fg:w="2"/><text x="16.7178%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="16.4678%" y="645" width="0.1591%" height="15" fill="rgb(237,67,44)" fg:x="207" fg:w="2"/><text x="16.7178%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="16.4678%" y="629" width="0.1591%" height="15" fill="rgb(236,218,7)" fg:x="207" fg:w="2"/><text x="16.7178%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="16.5473%" y="613" width="0.0796%" height="15" fill="rgb(252,207,10)" fg:x="208" fg:w="1"/><text x="16.7973%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5473%" y="597" width="0.0796%" height="15" fill="rgb(221,175,6)" fg:x="208" fg:w="1"/><text x="16.7973%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="16.5473%" y="581" width="0.0796%" height="15" fill="rgb(230,105,53)" fg:x="208" fg:w="1"/><text x="16.7973%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="16.6269%" y="629" width="0.2387%" height="15" fill="rgb(253,83,6)" fg:x="209" fg:w="3"/><text x="16.8769%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="16.6269%" y="613" width="0.2387%" height="15" fill="rgb(206,198,44)" fg:x="209" fg:w="3"/><text x="16.8769%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.7064%" y="597" width="0.1591%" height="15" fill="rgb(206,164,29)" fg:x="210" fg:w="2"/><text x="16.9564%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="16.6269%" y="645" width="0.3978%" height="15" fill="rgb(215,2,50)" fg:x="209" fg:w="5"/><text x="16.8769%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.8656%" y="629" width="0.1591%" height="15" fill="rgb(246,127,18)" fg:x="212" fg:w="2"/><text x="17.1156%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.9451%" y="613" width="0.0796%" height="15" fill="rgb(232,6,21)" fg:x="213" fg:w="1"/><text x="17.1951%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.9451%" y="597" width="0.0796%" height="15" fill="rgb(224,154,1)" fg:x="213" fg:w="1"/><text x="17.1951%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.0247%" y="629" width="0.0796%" height="15" fill="rgb(248,135,32)" fg:x="214" fg:w="1"/><text x="17.2747%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.0247%" y="613" width="0.0796%" height="15" fill="rgb(253,129,38)" fg:x="214" fg:w="1"/><text x="17.2747%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.1042%" y="581" width="0.0796%" height="15" fill="rgb(214,110,11)" fg:x="215" fg:w="1"/><text x="17.3542%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.1042%" y="565" width="0.0796%" height="15" fill="rgb(246,150,22)" fg:x="215" fg:w="1"/><text x="17.3542%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.1042%" y="549" width="0.0796%" height="15" fill="rgb(219,170,39)" fg:x="215" fg:w="1"/><text x="17.3542%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.1042%" y="533" width="0.0796%" height="15" fill="rgb(221,143,52)" fg:x="215" fg:w="1"/><text x="17.3542%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.1042%" y="517" width="0.0796%" height="15" fill="rgb(237,122,11)" fg:x="215" fg:w="1"/><text x="17.3542%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.1042%" y="501" width="0.0796%" height="15" fill="rgb(217,114,13)" fg:x="215" fg:w="1"/><text x="17.3542%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.1042%" y="485" width="0.0796%" height="15" fill="rgb(218,184,28)" fg:x="215" fg:w="1"/><text x="17.3542%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="17.1042%" y="613" width="0.1591%" height="15" fill="rgb(237,33,22)" fg:x="215" fg:w="2"/><text x="17.3542%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1042%" y="597" width="0.1591%" height="15" fill="rgb(224,56,42)" fg:x="215" fg:w="2"/><text x="17.3542%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1838%" y="581" width="0.0796%" height="15" fill="rgb(216,138,53)" fg:x="216" fg:w="1"/><text x="17.4338%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.1838%" y="565" width="0.0796%" height="15" fill="rgb(233,229,40)" fg:x="216" fg:w="1"/><text x="17.4338%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.1838%" y="549" width="0.0796%" height="15" fill="rgb(252,105,0)" fg:x="216" fg:w="1"/><text x="17.4338%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.2633%" y="613" width="0.0796%" height="15" fill="rgb(212,75,24)" fg:x="217" fg:w="1"/><text x="17.5133%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.2633%" y="597" width="0.0796%" height="15" fill="rgb(235,168,50)" fg:x="217" fg:w="1"/><text x="17.5133%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.2633%" y="581" width="0.0796%" height="15" fill="rgb(247,204,12)" fg:x="217" fg:w="1"/><text x="17.5133%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="17.2633%" y="565" width="0.0796%" height="15" fill="rgb(250,203,27)" fg:x="217" fg:w="1"/><text x="17.5133%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.3429%" y="597" width="0.0796%" height="15" fill="rgb(221,215,2)" fg:x="218" fg:w="1"/><text x="17.5929%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.3429%" y="581" width="0.0796%" height="15" fill="rgb(242,163,47)" fg:x="218" fg:w="1"/><text x="17.5929%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.3429%" y="565" width="0.0796%" height="15" fill="rgb(237,136,50)" fg:x="218" fg:w="1"/><text x="17.5929%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.5020%" y="581" width="0.0796%" height="15" fill="rgb(217,201,47)" fg:x="220" fg:w="1"/><text x="17.7520%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5020%" y="565" width="0.0796%" height="15" fill="rgb(212,38,47)" fg:x="220" fg:w="1"/><text x="17.7520%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="17.5815%" y="565" width="0.0796%" height="15" fill="rgb(254,113,41)" fg:x="221" fg:w="1"/><text x="17.8315%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="17.5815%" y="549" width="0.0796%" height="15" fill="rgb(236,7,22)" fg:x="221" fg:w="1"/><text x="17.8315%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="17.5815%" y="533" width="0.0796%" height="15" fill="rgb(235,81,25)" fg:x="221" fg:w="1"/><text x="17.8315%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="17.5815%" y="517" width="0.0796%" height="15" fill="rgb(216,41,31)" fg:x="221" fg:w="1"/><text x="17.8315%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="17.7407%" y="549" width="0.2387%" height="15" fill="rgb(249,219,15)" fg:x="223" fg:w="3"/><text x="17.9907%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="17.7407%" y="533" width="0.2387%" height="15" fill="rgb(248,201,3)" fg:x="223" fg:w="3"/><text x="17.9907%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="17.7407%" y="517" width="0.2387%" height="15" fill="rgb(249,141,18)" fg:x="223" fg:w="3"/><text x="17.9907%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="17.8202%" y="501" width="0.1591%" height="15" fill="rgb(222,32,39)" fg:x="224" fg:w="2"/><text x="18.0702%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.8998%" y="485" width="0.0796%" height="15" fill="rgb(237,139,51)" fg:x="225" fg:w="1"/><text x="18.1498%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.8998%" y="469" width="0.0796%" height="15" fill="rgb(218,210,4)" fg:x="225" fg:w="1"/><text x="18.1498%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.8998%" y="453" width="0.0796%" height="15" fill="rgb(217,199,13)" fg:x="225" fg:w="1"/><text x="18.1498%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="17.9793%" y="549" width="0.0796%" height="15" fill="rgb(222,118,25)" fg:x="226" fg:w="1"/><text x="18.2293%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="17.6611%" y="565" width="0.5569%" height="15" fill="rgb(241,70,28)" fg:x="222" fg:w="7"/><text x="17.9111%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="18.0589%" y="549" width="0.1591%" height="15" fill="rgb(205,51,41)" fg:x="227" fg:w="2"/><text x="18.3089%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.1384%" y="533" width="0.0796%" height="15" fill="rgb(237,165,49)" fg:x="228" fg:w="1"/><text x="18.3884%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="17.5815%" y="581" width="0.7160%" height="15" fill="rgb(213,10,51)" fg:x="221" fg:w="9"/><text x="17.8315%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.2180%" y="565" width="0.0796%" height="15" fill="rgb(245,89,32)" fg:x="229" fg:w="1"/><text x="18.4680%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.03%)</title><rect x="17.3429%" y="613" width="1.0342%" height="15" fill="rgb(249,81,54)" fg:x="218" fg:w="13"/><text x="17.5929%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.95%)</title><rect x="17.4224%" y="597" width="0.9547%" height="15" fill="rgb(223,134,14)" fg:x="219" fg:w="12"/><text x="17.6724%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.2975%" y="581" width="0.0796%" height="15" fill="rgb(233,62,37)" fg:x="230" fg:w="1"/><text x="18.5475%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.2975%" y="565" width="0.0796%" height="15" fill="rgb(219,117,42)" fg:x="230" fg:w="1"/><text x="18.5475%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.2975%" y="549" width="0.0796%" height="15" fill="rgb(248,40,28)" fg:x="230" fg:w="1"/><text x="18.5475%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.51%)</title><rect x="17.1042%" y="629" width="1.5115%" height="15" fill="rgb(246,66,35)" fg:x="215" fg:w="19"/><text x="17.3542%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="18.3771%" y="613" width="0.2387%" height="15" fill="rgb(250,229,22)" fg:x="231" fg:w="3"/><text x="18.6271%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5362%" y="597" width="0.0796%" height="15" fill="rgb(213,89,18)" fg:x="233" fg:w="1"/><text x="18.7862%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.23%)</title><rect x="17.0247%" y="645" width="2.2275%" height="15" fill="rgb(213,122,9)" fg:x="214" fg:w="28"/><text x="17.2747%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="18.6158%" y="629" width="0.6364%" height="15" fill="rgb(220,213,48)" fg:x="234" fg:w="8"/><text x="18.8658%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="18.8544%" y="613" width="0.3978%" height="15" fill="rgb(244,109,54)" fg:x="237" fg:w="5"/><text x="19.1044%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="18.9340%" y="597" width="0.3182%" height="15" fill="rgb(254,104,49)" fg:x="238" fg:w="4"/><text x="19.1840%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="19.0135%" y="581" width="0.2387%" height="15" fill="rgb(219,28,32)" fg:x="239" fg:w="3"/><text x="19.2635%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="19.0135%" y="565" width="0.2387%" height="15" fill="rgb(249,153,33)" fg:x="239" fg:w="3"/><text x="19.2635%" y="575.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="19.0135%" y="549" width="0.2387%" height="15" fill="rgb(230,116,21)" fg:x="239" fg:w="3"/><text x="19.2635%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.70%)</title><rect x="16.6269%" y="661" width="2.7049%" height="15" fill="rgb(247,110,3)" fg:x="209" fg:w="34"/><text x="16.8769%" y="671.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.2522%" y="645" width="0.0796%" height="15" fill="rgb(227,128,3)" fg:x="242" fg:w="1"/><text x="19.5022%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="19.4113%" y="629" width="0.2387%" height="15" fill="rgb(208,21,1)" fg:x="244" fg:w="3"/><text x="19.6613%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="19.7295%" y="597" width="0.2387%" height="15" fill="rgb(225,24,20)" fg:x="248" fg:w="3"/><text x="19.9795%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="19.9682%" y="581" width="0.0796%" height="15" fill="rgb(250,159,24)" fg:x="251" fg:w="1"/><text x="20.2182%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9682%" y="565" width="0.0796%" height="15" fill="rgb(214,30,53)" fg:x="251" fg:w="1"/><text x="20.2182%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="20.0477%" y="581" width="0.0796%" height="15" fill="rgb(243,198,11)" fg:x="252" fg:w="1"/><text x="20.2977%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.0477%" y="565" width="0.0796%" height="15" fill="rgb(232,33,1)" fg:x="252" fg:w="1"/><text x="20.2977%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.0477%" y="549" width="0.0796%" height="15" fill="rgb(242,60,11)" fg:x="252" fg:w="1"/><text x="20.2977%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.0477%" y="533" width="0.0796%" height="15" fill="rgb(241,229,34)" fg:x="252" fg:w="1"/><text x="20.2977%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.1273%" y="533" width="0.0796%" height="15" fill="rgb(230,92,51)" fg:x="253" fg:w="1"/><text x="20.3773%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.95%)</title><rect x="19.3317%" y="661" width="0.9547%" height="15" fill="rgb(212,209,8)" fg:x="243" fg:w="12"/><text x="19.5817%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.95%)</title><rect x="19.3317%" y="645" width="0.9547%" height="15" fill="rgb(241,55,35)" fg:x="243" fg:w="12"/><text x="19.5817%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="19.6500%" y="629" width="0.6364%" height="15" fill="rgb(208,187,52)" fg:x="247" fg:w="8"/><text x="19.9000%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="19.6500%" y="613" width="0.6364%" height="15" fill="rgb(251,110,17)" fg:x="247" fg:w="8"/><text x="19.9000%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="19.9682%" y="597" width="0.3182%" height="15" fill="rgb(246,225,54)" fg:x="251" fg:w="4"/><text x="20.2182%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.1273%" y="581" width="0.1591%" height="15" fill="rgb(220,109,6)" fg:x="253" fg:w="2"/><text x="20.3773%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.1273%" y="565" width="0.1591%" height="15" fill="rgb(228,56,50)" fg:x="253" fg:w="2"/><text x="20.3773%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.1273%" y="549" width="0.1591%" height="15" fill="rgb(230,34,30)" fg:x="253" fg:w="2"/><text x="20.3773%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.2068%" y="533" width="0.0796%" height="15" fill="rgb(205,28,42)" fg:x="254" fg:w="1"/><text x="20.4568%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="20.2864%" y="645" width="0.0796%" height="15" fill="rgb(215,68,0)" fg:x="255" fg:w="1"/><text x="20.5364%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.2864%" y="629" width="0.0796%" height="15" fill="rgb(206,91,47)" fg:x="255" fg:w="1"/><text x="20.5364%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="20.3660%" y="613" width="0.1591%" height="15" fill="rgb(241,159,43)" fg:x="256" fg:w="2"/><text x="20.6160%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.4455%" y="597" width="0.0796%" height="15" fill="rgb(232,191,38)" fg:x="257" fg:w="1"/><text x="20.6955%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="20.4455%" y="581" width="0.0796%" height="15" fill="rgb(212,180,41)" fg:x="257" fg:w="1"/><text x="20.6955%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="20.5251%" y="613" width="0.0796%" height="15" fill="rgb(236,134,49)" fg:x="258" fg:w="1"/><text x="20.7751%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.5251%" y="597" width="0.0796%" height="15" fill="rgb(221,83,26)" fg:x="258" fg:w="1"/><text x="20.7751%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.5251%" y="581" width="0.0796%" height="15" fill="rgb(215,87,39)" fg:x="258" fg:w="1"/><text x="20.7751%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6046%" y="581" width="0.0796%" height="15" fill="rgb(242,28,29)" fg:x="259" fg:w="1"/><text x="20.8546%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="20.6046%" y="613" width="0.1591%" height="15" fill="rgb(212,219,47)" fg:x="259" fg:w="2"/><text x="20.8546%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="20.6046%" y="597" width="0.1591%" height="15" fill="rgb(221,35,20)" fg:x="259" fg:w="2"/><text x="20.8546%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6842%" y="581" width="0.0796%" height="15" fill="rgb(234,144,13)" fg:x="260" fg:w="1"/><text x="20.9342%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.6842%" y="565" width="0.0796%" height="15" fill="rgb(237,41,27)" fg:x="260" fg:w="1"/><text x="20.9342%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.6842%" y="549" width="0.0796%" height="15" fill="rgb(253,175,5)" fg:x="260" fg:w="1"/><text x="20.9342%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="20.8433%" y="533" width="0.0796%" height="15" fill="rgb(235,210,51)" fg:x="262" fg:w="1"/><text x="21.0933%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8433%" y="517" width="0.0796%" height="15" fill="rgb(241,180,35)" fg:x="262" fg:w="1"/><text x="21.0933%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="20.8433%" y="501" width="0.0796%" height="15" fill="rgb(219,45,16)" fg:x="262" fg:w="1"/><text x="21.0933%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.8433%" y="565" width="0.1591%" height="15" fill="rgb(247,212,4)" fg:x="262" fg:w="2"/><text x="21.0933%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="20.8433%" y="549" width="0.1591%" height="15" fill="rgb(224,211,1)" fg:x="262" fg:w="2"/><text x="21.0933%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9228%" y="533" width="0.0796%" height="15" fill="rgb(210,193,36)" fg:x="263" fg:w="1"/><text x="21.1728%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.3206%" y="533" width="0.1591%" height="15" fill="rgb(215,121,20)" fg:x="268" fg:w="2"/><text x="21.5706%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.3206%" y="517" width="0.1591%" height="15" fill="rgb(238,146,2)" fg:x="268" fg:w="2"/><text x="21.5706%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.3206%" y="501" width="0.1591%" height="15" fill="rgb(254,123,45)" fg:x="268" fg:w="2"/><text x="21.5706%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="21.4797%" y="485" width="0.0796%" height="15" fill="rgb(225,126,11)" fg:x="270" fg:w="1"/><text x="21.7297%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="21.6388%" y="453" width="0.1591%" height="15" fill="rgb(239,12,5)" fg:x="272" fg:w="2"/><text x="21.8888%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.6388%" y="437" width="0.1591%" height="15" fill="rgb(241,207,14)" fg:x="272" fg:w="2"/><text x="21.8888%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="21.6388%" y="421" width="0.1591%" height="15" fill="rgb(227,134,33)" fg:x="272" fg:w="2"/><text x="21.8888%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="21.6388%" y="405" width="0.1591%" height="15" fill="rgb(221,40,52)" fg:x="272" fg:w="2"/><text x="21.8888%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="21.2411%" y="549" width="0.6364%" height="15" fill="rgb(206,93,8)" fg:x="267" fg:w="8"/><text x="21.4911%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="21.4797%" y="533" width="0.3978%" height="15" fill="rgb(242,160,22)" fg:x="270" fg:w="5"/><text x="21.7297%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="21.4797%" y="517" width="0.3978%" height="15" fill="rgb(232,204,40)" fg:x="270" fg:w="5"/><text x="21.7297%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="21.4797%" y="501" width="0.3978%" height="15" fill="rgb(247,210,47)" fg:x="270" fg:w="5"/><text x="21.7297%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="21.5593%" y="485" width="0.3182%" height="15" fill="rgb(211,91,7)" fg:x="271" fg:w="4"/><text x="21.8093%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="21.6388%" y="469" width="0.2387%" height="15" fill="rgb(252,160,34)" fg:x="272" fg:w="3"/><text x="21.8888%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7979%" y="453" width="0.0796%" height="15" fill="rgb(220,34,39)" fg:x="274" fg:w="1"/><text x="22.0479%" y="463.50"></text></g><g><title>engine::session::Session::flush (76 samples, 6.05%)</title><rect x="15.9109%" y="757" width="6.0461%" height="15" fill="rgb(247,49,38)" fg:x="200" fg:w="76"/><text x="16.1609%" y="767.50">engine::..</text></g><g><title>engine::session::Session::save_changes (73 samples, 5.81%)</title><rect x="16.1496%" y="741" width="5.8075%" height="15" fill="rgb(228,175,44)" fg:x="203" fg:w="73"/><text x="16.3996%" y="751.50">engine:..</text></g><g><title>engine::session::state::State::close (73 samples, 5.81%)</title><rect x="16.1496%" y="725" width="5.8075%" height="15" fill="rgb(218,214,32)" fg:x="203" fg:w="73"/><text x="16.3996%" y="735.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (73 samples, 5.81%)</title><rect x="16.1496%" y="709" width="5.8075%" height="15" fill="rgb(213,50,12)" fg:x="203" fg:w="73"/><text x="16.3996%" y="719.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (71 samples, 5.65%)</title><rect x="16.3087%" y="693" width="5.6484%" height="15" fill="rgb(219,35,41)" fg:x="205" fg:w="71"/><text x="16.5587%" y="703.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (70 samples, 5.57%)</title><rect x="16.3882%" y="677" width="5.5688%" height="15" fill="rgb(219,18,38)" fg:x="206" fg:w="70"/><text x="16.6382%" y="687.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (21 samples, 1.67%)</title><rect x="20.2864%" y="661" width="1.6706%" height="15" fill="rgb(223,217,6)" fg:x="255" fg:w="21"/><text x="20.5364%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.59%)</title><rect x="20.3660%" y="645" width="1.5911%" height="15" fill="rgb(208,193,35)" fg:x="256" fg:w="20"/><text x="20.6160%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 1.59%)</title><rect x="20.3660%" y="629" width="1.5911%" height="15" fill="rgb(254,212,54)" fg:x="256" fg:w="20"/><text x="20.6160%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (15 samples, 1.19%)</title><rect x="20.7637%" y="613" width="1.1933%" height="15" fill="rgb(205,10,2)" fg:x="261" fg:w="15"/><text x="21.0137%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (14 samples, 1.11%)</title><rect x="20.8433%" y="597" width="1.1138%" height="15" fill="rgb(230,133,29)" fg:x="262" fg:w="14"/><text x="21.0933%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="20.8433%" y="581" width="1.1138%" height="15" fill="rgb(226,14,15)" fg:x="262" fg:w="14"/><text x="21.0933%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.95%)</title><rect x="21.0024%" y="565" width="0.9547%" height="15" fill="rgb(226,140,54)" fg:x="264" fg:w="12"/><text x="21.2524%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="21.8775%" y="549" width="0.0796%" height="15" fill="rgb(250,47,41)" fg:x="275" fg:w="1"/><text x="22.1275%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="21.8775%" y="533" width="0.0796%" height="15" fill="rgb(227,218,41)" fg:x="275" fg:w="1"/><text x="22.1275%" y="543.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="21.9570%" y="725" width="0.0796%" height="15" fill="rgb(254,183,7)" fg:x="276" fg:w="1"/><text x="22.2070%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="21.9570%" y="709" width="0.0796%" height="15" fill="rgb(206,84,53)" fg:x="276" fg:w="1"/><text x="22.2070%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="21.9570%" y="741" width="0.1591%" height="15" fill="rgb(213,177,2)" fg:x="276" fg:w="2"/><text x="22.2070%" y="751.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="22.0366%" y="725" width="0.0796%" height="15" fill="rgb(234,28,29)" fg:x="277" fg:w="1"/><text x="22.2866%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0366%" y="709" width="0.0796%" height="15" fill="rgb(248,211,38)" fg:x="277" fg:w="1"/><text x="22.2866%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0366%" y="693" width="0.0796%" height="15" fill="rgb(246,30,0)" fg:x="277" fg:w="1"/><text x="22.2866%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0366%" y="677" width="0.0796%" height="15" fill="rgb(244,115,24)" fg:x="277" fg:w="1"/><text x="22.2866%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0366%" y="661" width="0.0796%" height="15" fill="rgb(226,193,14)" fg:x="277" fg:w="1"/><text x="22.2866%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.0366%" y="645" width="0.0796%" height="15" fill="rgb(211,196,48)" fg:x="277" fg:w="1"/><text x="22.2866%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="22.1161%" y="725" width="0.0796%" height="15" fill="rgb(235,32,20)" fg:x="278" fg:w="1"/><text x="22.3661%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.1161%" y="709" width="0.0796%" height="15" fill="rgb(251,151,49)" fg:x="278" fg:w="1"/><text x="22.3661%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="22.1161%" y="693" width="0.0796%" height="15" fill="rgb(254,141,38)" fg:x="278" fg:w="1"/><text x="22.3661%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.1161%" y="677" width="0.0796%" height="15" fill="rgb(209,118,44)" fg:x="278" fg:w="1"/><text x="22.3661%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.1161%" y="661" width="0.0796%" height="15" fill="rgb(205,81,4)" fg:x="278" fg:w="1"/><text x="22.3661%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="21.9570%" y="757" width="0.3182%" height="15" fill="rgb(241,25,6)" fg:x="276" fg:w="4"/><text x="22.2070%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="22.1161%" y="741" width="0.1591%" height="15" fill="rgb(212,179,29)" fg:x="278" fg:w="2"/><text x="22.3661%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="22.1957%" y="725" width="0.0796%" height="15" fill="rgb(241,40,32)" fg:x="279" fg:w="1"/><text x="22.4457%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="22.1957%" y="709" width="0.0796%" height="15" fill="rgb(223,35,2)" fg:x="279" fg:w="1"/><text x="22.4457%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="22.3548%" y="725" width="0.0796%" height="15" fill="rgb(221,125,54)" fg:x="281" fg:w="1"/><text x="22.6048%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="22.3548%" y="709" width="0.0796%" height="15" fill="rgb(230,5,49)" fg:x="281" fg:w="1"/><text x="22.6048%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="22.3548%" y="693" width="0.0796%" height="15" fill="rgb(221,157,7)" fg:x="281" fg:w="1"/><text x="22.6048%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="22.3548%" y="677" width="0.0796%" height="15" fill="rgb(242,163,10)" fg:x="281" fg:w="1"/><text x="22.6048%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="22.3548%" y="661" width="0.0796%" height="15" fill="rgb(232,30,2)" fg:x="281" fg:w="1"/><text x="22.6048%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.5139%" y="629" width="0.0796%" height="15" fill="rgb(245,102,40)" fg:x="283" fg:w="1"/><text x="22.7639%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.5139%" y="677" width="0.1591%" height="15" fill="rgb(242,10,41)" fg:x="283" fg:w="2"/><text x="22.7639%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.5139%" y="661" width="0.1591%" height="15" fill="rgb(236,184,36)" fg:x="283" fg:w="2"/><text x="22.7639%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.5139%" y="645" width="0.1591%" height="15" fill="rgb(247,147,48)" fg:x="283" fg:w="2"/><text x="22.7639%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5935%" y="629" width="0.0796%" height="15" fill="rgb(226,166,2)" fg:x="284" fg:w="1"/><text x="22.8435%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.5935%" y="613" width="0.0796%" height="15" fill="rgb(251,196,7)" fg:x="284" fg:w="1"/><text x="22.8435%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.5935%" y="597" width="0.0796%" height="15" fill="rgb(241,40,13)" fg:x="284" fg:w="1"/><text x="22.8435%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.5935%" y="581" width="0.0796%" height="15" fill="rgb(254,4,12)" fg:x="284" fg:w="1"/><text x="22.8435%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.5935%" y="565" width="0.0796%" height="15" fill="rgb(244,139,49)" fg:x="284" fg:w="1"/><text x="22.8435%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5935%" y="549" width="0.0796%" height="15" fill="rgb(227,28,42)" fg:x="284" fg:w="1"/><text x="22.8435%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.5935%" y="533" width="0.0796%" height="15" fill="rgb(231,135,32)" fg:x="284" fg:w="1"/><text x="22.8435%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.5935%" y="517" width="0.0796%" height="15" fill="rgb(244,182,3)" fg:x="284" fg:w="1"/><text x="22.8435%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.5935%" y="501" width="0.0796%" height="15" fill="rgb(247,46,19)" fg:x="284" fg:w="1"/><text x="22.8435%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.5935%" y="485" width="0.0796%" height="15" fill="rgb(251,179,10)" fg:x="284" fg:w="1"/><text x="22.8435%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.5935%" y="469" width="0.0796%" height="15" fill="rgb(229,222,18)" fg:x="284" fg:w="1"/><text x="22.8435%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.6730%" y="581" width="0.0796%" height="15" fill="rgb(251,107,20)" fg:x="285" fg:w="1"/><text x="22.9230%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="22.4344%" y="725" width="0.3978%" height="15" fill="rgb(233,193,19)" fg:x="282" fg:w="5"/><text x="22.6844%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="22.4344%" y="709" width="0.3978%" height="15" fill="rgb(229,146,53)" fg:x="282" fg:w="5"/><text x="22.6844%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="22.4344%" y="693" width="0.3978%" height="15" fill="rgb(244,52,11)" fg:x="282" fg:w="5"/><text x="22.6844%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.6730%" y="677" width="0.1591%" height="15" fill="rgb(245,211,46)" fg:x="285" fg:w="2"/><text x="22.9230%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6730%" y="661" width="0.1591%" height="15" fill="rgb(213,8,31)" fg:x="285" fg:w="2"/><text x="22.9230%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="22.6730%" y="645" width="0.1591%" height="15" fill="rgb(205,101,39)" fg:x="285" fg:w="2"/><text x="22.9230%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6730%" y="629" width="0.1591%" height="15" fill="rgb(212,157,1)" fg:x="285" fg:w="2"/><text x="22.9230%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="22.6730%" y="613" width="0.1591%" height="15" fill="rgb(232,30,46)" fg:x="285" fg:w="2"/><text x="22.9230%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="22.6730%" y="597" width="0.1591%" height="15" fill="rgb(216,201,6)" fg:x="285" fg:w="2"/><text x="22.9230%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="22.7526%" y="581" width="0.0796%" height="15" fill="rgb(209,18,6)" fg:x="286" fg:w="1"/><text x="23.0026%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="22.7526%" y="565" width="0.0796%" height="15" fill="rgb(219,138,3)" fg:x="286" fg:w="1"/><text x="23.0026%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8321%" y="709" width="0.0796%" height="15" fill="rgb(210,91,46)" fg:x="287" fg:w="1"/><text x="23.0821%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="22.8321%" y="725" width="0.1591%" height="15" fill="rgb(241,80,44)" fg:x="287" fg:w="2"/><text x="23.0821%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="22.9117%" y="709" width="0.0796%" height="15" fill="rgb(236,205,36)" fg:x="288" fg:w="1"/><text x="23.1617%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.9117%" y="693" width="0.0796%" height="15" fill="rgb(205,59,37)" fg:x="288" fg:w="1"/><text x="23.1617%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9117%" y="677" width="0.0796%" height="15" fill="rgb(239,166,39)" fg:x="288" fg:w="1"/><text x="23.1617%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="22.9117%" y="661" width="0.0796%" height="15" fill="rgb(239,146,40)" fg:x="288" fg:w="1"/><text x="23.1617%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="22.9117%" y="645" width="0.0796%" height="15" fill="rgb(231,11,52)" fg:x="288" fg:w="1"/><text x="23.1617%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="22.9117%" y="629" width="0.0796%" height="15" fill="rgb(253,21,37)" fg:x="288" fg:w="1"/><text x="23.1617%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="22.9117%" y="613" width="0.0796%" height="15" fill="rgb(224,87,39)" fg:x="288" fg:w="1"/><text x="23.1617%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.9117%" y="597" width="0.0796%" height="15" fill="rgb(249,15,46)" fg:x="288" fg:w="1"/><text x="23.1617%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="22.9117%" y="581" width="0.0796%" height="15" fill="rgb(250,37,51)" fg:x="288" fg:w="1"/><text x="23.1617%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="22.9117%" y="565" width="0.0796%" height="15" fill="rgb(205,185,43)" fg:x="288" fg:w="1"/><text x="23.1617%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="22.9117%" y="549" width="0.0796%" height="15" fill="rgb(206,65,41)" fg:x="288" fg:w="1"/><text x="23.1617%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="22.9117%" y="533" width="0.0796%" height="15" fill="rgb(236,159,32)" fg:x="288" fg:w="1"/><text x="23.1617%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="22.9117%" y="517" width="0.0796%" height="15" fill="rgb(228,199,27)" fg:x="288" fg:w="1"/><text x="23.1617%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9117%" y="501" width="0.0796%" height="15" fill="rgb(212,0,37)" fg:x="288" fg:w="1"/><text x="23.1617%" y="511.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="22.9912%" y="677" width="0.0796%" height="15" fill="rgb(248,50,11)" fg:x="289" fg:w="1"/><text x="23.2412%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9912%" y="661" width="0.0796%" height="15" fill="rgb(231,164,25)" fg:x="289" fg:w="1"/><text x="23.2412%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9912%" y="645" width="0.0796%" height="15" fill="rgb(238,38,39)" fg:x="289" fg:w="1"/><text x="23.2412%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="23.0708%" y="677" width="0.0796%" height="15" fill="rgb(210,15,50)" fg:x="290" fg:w="1"/><text x="23.3208%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.0708%" y="661" width="0.0796%" height="15" fill="rgb(251,126,36)" fg:x="290" fg:w="1"/><text x="23.3208%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0708%" y="645" width="0.0796%" height="15" fill="rgb(243,59,26)" fg:x="290" fg:w="1"/><text x="23.3208%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0708%" y="629" width="0.0796%" height="15" fill="rgb(215,24,30)" fg:x="290" fg:w="1"/><text x="23.3208%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0708%" y="613" width="0.0796%" height="15" fill="rgb(253,50,51)" fg:x="290" fg:w="1"/><text x="23.3208%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.0708%" y="597" width="0.0796%" height="15" fill="rgb(252,2,16)" fg:x="290" fg:w="1"/><text x="23.3208%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.0708%" y="581" width="0.0796%" height="15" fill="rgb(209,123,36)" fg:x="290" fg:w="1"/><text x="23.3208%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1504%" y="645" width="0.0796%" height="15" fill="rgb(245,60,15)" fg:x="291" fg:w="1"/><text x="23.4004%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1504%" y="629" width="0.0796%" height="15" fill="rgb(246,4,13)" fg:x="291" fg:w="1"/><text x="23.4004%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1504%" y="613" width="0.0796%" height="15" fill="rgb(210,223,46)" fg:x="291" fg:w="1"/><text x="23.4004%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.1504%" y="597" width="0.0796%" height="15" fill="rgb(248,1,9)" fg:x="291" fg:w="1"/><text x="23.4004%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.1504%" y="581" width="0.0796%" height="15" fill="rgb(254,2,34)" fg:x="291" fg:w="1"/><text x="23.4004%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="23.2299%" y="565" width="0.0796%" height="15" fill="rgb(239,176,1)" fg:x="292" fg:w="1"/><text x="23.4799%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3095%" y="565" width="0.0796%" height="15" fill="rgb(250,25,32)" fg:x="293" fg:w="1"/><text x="23.5595%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (7 samples, 0.56%)</title><rect x="22.9912%" y="709" width="0.5569%" height="15" fill="rgb(225,28,39)" fg:x="289" fg:w="7"/><text x="23.2412%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (7 samples, 0.56%)</title><rect x="22.9912%" y="693" width="0.5569%" height="15" fill="rgb(230,166,37)" fg:x="289" fg:w="7"/><text x="23.2412%" y="703.50"></text></g><g><title>kernel::model::props::save_props (5 samples, 0.40%)</title><rect x="23.1504%" y="677" width="0.3978%" height="15" fill="rgb(246,220,4)" fg:x="291" fg:w="5"/><text x="23.4004%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="23.1504%" y="661" width="0.3978%" height="15" fill="rgb(219,119,33)" fg:x="291" fg:w="5"/><text x="23.4004%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (4 samples, 0.32%)</title><rect x="23.2299%" y="645" width="0.3182%" height="15" fill="rgb(221,207,38)" fg:x="292" fg:w="4"/><text x="23.4799%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="23.2299%" y="629" width="0.3182%" height="15" fill="rgb(214,153,5)" fg:x="292" fg:w="4"/><text x="23.4799%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (4 samples, 0.32%)</title><rect x="23.2299%" y="613" width="0.3182%" height="15" fill="rgb(223,50,16)" fg:x="292" fg:w="4"/><text x="23.4799%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="23.2299%" y="597" width="0.3182%" height="15" fill="rgb(209,207,12)" fg:x="292" fg:w="4"/><text x="23.4799%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="23.2299%" y="581" width="0.3182%" height="15" fill="rgb(207,3,46)" fg:x="292" fg:w="4"/><text x="23.4799%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="23.3890%" y="565" width="0.1591%" height="15" fill="rgb(232,45,53)" fg:x="294" fg:w="2"/><text x="23.6390%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="23.3890%" y="549" width="0.1591%" height="15" fill="rgb(206,140,15)" fg:x="294" fg:w="2"/><text x="23.6390%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4686%" y="533" width="0.0796%" height="15" fill="rgb(245,66,17)" fg:x="295" fg:w="1"/><text x="23.7186%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4686%" y="517" width="0.0796%" height="15" fill="rgb(221,25,37)" fg:x="295" fg:w="1"/><text x="23.7186%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.35%)</title><rect x="22.2753%" y="741" width="1.3524%" height="15" fill="rgb(215,99,47)" fg:x="280" fg:w="17"/><text x="22.5253%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.64%)</title><rect x="22.9912%" y="725" width="0.6364%" height="15" fill="rgb(219,154,44)" fg:x="289" fg:w="8"/><text x="23.2412%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="23.5481%" y="709" width="0.0796%" height="15" fill="rgb(210,197,36)" fg:x="296" fg:w="1"/><text x="23.7981%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.6277%" y="693" width="0.1591%" height="15" fill="rgb(217,137,10)" fg:x="297" fg:w="2"/><text x="23.8777%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="23.6277%" y="677" width="0.1591%" height="15" fill="rgb(240,216,26)" fg:x="297" fg:w="2"/><text x="23.8777%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.6277%" y="661" width="0.1591%" height="15" fill="rgb(242,76,17)" fg:x="297" fg:w="2"/><text x="23.8777%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="23.6277%" y="645" width="0.1591%" height="15" fill="rgb(243,142,51)" fg:x="297" fg:w="2"/><text x="23.8777%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="23.6277%" y="629" width="0.1591%" height="15" fill="rgb(233,109,46)" fg:x="297" fg:w="2"/><text x="23.8777%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.7072%" y="613" width="0.0796%" height="15" fill="rgb(252,45,32)" fg:x="298" fg:w="1"/><text x="23.9572%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7072%" y="597" width="0.0796%" height="15" fill="rgb(210,69,52)" fg:x="298" fg:w="1"/><text x="23.9572%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="23.7072%" y="581" width="0.0796%" height="15" fill="rgb(242,30,2)" fg:x="298" fg:w="1"/><text x="23.9572%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.7072%" y="565" width="0.0796%" height="15" fill="rgb(246,137,1)" fg:x="298" fg:w="1"/><text x="23.9572%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7072%" y="549" width="0.0796%" height="15" fill="rgb(221,205,25)" fg:x="298" fg:w="1"/><text x="23.9572%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.7072%" y="533" width="0.0796%" height="15" fill="rgb(224,44,43)" fg:x="298" fg:w="1"/><text x="23.9572%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="23.8663%" y="597" width="0.0796%" height="15" fill="rgb(209,81,13)" fg:x="300" fg:w="1"/><text x="24.1163%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.7868%" y="645" width="0.2387%" height="15" fill="rgb(227,88,4)" fg:x="299" fg:w="3"/><text x="24.0368%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.7868%" y="629" width="0.2387%" height="15" fill="rgb(228,118,49)" fg:x="299" fg:w="3"/><text x="24.0368%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="23.7868%" y="613" width="0.2387%" height="15" fill="rgb(225,215,27)" fg:x="299" fg:w="3"/><text x="24.0368%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9459%" y="597" width="0.0796%" height="15" fill="rgb(235,226,1)" fg:x="301" fg:w="1"/><text x="24.1959%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="23.9459%" y="581" width="0.0796%" height="15" fill="rgb(205,107,17)" fg:x="301" fg:w="1"/><text x="24.1959%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="23.9459%" y="565" width="0.0796%" height="15" fill="rgb(247,85,8)" fg:x="301" fg:w="1"/><text x="24.1959%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="23.9459%" y="549" width="0.0796%" height="15" fill="rgb(230,220,20)" fg:x="301" fg:w="1"/><text x="24.1959%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="23.9459%" y="533" width="0.0796%" height="15" fill="rgb(237,22,6)" fg:x="301" fg:w="1"/><text x="24.1959%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.9459%" y="517" width="0.0796%" height="15" fill="rgb(253,39,1)" fg:x="301" fg:w="1"/><text x="24.1959%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="23.9459%" y="501" width="0.0796%" height="15" fill="rgb(251,206,50)" fg:x="301" fg:w="1"/><text x="24.1959%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="23.9459%" y="485" width="0.0796%" height="15" fill="rgb(239,162,11)" fg:x="301" fg:w="1"/><text x="24.1959%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="23.9459%" y="469" width="0.0796%" height="15" fill="rgb(234,164,6)" fg:x="301" fg:w="1"/><text x="24.1959%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="23.9459%" y="453" width="0.0796%" height="15" fill="rgb(238,112,10)" fg:x="301" fg:w="1"/><text x="24.1959%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="23.9459%" y="437" width="0.0796%" height="15" fill="rgb(232,78,29)" fg:x="301" fg:w="1"/><text x="24.1959%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.9459%" y="421" width="0.0796%" height="15" fill="rgb(232,20,13)" fg:x="301" fg:w="1"/><text x="24.1959%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="24.0255%" y="645" width="0.0796%" height="15" fill="rgb(222,175,9)" fg:x="302" fg:w="1"/><text x="24.2755%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="23.6277%" y="725" width="0.7160%" height="15" fill="rgb(233,61,14)" fg:x="297" fg:w="9"/><text x="23.8777%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="23.6277%" y="709" width="0.7160%" height="15" fill="rgb(224,152,29)" fg:x="297" fg:w="9"/><text x="23.8777%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="23.7868%" y="693" width="0.5569%" height="15" fill="rgb(232,26,6)" fg:x="299" fg:w="7"/><text x="24.0368%" y="703.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="23.7868%" y="677" width="0.5569%" height="15" fill="rgb(210,116,11)" fg:x="299" fg:w="7"/><text x="24.0368%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="23.7868%" y="661" width="0.5569%" height="15" fill="rgb(238,213,15)" fg:x="299" fg:w="7"/><text x="24.0368%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.1050%" y="645" width="0.2387%" height="15" fill="rgb(236,177,32)" fg:x="303" fg:w="3"/><text x="24.3550%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.1050%" y="629" width="0.2387%" height="15" fill="rgb(230,36,43)" fg:x="303" fg:w="3"/><text x="24.3550%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.1050%" y="613" width="0.2387%" height="15" fill="rgb(212,76,23)" fg:x="303" fg:w="3"/><text x="24.3550%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.1050%" y="597" width="0.2387%" height="15" fill="rgb(225,168,24)" fg:x="303" fg:w="3"/><text x="24.3550%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="24.1846%" y="581" width="0.1591%" height="15" fill="rgb(206,40,44)" fg:x="304" fg:w="2"/><text x="24.4346%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1846%" y="565" width="0.1591%" height="15" fill="rgb(251,213,6)" fg:x="304" fg:w="2"/><text x="24.4346%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.1846%" y="549" width="0.1591%" height="15" fill="rgb(220,7,47)" fg:x="304" fg:w="2"/><text x="24.4346%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.3437%" y="613" width="0.1591%" height="15" fill="rgb(254,130,53)" fg:x="306" fg:w="2"/><text x="24.5937%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.3437%" y="597" width="0.1591%" height="15" fill="rgb(240,2,46)" fg:x="306" fg:w="2"/><text x="24.5937%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="24.3437%" y="581" width="0.1591%" height="15" fill="rgb(252,144,40)" fg:x="306" fg:w="2"/><text x="24.5937%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4232%" y="565" width="0.0796%" height="15" fill="rgb(226,23,10)" fg:x="307" fg:w="1"/><text x="24.6732%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.4232%" y="549" width="0.0796%" height="15" fill="rgb(212,204,35)" fg:x="307" fg:w="1"/><text x="24.6732%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.4232%" y="533" width="0.0796%" height="15" fill="rgb(218,201,15)" fg:x="307" fg:w="1"/><text x="24.6732%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.4232%" y="517" width="0.0796%" height="15" fill="rgb(224,197,5)" fg:x="307" fg:w="1"/><text x="24.6732%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.4232%" y="501" width="0.0796%" height="15" fill="rgb(224,185,18)" fg:x="307" fg:w="1"/><text x="24.6732%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4232%" y="485" width="0.0796%" height="15" fill="rgb(251,71,45)" fg:x="307" fg:w="1"/><text x="24.6732%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4232%" y="469" width="0.0796%" height="15" fill="rgb(216,74,24)" fg:x="307" fg:w="1"/><text x="24.6732%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.4232%" y="453" width="0.0796%" height="15" fill="rgb(250,36,51)" fg:x="307" fg:w="1"/><text x="24.6732%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.4232%" y="437" width="0.0796%" height="15" fill="rgb(209,224,28)" fg:x="307" fg:w="1"/><text x="24.6732%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.4232%" y="421" width="0.0796%" height="15" fill="rgb(228,5,10)" fg:x="307" fg:w="1"/><text x="24.6732%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.4232%" y="405" width="0.0796%" height="15" fill="rgb(250,57,40)" fg:x="307" fg:w="1"/><text x="24.6732%" y="415.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="24.4232%" y="389" width="0.0796%" height="15" fill="rgb(228,194,41)" fg:x="307" fg:w="1"/><text x="24.6732%" y="399.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.4232%" y="373" width="0.0796%" height="15" fill="rgb(206,68,23)" fg:x="307" fg:w="1"/><text x="24.6732%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="24.3437%" y="629" width="0.2387%" height="15" fill="rgb(230,33,29)" fg:x="306" fg:w="3"/><text x="24.5937%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5028%" y="613" width="0.0796%" height="15" fill="rgb(210,39,32)" fg:x="308" fg:w="1"/><text x="24.7528%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="24.3437%" y="677" width="0.3182%" height="15" fill="rgb(236,89,23)" fg:x="306" fg:w="4"/><text x="24.5937%" y="687.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="24.3437%" y="661" width="0.3182%" height="15" fill="rgb(218,52,52)" fg:x="306" fg:w="4"/><text x="24.5937%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="24.3437%" y="645" width="0.3182%" height="15" fill="rgb(235,154,5)" fg:x="306" fg:w="4"/><text x="24.5937%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.5823%" y="629" width="0.0796%" height="15" fill="rgb(223,168,9)" fg:x="309" fg:w="1"/><text x="24.8323%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5823%" y="613" width="0.0796%" height="15" fill="rgb(220,8,33)" fg:x="309" fg:w="1"/><text x="24.8323%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.5823%" y="597" width="0.0796%" height="15" fill="rgb(216,176,3)" fg:x="309" fg:w="1"/><text x="24.8323%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5823%" y="581" width="0.0796%" height="15" fill="rgb(254,150,22)" fg:x="309" fg:w="1"/><text x="24.8323%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.5823%" y="565" width="0.0796%" height="15" fill="rgb(231,61,53)" fg:x="309" fg:w="1"/><text x="24.8323%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5823%" y="549" width="0.0796%" height="15" fill="rgb(249,177,41)" fg:x="309" fg:w="1"/><text x="24.8323%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.5823%" y="533" width="0.0796%" height="15" fill="rgb(221,122,7)" fg:x="309" fg:w="1"/><text x="24.8323%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.5823%" y="517" width="0.0796%" height="15" fill="rgb(215,115,7)" fg:x="309" fg:w="1"/><text x="24.8323%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="24.5823%" y="501" width="0.0796%" height="15" fill="rgb(218,108,33)" fg:x="309" fg:w="1"/><text x="24.8323%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="629" width="0.0796%" height="15" fill="rgb(221,205,39)" fg:x="310" fg:w="1"/><text x="24.9119%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="613" width="0.0796%" height="15" fill="rgb(220,171,18)" fg:x="310" fg:w="1"/><text x="24.9119%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="597" width="0.0796%" height="15" fill="rgb(236,188,29)" fg:x="310" fg:w="1"/><text x="24.9119%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="581" width="0.0796%" height="15" fill="rgb(239,29,5)" fg:x="310" fg:w="1"/><text x="24.9119%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="565" width="0.0796%" height="15" fill="rgb(236,114,44)" fg:x="310" fg:w="1"/><text x="24.9119%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.6619%" y="549" width="0.0796%" height="15" fill="rgb(239,214,48)" fg:x="310" fg:w="1"/><text x="24.9119%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="24.3437%" y="709" width="0.5569%" height="15" fill="rgb(241,56,8)" fg:x="306" fg:w="7"/><text x="24.5937%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="24.3437%" y="693" width="0.5569%" height="15" fill="rgb(228,201,0)" fg:x="306" fg:w="7"/><text x="24.5937%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="24.6619%" y="677" width="0.2387%" height="15" fill="rgb(226,219,34)" fg:x="310" fg:w="3"/><text x="24.9119%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="24.6619%" y="661" width="0.2387%" height="15" fill="rgb(209,204,54)" fg:x="310" fg:w="3"/><text x="24.9119%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="24.6619%" y="645" width="0.2387%" height="15" fill="rgb(251,160,17)" fg:x="310" fg:w="3"/><text x="24.9119%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.7414%" y="629" width="0.1591%" height="15" fill="rgb(235,15,25)" fg:x="311" fg:w="2"/><text x="24.9914%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.7414%" y="613" width="0.1591%" height="15" fill="rgb(216,209,28)" fg:x="311" fg:w="2"/><text x="24.9914%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.7414%" y="597" width="0.1591%" height="15" fill="rgb(248,123,21)" fg:x="311" fg:w="2"/><text x="24.9914%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.7414%" y="581" width="0.1591%" height="15" fill="rgb(226,138,44)" fg:x="311" fg:w="2"/><text x="24.9914%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.8210%" y="565" width="0.0796%" height="15" fill="rgb(211,104,54)" fg:x="312" fg:w="1"/><text x="25.0710%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.8210%" y="549" width="0.0796%" height="15" fill="rgb(241,198,15)" fg:x="312" fg:w="1"/><text x="25.0710%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8210%" y="533" width="0.0796%" height="15" fill="rgb(227,155,54)" fg:x="312" fg:w="1"/><text x="25.0710%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.8210%" y="517" width="0.0796%" height="15" fill="rgb(225,131,31)" fg:x="312" fg:w="1"/><text x="25.0710%" y="527.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="24.3437%" y="725" width="0.7160%" height="15" fill="rgb(242,40,17)" fg:x="306" fg:w="9"/><text x="24.5937%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="24.9006%" y="709" width="0.1591%" height="15" fill="rgb(254,57,35)" fg:x="313" fg:w="2"/><text x="25.1506%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.9006%" y="693" width="0.1591%" height="15" fill="rgb(240,64,32)" fg:x="313" fg:w="2"/><text x="25.1506%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="24.9801%" y="677" width="0.0796%" height="15" fill="rgb(251,136,26)" fg:x="314" fg:w="1"/><text x="25.2301%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.9801%" y="661" width="0.0796%" height="15" fill="rgb(208,60,54)" fg:x="314" fg:w="1"/><text x="25.2301%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.9801%" y="645" width="0.0796%" height="15" fill="rgb(220,13,12)" fg:x="314" fg:w="1"/><text x="25.2301%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (36 samples, 2.86%)</title><rect x="22.2753%" y="757" width="2.8640%" height="15" fill="rgb(213,149,1)" fg:x="280" fg:w="36"/><text x="22.5253%" y="767.50">pl..</text></g><g><title>plugins_core::tools::set_container (19 samples, 1.51%)</title><rect x="23.6277%" y="741" width="1.5115%" height="15" fill="rgb(212,191,39)" fg:x="297" fg:w="19"/><text x="23.8777%" y="751.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="25.0597%" y="725" width="0.0796%" height="15" fill="rgb(215,221,42)" fg:x="315" fg:w="1"/><text x="25.3097%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="25.0597%" y="709" width="0.0796%" height="15" fill="rgb(244,79,23)" fg:x="315" fg:w="1"/><text x="25.3097%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.0597%" y="693" width="0.0796%" height="15" fill="rgb(247,17,29)" fg:x="315" fg:w="1"/><text x="25.3097%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1392%" y="677" width="0.0796%" height="15" fill="rgb(251,221,21)" fg:x="316" fg:w="1"/><text x="25.3892%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1392%" y="661" width="0.0796%" height="15" fill="rgb(207,202,34)" fg:x="316" fg:w="1"/><text x="25.3892%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1392%" y="645" width="0.0796%" height="15" fill="rgb(217,4,34)" fg:x="316" fg:w="1"/><text x="25.3892%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1392%" y="629" width="0.0796%" height="15" fill="rgb(253,17,16)" fg:x="316" fg:w="1"/><text x="25.3892%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1392%" y="613" width="0.0796%" height="15" fill="rgb(223,91,48)" fg:x="316" fg:w="1"/><text x="25.3892%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="25.1392%" y="757" width="0.1591%" height="15" fill="rgb(244,191,22)" fg:x="316" fg:w="2"/><text x="25.3892%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="25.1392%" y="741" width="0.1591%" height="15" fill="rgb(211,107,14)" fg:x="316" fg:w="2"/><text x="25.3892%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.1392%" y="725" width="0.1591%" height="15" fill="rgb(232,81,23)" fg:x="316" fg:w="2"/><text x="25.3892%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.1392%" y="709" width="0.1591%" height="15" fill="rgb(237,126,14)" fg:x="316" fg:w="2"/><text x="25.3892%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.1392%" y="693" width="0.1591%" height="15" fill="rgb(230,65,39)" fg:x="316" fg:w="2"/><text x="25.3892%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2188%" y="677" width="0.0796%" height="15" fill="rgb(208,106,41)" fg:x="317" fg:w="1"/><text x="25.4688%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2188%" y="661" width="0.0796%" height="15" fill="rgb(206,125,25)" fg:x="317" fg:w="1"/><text x="25.4688%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2188%" y="645" width="0.0796%" height="15" fill="rgb(250,24,29)" fg:x="317" fg:w="1"/><text x="25.4688%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2188%" y="629" width="0.0796%" height="15" fill="rgb(226,49,32)" fg:x="317" fg:w="1"/><text x="25.4688%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.2188%" y="613" width="0.0796%" height="15" fill="rgb(217,110,16)" fg:x="317" fg:w="1"/><text x="25.4688%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2188%" y="597" width="0.0796%" height="15" fill="rgb(252,16,53)" fg:x="317" fg:w="1"/><text x="25.4688%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2188%" y="581" width="0.0796%" height="15" fill="rgb(238,163,11)" fg:x="317" fg:w="1"/><text x="25.4688%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2188%" y="565" width="0.0796%" height="15" fill="rgb(206,210,1)" fg:x="317" fg:w="1"/><text x="25.4688%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.2188%" y="549" width="0.0796%" height="15" fill="rgb(229,8,25)" fg:x="317" fg:w="1"/><text x="25.4688%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.2188%" y="533" width="0.0796%" height="15" fill="rgb(247,155,23)" fg:x="317" fg:w="1"/><text x="25.4688%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.2188%" y="517" width="0.0796%" height="15" fill="rgb(207,26,7)" fg:x="317" fg:w="1"/><text x="25.4688%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2983%" y="693" width="0.0796%" height="15" fill="rgb(215,179,12)" fg:x="318" fg:w="1"/><text x="25.5483%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="25.2983%" y="757" width="0.1591%" height="15" fill="rgb(238,208,11)" fg:x="318" fg:w="2"/><text x="25.5483%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="25.2983%" y="741" width="0.1591%" height="15" fill="rgb(238,102,42)" fg:x="318" fg:w="2"/><text x="25.5483%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="25.2983%" y="725" width="0.1591%" height="15" fill="rgb(239,35,9)" fg:x="318" fg:w="2"/><text x="25.5483%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="25.2983%" y="709" width="0.1591%" height="15" fill="rgb(244,182,30)" fg:x="318" fg:w="2"/><text x="25.5483%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.3779%" y="693" width="0.0796%" height="15" fill="rgb(232,181,23)" fg:x="319" fg:w="1"/><text x="25.6279%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.3779%" y="677" width="0.0796%" height="15" fill="rgb(242,154,29)" fg:x="319" fg:w="1"/><text x="25.6279%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3779%" y="661" width="0.0796%" height="15" fill="rgb(219,23,2)" fg:x="319" fg:w="1"/><text x="25.6279%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.3779%" y="645" width="0.0796%" height="15" fill="rgb(234,94,43)" fg:x="319" fg:w="1"/><text x="25.6279%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3779%" y="629" width="0.0796%" height="15" fill="rgb(223,55,45)" fg:x="319" fg:w="1"/><text x="25.6279%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="25.4574%" y="725" width="0.0796%" height="15" fill="rgb(241,215,54)" fg:x="320" fg:w="1"/><text x="25.7074%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.4574%" y="709" width="0.0796%" height="15" fill="rgb(247,63,53)" fg:x="320" fg:w="1"/><text x="25.7074%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4574%" y="693" width="0.0796%" height="15" fill="rgb(220,166,7)" fg:x="320" fg:w="1"/><text x="25.7074%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.4574%" y="677" width="0.0796%" height="15" fill="rgb(248,53,45)" fg:x="320" fg:w="1"/><text x="25.7074%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.4574%" y="661" width="0.0796%" height="15" fill="rgb(224,207,20)" fg:x="320" fg:w="1"/><text x="25.7074%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.4574%" y="645" width="0.0796%" height="15" fill="rgb(244,185,11)" fg:x="320" fg:w="1"/><text x="25.7074%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.4574%" y="629" width="0.0796%" height="15" fill="rgb(230,13,42)" fg:x="320" fg:w="1"/><text x="25.7074%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4574%" y="613" width="0.0796%" height="15" fill="rgb(243,191,18)" fg:x="320" fg:w="1"/><text x="25.7074%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.4574%" y="597" width="0.0796%" height="15" fill="rgb(249,135,15)" fg:x="320" fg:w="1"/><text x="25.7074%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.4574%" y="581" width="0.0796%" height="15" fill="rgb(229,26,35)" fg:x="320" fg:w="1"/><text x="25.7074%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.4574%" y="565" width="0.0796%" height="15" fill="rgb(216,191,16)" fg:x="320" fg:w="1"/><text x="25.7074%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.4574%" y="549" width="0.0796%" height="15" fill="rgb(242,18,7)" fg:x="320" fg:w="1"/><text x="25.7074%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.4574%" y="533" width="0.0796%" height="15" fill="rgb(205,128,17)" fg:x="320" fg:w="1"/><text x="25.7074%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4574%" y="517" width="0.0796%" height="15" fill="rgb(229,199,44)" fg:x="320" fg:w="1"/><text x="25.7074%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="677" width="0.0796%" height="15" fill="rgb(234,222,3)" fg:x="321" fg:w="1"/><text x="25.7870%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.5370%" y="661" width="0.0796%" height="15" fill="rgb(220,170,20)" fg:x="321" fg:w="1"/><text x="25.7870%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="25.5370%" y="725" width="0.1591%" height="15" fill="rgb(207,138,8)" fg:x="321" fg:w="2"/><text x="25.7870%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="25.5370%" y="709" width="0.1591%" height="15" fill="rgb(244,130,36)" fg:x="321" fg:w="2"/><text x="25.7870%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="25.5370%" y="693" width="0.1591%" height="15" fill="rgb(207,197,52)" fg:x="321" fg:w="2"/><text x="25.7870%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.6165%" y="677" width="0.0796%" height="15" fill="rgb(206,9,21)" fg:x="322" fg:w="1"/><text x="25.8665%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6165%" y="661" width="0.0796%" height="15" fill="rgb(250,15,47)" fg:x="322" fg:w="1"/><text x="25.8665%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.6165%" y="645" width="0.0796%" height="15" fill="rgb(235,202,14)" fg:x="322" fg:w="1"/><text x="25.8665%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6165%" y="629" width="0.0796%" height="15" fill="rgb(211,180,47)" fg:x="322" fg:w="1"/><text x="25.8665%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.6165%" y="613" width="0.0796%" height="15" fill="rgb(209,61,11)" fg:x="322" fg:w="1"/><text x="25.8665%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.6165%" y="597" width="0.0796%" height="15" fill="rgb(243,197,29)" fg:x="322" fg:w="1"/><text x="25.8665%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.6165%" y="581" width="0.0796%" height="15" fill="rgb(216,185,16)" fg:x="322" fg:w="1"/><text x="25.8665%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="25.6165%" y="565" width="0.0796%" height="15" fill="rgb(248,5,15)" fg:x="322" fg:w="1"/><text x="25.8665%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="25.6961%" y="725" width="0.1591%" height="15" fill="rgb(240,39,41)" fg:x="323" fg:w="2"/><text x="25.9461%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.7757%" y="709" width="0.0796%" height="15" fill="rgb(224,220,43)" fg:x="324" fg:w="1"/><text x="26.0257%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="25.8552%" y="677" width="0.0796%" height="15" fill="rgb(215,21,24)" fg:x="325" fg:w="1"/><text x="26.1052%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.8552%" y="661" width="0.0796%" height="15" fill="rgb(220,102,8)" fg:x="325" fg:w="1"/><text x="26.1052%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.8552%" y="645" width="0.0796%" height="15" fill="rgb(225,185,10)" fg:x="325" fg:w="1"/><text x="26.1052%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.8552%" y="629" width="0.0796%" height="15" fill="rgb(212,108,24)" fg:x="325" fg:w="1"/><text x="26.1052%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="25.4574%" y="741" width="0.5569%" height="15" fill="rgb(237,27,0)" fg:x="320" fg:w="7"/><text x="25.7074%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="25.8552%" y="725" width="0.1591%" height="15" fill="rgb(212,106,38)" fg:x="325" fg:w="2"/><text x="26.1052%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="25.8552%" y="709" width="0.1591%" height="15" fill="rgb(210,125,30)" fg:x="325" fg:w="2"/><text x="26.1052%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="25.8552%" y="693" width="0.1591%" height="15" fill="rgb(215,219,1)" fg:x="325" fg:w="2"/><text x="26.1052%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.9348%" y="677" width="0.0796%" height="15" fill="rgb(223,10,12)" fg:x="326" fg:w="1"/><text x="26.1848%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.9348%" y="661" width="0.0796%" height="15" fill="rgb(245,40,34)" fg:x="326" fg:w="1"/><text x="26.1848%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9348%" y="645" width="0.0796%" height="15" fill="rgb(211,185,19)" fg:x="326" fg:w="1"/><text x="26.1848%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9348%" y="629" width="0.0796%" height="15" fill="rgb(243,190,43)" fg:x="326" fg:w="1"/><text x="26.1848%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9348%" y="613" width="0.0796%" height="15" fill="rgb(232,208,29)" fg:x="326" fg:w="1"/><text x="26.1848%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9348%" y="597" width="0.0796%" height="15" fill="rgb(234,134,27)" fg:x="326" fg:w="1"/><text x="26.1848%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="25.9348%" y="581" width="0.0796%" height="15" fill="rgb(225,41,29)" fg:x="326" fg:w="1"/><text x="26.1848%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9348%" y="565" width="0.0796%" height="15" fill="rgb(241,214,44)" fg:x="326" fg:w="1"/><text x="26.1848%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="26.0143%" y="725" width="0.0796%" height="15" fill="rgb(205,219,41)" fg:x="327" fg:w="1"/><text x="26.2643%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.0143%" y="709" width="0.0796%" height="15" fill="rgb(226,15,26)" fg:x="327" fg:w="1"/><text x="26.2643%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0143%" y="693" width="0.0796%" height="15" fill="rgb(210,83,41)" fg:x="327" fg:w="1"/><text x="26.2643%" y="703.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="26.0939%" y="677" width="0.0796%" height="15" fill="rgb(247,9,39)" fg:x="328" fg:w="1"/><text x="26.3439%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.0939%" y="661" width="0.0796%" height="15" fill="rgb(209,37,30)" fg:x="328" fg:w="1"/><text x="26.3439%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1734%" y="613" width="0.0796%" height="15" fill="rgb(248,170,46)" fg:x="329" fg:w="1"/><text x="26.4234%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.1734%" y="645" width="0.1591%" height="15" fill="rgb(237,129,44)" fg:x="329" fg:w="2"/><text x="26.4234%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="26.1734%" y="629" width="0.1591%" height="15" fill="rgb(225,117,51)" fg:x="329" fg:w="2"/><text x="26.4234%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2530%" y="613" width="0.0796%" height="15" fill="rgb(212,165,2)" fg:x="330" fg:w="1"/><text x="26.5030%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2530%" y="597" width="0.0796%" height="15" fill="rgb(213,53,45)" fg:x="330" fg:w="1"/><text x="26.5030%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2530%" y="581" width="0.0796%" height="15" fill="rgb(220,148,3)" fg:x="330" fg:w="1"/><text x="26.5030%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="26.2530%" y="565" width="0.0796%" height="15" fill="rgb(228,37,29)" fg:x="330" fg:w="1"/><text x="26.5030%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2530%" y="549" width="0.0796%" height="15" fill="rgb(209,76,29)" fg:x="330" fg:w="1"/><text x="26.5030%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.0939%" y="693" width="0.3182%" height="15" fill="rgb(215,90,5)" fg:x="328" fg:w="4"/><text x="26.3439%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="26.1734%" y="677" width="0.2387%" height="15" fill="rgb(227,207,32)" fg:x="329" fg:w="3"/><text x="26.4234%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.1734%" y="661" width="0.2387%" height="15" fill="rgb(251,218,44)" fg:x="329" fg:w="3"/><text x="26.4234%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.3325%" y="645" width="0.0796%" height="15" fill="rgb(211,44,16)" fg:x="331" fg:w="1"/><text x="26.5825%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.3325%" y="629" width="0.0796%" height="15" fill="rgb(242,170,37)" fg:x="331" fg:w="1"/><text x="26.5825%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.3325%" y="613" width="0.0796%" height="15" fill="rgb(205,181,22)" fg:x="331" fg:w="1"/><text x="26.5825%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.3325%" y="597" width="0.0796%" height="15" fill="rgb(228,130,19)" fg:x="331" fg:w="1"/><text x="26.5825%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.3325%" y="581" width="0.0796%" height="15" fill="rgb(228,9,15)" fg:x="331" fg:w="1"/><text x="26.5825%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.3325%" y="565" width="0.0796%" height="15" fill="rgb(219,66,48)" fg:x="331" fg:w="1"/><text x="26.5825%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.3325%" y="549" width="0.0796%" height="15" fill="rgb(234,203,10)" fg:x="331" fg:w="1"/><text x="26.5825%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.3325%" y="533" width="0.0796%" height="15" fill="rgb(219,209,1)" fg:x="331" fg:w="1"/><text x="26.5825%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="645" width="0.0796%" height="15" fill="rgb(206,167,9)" fg:x="332" fg:w="1"/><text x="26.6621%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="629" width="0.0796%" height="15" fill="rgb(210,11,39)" fg:x="332" fg:w="1"/><text x="26.6621%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="613" width="0.0796%" height="15" fill="rgb(251,90,47)" fg:x="332" fg:w="1"/><text x="26.6621%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="597" width="0.0796%" height="15" fill="rgb(237,7,4)" fg:x="332" fg:w="1"/><text x="26.6621%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="581" width="0.0796%" height="15" fill="rgb(232,205,47)" fg:x="332" fg:w="1"/><text x="26.6621%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="565" width="0.0796%" height="15" fill="rgb(215,86,48)" fg:x="332" fg:w="1"/><text x="26.6621%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.4121%" y="549" width="0.0796%" height="15" fill="rgb(232,14,47)" fg:x="332" fg:w="1"/><text x="26.6621%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="26.0939%" y="725" width="0.7160%" height="15" fill="rgb(240,28,46)" fg:x="328" fg:w="9"/><text x="26.3439%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="26.0939%" y="709" width="0.7160%" height="15" fill="rgb(224,85,5)" fg:x="328" fg:w="9"/><text x="26.3439%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="26.4121%" y="693" width="0.3978%" height="15" fill="rgb(219,34,25)" fg:x="332" fg:w="5"/><text x="26.6621%" y="703.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="26.4121%" y="677" width="0.3978%" height="15" fill="rgb(247,137,45)" fg:x="332" fg:w="5"/><text x="26.6621%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="26.4121%" y="661" width="0.3978%" height="15" fill="rgb(237,121,47)" fg:x="332" fg:w="5"/><text x="26.6621%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="26.4916%" y="645" width="0.3182%" height="15" fill="rgb(247,148,27)" fg:x="333" fg:w="4"/><text x="26.7416%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="26.4916%" y="629" width="0.3182%" height="15" fill="rgb(220,44,0)" fg:x="333" fg:w="4"/><text x="26.7416%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.6508%" y="613" width="0.1591%" height="15" fill="rgb(236,61,29)" fg:x="335" fg:w="2"/><text x="26.9008%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.6508%" y="597" width="0.1591%" height="15" fill="rgb(244,180,35)" fg:x="335" fg:w="2"/><text x="26.9008%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="26.6508%" y="581" width="0.1591%" height="15" fill="rgb(242,14,54)" fg:x="335" fg:w="2"/><text x="26.9008%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.6508%" y="565" width="0.1591%" height="15" fill="rgb(206,24,45)" fg:x="335" fg:w="2"/><text x="26.9008%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.6508%" y="549" width="0.1591%" height="15" fill="rgb(215,211,6)" fg:x="335" fg:w="2"/><text x="26.9008%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.6508%" y="533" width="0.1591%" height="15" fill="rgb(207,56,2)" fg:x="335" fg:w="2"/><text x="26.9008%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.6508%" y="517" width="0.1591%" height="15" fill="rgb(220,135,9)" fg:x="335" fg:w="2"/><text x="26.9008%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.6508%" y="501" width="0.1591%" height="15" fill="rgb(214,145,52)" fg:x="335" fg:w="2"/><text x="26.9008%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="26.6508%" y="485" width="0.1591%" height="15" fill="rgb(241,83,53)" fg:x="335" fg:w="2"/><text x="26.9008%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.8894%" y="629" width="0.1591%" height="15" fill="rgb(222,66,13)" fg:x="338" fg:w="2"/><text x="27.1394%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9690%" y="613" width="0.0796%" height="15" fill="rgb(239,164,54)" fg:x="339" fg:w="1"/><text x="27.2190%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.8099%" y="677" width="0.3182%" height="15" fill="rgb(216,189,13)" fg:x="337" fg:w="4"/><text x="27.0599%" y="687.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="26.8099%" y="661" width="0.3182%" height="15" fill="rgb(228,212,51)" fg:x="337" fg:w="4"/><text x="27.0599%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.8099%" y="645" width="0.3182%" height="15" fill="rgb(207,190,21)" fg:x="337" fg:w="4"/><text x="27.0599%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0485%" y="629" width="0.0796%" height="15" fill="rgb(245,28,35)" fg:x="340" fg:w="1"/><text x="27.2985%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.0485%" y="613" width="0.0796%" height="15" fill="rgb(239,23,40)" fg:x="340" fg:w="1"/><text x="27.2985%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0485%" y="597" width="0.0796%" height="15" fill="rgb(242,10,51)" fg:x="340" fg:w="1"/><text x="27.2985%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.0485%" y="581" width="0.0796%" height="15" fill="rgb(207,186,5)" fg:x="340" fg:w="1"/><text x="27.2985%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.0485%" y="565" width="0.0796%" height="15" fill="rgb(242,21,16)" fg:x="340" fg:w="1"/><text x="27.2985%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="629" width="0.0796%" height="15" fill="rgb(237,0,53)" fg:x="341" fg:w="1"/><text x="27.3781%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="613" width="0.0796%" height="15" fill="rgb(215,8,52)" fg:x="341" fg:w="1"/><text x="27.3781%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="597" width="0.0796%" height="15" fill="rgb(248,62,44)" fg:x="341" fg:w="1"/><text x="27.3781%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="581" width="0.0796%" height="15" fill="rgb(224,83,15)" fg:x="341" fg:w="1"/><text x="27.3781%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="565" width="0.0796%" height="15" fill="rgb(249,100,46)" fg:x="341" fg:w="1"/><text x="27.3781%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.1281%" y="549" width="0.0796%" height="15" fill="rgb(213,35,48)" fg:x="341" fg:w="1"/><text x="27.3781%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1281%" y="533" width="0.0796%" height="15" fill="rgb(251,2,13)" fg:x="341" fg:w="1"/><text x="27.3781%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (175 samples, 13.92%)</title><rect x="13.3652%" y="773" width="13.9220%" height="15" fill="rgb(212,132,21)" fg:x="168" fg:w="175"/><text x="13.6152%" y="783.50">plugins_core::build::..</text></g><g><title>plugins_core::build::Build::occupying (23 samples, 1.83%)</title><rect x="25.4574%" y="757" width="1.8298%" height="15" fill="rgb(247,17,21)" fg:x="320" fg:w="23"/><text x="25.7074%" y="767.50">p..</text></g><g><title>plugins_core::tools::set_occupying (16 samples, 1.27%)</title><rect x="26.0143%" y="741" width="1.2729%" height="15" fill="rgb(220,177,38)" fg:x="327" fg:w="16"/><text x="26.2643%" y="751.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.48%)</title><rect x="26.8099%" y="725" width="0.4773%" height="15" fill="rgb(233,219,21)" fg:x="337" fg:w="6"/><text x="27.0599%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="26.8099%" y="709" width="0.4773%" height="15" fill="rgb(246,17,7)" fg:x="337" fg:w="6"/><text x="27.0599%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="26.8099%" y="693" width="0.4773%" height="15" fill="rgb(212,4,22)" fg:x="337" fg:w="6"/><text x="27.0599%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="27.1281%" y="677" width="0.1591%" height="15" fill="rgb(243,85,21)" fg:x="341" fg:w="2"/><text x="27.3781%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.1281%" y="661" width="0.1591%" height="15" fill="rgb(232,218,2)" fg:x="341" fg:w="2"/><text x="27.3781%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.1281%" y="645" width="0.1591%" height="15" fill="rgb(253,168,47)" fg:x="341" fg:w="2"/><text x="27.3781%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2076%" y="629" width="0.0796%" height="15" fill="rgb(238,101,25)" fg:x="342" fg:w="1"/><text x="27.4576%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2076%" y="613" width="0.0796%" height="15" fill="rgb(251,86,12)" fg:x="342" fg:w="1"/><text x="27.4576%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2076%" y="597" width="0.0796%" height="15" fill="rgb(241,112,44)" fg:x="342" fg:w="1"/><text x="27.4576%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2076%" y="581" width="0.0796%" height="15" fill="rgb(224,28,25)" fg:x="342" fg:w="1"/><text x="27.4576%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.2076%" y="565" width="0.0796%" height="15" fill="rgb(209,201,1)" fg:x="342" fg:w="1"/><text x="27.4576%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2076%" y="549" width="0.0796%" height="15" fill="rgb(231,30,22)" fg:x="342" fg:w="1"/><text x="27.4576%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.2076%" y="533" width="0.0796%" height="15" fill="rgb(247,96,31)" fg:x="342" fg:w="1"/><text x="27.4576%" y="543.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="27.2872%" y="773" width="0.0796%" height="15" fill="rgb(251,100,12)" fg:x="343" fg:w="1"/><text x="27.5372%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="27.2872%" y="757" width="0.0796%" height="15" fill="rgb(224,174,7)" fg:x="343" fg:w="1"/><text x="27.5372%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="27.2872%" y="741" width="0.0796%" height="15" fill="rgb(231,168,19)" fg:x="343" fg:w="1"/><text x="27.5372%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="27.2872%" y="725" width="0.0796%" height="15" fill="rgb(226,85,5)" fg:x="343" fg:w="1"/><text x="27.5372%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.2872%" y="709" width="0.0796%" height="15" fill="rgb(210,215,5)" fg:x="343" fg:w="1"/><text x="27.5372%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.2872%" y="693" width="0.0796%" height="15" fill="rgb(233,70,8)" fg:x="343" fg:w="1"/><text x="27.5372%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2872%" y="677" width="0.0796%" height="15" fill="rgb(229,109,53)" fg:x="343" fg:w="1"/><text x="27.5372%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2872%" y="661" width="0.0796%" height="15" fill="rgb(213,125,35)" fg:x="343" fg:w="1"/><text x="27.5372%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2872%" y="645" width="0.0796%" height="15" fill="rgb(215,12,48)" fg:x="343" fg:w="1"/><text x="27.5372%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2872%" y="629" width="0.0796%" height="15" fill="rgb(207,12,38)" fg:x="343" fg:w="1"/><text x="27.5372%" y="639.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="27.2872%" y="613" width="0.0796%" height="15" fill="rgb(216,229,2)" fg:x="343" fg:w="1"/><text x="27.5372%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3667%" y="549" width="0.0796%" height="15" fill="rgb(229,209,31)" fg:x="344" fg:w="1"/><text x="27.6167%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4463%" y="405" width="0.0796%" height="15" fill="rgb(239,57,22)" fg:x="345" fg:w="1"/><text x="27.6963%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4463%" y="389" width="0.0796%" height="15" fill="rgb(239,119,54)" fg:x="345" fg:w="1"/><text x="27.6963%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.4463%" y="373" width="0.0796%" height="15" fill="rgb(231,80,45)" fg:x="345" fg:w="1"/><text x="27.6963%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.4463%" y="357" width="0.0796%" height="15" fill="rgb(219,138,19)" fg:x="345" fg:w="1"/><text x="27.6963%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.4463%" y="341" width="0.0796%" height="15" fill="rgb(216,53,26)" fg:x="345" fg:w="1"/><text x="27.6963%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="27.4463%" y="325" width="0.0796%" height="15" fill="rgb(224,30,16)" fg:x="345" fg:w="1"/><text x="27.6963%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="27.4463%" y="309" width="0.0796%" height="15" fill="rgb(224,151,24)" fg:x="345" fg:w="1"/><text x="27.6963%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="27.4463%" y="293" width="0.0796%" height="15" fill="rgb(236,75,7)" fg:x="345" fg:w="1"/><text x="27.6963%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.4463%" y="277" width="0.0796%" height="15" fill="rgb(248,106,42)" fg:x="345" fg:w="1"/><text x="27.6963%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="27.3667%" y="725" width="0.2387%" height="15" fill="rgb(222,217,11)" fg:x="344" fg:w="3"/><text x="27.6167%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="27.3667%" y="709" width="0.2387%" height="15" fill="rgb(234,143,31)" fg:x="344" fg:w="3"/><text x="27.6167%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="27.3667%" y="693" width="0.2387%" height="15" fill="rgb(237,148,28)" fg:x="344" fg:w="3"/><text x="27.6167%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="677" width="0.2387%" height="15" fill="rgb(241,151,6)" fg:x="344" fg:w="3"/><text x="27.6167%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.3667%" y="661" width="0.2387%" height="15" fill="rgb(226,55,18)" fg:x="344" fg:w="3"/><text x="27.6167%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="645" width="0.2387%" height="15" fill="rgb(226,196,6)" fg:x="344" fg:w="3"/><text x="27.6167%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="629" width="0.2387%" height="15" fill="rgb(251,228,11)" fg:x="344" fg:w="3"/><text x="27.6167%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="613" width="0.2387%" height="15" fill="rgb(219,197,15)" fg:x="344" fg:w="3"/><text x="27.6167%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.3667%" y="597" width="0.2387%" height="15" fill="rgb(243,105,44)" fg:x="344" fg:w="3"/><text x="27.6167%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="581" width="0.2387%" height="15" fill="rgb(205,183,40)" fg:x="344" fg:w="3"/><text x="27.6167%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="27.3667%" y="565" width="0.2387%" height="15" fill="rgb(232,138,46)" fg:x="344" fg:w="3"/><text x="27.6167%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="27.4463%" y="549" width="0.1591%" height="15" fill="rgb(234,161,14)" fg:x="345" fg:w="2"/><text x="27.6963%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="27.4463%" y="533" width="0.1591%" height="15" fill="rgb(238,211,18)" fg:x="345" fg:w="2"/><text x="27.6963%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="27.4463%" y="517" width="0.1591%" height="15" fill="rgb(217,130,2)" fg:x="345" fg:w="2"/><text x="27.6963%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.4463%" y="501" width="0.1591%" height="15" fill="rgb(251,17,29)" fg:x="345" fg:w="2"/><text x="27.6963%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="27.4463%" y="485" width="0.1591%" height="15" fill="rgb(243,18,0)" fg:x="345" fg:w="2"/><text x="27.6963%" y="495.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="27.4463%" y="469" width="0.1591%" height="15" fill="rgb(227,220,45)" fg:x="345" fg:w="2"/><text x="27.6963%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="27.4463%" y="453" width="0.1591%" height="15" fill="rgb(212,34,2)" fg:x="345" fg:w="2"/><text x="27.6963%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="27.4463%" y="437" width="0.1591%" height="15" fill="rgb(236,23,8)" fg:x="345" fg:w="2"/><text x="27.6963%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="27.4463%" y="421" width="0.1591%" height="15" fill="rgb(210,113,39)" fg:x="345" fg:w="2"/><text x="27.6963%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.5259%" y="405" width="0.0796%" height="15" fill="rgb(243,123,48)" fg:x="346" fg:w="1"/><text x="27.7759%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="27.6054%" y="725" width="0.0796%" height="15" fill="rgb(223,175,36)" fg:x="347" fg:w="1"/><text x="27.8554%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="27.6054%" y="709" width="0.0796%" height="15" fill="rgb(226,100,30)" fg:x="347" fg:w="1"/><text x="27.8554%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.6054%" y="693" width="0.0796%" height="15" fill="rgb(221,225,39)" fg:x="347" fg:w="1"/><text x="27.8554%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.6054%" y="677" width="0.0796%" height="15" fill="rgb(224,222,42)" fg:x="347" fg:w="1"/><text x="27.8554%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6054%" y="661" width="0.0796%" height="15" fill="rgb(221,53,1)" fg:x="347" fg:w="1"/><text x="27.8554%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.6054%" y="645" width="0.0796%" height="15" fill="rgb(216,187,48)" fg:x="347" fg:w="1"/><text x="27.8554%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6054%" y="629" width="0.0796%" height="15" fill="rgb(220,108,2)" fg:x="347" fg:w="1"/><text x="27.8554%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="27.6054%" y="613" width="0.0796%" height="15" fill="rgb(216,13,42)" fg:x="347" fg:w="1"/><text x="27.8554%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6054%" y="597" width="0.0796%" height="15" fill="rgb(205,14,29)" fg:x="347" fg:w="1"/><text x="27.8554%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.6054%" y="581" width="0.0796%" height="15" fill="rgb(217,168,30)" fg:x="347" fg:w="1"/><text x="27.8554%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6054%" y="565" width="0.0796%" height="15" fill="rgb(246,173,54)" fg:x="347" fg:w="1"/><text x="27.8554%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.6054%" y="549" width="0.0796%" height="15" fill="rgb(227,177,11)" fg:x="347" fg:w="1"/><text x="27.8554%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.6054%" y="533" width="0.0796%" height="15" fill="rgb(223,215,51)" fg:x="347" fg:w="1"/><text x="27.8554%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.6054%" y="517" width="0.0796%" height="15" fill="rgb(253,4,17)" fg:x="347" fg:w="1"/><text x="27.8554%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::identifiers::model::Identifiers&gt;&gt; (1 samples, 0.08%)</title><rect x="27.6850%" y="709" width="0.0796%" height="15" fill="rgb(206,150,43)" fg:x="348" fg:w="1"/><text x="27.9350%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="27.6850%" y="725" width="0.1591%" height="15" fill="rgb(241,100,52)" fg:x="348" fg:w="2"/><text x="27.9350%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="27.7645%" y="709" width="0.0796%" height="15" fill="rgb(234,120,21)" fg:x="349" fg:w="1"/><text x="28.0145%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.7645%" y="693" width="0.0796%" height="15" fill="rgb(231,60,11)" fg:x="349" fg:w="1"/><text x="28.0145%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.7645%" y="677" width="0.0796%" height="15" fill="rgb(247,77,50)" fg:x="349" fg:w="1"/><text x="28.0145%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.8441%" y="677" width="0.1591%" height="15" fill="rgb(251,199,54)" fg:x="350" fg:w="2"/><text x="28.0941%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.8441%" y="661" width="0.1591%" height="15" fill="rgb(212,120,38)" fg:x="350" fg:w="2"/><text x="28.0941%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.8441%" y="645" width="0.1591%" height="15" fill="rgb(250,161,37)" fg:x="350" fg:w="2"/><text x="28.0941%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="27.9236%" y="629" width="0.0796%" height="15" fill="rgb(232,158,45)" fg:x="351" fg:w="1"/><text x="28.1736%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="27.3667%" y="741" width="0.7955%" height="15" fill="rgb(233,114,2)" fg:x="344" fg:w="10"/><text x="27.6167%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="27.8441%" y="725" width="0.3182%" height="15" fill="rgb(248,139,0)" fg:x="350" fg:w="4"/><text x="28.0941%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="27.8441%" y="709" width="0.3182%" height="15" fill="rgb(222,164,18)" fg:x="350" fg:w="4"/><text x="28.0941%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="27.8441%" y="693" width="0.3182%" height="15" fill="rgb(221,140,42)" fg:x="350" fg:w="4"/><text x="28.0941%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="28.0032%" y="677" width="0.1591%" height="15" fill="rgb(209,186,11)" fg:x="352" fg:w="2"/><text x="28.2532%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="28.0032%" y="661" width="0.1591%" height="15" fill="rgb(254,212,38)" fg:x="352" fg:w="2"/><text x="28.2532%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.0032%" y="645" width="0.1591%" height="15" fill="rgb(219,156,31)" fg:x="352" fg:w="2"/><text x="28.2532%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="28.0032%" y="629" width="0.1591%" height="15" fill="rgb(222,148,42)" fg:x="352" fg:w="2"/><text x="28.2532%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::Build&gt; (1 samples, 0.08%)</title><rect x="28.1623%" y="741" width="0.0796%" height="15" fill="rgb(225,65,5)" fg:x="354" fg:w="1"/><text x="28.4123%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (2 samples, 0.16%)</title><rect x="28.3214%" y="725" width="0.1591%" height="15" fill="rgb(235,28,12)" fg:x="356" fg:w="2"/><text x="28.5714%" y="735.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (2 samples, 0.16%)</title><rect x="28.3214%" y="709" width="0.1591%" height="15" fill="rgb(245,58,4)" fg:x="356" fg:w="2"/><text x="28.5714%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.4010%" y="693" width="0.0796%" height="15" fill="rgb(235,118,5)" fg:x="357" fg:w="1"/><text x="28.6510%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.4010%" y="677" width="0.0796%" height="15" fill="rgb(253,196,3)" fg:x="357" fg:w="1"/><text x="28.6510%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.4010%" y="661" width="0.0796%" height="15" fill="rgb(238,90,28)" fg:x="357" fg:w="1"/><text x="28.6510%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.4010%" y="645" width="0.0796%" height="15" fill="rgb(254,227,4)" fg:x="357" fg:w="1"/><text x="28.6510%" y="655.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="28.4010%" y="629" width="0.0796%" height="15" fill="rgb(237,114,35)" fg:x="357" fg:w="1"/><text x="28.6510%" y="639.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="28.4010%" y="613" width="0.0796%" height="15" fill="rgb(221,147,29)" fg:x="357" fg:w="1"/><text x="28.6510%" y="623.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="28.4010%" y="597" width="0.0796%" height="15" fill="rgb(216,201,17)" fg:x="357" fg:w="1"/><text x="28.6510%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="28.4805%" y="725" width="0.0796%" height="15" fill="rgb(251,46,50)" fg:x="358" fg:w="1"/><text x="28.7305%" y="735.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="28.4805%" y="709" width="0.0796%" height="15" fill="rgb(216,143,48)" fg:x="358" fg:w="1"/><text x="28.7305%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4805%" y="693" width="0.0796%" height="15" fill="rgb(224,62,51)" fg:x="358" fg:w="1"/><text x="28.7305%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.4805%" y="677" width="0.0796%" height="15" fill="rgb(232,152,20)" fg:x="358" fg:w="1"/><text x="28.7305%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4805%" y="661" width="0.0796%" height="15" fill="rgb(233,194,7)" fg:x="358" fg:w="1"/><text x="28.7305%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.4805%" y="645" width="0.0796%" height="15" fill="rgb(207,33,22)" fg:x="358" fg:w="1"/><text x="28.7305%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4805%" y="629" width="0.0796%" height="15" fill="rgb(226,54,34)" fg:x="358" fg:w="1"/><text x="28.7305%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.4805%" y="613" width="0.0796%" height="15" fill="rgb(227,161,47)" fg:x="358" fg:w="1"/><text x="28.7305%" y="623.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="28.4805%" y="597" width="0.0796%" height="15" fill="rgb(218,58,37)" fg:x="358" fg:w="1"/><text x="28.7305%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="28.4805%" y="581" width="0.0796%" height="15" fill="rgb(208,173,18)" fg:x="358" fg:w="1"/><text x="28.7305%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (16 samples, 1.27%)</title><rect x="27.3667%" y="773" width="1.2729%" height="15" fill="rgb(230,159,11)" fg:x="344" fg:w="16"/><text x="27.6167%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (16 samples, 1.27%)</title><rect x="27.3667%" y="757" width="1.2729%" height="15" fill="rgb(238,90,51)" fg:x="344" fg:w="16"/><text x="27.6167%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (5 samples, 0.40%)</title><rect x="28.2418%" y="741" width="0.3978%" height="15" fill="rgb(225,97,36)" fg:x="355" fg:w="5"/><text x="28.4918%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="28.5601%" y="725" width="0.0796%" height="15" fill="rgb(211,205,42)" fg:x="359" fg:w="1"/><text x="28.8101%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="28.5601%" y="709" width="0.0796%" height="15" fill="rgb(219,152,7)" fg:x="359" fg:w="1"/><text x="28.8101%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="28.5601%" y="693" width="0.0796%" height="15" fill="rgb(222,79,10)" fg:x="359" fg:w="1"/><text x="28.8101%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.5601%" y="677" width="0.0796%" height="15" fill="rgb(242,13,11)" fg:x="359" fg:w="1"/><text x="28.8101%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5601%" y="661" width="0.0796%" height="15" fill="rgb(231,143,41)" fg:x="359" fg:w="1"/><text x="28.8101%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5601%" y="645" width="0.0796%" height="15" fill="rgb(222,147,19)" fg:x="359" fg:w="1"/><text x="28.8101%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.5601%" y="629" width="0.0796%" height="15" fill="rgb(235,5,39)" fg:x="359" fg:w="1"/><text x="28.8101%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.5601%" y="613" width="0.0796%" height="15" fill="rgb(246,155,51)" fg:x="359" fg:w="1"/><text x="28.8101%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.5601%" y="597" width="0.0796%" height="15" fill="rgb(218,157,4)" fg:x="359" fg:w="1"/><text x="28.8101%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7192%" y="693" width="0.0796%" height="15" fill="rgb(226,184,4)" fg:x="361" fg:w="1"/><text x="28.9692%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.7192%" y="741" width="0.1591%" height="15" fill="rgb(210,103,26)" fg:x="361" fg:w="2"/><text x="28.9692%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.7192%" y="725" width="0.1591%" height="15" fill="rgb(228,23,31)" fg:x="361" fg:w="2"/><text x="28.9692%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.7192%" y="709" width="0.1591%" height="15" fill="rgb(205,176,34)" fg:x="361" fg:w="2"/><text x="28.9692%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7987%" y="693" width="0.0796%" height="15" fill="rgb(246,213,37)" fg:x="362" fg:w="1"/><text x="29.0487%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7987%" y="677" width="0.0796%" height="15" fill="rgb(213,52,45)" fg:x="362" fg:w="1"/><text x="29.0487%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7987%" y="661" width="0.0796%" height="15" fill="rgb(249,9,52)" fg:x="362" fg:w="1"/><text x="29.0487%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7987%" y="645" width="0.0796%" height="15" fill="rgb(205,97,16)" fg:x="362" fg:w="1"/><text x="29.0487%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.7987%" y="629" width="0.0796%" height="15" fill="rgb(214,11,46)" fg:x="362" fg:w="1"/><text x="29.0487%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7987%" y="613" width="0.0796%" height="15" fill="rgb(221,66,18)" fg:x="362" fg:w="1"/><text x="29.0487%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7987%" y="597" width="0.0796%" height="15" fill="rgb(213,49,1)" fg:x="362" fg:w="1"/><text x="29.0487%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7987%" y="581" width="0.0796%" height="15" fill="rgb(232,75,51)" fg:x="362" fg:w="1"/><text x="29.0487%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.7987%" y="565" width="0.0796%" height="15" fill="rgb(208,218,40)" fg:x="362" fg:w="1"/><text x="29.0487%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7987%" y="549" width="0.0796%" height="15" fill="rgb(206,144,50)" fg:x="362" fg:w="1"/><text x="29.0487%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="28.7987%" y="533" width="0.0796%" height="15" fill="rgb(216,9,51)" fg:x="362" fg:w="1"/><text x="29.0487%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="28.7987%" y="517" width="0.0796%" height="15" fill="rgb(226,6,53)" fg:x="362" fg:w="1"/><text x="29.0487%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.8783%" y="613" width="0.0796%" height="15" fill="rgb(216,9,50)" fg:x="363" fg:w="1"/><text x="29.1283%" y="623.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="28.8783%" y="693" width="0.1591%" height="15" fill="rgb(214,101,31)" fg:x="363" fg:w="2"/><text x="29.1283%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="28.8783%" y="677" width="0.1591%" height="15" fill="rgb(247,85,17)" fg:x="363" fg:w="2"/><text x="29.1283%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.8783%" y="661" width="0.1591%" height="15" fill="rgb(248,138,25)" fg:x="363" fg:w="2"/><text x="29.1283%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.8783%" y="645" width="0.1591%" height="15" fill="rgb(225,146,20)" fg:x="363" fg:w="2"/><text x="29.1283%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.8783%" y="629" width="0.1591%" height="15" fill="rgb(224,184,17)" fg:x="363" fg:w="2"/><text x="29.1283%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.9578%" y="613" width="0.0796%" height="15" fill="rgb(231,10,20)" fg:x="364" fg:w="1"/><text x="29.2078%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.9578%" y="597" width="0.0796%" height="15" fill="rgb(210,93,37)" fg:x="364" fg:w="1"/><text x="29.2078%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.9578%" y="581" width="0.0796%" height="15" fill="rgb(226,84,42)" fg:x="364" fg:w="1"/><text x="29.2078%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.9578%" y="565" width="0.0796%" height="15" fill="rgb(253,192,7)" fg:x="364" fg:w="1"/><text x="29.2078%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.9578%" y="549" width="0.0796%" height="15" fill="rgb(214,107,27)" fg:x="364" fg:w="1"/><text x="29.2078%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.9578%" y="533" width="0.0796%" height="15" fill="rgb(238,146,21)" fg:x="364" fg:w="1"/><text x="29.2078%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.9578%" y="517" width="0.0796%" height="15" fill="rgb(209,136,30)" fg:x="364" fg:w="1"/><text x="29.2078%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.9578%" y="501" width="0.0796%" height="15" fill="rgb(226,60,22)" fg:x="364" fg:w="1"/><text x="29.2078%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.9578%" y="485" width="0.0796%" height="15" fill="rgb(243,92,26)" fg:x="364" fg:w="1"/><text x="29.2078%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.9578%" y="469" width="0.0796%" height="15" fill="rgb(211,85,33)" fg:x="364" fg:w="1"/><text x="29.2078%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.9578%" y="453" width="0.0796%" height="15" fill="rgb(243,187,44)" fg:x="364" fg:w="1"/><text x="29.2078%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.9578%" y="437" width="0.0796%" height="15" fill="rgb(251,172,23)" fg:x="364" fg:w="1"/><text x="29.2078%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0374%" y="661" width="0.0796%" height="15" fill="rgb(254,162,50)" fg:x="365" fg:w="1"/><text x="29.2874%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.0374%" y="645" width="0.0796%" height="15" fill="rgb(239,14,53)" fg:x="365" fg:w="1"/><text x="29.2874%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0374%" y="629" width="0.0796%" height="15" fill="rgb(242,208,8)" fg:x="365" fg:w="1"/><text x="29.2874%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0374%" y="613" width="0.0796%" height="15" fill="rgb(225,61,41)" fg:x="365" fg:w="1"/><text x="29.2874%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.0374%" y="597" width="0.0796%" height="15" fill="rgb(219,154,6)" fg:x="365" fg:w="1"/><text x="29.2874%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.0374%" y="581" width="0.0796%" height="15" fill="rgb(227,223,44)" fg:x="365" fg:w="1"/><text x="29.2874%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="29.1169%" y="565" width="0.0796%" height="15" fill="rgb(220,188,6)" fg:x="366" fg:w="1"/><text x="29.3669%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1169%" y="549" width="0.0796%" height="15" fill="rgb(216,65,22)" fg:x="366" fg:w="1"/><text x="29.3669%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="28.8783%" y="741" width="0.3978%" height="15" fill="rgb(236,66,46)" fg:x="363" fg:w="5"/><text x="29.1283%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="28.8783%" y="725" width="0.3978%" height="15" fill="rgb(211,150,52)" fg:x="363" fg:w="5"/><text x="29.1283%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="28.8783%" y="709" width="0.3978%" height="15" fill="rgb(253,89,19)" fg:x="363" fg:w="5"/><text x="29.1283%" y="719.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="29.0374%" y="693" width="0.2387%" height="15" fill="rgb(245,4,1)" fg:x="365" fg:w="3"/><text x="29.2874%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.0374%" y="677" width="0.2387%" height="15" fill="rgb(230,109,16)" fg:x="365" fg:w="3"/><text x="29.2874%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1169%" y="661" width="0.1591%" height="15" fill="rgb(213,7,47)" fg:x="366" fg:w="2"/><text x="29.3669%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.1169%" y="645" width="0.1591%" height="15" fill="rgb(242,148,14)" fg:x="366" fg:w="2"/><text x="29.3669%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1169%" y="629" width="0.1591%" height="15" fill="rgb(238,51,34)" fg:x="366" fg:w="2"/><text x="29.3669%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.1169%" y="613" width="0.1591%" height="15" fill="rgb(222,49,22)" fg:x="366" fg:w="2"/><text x="29.3669%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.1169%" y="597" width="0.1591%" height="15" fill="rgb(237,102,50)" fg:x="366" fg:w="2"/><text x="29.3669%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="29.1169%" y="581" width="0.1591%" height="15" fill="rgb(237,195,8)" fg:x="366" fg:w="2"/><text x="29.3669%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.1965%" y="565" width="0.0796%" height="15" fill="rgb(245,60,18)" fg:x="367" fg:w="1"/><text x="29.4465%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.1965%" y="549" width="0.0796%" height="15" fill="rgb(253,74,32)" fg:x="367" fg:w="1"/><text x="29.4465%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="28.7192%" y="757" width="0.6364%" height="15" fill="rgb(240,91,39)" fg:x="361" fg:w="8"/><text x="28.9692%" y="767.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="29.2761%" y="741" width="0.0796%" height="15" fill="rgb(221,162,34)" fg:x="368" fg:w="1"/><text x="29.5261%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.2761%" y="725" width="0.0796%" height="15" fill="rgb(223,32,2)" fg:x="368" fg:w="1"/><text x="29.5261%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="29.3556%" y="613" width="0.1591%" height="15" fill="rgb(245,220,46)" fg:x="369" fg:w="2"/><text x="29.6056%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.4352%" y="597" width="0.0796%" height="15" fill="rgb(216,38,33)" fg:x="370" fg:w="1"/><text x="29.6852%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4352%" y="581" width="0.0796%" height="15" fill="rgb(210,123,14)" fg:x="370" fg:w="1"/><text x="29.6852%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="29.3556%" y="757" width="0.2387%" height="15" fill="rgb(214,38,47)" fg:x="369" fg:w="3"/><text x="29.6056%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="29.3556%" y="741" width="0.2387%" height="15" fill="rgb(244,180,16)" fg:x="369" fg:w="3"/><text x="29.6056%" y="751.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="29.3556%" y="725" width="0.2387%" height="15" fill="rgb(252,21,32)" fg:x="369" fg:w="3"/><text x="29.6056%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.3556%" y="709" width="0.2387%" height="15" fill="rgb(245,218,31)" fg:x="369" fg:w="3"/><text x="29.6056%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="29.3556%" y="693" width="0.2387%" height="15" fill="rgb(247,81,18)" fg:x="369" fg:w="3"/><text x="29.6056%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="29.3556%" y="677" width="0.2387%" height="15" fill="rgb(220,151,1)" fg:x="369" fg:w="3"/><text x="29.6056%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="29.3556%" y="661" width="0.2387%" height="15" fill="rgb(211,157,11)" fg:x="369" fg:w="3"/><text x="29.6056%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="29.3556%" y="645" width="0.2387%" height="15" fill="rgb(239,46,30)" fg:x="369" fg:w="3"/><text x="29.6056%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="29.3556%" y="629" width="0.2387%" height="15" fill="rgb(236,144,43)" fg:x="369" fg:w="3"/><text x="29.6056%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5147%" y="613" width="0.0796%" height="15" fill="rgb(206,71,45)" fg:x="371" fg:w="1"/><text x="29.7647%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.5147%" y="597" width="0.0796%" height="15" fill="rgb(240,85,31)" fg:x="371" fg:w="1"/><text x="29.7647%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5147%" y="581" width="0.0796%" height="15" fill="rgb(221,43,52)" fg:x="371" fg:w="1"/><text x="29.7647%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.5147%" y="565" width="0.0796%" height="15" fill="rgb(243,106,22)" fg:x="371" fg:w="1"/><text x="29.7647%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (13 samples, 1.03%)</title><rect x="28.6396%" y="773" width="1.0342%" height="15" fill="rgb(209,138,38)" fg:x="360" fg:w="13"/><text x="28.8896%" y="783.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="29.5943%" y="757" width="0.0796%" height="15" fill="rgb(216,63,40)" fg:x="372" fg:w="1"/><text x="29.8443%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="29.5943%" y="741" width="0.0796%" height="15" fill="rgb(206,115,21)" fg:x="372" fg:w="1"/><text x="29.8443%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="29.5943%" y="725" width="0.0796%" height="15" fill="rgb(235,53,44)" fg:x="372" fg:w="1"/><text x="29.8443%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.5943%" y="709" width="0.0796%" height="15" fill="rgb(244,160,14)" fg:x="372" fg:w="1"/><text x="29.8443%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.5943%" y="693" width="0.0796%" height="15" fill="rgb(223,16,19)" fg:x="372" fg:w="1"/><text x="29.8443%" y="703.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (327 samples, 26.01%)</title><rect x="3.7391%" y="789" width="26.0143%" height="15" fill="rgb(242,63,42)" fg:x="47" fg:w="327"/><text x="3.9891%" y="799.50">&lt;tests::HoldingKeyInVessel as tests::World..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="29.6738%" y="773" width="0.0796%" height="15" fill="rgb(209,66,49)" fg:x="373" fg:w="1"/><text x="29.9238%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6738%" y="757" width="0.0796%" height="15" fill="rgb(207,126,46)" fg:x="373" fg:w="1"/><text x="29.9238%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="29.7534%" y="773" width="0.0796%" height="15" fill="rgb(218,160,41)" fg:x="374" fg:w="1"/><text x="30.0034%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7534%" y="757" width="0.0796%" height="15" fill="rgb(234,125,46)" fg:x="374" fg:w="1"/><text x="30.0034%" y="767.50"></text></g><g><title>&lt;kernel::session::SetSession as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="29.8329%" y="773" width="0.0796%" height="15" fill="rgb(205,66,36)" fg:x="375" fg:w="1"/><text x="30.0829%" y="783.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="29.9125%" y="677" width="0.0796%" height="15" fill="rgb(220,135,16)" fg:x="376" fg:w="1"/><text x="30.1625%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="29.9125%" y="773" width="0.1591%" height="15" fill="rgb(214,217,54)" fg:x="376" fg:w="2"/><text x="30.1625%" y="783.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="29.9125%" y="757" width="0.1591%" height="15" fill="rgb(206,30,9)" fg:x="376" fg:w="2"/><text x="30.1625%" y="767.50"></text></g><g><title>std::env::var_os (2 samples, 0.16%)</title><rect x="29.9125%" y="741" width="0.1591%" height="15" fill="rgb(207,196,5)" fg:x="376" fg:w="2"/><text x="30.1625%" y="751.50"></text></g><g><title>std::env::_var_os (2 samples, 0.16%)</title><rect x="29.9125%" y="725" width="0.1591%" height="15" fill="rgb(227,116,12)" fg:x="376" fg:w="2"/><text x="30.1625%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv (2 samples, 0.16%)</title><rect x="29.9125%" y="709" width="0.1591%" height="15" fill="rgb(235,227,13)" fg:x="376" fg:w="2"/><text x="30.1625%" y="719.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (2 samples, 0.16%)</title><rect x="29.9125%" y="693" width="0.1591%" height="15" fill="rgb(238,212,29)" fg:x="376" fg:w="2"/><text x="30.1625%" y="703.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="29.9920%" y="677" width="0.0796%" height="15" fill="rgb(230,152,17)" fg:x="377" fg:w="1"/><text x="30.2420%" y="687.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="29.9920%" y="661" width="0.0796%" height="15" fill="rgb(220,197,1)" fg:x="377" fg:w="1"/><text x="30.2420%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.2307%" y="741" width="0.1591%" height="15" fill="rgb(229,227,40)" fg:x="380" fg:w="2"/><text x="30.4807%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="30.2307%" y="725" width="0.1591%" height="15" fill="rgb(227,179,16)" fg:x="380" fg:w="2"/><text x="30.4807%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.3103%" y="709" width="0.0796%" height="15" fill="rgb(246,116,44)" fg:x="381" fg:w="1"/><text x="30.5603%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="693" width="0.0796%" height="15" fill="rgb(205,191,4)" fg:x="381" fg:w="1"/><text x="30.5603%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.3103%" y="677" width="0.0796%" height="15" fill="rgb(245,69,19)" fg:x="381" fg:w="1"/><text x="30.5603%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="661" width="0.0796%" height="15" fill="rgb(230,29,26)" fg:x="381" fg:w="1"/><text x="30.5603%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="645" width="0.0796%" height="15" fill="rgb(239,192,26)" fg:x="381" fg:w="1"/><text x="30.5603%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="629" width="0.0796%" height="15" fill="rgb(219,92,16)" fg:x="381" fg:w="1"/><text x="30.5603%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.3103%" y="613" width="0.0796%" height="15" fill="rgb(246,147,43)" fg:x="381" fg:w="1"/><text x="30.5603%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="597" width="0.0796%" height="15" fill="rgb(222,147,11)" fg:x="381" fg:w="1"/><text x="30.5603%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="581" width="0.0796%" height="15" fill="rgb(243,71,8)" fg:x="381" fg:w="1"/><text x="30.5603%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="565" width="0.0796%" height="15" fill="rgb(250,36,12)" fg:x="381" fg:w="1"/><text x="30.5603%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.3103%" y="549" width="0.0796%" height="15" fill="rgb(207,168,14)" fg:x="381" fg:w="1"/><text x="30.5603%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="533" width="0.0796%" height="15" fill="rgb(254,210,51)" fg:x="381" fg:w="1"/><text x="30.5603%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="517" width="0.0796%" height="15" fill="rgb(236,152,38)" fg:x="381" fg:w="1"/><text x="30.5603%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="501" width="0.0796%" height="15" fill="rgb(240,164,36)" fg:x="381" fg:w="1"/><text x="30.5603%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.3103%" y="485" width="0.0796%" height="15" fill="rgb(210,171,36)" fg:x="381" fg:w="1"/><text x="30.5603%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.3103%" y="469" width="0.0796%" height="15" fill="rgb(254,156,34)" fg:x="381" fg:w="1"/><text x="30.5603%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.3103%" y="453" width="0.0796%" height="15" fill="rgb(216,204,23)" fg:x="381" fg:w="1"/><text x="30.5603%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.3103%" y="437" width="0.0796%" height="15" fill="rgb(230,75,38)" fg:x="381" fg:w="1"/><text x="30.5603%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="30.3103%" y="421" width="0.0796%" height="15" fill="rgb(248,197,25)" fg:x="381" fg:w="1"/><text x="30.5603%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="30.3103%" y="405" width="0.0796%" height="15" fill="rgb(234,121,26)" fg:x="381" fg:w="1"/><text x="30.5603%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="30.3103%" y="389" width="0.0796%" height="15" fill="rgb(220,41,36)" fg:x="381" fg:w="1"/><text x="30.5603%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="30.3103%" y="373" width="0.0796%" height="15" fill="rgb(227,33,32)" fg:x="381" fg:w="1"/><text x="30.5603%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="30.3103%" y="357" width="0.0796%" height="15" fill="rgb(208,214,54)" fg:x="381" fg:w="1"/><text x="30.5603%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="30.3103%" y="341" width="0.0796%" height="15" fill="rgb(205,37,38)" fg:x="381" fg:w="1"/><text x="30.5603%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.3103%" y="325" width="0.0796%" height="15" fill="rgb(252,2,0)" fg:x="381" fg:w="1"/><text x="30.5603%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="30.3103%" y="309" width="0.0796%" height="15" fill="rgb(212,171,10)" fg:x="381" fg:w="1"/><text x="30.5603%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.3103%" y="293" width="0.0796%" height="15" fill="rgb(239,35,46)" fg:x="381" fg:w="1"/><text x="30.5603%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="30.3103%" y="277" width="0.0796%" height="15" fill="rgb(209,34,42)" fg:x="381" fg:w="1"/><text x="30.5603%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="30.3103%" y="261" width="0.0796%" height="15" fill="rgb(237,9,4)" fg:x="381" fg:w="1"/><text x="30.5603%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="30.3103%" y="245" width="0.0796%" height="15" fill="rgb(254,55,38)" fg:x="381" fg:w="1"/><text x="30.5603%" y="255.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.3103%" y="229" width="0.0796%" height="15" fill="rgb(222,95,29)" fg:x="381" fg:w="1"/><text x="30.5603%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="30.3898%" y="693" width="0.1591%" height="15" fill="rgb(241,218,37)" fg:x="382" fg:w="2"/><text x="30.6398%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5489%" y="661" width="0.0796%" height="15" fill="rgb(225,89,28)" fg:x="384" fg:w="1"/><text x="30.7989%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.5489%" y="645" width="0.0796%" height="15" fill="rgb(231,17,25)" fg:x="384" fg:w="1"/><text x="30.7989%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.5489%" y="629" width="0.0796%" height="15" fill="rgb(206,216,48)" fg:x="384" fg:w="1"/><text x="30.7989%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.5489%" y="693" width="0.1591%" height="15" fill="rgb(247,190,28)" fg:x="384" fg:w="2"/><text x="30.7989%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.5489%" y="677" width="0.1591%" height="15" fill="rgb(216,196,12)" fg:x="384" fg:w="2"/><text x="30.7989%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6285%" y="661" width="0.0796%" height="15" fill="rgb(232,114,19)" fg:x="385" fg:w="1"/><text x="30.8785%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7876%" y="677" width="0.0796%" height="15" fill="rgb(240,60,14)" fg:x="387" fg:w="1"/><text x="31.0376%" y="687.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="30.7080%" y="693" width="0.2387%" height="15" fill="rgb(250,108,9)" fg:x="386" fg:w="3"/><text x="30.9580%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.8671%" y="677" width="0.0796%" height="15" fill="rgb(227,228,21)" fg:x="388" fg:w="1"/><text x="31.1171%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.0263%" y="661" width="0.0796%" height="15" fill="rgb(254,16,52)" fg:x="390" fg:w="1"/><text x="31.2763%" y="671.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="31.1058%" y="613" width="0.0796%" height="15" fill="rgb(222,58,2)" fg:x="391" fg:w="1"/><text x="31.3558%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="31.1058%" y="597" width="0.0796%" height="15" fill="rgb(253,68,14)" fg:x="391" fg:w="1"/><text x="31.3558%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="31.1058%" y="629" width="0.1591%" height="15" fill="rgb(226,96,17)" fg:x="391" fg:w="2"/><text x="31.3558%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.1854%" y="613" width="0.0796%" height="15" fill="rgb(227,199,2)" fg:x="392" fg:w="1"/><text x="31.4354%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.1854%" y="597" width="0.0796%" height="15" fill="rgb(228,227,48)" fg:x="392" fg:w="1"/><text x="31.4354%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="31.1058%" y="661" width="0.2387%" height="15" fill="rgb(249,183,0)" fg:x="391" fg:w="3"/><text x="31.3558%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="31.1058%" y="645" width="0.2387%" height="15" fill="rgb(250,89,38)" fg:x="391" fg:w="3"/><text x="31.3558%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2649%" y="629" width="0.0796%" height="15" fill="rgb(240,227,8)" fg:x="393" fg:w="1"/><text x="31.5149%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3445%" y="629" width="0.0796%" height="15" fill="rgb(242,197,35)" fg:x="394" fg:w="1"/><text x="31.5945%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (18 samples, 1.43%)</title><rect x="30.0716%" y="757" width="1.4320%" height="15" fill="rgb(224,37,41)" fg:x="378" fg:w="18"/><text x="30.3216%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (14 samples, 1.11%)</title><rect x="30.3898%" y="741" width="1.1138%" height="15" fill="rgb(236,127,7)" fg:x="382" fg:w="14"/><text x="30.6398%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (14 samples, 1.11%)</title><rect x="30.3898%" y="725" width="1.1138%" height="15" fill="rgb(230,62,52)" fg:x="382" fg:w="14"/><text x="30.6398%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.11%)</title><rect x="30.3898%" y="709" width="1.1138%" height="15" fill="rgb(235,114,23)" fg:x="382" fg:w="14"/><text x="30.6398%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="30.9467%" y="693" width="0.5569%" height="15" fill="rgb(211,55,40)" fg:x="389" fg:w="7"/><text x="31.1967%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="30.9467%" y="677" width="0.5569%" height="15" fill="rgb(228,123,1)" fg:x="389" fg:w="7"/><text x="31.1967%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.3445%" y="661" width="0.1591%" height="15" fill="rgb(244,208,8)" fg:x="394" fg:w="2"/><text x="31.5945%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.3445%" y="645" width="0.1591%" height="15" fill="rgb(237,118,14)" fg:x="394" fg:w="2"/><text x="31.5945%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.4240%" y="629" width="0.0796%" height="15" fill="rgb(219,170,13)" fg:x="395" fg:w="1"/><text x="31.6740%" y="639.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="31.4240%" y="613" width="0.0796%" height="15" fill="rgb(212,39,43)" fg:x="395" fg:w="1"/><text x="31.6740%" y="623.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.4240%" y="597" width="0.0796%" height="15" fill="rgb(244,191,2)" fg:x="395" fg:w="1"/><text x="31.6740%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (3 samples, 0.24%)</title><rect x="31.5036%" y="709" width="0.2387%" height="15" fill="rgb(219,201,46)" fg:x="396" fg:w="3"/><text x="31.7536%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.6627%" y="693" width="0.0796%" height="15" fill="rgb(218,82,7)" fg:x="398" fg:w="1"/><text x="31.9127%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.6627%" y="677" width="0.0796%" height="15" fill="rgb(208,192,8)" fg:x="398" fg:w="1"/><text x="31.9127%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6627%" y="661" width="0.0796%" height="15" fill="rgb(244,54,32)" fg:x="398" fg:w="1"/><text x="31.9127%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="31.5036%" y="741" width="0.3978%" height="15" fill="rgb(240,43,52)" fg:x="396" fg:w="5"/><text x="31.7536%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="31.5036%" y="725" width="0.3978%" height="15" fill="rgb(233,134,29)" fg:x="396" fg:w="5"/><text x="31.7536%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.7422%" y="709" width="0.1591%" height="15" fill="rgb(236,128,10)" fg:x="399" fg:w="2"/><text x="31.9922%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2991%" y="709" width="0.0796%" height="15" fill="rgb(207,46,54)" fg:x="406" fg:w="1"/><text x="32.5491%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2991%" y="693" width="0.0796%" height="15" fill="rgb(248,140,35)" fg:x="406" fg:w="1"/><text x="32.5491%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2991%" y="677" width="0.0796%" height="15" fill="rgb(241,103,35)" fg:x="406" fg:w="1"/><text x="32.5491%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2991%" y="661" width="0.0796%" height="15" fill="rgb(223,19,48)" fg:x="406" fg:w="1"/><text x="32.5491%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2991%" y="645" width="0.0796%" height="15" fill="rgb(238,177,46)" fg:x="406" fg:w="1"/><text x="32.5491%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2991%" y="629" width="0.0796%" height="15" fill="rgb(213,102,15)" fg:x="406" fg:w="1"/><text x="32.5491%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2991%" y="613" width="0.0796%" height="15" fill="rgb(254,135,52)" fg:x="406" fg:w="1"/><text x="32.5491%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2991%" y="597" width="0.0796%" height="15" fill="rgb(240,59,6)" fg:x="406" fg:w="1"/><text x="32.5491%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2991%" y="581" width="0.0796%" height="15" fill="rgb(207,226,5)" fg:x="406" fg:w="1"/><text x="32.5491%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2991%" y="565" width="0.0796%" height="15" fill="rgb(208,167,17)" fg:x="406" fg:w="1"/><text x="32.5491%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2991%" y="549" width="0.0796%" height="15" fill="rgb(254,94,10)" fg:x="406" fg:w="1"/><text x="32.5491%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.2991%" y="533" width="0.0796%" height="15" fill="rgb(229,33,11)" fg:x="406" fg:w="1"/><text x="32.5491%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.4582%" y="693" width="0.0796%" height="15" fill="rgb(249,145,48)" fg:x="408" fg:w="1"/><text x="32.7082%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="32.5378%" y="677" width="0.0796%" height="15" fill="rgb(253,68,54)" fg:x="409" fg:w="1"/><text x="32.7878%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.5378%" y="661" width="0.0796%" height="15" fill="rgb(223,27,42)" fg:x="409" fg:w="1"/><text x="32.7878%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.5378%" y="645" width="0.0796%" height="15" fill="rgb(235,123,13)" fg:x="409" fg:w="1"/><text x="32.7878%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="32.5378%" y="693" width="0.1591%" height="15" fill="rgb(244,154,7)" fg:x="409" fg:w="2"/><text x="32.7878%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.6173%" y="677" width="0.0796%" height="15" fill="rgb(214,30,25)" fg:x="410" fg:w="1"/><text x="32.8673%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="32.6173%" y="661" width="0.0796%" height="15" fill="rgb(252,189,13)" fg:x="410" fg:w="1"/><text x="32.8673%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.7765%" y="677" width="0.0796%" height="15" fill="rgb(234,27,40)" fg:x="412" fg:w="1"/><text x="33.0265%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="32.7765%" y="661" width="0.0796%" height="15" fill="rgb(252,199,25)" fg:x="412" fg:w="1"/><text x="33.0265%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="32.8560%" y="677" width="0.3978%" height="15" fill="rgb(234,207,20)" fg:x="413" fg:w="5"/><text x="33.1060%" y="687.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="32.8560%" y="661" width="0.3978%" height="15" fill="rgb(244,220,10)" fg:x="413" fg:w="5"/><text x="33.1060%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="33.0151%" y="645" width="0.2387%" height="15" fill="rgb(247,68,23)" fg:x="415" fg:w="3"/><text x="33.2651%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="33.0151%" y="629" width="0.2387%" height="15" fill="rgb(254,61,4)" fg:x="415" fg:w="3"/><text x="33.2651%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.1742%" y="613" width="0.0796%" height="15" fill="rgb(245,208,35)" fg:x="417" fg:w="1"/><text x="33.4242%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.1742%" y="597" width="0.0796%" height="15" fill="rgb(235,90,11)" fg:x="417" fg:w="1"/><text x="33.4242%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.1742%" y="581" width="0.0796%" height="15" fill="rgb(239,139,43)" fg:x="417" fg:w="1"/><text x="33.4242%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="33.2538%" y="629" width="0.0796%" height="15" fill="rgb(209,187,9)" fg:x="418" fg:w="1"/><text x="33.5038%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.2538%" y="613" width="0.0796%" height="15" fill="rgb(241,30,6)" fg:x="418" fg:w="1"/><text x="33.5038%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.2538%" y="597" width="0.0796%" height="15" fill="rgb(216,104,1)" fg:x="418" fg:w="1"/><text x="33.5038%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.2538%" y="581" width="0.0796%" height="15" fill="rgb(238,55,39)" fg:x="418" fg:w="1"/><text x="33.5038%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.2538%" y="565" width="0.0796%" height="15" fill="rgb(226,151,41)" fg:x="418" fg:w="1"/><text x="33.5038%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.2538%" y="549" width="0.0796%" height="15" fill="rgb(228,73,40)" fg:x="418" fg:w="1"/><text x="33.5038%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.2538%" y="533" width="0.0796%" height="15" fill="rgb(215,81,0)" fg:x="418" fg:w="1"/><text x="33.5038%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="33.2538%" y="661" width="0.1591%" height="15" fill="rgb(209,52,39)" fg:x="418" fg:w="2"/><text x="33.5038%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="33.2538%" y="645" width="0.1591%" height="15" fill="rgb(221,127,5)" fg:x="418" fg:w="2"/><text x="33.5038%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="33.3333%" y="629" width="0.0796%" height="15" fill="rgb(213,215,6)" fg:x="419" fg:w="1"/><text x="33.5833%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="33.3333%" y="613" width="0.0796%" height="15" fill="rgb(214,118,13)" fg:x="419" fg:w="1"/><text x="33.5833%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="33.3333%" y="597" width="0.0796%" height="15" fill="rgb(207,205,41)" fg:x="419" fg:w="1"/><text x="33.5833%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="33.3333%" y="581" width="0.0796%" height="15" fill="rgb(218,208,45)" fg:x="419" fg:w="1"/><text x="33.5833%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.3333%" y="565" width="0.0796%" height="15" fill="rgb(244,81,54)" fg:x="419" fg:w="1"/><text x="33.5833%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.3333%" y="549" width="0.0796%" height="15" fill="rgb(244,175,1)" fg:x="419" fg:w="1"/><text x="33.5833%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.3333%" y="533" width="0.0796%" height="15" fill="rgb(232,128,28)" fg:x="419" fg:w="1"/><text x="33.5833%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.3333%" y="517" width="0.0796%" height="15" fill="rgb(234,83,13)" fg:x="419" fg:w="1"/><text x="33.5833%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="33.5720%" y="613" width="0.2387%" height="15" fill="rgb(233,222,35)" fg:x="422" fg:w="3"/><text x="33.8220%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.7311%" y="597" width="0.0796%" height="15" fill="rgb(244,204,21)" fg:x="424" fg:w="1"/><text x="33.9811%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.7311%" y="581" width="0.0796%" height="15" fill="rgb(225,121,40)" fg:x="424" fg:w="1"/><text x="33.9811%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.7311%" y="565" width="0.0796%" height="15" fill="rgb(231,89,18)" fg:x="424" fg:w="1"/><text x="33.9811%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="33.4129%" y="661" width="0.4773%" height="15" fill="rgb(205,41,50)" fg:x="420" fg:w="6"/><text x="33.6629%" y="671.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="33.4129%" y="645" width="0.4773%" height="15" fill="rgb(254,25,22)" fg:x="420" fg:w="6"/><text x="33.6629%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="33.5720%" y="629" width="0.3182%" height="15" fill="rgb(208,44,21)" fg:x="422" fg:w="4"/><text x="33.8220%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="33.8107%" y="613" width="0.0796%" height="15" fill="rgb(237,59,53)" fg:x="425" fg:w="1"/><text x="34.0607%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="33.9698%" y="629" width="0.0796%" height="15" fill="rgb(233,24,36)" fg:x="427" fg:w="1"/><text x="34.2198%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="34.0493%" y="613" width="0.0796%" height="15" fill="rgb(216,92,41)" fg:x="428" fg:w="1"/><text x="34.2993%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.1289%" y="597" width="0.0796%" height="15" fill="rgb(225,158,49)" fg:x="429" fg:w="1"/><text x="34.3789%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="34.1289%" y="581" width="0.0796%" height="15" fill="rgb(244,11,16)" fg:x="429" fg:w="1"/><text x="34.3789%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.2084%" y="597" width="0.3182%" height="15" fill="rgb(208,215,38)" fg:x="430" fg:w="4"/><text x="34.4584%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="34.2084%" y="581" width="0.3182%" height="15" fill="rgb(250,69,53)" fg:x="430" fg:w="4"/><text x="34.4584%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="34.2084%" y="565" width="0.3182%" height="15" fill="rgb(240,187,52)" fg:x="430" fg:w="4"/><text x="34.4584%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="34.2084%" y="549" width="0.3182%" height="15" fill="rgb(235,22,25)" fg:x="430" fg:w="4"/><text x="34.4584%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="34.2084%" y="533" width="0.3182%" height="15" fill="rgb(213,173,22)" fg:x="430" fg:w="4"/><text x="34.4584%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="34.2084%" y="517" width="0.3182%" height="15" fill="rgb(218,47,0)" fg:x="430" fg:w="4"/><text x="34.4584%" y="527.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="34.2084%" y="501" width="0.3182%" height="15" fill="rgb(254,157,11)" fg:x="430" fg:w="4"/><text x="34.4584%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="34.1289%" y="613" width="0.5569%" height="15" fill="rgb(233,154,6)" fg:x="429" fg:w="7"/><text x="34.3789%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="34.5267%" y="597" width="0.1591%" height="15" fill="rgb(233,207,47)" fg:x="434" fg:w="2"/><text x="34.7767%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.5267%" y="581" width="0.1591%" height="15" fill="rgb(249,128,18)" fg:x="434" fg:w="2"/><text x="34.7767%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="34.6062%" y="565" width="0.0796%" height="15" fill="rgb(211,27,42)" fg:x="435" fg:w="1"/><text x="34.8562%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="34.0493%" y="629" width="1.2729%" height="15" fill="rgb(240,163,26)" fg:x="428" fg:w="16"/><text x="34.2993%" y="639.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.64%)</title><rect x="34.6858%" y="613" width="0.6364%" height="15" fill="rgb(232,118,46)" fg:x="436" fg:w="8"/><text x="34.9358%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (8 samples, 0.64%)</title><rect x="34.6858%" y="597" width="0.6364%" height="15" fill="rgb(238,158,34)" fg:x="436" fg:w="8"/><text x="34.9358%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.56%)</title><rect x="34.7653%" y="581" width="0.5569%" height="15" fill="rgb(254,99,45)" fg:x="437" fg:w="7"/><text x="35.0153%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.56%)</title><rect x="34.7653%" y="565" width="0.5569%" height="15" fill="rgb(247,205,20)" fg:x="437" fg:w="7"/><text x="35.0153%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.56%)</title><rect x="34.7653%" y="549" width="0.5569%" height="15" fill="rgb(240,20,41)" fg:x="437" fg:w="7"/><text x="35.0153%" y="559.50"></text></g><g><title>realloc (7 samples, 0.56%)</title><rect x="34.7653%" y="533" width="0.5569%" height="15" fill="rgb(231,22,43)" fg:x="437" fg:w="7"/><text x="35.0153%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.59%)</title><rect x="33.8902%" y="645" width="1.5911%" height="15" fill="rgb(207,86,33)" fg:x="426" fg:w="20"/><text x="34.1402%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.3222%" y="629" width="0.1591%" height="15" fill="rgb(231,148,5)" fg:x="444" fg:w="2"/><text x="35.5722%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.3222%" y="613" width="0.1591%" height="15" fill="rgb(253,77,28)" fg:x="444" fg:w="2"/><text x="35.5722%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.4018%" y="597" width="0.0796%" height="15" fill="rgb(253,227,9)" fg:x="445" fg:w="1"/><text x="35.6518%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (21 samples, 1.67%)</title><rect x="33.8902%" y="661" width="1.6706%" height="15" fill="rgb(235,4,18)" fg:x="426" fg:w="21"/><text x="34.1402%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.4813%" y="645" width="0.0796%" height="15" fill="rgb(205,206,45)" fg:x="446" fg:w="1"/><text x="35.7313%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.4813%" y="629" width="0.0796%" height="15" fill="rgb(252,34,0)" fg:x="446" fg:w="1"/><text x="35.7313%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.4813%" y="613" width="0.0796%" height="15" fill="rgb(213,56,7)" fg:x="446" fg:w="1"/><text x="35.7313%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.47%)</title><rect x="33.2538%" y="677" width="2.4662%" height="15" fill="rgb(227,74,29)" fg:x="418" fg:w="31"/><text x="33.5038%" y="687.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.5609%" y="661" width="0.1591%" height="15" fill="rgb(221,32,48)" fg:x="447" fg:w="2"/><text x="35.8109%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.5609%" y="645" width="0.1591%" height="15" fill="rgb(230,205,25)" fg:x="447" fg:w="2"/><text x="35.8109%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.6404%" y="629" width="0.0796%" height="15" fill="rgb(215,110,9)" fg:x="448" fg:w="1"/><text x="35.8904%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (49 samples, 3.90%)</title><rect x="32.3787%" y="709" width="3.8982%" height="15" fill="rgb(245,220,47)" fg:x="407" fg:w="49"/><text x="32.6287%" y="719.50">&lt;ser..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (45 samples, 3.58%)</title><rect x="32.6969%" y="693" width="3.5800%" height="15" fill="rgb(224,117,5)" fg:x="411" fg:w="45"/><text x="32.9469%" y="703.50">serd..</text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="35.7200%" y="677" width="0.5569%" height="15" fill="rgb(242,208,25)" fg:x="449" fg:w="7"/><text x="35.9700%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="35.9586%" y="661" width="0.3182%" height="15" fill="rgb(226,12,37)" fg:x="452" fg:w="4"/><text x="36.2086%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="36.0382%" y="645" width="0.2387%" height="15" fill="rgb(224,221,22)" fg:x="453" fg:w="3"/><text x="36.2882%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.1177%" y="629" width="0.1591%" height="15" fill="rgb(239,38,44)" fg:x="454" fg:w="2"/><text x="36.3677%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="36.1177%" y="613" width="0.1591%" height="15" fill="rgb(218,25,46)" fg:x="454" fg:w="2"/><text x="36.3677%" y="623.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="36.1177%" y="597" width="0.1591%" height="15" fill="rgb(206,137,51)" fg:x="454" fg:w="2"/><text x="36.3677%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.3564%" y="677" width="0.0796%" height="15" fill="rgb(233,174,3)" fg:x="457" fg:w="1"/><text x="36.6064%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3564%" y="661" width="0.0796%" height="15" fill="rgb(207,224,43)" fg:x="457" fg:w="1"/><text x="36.6064%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.4360%" y="661" width="0.0796%" height="15" fill="rgb(230,46,27)" fg:x="458" fg:w="1"/><text x="36.6860%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.5155%" y="661" width="0.1591%" height="15" fill="rgb(251,215,32)" fg:x="459" fg:w="2"/><text x="36.7655%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.5951%" y="645" width="0.0796%" height="15" fill="rgb(244,219,19)" fg:x="460" fg:w="1"/><text x="36.8451%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.8337%" y="645" width="0.0796%" height="15" fill="rgb(242,125,36)" fg:x="463" fg:w="1"/><text x="37.0837%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="36.9133%" y="645" width="0.1591%" height="15" fill="rgb(251,211,12)" fg:x="464" fg:w="2"/><text x="37.1633%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.9928%" y="629" width="0.0796%" height="15" fill="rgb(209,179,33)" fg:x="465" fg:w="1"/><text x="37.2428%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.1519%" y="629" width="0.0796%" height="15" fill="rgb(205,161,48)" fg:x="467" fg:w="1"/><text x="37.4019%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.2315%" y="629" width="0.0796%" height="15" fill="rgb(241,139,8)" fg:x="468" fg:w="1"/><text x="37.4815%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2315%" y="613" width="0.0796%" height="15" fill="rgb(246,159,53)" fg:x="468" fg:w="1"/><text x="37.4815%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.3111%" y="597" width="0.0796%" height="15" fill="rgb(212,62,27)" fg:x="469" fg:w="1"/><text x="37.5611%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="37.3111%" y="629" width="0.1591%" height="15" fill="rgb(216,168,18)" fg:x="469" fg:w="2"/><text x="37.5611%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="37.3111%" y="613" width="0.1591%" height="15" fill="rgb(228,136,50)" fg:x="469" fg:w="2"/><text x="37.5611%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.3906%" y="597" width="0.0796%" height="15" fill="rgb(237,19,45)" fg:x="470" fg:w="1"/><text x="37.6406%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.4702%" y="613" width="0.0796%" height="15" fill="rgb(249,150,28)" fg:x="471" fg:w="1"/><text x="37.7202%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.4702%" y="597" width="0.0796%" height="15" fill="rgb(236,179,39)" fg:x="471" fg:w="1"/><text x="37.7202%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.5497%" y="597" width="0.0796%" height="15" fill="rgb(250,113,27)" fg:x="472" fg:w="1"/><text x="37.7997%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="37.6293%" y="597" width="0.1591%" height="15" fill="rgb(223,13,14)" fg:x="473" fg:w="2"/><text x="37.8793%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="37.6293%" y="581" width="0.1591%" height="15" fill="rgb(226,68,24)" fg:x="473" fg:w="2"/><text x="37.8793%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.59%)</title><rect x="36.2768%" y="709" width="1.5911%" height="15" fill="rgb(239,40,50)" fg:x="456" fg:w="20"/><text x="36.5268%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.59%)</title><rect x="36.2768%" y="693" width="1.5911%" height="15" fill="rgb(209,187,0)" fg:x="456" fg:w="20"/><text x="36.5268%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.43%)</title><rect x="36.4360%" y="677" width="1.4320%" height="15" fill="rgb(240,61,8)" fg:x="458" fg:w="18"/><text x="36.6860%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.19%)</title><rect x="36.6746%" y="661" width="1.1933%" height="15" fill="rgb(236,137,5)" fg:x="461" fg:w="15"/><text x="36.9246%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="37.0724%" y="645" width="0.7955%" height="15" fill="rgb(247,214,21)" fg:x="466" fg:w="10"/><text x="37.3224%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="37.4702%" y="629" width="0.3978%" height="15" fill="rgb(244,115,25)" fg:x="471" fg:w="5"/><text x="37.7202%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="37.5497%" y="613" width="0.3182%" height="15" fill="rgb(230,58,38)" fg:x="472" fg:w="4"/><text x="37.7997%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="37.7884%" y="597" width="0.0796%" height="15" fill="rgb(206,122,6)" fg:x="475" fg:w="1"/><text x="38.0384%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9475%" y="629" width="0.0796%" height="15" fill="rgb(217,135,53)" fg:x="477" fg:w="1"/><text x="38.1975%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.0270%" y="629" width="0.0796%" height="15" fill="rgb(225,120,8)" fg:x="478" fg:w="1"/><text x="38.2770%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.0270%" y="613" width="0.0796%" height="15" fill="rgb(226,3,30)" fg:x="478" fg:w="1"/><text x="38.2770%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="38.1862%" y="613" width="0.2387%" height="15" fill="rgb(214,159,38)" fg:x="480" fg:w="3"/><text x="38.4362%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.2657%" y="597" width="0.1591%" height="15" fill="rgb(242,182,47)" fg:x="481" fg:w="2"/><text x="38.5157%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.4248%" y="597" width="0.1591%" height="15" fill="rgb(245,202,26)" fg:x="483" fg:w="2"/><text x="38.6748%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="38.5839%" y="597" width="0.1591%" height="15" fill="rgb(226,163,3)" fg:x="485" fg:w="2"/><text x="38.8339%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="38.5839%" y="581" width="0.1591%" height="15" fill="rgb(219,4,4)" fg:x="485" fg:w="2"/><text x="38.8339%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6635%" y="565" width="0.0796%" height="15" fill="rgb(223,85,4)" fg:x="486" fg:w="1"/><text x="38.9135%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7430%" y="565" width="0.0796%" height="15" fill="rgb(242,170,11)" fg:x="487" fg:w="1"/><text x="38.9930%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.8226%" y="565" width="0.1591%" height="15" fill="rgb(221,97,42)" fg:x="488" fg:w="2"/><text x="39.0726%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.8226%" y="549" width="0.1591%" height="15" fill="rgb(231,206,45)" fg:x="488" fg:w="2"/><text x="39.0726%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="37.8679%" y="677" width="1.2729%" height="15" fill="rgb(216,23,48)" fg:x="476" fg:w="16"/><text x="38.1179%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.27%)</title><rect x="37.8679%" y="661" width="1.2729%" height="15" fill="rgb(225,49,9)" fg:x="476" fg:w="16"/><text x="38.1179%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (16 samples, 1.27%)</title><rect x="37.8679%" y="645" width="1.2729%" height="15" fill="rgb(247,24,47)" fg:x="476" fg:w="16"/><text x="38.1179%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.03%)</title><rect x="38.1066%" y="629" width="1.0342%" height="15" fill="rgb(253,145,10)" fg:x="479" fg:w="13"/><text x="38.3566%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="38.4248%" y="613" width="0.7160%" height="15" fill="rgb(206,62,10)" fg:x="483" fg:w="9"/><text x="38.6748%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="38.7430%" y="597" width="0.3978%" height="15" fill="rgb(224,159,31)" fg:x="487" fg:w="5"/><text x="38.9930%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="38.7430%" y="581" width="0.3978%" height="15" fill="rgb(234,184,15)" fg:x="487" fg:w="5"/><text x="38.9930%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="38.9817%" y="565" width="0.1591%" height="15" fill="rgb(237,101,1)" fg:x="490" fg:w="2"/><text x="39.2317%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0613%" y="549" width="0.0796%" height="15" fill="rgb(211,99,29)" fg:x="491" fg:w="1"/><text x="39.3113%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="39.1408%" y="677" width="0.1591%" height="15" fill="rgb(250,167,3)" fg:x="492" fg:w="2"/><text x="39.3908%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2204%" y="661" width="0.0796%" height="15" fill="rgb(225,58,6)" fg:x="493" fg:w="1"/><text x="39.4704%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="39.6977%" y="613" width="0.1591%" height="15" fill="rgb(251,161,21)" fg:x="499" fg:w="2"/><text x="39.9477%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="39.6977%" y="597" width="0.1591%" height="15" fill="rgb(253,203,35)" fg:x="499" fg:w="2"/><text x="39.9477%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="39.6977%" y="581" width="0.1591%" height="15" fill="rgb(214,220,52)" fg:x="499" fg:w="2"/><text x="39.9477%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="39.7772%" y="565" width="0.0796%" height="15" fill="rgb(235,216,33)" fg:x="500" fg:w="1"/><text x="40.0272%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="39.6181%" y="629" width="0.3182%" height="15" fill="rgb(231,79,26)" fg:x="498" fg:w="4"/><text x="39.8681%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.8568%" y="613" width="0.0796%" height="15" fill="rgb(244,218,10)" fg:x="501" fg:w="1"/><text x="40.1068%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="39.3795%" y="645" width="0.6364%" height="15" fill="rgb(238,15,9)" fg:x="495" fg:w="8"/><text x="39.6295%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="39.9364%" y="629" width="0.0796%" height="15" fill="rgb(235,112,15)" fg:x="502" fg:w="1"/><text x="40.1864%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.80%)</title><rect x="39.2999%" y="661" width="0.7955%" height="15" fill="rgb(239,126,18)" fg:x="494" fg:w="10"/><text x="39.5499%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.0159%" y="645" width="0.0796%" height="15" fill="rgb(253,171,19)" fg:x="503" fg:w="1"/><text x="40.2659%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="40.0955%" y="661" width="0.0796%" height="15" fill="rgb(237,218,25)" fg:x="504" fg:w="1"/><text x="40.3455%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1750%" y="661" width="0.0796%" height="15" fill="rgb(213,88,46)" fg:x="505" fg:w="1"/><text x="40.4250%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2546%" y="629" width="0.0796%" height="15" fill="rgb(222,124,54)" fg:x="506" fg:w="1"/><text x="40.5046%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.2546%" y="613" width="0.0796%" height="15" fill="rgb(209,206,42)" fg:x="506" fg:w="1"/><text x="40.5046%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.2546%" y="597" width="0.0796%" height="15" fill="rgb(219,25,49)" fg:x="506" fg:w="1"/><text x="40.5046%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.2546%" y="581" width="0.0796%" height="15" fill="rgb(228,207,53)" fg:x="506" fg:w="1"/><text x="40.5046%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.2546%" y="565" width="0.0796%" height="15" fill="rgb(224,3,4)" fg:x="506" fg:w="1"/><text x="40.5046%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2546%" y="549" width="0.0796%" height="15" fill="rgb(254,206,26)" fg:x="506" fg:w="1"/><text x="40.5046%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.2546%" y="533" width="0.0796%" height="15" fill="rgb(209,4,26)" fg:x="506" fg:w="1"/><text x="40.5046%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.2546%" y="517" width="0.0796%" height="15" fill="rgb(243,193,32)" fg:x="506" fg:w="1"/><text x="40.5046%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.2546%" y="501" width="0.0796%" height="15" fill="rgb(225,150,36)" fg:x="506" fg:w="1"/><text x="40.5046%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.2546%" y="485" width="0.0796%" height="15" fill="rgb(225,131,26)" fg:x="506" fg:w="1"/><text x="40.5046%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.2546%" y="469" width="0.0796%" height="15" fill="rgb(236,126,12)" fg:x="506" fg:w="1"/><text x="40.5046%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.2546%" y="453" width="0.0796%" height="15" fill="rgb(238,167,44)" fg:x="506" fg:w="1"/><text x="40.5046%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.2546%" y="645" width="0.1591%" height="15" fill="rgb(238,153,31)" fg:x="506" fg:w="2"/><text x="40.5046%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3341%" y="629" width="0.0796%" height="15" fill="rgb(254,41,51)" fg:x="507" fg:w="1"/><text x="40.5841%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4137%" y="629" width="0.0796%" height="15" fill="rgb(224,100,52)" fg:x="508" fg:w="1"/><text x="40.6637%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4137%" y="613" width="0.0796%" height="15" fill="rgb(246,226,38)" fg:x="508" fg:w="1"/><text x="40.6637%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.4137%" y="597" width="0.0796%" height="15" fill="rgb(252,21,43)" fg:x="508" fg:w="1"/><text x="40.6637%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.4137%" y="581" width="0.0796%" height="15" fill="rgb(250,44,8)" fg:x="508" fg:w="1"/><text x="40.6637%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.4137%" y="565" width="0.0796%" height="15" fill="rgb(224,200,45)" fg:x="508" fg:w="1"/><text x="40.6637%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.4137%" y="549" width="0.0796%" height="15" fill="rgb(208,75,52)" fg:x="508" fg:w="1"/><text x="40.6637%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4137%" y="533" width="0.0796%" height="15" fill="rgb(213,167,20)" fg:x="508" fg:w="1"/><text x="40.6637%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.4137%" y="517" width="0.0796%" height="15" fill="rgb(236,163,42)" fg:x="508" fg:w="1"/><text x="40.6637%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.4137%" y="501" width="0.0796%" height="15" fill="rgb(210,98,31)" fg:x="508" fg:w="1"/><text x="40.6637%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.4137%" y="485" width="0.0796%" height="15" fill="rgb(246,166,15)" fg:x="508" fg:w="1"/><text x="40.6637%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.4137%" y="469" width="0.0796%" height="15" fill="rgb(214,114,7)" fg:x="508" fg:w="1"/><text x="40.6637%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.4137%" y="453" width="0.0796%" height="15" fill="rgb(217,202,34)" fg:x="508" fg:w="1"/><text x="40.6637%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.4137%" y="437" width="0.0796%" height="15" fill="rgb(227,226,29)" fg:x="508" fg:w="1"/><text x="40.6637%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="40.4932%" y="629" width="0.1591%" height="15" fill="rgb(254,65,44)" fg:x="509" fg:w="2"/><text x="40.7432%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.6523%" y="597" width="0.0796%" height="15" fill="rgb(213,150,32)" fg:x="511" fg:w="1"/><text x="40.9023%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.7319%" y="597" width="0.0796%" height="15" fill="rgb(208,86,46)" fg:x="512" fg:w="1"/><text x="40.9819%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.7319%" y="581" width="0.0796%" height="15" fill="rgb(222,75,3)" fg:x="512" fg:w="1"/><text x="40.9819%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8115%" y="597" width="0.0796%" height="15" fill="rgb(225,213,9)" fg:x="513" fg:w="1"/><text x="41.0615%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="40.8115%" y="581" width="0.0796%" height="15" fill="rgb(209,199,10)" fg:x="513" fg:w="1"/><text x="41.0615%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="40.8115%" y="565" width="0.0796%" height="15" fill="rgb(213,18,17)" fg:x="513" fg:w="1"/><text x="41.0615%" y="575.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="40.6523%" y="613" width="0.3182%" height="15" fill="rgb(243,79,44)" fg:x="511" fg:w="4"/><text x="40.9023%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="40.8910%" y="597" width="0.0796%" height="15" fill="rgb(226,20,5)" fg:x="514" fg:w="1"/><text x="41.1410%" y="607.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="40.8910%" y="581" width="0.0796%" height="15" fill="rgb(217,52,31)" fg:x="514" fg:w="1"/><text x="41.1410%" y="591.50"></text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="40.2546%" y="661" width="0.7955%" height="15" fill="rgb(229,42,7)" fg:x="506" fg:w="10"/><text x="40.5046%" y="671.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="40.4137%" y="645" width="0.6364%" height="15" fill="rgb(206,118,29)" fg:x="508" fg:w="8"/><text x="40.6637%" y="655.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="40.6523%" y="629" width="0.3978%" height="15" fill="rgb(248,132,44)" fg:x="511" fg:w="5"/><text x="40.9023%" y="639.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="40.9706%" y="613" width="0.0796%" height="15" fill="rgb(231,56,33)" fg:x="515" fg:w="1"/><text x="41.2206%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.9706%" y="597" width="0.0796%" height="15" fill="rgb(208,31,11)" fg:x="515" fg:w="1"/><text x="41.2206%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (41 samples, 3.26%)</title><rect x="37.8679%" y="693" width="3.2617%" height="15" fill="rgb(216,56,33)" fg:x="476" fg:w="41"/><text x="38.1179%" y="703.50">&lt;ke..</text></g><g><title>treediff::diff::diff (23 samples, 1.83%)</title><rect x="39.2999%" y="677" width="1.8298%" height="15" fill="rgb(213,100,0)" fg:x="494" fg:w="23"/><text x="39.5499%" y="687.50">t..</text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="41.0501%" y="661" width="0.0796%" height="15" fill="rgb(236,166,18)" fg:x="516" fg:w="1"/><text x="41.3001%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0501%" y="645" width="0.0796%" height="15" fill="rgb(251,132,12)" fg:x="516" fg:w="1"/><text x="41.3001%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="41.1297%" y="693" width="0.0796%" height="15" fill="rgb(216,117,7)" fg:x="517" fg:w="1"/><text x="41.3797%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1297%" y="677" width="0.0796%" height="15" fill="rgb(243,184,8)" fg:x="517" fg:w="1"/><text x="41.3797%" y="687.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="41.2888%" y="661" width="0.2387%" height="15" fill="rgb(212,91,32)" fg:x="519" fg:w="3"/><text x="41.5388%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="41.5274%" y="661" width="0.3182%" height="15" fill="rgb(224,147,15)" fg:x="522" fg:w="4"/><text x="41.7774%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.6070%" y="645" width="0.2387%" height="15" fill="rgb(228,84,10)" fg:x="523" fg:w="3"/><text x="41.8570%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.24%)</title><rect x="41.6070%" y="629" width="0.2387%" height="15" fill="rgb(221,161,22)" fg:x="523" fg:w="3"/><text x="41.8570%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="41.8457%" y="661" width="0.1591%" height="15" fill="rgb(250,132,20)" fg:x="526" fg:w="2"/><text x="42.0957%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="41.8457%" y="645" width="0.1591%" height="15" fill="rgb(209,161,12)" fg:x="526" fg:w="2"/><text x="42.0957%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="41.8457%" y="629" width="0.1591%" height="15" fill="rgb(232,142,42)" fg:x="526" fg:w="2"/><text x="42.0957%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="41.9252%" y="613" width="0.0796%" height="15" fill="rgb(240,228,27)" fg:x="527" fg:w="1"/><text x="42.1752%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="42.0048%" y="661" width="0.0796%" height="15" fill="rgb(243,0,31)" fg:x="528" fg:w="1"/><text x="42.2548%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.0048%" y="645" width="0.0796%" height="15" fill="rgb(237,100,15)" fg:x="528" fg:w="1"/><text x="42.2548%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="42.0843%" y="661" width="0.1591%" height="15" fill="rgb(230,26,48)" fg:x="529" fg:w="2"/><text x="42.3343%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="42.1639%" y="645" width="0.0796%" height="15" fill="rgb(215,7,13)" fg:x="530" fg:w="1"/><text x="42.4139%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1639%" y="629" width="0.0796%" height="15" fill="rgb(227,172,5)" fg:x="530" fg:w="1"/><text x="42.4139%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="42.7208%" y="613" width="0.1591%" height="15" fill="rgb(248,206,14)" fg:x="537" fg:w="2"/><text x="42.9708%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="42.7208%" y="597" width="0.1591%" height="15" fill="rgb(231,62,54)" fg:x="537" fg:w="2"/><text x="42.9708%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="42.7208%" y="581" width="0.1591%" height="15" fill="rgb(222,136,26)" fg:x="537" fg:w="2"/><text x="42.9708%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="42.7208%" y="565" width="0.1591%" height="15" fill="rgb(211,115,42)" fg:x="537" fg:w="2"/><text x="42.9708%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.8003%" y="549" width="0.0796%" height="15" fill="rgb(234,5,17)" fg:x="538" fg:w="1"/><text x="43.0503%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.0390%" y="597" width="0.0796%" height="15" fill="rgb(233,67,14)" fg:x="541" fg:w="1"/><text x="43.2890%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.1185%" y="581" width="0.1591%" height="15" fill="rgb(225,133,51)" fg:x="542" fg:w="2"/><text x="43.3685%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.1185%" y="565" width="0.1591%" height="15" fill="rgb(206,107,40)" fg:x="542" fg:w="2"/><text x="43.3685%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.1185%" y="549" width="0.1591%" height="15" fill="rgb(210,56,9)" fg:x="542" fg:w="2"/><text x="43.3685%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.3572%" y="549" width="0.1591%" height="15" fill="rgb(222,204,4)" fg:x="545" fg:w="2"/><text x="43.6072%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.4368%" y="533" width="0.0796%" height="15" fill="rgb(210,168,3)" fg:x="546" fg:w="1"/><text x="43.6868%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.4368%" y="517" width="0.0796%" height="15" fill="rgb(246,183,26)" fg:x="546" fg:w="1"/><text x="43.6868%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.6754%" y="517" width="0.0796%" height="15" fill="rgb(228,27,31)" fg:x="549" fg:w="1"/><text x="43.9254%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="43.9141%" y="485" width="0.3182%" height="15" fill="rgb(206,8,2)" fg:x="552" fg:w="4"/><text x="44.1641%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="43.9141%" y="469" width="0.3182%" height="15" fill="rgb(251,229,16)" fg:x="552" fg:w="4"/><text x="44.1641%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="43.9141%" y="453" width="0.3182%" height="15" fill="rgb(208,84,44)" fg:x="552" fg:w="4"/><text x="44.1641%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="43.9141%" y="501" width="0.3978%" height="15" fill="rgb(221,228,13)" fg:x="552" fg:w="5"/><text x="44.1641%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="44.2323%" y="485" width="0.0796%" height="15" fill="rgb(248,42,47)" fg:x="556" fg:w="1"/><text x="44.4823%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.11%)</title><rect x="43.3572%" y="565" width="1.1138%" height="15" fill="rgb(222,124,41)" fg:x="545" fg:w="14"/><text x="43.6072%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.95%)</title><rect x="43.5163%" y="549" width="0.9547%" height="15" fill="rgb(244,191,35)" fg:x="547" fg:w="12"/><text x="43.7663%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.95%)</title><rect x="43.5163%" y="533" width="0.9547%" height="15" fill="rgb(222,223,54)" fg:x="547" fg:w="12"/><text x="43.7663%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="43.7550%" y="517" width="0.7160%" height="15" fill="rgb(248,178,42)" fg:x="550" fg:w="9"/><text x="44.0050%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.3119%" y="501" width="0.1591%" height="15" fill="rgb(238,21,24)" fg:x="557" fg:w="2"/><text x="44.5619%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 1.51%)</title><rect x="43.1185%" y="597" width="1.5115%" height="15" fill="rgb(227,134,7)" fg:x="542" fg:w="19"/><text x="43.3685%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 1.35%)</title><rect x="43.2776%" y="581" width="1.3524%" height="15" fill="rgb(205,191,1)" fg:x="544" fg:w="17"/><text x="43.5276%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.4710%" y="565" width="0.1591%" height="15" fill="rgb(222,166,30)" fg:x="559" fg:w="2"/><text x="44.7210%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.15%)</title><rect x="42.5617%" y="629" width="2.1480%" height="15" fill="rgb(229,94,26)" fg:x="535" fg:w="27"/><text x="42.8117%" y="639.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (23 samples, 1.83%)</title><rect x="42.8799%" y="613" width="1.8298%" height="15" fill="rgb(246,97,2)" fg:x="539" fg:w="23"/><text x="43.1299%" y="623.50">s..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6301%" y="597" width="0.0796%" height="15" fill="rgb(252,112,53)" fg:x="561" fg:w="1"/><text x="44.8801%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 2.39%)</title><rect x="42.4821%" y="645" width="2.3866%" height="15" fill="rgb(225,52,38)" fg:x="534" fg:w="30"/><text x="42.7321%" y="655.50">&lt;s..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="44.7096%" y="629" width="0.1591%" height="15" fill="rgb(215,203,24)" fg:x="562" fg:w="2"/><text x="44.9596%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7892%" y="613" width="0.0796%" height="15" fill="rgb(210,122,52)" fg:x="563" fg:w="1"/><text x="45.0392%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (47 samples, 3.74%)</title><rect x="41.2092%" y="693" width="3.7391%" height="15" fill="rgb(209,161,44)" fg:x="518" fg:w="47"/><text x="41.4592%" y="703.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 3.74%)</title><rect x="41.2092%" y="677" width="3.7391%" height="15" fill="rgb(221,97,16)" fg:x="518" fg:w="47"/><text x="41.4592%" y="687.50">&lt;ser..</text></g><g><title>serde::ser::Serializer::collect_map (34 samples, 2.70%)</title><rect x="42.2434%" y="661" width="2.7049%" height="15" fill="rgb(209,87,13)" fg:x="531" fg:w="34"/><text x="42.4934%" y="671.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.8687%" y="645" width="0.0796%" height="15" fill="rgb(242,1,21)" fg:x="564" fg:w="1"/><text x="45.1187%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="44.9483%" y="677" width="0.0796%" height="15" fill="rgb(251,170,41)" fg:x="565" fg:w="1"/><text x="45.1983%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="45.5847%" y="517" width="0.0796%" height="15" fill="rgb(227,201,10)" fg:x="573" fg:w="1"/><text x="45.8347%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="45.6643%" y="517" width="0.0796%" height="15" fill="rgb(231,100,29)" fg:x="574" fg:w="1"/><text x="45.9143%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6643%" y="501" width="0.0796%" height="15" fill="rgb(226,31,35)" fg:x="574" fg:w="1"/><text x="45.9143%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="45.5847%" y="549" width="0.2387%" height="15" fill="rgb(254,99,26)" fg:x="573" fg:w="3"/><text x="45.8347%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="45.5847%" y="533" width="0.2387%" height="15" fill="rgb(217,228,17)" fg:x="573" fg:w="3"/><text x="45.8347%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7438%" y="517" width="0.0796%" height="15" fill="rgb(226,132,8)" fg:x="575" fg:w="1"/><text x="45.9938%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.9029%" y="517" width="0.0796%" height="15" fill="rgb(220,202,47)" fg:x="577" fg:w="1"/><text x="46.1529%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.2212%" y="453" width="0.0796%" height="15" fill="rgb(245,194,10)" fg:x="581" fg:w="1"/><text x="46.4712%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2212%" y="437" width="0.0796%" height="15" fill="rgb(225,44,52)" fg:x="581" fg:w="1"/><text x="46.4712%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.2212%" y="421" width="0.0796%" height="15" fill="rgb(235,10,4)" fg:x="581" fg:w="1"/><text x="46.4712%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.3007%" y="453" width="0.0796%" height="15" fill="rgb(244,32,23)" fg:x="582" fg:w="1"/><text x="46.5507%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="46.2212%" y="469" width="0.2387%" height="15" fill="rgb(210,115,0)" fg:x="581" fg:w="3"/><text x="46.4712%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="46.3803%" y="453" width="0.0796%" height="15" fill="rgb(246,72,16)" fg:x="583" fg:w="1"/><text x="46.6303%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="46.4598%" y="453" width="0.0796%" height="15" fill="rgb(223,32,10)" fg:x="584" fg:w="1"/><text x="46.7098%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="46.4598%" y="469" width="0.1591%" height="15" fill="rgb(223,97,52)" fg:x="584" fg:w="2"/><text x="46.7098%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5394%" y="453" width="0.0796%" height="15" fill="rgb(238,69,38)" fg:x="585" fg:w="1"/><text x="46.7894%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="45.9825%" y="517" width="0.7160%" height="15" fill="rgb(226,61,1)" fg:x="578" fg:w="9"/><text x="46.2325%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="46.0621%" y="501" width="0.6364%" height="15" fill="rgb(244,56,14)" fg:x="579" fg:w="8"/><text x="46.3121%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="46.1416%" y="485" width="0.5569%" height="15" fill="rgb(242,164,18)" fg:x="580" fg:w="7"/><text x="46.3916%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6189%" y="469" width="0.0796%" height="15" fill="rgb(217,130,28)" fg:x="586" fg:w="1"/><text x="46.8689%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.6189%" y="453" width="0.0796%" height="15" fill="rgb(218,118,52)" fg:x="586" fg:w="1"/><text x="46.8689%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.95%)</title><rect x="45.9029%" y="533" width="0.9547%" height="15" fill="rgb(251,112,38)" fg:x="577" fg:w="12"/><text x="46.1529%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.6985%" y="517" width="0.1591%" height="15" fill="rgb(239,14,50)" fg:x="587" fg:w="2"/><text x="46.9485%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (17 samples, 1.35%)</title><rect x="45.5847%" y="565" width="1.3524%" height="15" fill="rgb(228,141,54)" fg:x="573" fg:w="17"/><text x="45.8347%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.11%)</title><rect x="45.8234%" y="549" width="1.1138%" height="15" fill="rgb(236,128,15)" fg:x="576" fg:w="14"/><text x="46.0734%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8576%" y="533" width="0.0796%" height="15" fill="rgb(206,140,54)" fg:x="589" fg:w="1"/><text x="47.1076%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.8576%" y="517" width="0.0796%" height="15" fill="rgb(240,0,44)" fg:x="589" fg:w="1"/><text x="47.1076%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8576%" y="501" width="0.0796%" height="15" fill="rgb(243,207,23)" fg:x="589" fg:w="1"/><text x="47.1076%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.51%)</title><rect x="45.5052%" y="597" width="1.5115%" height="15" fill="rgb(247,202,1)" fg:x="572" fg:w="19"/><text x="45.7552%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.43%)</title><rect x="45.5847%" y="581" width="1.4320%" height="15" fill="rgb(239,83,27)" fg:x="573" fg:w="18"/><text x="45.8347%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9372%" y="565" width="0.0796%" height="15" fill="rgb(219,205,7)" fg:x="590" fg:w="1"/><text x="47.1872%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9372%" y="549" width="0.0796%" height="15" fill="rgb(249,184,22)" fg:x="590" fg:w="1"/><text x="47.1872%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9372%" y="533" width="0.0796%" height="15" fill="rgb(230,150,14)" fg:x="590" fg:w="1"/><text x="47.1872%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.0963%" y="581" width="0.0796%" height="15" fill="rgb(240,118,34)" fg:x="592" fg:w="1"/><text x="47.3463%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (5 samples, 0.40%)</title><rect x="47.0167%" y="597" width="0.3978%" height="15" fill="rgb(227,162,21)" fg:x="591" fg:w="5"/><text x="47.2667%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="47.1758%" y="581" width="0.2387%" height="15" fill="rgb(219,14,9)" fg:x="593" fg:w="3"/><text x="47.4258%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (33 samples, 2.63%)</title><rect x="45.1870%" y="629" width="2.6253%" height="15" fill="rgb(223,226,16)" fg:x="568" fg:w="33"/><text x="45.4370%" y="639.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.47%)</title><rect x="45.3461%" y="613" width="2.4662%" height="15" fill="rgb(246,161,37)" fg:x="570" fg:w="31"/><text x="45.5961%" y="623.50">&lt;s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.4145%" y="597" width="0.3978%" height="15" fill="rgb(205,221,43)" fg:x="596" fg:w="5"/><text x="47.6645%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.4145%" y="581" width="0.3978%" height="15" fill="rgb(228,216,26)" fg:x="596" fg:w="5"/><text x="47.6645%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="47.5736%" y="565" width="0.2387%" height="15" fill="rgb(251,33,17)" fg:x="598" fg:w="3"/><text x="47.8236%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.8123%" y="629" width="0.1591%" height="15" fill="rgb(246,126,36)" fg:x="601" fg:w="2"/><text x="48.0623%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.8918%" y="613" width="0.0796%" height="15" fill="rgb(217,160,24)" fg:x="602" fg:w="1"/><text x="48.1418%" y="623.50"></text></g><g><title>engine::session::state::State::close (228 samples, 18.14%)</title><rect x="30.0716%" y="773" width="18.1384%" height="15" fill="rgb(211,64,12)" fg:x="378" fg:w="228"/><text x="30.3216%" y="783.50">engine::session::state::Stat..</text></g><g><title>engine::session::state::State::flush_entities (210 samples, 16.71%)</title><rect x="31.5036%" y="757" width="16.7064%" height="15" fill="rgb(238,47,36)" fg:x="396" fg:w="210"/><text x="31.7536%" y="767.50">engine::session::state::St..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (205 samples, 16.31%)</title><rect x="31.9014%" y="741" width="16.3087%" height="15" fill="rgb(210,157,42)" fg:x="401" fg:w="205"/><text x="32.1514%" y="751.50">engine::session::internal..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (203 samples, 16.15%)</title><rect x="32.0605%" y="725" width="16.1496%" height="15" fill="rgb(242,84,39)" fg:x="403" fg:w="203"/><text x="32.3105%" y="735.50">engine::session::state::S..</text></g><g><title>kernel::model::any_entity_changes (130 samples, 10.34%)</title><rect x="37.8679%" y="709" width="10.3421%" height="15" fill="rgb(207,65,41)" fg:x="476" fg:w="130"/><text x="38.1179%" y="719.50">kernel::model::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (41 samples, 3.26%)</title><rect x="44.9483%" y="693" width="3.2617%" height="15" fill="rgb(246,97,27)" fg:x="565" fg:w="41"/><text x="45.1983%" y="703.50">ser..</text></g><g><title>serde_json::de::from_trait (40 samples, 3.18%)</title><rect x="45.0278%" y="677" width="3.1822%" height="15" fill="rgb(229,9,43)" fg:x="566" fg:w="40"/><text x="45.2778%" y="687.50">ser..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (40 samples, 3.18%)</title><rect x="45.0278%" y="661" width="3.1822%" height="15" fill="rgb(211,82,44)" fg:x="566" fg:w="40"/><text x="45.2778%" y="671.50">&lt;&amp;m..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (40 samples, 3.18%)</title><rect x="45.0278%" y="645" width="3.1822%" height="15" fill="rgb(253,45,54)" fg:x="566" fg:w="40"/><text x="45.2778%" y="655.50">&lt;se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="47.9714%" y="629" width="0.2387%" height="15" fill="rgb(235,94,32)" fg:x="603" fg:w="3"/><text x="48.2214%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="47.9714%" y="613" width="0.2387%" height="15" fill="rgb(252,143,1)" fg:x="603" fg:w="3"/><text x="48.2214%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.1305%" y="597" width="0.0796%" height="15" fill="rgb(239,164,4)" fg:x="605" fg:w="1"/><text x="48.3805%" y="607.50"></text></g><g><title>engine::session::Session::close (233 samples, 18.54%)</title><rect x="29.7534%" y="789" width="18.5362%" height="15" fill="rgb(222,25,39)" fg:x="374" fg:w="233"/><text x="30.0034%" y="799.50">engine::session::Session::clo..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="48.2100%" y="773" width="0.0796%" height="15" fill="rgb(234,175,9)" fg:x="606" fg:w="1"/><text x="48.4600%" y="783.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="48.2100%" y="757" width="0.0796%" height="15" fill="rgb(247,200,41)" fg:x="606" fg:w="1"/><text x="48.4600%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="48.2100%" y="741" width="0.0796%" height="15" fill="rgb(245,101,27)" fg:x="606" fg:w="1"/><text x="48.4600%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="48.2100%" y="725" width="0.0796%" height="15" fill="rgb(221,29,7)" fg:x="606" fg:w="1"/><text x="48.4600%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="48.2100%" y="709" width="0.0796%" height="15" fill="rgb(240,184,10)" fg:x="606" fg:w="1"/><text x="48.4600%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.9260%" y="645" width="0.0796%" height="15" fill="rgb(251,85,15)" fg:x="615" fg:w="1"/><text x="49.1760%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="49.0056%" y="645" width="0.0796%" height="15" fill="rgb(252,84,16)" fg:x="616" fg:w="1"/><text x="49.2556%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="48.9260%" y="677" width="0.2387%" height="15" fill="rgb(233,136,6)" fg:x="615" fg:w="3"/><text x="49.1760%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="48.9260%" y="661" width="0.2387%" height="15" fill="rgb(226,169,30)" fg:x="615" fg:w="3"/><text x="49.1760%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="49.0851%" y="645" width="0.0796%" height="15" fill="rgb(241,83,18)" fg:x="617" fg:w="1"/><text x="49.3351%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.0851%" y="629" width="0.0796%" height="15" fill="rgb(239,151,5)" fg:x="617" fg:w="1"/><text x="49.3351%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="613" width="0.0796%" height="15" fill="rgb(238,56,13)" fg:x="617" fg:w="1"/><text x="49.3351%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.0851%" y="597" width="0.0796%" height="15" fill="rgb(224,100,0)" fg:x="617" fg:w="1"/><text x="49.3351%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="581" width="0.0796%" height="15" fill="rgb(231,168,26)" fg:x="617" fg:w="1"/><text x="49.3351%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="565" width="0.0796%" height="15" fill="rgb(238,110,3)" fg:x="617" fg:w="1"/><text x="49.3351%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="549" width="0.0796%" height="15" fill="rgb(216,190,1)" fg:x="617" fg:w="1"/><text x="49.3351%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.0851%" y="533" width="0.0796%" height="15" fill="rgb(208,130,52)" fg:x="617" fg:w="1"/><text x="49.3351%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="517" width="0.0796%" height="15" fill="rgb(233,74,12)" fg:x="617" fg:w="1"/><text x="49.3351%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="501" width="0.0796%" height="15" fill="rgb(248,12,15)" fg:x="617" fg:w="1"/><text x="49.3351%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="485" width="0.0796%" height="15" fill="rgb(228,18,29)" fg:x="617" fg:w="1"/><text x="49.3351%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.0851%" y="469" width="0.0796%" height="15" fill="rgb(206,153,11)" fg:x="617" fg:w="1"/><text x="49.3351%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="453" width="0.0796%" height="15" fill="rgb(216,50,30)" fg:x="617" fg:w="1"/><text x="49.3351%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="437" width="0.0796%" height="15" fill="rgb(217,20,39)" fg:x="617" fg:w="1"/><text x="49.3351%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="421" width="0.0796%" height="15" fill="rgb(232,130,46)" fg:x="617" fg:w="1"/><text x="49.3351%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.0851%" y="405" width="0.0796%" height="15" fill="rgb(233,141,43)" fg:x="617" fg:w="1"/><text x="49.3351%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.0851%" y="389" width="0.0796%" height="15" fill="rgb(240,64,34)" fg:x="617" fg:w="1"/><text x="49.3351%" y="399.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="49.0851%" y="373" width="0.0796%" height="15" fill="rgb(230,28,31)" fg:x="617" fg:w="1"/><text x="49.3351%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="49.3238%" y="421" width="0.1591%" height="15" fill="rgb(223,56,30)" fg:x="620" fg:w="2"/><text x="49.5738%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.4033%" y="405" width="0.0796%" height="15" fill="rgb(248,134,16)" fg:x="621" fg:w="1"/><text x="49.6533%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="49.3238%" y="597" width="0.2387%" height="15" fill="rgb(206,202,4)" fg:x="620" fg:w="3"/><text x="49.5738%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="49.3238%" y="581" width="0.2387%" height="15" fill="rgb(219,116,48)" fg:x="620" fg:w="3"/><text x="49.5738%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="49.3238%" y="565" width="0.2387%" height="15" fill="rgb(224,122,46)" fg:x="620" fg:w="3"/><text x="49.5738%" y="575.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="49.3238%" y="549" width="0.2387%" height="15" fill="rgb(219,114,47)" fg:x="620" fg:w="3"/><text x="49.5738%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="49.3238%" y="533" width="0.2387%" height="15" fill="rgb(244,60,44)" fg:x="620" fg:w="3"/><text x="49.5738%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.3238%" y="517" width="0.2387%" height="15" fill="rgb(243,226,25)" fg:x="620" fg:w="3"/><text x="49.5738%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.3238%" y="501" width="0.2387%" height="15" fill="rgb(243,101,52)" fg:x="620" fg:w="3"/><text x="49.5738%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="49.3238%" y="485" width="0.2387%" height="15" fill="rgb(207,69,25)" fg:x="620" fg:w="3"/><text x="49.5738%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.3238%" y="469" width="0.2387%" height="15" fill="rgb(222,204,53)" fg:x="620" fg:w="3"/><text x="49.5738%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="49.3238%" y="453" width="0.2387%" height="15" fill="rgb(234,84,49)" fg:x="620" fg:w="3"/><text x="49.5738%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="49.3238%" y="437" width="0.2387%" height="15" fill="rgb(233,77,41)" fg:x="620" fg:w="3"/><text x="49.5738%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4829%" y="421" width="0.0796%" height="15" fill="rgb(221,200,42)" fg:x="622" fg:w="1"/><text x="49.7329%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4829%" y="405" width="0.0796%" height="15" fill="rgb(221,29,35)" fg:x="622" fg:w="1"/><text x="49.7329%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.6420%" y="517" width="0.0796%" height="15" fill="rgb(221,71,22)" fg:x="624" fg:w="1"/><text x="49.8920%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="49.7216%" y="501" width="0.1591%" height="15" fill="rgb(216,162,23)" fg:x="625" fg:w="2"/><text x="49.9716%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8011%" y="485" width="0.0796%" height="15" fill="rgb(248,32,48)" fg:x="626" fg:w="1"/><text x="50.0511%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.8807%" y="453" width="0.0796%" height="15" fill="rgb(241,156,30)" fg:x="627" fg:w="1"/><text x="50.1307%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.8807%" y="437" width="0.0796%" height="15" fill="rgb(237,196,46)" fg:x="627" fg:w="1"/><text x="50.1307%" y="447.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="49.5625%" y="581" width="0.4773%" height="15" fill="rgb(216,2,6)" fg:x="623" fg:w="6"/><text x="49.8125%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="49.5625%" y="565" width="0.4773%" height="15" fill="rgb(214,47,16)" fg:x="623" fg:w="6"/><text x="49.8125%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="49.5625%" y="549" width="0.4773%" height="15" fill="rgb(240,123,13)" fg:x="623" fg:w="6"/><text x="49.8125%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="49.6420%" y="533" width="0.3978%" height="15" fill="rgb(206,47,48)" fg:x="624" fg:w="5"/><text x="49.8920%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="49.7216%" y="517" width="0.3182%" height="15" fill="rgb(252,88,27)" fg:x="625" fg:w="4"/><text x="49.9716%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.8807%" y="501" width="0.1591%" height="15" fill="rgb(218,105,30)" fg:x="627" fg:w="2"/><text x="50.1307%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.8807%" y="485" width="0.1591%" height="15" fill="rgb(227,52,46)" fg:x="627" fg:w="2"/><text x="50.1307%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.8807%" y="469" width="0.1591%" height="15" fill="rgb(222,190,21)" fg:x="627" fg:w="2"/><text x="50.1307%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.9602%" y="453" width="0.0796%" height="15" fill="rgb(205,86,20)" fg:x="628" fg:w="1"/><text x="50.2102%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.9602%" y="437" width="0.0796%" height="15" fill="rgb(233,45,1)" fg:x="628" fg:w="1"/><text x="50.2102%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.9602%" y="421" width="0.0796%" height="15" fill="rgb(208,39,6)" fg:x="628" fg:w="1"/><text x="50.2102%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.9602%" y="405" width="0.0796%" height="15" fill="rgb(211,178,22)" fg:x="628" fg:w="1"/><text x="50.2102%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.0398%" y="549" width="0.0796%" height="15" fill="rgb(227,112,23)" fg:x="629" fg:w="1"/><text x="50.2898%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.1193%" y="501" width="0.0796%" height="15" fill="rgb(214,41,4)" fg:x="630" fg:w="1"/><text x="50.3693%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.1193%" y="485" width="0.0796%" height="15" fill="rgb(219,144,46)" fg:x="630" fg:w="1"/><text x="50.3693%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.1193%" y="469" width="0.0796%" height="15" fill="rgb(253,176,50)" fg:x="630" fg:w="1"/><text x="50.3693%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.1193%" y="453" width="0.0796%" height="15" fill="rgb(206,123,1)" fg:x="630" fg:w="1"/><text x="50.3693%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="50.1193%" y="437" width="0.0796%" height="15" fill="rgb(250,111,32)" fg:x="630" fg:w="1"/><text x="50.3693%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.1193%" y="421" width="0.0796%" height="15" fill="rgb(229,17,49)" fg:x="630" fg:w="1"/><text x="50.3693%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.1989%" y="469" width="0.0796%" height="15" fill="rgb(250,123,19)" fg:x="631" fg:w="1"/><text x="50.4489%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="50.1989%" y="501" width="0.2387%" height="15" fill="rgb(220,124,20)" fg:x="631" fg:w="3"/><text x="50.4489%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="50.1989%" y="485" width="0.2387%" height="15" fill="rgb(242,85,25)" fg:x="631" fg:w="3"/><text x="50.4489%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="50.2784%" y="469" width="0.1591%" height="15" fill="rgb(245,217,7)" fg:x="632" fg:w="2"/><text x="50.5284%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.3580%" y="453" width="0.0796%" height="15" fill="rgb(242,50,25)" fg:x="633" fg:w="1"/><text x="50.6080%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.3580%" y="437" width="0.0796%" height="15" fill="rgb(251,210,24)" fg:x="633" fg:w="1"/><text x="50.6080%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.4375%" y="453" width="0.0796%" height="15" fill="rgb(238,24,8)" fg:x="634" fg:w="1"/><text x="50.6875%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.4375%" y="437" width="0.0796%" height="15" fill="rgb(211,96,19)" fg:x="634" fg:w="1"/><text x="50.6875%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.4375%" y="421" width="0.0796%" height="15" fill="rgb(222,186,12)" fg:x="634" fg:w="1"/><text x="50.6875%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4375%" y="405" width="0.0796%" height="15" fill="rgb(212,70,49)" fg:x="634" fg:w="1"/><text x="50.6875%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.5171%" y="421" width="0.0796%" height="15" fill="rgb(238,69,49)" fg:x="635" fg:w="1"/><text x="50.7671%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5171%" y="405" width="0.0796%" height="15" fill="rgb(225,13,3)" fg:x="635" fg:w="1"/><text x="50.7671%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="50.1193%" y="549" width="0.5569%" height="15" fill="rgb(229,188,14)" fg:x="630" fg:w="7"/><text x="50.3693%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="50.1193%" y="533" width="0.5569%" height="15" fill="rgb(218,58,16)" fg:x="630" fg:w="7"/><text x="50.3693%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="50.1193%" y="517" width="0.5569%" height="15" fill="rgb(206,213,49)" fg:x="630" fg:w="7"/><text x="50.3693%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.4375%" y="501" width="0.2387%" height="15" fill="rgb(225,152,48)" fg:x="634" fg:w="3"/><text x="50.6875%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.4375%" y="485" width="0.2387%" height="15" fill="rgb(216,103,42)" fg:x="634" fg:w="3"/><text x="50.6875%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="50.4375%" y="469" width="0.2387%" height="15" fill="rgb(212,214,39)" fg:x="634" fg:w="3"/><text x="50.6875%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.5171%" y="453" width="0.1591%" height="15" fill="rgb(249,52,41)" fg:x="635" fg:w="2"/><text x="50.7671%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.5171%" y="437" width="0.1591%" height="15" fill="rgb(212,173,53)" fg:x="635" fg:w="2"/><text x="50.7671%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.5967%" y="421" width="0.0796%" height="15" fill="rgb(232,222,21)" fg:x="636" fg:w="1"/><text x="50.8467%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.5967%" y="405" width="0.0796%" height="15" fill="rgb(206,228,31)" fg:x="636" fg:w="1"/><text x="50.8467%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.5967%" y="389" width="0.0796%" height="15" fill="rgb(231,121,16)" fg:x="636" fg:w="1"/><text x="50.8467%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.5967%" y="373" width="0.0796%" height="15" fill="rgb(241,3,23)" fg:x="636" fg:w="1"/><text x="50.8467%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5967%" y="357" width="0.0796%" height="15" fill="rgb(220,68,37)" fg:x="636" fg:w="1"/><text x="50.8467%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5967%" y="341" width="0.0796%" height="15" fill="rgb(212,23,49)" fg:x="636" fg:w="1"/><text x="50.8467%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6762%" y="517" width="0.0796%" height="15" fill="rgb(231,38,8)" fg:x="637" fg:w="1"/><text x="50.9262%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.51%)</title><rect x="49.3238%" y="629" width="1.5115%" height="15" fill="rgb(222,137,29)" fg:x="620" fg:w="19"/><text x="49.5738%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (19 samples, 1.51%)</title><rect x="49.3238%" y="613" width="1.5115%" height="15" fill="rgb(239,8,6)" fg:x="620" fg:w="19"/><text x="49.5738%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (16 samples, 1.27%)</title><rect x="49.5625%" y="597" width="1.2729%" height="15" fill="rgb(224,142,47)" fg:x="623" fg:w="16"/><text x="49.8125%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="50.0398%" y="581" width="0.7955%" height="15" fill="rgb(226,67,29)" fg:x="629" fg:w="10"/><text x="50.2898%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="50.0398%" y="565" width="0.7955%" height="15" fill="rgb(212,144,29)" fg:x="629" fg:w="10"/><text x="50.2898%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.6762%" y="549" width="0.1591%" height="15" fill="rgb(252,2,51)" fg:x="637" fg:w="2"/><text x="50.9262%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.6762%" y="533" width="0.1591%" height="15" fill="rgb(246,103,52)" fg:x="637" fg:w="2"/><text x="50.9262%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="50.7558%" y="517" width="0.0796%" height="15" fill="rgb(229,229,35)" fg:x="638" fg:w="1"/><text x="51.0058%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.7558%" y="501" width="0.0796%" height="15" fill="rgb(209,83,15)" fg:x="638" fg:w="1"/><text x="51.0058%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (21 samples, 1.67%)</title><rect x="49.2442%" y="645" width="1.6706%" height="15" fill="rgb(218,54,16)" fg:x="619" fg:w="21"/><text x="49.4942%" y="655.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="50.8353%" y="629" width="0.0796%" height="15" fill="rgb(205,2,26)" fg:x="639" fg:w="1"/><text x="51.0853%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8353%" y="613" width="0.0796%" height="15" fill="rgb(248,180,0)" fg:x="639" fg:w="1"/><text x="51.0853%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.8353%" y="597" width="0.0796%" height="15" fill="rgb(231,136,16)" fg:x="639" fg:w="1"/><text x="51.0853%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.8353%" y="581" width="0.0796%" height="15" fill="rgb(215,90,4)" fg:x="639" fg:w="1"/><text x="51.0853%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.8353%" y="565" width="0.0796%" height="15" fill="rgb(251,131,3)" fg:x="639" fg:w="1"/><text x="51.0853%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.8353%" y="549" width="0.0796%" height="15" fill="rgb(244,47,21)" fg:x="639" fg:w="1"/><text x="51.0853%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.8353%" y="533" width="0.0796%" height="15" fill="rgb(231,115,9)" fg:x="639" fg:w="1"/><text x="51.0853%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.8353%" y="517" width="0.0796%" height="15" fill="rgb(241,119,20)" fg:x="639" fg:w="1"/><text x="51.0853%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.8353%" y="501" width="0.0796%" height="15" fill="rgb(224,99,0)" fg:x="639" fg:w="1"/><text x="51.0853%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.8353%" y="485" width="0.0796%" height="15" fill="rgb(219,213,18)" fg:x="639" fg:w="1"/><text x="51.0853%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.8353%" y="469" width="0.0796%" height="15" fill="rgb(209,71,34)" fg:x="639" fg:w="1"/><text x="51.0853%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.8353%" y="453" width="0.0796%" height="15" fill="rgb(245,203,20)" fg:x="639" fg:w="1"/><text x="51.0853%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.8353%" y="437" width="0.0796%" height="15" fill="rgb(221,44,20)" fg:x="639" fg:w="1"/><text x="51.0853%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.9149%" y="645" width="0.0796%" height="15" fill="rgb(229,97,0)" fg:x="640" fg:w="1"/><text x="51.1649%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.9944%" y="613" width="0.0796%" height="15" fill="rgb(206,56,49)" fg:x="641" fg:w="1"/><text x="51.2444%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (30 samples, 2.39%)</title><rect x="48.9260%" y="693" width="2.3866%" height="15" fill="rgb(208,216,41)" fg:x="615" fg:w="30"/><text x="49.1760%" y="703.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (27 samples, 2.15%)</title><rect x="49.1647%" y="677" width="2.1480%" height="15" fill="rgb(231,31,6)" fg:x="618" fg:w="27"/><text x="49.4147%" y="687.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (26 samples, 2.07%)</title><rect x="49.2442%" y="661" width="2.0684%" height="15" fill="rgb(239,88,23)" fg:x="619" fg:w="26"/><text x="49.4942%" y="671.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="50.9944%" y="645" width="0.3182%" height="15" fill="rgb(227,111,45)" fg:x="641" fg:w="4"/><text x="51.2444%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="50.9944%" y="629" width="0.3182%" height="15" fill="rgb(207,167,18)" fg:x="641" fg:w="4"/><text x="51.2444%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.0740%" y="613" width="0.2387%" height="15" fill="rgb(253,127,17)" fg:x="642" fg:w="3"/><text x="51.3240%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.0740%" y="597" width="0.2387%" height="15" fill="rgb(211,229,9)" fg:x="642" fg:w="3"/><text x="51.3240%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.1535%" y="581" width="0.1591%" height="15" fill="rgb(249,25,14)" fg:x="643" fg:w="2"/><text x="51.4035%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="51.3126%" y="645" width="0.2387%" height="15" fill="rgb(237,177,4)" fg:x="645" fg:w="3"/><text x="51.5626%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (3 samples, 0.24%)</title><rect x="51.3126%" y="629" width="0.2387%" height="15" fill="rgb(248,163,50)" fg:x="645" fg:w="3"/><text x="51.5626%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.3126%" y="613" width="0.2387%" height="15" fill="rgb(246,67,42)" fg:x="645" fg:w="3"/><text x="51.5626%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.3126%" y="597" width="0.2387%" height="15" fill="rgb(228,136,45)" fg:x="645" fg:w="3"/><text x="51.5626%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="51.3126%" y="581" width="0.2387%" height="15" fill="rgb(218,93,4)" fg:x="645" fg:w="3"/><text x="51.5626%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="51.3126%" y="565" width="0.2387%" height="15" fill="rgb(209,82,29)" fg:x="645" fg:w="3"/><text x="51.5626%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="51.3126%" y="549" width="0.2387%" height="15" fill="rgb(213,219,38)" fg:x="645" fg:w="3"/><text x="51.5626%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="51.3126%" y="533" width="0.2387%" height="15" fill="rgb(233,212,17)" fg:x="645" fg:w="3"/><text x="51.5626%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.3126%" y="517" width="0.2387%" height="15" fill="rgb(225,65,3)" fg:x="645" fg:w="3"/><text x="51.5626%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="51.3126%" y="501" width="0.2387%" height="15" fill="rgb(226,25,1)" fg:x="645" fg:w="3"/><text x="51.5626%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="51.3126%" y="485" width="0.2387%" height="15" fill="rgb(229,83,27)" fg:x="645" fg:w="3"/><text x="51.5626%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="51.3126%" y="469" width="0.2387%" height="15" fill="rgb(245,80,47)" fg:x="645" fg:w="3"/><text x="51.5626%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="51.3126%" y="453" width="0.2387%" height="15" fill="rgb(213,79,27)" fg:x="645" fg:w="3"/><text x="51.5626%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="51.3126%" y="437" width="0.2387%" height="15" fill="rgb(232,38,28)" fg:x="645" fg:w="3"/><text x="51.5626%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="51.3922%" y="421" width="0.1591%" height="15" fill="rgb(253,63,39)" fg:x="646" fg:w="2"/><text x="51.6422%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (34 samples, 2.70%)</title><rect x="48.9260%" y="709" width="2.7049%" height="15" fill="rgb(222,204,17)" fg:x="615" fg:w="34"/><text x="49.1760%" y="719.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (4 samples, 0.32%)</title><rect x="51.3126%" y="693" width="0.3182%" height="15" fill="rgb(254,135,49)" fg:x="645" fg:w="4"/><text x="51.5626%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (4 samples, 0.32%)</title><rect x="51.3126%" y="677" width="0.3182%" height="15" fill="rgb(226,203,24)" fg:x="645" fg:w="4"/><text x="51.5626%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="51.3126%" y="661" width="0.3182%" height="15" fill="rgb(225,2,17)" fg:x="645" fg:w="4"/><text x="51.5626%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="51.5513%" y="645" width="0.0796%" height="15" fill="rgb(234,135,43)" fg:x="648" fg:w="1"/><text x="51.8013%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="51.6309%" y="709" width="0.0796%" height="15" fill="rgb(224,14,46)" fg:x="649" fg:w="1"/><text x="51.8809%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="51.6309%" y="693" width="0.0796%" height="15" fill="rgb(206,42,0)" fg:x="649" fg:w="1"/><text x="51.8809%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.8695%" y="645" width="0.0796%" height="15" fill="rgb(244,38,23)" fg:x="652" fg:w="1"/><text x="52.1195%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.9491%" y="629" width="0.0796%" height="15" fill="rgb(230,25,21)" fg:x="653" fg:w="1"/><text x="52.1991%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1877%" y="485" width="0.0796%" height="15" fill="rgb(252,217,28)" fg:x="656" fg:w="1"/><text x="52.4377%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1877%" y="469" width="0.0796%" height="15" fill="rgb(251,4,49)" fg:x="656" fg:w="1"/><text x="52.4377%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.1877%" y="453" width="0.0796%" height="15" fill="rgb(217,126,31)" fg:x="656" fg:w="1"/><text x="52.4377%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2673%" y="485" width="0.0796%" height="15" fill="rgb(242,181,33)" fg:x="657" fg:w="1"/><text x="52.5173%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2673%" y="469" width="0.0796%" height="15" fill="rgb(241,108,6)" fg:x="657" fg:w="1"/><text x="52.5173%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.2673%" y="453" width="0.0796%" height="15" fill="rgb(238,87,39)" fg:x="657" fg:w="1"/><text x="52.5173%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.2673%" y="437" width="0.0796%" height="15" fill="rgb(244,101,49)" fg:x="657" fg:w="1"/><text x="52.5173%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.2673%" y="421" width="0.0796%" height="15" fill="rgb(211,43,42)" fg:x="657" fg:w="1"/><text x="52.5173%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2673%" y="405" width="0.0796%" height="15" fill="rgb(210,93,2)" fg:x="657" fg:w="1"/><text x="52.5173%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2673%" y="389" width="0.0796%" height="15" fill="rgb(242,149,32)" fg:x="657" fg:w="1"/><text x="52.5173%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.2673%" y="373" width="0.0796%" height="15" fill="rgb(228,1,6)" fg:x="657" fg:w="1"/><text x="52.5173%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.2673%" y="357" width="0.0796%" height="15" fill="rgb(221,0,20)" fg:x="657" fg:w="1"/><text x="52.5173%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.2673%" y="341" width="0.0796%" height="15" fill="rgb(230,39,32)" fg:x="657" fg:w="1"/><text x="52.5173%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.2673%" y="325" width="0.0796%" height="15" fill="rgb(240,89,38)" fg:x="657" fg:w="1"/><text x="52.5173%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2673%" y="309" width="0.0796%" height="15" fill="rgb(208,221,23)" fg:x="657" fg:w="1"/><text x="52.5173%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="52.1877%" y="501" width="0.2387%" height="15" fill="rgb(220,145,29)" fg:x="656" fg:w="3"/><text x="52.4377%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3469%" y="485" width="0.0796%" height="15" fill="rgb(219,146,23)" fg:x="658" fg:w="1"/><text x="52.5969%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.4264%" y="469" width="0.0796%" height="15" fill="rgb(244,114,49)" fg:x="659" fg:w="1"/><text x="52.6764%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.5060%" y="373" width="0.0796%" height="15" fill="rgb(221,17,10)" fg:x="660" fg:w="1"/><text x="52.7560%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.5060%" y="357" width="0.0796%" height="15" fill="rgb(228,133,21)" fg:x="660" fg:w="1"/><text x="52.7560%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (7 samples, 0.56%)</title><rect x="52.1877%" y="549" width="0.5569%" height="15" fill="rgb(218,81,30)" fg:x="656" fg:w="7"/><text x="52.4377%" y="559.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="52.1877%" y="533" width="0.5569%" height="15" fill="rgb(240,29,36)" fg:x="656" fg:w="7"/><text x="52.4377%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="52.1877%" y="517" width="0.5569%" height="15" fill="rgb(246,0,36)" fg:x="656" fg:w="7"/><text x="52.4377%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="52.4264%" y="501" width="0.3182%" height="15" fill="rgb(217,79,8)" fg:x="659" fg:w="4"/><text x="52.6764%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="52.4264%" y="485" width="0.3182%" height="15" fill="rgb(229,124,44)" fg:x="659" fg:w="4"/><text x="52.6764%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.5060%" y="469" width="0.2387%" height="15" fill="rgb(210,187,22)" fg:x="660" fg:w="3"/><text x="52.7560%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.5060%" y="453" width="0.2387%" height="15" fill="rgb(212,115,40)" fg:x="660" fg:w="3"/><text x="52.7560%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="52.5060%" y="437" width="0.2387%" height="15" fill="rgb(210,2,54)" fg:x="660" fg:w="3"/><text x="52.7560%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.5060%" y="421" width="0.2387%" height="15" fill="rgb(227,168,43)" fg:x="660" fg:w="3"/><text x="52.7560%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="52.5060%" y="405" width="0.2387%" height="15" fill="rgb(249,92,8)" fg:x="660" fg:w="3"/><text x="52.7560%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="52.5060%" y="389" width="0.2387%" height="15" fill="rgb(239,111,35)" fg:x="660" fg:w="3"/><text x="52.7560%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.5855%" y="373" width="0.1591%" height="15" fill="rgb(230,126,13)" fg:x="661" fg:w="2"/><text x="52.8355%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.5855%" y="357" width="0.1591%" height="15" fill="rgb(243,116,33)" fg:x="661" fg:w="2"/><text x="52.8355%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.6651%" y="341" width="0.0796%" height="15" fill="rgb(246,103,21)" fg:x="662" fg:w="1"/><text x="52.9151%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7446%" y="501" width="0.0796%" height="15" fill="rgb(237,53,26)" fg:x="663" fg:w="1"/><text x="52.9946%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7446%" y="485" width="0.0796%" height="15" fill="rgb(213,121,15)" fg:x="663" fg:w="1"/><text x="52.9946%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7446%" y="469" width="0.0796%" height="15" fill="rgb(251,83,35)" fg:x="663" fg:w="1"/><text x="52.9946%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="52.7446%" y="453" width="0.0796%" height="15" fill="rgb(222,79,8)" fg:x="663" fg:w="1"/><text x="52.9946%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.8242%" y="501" width="0.0796%" height="15" fill="rgb(217,74,36)" fg:x="664" fg:w="1"/><text x="53.0742%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.8242%" y="485" width="0.0796%" height="15" fill="rgb(221,14,30)" fg:x="664" fg:w="1"/><text x="53.0742%" y="495.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (11 samples, 0.88%)</title><rect x="52.1082%" y="565" width="0.8751%" height="15" fill="rgb(216,221,5)" fg:x="655" fg:w="11"/><text x="52.3582%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="52.7446%" y="549" width="0.2387%" height="15" fill="rgb(236,118,16)" fg:x="663" fg:w="3"/><text x="52.9946%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="52.7446%" y="533" width="0.2387%" height="15" fill="rgb(243,91,43)" fg:x="663" fg:w="3"/><text x="52.9946%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="52.7446%" y="517" width="0.2387%" height="15" fill="rgb(231,110,7)" fg:x="663" fg:w="3"/><text x="52.9946%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="501" width="0.0796%" height="15" fill="rgb(217,80,6)" fg:x="665" fg:w="1"/><text x="53.1537%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="485" width="0.0796%" height="15" fill="rgb(251,116,7)" fg:x="665" fg:w="1"/><text x="53.1537%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="469" width="0.0796%" height="15" fill="rgb(236,70,22)" fg:x="665" fg:w="1"/><text x="53.1537%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="453" width="0.0796%" height="15" fill="rgb(245,13,10)" fg:x="665" fg:w="1"/><text x="53.1537%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="437" width="0.0796%" height="15" fill="rgb(233,146,34)" fg:x="665" fg:w="1"/><text x="53.1537%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.9037%" y="421" width="0.0796%" height="15" fill="rgb(241,196,34)" fg:x="665" fg:w="1"/><text x="53.1537%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9037%" y="405" width="0.0796%" height="15" fill="rgb(207,150,20)" fg:x="665" fg:w="1"/><text x="53.1537%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.9833%" y="565" width="0.0796%" height="15" fill="rgb(251,27,52)" fg:x="666" fg:w="1"/><text x="53.2333%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.1424%" y="517" width="0.0796%" height="15" fill="rgb(221,76,2)" fg:x="668" fg:w="1"/><text x="53.3924%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.1424%" y="501" width="0.0796%" height="15" fill="rgb(242,94,41)" fg:x="668" fg:w="1"/><text x="53.3924%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="53.2220%" y="517" width="0.1591%" height="15" fill="rgb(245,9,8)" fg:x="669" fg:w="2"/><text x="53.4720%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.3015%" y="501" width="0.0796%" height="15" fill="rgb(236,139,26)" fg:x="670" fg:w="1"/><text x="53.5515%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.3015%" y="485" width="0.0796%" height="15" fill="rgb(249,11,18)" fg:x="670" fg:w="1"/><text x="53.5515%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.5402%" y="309" width="0.0796%" height="15" fill="rgb(206,175,35)" fg:x="673" fg:w="1"/><text x="53.7902%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="53.4606%" y="501" width="0.2387%" height="15" fill="rgb(231,3,46)" fg:x="672" fg:w="3"/><text x="53.7106%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="53.4606%" y="485" width="0.2387%" height="15" fill="rgb(243,27,8)" fg:x="672" fg:w="3"/><text x="53.7106%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="53.5402%" y="469" width="0.1591%" height="15" fill="rgb(223,53,13)" fg:x="673" fg:w="2"/><text x="53.7902%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="53.5402%" y="453" width="0.1591%" height="15" fill="rgb(248,68,15)" fg:x="673" fg:w="2"/><text x="53.7902%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="437" width="0.1591%" height="15" fill="rgb(216,61,26)" fg:x="673" fg:w="2"/><text x="53.7902%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="53.5402%" y="421" width="0.1591%" height="15" fill="rgb(213,201,24)" fg:x="673" fg:w="2"/><text x="53.7902%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="405" width="0.1591%" height="15" fill="rgb(214,20,17)" fg:x="673" fg:w="2"/><text x="53.7902%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="389" width="0.1591%" height="15" fill="rgb(206,21,46)" fg:x="673" fg:w="2"/><text x="53.7902%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="373" width="0.1591%" height="15" fill="rgb(234,222,24)" fg:x="673" fg:w="2"/><text x="53.7902%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="53.5402%" y="357" width="0.1591%" height="15" fill="rgb(221,25,26)" fg:x="673" fg:w="2"/><text x="53.7902%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="341" width="0.1591%" height="15" fill="rgb(241,148,26)" fg:x="673" fg:w="2"/><text x="53.7902%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="53.5402%" y="325" width="0.1591%" height="15" fill="rgb(248,119,35)" fg:x="673" fg:w="2"/><text x="53.7902%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.6197%" y="309" width="0.0796%" height="15" fill="rgb(239,126,23)" fg:x="674" fg:w="1"/><text x="53.8697%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.6197%" y="293" width="0.0796%" height="15" fill="rgb(247,120,25)" fg:x="674" fg:w="1"/><text x="53.8697%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6197%" y="277" width="0.0796%" height="15" fill="rgb(220,93,32)" fg:x="674" fg:w="1"/><text x="53.8697%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.6197%" y="261" width="0.0796%" height="15" fill="rgb(236,46,26)" fg:x="674" fg:w="1"/><text x="53.8697%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="53.6197%" y="245" width="0.0796%" height="15" fill="rgb(229,20,45)" fg:x="674" fg:w="1"/><text x="53.8697%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="53.6197%" y="229" width="0.0796%" height="15" fill="rgb(225,168,41)" fg:x="674" fg:w="1"/><text x="53.8697%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="53.6197%" y="213" width="0.0796%" height="15" fill="rgb(253,123,20)" fg:x="674" fg:w="1"/><text x="53.8697%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="53.6197%" y="197" width="0.0796%" height="15" fill="rgb(244,17,29)" fg:x="674" fg:w="1"/><text x="53.8697%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.6197%" y="181" width="0.0796%" height="15" fill="rgb(242,196,24)" fg:x="674" fg:w="1"/><text x="53.8697%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="53.6197%" y="165" width="0.0796%" height="15" fill="rgb(210,113,45)" fg:x="674" fg:w="1"/><text x="53.8697%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.6197%" y="149" width="0.0796%" height="15" fill="rgb(205,129,3)" fg:x="674" fg:w="1"/><text x="53.8697%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="53.6197%" y="133" width="0.0796%" height="15" fill="rgb(232,74,10)" fg:x="674" fg:w="1"/><text x="53.8697%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="53.6197%" y="117" width="0.0796%" height="15" fill="rgb(251,63,43)" fg:x="674" fg:w="1"/><text x="53.8697%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="53.6197%" y="101" width="0.0796%" height="15" fill="rgb(228,215,15)" fg:x="674" fg:w="1"/><text x="53.8697%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="53.6197%" y="85" width="0.0796%" height="15" fill="rgb(233,179,38)" fg:x="674" fg:w="1"/><text x="53.8697%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="53.6197%" y="69" width="0.0796%" height="15" fill="rgb(227,187,9)" fg:x="674" fg:w="1"/><text x="53.8697%" y="79.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="53.6197%" y="53" width="0.0796%" height="15" fill="rgb(231,89,27)" fg:x="674" fg:w="1"/><text x="53.8697%" y="63.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6993%" y="501" width="0.0796%" height="15" fill="rgb(225,117,1)" fg:x="675" fg:w="1"/><text x="53.9493%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7788%" y="437" width="0.0796%" height="15" fill="rgb(239,120,49)" fg:x="676" fg:w="1"/><text x="54.0288%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7788%" y="421" width="0.0796%" height="15" fill="rgb(236,137,37)" fg:x="676" fg:w="1"/><text x="54.0288%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.7788%" y="469" width="0.1591%" height="15" fill="rgb(239,73,42)" fg:x="676" fg:w="2"/><text x="54.0288%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.7788%" y="453" width="0.1591%" height="15" fill="rgb(207,169,6)" fg:x="676" fg:w="2"/><text x="54.0288%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8584%" y="437" width="0.0796%" height="15" fill="rgb(228,171,10)" fg:x="677" fg:w="1"/><text x="54.1084%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.1766%" y="213" width="0.0796%" height="15" fill="rgb(217,228,47)" fg:x="681" fg:w="1"/><text x="54.4266%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1766%" y="197" width="0.0796%" height="15" fill="rgb(227,116,17)" fg:x="681" fg:w="1"/><text x="54.4266%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1766%" y="277" width="0.1591%" height="15" fill="rgb(245,128,36)" fg:x="681" fg:w="2"/><text x="54.4266%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1766%" y="261" width="0.1591%" height="15" fill="rgb(221,139,3)" fg:x="681" fg:w="2"/><text x="54.4266%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1766%" y="245" width="0.1591%" height="15" fill="rgb(207,59,54)" fg:x="681" fg:w="2"/><text x="54.4266%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.1766%" y="229" width="0.1591%" height="15" fill="rgb(231,129,12)" fg:x="681" fg:w="2"/><text x="54.4266%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.2562%" y="213" width="0.0796%" height="15" fill="rgb(235,49,17)" fg:x="682" fg:w="1"/><text x="54.5062%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.2562%" y="197" width="0.0796%" height="15" fill="rgb(229,175,11)" fg:x="682" fg:w="1"/><text x="54.5062%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.2562%" y="181" width="0.0796%" height="15" fill="rgb(206,187,30)" fg:x="682" fg:w="1"/><text x="54.5062%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.2562%" y="165" width="0.0796%" height="15" fill="rgb(214,39,19)" fg:x="682" fg:w="1"/><text x="54.5062%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.2562%" y="149" width="0.0796%" height="15" fill="rgb(243,92,46)" fg:x="682" fg:w="1"/><text x="54.5062%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.2562%" y="133" width="0.0796%" height="15" fill="rgb(240,125,36)" fg:x="682" fg:w="1"/><text x="54.5062%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.2562%" y="117" width="0.0796%" height="15" fill="rgb(217,193,45)" fg:x="682" fg:w="1"/><text x="54.5062%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.2562%" y="101" width="0.0796%" height="15" fill="rgb(230,127,16)" fg:x="682" fg:w="1"/><text x="54.5062%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.2562%" y="85" width="0.0796%" height="15" fill="rgb(208,161,0)" fg:x="682" fg:w="1"/><text x="54.5062%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.2562%" y="69" width="0.0796%" height="15" fill="rgb(251,69,39)" fg:x="682" fg:w="1"/><text x="54.5062%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.2562%" y="53" width="0.0796%" height="15" fill="rgb(229,86,22)" fg:x="682" fg:w="1"/><text x="54.5062%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2562%" y="37" width="0.0796%" height="15" fill="rgb(223,67,43)" fg:x="682" fg:w="1"/><text x="54.5062%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="54.0971%" y="325" width="0.3182%" height="15" fill="rgb(254,80,31)" fg:x="680" fg:w="4"/><text x="54.3471%" y="335.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="54.0971%" y="309" width="0.3182%" height="15" fill="rgb(225,149,52)" fg:x="680" fg:w="4"/><text x="54.3471%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.0971%" y="293" width="0.3182%" height="15" fill="rgb(214,169,18)" fg:x="680" fg:w="4"/><text x="54.3471%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3357%" y="277" width="0.0796%" height="15" fill="rgb(236,224,43)" fg:x="683" fg:w="1"/><text x="54.5857%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3357%" y="261" width="0.0796%" height="15" fill="rgb(251,125,34)" fg:x="683" fg:w="1"/><text x="54.5857%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3357%" y="245" width="0.0796%" height="15" fill="rgb(224,39,44)" fg:x="683" fg:w="1"/><text x="54.5857%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3357%" y="229" width="0.0796%" height="15" fill="rgb(206,111,46)" fg:x="683" fg:w="1"/><text x="54.5857%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.3357%" y="213" width="0.0796%" height="15" fill="rgb(227,147,50)" fg:x="683" fg:w="1"/><text x="54.5857%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3357%" y="197" width="0.0796%" height="15" fill="rgb(239,144,36)" fg:x="683" fg:w="1"/><text x="54.5857%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.3357%" y="181" width="0.0796%" height="15" fill="rgb(216,17,19)" fg:x="683" fg:w="1"/><text x="54.5857%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.3357%" y="165" width="0.0796%" height="15" fill="rgb(211,192,29)" fg:x="683" fg:w="1"/><text x="54.5857%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.3357%" y="149" width="0.0796%" height="15" fill="rgb(238,195,20)" fg:x="683" fg:w="1"/><text x="54.5857%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3357%" y="133" width="0.0796%" height="15" fill="rgb(213,210,42)" fg:x="683" fg:w="1"/><text x="54.5857%" y="143.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="54.0175%" y="357" width="0.4773%" height="15" fill="rgb(244,4,49)" fg:x="679" fg:w="6"/><text x="54.2675%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="54.0971%" y="341" width="0.3978%" height="15" fill="rgb(254,106,42)" fg:x="680" fg:w="5"/><text x="54.3471%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="54.4153%" y="325" width="0.0796%" height="15" fill="rgb(222,182,12)" fg:x="684" fg:w="1"/><text x="54.6653%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="54.5744%" y="197" width="0.2387%" height="15" fill="rgb(228,160,15)" fg:x="686" fg:w="3"/><text x="54.8244%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="54.6539%" y="181" width="0.1591%" height="15" fill="rgb(243,149,43)" fg:x="687" fg:w="2"/><text x="54.9039%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.6539%" y="165" width="0.1591%" height="15" fill="rgb(245,150,32)" fg:x="687" fg:w="2"/><text x="54.9039%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8130%" y="133" width="0.0796%" height="15" fill="rgb(205,43,19)" fg:x="689" fg:w="1"/><text x="55.0630%" y="143.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8130%" y="117" width="0.0796%" height="15" fill="rgb(249,189,35)" fg:x="689" fg:w="1"/><text x="55.0630%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.8130%" y="181" width="0.1591%" height="15" fill="rgb(223,9,0)" fg:x="689" fg:w="2"/><text x="55.0630%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="54.8130%" y="165" width="0.1591%" height="15" fill="rgb(213,142,45)" fg:x="689" fg:w="2"/><text x="55.0630%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.8130%" y="149" width="0.1591%" height="15" fill="rgb(208,148,2)" fg:x="689" fg:w="2"/><text x="55.0630%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.8926%" y="133" width="0.0796%" height="15" fill="rgb(207,191,42)" fg:x="690" fg:w="1"/><text x="55.1426%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="54.8926%" y="117" width="0.0796%" height="15" fill="rgb(215,218,38)" fg:x="690" fg:w="1"/><text x="55.1426%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.8926%" y="101" width="0.0796%" height="15" fill="rgb(223,195,24)" fg:x="690" fg:w="1"/><text x="55.1426%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="54.4948%" y="213" width="0.5569%" height="15" fill="rgb(254,60,30)" fg:x="685" fg:w="7"/><text x="54.7448%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.8130%" y="197" width="0.2387%" height="15" fill="rgb(223,2,9)" fg:x="689" fg:w="3"/><text x="55.0630%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9722%" y="181" width="0.0796%" height="15" fill="rgb(253,134,46)" fg:x="691" fg:w="1"/><text x="55.2222%" y="191.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="54.4948%" y="341" width="0.6364%" height="15" fill="rgb(206,209,20)" fg:x="685" fg:w="8"/><text x="54.7448%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="54.4948%" y="325" width="0.6364%" height="15" fill="rgb(253,104,42)" fg:x="685" fg:w="8"/><text x="54.7448%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="54.4948%" y="309" width="0.6364%" height="15" fill="rgb(223,47,23)" fg:x="685" fg:w="8"/><text x="54.7448%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="54.4948%" y="293" width="0.6364%" height="15" fill="rgb(247,148,44)" fg:x="685" fg:w="8"/><text x="54.7448%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="54.4948%" y="277" width="0.6364%" height="15" fill="rgb(221,224,16)" fg:x="685" fg:w="8"/><text x="54.7448%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="54.4948%" y="261" width="0.6364%" height="15" fill="rgb(252,103,29)" fg:x="685" fg:w="8"/><text x="54.7448%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="54.4948%" y="245" width="0.6364%" height="15" fill="rgb(244,185,34)" fg:x="685" fg:w="8"/><text x="54.7448%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="54.4948%" y="229" width="0.6364%" height="15" fill="rgb(218,18,50)" fg:x="685" fg:w="8"/><text x="54.7448%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.0517%" y="213" width="0.0796%" height="15" fill="rgb(234,105,8)" fg:x="692" fg:w="1"/><text x="55.3017%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.0517%" y="197" width="0.0796%" height="15" fill="rgb(249,51,19)" fg:x="692" fg:w="1"/><text x="55.3017%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.0517%" y="181" width="0.0796%" height="15" fill="rgb(233,132,7)" fg:x="692" fg:w="1"/><text x="55.3017%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.0517%" y="165" width="0.0796%" height="15" fill="rgb(229,181,43)" fg:x="692" fg:w="1"/><text x="55.3017%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2904%" y="197" width="0.0796%" height="15" fill="rgb(223,20,7)" fg:x="695" fg:w="1"/><text x="55.5404%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2904%" y="181" width="0.0796%" height="15" fill="rgb(245,13,34)" fg:x="695" fg:w="1"/><text x="55.5404%" y="191.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.2904%" y="165" width="0.0796%" height="15" fill="rgb(242,0,53)" fg:x="695" fg:w="1"/><text x="55.5404%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2904%" y="149" width="0.0796%" height="15" fill="rgb(233,115,19)" fg:x="695" fg:w="1"/><text x="55.5404%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2904%" y="133" width="0.0796%" height="15" fill="rgb(216,170,26)" fg:x="695" fg:w="1"/><text x="55.5404%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2904%" y="117" width="0.0796%" height="15" fill="rgb(233,13,0)" fg:x="695" fg:w="1"/><text x="55.5404%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2904%" y="101" width="0.0796%" height="15" fill="rgb(228,79,21)" fg:x="695" fg:w="1"/><text x="55.5404%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2904%" y="85" width="0.0796%" height="15" fill="rgb(244,17,41)" fg:x="695" fg:w="1"/><text x="55.5404%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2904%" y="69" width="0.0796%" height="15" fill="rgb(253,152,11)" fg:x="695" fg:w="1"/><text x="55.5404%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2904%" y="53" width="0.0796%" height="15" fill="rgb(254,94,47)" fg:x="695" fg:w="1"/><text x="55.5404%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="55.1313%" y="261" width="0.3978%" height="15" fill="rgb(239,66,43)" fg:x="693" fg:w="5"/><text x="55.3813%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="55.1313%" y="245" width="0.3978%" height="15" fill="rgb(251,25,22)" fg:x="693" fg:w="5"/><text x="55.3813%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="55.2108%" y="229" width="0.3182%" height="15" fill="rgb(227,65,46)" fg:x="694" fg:w="4"/><text x="55.4608%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="55.2108%" y="213" width="0.3182%" height="15" fill="rgb(240,180,32)" fg:x="694" fg:w="4"/><text x="55.4608%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="55.3699%" y="197" width="0.1591%" height="15" fill="rgb(242,11,35)" fg:x="696" fg:w="2"/><text x="55.6199%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="55.3699%" y="181" width="0.1591%" height="15" fill="rgb(221,41,49)" fg:x="696" fg:w="2"/><text x="55.6199%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.3699%" y="165" width="0.1591%" height="15" fill="rgb(253,80,52)" fg:x="696" fg:w="2"/><text x="55.6199%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.6086%" y="181" width="0.0796%" height="15" fill="rgb(232,152,28)" fg:x="699" fg:w="1"/><text x="55.8586%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (9 samples, 0.72%)</title><rect x="55.1313%" y="309" width="0.7160%" height="15" fill="rgb(219,110,12)" fg:x="693" fg:w="9"/><text x="55.3813%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.72%)</title><rect x="55.1313%" y="293" width="0.7160%" height="15" fill="rgb(218,98,43)" fg:x="693" fg:w="9"/><text x="55.3813%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="55.1313%" y="277" width="0.7160%" height="15" fill="rgb(253,96,49)" fg:x="693" fg:w="9"/><text x="55.3813%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.5290%" y="261" width="0.3182%" height="15" fill="rgb(238,132,17)" fg:x="698" fg:w="4"/><text x="55.7790%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.6086%" y="245" width="0.2387%" height="15" fill="rgb(208,82,25)" fg:x="699" fg:w="3"/><text x="55.8586%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="55.6086%" y="229" width="0.2387%" height="15" fill="rgb(237,77,13)" fg:x="699" fg:w="3"/><text x="55.8586%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="55.6086%" y="213" width="0.2387%" height="15" fill="rgb(230,6,11)" fg:x="699" fg:w="3"/><text x="55.8586%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.6086%" y="197" width="0.2387%" height="15" fill="rgb(207,29,48)" fg:x="699" fg:w="3"/><text x="55.8586%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="55.6881%" y="181" width="0.1591%" height="15" fill="rgb(247,105,22)" fg:x="700" fg:w="2"/><text x="55.9381%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6881%" y="165" width="0.1591%" height="15" fill="rgb(223,114,44)" fg:x="700" fg:w="2"/><text x="55.9381%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.6881%" y="149" width="0.1591%" height="15" fill="rgb(242,3,46)" fg:x="700" fg:w="2"/><text x="55.9381%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="55.6881%" y="133" width="0.1591%" height="15" fill="rgb(243,197,8)" fg:x="700" fg:w="2"/><text x="55.9381%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6881%" y="117" width="0.1591%" height="15" fill="rgb(238,171,27)" fg:x="700" fg:w="2"/><text x="55.9381%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="55.6881%" y="101" width="0.1591%" height="15" fill="rgb(254,144,27)" fg:x="700" fg:w="2"/><text x="55.9381%" y="111.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (18 samples, 1.43%)</title><rect x="54.4948%" y="357" width="1.4320%" height="15" fill="rgb(216,203,36)" fg:x="685" fg:w="18"/><text x="54.7448%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="55.1313%" y="341" width="0.7955%" height="15" fill="rgb(247,27,26)" fg:x="693" fg:w="10"/><text x="55.3813%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="55.1313%" y="325" width="0.7955%" height="15" fill="rgb(234,180,24)" fg:x="693" fg:w="10"/><text x="55.3813%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.8473%" y="309" width="0.0796%" height="15" fill="rgb(221,50,43)" fg:x="702" fg:w="1"/><text x="56.0973%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.8473%" y="293" width="0.0796%" height="15" fill="rgb(236,50,6)" fg:x="702" fg:w="1"/><text x="56.0973%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.8473%" y="277" width="0.0796%" height="15" fill="rgb(245,172,32)" fg:x="702" fg:w="1"/><text x="56.0973%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8473%" y="261" width="0.0796%" height="15" fill="rgb(207,54,46)" fg:x="702" fg:w="1"/><text x="56.0973%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="55.9268%" y="357" width="0.0796%" height="15" fill="rgb(218,67,44)" fg:x="703" fg:w="1"/><text x="56.1768%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="55.9268%" y="341" width="0.0796%" height="15" fill="rgb(208,152,22)" fg:x="703" fg:w="1"/><text x="56.1768%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="55.9268%" y="325" width="0.0796%" height="15" fill="rgb(243,177,0)" fg:x="703" fg:w="1"/><text x="56.1768%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9268%" y="309" width="0.0796%" height="15" fill="rgb(212,75,12)" fg:x="703" fg:w="1"/><text x="56.1768%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9268%" y="293" width="0.0796%" height="15" fill="rgb(212,129,29)" fg:x="703" fg:w="1"/><text x="56.1768%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9268%" y="277" width="0.0796%" height="15" fill="rgb(241,229,35)" fg:x="703" fg:w="1"/><text x="56.1768%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9268%" y="261" width="0.0796%" height="15" fill="rgb(232,49,32)" fg:x="703" fg:w="1"/><text x="56.1768%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.9268%" y="245" width="0.0796%" height="15" fill="rgb(243,119,48)" fg:x="703" fg:w="1"/><text x="56.1768%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9268%" y="229" width="0.0796%" height="15" fill="rgb(212,205,30)" fg:x="703" fg:w="1"/><text x="56.1768%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9268%" y="213" width="0.0796%" height="15" fill="rgb(218,175,42)" fg:x="703" fg:w="1"/><text x="56.1768%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9268%" y="197" width="0.0796%" height="15" fill="rgb(230,156,27)" fg:x="703" fg:w="1"/><text x="56.1768%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.9268%" y="181" width="0.0796%" height="15" fill="rgb(254,32,43)" fg:x="703" fg:w="1"/><text x="56.1768%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.9268%" y="165" width="0.0796%" height="15" fill="rgb(246,89,34)" fg:x="703" fg:w="1"/><text x="56.1768%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.9268%" y="149" width="0.0796%" height="15" fill="rgb(247,162,17)" fg:x="703" fg:w="1"/><text x="56.1768%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0064%" y="341" width="0.0796%" height="15" fill="rgb(219,71,37)" fg:x="704" fg:w="1"/><text x="56.2564%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.0064%" y="325" width="0.0796%" height="15" fill="rgb(210,184,7)" fg:x="704" fg:w="1"/><text x="56.2564%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.0064%" y="309" width="0.0796%" height="15" fill="rgb(245,16,32)" fg:x="704" fg:w="1"/><text x="56.2564%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.0064%" y="293" width="0.0796%" height="15" fill="rgb(209,62,7)" fg:x="704" fg:w="1"/><text x="56.2564%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.0064%" y="277" width="0.0796%" height="15" fill="rgb(215,16,15)" fg:x="704" fg:w="1"/><text x="56.2564%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0064%" y="261" width="0.0796%" height="15" fill="rgb(223,60,14)" fg:x="704" fg:w="1"/><text x="56.2564%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.0064%" y="245" width="0.0796%" height="15" fill="rgb(244,134,12)" fg:x="704" fg:w="1"/><text x="56.2564%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.0064%" y="229" width="0.0796%" height="15" fill="rgb(224,3,41)" fg:x="704" fg:w="1"/><text x="56.2564%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.0064%" y="213" width="0.0796%" height="15" fill="rgb(213,84,2)" fg:x="704" fg:w="1"/><text x="56.2564%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.0064%" y="197" width="0.0796%" height="15" fill="rgb(213,216,27)" fg:x="704" fg:w="1"/><text x="56.2564%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.0064%" y="181" width="0.0796%" height="15" fill="rgb(218,76,35)" fg:x="704" fg:w="1"/><text x="56.2564%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="56.0064%" y="165" width="0.0796%" height="15" fill="rgb(253,89,24)" fg:x="704" fg:w="1"/><text x="56.2564%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="56.0064%" y="149" width="0.0796%" height="15" fill="rgb(217,188,40)" fg:x="704" fg:w="1"/><text x="56.2564%" y="159.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (31 samples, 2.47%)</title><rect x="53.9379%" y="469" width="2.4662%" height="15" fill="rgb(237,79,38)" fg:x="678" fg:w="31"/><text x="54.1879%" y="479.50">&lt;p..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.47%)</title><rect x="53.9379%" y="453" width="2.4662%" height="15" fill="rgb(215,116,13)" fg:x="678" fg:w="31"/><text x="54.1879%" y="463.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.47%)</title><rect x="53.9379%" y="437" width="2.4662%" height="15" fill="rgb(249,66,35)" fg:x="678" fg:w="31"/><text x="54.1879%" y="447.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (31 samples, 2.47%)</title><rect x="53.9379%" y="421" width="2.4662%" height="15" fill="rgb(253,86,18)" fg:x="678" fg:w="31"/><text x="54.1879%" y="431.50">&lt;c..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (31 samples, 2.47%)</title><rect x="53.9379%" y="405" width="2.4662%" height="15" fill="rgb(209,175,36)" fg:x="678" fg:w="31"/><text x="54.1879%" y="415.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (30 samples, 2.39%)</title><rect x="54.0175%" y="389" width="2.3866%" height="15" fill="rgb(253,149,3)" fg:x="679" fg:w="30"/><text x="54.2675%" y="399.50">&lt;e..</text></g><g><title>engine::session::internal::Entities::add_persisted (30 samples, 2.39%)</title><rect x="54.0175%" y="373" width="2.3866%" height="15" fill="rgb(242,124,49)" fg:x="679" fg:w="30"/><text x="54.2675%" y="383.50">en..</text></g><g><title>engine::session::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="56.0064%" y="357" width="0.3978%" height="15" fill="rgb(219,171,24)" fg:x="704" fg:w="5"/><text x="56.2564%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.0859%" y="341" width="0.3182%" height="15" fill="rgb(216,121,30)" fg:x="705" fg:w="4"/><text x="56.3359%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="56.0859%" y="325" width="0.3182%" height="15" fill="rgb(234,165,21)" fg:x="705" fg:w="4"/><text x="56.3359%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="56.0859%" y="309" width="0.3182%" height="15" fill="rgb(234,103,40)" fg:x="705" fg:w="4"/><text x="56.3359%" y="319.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="56.0859%" y="293" width="0.3182%" height="15" fill="rgb(250,137,24)" fg:x="705" fg:w="4"/><text x="56.3359%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.4041%" y="437" width="0.0796%" height="15" fill="rgb(253,22,21)" fg:x="709" fg:w="1"/><text x="56.6541%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (43 samples, 3.42%)</title><rect x="53.1424%" y="533" width="3.4208%" height="15" fill="rgb(243,22,5)" fg:x="668" fg:w="43"/><text x="53.3924%" y="543.50">plu..</text></g><g><title>plugins_core::tools::contained_by (40 samples, 3.18%)</title><rect x="53.3811%" y="517" width="3.1822%" height="15" fill="rgb(212,56,7)" fg:x="671" fg:w="40"/><text x="53.6311%" y="527.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (35 samples, 2.78%)</title><rect x="53.7788%" y="501" width="2.7844%" height="15" fill="rgb(223,190,49)" fg:x="676" fg:w="35"/><text x="54.0288%" y="511.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (35 samples, 2.78%)</title><rect x="53.7788%" y="485" width="2.7844%" height="15" fill="rgb(221,110,35)" fg:x="676" fg:w="35"/><text x="54.0288%" y="495.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.4041%" y="469" width="0.1591%" height="15" fill="rgb(212,113,34)" fg:x="709" fg:w="2"/><text x="56.6541%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.4041%" y="453" width="0.1591%" height="15" fill="rgb(216,125,47)" fg:x="709" fg:w="2"/><text x="56.6541%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="56.4837%" y="437" width="0.0796%" height="15" fill="rgb(251,112,19)" fg:x="710" fg:w="1"/><text x="56.7337%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.4837%" y="421" width="0.0796%" height="15" fill="rgb(254,200,41)" fg:x="710" fg:w="1"/><text x="56.7337%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="56.4837%" y="405" width="0.0796%" height="15" fill="rgb(225,17,42)" fg:x="710" fg:w="1"/><text x="56.7337%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.4837%" y="389" width="0.0796%" height="15" fill="rgb(208,105,35)" fg:x="710" fg:w="1"/><text x="56.7337%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.4837%" y="373" width="0.0796%" height="15" fill="rgb(210,125,51)" fg:x="710" fg:w="1"/><text x="56.7337%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5632%" y="517" width="0.0796%" height="15" fill="rgb(227,213,18)" fg:x="711" fg:w="1"/><text x="56.8132%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5632%" y="501" width="0.0796%" height="15" fill="rgb(221,174,32)" fg:x="711" fg:w="1"/><text x="56.8132%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5632%" y="485" width="0.0796%" height="15" fill="rgb(234,23,1)" fg:x="711" fg:w="1"/><text x="56.8132%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.5632%" y="469" width="0.0796%" height="15" fill="rgb(209,65,17)" fg:x="711" fg:w="1"/><text x="56.8132%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.5632%" y="453" width="0.0796%" height="15" fill="rgb(206,224,31)" fg:x="711" fg:w="1"/><text x="56.8132%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.5632%" y="437" width="0.0796%" height="15" fill="rgb(230,20,38)" fg:x="711" fg:w="1"/><text x="56.8132%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.5632%" y="421" width="0.0796%" height="15" fill="rgb(211,9,41)" fg:x="711" fg:w="1"/><text x="56.8132%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5632%" y="405" width="0.0796%" height="15" fill="rgb(233,214,4)" fg:x="711" fg:w="1"/><text x="56.8132%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="56.5632%" y="389" width="0.0796%" height="15" fill="rgb(225,60,54)" fg:x="711" fg:w="1"/><text x="56.8132%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="56.5632%" y="373" width="0.0796%" height="15" fill="rgb(206,228,35)" fg:x="711" fg:w="1"/><text x="56.8132%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="56.5632%" y="357" width="0.0796%" height="15" fill="rgb(212,178,50)" fg:x="711" fg:w="1"/><text x="56.8132%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="56.5632%" y="341" width="0.0796%" height="15" fill="rgb(206,192,33)" fg:x="711" fg:w="1"/><text x="56.8132%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="56.5632%" y="325" width="0.0796%" height="15" fill="rgb(238,210,1)" fg:x="711" fg:w="1"/><text x="56.8132%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.5632%" y="309" width="0.0796%" height="15" fill="rgb(205,65,52)" fg:x="711" fg:w="1"/><text x="56.8132%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="56.6428%" y="517" width="0.0796%" height="15" fill="rgb(237,204,51)" fg:x="712" fg:w="1"/><text x="56.8928%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="56.6428%" y="501" width="0.0796%" height="15" fill="rgb(213,119,51)" fg:x="712" fg:w="1"/><text x="56.8928%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6428%" y="485" width="0.0796%" height="15" fill="rgb(244,156,37)" fg:x="712" fg:w="1"/><text x="56.8928%" y="495.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="56.7224%" y="517" width="0.0796%" height="15" fill="rgb(249,96,18)" fg:x="713" fg:w="1"/><text x="56.9724%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="56.8019%" y="453" width="0.0796%" height="15" fill="rgb(231,65,11)" fg:x="714" fg:w="1"/><text x="57.0519%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.0406%" y="357" width="0.1591%" height="15" fill="rgb(240,187,2)" fg:x="717" fg:w="2"/><text x="57.2906%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.1201%" y="341" width="0.0796%" height="15" fill="rgb(242,121,39)" fg:x="718" fg:w="1"/><text x="57.3701%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.1201%" y="325" width="0.0796%" height="15" fill="rgb(233,205,18)" fg:x="718" fg:w="1"/><text x="57.3701%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.1201%" y="309" width="0.0796%" height="15" fill="rgb(219,67,33)" fg:x="718" fg:w="1"/><text x="57.3701%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.1201%" y="293" width="0.0796%" height="15" fill="rgb(227,84,12)" fg:x="718" fg:w="1"/><text x="57.3701%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1201%" y="277" width="0.0796%" height="15" fill="rgb(227,42,52)" fg:x="718" fg:w="1"/><text x="57.3701%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.1201%" y="261" width="0.0796%" height="15" fill="rgb(231,27,28)" fg:x="718" fg:w="1"/><text x="57.3701%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.1201%" y="245" width="0.0796%" height="15" fill="rgb(238,42,2)" fg:x="718" fg:w="1"/><text x="57.3701%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.1201%" y="229" width="0.0796%" height="15" fill="rgb(215,15,9)" fg:x="718" fg:w="1"/><text x="57.3701%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.1201%" y="213" width="0.0796%" height="15" fill="rgb(205,195,15)" fg:x="718" fg:w="1"/><text x="57.3701%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.1201%" y="197" width="0.0796%" height="15" fill="rgb(233,143,2)" fg:x="718" fg:w="1"/><text x="57.3701%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1201%" y="181" width="0.0796%" height="15" fill="rgb(207,108,8)" fg:x="718" fg:w="1"/><text x="57.3701%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="56.9610%" y="373" width="0.3182%" height="15" fill="rgb(214,53,21)" fg:x="716" fg:w="4"/><text x="57.2110%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1997%" y="357" width="0.0796%" height="15" fill="rgb(238,212,36)" fg:x="719" fg:w="1"/><text x="57.4497%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.8815%" y="421" width="0.4773%" height="15" fill="rgb(218,151,47)" fg:x="715" fg:w="6"/><text x="57.1315%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.8815%" y="405" width="0.4773%" height="15" fill="rgb(245,160,3)" fg:x="715" fg:w="6"/><text x="57.1315%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="56.8815%" y="389" width="0.4773%" height="15" fill="rgb(238,106,19)" fg:x="715" fg:w="6"/><text x="57.1315%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2792%" y="373" width="0.0796%" height="15" fill="rgb(207,206,9)" fg:x="720" fg:w="1"/><text x="57.5292%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.3588%" y="389" width="0.0796%" height="15" fill="rgb(254,40,10)" fg:x="721" fg:w="1"/><text x="57.6088%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="57.3588%" y="421" width="0.1591%" height="15" fill="rgb(245,81,8)" fg:x="721" fg:w="2"/><text x="57.6088%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="57.3588%" y="405" width="0.1591%" height="15" fill="rgb(214,119,17)" fg:x="721" fg:w="2"/><text x="57.6088%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.4383%" y="389" width="0.0796%" height="15" fill="rgb(245,100,39)" fg:x="722" fg:w="1"/><text x="57.6883%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="57.4383%" y="373" width="0.0796%" height="15" fill="rgb(243,105,16)" fg:x="722" fg:w="1"/><text x="57.6883%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="57.5179%" y="325" width="0.1591%" height="15" fill="rgb(214,53,2)" fg:x="723" fg:w="2"/><text x="57.7679%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.5975%" y="309" width="0.0796%" height="15" fill="rgb(251,54,50)" fg:x="724" fg:w="1"/><text x="57.8475%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.6770%" y="293" width="0.0796%" height="15" fill="rgb(244,121,37)" fg:x="725" fg:w="1"/><text x="57.9270%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::name (13 samples, 1.03%)</title><rect x="56.8019%" y="485" width="1.0342%" height="15" fill="rgb(236,158,39)" fg:x="714" fg:w="13"/><text x="57.0519%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.03%)</title><rect x="56.8019%" y="469" width="1.0342%" height="15" fill="rgb(226,25,37)" fg:x="714" fg:w="13"/><text x="57.0519%" y="479.50"></text></g><g><title>kernel::model::props::load_props (12 samples, 0.95%)</title><rect x="56.8815%" y="453" width="0.9547%" height="15" fill="rgb(222,71,46)" fg:x="715" fg:w="12"/><text x="57.1315%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.95%)</title><rect x="56.8815%" y="437" width="0.9547%" height="15" fill="rgb(209,27,29)" fg:x="715" fg:w="12"/><text x="57.1315%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="57.5179%" y="421" width="0.3182%" height="15" fill="rgb(210,196,17)" fg:x="723" fg:w="4"/><text x="57.7679%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.5179%" y="405" width="0.3182%" height="15" fill="rgb(236,76,23)" fg:x="723" fg:w="4"/><text x="57.7679%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="57.5179%" y="389" width="0.3182%" height="15" fill="rgb(214,33,32)" fg:x="723" fg:w="4"/><text x="57.7679%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.5179%" y="373" width="0.3182%" height="15" fill="rgb(243,16,26)" fg:x="723" fg:w="4"/><text x="57.7679%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="57.5179%" y="357" width="0.3182%" height="15" fill="rgb(241,30,48)" fg:x="723" fg:w="4"/><text x="57.7679%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.5179%" y="341" width="0.3182%" height="15" fill="rgb(241,106,1)" fg:x="723" fg:w="4"/><text x="57.7679%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.6770%" y="325" width="0.1591%" height="15" fill="rgb(230,62,29)" fg:x="725" fg:w="2"/><text x="57.9270%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.6770%" y="309" width="0.1591%" height="15" fill="rgb(207,166,53)" fg:x="725" fg:w="2"/><text x="57.9270%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.7566%" y="293" width="0.0796%" height="15" fill="rgb(244,54,13)" fg:x="726" fg:w="1"/><text x="58.0066%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.7566%" y="277" width="0.0796%" height="15" fill="rgb(205,144,19)" fg:x="726" fg:w="1"/><text x="58.0066%" y="287.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (17 samples, 1.35%)</title><rect x="56.5632%" y="533" width="1.3524%" height="15" fill="rgb(225,165,45)" fg:x="711" fg:w="17"/><text x="56.8132%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (14 samples, 1.11%)</title><rect x="56.8019%" y="517" width="1.1138%" height="15" fill="rgb(220,140,6)" fg:x="714" fg:w="14"/><text x="57.0519%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (14 samples, 1.11%)</title><rect x="56.8019%" y="501" width="1.1138%" height="15" fill="rgb(234,69,14)" fg:x="714" fg:w="14"/><text x="57.0519%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="57.8361%" y="485" width="0.0796%" height="15" fill="rgb(243,24,33)" fg:x="727" fg:w="1"/><text x="58.0861%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.8361%" y="469" width="0.0796%" height="15" fill="rgb(253,100,43)" fg:x="727" fg:w="1"/><text x="58.0861%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (63 samples, 5.01%)</title><rect x="53.0628%" y="565" width="5.0119%" height="15" fill="rgb(221,168,15)" fg:x="667" fg:w="63"/><text x="53.3128%" y="575.50">&lt;engin..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (63 samples, 5.01%)</title><rect x="53.0628%" y="549" width="5.0119%" height="15" fill="rgb(237,15,11)" fg:x="667" fg:w="63"/><text x="53.3128%" y="559.50">&lt;plugi..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="57.9157%" y="533" width="0.1591%" height="15" fill="rgb(229,207,40)" fg:x="728" fg:w="2"/><text x="58.1657%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.9157%" y="517" width="0.1591%" height="15" fill="rgb(246,125,48)" fg:x="728" fg:w="2"/><text x="58.1657%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.9157%" y="501" width="0.1591%" height="15" fill="rgb(231,65,10)" fg:x="728" fg:w="2"/><text x="58.1657%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.9157%" y="485" width="0.1591%" height="15" fill="rgb(222,152,40)" fg:x="728" fg:w="2"/><text x="58.1657%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="57.9157%" y="469" width="0.1591%" height="15" fill="rgb(214,12,30)" fg:x="728" fg:w="2"/><text x="58.1657%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="57.9157%" y="453" width="0.1591%" height="15" fill="rgb(239,80,41)" fg:x="728" fg:w="2"/><text x="58.1657%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="57.9157%" y="437" width="0.1591%" height="15" fill="rgb(206,175,27)" fg:x="728" fg:w="2"/><text x="58.1657%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.9157%" y="421" width="0.1591%" height="15" fill="rgb(222,43,39)" fg:x="728" fg:w="2"/><text x="58.1657%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="57.9157%" y="405" width="0.1591%" height="15" fill="rgb(243,47,50)" fg:x="728" fg:w="2"/><text x="58.1657%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="57.9157%" y="389" width="0.1591%" height="15" fill="rgb(243,61,21)" fg:x="728" fg:w="2"/><text x="58.1657%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="57.9157%" y="373" width="0.1591%" height="15" fill="rgb(208,172,5)" fg:x="728" fg:w="2"/><text x="58.1657%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="57.9157%" y="357" width="0.1591%" height="15" fill="rgb(219,24,25)" fg:x="728" fg:w="2"/><text x="58.1657%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="57.9157%" y="341" width="0.1591%" height="15" fill="rgb(235,42,41)" fg:x="728" fg:w="2"/><text x="58.1657%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="57.9157%" y="325" width="0.1591%" height="15" fill="rgb(226,190,24)" fg:x="728" fg:w="2"/><text x="58.1657%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="58.0748%" y="565" width="0.1591%" height="15" fill="rgb(216,55,27)" fg:x="730" fg:w="2"/><text x="58.3248%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="58.0748%" y="549" width="0.1591%" height="15" fill="rgb(231,77,14)" fg:x="730" fg:w="2"/><text x="58.3248%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.1543%" y="533" width="0.0796%" height="15" fill="rgb(208,108,34)" fg:x="731" fg:w="1"/><text x="58.4043%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.2339%" y="437" width="0.1591%" height="15" fill="rgb(228,183,52)" fg:x="732" fg:w="2"/><text x="58.4839%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.2339%" y="421" width="0.1591%" height="15" fill="rgb(224,152,1)" fg:x="732" fg:w="2"/><text x="58.4839%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.2339%" y="405" width="0.1591%" height="15" fill="rgb(246,115,8)" fg:x="732" fg:w="2"/><text x="58.4839%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.2339%" y="389" width="0.1591%" height="15" fill="rgb(211,76,13)" fg:x="732" fg:w="2"/><text x="58.4839%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.2339%" y="373" width="0.1591%" height="15" fill="rgb(233,214,49)" fg:x="732" fg:w="2"/><text x="58.4839%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.2339%" y="357" width="0.1591%" height="15" fill="rgb(223,44,51)" fg:x="732" fg:w="2"/><text x="58.4839%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.2339%" y="341" width="0.1591%" height="15" fill="rgb(225,111,51)" fg:x="732" fg:w="2"/><text x="58.4839%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.2339%" y="325" width="0.1591%" height="15" fill="rgb(231,185,26)" fg:x="732" fg:w="2"/><text x="58.4839%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.2339%" y="309" width="0.1591%" height="15" fill="rgb(233,111,30)" fg:x="732" fg:w="2"/><text x="58.4839%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.2339%" y="293" width="0.1591%" height="15" fill="rgb(250,1,47)" fg:x="732" fg:w="2"/><text x="58.4839%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.2339%" y="277" width="0.1591%" height="15" fill="rgb(254,210,3)" fg:x="732" fg:w="2"/><text x="58.4839%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.2339%" y="261" width="0.1591%" height="15" fill="rgb(234,14,22)" fg:x="732" fg:w="2"/><text x="58.4839%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.2339%" y="245" width="0.1591%" height="15" fill="rgb(221,117,4)" fg:x="732" fg:w="2"/><text x="58.4839%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.2339%" y="485" width="0.2387%" height="15" fill="rgb(251,147,27)" fg:x="732" fg:w="3"/><text x="58.4839%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.2339%" y="469" width="0.2387%" height="15" fill="rgb(226,52,11)" fg:x="732" fg:w="3"/><text x="58.4839%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.2339%" y="453" width="0.2387%" height="15" fill="rgb(229,222,5)" fg:x="732" fg:w="3"/><text x="58.4839%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3930%" y="437" width="0.0796%" height="15" fill="rgb(232,76,2)" fg:x="734" fg:w="1"/><text x="58.6430%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3930%" y="421" width="0.0796%" height="15" fill="rgb(242,108,2)" fg:x="734" fg:w="1"/><text x="58.6430%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.3930%" y="405" width="0.0796%" height="15" fill="rgb(213,165,6)" fg:x="734" fg:w="1"/><text x="58.6430%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.3930%" y="389" width="0.0796%" height="15" fill="rgb(222,24,42)" fg:x="734" fg:w="1"/><text x="58.6430%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.3930%" y="373" width="0.0796%" height="15" fill="rgb(242,170,24)" fg:x="734" fg:w="1"/><text x="58.6430%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3930%" y="357" width="0.0796%" height="15" fill="rgb(209,110,40)" fg:x="734" fg:w="1"/><text x="58.6430%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3930%" y="341" width="0.0796%" height="15" fill="rgb(233,146,36)" fg:x="734" fg:w="1"/><text x="58.6430%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.3930%" y="325" width="0.0796%" height="15" fill="rgb(229,33,32)" fg:x="734" fg:w="1"/><text x="58.6430%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.3930%" y="309" width="0.0796%" height="15" fill="rgb(225,55,34)" fg:x="734" fg:w="1"/><text x="58.6430%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.3930%" y="293" width="0.0796%" height="15" fill="rgb(217,32,50)" fg:x="734" fg:w="1"/><text x="58.6430%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.3930%" y="277" width="0.0796%" height="15" fill="rgb(206,110,53)" fg:x="734" fg:w="1"/><text x="58.6430%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3930%" y="261" width="0.0796%" height="15" fill="rgb(247,25,10)" fg:x="734" fg:w="1"/><text x="58.6430%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.4726%" y="389" width="0.0796%" height="15" fill="rgb(226,67,48)" fg:x="735" fg:w="1"/><text x="58.7226%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.4726%" y="373" width="0.0796%" height="15" fill="rgb(239,73,28)" fg:x="735" fg:w="1"/><text x="58.7226%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="58.2339%" y="533" width="0.4773%" height="15" fill="rgb(234,200,41)" fg:x="732" fg:w="6"/><text x="58.4839%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="58.2339%" y="517" width="0.4773%" height="15" fill="rgb(233,76,35)" fg:x="732" fg:w="6"/><text x="58.4839%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="58.2339%" y="501" width="0.4773%" height="15" fill="rgb(238,166,31)" fg:x="732" fg:w="6"/><text x="58.4839%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.4726%" y="485" width="0.2387%" height="15" fill="rgb(219,218,51)" fg:x="735" fg:w="3"/><text x="58.7226%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.4726%" y="469" width="0.2387%" height="15" fill="rgb(221,82,53)" fg:x="735" fg:w="3"/><text x="58.7226%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.4726%" y="453" width="0.2387%" height="15" fill="rgb(218,179,13)" fg:x="735" fg:w="3"/><text x="58.7226%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.4726%" y="437" width="0.2387%" height="15" fill="rgb(210,53,38)" fg:x="735" fg:w="3"/><text x="58.7226%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="58.4726%" y="421" width="0.2387%" height="15" fill="rgb(214,167,31)" fg:x="735" fg:w="3"/><text x="58.7226%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.4726%" y="405" width="0.2387%" height="15" fill="rgb(223,26,5)" fg:x="735" fg:w="3"/><text x="58.7226%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="58.5521%" y="389" width="0.1591%" height="15" fill="rgb(218,95,23)" fg:x="736" fg:w="2"/><text x="58.8021%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="58.5521%" y="373" width="0.1591%" height="15" fill="rgb(248,205,45)" fg:x="736" fg:w="2"/><text x="58.8021%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="58.5521%" y="357" width="0.1591%" height="15" fill="rgb(211,76,6)" fg:x="736" fg:w="2"/><text x="58.8021%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.6317%" y="341" width="0.0796%" height="15" fill="rgb(250,176,29)" fg:x="737" fg:w="1"/><text x="58.8817%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7112%" y="421" width="0.0796%" height="15" fill="rgb(240,107,31)" fg:x="738" fg:w="1"/><text x="58.9612%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7112%" y="405" width="0.0796%" height="15" fill="rgb(229,215,17)" fg:x="738" fg:w="1"/><text x="58.9612%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7112%" y="485" width="0.1591%" height="15" fill="rgb(240,79,8)" fg:x="738" fg:w="2"/><text x="58.9612%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7112%" y="469" width="0.1591%" height="15" fill="rgb(243,110,48)" fg:x="738" fg:w="2"/><text x="58.9612%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7112%" y="453" width="0.1591%" height="15" fill="rgb(236,201,9)" fg:x="738" fg:w="2"/><text x="58.9612%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="58.7112%" y="437" width="0.1591%" height="15" fill="rgb(220,87,26)" fg:x="738" fg:w="2"/><text x="58.9612%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7908%" y="421" width="0.0796%" height="15" fill="rgb(212,118,27)" fg:x="739" fg:w="1"/><text x="59.0408%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7908%" y="405" width="0.0796%" height="15" fill="rgb(244,178,50)" fg:x="739" fg:w="1"/><text x="59.0408%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.7908%" y="389" width="0.0796%" height="15" fill="rgb(215,204,7)" fg:x="739" fg:w="1"/><text x="59.0408%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.7908%" y="373" width="0.0796%" height="15" fill="rgb(214,122,43)" fg:x="739" fg:w="1"/><text x="59.0408%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.7908%" y="357" width="0.0796%" height="15" fill="rgb(251,178,26)" fg:x="739" fg:w="1"/><text x="59.0408%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7908%" y="341" width="0.0796%" height="15" fill="rgb(210,7,35)" fg:x="739" fg:w="1"/><text x="59.0408%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7908%" y="325" width="0.0796%" height="15" fill="rgb(227,164,54)" fg:x="739" fg:w="1"/><text x="59.0408%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.7908%" y="309" width="0.0796%" height="15" fill="rgb(205,18,34)" fg:x="739" fg:w="1"/><text x="59.0408%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.7908%" y="293" width="0.0796%" height="15" fill="rgb(239,50,19)" fg:x="739" fg:w="1"/><text x="59.0408%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.7908%" y="277" width="0.0796%" height="15" fill="rgb(224,85,6)" fg:x="739" fg:w="1"/><text x="59.0408%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.7908%" y="261" width="0.0796%" height="15" fill="rgb(252,167,34)" fg:x="739" fg:w="1"/><text x="59.0408%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7908%" y="245" width="0.0796%" height="15" fill="rgb(243,180,35)" fg:x="739" fg:w="1"/><text x="59.0408%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="485" width="0.0796%" height="15" fill="rgb(213,214,53)" fg:x="740" fg:w="1"/><text x="59.1203%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="469" width="0.0796%" height="15" fill="rgb(244,39,37)" fg:x="740" fg:w="1"/><text x="59.1203%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="453" width="0.0796%" height="15" fill="rgb(215,141,14)" fg:x="740" fg:w="1"/><text x="59.1203%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="437" width="0.0796%" height="15" fill="rgb(210,2,42)" fg:x="740" fg:w="1"/><text x="59.1203%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="421" width="0.0796%" height="15" fill="rgb(252,189,47)" fg:x="740" fg:w="1"/><text x="59.1203%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="58.8703%" y="405" width="0.0796%" height="15" fill="rgb(222,154,47)" fg:x="740" fg:w="1"/><text x="59.1203%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8703%" y="389" width="0.0796%" height="15" fill="rgb(228,20,37)" fg:x="740" fg:w="1"/><text x="59.1203%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.2681%" y="357" width="0.0796%" height="15" fill="rgb(236,17,4)" fg:x="745" fg:w="1"/><text x="59.5181%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2681%" y="341" width="0.0796%" height="15" fill="rgb(222,211,31)" fg:x="745" fg:w="1"/><text x="59.5181%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (15 samples, 1.19%)</title><rect x="58.2339%" y="565" width="1.1933%" height="15" fill="rgb(218,134,25)" fg:x="732" fg:w="15"/><text x="58.4839%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (15 samples, 1.19%)</title><rect x="58.2339%" y="549" width="1.1933%" height="15" fill="rgb(218,97,43)" fg:x="732" fg:w="15"/><text x="58.4839%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="58.7112%" y="533" width="0.7160%" height="15" fill="rgb(234,163,32)" fg:x="738" fg:w="9"/><text x="58.9612%" y="543.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="58.7112%" y="517" width="0.7160%" height="15" fill="rgb(251,171,42)" fg:x="738" fg:w="9"/><text x="58.9612%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="58.7112%" y="501" width="0.7160%" height="15" fill="rgb(223,104,12)" fg:x="738" fg:w="9"/><text x="58.9612%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="58.9499%" y="485" width="0.4773%" height="15" fill="rgb(225,29,49)" fg:x="741" fg:w="6"/><text x="59.1999%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="58.9499%" y="469" width="0.4773%" height="15" fill="rgb(253,77,7)" fg:x="741" fg:w="6"/><text x="59.1999%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="58.9499%" y="453" width="0.4773%" height="15" fill="rgb(213,81,26)" fg:x="741" fg:w="6"/><text x="59.1999%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="58.9499%" y="437" width="0.4773%" height="15" fill="rgb(246,126,6)" fg:x="741" fg:w="6"/><text x="59.1999%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="58.9499%" y="421" width="0.4773%" height="15" fill="rgb(232,186,21)" fg:x="741" fg:w="6"/><text x="59.1999%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="58.9499%" y="405" width="0.4773%" height="15" fill="rgb(215,126,18)" fg:x="741" fg:w="6"/><text x="59.1999%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="59.0294%" y="389" width="0.3978%" height="15" fill="rgb(210,47,5)" fg:x="742" fg:w="5"/><text x="59.2794%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="59.1090%" y="373" width="0.3182%" height="15" fill="rgb(240,70,6)" fg:x="743" fg:w="4"/><text x="59.3590%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.3477%" y="357" width="0.0796%" height="15" fill="rgb(230,99,49)" fg:x="746" fg:w="1"/><text x="59.5977%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.3477%" y="341" width="0.0796%" height="15" fill="rgb(212,57,36)" fg:x="746" fg:w="1"/><text x="59.5977%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="59.4272%" y="565" width="0.1591%" height="15" fill="rgb(243,14,50)" fg:x="747" fg:w="2"/><text x="59.6772%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.4272%" y="549" width="0.1591%" height="15" fill="rgb(240,2,53)" fg:x="747" fg:w="2"/><text x="59.6772%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.4272%" y="533" width="0.1591%" height="15" fill="rgb(208,47,53)" fg:x="747" fg:w="2"/><text x="59.6772%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.5068%" y="517" width="0.0796%" height="15" fill="rgb(235,186,39)" fg:x="748" fg:w="1"/><text x="59.7568%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.5068%" y="501" width="0.0796%" height="15" fill="rgb(212,35,47)" fg:x="748" fg:w="1"/><text x="59.7568%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.5068%" y="485" width="0.0796%" height="15" fill="rgb(248,59,37)" fg:x="748" fg:w="1"/><text x="59.7568%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.5068%" y="469" width="0.0796%" height="15" fill="rgb(223,186,16)" fg:x="748" fg:w="1"/><text x="59.7568%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5068%" y="453" width="0.0796%" height="15" fill="rgb(215,106,35)" fg:x="748" fg:w="1"/><text x="59.7568%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.5068%" y="437" width="0.0796%" height="15" fill="rgb(217,141,29)" fg:x="748" fg:w="1"/><text x="59.7568%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.5068%" y="421" width="0.0796%" height="15" fill="rgb(221,227,46)" fg:x="748" fg:w="1"/><text x="59.7568%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.5068%" y="405" width="0.0796%" height="15" fill="rgb(212,36,41)" fg:x="748" fg:w="1"/><text x="59.7568%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.5068%" y="389" width="0.0796%" height="15" fill="rgb(222,35,11)" fg:x="748" fg:w="1"/><text x="59.7568%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.5068%" y="373" width="0.0796%" height="15" fill="rgb(232,165,33)" fg:x="748" fg:w="1"/><text x="59.7568%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.7454%" y="453" width="0.0796%" height="15" fill="rgb(211,38,20)" fg:x="751" fg:w="1"/><text x="59.9954%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="59.5863%" y="533" width="0.3182%" height="15" fill="rgb(230,7,36)" fg:x="749" fg:w="4"/><text x="59.8363%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (4 samples, 0.32%)</title><rect x="59.5863%" y="517" width="0.3182%" height="15" fill="rgb(213,128,35)" fg:x="749" fg:w="4"/><text x="59.8363%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="59.5863%" y="501" width="0.3182%" height="15" fill="rgb(218,11,14)" fg:x="749" fg:w="4"/><text x="59.8363%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="59.5863%" y="485" width="0.3182%" height="15" fill="rgb(249,105,7)" fg:x="749" fg:w="4"/><text x="59.8363%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="59.6659%" y="469" width="0.2387%" height="15" fill="rgb(226,125,21)" fg:x="750" fg:w="3"/><text x="59.9159%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="59.8250%" y="453" width="0.0796%" height="15" fill="rgb(239,90,47)" fg:x="752" fg:w="1"/><text x="60.0750%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="59.8250%" y="437" width="0.0796%" height="15" fill="rgb(226,19,1)" fg:x="752" fg:w="1"/><text x="60.0750%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="59.8250%" y="421" width="0.0796%" height="15" fill="rgb(205,117,40)" fg:x="752" fg:w="1"/><text x="60.0750%" y="431.50"></text></g><g><title>plugins_core::library::actions::reply_done (5 samples, 0.40%)</title><rect x="59.5863%" y="565" width="0.3978%" height="15" fill="rgb(234,6,54)" fg:x="749" fg:w="5"/><text x="59.8363%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (5 samples, 0.40%)</title><rect x="59.5863%" y="549" width="0.3978%" height="15" fill="rgb(239,73,32)" fg:x="749" fg:w="5"/><text x="59.8363%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="59.9045%" y="533" width="0.0796%" height="15" fill="rgb(226,197,12)" fg:x="753" fg:w="1"/><text x="60.1545%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9841%" y="549" width="0.0796%" height="15" fill="rgb(226,53,42)" fg:x="754" fg:w="1"/><text x="60.2341%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.9841%" y="533" width="0.0796%" height="15" fill="rgb(234,99,30)" fg:x="754" fg:w="1"/><text x="60.2341%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="60.0636%" y="549" width="0.0796%" height="15" fill="rgb(237,175,49)" fg:x="755" fg:w="1"/><text x="60.3136%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.0636%" y="533" width="0.0796%" height="15" fill="rgb(228,75,42)" fg:x="755" fg:w="1"/><text x="60.3136%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.0636%" y="517" width="0.0796%" height="15" fill="rgb(223,162,48)" fg:x="755" fg:w="1"/><text x="60.3136%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2228%" y="517" width="0.0796%" height="15" fill="rgb(221,192,29)" fg:x="757" fg:w="1"/><text x="60.4728%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.2228%" y="501" width="0.0796%" height="15" fill="rgb(249,150,41)" fg:x="757" fg:w="1"/><text x="60.4728%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.2228%" y="485" width="0.0796%" height="15" fill="rgb(243,107,34)" fg:x="757" fg:w="1"/><text x="60.4728%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.2228%" y="469" width="0.0796%" height="15" fill="rgb(214,227,11)" fg:x="757" fg:w="1"/><text x="60.4728%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.2228%" y="453" width="0.0796%" height="15" fill="rgb(209,37,13)" fg:x="757" fg:w="1"/><text x="60.4728%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2228%" y="437" width="0.0796%" height="15" fill="rgb(249,124,20)" fg:x="757" fg:w="1"/><text x="60.4728%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.2228%" y="421" width="0.0796%" height="15" fill="rgb(228,28,2)" fg:x="757" fg:w="1"/><text x="60.4728%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.2228%" y="405" width="0.0796%" height="15" fill="rgb(244,55,1)" fg:x="757" fg:w="1"/><text x="60.4728%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.2228%" y="389" width="0.0796%" height="15" fill="rgb(216,26,19)" fg:x="757" fg:w="1"/><text x="60.4728%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.2228%" y="373" width="0.0796%" height="15" fill="rgb(209,162,10)" fg:x="757" fg:w="1"/><text x="60.4728%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.2228%" y="357" width="0.0796%" height="15" fill="rgb(235,168,42)" fg:x="757" fg:w="1"/><text x="60.4728%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3819%" y="469" width="0.0796%" height="15" fill="rgb(240,24,14)" fg:x="759" fg:w="1"/><text x="60.6319%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3819%" y="453" width="0.0796%" height="15" fill="rgb(224,107,11)" fg:x="759" fg:w="1"/><text x="60.6319%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.3819%" y="437" width="0.0796%" height="15" fill="rgb(226,48,4)" fg:x="759" fg:w="1"/><text x="60.6319%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="60.3023%" y="517" width="0.4773%" height="15" fill="rgb(254,31,21)" fg:x="758" fg:w="6"/><text x="60.5523%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="60.3023%" y="501" width="0.4773%" height="15" fill="rgb(205,156,19)" fg:x="758" fg:w="6"/><text x="60.5523%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="60.3023%" y="485" width="0.4773%" height="15" fill="rgb(216,73,31)" fg:x="758" fg:w="6"/><text x="60.5523%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.4614%" y="469" width="0.3182%" height="15" fill="rgb(237,88,35)" fg:x="760" fg:w="4"/><text x="60.7114%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4614%" y="453" width="0.3182%" height="15" fill="rgb(254,79,48)" fg:x="760" fg:w="4"/><text x="60.7114%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.4614%" y="437" width="0.3182%" height="15" fill="rgb(211,66,36)" fg:x="760" fg:w="4"/><text x="60.7114%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4614%" y="421" width="0.3182%" height="15" fill="rgb(222,13,1)" fg:x="760" fg:w="4"/><text x="60.7114%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="60.4614%" y="405" width="0.3182%" height="15" fill="rgb(221,216,41)" fg:x="760" fg:w="4"/><text x="60.7114%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4614%" y="389" width="0.3182%" height="15" fill="rgb(220,10,17)" fg:x="760" fg:w="4"/><text x="60.7114%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="60.4614%" y="373" width="0.3182%" height="15" fill="rgb(242,43,35)" fg:x="760" fg:w="4"/><text x="60.7114%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="60.4614%" y="357" width="0.3182%" height="15" fill="rgb(216,182,18)" fg:x="760" fg:w="4"/><text x="60.7114%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.6205%" y="341" width="0.1591%" height="15" fill="rgb(246,217,36)" fg:x="762" fg:w="2"/><text x="60.8705%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.6205%" y="325" width="0.1591%" height="15" fill="rgb(208,107,8)" fg:x="762" fg:w="2"/><text x="60.8705%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="60.6205%" y="309" width="0.1591%" height="15" fill="rgb(208,189,15)" fg:x="762" fg:w="2"/><text x="60.8705%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.7001%" y="293" width="0.0796%" height="15" fill="rgb(211,70,9)" fg:x="763" fg:w="1"/><text x="60.9501%" y="303.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="60.1432%" y="549" width="0.7160%" height="15" fill="rgb(217,95,34)" fg:x="756" fg:w="9"/><text x="60.3932%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="60.2228%" y="533" width="0.6364%" height="15" fill="rgb(240,223,2)" fg:x="757" fg:w="8"/><text x="60.4728%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="60.7796%" y="517" width="0.0796%" height="15" fill="rgb(231,18,6)" fg:x="764" fg:w="1"/><text x="61.0296%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="60.7796%" y="501" width="0.0796%" height="15" fill="rgb(254,44,46)" fg:x="764" fg:w="1"/><text x="61.0296%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="60.7796%" y="485" width="0.0796%" height="15" fill="rgb(223,222,46)" fg:x="764" fg:w="1"/><text x="61.0296%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.7796%" y="469" width="0.0796%" height="15" fill="rgb(229,163,13)" fg:x="764" fg:w="1"/><text x="61.0296%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="60.8592%" y="517" width="0.0796%" height="15" fill="rgb(220,208,13)" fg:x="765" fg:w="1"/><text x="61.1092%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="60.8592%" y="501" width="0.0796%" height="15" fill="rgb(244,28,53)" fg:x="765" fg:w="1"/><text x="61.1092%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="60.8592%" y="485" width="0.0796%" height="15" fill="rgb(243,138,0)" fg:x="765" fg:w="1"/><text x="61.1092%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="60.8592%" y="469" width="0.0796%" height="15" fill="rgb(209,90,49)" fg:x="765" fg:w="1"/><text x="61.1092%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="60.8592%" y="453" width="0.0796%" height="15" fill="rgb(247,114,18)" fg:x="765" fg:w="1"/><text x="61.1092%" y="463.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="60.8592%" y="437" width="0.0796%" height="15" fill="rgb(221,14,46)" fg:x="765" fg:w="1"/><text x="61.1092%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.9387%" y="517" width="0.0796%" height="15" fill="rgb(215,29,23)" fg:x="766" fg:w="1"/><text x="61.1887%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="60.9387%" y="501" width="0.0796%" height="15" fill="rgb(241,37,25)" fg:x="766" fg:w="1"/><text x="61.1887%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="60.8592%" y="549" width="0.2387%" height="15" fill="rgb(225,17,22)" fg:x="765" fg:w="3"/><text x="61.1092%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="60.8592%" y="533" width="0.2387%" height="15" fill="rgb(241,182,7)" fg:x="765" fg:w="3"/><text x="61.1092%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0183%" y="517" width="0.0796%" height="15" fill="rgb(248,125,10)" fg:x="767" fg:w="1"/><text x="61.2683%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0183%" y="501" width="0.0796%" height="15" fill="rgb(250,3,37)" fg:x="767" fg:w="1"/><text x="61.2683%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.0183%" y="485" width="0.0796%" height="15" fill="rgb(237,102,7)" fg:x="767" fg:w="1"/><text x="61.2683%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="61.0183%" y="469" width="0.0796%" height="15" fill="rgb(235,5,5)" fg:x="767" fg:w="1"/><text x="61.2683%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="61.0183%" y="453" width="0.0796%" height="15" fill="rgb(249,147,38)" fg:x="767" fg:w="1"/><text x="61.2683%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.0183%" y="437" width="0.0796%" height="15" fill="rgb(221,25,18)" fg:x="767" fg:w="1"/><text x="61.2683%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.0183%" y="421" width="0.0796%" height="15" fill="rgb(211,88,9)" fg:x="767" fg:w="1"/><text x="61.2683%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.0979%" y="517" width="0.1591%" height="15" fill="rgb(219,62,54)" fg:x="768" fg:w="2"/><text x="61.3479%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.0979%" y="501" width="0.1591%" height="15" fill="rgb(243,133,46)" fg:x="768" fg:w="2"/><text x="61.3479%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.0979%" y="485" width="0.1591%" height="15" fill="rgb(214,168,53)" fg:x="768" fg:w="2"/><text x="61.3479%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1774%" y="469" width="0.0796%" height="15" fill="rgb(250,58,7)" fg:x="769" fg:w="1"/><text x="61.4274%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.1774%" y="453" width="0.0796%" height="15" fill="rgb(249,131,5)" fg:x="769" fg:w="1"/><text x="61.4274%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.1774%" y="437" width="0.0796%" height="15" fill="rgb(234,40,44)" fg:x="769" fg:w="1"/><text x="61.4274%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.1774%" y="421" width="0.0796%" height="15" fill="rgb(225,188,42)" fg:x="769" fg:w="1"/><text x="61.4274%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.1774%" y="405" width="0.0796%" height="15" fill="rgb(218,201,51)" fg:x="769" fg:w="1"/><text x="61.4274%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.1774%" y="389" width="0.0796%" height="15" fill="rgb(214,209,38)" fg:x="769" fg:w="1"/><text x="61.4274%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.1774%" y="373" width="0.0796%" height="15" fill="rgb(217,0,20)" fg:x="769" fg:w="1"/><text x="61.4274%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.2570%" y="485" width="0.0796%" height="15" fill="rgb(248,183,46)" fg:x="770" fg:w="1"/><text x="61.5070%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="61.2570%" y="517" width="0.2387%" height="15" fill="rgb(208,99,41)" fg:x="770" fg:w="3"/><text x="61.5070%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="61.2570%" y="501" width="0.2387%" height="15" fill="rgb(210,189,49)" fg:x="770" fg:w="3"/><text x="61.5070%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="61.3365%" y="485" width="0.1591%" height="15" fill="rgb(239,191,42)" fg:x="771" fg:w="2"/><text x="61.5865%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="61.3365%" y="469" width="0.1591%" height="15" fill="rgb(240,138,26)" fg:x="771" fg:w="2"/><text x="61.5865%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="61.3365%" y="453" width="0.1591%" height="15" fill="rgb(234,45,22)" fg:x="771" fg:w="2"/><text x="61.5865%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="61.3365%" y="437" width="0.1591%" height="15" fill="rgb(228,43,35)" fg:x="771" fg:w="2"/><text x="61.5865%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.4161%" y="421" width="0.0796%" height="15" fill="rgb(215,201,54)" fg:x="772" fg:w="1"/><text x="61.6661%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.5752%" y="485" width="0.1591%" height="15" fill="rgb(209,60,31)" fg:x="774" fg:w="2"/><text x="61.8252%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.72%)</title><rect x="61.0979%" y="549" width="0.7160%" height="15" fill="rgb(232,66,12)" fg:x="768" fg:w="9"/><text x="61.3479%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.72%)</title><rect x="61.0979%" y="533" width="0.7160%" height="15" fill="rgb(244,78,24)" fg:x="768" fg:w="9"/><text x="61.3479%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="61.4956%" y="517" width="0.3182%" height="15" fill="rgb(249,65,27)" fg:x="773" fg:w="4"/><text x="61.7456%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="61.5752%" y="501" width="0.2387%" height="15" fill="rgb(208,218,19)" fg:x="774" fg:w="3"/><text x="61.8252%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="61.7343%" y="485" width="0.0796%" height="15" fill="rgb(212,181,38)" fg:x="776" fg:w="1"/><text x="61.9843%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="61.7343%" y="469" width="0.0796%" height="15" fill="rgb(207,118,40)" fg:x="776" fg:w="1"/><text x="61.9843%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="61.7343%" y="453" width="0.0796%" height="15" fill="rgb(207,126,20)" fg:x="776" fg:w="1"/><text x="61.9843%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7343%" y="437" width="0.0796%" height="15" fill="rgb(232,15,46)" fg:x="776" fg:w="1"/><text x="61.9843%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="61.8138%" y="533" width="0.0796%" height="15" fill="rgb(254,33,30)" fg:x="777" fg:w="1"/><text x="62.0638%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.8138%" y="517" width="0.0796%" height="15" fill="rgb(233,92,20)" fg:x="777" fg:w="1"/><text x="62.0638%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="61.8138%" y="501" width="0.0796%" height="15" fill="rgb(225,195,54)" fg:x="777" fg:w="1"/><text x="62.0638%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="61.8138%" y="485" width="0.0796%" height="15" fill="rgb(208,196,7)" fg:x="777" fg:w="1"/><text x="62.0638%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="61.8138%" y="469" width="0.0796%" height="15" fill="rgb(253,19,35)" fg:x="777" fg:w="1"/><text x="62.0638%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="61.8138%" y="453" width="0.0796%" height="15" fill="rgb(228,180,1)" fg:x="777" fg:w="1"/><text x="62.0638%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="61.8138%" y="437" width="0.0796%" height="15" fill="rgb(248,35,18)" fg:x="777" fg:w="1"/><text x="62.0638%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="61.8934%" y="533" width="0.0796%" height="15" fill="rgb(220,34,8)" fg:x="778" fg:w="1"/><text x="62.1434%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="61.8934%" y="517" width="0.0796%" height="15" fill="rgb(219,223,17)" fg:x="778" fg:w="1"/><text x="62.1434%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="61.9730%" y="485" width="0.0796%" height="15" fill="rgb(223,183,15)" fg:x="779" fg:w="1"/><text x="62.2230%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.9730%" y="469" width="0.0796%" height="15" fill="rgb(253,184,45)" fg:x="779" fg:w="1"/><text x="62.2230%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.1321%" y="389" width="0.0796%" height="15" fill="rgb(207,97,29)" fg:x="781" fg:w="1"/><text x="62.3821%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1321%" y="453" width="0.1591%" height="15" fill="rgb(250,170,27)" fg:x="781" fg:w="2"/><text x="62.3821%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1321%" y="437" width="0.1591%" height="15" fill="rgb(206,178,17)" fg:x="781" fg:w="2"/><text x="62.3821%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1321%" y="421" width="0.1591%" height="15" fill="rgb(213,92,46)" fg:x="781" fg:w="2"/><text x="62.3821%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.1321%" y="405" width="0.1591%" height="15" fill="rgb(223,114,30)" fg:x="781" fg:w="2"/><text x="62.3821%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2116%" y="389" width="0.0796%" height="15" fill="rgb(207,228,9)" fg:x="782" fg:w="1"/><text x="62.4616%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.2912%" y="453" width="0.0796%" height="15" fill="rgb(205,70,25)" fg:x="783" fg:w="1"/><text x="62.5412%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.2912%" y="437" width="0.0796%" height="15" fill="rgb(252,45,30)" fg:x="783" fg:w="1"/><text x="62.5412%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.2912%" y="421" width="0.0796%" height="15" fill="rgb(219,185,54)" fg:x="783" fg:w="1"/><text x="62.5412%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2912%" y="405" width="0.0796%" height="15" fill="rgb(219,208,54)" fg:x="783" fg:w="1"/><text x="62.5412%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="61.9730%" y="501" width="0.6364%" height="15" fill="rgb(207,164,54)" fg:x="779" fg:w="8"/><text x="62.2230%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="62.0525%" y="485" width="0.5569%" height="15" fill="rgb(240,155,22)" fg:x="780" fg:w="7"/><text x="62.3025%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="62.0525%" y="469" width="0.5569%" height="15" fill="rgb(217,127,14)" fg:x="780" fg:w="7"/><text x="62.3025%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.3707%" y="453" width="0.2387%" height="15" fill="rgb(232,179,42)" fg:x="784" fg:w="3"/><text x="62.6207%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.3707%" y="437" width="0.2387%" height="15" fill="rgb(247,55,45)" fg:x="784" fg:w="3"/><text x="62.6207%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.3707%" y="421" width="0.2387%" height="15" fill="rgb(217,11,18)" fg:x="784" fg:w="3"/><text x="62.6207%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.3707%" y="405" width="0.2387%" height="15" fill="rgb(227,127,4)" fg:x="784" fg:w="3"/><text x="62.6207%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="62.3707%" y="389" width="0.2387%" height="15" fill="rgb(217,97,45)" fg:x="784" fg:w="3"/><text x="62.6207%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.3707%" y="373" width="0.2387%" height="15" fill="rgb(250,135,20)" fg:x="784" fg:w="3"/><text x="62.6207%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.3707%" y="357" width="0.2387%" height="15" fill="rgb(224,213,26)" fg:x="784" fg:w="3"/><text x="62.6207%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.3707%" y="341" width="0.2387%" height="15" fill="rgb(237,86,25)" fg:x="784" fg:w="3"/><text x="62.6207%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.4503%" y="325" width="0.1591%" height="15" fill="rgb(251,105,18)" fg:x="785" fg:w="2"/><text x="62.7003%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.7685%" y="357" width="0.0796%" height="15" fill="rgb(246,124,25)" fg:x="789" fg:w="1"/><text x="63.0185%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (16 samples, 1.27%)</title><rect x="61.8138%" y="549" width="1.2729%" height="15" fill="rgb(210,90,3)" fg:x="777" fg:w="16"/><text x="62.0638%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.11%)</title><rect x="61.9730%" y="533" width="1.1138%" height="15" fill="rgb(249,40,31)" fg:x="779" fg:w="14"/><text x="62.2230%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (14 samples, 1.11%)</title><rect x="61.9730%" y="517" width="1.1138%" height="15" fill="rgb(231,228,1)" fg:x="779" fg:w="14"/><text x="62.2230%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="62.6094%" y="501" width="0.4773%" height="15" fill="rgb(242,25,49)" fg:x="787" fg:w="6"/><text x="62.8594%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="62.6094%" y="485" width="0.4773%" height="15" fill="rgb(224,142,22)" fg:x="787" fg:w="6"/><text x="62.8594%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="62.6094%" y="469" width="0.4773%" height="15" fill="rgb(228,106,29)" fg:x="787" fg:w="6"/><text x="62.8594%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.6889%" y="453" width="0.3978%" height="15" fill="rgb(207,2,15)" fg:x="788" fg:w="5"/><text x="62.9389%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.6889%" y="437" width="0.3978%" height="15" fill="rgb(231,43,37)" fg:x="788" fg:w="5"/><text x="62.9389%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="62.7685%" y="421" width="0.3182%" height="15" fill="rgb(245,193,12)" fg:x="789" fg:w="4"/><text x="63.0185%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.7685%" y="405" width="0.3182%" height="15" fill="rgb(246,9,49)" fg:x="789" fg:w="4"/><text x="63.0185%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="62.7685%" y="389" width="0.3182%" height="15" fill="rgb(218,50,36)" fg:x="789" fg:w="4"/><text x="63.0185%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.7685%" y="373" width="0.3182%" height="15" fill="rgb(225,206,16)" fg:x="789" fg:w="4"/><text x="63.0185%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.8481%" y="357" width="0.2387%" height="15" fill="rgb(242,52,5)" fg:x="790" fg:w="3"/><text x="63.0981%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.8481%" y="341" width="0.2387%" height="15" fill="rgb(217,158,11)" fg:x="790" fg:w="3"/><text x="63.0981%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2458%" y="533" width="0.0796%" height="15" fill="rgb(242,144,22)" fg:x="795" fg:w="1"/><text x="63.4958%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.2458%" y="517" width="0.0796%" height="15" fill="rgb(236,191,3)" fg:x="795" fg:w="1"/><text x="63.4958%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.2458%" y="501" width="0.0796%" height="15" fill="rgb(241,22,19)" fg:x="795" fg:w="1"/><text x="63.4958%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.2458%" y="485" width="0.0796%" height="15" fill="rgb(205,217,44)" fg:x="795" fg:w="1"/><text x="63.4958%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.2458%" y="469" width="0.0796%" height="15" fill="rgb(231,53,3)" fg:x="795" fg:w="1"/><text x="63.4958%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2458%" y="453" width="0.0796%" height="15" fill="rgb(207,13,22)" fg:x="795" fg:w="1"/><text x="63.4958%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.2458%" y="437" width="0.0796%" height="15" fill="rgb(234,62,29)" fg:x="795" fg:w="1"/><text x="63.4958%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.2458%" y="421" width="0.0796%" height="15" fill="rgb(226,175,44)" fg:x="795" fg:w="1"/><text x="63.4958%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.2458%" y="405" width="0.0796%" height="15" fill="rgb(239,177,6)" fg:x="795" fg:w="1"/><text x="63.4958%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.2458%" y="389" width="0.0796%" height="15" fill="rgb(249,125,15)" fg:x="795" fg:w="1"/><text x="63.4958%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.2458%" y="373" width="0.0796%" height="15" fill="rgb(210,201,5)" fg:x="795" fg:w="1"/><text x="63.4958%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (2 samples, 0.16%)</title><rect x="63.3254%" y="533" width="0.1591%" height="15" fill="rgb(210,14,6)" fg:x="796" fg:w="2"/><text x="63.5754%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="63.3254%" y="517" width="0.1591%" height="15" fill="rgb(239,141,15)" fg:x="796" fg:w="2"/><text x="63.5754%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4049%" y="501" width="0.0796%" height="15" fill="rgb(235,75,9)" fg:x="797" fg:w="1"/><text x="63.6549%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (6 samples, 0.48%)</title><rect x="63.0867%" y="549" width="0.4773%" height="15" fill="rgb(246,122,37)" fg:x="793" fg:w="6"/><text x="63.3367%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="63.4845%" y="533" width="0.0796%" height="15" fill="rgb(235,75,52)" fg:x="798" fg:w="1"/><text x="63.7345%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4845%" y="517" width="0.0796%" height="15" fill="rgb(235,179,12)" fg:x="798" fg:w="1"/><text x="63.7345%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4845%" y="501" width="0.0796%" height="15" fill="rgb(223,20,9)" fg:x="798" fg:w="1"/><text x="63.7345%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4845%" y="485" width="0.0796%" height="15" fill="rgb(223,75,22)" fg:x="798" fg:w="1"/><text x="63.7345%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4845%" y="469" width="0.0796%" height="15" fill="rgb(248,148,18)" fg:x="798" fg:w="1"/><text x="63.7345%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4845%" y="453" width="0.0796%" height="15" fill="rgb(225,103,8)" fg:x="798" fg:w="1"/><text x="63.7345%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4845%" y="437" width="0.0796%" height="15" fill="rgb(237,168,17)" fg:x="798" fg:w="1"/><text x="63.7345%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4845%" y="421" width="0.0796%" height="15" fill="rgb(215,192,38)" fg:x="798" fg:w="1"/><text x="63.7345%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.4845%" y="405" width="0.0796%" height="15" fill="rgb(237,69,28)" fg:x="798" fg:w="1"/><text x="63.7345%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.4845%" y="389" width="0.0796%" height="15" fill="rgb(254,167,32)" fg:x="798" fg:w="1"/><text x="63.7345%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.4845%" y="373" width="0.0796%" height="15" fill="rgb(250,81,30)" fg:x="798" fg:w="1"/><text x="63.7345%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.4845%" y="357" width="0.0796%" height="15" fill="rgb(240,68,52)" fg:x="798" fg:w="1"/><text x="63.7345%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.4845%" y="341" width="0.0796%" height="15" fill="rgb(205,97,42)" fg:x="798" fg:w="1"/><text x="63.7345%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.4845%" y="325" width="0.0796%" height="15" fill="rgb(217,10,22)" fg:x="798" fg:w="1"/><text x="63.7345%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.5640%" y="501" width="0.0796%" height="15" fill="rgb(216,21,26)" fg:x="799" fg:w="1"/><text x="63.8140%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6436%" y="501" width="0.0796%" height="15" fill="rgb(239,0,36)" fg:x="800" fg:w="1"/><text x="63.8936%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6436%" y="485" width="0.0796%" height="15" fill="rgb(216,162,28)" fg:x="800" fg:w="1"/><text x="63.8936%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.6436%" y="469" width="0.0796%" height="15" fill="rgb(246,22,39)" fg:x="800" fg:w="1"/><text x="63.8936%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6436%" y="453" width="0.0796%" height="15" fill="rgb(222,84,49)" fg:x="800" fg:w="1"/><text x="63.8936%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.6436%" y="437" width="0.0796%" height="15" fill="rgb(250,38,34)" fg:x="800" fg:w="1"/><text x="63.8936%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.6436%" y="421" width="0.0796%" height="15" fill="rgb(236,0,38)" fg:x="800" fg:w="1"/><text x="63.8936%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.6436%" y="405" width="0.0796%" height="15" fill="rgb(237,205,54)" fg:x="800" fg:w="1"/><text x="63.8936%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.6436%" y="389" width="0.0796%" height="15" fill="rgb(221,80,35)" fg:x="800" fg:w="1"/><text x="63.8936%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.6436%" y="373" width="0.0796%" height="15" fill="rgb(237,204,22)" fg:x="800" fg:w="1"/><text x="63.8936%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.6436%" y="357" width="0.0796%" height="15" fill="rgb(213,108,15)" fg:x="800" fg:w="1"/><text x="63.8936%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="63.5640%" y="533" width="0.2387%" height="15" fill="rgb(251,187,9)" fg:x="799" fg:w="3"/><text x="63.8140%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.5640%" y="517" width="0.2387%" height="15" fill="rgb(250,61,9)" fg:x="799" fg:w="3"/><text x="63.8140%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.7232%" y="501" width="0.0796%" height="15" fill="rgb(230,131,33)" fg:x="801" fg:w="1"/><text x="63.9732%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.7232%" y="485" width="0.0796%" height="15" fill="rgb(239,117,11)" fg:x="801" fg:w="1"/><text x="63.9732%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8027%" y="517" width="0.0796%" height="15" fill="rgb(222,112,44)" fg:x="802" fg:w="1"/><text x="64.0527%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.8027%" y="501" width="0.0796%" height="15" fill="rgb(251,33,25)" fg:x="802" fg:w="1"/><text x="64.0527%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8027%" y="485" width="0.0796%" height="15" fill="rgb(208,171,34)" fg:x="802" fg:w="1"/><text x="64.0527%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.8027%" y="469" width="0.0796%" height="15" fill="rgb(250,166,54)" fg:x="802" fg:w="1"/><text x="64.0527%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.8027%" y="453" width="0.0796%" height="15" fill="rgb(212,148,2)" fg:x="802" fg:w="1"/><text x="64.0527%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.8027%" y="437" width="0.0796%" height="15" fill="rgb(224,92,39)" fg:x="802" fg:w="1"/><text x="64.0527%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.8027%" y="421" width="0.0796%" height="15" fill="rgb(250,28,16)" fg:x="802" fg:w="1"/><text x="64.0527%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.8027%" y="405" width="0.0796%" height="15" fill="rgb(227,128,26)" fg:x="802" fg:w="1"/><text x="64.0527%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.8027%" y="389" width="0.0796%" height="15" fill="rgb(248,66,7)" fg:x="802" fg:w="1"/><text x="64.0527%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.8027%" y="373" width="0.0796%" height="15" fill="rgb(215,124,51)" fg:x="802" fg:w="1"/><text x="64.0527%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.8027%" y="357" width="0.0796%" height="15" fill="rgb(207,91,1)" fg:x="802" fg:w="1"/><text x="64.0527%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.8027%" y="341" width="0.0796%" height="15" fill="rgb(217,207,38)" fg:x="802" fg:w="1"/><text x="64.0527%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.8027%" y="325" width="0.0796%" height="15" fill="rgb(240,118,9)" fg:x="802" fg:w="1"/><text x="64.0527%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8027%" y="309" width="0.0796%" height="15" fill="rgb(224,147,4)" fg:x="802" fg:w="1"/><text x="64.0527%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.8823%" y="517" width="0.0796%" height="15" fill="rgb(205,105,13)" fg:x="803" fg:w="1"/><text x="64.1323%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (151 samples, 12.01%)</title><rect x="52.0286%" y="581" width="12.0127%" height="15" fill="rgb(251,78,39)" fg:x="654" fg:w="151"/><text x="52.2786%" y="591.50">&lt;plugins_core::car..</text></g><g><title>plugins_core::location::change_location (51 samples, 4.06%)</title><rect x="59.9841%" y="565" width="4.0573%" height="15" fill="rgb(225,60,44)" fg:x="754" fg:w="51"/><text x="60.2341%" y="575.50">plug..</text></g><g><title>plugins_core::location::Location::set (6 samples, 0.48%)</title><rect x="63.5640%" y="549" width="0.4773%" height="15" fill="rgb(221,228,40)" fg:x="799" fg:w="6"/><text x="63.8140%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="63.8027%" y="533" width="0.2387%" height="15" fill="rgb(215,104,30)" fg:x="802" fg:w="3"/><text x="64.0527%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="63.9618%" y="517" width="0.0796%" height="15" fill="rgb(206,183,3)" fg:x="804" fg:w="1"/><text x="64.2118%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.9618%" y="501" width="0.0796%" height="15" fill="rgb(236,199,25)" fg:x="804" fg:w="1"/><text x="64.2118%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="63.9618%" y="485" width="0.0796%" height="15" fill="rgb(230,107,29)" fg:x="804" fg:w="1"/><text x="64.2118%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="63.9618%" y="469" width="0.0796%" height="15" fill="rgb(216,12,37)" fg:x="804" fg:w="1"/><text x="64.2118%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.0414%" y="437" width="0.0796%" height="15" fill="rgb(238,165,28)" fg:x="805" fg:w="1"/><text x="64.2914%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (2 samples, 0.16%)</title><rect x="64.0414%" y="549" width="0.1591%" height="15" fill="rgb(226,173,5)" fg:x="805" fg:w="2"/><text x="64.2914%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="64.0414%" y="533" width="0.1591%" height="15" fill="rgb(229,9,37)" fg:x="805" fg:w="2"/><text x="64.2914%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="64.0414%" y="517" width="0.1591%" height="15" fill="rgb(252,194,43)" fg:x="805" fg:w="2"/><text x="64.2914%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0414%" y="501" width="0.1591%" height="15" fill="rgb(215,58,45)" fg:x="805" fg:w="2"/><text x="64.2914%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0414%" y="485" width="0.1591%" height="15" fill="rgb(218,34,51)" fg:x="805" fg:w="2"/><text x="64.2914%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0414%" y="469" width="0.1591%" height="15" fill="rgb(230,104,27)" fg:x="805" fg:w="2"/><text x="64.2914%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0414%" y="453" width="0.1591%" height="15" fill="rgb(250,9,6)" fg:x="805" fg:w="2"/><text x="64.2914%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="64.1209%" y="437" width="0.0796%" height="15" fill="rgb(245,10,16)" fg:x="806" fg:w="1"/><text x="64.3709%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.1209%" y="421" width="0.0796%" height="15" fill="rgb(227,182,27)" fg:x="806" fg:w="1"/><text x="64.3709%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.1209%" y="405" width="0.0796%" height="15" fill="rgb(225,91,37)" fg:x="806" fg:w="1"/><text x="64.3709%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2005%" y="501" width="0.0796%" height="15" fill="rgb(240,16,41)" fg:x="807" fg:w="1"/><text x="64.4505%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2005%" y="485" width="0.0796%" height="15" fill="rgb(214,108,54)" fg:x="807" fg:w="1"/><text x="64.4505%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2005%" y="469" width="0.0796%" height="15" fill="rgb(253,65,28)" fg:x="807" fg:w="1"/><text x="64.4505%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2005%" y="453" width="0.0796%" height="15" fill="rgb(246,105,4)" fg:x="807" fg:w="1"/><text x="64.4505%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2005%" y="437" width="0.0796%" height="15" fill="rgb(223,163,37)" fg:x="807" fg:w="1"/><text x="64.4505%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2005%" y="421" width="0.0796%" height="15" fill="rgb(206,202,31)" fg:x="807" fg:w="1"/><text x="64.4505%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2005%" y="405" width="0.0796%" height="15" fill="rgb(241,202,54)" fg:x="807" fg:w="1"/><text x="64.4505%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2005%" y="389" width="0.0796%" height="15" fill="rgb(220,22,45)" fg:x="807" fg:w="1"/><text x="64.4505%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2005%" y="373" width="0.0796%" height="15" fill="rgb(234,215,40)" fg:x="807" fg:w="1"/><text x="64.4505%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2005%" y="357" width="0.0796%" height="15" fill="rgb(220,3,5)" fg:x="807" fg:w="1"/><text x="64.4505%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2005%" y="341" width="0.0796%" height="15" fill="rgb(210,8,15)" fg:x="807" fg:w="1"/><text x="64.4505%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2005%" y="325" width="0.0796%" height="15" fill="rgb(218,113,45)" fg:x="807" fg:w="1"/><text x="64.4505%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2005%" y="309" width="0.0796%" height="15" fill="rgb(249,208,10)" fg:x="807" fg:w="1"/><text x="64.4505%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2005%" y="293" width="0.0796%" height="15" fill="rgb(250,145,17)" fg:x="807" fg:w="1"/><text x="64.4505%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2005%" y="277" width="0.0796%" height="15" fill="rgb(254,24,13)" fg:x="807" fg:w="1"/><text x="64.4505%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2005%" y="261" width="0.0796%" height="15" fill="rgb(244,36,15)" fg:x="807" fg:w="1"/><text x="64.4505%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.2800%" y="501" width="0.0796%" height="15" fill="rgb(228,168,26)" fg:x="808" fg:w="1"/><text x="64.5300%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.2800%" y="485" width="0.0796%" height="15" fill="rgb(214,145,10)" fg:x="808" fg:w="1"/><text x="64.5300%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3596%" y="501" width="0.0796%" height="15" fill="rgb(232,59,25)" fg:x="809" fg:w="1"/><text x="64.6096%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.3596%" y="485" width="0.0796%" height="15" fill="rgb(254,181,2)" fg:x="809" fg:w="1"/><text x="64.6096%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3596%" y="469" width="0.0796%" height="15" fill="rgb(221,139,49)" fg:x="809" fg:w="1"/><text x="64.6096%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3596%" y="453" width="0.0796%" height="15" fill="rgb(235,84,36)" fg:x="809" fg:w="1"/><text x="64.6096%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3596%" y="437" width="0.0796%" height="15" fill="rgb(254,32,49)" fg:x="809" fg:w="1"/><text x="64.6096%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.3596%" y="421" width="0.0796%" height="15" fill="rgb(214,136,49)" fg:x="809" fg:w="1"/><text x="64.6096%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3596%" y="405" width="0.0796%" height="15" fill="rgb(206,113,54)" fg:x="809" fg:w="1"/><text x="64.6096%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="64.2005%" y="549" width="0.3978%" height="15" fill="rgb(226,78,17)" fg:x="807" fg:w="5"/><text x="64.4505%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="64.2005%" y="533" width="0.3978%" height="15" fill="rgb(249,189,19)" fg:x="807" fg:w="5"/><text x="64.4505%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="64.2005%" y="517" width="0.3978%" height="15" fill="rgb(211,82,26)" fg:x="807" fg:w="5"/><text x="64.4505%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.4391%" y="501" width="0.1591%" height="15" fill="rgb(206,131,52)" fg:x="810" fg:w="2"/><text x="64.6891%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4391%" y="485" width="0.1591%" height="15" fill="rgb(223,51,24)" fg:x="810" fg:w="2"/><text x="64.6891%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.4391%" y="469" width="0.1591%" height="15" fill="rgb(235,93,36)" fg:x="810" fg:w="2"/><text x="64.6891%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4391%" y="453" width="0.1591%" height="15" fill="rgb(219,118,14)" fg:x="810" fg:w="2"/><text x="64.6891%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="64.4391%" y="437" width="0.1591%" height="15" fill="rgb(240,145,10)" fg:x="810" fg:w="2"/><text x="64.6891%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4391%" y="421" width="0.1591%" height="15" fill="rgb(241,104,15)" fg:x="810" fg:w="2"/><text x="64.6891%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.4391%" y="405" width="0.1591%" height="15" fill="rgb(248,117,21)" fg:x="810" fg:w="2"/><text x="64.6891%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.4391%" y="389" width="0.1591%" height="15" fill="rgb(250,184,34)" fg:x="810" fg:w="2"/><text x="64.6891%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (8 samples, 0.64%)</title><rect x="64.0414%" y="565" width="0.6364%" height="15" fill="rgb(218,169,23)" fg:x="805" fg:w="8"/><text x="64.2914%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.5982%" y="549" width="0.0796%" height="15" fill="rgb(214,33,53)" fg:x="812" fg:w="1"/><text x="64.8482%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.6778%" y="533" width="0.0796%" height="15" fill="rgb(239,78,4)" fg:x="813" fg:w="1"/><text x="64.9278%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="64.7574%" y="533" width="0.0796%" height="15" fill="rgb(250,25,23)" fg:x="814" fg:w="1"/><text x="65.0074%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.7574%" y="517" width="0.0796%" height="15" fill="rgb(220,205,51)" fg:x="814" fg:w="1"/><text x="65.0074%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7574%" y="501" width="0.0796%" height="15" fill="rgb(252,115,2)" fg:x="814" fg:w="1"/><text x="65.0074%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9165%" y="517" width="0.0796%" height="15" fill="rgb(222,106,48)" fg:x="816" fg:w="1"/><text x="65.1665%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9165%" y="501" width="0.0796%" height="15" fill="rgb(225,77,33)" fg:x="816" fg:w="1"/><text x="65.1665%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9165%" y="485" width="0.0796%" height="15" fill="rgb(250,135,2)" fg:x="816" fg:w="1"/><text x="65.1665%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.9165%" y="469" width="0.0796%" height="15" fill="rgb(221,217,54)" fg:x="816" fg:w="1"/><text x="65.1665%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.9165%" y="453" width="0.0796%" height="15" fill="rgb(233,12,6)" fg:x="816" fg:w="1"/><text x="65.1665%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.9165%" y="437" width="0.0796%" height="15" fill="rgb(251,10,27)" fg:x="816" fg:w="1"/><text x="65.1665%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.9165%" y="421" width="0.0796%" height="15" fill="rgb(214,20,35)" fg:x="816" fg:w="1"/><text x="65.1665%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9165%" y="405" width="0.0796%" height="15" fill="rgb(249,13,18)" fg:x="816" fg:w="1"/><text x="65.1665%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.9165%" y="389" width="0.0796%" height="15" fill="rgb(251,115,18)" fg:x="816" fg:w="1"/><text x="65.1665%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.9165%" y="373" width="0.0796%" height="15" fill="rgb(219,91,11)" fg:x="816" fg:w="1"/><text x="65.1665%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.9165%" y="357" width="0.0796%" height="15" fill="rgb(238,130,14)" fg:x="816" fg:w="1"/><text x="65.1665%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.9165%" y="341" width="0.0796%" height="15" fill="rgb(216,197,46)" fg:x="816" fg:w="1"/><text x="65.1665%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.9165%" y="325" width="0.0796%" height="15" fill="rgb(239,113,46)" fg:x="816" fg:w="1"/><text x="65.1665%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.9165%" y="309" width="0.0796%" height="15" fill="rgb(220,76,52)" fg:x="816" fg:w="1"/><text x="65.1665%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="64.9960%" y="517" width="0.0796%" height="15" fill="rgb(247,167,28)" fg:x="817" fg:w="1"/><text x="65.2460%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="64.9960%" y="501" width="0.0796%" height="15" fill="rgb(228,6,44)" fg:x="817" fg:w="1"/><text x="65.2460%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="64.9960%" y="485" width="0.0796%" height="15" fill="rgb(214,75,23)" fg:x="817" fg:w="1"/><text x="65.2460%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.0756%" y="517" width="0.0796%" height="15" fill="rgb(241,211,28)" fg:x="818" fg:w="1"/><text x="65.3256%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="65.2347%" y="501" width="0.2387%" height="15" fill="rgb(216,147,39)" fg:x="820" fg:w="3"/><text x="65.4847%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="65.2347%" y="485" width="0.2387%" height="15" fill="rgb(237,121,45)" fg:x="820" fg:w="3"/><text x="65.4847%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="65.3142%" y="469" width="0.1591%" height="15" fill="rgb(214,115,15)" fg:x="821" fg:w="2"/><text x="65.5642%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="65.3142%" y="453" width="0.1591%" height="15" fill="rgb(253,132,27)" fg:x="821" fg:w="2"/><text x="65.5642%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="65.3142%" y="437" width="0.1591%" height="15" fill="rgb(222,56,1)" fg:x="821" fg:w="2"/><text x="65.5642%" y="447.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.3142%" y="421" width="0.1591%" height="15" fill="rgb(216,99,46)" fg:x="821" fg:w="2"/><text x="65.5642%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.3142%" y="405" width="0.1591%" height="15" fill="rgb(232,1,9)" fg:x="821" fg:w="2"/><text x="65.5642%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="65.3142%" y="389" width="0.1591%" height="15" fill="rgb(215,41,52)" fg:x="821" fg:w="2"/><text x="65.5642%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="65.3142%" y="373" width="0.1591%" height="15" fill="rgb(223,107,41)" fg:x="821" fg:w="2"/><text x="65.5642%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.3938%" y="357" width="0.0796%" height="15" fill="rgb(208,151,32)" fg:x="822" fg:w="1"/><text x="65.6438%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.3938%" y="341" width="0.0796%" height="15" fill="rgb(229,32,3)" fg:x="822" fg:w="1"/><text x="65.6438%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="65.3938%" y="325" width="0.0796%" height="15" fill="rgb(234,186,36)" fg:x="822" fg:w="1"/><text x="65.6438%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.3938%" y="309" width="0.0796%" height="15" fill="rgb(216,9,5)" fg:x="822" fg:w="1"/><text x="65.6438%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.3938%" y="293" width="0.0796%" height="15" fill="rgb(226,151,21)" fg:x="822" fg:w="1"/><text x="65.6438%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="65.4733%" y="501" width="0.0796%" height="15" fill="rgb(210,130,28)" fg:x="823" fg:w="1"/><text x="65.7233%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7120%" y="437" width="0.0796%" height="15" fill="rgb(239,58,31)" fg:x="826" fg:w="1"/><text x="65.9620%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="65.7916%" y="229" width="0.3182%" height="15" fill="rgb(213,14,0)" fg:x="827" fg:w="4"/><text x="66.0416%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (8 samples, 0.64%)</title><rect x="65.5529%" y="469" width="0.6364%" height="15" fill="rgb(228,97,38)" fg:x="824" fg:w="8"/><text x="65.8029%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="65.5529%" y="453" width="0.6364%" height="15" fill="rgb(248,9,13)" fg:x="824" fg:w="8"/><text x="65.8029%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.7916%" y="437" width="0.3978%" height="15" fill="rgb(233,149,17)" fg:x="827" fg:w="5"/><text x="66.0416%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="65.7916%" y="421" width="0.3978%" height="15" fill="rgb(233,127,53)" fg:x="827" fg:w="5"/><text x="66.0416%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.7916%" y="405" width="0.3978%" height="15" fill="rgb(207,120,37)" fg:x="827" fg:w="5"/><text x="66.0416%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="65.7916%" y="389" width="0.3978%" height="15" fill="rgb(210,65,38)" fg:x="827" fg:w="5"/><text x="66.0416%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="65.7916%" y="373" width="0.3978%" height="15" fill="rgb(229,206,39)" fg:x="827" fg:w="5"/><text x="66.0416%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="65.7916%" y="357" width="0.3978%" height="15" fill="rgb(237,11,35)" fg:x="827" fg:w="5"/><text x="66.0416%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="65.7916%" y="341" width="0.3978%" height="15" fill="rgb(237,159,38)" fg:x="827" fg:w="5"/><text x="66.0416%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="65.7916%" y="325" width="0.3978%" height="15" fill="rgb(239,79,36)" fg:x="827" fg:w="5"/><text x="66.0416%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="65.7916%" y="309" width="0.3978%" height="15" fill="rgb(231,163,51)" fg:x="827" fg:w="5"/><text x="66.0416%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="65.7916%" y="293" width="0.3978%" height="15" fill="rgb(226,68,29)" fg:x="827" fg:w="5"/><text x="66.0416%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.40%)</title><rect x="65.7916%" y="277" width="0.3978%" height="15" fill="rgb(250,192,3)" fg:x="827" fg:w="5"/><text x="66.0416%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.40%)</title><rect x="65.7916%" y="261" width="0.3978%" height="15" fill="rgb(206,11,13)" fg:x="827" fg:w="5"/><text x="66.0416%" y="271.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.40%)</title><rect x="65.7916%" y="245" width="0.3978%" height="15" fill="rgb(234,128,26)" fg:x="827" fg:w="5"/><text x="66.0416%" y="255.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="66.1098%" y="229" width="0.0796%" height="15" fill="rgb(226,134,12)" fg:x="831" fg:w="1"/><text x="66.3598%" y="239.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.1098%" y="213" width="0.0796%" height="15" fill="rgb(240,60,15)" fg:x="831" fg:w="1"/><text x="66.3598%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="66.1893%" y="469" width="0.0796%" height="15" fill="rgb(222,112,11)" fg:x="832" fg:w="1"/><text x="66.4393%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="66.1893%" y="453" width="0.0796%" height="15" fill="rgb(231,207,44)" fg:x="832" fg:w="1"/><text x="66.4393%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="66.1893%" y="437" width="0.0796%" height="15" fill="rgb(250,222,54)" fg:x="832" fg:w="1"/><text x="66.4393%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="66.1893%" y="421" width="0.0796%" height="15" fill="rgb(243,223,15)" fg:x="832" fg:w="1"/><text x="66.4393%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="66.1893%" y="405" width="0.0796%" height="15" fill="rgb(239,2,5)" fg:x="832" fg:w="1"/><text x="66.4393%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.1893%" y="389" width="0.0796%" height="15" fill="rgb(241,83,27)" fg:x="832" fg:w="1"/><text x="66.4393%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.1893%" y="373" width="0.0796%" height="15" fill="rgb(223,175,51)" fg:x="832" fg:w="1"/><text x="66.4393%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1893%" y="357" width="0.0796%" height="15" fill="rgb(209,11,47)" fg:x="832" fg:w="1"/><text x="66.4393%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1893%" y="341" width="0.0796%" height="15" fill="rgb(249,60,43)" fg:x="832" fg:w="1"/><text x="66.4393%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.1893%" y="325" width="0.0796%" height="15" fill="rgb(244,84,47)" fg:x="832" fg:w="1"/><text x="66.4393%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.1893%" y="309" width="0.0796%" height="15" fill="rgb(241,110,24)" fg:x="832" fg:w="1"/><text x="66.4393%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.1893%" y="293" width="0.0796%" height="15" fill="rgb(236,79,1)" fg:x="832" fg:w="1"/><text x="66.4393%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.1893%" y="277" width="0.0796%" height="15" fill="rgb(210,152,4)" fg:x="832" fg:w="1"/><text x="66.4393%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.1893%" y="261" width="0.0796%" height="15" fill="rgb(218,71,19)" fg:x="832" fg:w="1"/><text x="66.4393%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.1893%" y="245" width="0.0796%" height="15" fill="rgb(207,161,51)" fg:x="832" fg:w="1"/><text x="66.4393%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.1893%" y="229" width="0.0796%" height="15" fill="rgb(219,84,54)" fg:x="832" fg:w="1"/><text x="66.4393%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.1893%" y="213" width="0.0796%" height="15" fill="rgb(243,172,34)" fg:x="832" fg:w="1"/><text x="66.4393%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.1893%" y="197" width="0.0796%" height="15" fill="rgb(233,181,1)" fg:x="832" fg:w="1"/><text x="66.4393%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.1893%" y="181" width="0.0796%" height="15" fill="rgb(236,21,18)" fg:x="832" fg:w="1"/><text x="66.4393%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.1893%" y="165" width="0.0796%" height="15" fill="rgb(244,165,15)" fg:x="832" fg:w="1"/><text x="66.4393%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.2689%" y="469" width="0.0796%" height="15" fill="rgb(235,75,19)" fg:x="833" fg:w="1"/><text x="66.5189%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.2689%" y="453" width="0.0796%" height="15" fill="rgb(217,229,29)" fg:x="833" fg:w="1"/><text x="66.5189%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.3484%" y="437" width="0.0796%" height="15" fill="rgb(250,200,19)" fg:x="834" fg:w="1"/><text x="66.5984%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.67%)</title><rect x="64.8369%" y="533" width="1.6706%" height="15" fill="rgb(218,195,36)" fg:x="815" fg:w="21"/><text x="65.0869%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (17 samples, 1.35%)</title><rect x="65.1551%" y="517" width="1.3524%" height="15" fill="rgb(206,183,32)" fg:x="819" fg:w="17"/><text x="65.4051%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.95%)</title><rect x="65.5529%" y="501" width="0.9547%" height="15" fill="rgb(235,151,53)" fg:x="824" fg:w="12"/><text x="65.8029%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.95%)</title><rect x="65.5529%" y="485" width="0.9547%" height="15" fill="rgb(244,120,37)" fg:x="824" fg:w="12"/><text x="65.8029%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="66.3484%" y="469" width="0.1591%" height="15" fill="rgb(209,96,41)" fg:x="834" fg:w="2"/><text x="66.5984%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="66.3484%" y="453" width="0.1591%" height="15" fill="rgb(208,229,20)" fg:x="834" fg:w="2"/><text x="66.5984%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.4280%" y="437" width="0.0796%" height="15" fill="rgb(208,153,33)" fg:x="835" fg:w="1"/><text x="66.6780%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="66.4280%" y="421" width="0.0796%" height="15" fill="rgb(223,196,8)" fg:x="835" fg:w="1"/><text x="66.6780%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.4280%" y="405" width="0.0796%" height="15" fill="rgb(241,75,49)" fg:x="835" fg:w="1"/><text x="66.6780%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.4280%" y="389" width="0.0796%" height="15" fill="rgb(212,52,42)" fg:x="835" fg:w="1"/><text x="66.6780%" y="399.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.5871%" y="517" width="0.1591%" height="15" fill="rgb(220,148,43)" fg:x="837" fg:w="2"/><text x="66.8371%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.5871%" y="501" width="0.1591%" height="15" fill="rgb(228,88,15)" fg:x="837" fg:w="2"/><text x="66.8371%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.6667%" y="485" width="0.0796%" height="15" fill="rgb(213,87,14)" fg:x="838" fg:w="1"/><text x="66.9167%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.6667%" y="469" width="0.0796%" height="15" fill="rgb(220,198,31)" fg:x="838" fg:w="1"/><text x="66.9167%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.6667%" y="453" width="0.0796%" height="15" fill="rgb(223,165,38)" fg:x="838" fg:w="1"/><text x="66.9167%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.6667%" y="437" width="0.0796%" height="15" fill="rgb(247,56,48)" fg:x="838" fg:w="1"/><text x="66.9167%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.6667%" y="421" width="0.0796%" height="15" fill="rgb(222,150,13)" fg:x="838" fg:w="1"/><text x="66.9167%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.6667%" y="405" width="0.0796%" height="15" fill="rgb(218,214,11)" fg:x="838" fg:w="1"/><text x="66.9167%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.6667%" y="389" width="0.0796%" height="15" fill="rgb(246,111,16)" fg:x="838" fg:w="1"/><text x="66.9167%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.6667%" y="373" width="0.0796%" height="15" fill="rgb(250,127,26)" fg:x="838" fg:w="1"/><text x="66.9167%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.6667%" y="357" width="0.0796%" height="15" fill="rgb(237,156,23)" fg:x="838" fg:w="1"/><text x="66.9167%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.6667%" y="341" width="0.0796%" height="15" fill="rgb(215,143,51)" fg:x="838" fg:w="1"/><text x="66.9167%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="66.6667%" y="325" width="0.0796%" height="15" fill="rgb(209,119,39)" fg:x="838" fg:w="1"/><text x="66.9167%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="66.6667%" y="309" width="0.0796%" height="15" fill="rgb(228,181,16)" fg:x="838" fg:w="1"/><text x="66.9167%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="66.8258%" y="469" width="0.0796%" height="15" fill="rgb(236,113,51)" fg:x="840" fg:w="1"/><text x="67.0758%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.8258%" y="453" width="0.0796%" height="15" fill="rgb(223,132,1)" fg:x="840" fg:w="1"/><text x="67.0758%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="66.9053%" y="469" width="0.0796%" height="15" fill="rgb(227,4,54)" fg:x="841" fg:w="1"/><text x="67.1553%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.1440%" y="373" width="0.0796%" height="15" fill="rgb(254,72,52)" fg:x="844" fg:w="1"/><text x="67.3940%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1440%" y="357" width="0.0796%" height="15" fill="rgb(252,104,52)" fg:x="844" fg:w="1"/><text x="67.3940%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.0644%" y="405" width="0.2387%" height="15" fill="rgb(251,146,26)" fg:x="843" fg:w="3"/><text x="67.3144%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.0644%" y="389" width="0.2387%" height="15" fill="rgb(214,146,19)" fg:x="843" fg:w="3"/><text x="67.3144%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2235%" y="373" width="0.0796%" height="15" fill="rgb(242,222,1)" fg:x="845" fg:w="1"/><text x="67.4735%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.2235%" y="357" width="0.0796%" height="15" fill="rgb(220,178,32)" fg:x="845" fg:w="1"/><text x="67.4735%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.2235%" y="341" width="0.0796%" height="15" fill="rgb(220,50,48)" fg:x="845" fg:w="1"/><text x="67.4735%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.2235%" y="325" width="0.0796%" height="15" fill="rgb(207,117,22)" fg:x="845" fg:w="1"/><text x="67.4735%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.2235%" y="309" width="0.0796%" height="15" fill="rgb(247,195,50)" fg:x="845" fg:w="1"/><text x="67.4735%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2235%" y="293" width="0.0796%" height="15" fill="rgb(206,50,39)" fg:x="845" fg:w="1"/><text x="67.4735%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.2235%" y="277" width="0.0796%" height="15" fill="rgb(236,141,29)" fg:x="845" fg:w="1"/><text x="67.4735%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.2235%" y="261" width="0.0796%" height="15" fill="rgb(247,18,44)" fg:x="845" fg:w="1"/><text x="67.4735%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.2235%" y="245" width="0.0796%" height="15" fill="rgb(243,179,46)" fg:x="845" fg:w="1"/><text x="67.4735%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.2235%" y="229" width="0.0796%" height="15" fill="rgb(241,178,53)" fg:x="845" fg:w="1"/><text x="67.4735%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.2235%" y="213" width="0.0796%" height="15" fill="rgb(236,100,9)" fg:x="845" fg:w="1"/><text x="67.4735%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.2235%" y="197" width="0.0796%" height="15" fill="rgb(208,180,29)" fg:x="845" fg:w="1"/><text x="67.4735%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.0644%" y="437" width="0.3182%" height="15" fill="rgb(241,204,36)" fg:x="843" fg:w="4"/><text x="67.3144%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="67.0644%" y="421" width="0.3182%" height="15" fill="rgb(248,106,5)" fg:x="843" fg:w="4"/><text x="67.3144%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3031%" y="405" width="0.0796%" height="15" fill="rgb(245,13,49)" fg:x="846" fg:w="1"/><text x="67.5531%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.3031%" y="389" width="0.0796%" height="15" fill="rgb(221,209,34)" fg:x="846" fg:w="1"/><text x="67.5531%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.3031%" y="373" width="0.0796%" height="15" fill="rgb(224,83,31)" fg:x="846" fg:w="1"/><text x="67.5531%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.3031%" y="357" width="0.0796%" height="15" fill="rgb(218,63,22)" fg:x="846" fg:w="1"/><text x="67.5531%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.3031%" y="341" width="0.0796%" height="15" fill="rgb(214,167,5)" fg:x="846" fg:w="1"/><text x="67.5531%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.3031%" y="325" width="0.0796%" height="15" fill="rgb(243,13,0)" fg:x="846" fg:w="1"/><text x="67.5531%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.3031%" y="309" width="0.0796%" height="15" fill="rgb(237,20,46)" fg:x="846" fg:w="1"/><text x="67.5531%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="437" width="0.1591%" height="15" fill="rgb(240,94,48)" fg:x="847" fg:w="2"/><text x="67.6327%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="421" width="0.1591%" height="15" fill="rgb(205,160,17)" fg:x="847" fg:w="2"/><text x="67.6327%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="405" width="0.1591%" height="15" fill="rgb(234,42,33)" fg:x="847" fg:w="2"/><text x="67.6327%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="389" width="0.1591%" height="15" fill="rgb(215,166,5)" fg:x="847" fg:w="2"/><text x="67.6327%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="373" width="0.1591%" height="15" fill="rgb(215,9,6)" fg:x="847" fg:w="2"/><text x="67.6327%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="67.3827%" y="357" width="0.1591%" height="15" fill="rgb(212,53,6)" fg:x="847" fg:w="2"/><text x="67.6327%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="67.3827%" y="341" width="0.1591%" height="15" fill="rgb(249,157,19)" fg:x="847" fg:w="2"/><text x="67.6327%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (37 samples, 2.94%)</title><rect x="64.6778%" y="565" width="2.9435%" height="15" fill="rgb(222,212,45)" fg:x="813" fg:w="37"/><text x="64.9278%" y="575.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (37 samples, 2.94%)</title><rect x="64.6778%" y="549" width="2.9435%" height="15" fill="rgb(232,155,17)" fg:x="813" fg:w="37"/><text x="64.9278%" y="559.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (14 samples, 1.11%)</title><rect x="66.5076%" y="533" width="1.1138%" height="15" fill="rgb(212,159,50)" fg:x="836" fg:w="14"/><text x="66.7576%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (11 samples, 0.88%)</title><rect x="66.7462%" y="517" width="0.8751%" height="15" fill="rgb(247,71,8)" fg:x="839" fg:w="11"/><text x="66.9962%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::name (11 samples, 0.88%)</title><rect x="66.7462%" y="501" width="0.8751%" height="15" fill="rgb(239,128,29)" fg:x="839" fg:w="11"/><text x="66.9962%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="66.7462%" y="485" width="0.8751%" height="15" fill="rgb(227,117,11)" fg:x="839" fg:w="11"/><text x="66.9962%" y="495.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="66.9849%" y="469" width="0.6364%" height="15" fill="rgb(247,183,4)" fg:x="842" fg:w="8"/><text x="67.2349%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="67.0644%" y="453" width="0.5569%" height="15" fill="rgb(211,161,41)" fg:x="843" fg:w="7"/><text x="67.3144%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5418%" y="437" width="0.0796%" height="15" fill="rgb(250,157,52)" fg:x="849" fg:w="1"/><text x="67.7918%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5418%" y="421" width="0.0796%" height="15" fill="rgb(249,118,26)" fg:x="849" fg:w="1"/><text x="67.7918%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5418%" y="405" width="0.0796%" height="15" fill="rgb(234,52,37)" fg:x="849" fg:w="1"/><text x="67.7918%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5418%" y="389" width="0.0796%" height="15" fill="rgb(237,188,45)" fg:x="849" fg:w="1"/><text x="67.7918%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.5418%" y="373" width="0.0796%" height="15" fill="rgb(241,3,40)" fg:x="849" fg:w="1"/><text x="67.7918%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5418%" y="357" width="0.0796%" height="15" fill="rgb(246,192,7)" fg:x="849" fg:w="1"/><text x="67.7918%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5418%" y="341" width="0.0796%" height="15" fill="rgb(206,168,17)" fg:x="849" fg:w="1"/><text x="67.7918%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5418%" y="325" width="0.0796%" height="15" fill="rgb(208,124,33)" fg:x="849" fg:w="1"/><text x="67.7918%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5418%" y="309" width="0.0796%" height="15" fill="rgb(226,186,11)" fg:x="849" fg:w="1"/><text x="67.7918%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5418%" y="293" width="0.0796%" height="15" fill="rgb(218,223,1)" fg:x="849" fg:w="1"/><text x="67.7918%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.5418%" y="277" width="0.0796%" height="15" fill="rgb(254,65,21)" fg:x="849" fg:w="1"/><text x="67.7918%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.5418%" y="261" width="0.0796%" height="15" fill="rgb(239,63,32)" fg:x="849" fg:w="1"/><text x="67.7918%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.5418%" y="245" width="0.0796%" height="15" fill="rgb(219,85,29)" fg:x="849" fg:w="1"/><text x="67.7918%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.7804%" y="485" width="0.0796%" height="15" fill="rgb(246,74,32)" fg:x="852" fg:w="1"/><text x="68.0304%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.8600%" y="485" width="0.0796%" height="15" fill="rgb(251,20,52)" fg:x="853" fg:w="1"/><text x="68.1100%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.8600%" y="469" width="0.0796%" height="15" fill="rgb(222,160,46)" fg:x="853" fg:w="1"/><text x="68.1100%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.8600%" y="453" width="0.0796%" height="15" fill="rgb(230,68,24)" fg:x="853" fg:w="1"/><text x="68.1100%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.8600%" y="437" width="0.0796%" height="15" fill="rgb(233,83,32)" fg:x="853" fg:w="1"/><text x="68.1100%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.8600%" y="421" width="0.0796%" height="15" fill="rgb(253,79,36)" fg:x="853" fg:w="1"/><text x="68.1100%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="67.6213%" y="533" width="0.3978%" height="15" fill="rgb(224,125,51)" fg:x="850" fg:w="5"/><text x="67.8713%" y="543.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="67.6213%" y="517" width="0.3978%" height="15" fill="rgb(254,158,3)" fg:x="850" fg:w="5"/><text x="67.8713%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="67.6213%" y="501" width="0.3978%" height="15" fill="rgb(243,226,3)" fg:x="850" fg:w="5"/><text x="67.8713%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.9395%" y="485" width="0.0796%" height="15" fill="rgb(208,37,10)" fg:x="854" fg:w="1"/><text x="68.1895%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.9395%" y="469" width="0.0796%" height="15" fill="rgb(227,35,6)" fg:x="854" fg:w="1"/><text x="68.1895%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9395%" y="453" width="0.0796%" height="15" fill="rgb(236,35,38)" fg:x="854" fg:w="1"/><text x="68.1895%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="68.0191%" y="517" width="0.0796%" height="15" fill="rgb(247,165,26)" fg:x="855" fg:w="1"/><text x="68.2691%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.0191%" y="501" width="0.0796%" height="15" fill="rgb(251,131,20)" fg:x="855" fg:w="1"/><text x="68.2691%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.3373%" y="405" width="0.0796%" height="15" fill="rgb(248,168,52)" fg:x="859" fg:w="1"/><text x="68.5873%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.0986%" y="469" width="0.3978%" height="15" fill="rgb(241,220,45)" fg:x="856" fg:w="5"/><text x="68.3486%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.0986%" y="453" width="0.3978%" height="15" fill="rgb(240,85,44)" fg:x="856" fg:w="5"/><text x="68.3486%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="68.0986%" y="437" width="0.3978%" height="15" fill="rgb(223,69,47)" fg:x="856" fg:w="5"/><text x="68.3486%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.2578%" y="421" width="0.2387%" height="15" fill="rgb(221,209,17)" fg:x="858" fg:w="3"/><text x="68.5078%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4169%" y="405" width="0.0796%" height="15" fill="rgb(224,194,24)" fg:x="860" fg:w="1"/><text x="68.6669%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.4964%" y="389" width="0.0796%" height="15" fill="rgb(249,43,24)" fg:x="861" fg:w="1"/><text x="68.7464%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.4964%" y="373" width="0.0796%" height="15" fill="rgb(245,78,29)" fg:x="861" fg:w="1"/><text x="68.7464%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.4964%" y="357" width="0.0796%" height="15" fill="rgb(241,167,34)" fg:x="861" fg:w="1"/><text x="68.7464%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.4964%" y="341" width="0.0796%" height="15" fill="rgb(225,91,27)" fg:x="861" fg:w="1"/><text x="68.7464%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.4964%" y="325" width="0.0796%" height="15" fill="rgb(249,82,49)" fg:x="861" fg:w="1"/><text x="68.7464%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.4964%" y="309" width="0.0796%" height="15" fill="rgb(215,90,36)" fg:x="861" fg:w="1"/><text x="68.7464%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.4964%" y="293" width="0.0796%" height="15" fill="rgb(209,128,1)" fg:x="861" fg:w="1"/><text x="68.7464%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="68.0986%" y="485" width="0.5569%" height="15" fill="rgb(233,184,1)" fg:x="856" fg:w="7"/><text x="68.3486%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.4964%" y="469" width="0.1591%" height="15" fill="rgb(240,59,32)" fg:x="861" fg:w="2"/><text x="68.7464%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="68.4964%" y="453" width="0.1591%" height="15" fill="rgb(249,163,0)" fg:x="861" fg:w="2"/><text x="68.7464%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="68.4964%" y="437" width="0.1591%" height="15" fill="rgb(249,220,13)" fg:x="861" fg:w="2"/><text x="68.7464%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="68.4964%" y="421" width="0.1591%" height="15" fill="rgb(235,127,52)" fg:x="861" fg:w="2"/><text x="68.7464%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="68.4964%" y="405" width="0.1591%" height="15" fill="rgb(229,172,26)" fg:x="861" fg:w="2"/><text x="68.7464%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.5760%" y="389" width="0.0796%" height="15" fill="rgb(217,37,29)" fg:x="862" fg:w="1"/><text x="68.8260%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.5760%" y="373" width="0.0796%" height="15" fill="rgb(208,66,47)" fg:x="862" fg:w="1"/><text x="68.8260%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.7351%" y="421" width="0.0796%" height="15" fill="rgb(221,99,19)" fg:x="864" fg:w="1"/><text x="68.9851%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (16 samples, 1.27%)</title><rect x="67.6213%" y="565" width="1.2729%" height="15" fill="rgb(214,149,49)" fg:x="850" fg:w="16"/><text x="67.8713%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (16 samples, 1.27%)</title><rect x="67.6213%" y="549" width="1.2729%" height="15" fill="rgb(229,91,37)" fg:x="850" fg:w="16"/><text x="67.8713%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (11 samples, 0.88%)</title><rect x="68.0191%" y="533" width="0.8751%" height="15" fill="rgb(207,159,48)" fg:x="855" fg:w="11"/><text x="68.2691%" y="543.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.80%)</title><rect x="68.0986%" y="517" width="0.7955%" height="15" fill="rgb(209,125,46)" fg:x="856" fg:w="10"/><text x="68.3486%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="68.0986%" y="501" width="0.7955%" height="15" fill="rgb(211,188,18)" fg:x="856" fg:w="10"/><text x="68.3486%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.6555%" y="485" width="0.2387%" height="15" fill="rgb(207,203,34)" fg:x="863" fg:w="3"/><text x="68.9055%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.6555%" y="469" width="0.2387%" height="15" fill="rgb(245,182,16)" fg:x="863" fg:w="3"/><text x="68.9055%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.7351%" y="453" width="0.1591%" height="15" fill="rgb(210,66,30)" fg:x="864" fg:w="2"/><text x="68.9851%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.7351%" y="437" width="0.1591%" height="15" fill="rgb(230,110,14)" fg:x="864" fg:w="2"/><text x="68.9851%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="68.8146%" y="421" width="0.0796%" height="15" fill="rgb(242,198,32)" fg:x="865" fg:w="1"/><text x="69.0646%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8146%" y="405" width="0.0796%" height="15" fill="rgb(213,45,23)" fg:x="865" fg:w="1"/><text x="69.0646%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8146%" y="389" width="0.0796%" height="15" fill="rgb(205,76,9)" fg:x="865" fg:w="1"/><text x="69.0646%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8146%" y="373" width="0.0796%" height="15" fill="rgb(250,200,25)" fg:x="865" fg:w="1"/><text x="69.0646%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.8146%" y="357" width="0.0796%" height="15" fill="rgb(221,161,23)" fg:x="865" fg:w="1"/><text x="69.0646%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.8146%" y="341" width="0.0796%" height="15" fill="rgb(226,135,48)" fg:x="865" fg:w="1"/><text x="69.0646%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.8146%" y="325" width="0.0796%" height="15" fill="rgb(228,33,6)" fg:x="865" fg:w="1"/><text x="69.0646%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.8146%" y="309" width="0.0796%" height="15" fill="rgb(237,224,9)" fg:x="865" fg:w="1"/><text x="69.0646%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="68.8942%" y="565" width="0.0796%" height="15" fill="rgb(251,61,40)" fg:x="866" fg:w="1"/><text x="69.1442%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.8942%" y="549" width="0.0796%" height="15" fill="rgb(220,222,2)" fg:x="866" fg:w="1"/><text x="69.1442%" y="559.50"></text></g><g><title>plugins_core::library::actions::reply_done (5 samples, 0.40%)</title><rect x="68.9737%" y="565" width="0.3978%" height="15" fill="rgb(238,4,8)" fg:x="867" fg:w="5"/><text x="69.2237%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (4 samples, 0.32%)</title><rect x="69.0533%" y="549" width="0.3182%" height="15" fill="rgb(240,153,3)" fg:x="868" fg:w="4"/><text x="69.3033%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (4 samples, 0.32%)</title><rect x="69.0533%" y="533" width="0.3182%" height="15" fill="rgb(245,29,24)" fg:x="868" fg:w="4"/><text x="69.3033%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (4 samples, 0.32%)</title><rect x="69.0533%" y="517" width="0.3182%" height="15" fill="rgb(231,220,37)" fg:x="868" fg:w="4"/><text x="69.3033%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (4 samples, 0.32%)</title><rect x="69.0533%" y="501" width="0.3182%" height="15" fill="rgb(245,33,10)" fg:x="868" fg:w="4"/><text x="69.3033%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (4 samples, 0.32%)</title><rect x="69.0533%" y="485" width="0.3182%" height="15" fill="rgb(220,227,43)" fg:x="868" fg:w="4"/><text x="69.3033%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="69.1329%" y="469" width="0.2387%" height="15" fill="rgb(215,183,54)" fg:x="869" fg:w="3"/><text x="69.3829%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (3 samples, 0.24%)</title><rect x="69.1329%" y="453" width="0.2387%" height="15" fill="rgb(242,80,26)" fg:x="869" fg:w="3"/><text x="69.3829%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (3 samples, 0.24%)</title><rect x="69.1329%" y="437" width="0.2387%" height="15" fill="rgb(206,172,49)" fg:x="869" fg:w="3"/><text x="69.3829%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="69.2124%" y="421" width="0.1591%" height="15" fill="rgb(249,0,10)" fg:x="870" fg:w="2"/><text x="69.4624%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="69.2124%" y="405" width="0.1591%" height="15" fill="rgb(246,171,19)" fg:x="870" fg:w="2"/><text x="69.4624%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.16%)</title><rect x="69.2124%" y="389" width="0.1591%" height="15" fill="rgb(236,25,43)" fg:x="870" fg:w="2"/><text x="69.4624%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="69.2920%" y="373" width="0.0796%" height="15" fill="rgb(225,146,20)" fg:x="871" fg:w="1"/><text x="69.5420%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3715%" y="437" width="0.1591%" height="15" fill="rgb(243,50,39)" fg:x="872" fg:w="2"/><text x="69.6215%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.3715%" y="421" width="0.1591%" height="15" fill="rgb(239,153,27)" fg:x="872" fg:w="2"/><text x="69.6215%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.4511%" y="405" width="0.0796%" height="15" fill="rgb(208,164,31)" fg:x="873" fg:w="1"/><text x="69.7011%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.3715%" y="469" width="0.2387%" height="15" fill="rgb(231,32,38)" fg:x="872" fg:w="3"/><text x="69.6215%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="69.3715%" y="453" width="0.2387%" height="15" fill="rgb(247,158,12)" fg:x="872" fg:w="3"/><text x="69.6215%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5306%" y="437" width="0.0796%" height="15" fill="rgb(254,126,16)" fg:x="874" fg:w="1"/><text x="69.7806%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.5306%" y="421" width="0.0796%" height="15" fill="rgb(246,12,32)" fg:x="874" fg:w="1"/><text x="69.7806%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.5306%" y="405" width="0.0796%" height="15" fill="rgb(245,190,44)" fg:x="874" fg:w="1"/><text x="69.7806%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.5306%" y="389" width="0.0796%" height="15" fill="rgb(253,148,49)" fg:x="874" fg:w="1"/><text x="69.7806%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.5306%" y="373" width="0.0796%" height="15" fill="rgb(232,193,44)" fg:x="874" fg:w="1"/><text x="69.7806%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.5306%" y="357" width="0.0796%" height="15" fill="rgb(212,67,50)" fg:x="874" fg:w="1"/><text x="69.7806%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.5306%" y="341" width="0.0796%" height="15" fill="rgb(235,109,24)" fg:x="874" fg:w="1"/><text x="69.7806%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.5306%" y="325" width="0.0796%" height="15" fill="rgb(242,228,23)" fg:x="874" fg:w="1"/><text x="69.7806%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.5306%" y="309" width="0.0796%" height="15" fill="rgb(232,48,19)" fg:x="874" fg:w="1"/><text x="69.7806%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.5306%" y="293" width="0.0796%" height="15" fill="rgb(221,167,25)" fg:x="874" fg:w="1"/><text x="69.7806%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.5306%" y="277" width="0.0796%" height="15" fill="rgb(220,29,38)" fg:x="874" fg:w="1"/><text x="69.7806%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5306%" y="261" width="0.0796%" height="15" fill="rgb(245,95,26)" fg:x="874" fg:w="1"/><text x="69.7806%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="69.3715%" y="517" width="0.3182%" height="15" fill="rgb(227,189,38)" fg:x="872" fg:w="4"/><text x="69.6215%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="69.3715%" y="501" width="0.3182%" height="15" fill="rgb(231,212,22)" fg:x="872" fg:w="4"/><text x="69.6215%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="69.3715%" y="485" width="0.3182%" height="15" fill="rgb(246,25,46)" fg:x="872" fg:w="4"/><text x="69.6215%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6102%" y="469" width="0.0796%" height="15" fill="rgb(218,90,32)" fg:x="875" fg:w="1"/><text x="69.8602%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6102%" y="453" width="0.0796%" height="15" fill="rgb(207,89,34)" fg:x="875" fg:w="1"/><text x="69.8602%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6102%" y="437" width="0.0796%" height="15" fill="rgb(222,30,54)" fg:x="875" fg:w="1"/><text x="69.8602%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6102%" y="421" width="0.0796%" height="15" fill="rgb(224,229,32)" fg:x="875" fg:w="1"/><text x="69.8602%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="69.6102%" y="405" width="0.0796%" height="15" fill="rgb(209,188,44)" fg:x="875" fg:w="1"/><text x="69.8602%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.6102%" y="389" width="0.0796%" height="15" fill="rgb(215,174,23)" fg:x="875" fg:w="1"/><text x="69.8602%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.6102%" y="373" width="0.0796%" height="15" fill="rgb(242,104,18)" fg:x="875" fg:w="1"/><text x="69.8602%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="69.3715%" y="549" width="0.3978%" height="15" fill="rgb(240,173,53)" fg:x="872" fg:w="5"/><text x="69.6215%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="69.3715%" y="533" width="0.3978%" height="15" fill="rgb(240,105,45)" fg:x="872" fg:w="5"/><text x="69.6215%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="69.6897%" y="517" width="0.0796%" height="15" fill="rgb(252,164,29)" fg:x="876" fg:w="1"/><text x="69.9397%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="69.6897%" y="501" width="0.0796%" height="15" fill="rgb(217,17,6)" fg:x="876" fg:w="1"/><text x="69.9397%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="69.6897%" y="485" width="0.0796%" height="15" fill="rgb(245,27,23)" fg:x="876" fg:w="1"/><text x="69.9397%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="469" width="0.0796%" height="15" fill="rgb(239,73,33)" fg:x="876" fg:w="1"/><text x="69.9397%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="453" width="0.0796%" height="15" fill="rgb(209,140,21)" fg:x="876" fg:w="1"/><text x="69.9397%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="437" width="0.0796%" height="15" fill="rgb(206,36,53)" fg:x="876" fg:w="1"/><text x="69.9397%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="421" width="0.0796%" height="15" fill="rgb(238,134,8)" fg:x="876" fg:w="1"/><text x="69.9397%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="405" width="0.0796%" height="15" fill="rgb(209,3,20)" fg:x="876" fg:w="1"/><text x="69.9397%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6897%" y="389" width="0.0796%" height="15" fill="rgb(208,101,32)" fg:x="876" fg:w="1"/><text x="69.9397%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.6897%" y="373" width="0.0796%" height="15" fill="rgb(253,56,38)" fg:x="876" fg:w="1"/><text x="69.9397%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6897%" y="357" width="0.0796%" height="15" fill="rgb(209,85,49)" fg:x="876" fg:w="1"/><text x="69.9397%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8488%" y="485" width="0.0796%" height="15" fill="rgb(234,177,21)" fg:x="878" fg:w="1"/><text x="70.0988%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.8488%" y="469" width="0.0796%" height="15" fill="rgb(250,4,6)" fg:x="878" fg:w="1"/><text x="70.0988%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.8488%" y="453" width="0.0796%" height="15" fill="rgb(240,153,10)" fg:x="878" fg:w="1"/><text x="70.0988%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.8488%" y="437" width="0.0796%" height="15" fill="rgb(205,136,51)" fg:x="878" fg:w="1"/><text x="70.0988%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.8488%" y="421" width="0.0796%" height="15" fill="rgb(245,165,50)" fg:x="878" fg:w="1"/><text x="70.0988%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8488%" y="405" width="0.0796%" height="15" fill="rgb(211,28,10)" fg:x="878" fg:w="1"/><text x="70.0988%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.8488%" y="389" width="0.0796%" height="15" fill="rgb(218,155,54)" fg:x="878" fg:w="1"/><text x="70.0988%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.8488%" y="373" width="0.0796%" height="15" fill="rgb(254,214,30)" fg:x="878" fg:w="1"/><text x="70.0988%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.8488%" y="357" width="0.0796%" height="15" fill="rgb(248,200,10)" fg:x="878" fg:w="1"/><text x="70.0988%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.8488%" y="341" width="0.0796%" height="15" fill="rgb(238,219,45)" fg:x="878" fg:w="1"/><text x="70.0988%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.8488%" y="325" width="0.0796%" height="15" fill="rgb(227,35,34)" fg:x="878" fg:w="1"/><text x="70.0988%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.8488%" y="309" width="0.0796%" height="15" fill="rgb(214,187,37)" fg:x="878" fg:w="1"/><text x="70.0988%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.9284%" y="485" width="0.1591%" height="15" fill="rgb(247,164,44)" fg:x="879" fg:w="2"/><text x="70.1784%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.9284%" y="469" width="0.1591%" height="15" fill="rgb(238,198,10)" fg:x="879" fg:w="2"/><text x="70.1784%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.9284%" y="453" width="0.1591%" height="15" fill="rgb(213,69,8)" fg:x="879" fg:w="2"/><text x="70.1784%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.9284%" y="437" width="0.1591%" height="15" fill="rgb(222,82,16)" fg:x="879" fg:w="2"/><text x="70.1784%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.9284%" y="421" width="0.1591%" height="15" fill="rgb(205,172,30)" fg:x="879" fg:w="2"/><text x="70.1784%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.9284%" y="405" width="0.1591%" height="15" fill="rgb(227,39,8)" fg:x="879" fg:w="2"/><text x="70.1784%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.9284%" y="389" width="0.1591%" height="15" fill="rgb(249,10,19)" fg:x="879" fg:w="2"/><text x="70.1784%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.9284%" y="373" width="0.1591%" height="15" fill="rgb(205,158,53)" fg:x="879" fg:w="2"/><text x="70.1784%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="69.9284%" y="357" width="0.1591%" height="15" fill="rgb(237,229,35)" fg:x="879" fg:w="2"/><text x="70.1784%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="69.9284%" y="341" width="0.1591%" height="15" fill="rgb(238,129,14)" fg:x="879" fg:w="2"/><text x="70.1784%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="69.9284%" y="325" width="0.1591%" height="15" fill="rgb(218,217,40)" fg:x="879" fg:w="2"/><text x="70.1784%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="69.9284%" y="309" width="0.1591%" height="15" fill="rgb(221,187,9)" fg:x="879" fg:w="2"/><text x="70.1784%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="69.9284%" y="293" width="0.1591%" height="15" fill="rgb(214,108,19)" fg:x="879" fg:w="2"/><text x="70.1784%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.9284%" y="277" width="0.1591%" height="15" fill="rgb(216,86,23)" fg:x="879" fg:w="2"/><text x="70.1784%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="69.8488%" y="517" width="0.3182%" height="15" fill="rgb(209,116,23)" fg:x="878" fg:w="4"/><text x="70.0988%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="69.8488%" y="501" width="0.3182%" height="15" fill="rgb(222,185,40)" fg:x="878" fg:w="4"/><text x="70.0988%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0875%" y="485" width="0.0796%" height="15" fill="rgb(238,150,2)" fg:x="881" fg:w="1"/><text x="70.3375%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1671%" y="501" width="0.0796%" height="15" fill="rgb(229,132,47)" fg:x="882" fg:w="1"/><text x="70.4171%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="70.1671%" y="517" width="0.2387%" height="15" fill="rgb(231,7,23)" fg:x="882" fg:w="3"/><text x="70.4171%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="70.2466%" y="501" width="0.1591%" height="15" fill="rgb(235,12,37)" fg:x="883" fg:w="2"/><text x="70.4966%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="70.3262%" y="485" width="0.0796%" height="15" fill="rgb(247,170,51)" fg:x="884" fg:w="1"/><text x="70.5762%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="70.3262%" y="469" width="0.0796%" height="15" fill="rgb(210,62,49)" fg:x="884" fg:w="1"/><text x="70.5762%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="70.3262%" y="453" width="0.0796%" height="15" fill="rgb(248,30,8)" fg:x="884" fg:w="1"/><text x="70.5762%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="70.3262%" y="437" width="0.0796%" height="15" fill="rgb(252,11,2)" fg:x="884" fg:w="1"/><text x="70.5762%" y="447.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="70.3262%" y="421" width="0.0796%" height="15" fill="rgb(249,65,4)" fg:x="884" fg:w="1"/><text x="70.5762%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.4057%" y="517" width="0.0796%" height="15" fill="rgb(217,219,7)" fg:x="885" fg:w="1"/><text x="70.6557%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.4057%" y="501" width="0.0796%" height="15" fill="rgb(222,186,36)" fg:x="885" fg:w="1"/><text x="70.6557%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.4853%" y="485" width="0.0796%" height="15" fill="rgb(247,184,5)" fg:x="886" fg:w="1"/><text x="70.7353%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.4853%" y="469" width="0.0796%" height="15" fill="rgb(221,108,7)" fg:x="886" fg:w="1"/><text x="70.7353%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.4853%" y="453" width="0.0796%" height="15" fill="rgb(209,208,22)" fg:x="886" fg:w="1"/><text x="70.7353%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.5648%" y="405" width="0.0796%" height="15" fill="rgb(247,106,21)" fg:x="887" fg:w="1"/><text x="70.8148%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (12 samples, 0.95%)</title><rect x="69.7693%" y="549" width="0.9547%" height="15" fill="rgb(223,2,44)" fg:x="877" fg:w="12"/><text x="70.0193%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.95%)</title><rect x="69.7693%" y="533" width="0.9547%" height="15" fill="rgb(208,190,12)" fg:x="877" fg:w="12"/><text x="70.0193%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.4853%" y="517" width="0.2387%" height="15" fill="rgb(250,221,0)" fg:x="886" fg:w="3"/><text x="70.7353%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.4853%" y="501" width="0.2387%" height="15" fill="rgb(212,210,16)" fg:x="886" fg:w="3"/><text x="70.7353%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="70.5648%" y="485" width="0.1591%" height="15" fill="rgb(212,224,21)" fg:x="887" fg:w="2"/><text x="70.8148%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="70.5648%" y="469" width="0.1591%" height="15" fill="rgb(206,186,54)" fg:x="887" fg:w="2"/><text x="70.8148%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="70.5648%" y="453" width="0.1591%" height="15" fill="rgb(213,211,25)" fg:x="887" fg:w="2"/><text x="70.8148%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5648%" y="437" width="0.1591%" height="15" fill="rgb(243,78,36)" fg:x="887" fg:w="2"/><text x="70.8148%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5648%" y="421" width="0.1591%" height="15" fill="rgb(236,105,24)" fg:x="887" fg:w="2"/><text x="70.8148%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="70.6444%" y="405" width="0.0796%" height="15" fill="rgb(223,46,45)" fg:x="888" fg:w="1"/><text x="70.8944%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.9626%" y="293" width="0.0796%" height="15" fill="rgb(249,65,35)" fg:x="892" fg:w="1"/><text x="71.2126%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="70.7239%" y="517" width="0.3978%" height="15" fill="rgb(226,122,19)" fg:x="889" fg:w="5"/><text x="70.9739%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="70.8831%" y="501" width="0.2387%" height="15" fill="rgb(253,17,37)" fg:x="891" fg:w="3"/><text x="71.1331%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.8831%" y="485" width="0.2387%" height="15" fill="rgb(223,138,24)" fg:x="891" fg:w="3"/><text x="71.1331%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="70.8831%" y="469" width="0.2387%" height="15" fill="rgb(227,89,20)" fg:x="891" fg:w="3"/><text x="71.1331%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9626%" y="453" width="0.1591%" height="15" fill="rgb(239,140,41)" fg:x="892" fg:w="2"/><text x="71.2126%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.9626%" y="437" width="0.1591%" height="15" fill="rgb(237,29,24)" fg:x="892" fg:w="2"/><text x="71.2126%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.9626%" y="421" width="0.1591%" height="15" fill="rgb(212,123,27)" fg:x="892" fg:w="2"/><text x="71.2126%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.9626%" y="405" width="0.1591%" height="15" fill="rgb(236,173,10)" fg:x="892" fg:w="2"/><text x="71.2126%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9626%" y="389" width="0.1591%" height="15" fill="rgb(244,17,3)" fg:x="892" fg:w="2"/><text x="71.2126%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9626%" y="373" width="0.1591%" height="15" fill="rgb(220,73,21)" fg:x="892" fg:w="2"/><text x="71.2126%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.9626%" y="357" width="0.1591%" height="15" fill="rgb(220,187,17)" fg:x="892" fg:w="2"/><text x="71.2126%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.9626%" y="341" width="0.1591%" height="15" fill="rgb(236,64,13)" fg:x="892" fg:w="2"/><text x="71.2126%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.9626%" y="325" width="0.1591%" height="15" fill="rgb(214,111,25)" fg:x="892" fg:w="2"/><text x="71.2126%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.9626%" y="309" width="0.1591%" height="15" fill="rgb(251,123,0)" fg:x="892" fg:w="2"/><text x="71.2126%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0422%" y="293" width="0.0796%" height="15" fill="rgb(210,8,32)" fg:x="893" fg:w="1"/><text x="71.2922%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.1217%" y="517" width="0.1591%" height="15" fill="rgb(221,27,44)" fg:x="894" fg:w="2"/><text x="71.3717%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="71.3604%" y="437" width="0.1591%" height="15" fill="rgb(233,207,54)" fg:x="897" fg:w="2"/><text x="71.6104%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (4 samples, 0.32%)</title><rect x="71.2808%" y="517" width="0.3182%" height="15" fill="rgb(219,217,1)" fg:x="896" fg:w="4"/><text x="71.5308%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="71.2808%" y="501" width="0.3182%" height="15" fill="rgb(236,150,15)" fg:x="896" fg:w="4"/><text x="71.5308%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="71.2808%" y="485" width="0.3182%" height="15" fill="rgb(244,119,54)" fg:x="896" fg:w="4"/><text x="71.5308%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (4 samples, 0.32%)</title><rect x="71.2808%" y="469" width="0.3182%" height="15" fill="rgb(218,116,36)" fg:x="896" fg:w="4"/><text x="71.5308%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="71.2808%" y="453" width="0.3182%" height="15" fill="rgb(215,42,32)" fg:x="896" fg:w="4"/><text x="71.5308%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.5195%" y="437" width="0.0796%" height="15" fill="rgb(254,87,2)" fg:x="899" fg:w="1"/><text x="71.7695%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (12 samples, 0.95%)</title><rect x="70.7239%" y="549" width="0.9547%" height="15" fill="rgb(241,195,45)" fg:x="889" fg:w="12"/><text x="70.9739%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (12 samples, 0.95%)</title><rect x="70.7239%" y="533" width="0.9547%" height="15" fill="rgb(252,11,14)" fg:x="889" fg:w="12"/><text x="70.9739%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5990%" y="517" width="0.0796%" height="15" fill="rgb(233,199,43)" fg:x="900" fg:w="1"/><text x="71.8490%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5990%" y="501" width="0.0796%" height="15" fill="rgb(243,170,27)" fg:x="900" fg:w="1"/><text x="71.8490%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6786%" y="533" width="0.0796%" height="15" fill="rgb(236,178,54)" fg:x="901" fg:w="1"/><text x="71.9286%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7582%" y="453" width="0.0796%" height="15" fill="rgb(230,38,12)" fg:x="902" fg:w="1"/><text x="72.0082%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7582%" y="437" width="0.0796%" height="15" fill="rgb(241,44,47)" fg:x="902" fg:w="1"/><text x="72.0082%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7582%" y="421" width="0.0796%" height="15" fill="rgb(218,99,12)" fg:x="902" fg:w="1"/><text x="72.0082%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.7582%" y="405" width="0.0796%" height="15" fill="rgb(211,48,36)" fg:x="902" fg:w="1"/><text x="72.0082%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7582%" y="389" width="0.0796%" height="15" fill="rgb(220,81,29)" fg:x="902" fg:w="1"/><text x="72.0082%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.7582%" y="373" width="0.0796%" height="15" fill="rgb(232,121,54)" fg:x="902" fg:w="1"/><text x="72.0082%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.7582%" y="357" width="0.0796%" height="15" fill="rgb(236,227,37)" fg:x="902" fg:w="1"/><text x="72.0082%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.7582%" y="341" width="0.0796%" height="15" fill="rgb(207,43,26)" fg:x="902" fg:w="1"/><text x="72.0082%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.7582%" y="325" width="0.0796%" height="15" fill="rgb(224,163,34)" fg:x="902" fg:w="1"/><text x="72.0082%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7582%" y="309" width="0.0796%" height="15" fill="rgb(228,127,11)" fg:x="902" fg:w="1"/><text x="72.0082%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.7582%" y="293" width="0.0796%" height="15" fill="rgb(215,32,51)" fg:x="902" fg:w="1"/><text x="72.0082%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.7582%" y="277" width="0.0796%" height="15" fill="rgb(206,180,37)" fg:x="902" fg:w="1"/><text x="72.0082%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.7582%" y="261" width="0.0796%" height="15" fill="rgb(245,217,39)" fg:x="902" fg:w="1"/><text x="72.0082%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.7582%" y="245" width="0.0796%" height="15" fill="rgb(237,179,18)" fg:x="902" fg:w="1"/><text x="72.0082%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.7582%" y="229" width="0.0796%" height="15" fill="rgb(248,177,3)" fg:x="902" fg:w="1"/><text x="72.0082%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7582%" y="213" width="0.0796%" height="15" fill="rgb(208,31,45)" fg:x="902" fg:w="1"/><text x="72.0082%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8377%" y="453" width="0.0796%" height="15" fill="rgb(231,16,43)" fg:x="903" fg:w="1"/><text x="72.0877%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.8377%" y="437" width="0.0796%" height="15" fill="rgb(246,12,20)" fg:x="903" fg:w="1"/><text x="72.0877%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8377%" y="421" width="0.0796%" height="15" fill="rgb(214,40,41)" fg:x="903" fg:w="1"/><text x="72.0877%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8377%" y="405" width="0.0796%" height="15" fill="rgb(225,183,42)" fg:x="903" fg:w="1"/><text x="72.0877%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.8377%" y="389" width="0.0796%" height="15" fill="rgb(229,88,50)" fg:x="903" fg:w="1"/><text x="72.0877%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9173%" y="421" width="0.0796%" height="15" fill="rgb(247,34,33)" fg:x="904" fg:w="1"/><text x="72.1673%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.9968%" y="389" width="0.0796%" height="15" fill="rgb(246,163,52)" fg:x="905" fg:w="1"/><text x="72.2468%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.9968%" y="373" width="0.0796%" height="15" fill="rgb(251,13,27)" fg:x="905" fg:w="1"/><text x="72.2468%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="71.7582%" y="501" width="0.3978%" height="15" fill="rgb(218,127,46)" fg:x="902" fg:w="5"/><text x="72.0082%" y="511.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="71.7582%" y="485" width="0.3978%" height="15" fill="rgb(215,155,29)" fg:x="902" fg:w="5"/><text x="72.0082%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="71.7582%" y="469" width="0.3978%" height="15" fill="rgb(251,180,13)" fg:x="902" fg:w="5"/><text x="72.0082%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.9173%" y="453" width="0.2387%" height="15" fill="rgb(246,215,19)" fg:x="904" fg:w="3"/><text x="72.1673%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="71.9173%" y="437" width="0.2387%" height="15" fill="rgb(210,47,28)" fg:x="904" fg:w="3"/><text x="72.1673%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.9968%" y="421" width="0.1591%" height="15" fill="rgb(231,175,40)" fg:x="905" fg:w="2"/><text x="72.2468%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.9968%" y="405" width="0.1591%" height="15" fill="rgb(207,138,24)" fg:x="905" fg:w="2"/><text x="72.2468%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.0764%" y="389" width="0.0796%" height="15" fill="rgb(216,44,38)" fg:x="906" fg:w="1"/><text x="72.3264%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0764%" y="373" width="0.0796%" height="15" fill="rgb(206,81,53)" fg:x="906" fg:w="1"/><text x="72.3264%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0764%" y="357" width="0.0796%" height="15" fill="rgb(246,139,21)" fg:x="906" fg:w="1"/><text x="72.3264%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0764%" y="341" width="0.0796%" height="15" fill="rgb(212,163,26)" fg:x="906" fg:w="1"/><text x="72.3264%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0764%" y="325" width="0.0796%" height="15" fill="rgb(223,82,35)" fg:x="906" fg:w="1"/><text x="72.3264%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0764%" y="309" width="0.0796%" height="15" fill="rgb(224,76,13)" fg:x="906" fg:w="1"/><text x="72.3264%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.0764%" y="293" width="0.0796%" height="15" fill="rgb(240,2,40)" fg:x="906" fg:w="1"/><text x="72.3264%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0764%" y="277" width="0.0796%" height="15" fill="rgb(232,188,36)" fg:x="906" fg:w="1"/><text x="72.3264%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1559%" y="453" width="0.0796%" height="15" fill="rgb(249,34,46)" fg:x="907" fg:w="1"/><text x="72.4059%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1559%" y="437" width="0.0796%" height="15" fill="rgb(226,99,19)" fg:x="907" fg:w="1"/><text x="72.4059%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1559%" y="421" width="0.0796%" height="15" fill="rgb(207,78,52)" fg:x="907" fg:w="1"/><text x="72.4059%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1559%" y="405" width="0.0796%" height="15" fill="rgb(241,119,8)" fg:x="907" fg:w="1"/><text x="72.4059%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1559%" y="389" width="0.0796%" height="15" fill="rgb(238,31,9)" fg:x="907" fg:w="1"/><text x="72.4059%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1559%" y="373" width="0.0796%" height="15" fill="rgb(223,165,6)" fg:x="907" fg:w="1"/><text x="72.4059%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2355%" y="453" width="0.0796%" height="15" fill="rgb(227,228,21)" fg:x="908" fg:w="1"/><text x="72.4855%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.2355%" y="437" width="0.0796%" height="15" fill="rgb(206,188,51)" fg:x="908" fg:w="1"/><text x="72.4855%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2355%" y="421" width="0.0796%" height="15" fill="rgb(225,207,23)" fg:x="908" fg:w="1"/><text x="72.4855%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2355%" y="405" width="0.0796%" height="15" fill="rgb(232,197,54)" fg:x="908" fg:w="1"/><text x="72.4855%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.2355%" y="389" width="0.0796%" height="15" fill="rgb(229,149,21)" fg:x="908" fg:w="1"/><text x="72.4855%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.2355%" y="373" width="0.0796%" height="15" fill="rgb(209,197,1)" fg:x="908" fg:w="1"/><text x="72.4855%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3150%" y="421" width="0.0796%" height="15" fill="rgb(227,82,17)" fg:x="909" fg:w="1"/><text x="72.5650%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="71.7582%" y="533" width="0.7160%" height="15" fill="rgb(237,201,43)" fg:x="902" fg:w="9"/><text x="72.0082%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="71.7582%" y="517" width="0.7160%" height="15" fill="rgb(221,91,37)" fg:x="902" fg:w="9"/><text x="72.0082%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="72.1559%" y="501" width="0.3182%" height="15" fill="rgb(239,35,7)" fg:x="907" fg:w="4"/><text x="72.4059%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="72.1559%" y="485" width="0.3182%" height="15" fill="rgb(234,145,45)" fg:x="907" fg:w="4"/><text x="72.4059%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="72.1559%" y="469" width="0.3182%" height="15" fill="rgb(214,151,47)" fg:x="907" fg:w="4"/><text x="72.4059%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.3150%" y="453" width="0.1591%" height="15" fill="rgb(248,62,54)" fg:x="909" fg:w="2"/><text x="72.5650%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.3150%" y="437" width="0.1591%" height="15" fill="rgb(236,99,21)" fg:x="909" fg:w="2"/><text x="72.5650%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.3946%" y="421" width="0.0796%" height="15" fill="rgb(223,94,43)" fg:x="910" fg:w="1"/><text x="72.6446%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3946%" y="405" width="0.0796%" height="15" fill="rgb(214,66,6)" fg:x="910" fg:w="1"/><text x="72.6446%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.3946%" y="389" width="0.0796%" height="15" fill="rgb(231,152,46)" fg:x="910" fg:w="1"/><text x="72.6446%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.3946%" y="373" width="0.0796%" height="15" fill="rgb(254,0,48)" fg:x="910" fg:w="1"/><text x="72.6446%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.3946%" y="357" width="0.0796%" height="15" fill="rgb(225,136,42)" fg:x="910" fg:w="1"/><text x="72.6446%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.3946%" y="341" width="0.0796%" height="15" fill="rgb(231,194,28)" fg:x="910" fg:w="1"/><text x="72.6446%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="72.3946%" y="325" width="0.0796%" height="15" fill="rgb(248,141,22)" fg:x="910" fg:w="1"/><text x="72.6446%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.88%)</title><rect x="71.6786%" y="549" width="0.8751%" height="15" fill="rgb(222,133,1)" fg:x="901" fg:w="11"/><text x="71.9286%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="72.4741%" y="533" width="0.0796%" height="15" fill="rgb(222,50,8)" fg:x="911" fg:w="1"/><text x="72.7241%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.4741%" y="517" width="0.0796%" height="15" fill="rgb(215,67,27)" fg:x="911" fg:w="1"/><text x="72.7241%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="72.4741%" y="501" width="0.0796%" height="15" fill="rgb(220,102,37)" fg:x="911" fg:w="1"/><text x="72.7241%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="72.4741%" y="485" width="0.0796%" height="15" fill="rgb(222,64,25)" fg:x="911" fg:w="1"/><text x="72.7241%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.4741%" y="469" width="0.0796%" height="15" fill="rgb(215,40,16)" fg:x="911" fg:w="1"/><text x="72.7241%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="72.4741%" y="453" width="0.0796%" height="15" fill="rgb(252,171,3)" fg:x="911" fg:w="1"/><text x="72.7241%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="72.4741%" y="437" width="0.0796%" height="15" fill="rgb(252,199,51)" fg:x="911" fg:w="1"/><text x="72.7241%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.4741%" y="421" width="0.0796%" height="15" fill="rgb(244,42,10)" fg:x="911" fg:w="1"/><text x="72.7241%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.4741%" y="405" width="0.0796%" height="15" fill="rgb(243,169,37)" fg:x="911" fg:w="1"/><text x="72.7241%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.4741%" y="389" width="0.0796%" height="15" fill="rgb(241,140,9)" fg:x="911" fg:w="1"/><text x="72.7241%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.4741%" y="373" width="0.0796%" height="15" fill="rgb(241,66,40)" fg:x="911" fg:w="1"/><text x="72.7241%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.4741%" y="357" width="0.0796%" height="15" fill="rgb(220,50,41)" fg:x="911" fg:w="1"/><text x="72.7241%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.4741%" y="341" width="0.0796%" height="15" fill="rgb(214,104,9)" fg:x="911" fg:w="1"/><text x="72.7241%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4741%" y="325" width="0.0796%" height="15" fill="rgb(241,227,25)" fg:x="911" fg:w="1"/><text x="72.7241%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.5537%" y="533" width="0.1591%" height="15" fill="rgb(248,37,46)" fg:x="912" fg:w="2"/><text x="72.8037%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="72.5537%" y="517" width="0.1591%" height="15" fill="rgb(243,52,43)" fg:x="912" fg:w="2"/><text x="72.8037%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="72.5537%" y="501" width="0.1591%" height="15" fill="rgb(232,122,17)" fg:x="912" fg:w="2"/><text x="72.8037%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="72.5537%" y="485" width="0.1591%" height="15" fill="rgb(242,15,36)" fg:x="912" fg:w="2"/><text x="72.8037%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="72.5537%" y="469" width="0.1591%" height="15" fill="rgb(232,63,30)" fg:x="912" fg:w="2"/><text x="72.8037%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.5537%" y="453" width="0.1591%" height="15" fill="rgb(237,86,45)" fg:x="912" fg:w="2"/><text x="72.8037%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.5537%" y="437" width="0.1591%" height="15" fill="rgb(245,123,47)" fg:x="912" fg:w="2"/><text x="72.8037%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="72.5537%" y="421" width="0.1591%" height="15" fill="rgb(252,85,3)" fg:x="912" fg:w="2"/><text x="72.8037%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="72.5537%" y="405" width="0.1591%" height="15" fill="rgb(249,171,16)" fg:x="912" fg:w="2"/><text x="72.8037%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="72.5537%" y="389" width="0.1591%" height="15" fill="rgb(225,146,54)" fg:x="912" fg:w="2"/><text x="72.8037%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="72.5537%" y="373" width="0.1591%" height="15" fill="rgb(213,216,54)" fg:x="912" fg:w="2"/><text x="72.8037%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.5537%" y="357" width="0.1591%" height="15" fill="rgb(236,60,6)" fg:x="912" fg:w="2"/><text x="72.8037%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.7128%" y="517" width="0.0796%" height="15" fill="rgb(227,93,24)" fg:x="914" fg:w="1"/><text x="72.9628%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="72.7128%" y="533" width="0.1591%" height="15" fill="rgb(219,41,42)" fg:x="914" fg:w="2"/><text x="72.9628%" y="543.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="72.7924%" y="517" width="0.0796%" height="15" fill="rgb(229,52,32)" fg:x="915" fg:w="1"/><text x="73.0424%" y="527.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.7924%" y="501" width="0.0796%" height="15" fill="rgb(221,33,40)" fg:x="915" fg:w="1"/><text x="73.0424%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (5 samples, 0.40%)</title><rect x="72.5537%" y="549" width="0.3978%" height="15" fill="rgb(216,109,23)" fg:x="912" fg:w="5"/><text x="72.8037%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="72.8719%" y="533" width="0.0796%" height="15" fill="rgb(214,39,24)" fg:x="916" fg:w="1"/><text x="73.1219%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.8719%" y="517" width="0.0796%" height="15" fill="rgb(205,36,6)" fg:x="916" fg:w="1"/><text x="73.1219%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="72.8719%" y="501" width="0.0796%" height="15" fill="rgb(222,146,34)" fg:x="916" fg:w="1"/><text x="73.1219%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="72.8719%" y="485" width="0.0796%" height="15" fill="rgb(214,72,53)" fg:x="916" fg:w="1"/><text x="73.1219%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="72.8719%" y="469" width="0.0796%" height="15" fill="rgb(250,157,2)" fg:x="916" fg:w="1"/><text x="73.1219%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="72.8719%" y="453" width="0.0796%" height="15" fill="rgb(248,5,23)" fg:x="916" fg:w="1"/><text x="73.1219%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="72.8719%" y="437" width="0.0796%" height="15" fill="rgb(207,146,36)" fg:x="916" fg:w="1"/><text x="73.1219%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8719%" y="421" width="0.0796%" height="15" fill="rgb(205,184,43)" fg:x="916" fg:w="1"/><text x="73.1219%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="72.9515%" y="533" width="0.0796%" height="15" fill="rgb(251,150,46)" fg:x="917" fg:w="1"/><text x="73.2015%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="72.9515%" y="517" width="0.0796%" height="15" fill="rgb(227,224,12)" fg:x="917" fg:w="1"/><text x="73.2015%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.1106%" y="469" width="0.0796%" height="15" fill="rgb(215,26,26)" fg:x="919" fg:w="1"/><text x="73.3606%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1106%" y="453" width="0.0796%" height="15" fill="rgb(238,180,42)" fg:x="919" fg:w="1"/><text x="73.3606%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1106%" y="437" width="0.0796%" height="15" fill="rgb(218,148,48)" fg:x="919" fg:w="1"/><text x="73.3606%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1106%" y="421" width="0.0796%" height="15" fill="rgb(252,14,36)" fg:x="919" fg:w="1"/><text x="73.3606%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1106%" y="405" width="0.0796%" height="15" fill="rgb(224,35,37)" fg:x="919" fg:w="1"/><text x="73.3606%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1106%" y="389" width="0.0796%" height="15" fill="rgb(245,177,29)" fg:x="919" fg:w="1"/><text x="73.3606%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1106%" y="373" width="0.0796%" height="15" fill="rgb(221,149,34)" fg:x="919" fg:w="1"/><text x="73.3606%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1106%" y="357" width="0.0796%" height="15" fill="rgb(239,115,36)" fg:x="919" fg:w="1"/><text x="73.3606%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1106%" y="341" width="0.0796%" height="15" fill="rgb(226,196,40)" fg:x="919" fg:w="1"/><text x="73.3606%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1106%" y="325" width="0.0796%" height="15" fill="rgb(209,206,26)" fg:x="919" fg:w="1"/><text x="73.3606%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1106%" y="309" width="0.0796%" height="15" fill="rgb(225,13,33)" fg:x="919" fg:w="1"/><text x="73.3606%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1106%" y="293" width="0.0796%" height="15" fill="rgb(244,126,22)" fg:x="919" fg:w="1"/><text x="73.3606%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1106%" y="277" width="0.0796%" height="15" fill="rgb(248,213,25)" fg:x="919" fg:w="1"/><text x="73.3606%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="73.0310%" y="501" width="0.2387%" height="15" fill="rgb(222,94,36)" fg:x="918" fg:w="3"/><text x="73.2810%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.0310%" y="485" width="0.2387%" height="15" fill="rgb(212,114,20)" fg:x="918" fg:w="3"/><text x="73.2810%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1901%" y="469" width="0.0796%" height="15" fill="rgb(213,157,26)" fg:x="920" fg:w="1"/><text x="73.4401%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1901%" y="453" width="0.0796%" height="15" fill="rgb(211,130,1)" fg:x="920" fg:w="1"/><text x="73.4401%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1901%" y="437" width="0.0796%" height="15" fill="rgb(212,83,53)" fg:x="920" fg:w="1"/><text x="73.4401%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1901%" y="421" width="0.0796%" height="15" fill="rgb(238,129,10)" fg:x="920" fg:w="1"/><text x="73.4401%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1901%" y="405" width="0.0796%" height="15" fill="rgb(213,76,2)" fg:x="920" fg:w="1"/><text x="73.4401%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1901%" y="389" width="0.0796%" height="15" fill="rgb(220,189,22)" fg:x="920" fg:w="1"/><text x="73.4401%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1901%" y="373" width="0.0796%" height="15" fill="rgb(250,155,31)" fg:x="920" fg:w="1"/><text x="73.4401%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1901%" y="357" width="0.0796%" height="15" fill="rgb(218,184,22)" fg:x="920" fg:w="1"/><text x="73.4401%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1901%" y="341" width="0.0796%" height="15" fill="rgb(247,117,4)" fg:x="920" fg:w="1"/><text x="73.4401%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1901%" y="325" width="0.0796%" height="15" fill="rgb(253,185,37)" fg:x="920" fg:w="1"/><text x="73.4401%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1901%" y="309" width="0.0796%" height="15" fill="rgb(226,36,44)" fg:x="920" fg:w="1"/><text x="73.4401%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1901%" y="293" width="0.0796%" height="15" fill="rgb(224,7,24)" fg:x="920" fg:w="1"/><text x="73.4401%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="73.2697%" y="501" width="0.0796%" height="15" fill="rgb(239,201,0)" fg:x="921" fg:w="1"/><text x="73.5197%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.2697%" y="485" width="0.0796%" height="15" fill="rgb(218,56,33)" fg:x="921" fg:w="1"/><text x="73.5197%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.2697%" y="469" width="0.0796%" height="15" fill="rgb(210,187,29)" fg:x="921" fg:w="1"/><text x="73.5197%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="73.0310%" y="533" width="0.3978%" height="15" fill="rgb(206,158,49)" fg:x="918" fg:w="5"/><text x="73.2810%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="73.0310%" y="517" width="0.3978%" height="15" fill="rgb(234,36,5)" fg:x="918" fg:w="5"/><text x="73.2810%" y="527.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="73.3492%" y="501" width="0.0796%" height="15" fill="rgb(239,79,15)" fg:x="922" fg:w="1"/><text x="73.5992%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="73.3492%" y="485" width="0.0796%" height="15" fill="rgb(240,136,17)" fg:x="922" fg:w="1"/><text x="73.5992%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3492%" y="469" width="0.0796%" height="15" fill="rgb(227,83,12)" fg:x="922" fg:w="1"/><text x="73.5992%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (119 samples, 9.47%)</title><rect x="64.0414%" y="581" width="9.4670%" height="15" fill="rgb(212,2,8)" fg:x="805" fg:w="119"/><text x="64.2914%" y="591.50">&lt;plugins_core:..</text></g><g><title>plugins_core::location::change_location (52 samples, 4.14%)</title><rect x="69.3715%" y="565" width="4.1368%" height="15" fill="rgb(219,144,5)" fg:x="872" fg:w="52"/><text x="69.6215%" y="575.50">plugi..</text></g><g><title>plugins_core::location::Location::set (7 samples, 0.56%)</title><rect x="72.9515%" y="549" width="0.5569%" height="15" fill="rgb(253,204,27)" fg:x="917" fg:w="7"/><text x="73.2015%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="73.4288%" y="533" width="0.0796%" height="15" fill="rgb(228,188,17)" fg:x="923" fg:w="1"/><text x="73.6788%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="73.4288%" y="517" width="0.0796%" height="15" fill="rgb(208,198,33)" fg:x="923" fg:w="1"/><text x="73.6788%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4288%" y="501" width="0.0796%" height="15" fill="rgb(249,153,19)" fg:x="923" fg:w="1"/><text x="73.6788%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4288%" y="485" width="0.0796%" height="15" fill="rgb(222,193,37)" fg:x="923" fg:w="1"/><text x="73.6788%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4288%" y="469" width="0.0796%" height="15" fill="rgb(215,168,16)" fg:x="923" fg:w="1"/><text x="73.6788%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (314 samples, 24.98%)</title><rect x="48.6078%" y="773" width="24.9801%" height="15" fill="rgb(238,69,36)" fg:x="611" fg:w="314"/><text x="48.8578%" y="783.50">&lt;engine::session::Session as kernel::act..</text></g><g><title>kernel::plugins::mw::apply_middleware (314 samples, 24.98%)</title><rect x="48.6078%" y="757" width="24.9801%" height="15" fill="rgb(227,11,51)" fg:x="611" fg:w="314"/><text x="48.8578%" y="767.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (312 samples, 24.82%)</title><rect x="48.7669%" y="741" width="24.8210%" height="15" fill="rgb(214,204,5)" fg:x="613" fg:w="312"/><text x="49.0169%" y="751.50">kernel::plugins::mw::MiddlewareNext::han..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (312 samples, 24.82%)</title><rect x="48.7669%" y="725" width="24.8210%" height="15" fill="rgb(242,182,42)" fg:x="613" fg:w="312"/><text x="49.0169%" y="735.50">&lt;engine::session::ExpandSurroundingsMidd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (275 samples, 21.88%)</title><rect x="51.7104%" y="709" width="21.8775%" height="15" fill="rgb(212,208,46)" fg:x="650" fg:w="275"/><text x="51.9604%" y="719.50">kernel::plugins::mw::MiddlewareNext..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (275 samples, 21.88%)</title><rect x="51.7104%" y="693" width="21.8775%" height="15" fill="rgb(249,22,49)" fg:x="650" fg:w="275"/><text x="51.9604%" y="703.50">&lt;plugins_dynlib::DynamicMiddleware ..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (273 samples, 21.72%)</title><rect x="51.8695%" y="677" width="21.7184%" height="15" fill="rgb(226,130,52)" fg:x="652" fg:w="273"/><text x="52.1195%" y="687.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (273 samples, 21.72%)</title><rect x="51.8695%" y="661" width="21.7184%" height="15" fill="rgb(209,156,10)" fg:x="652" fg:w="273"/><text x="52.1195%" y="671.50">core::ops::function::FnOnce::call_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (272 samples, 21.64%)</title><rect x="51.9491%" y="645" width="21.6388%" height="15" fill="rgb(207,125,47)" fg:x="653" fg:w="272"/><text x="52.1991%" y="655.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (271 samples, 21.56%)</title><rect x="52.0286%" y="629" width="21.5593%" height="15" fill="rgb(221,117,28)" fg:x="654" fg:w="271"/><text x="52.2786%" y="639.50">core::ops::function::FnOnce::call_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (271 samples, 21.56%)</title><rect x="52.0286%" y="613" width="21.5593%" height="15" fill="rgb(221,170,12)" fg:x="654" fg:w="271"/><text x="52.2786%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (271 samples, 21.56%)</title><rect x="52.0286%" y="597" width="21.5593%" height="15" fill="rgb(241,222,52)" fg:x="654" fg:w="271"/><text x="52.2786%" y="607.50">&lt;engine::session::state::State as ..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="73.5084%" y="581" width="0.0796%" height="15" fill="rgb(219,52,6)" fg:x="924" fg:w="1"/><text x="73.7584%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5084%" y="565" width="0.0796%" height="15" fill="rgb(226,144,34)" fg:x="924" fg:w="1"/><text x="73.7584%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5879%" y="741" width="0.0796%" height="15" fill="rgb(231,179,27)" fg:x="925" fg:w="1"/><text x="73.8379%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5879%" y="725" width="0.0796%" height="15" fill="rgb(211,178,51)" fg:x="925" fg:w="1"/><text x="73.8379%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5879%" y="709" width="0.0796%" height="15" fill="rgb(233,141,5)" fg:x="925" fg:w="1"/><text x="73.8379%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.5879%" y="693" width="0.0796%" height="15" fill="rgb(214,10,9)" fg:x="925" fg:w="1"/><text x="73.8379%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.5879%" y="677" width="0.0796%" height="15" fill="rgb(209,0,1)" fg:x="925" fg:w="1"/><text x="73.8379%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.5879%" y="661" width="0.0796%" height="15" fill="rgb(207,82,30)" fg:x="925" fg:w="1"/><text x="73.8379%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5879%" y="645" width="0.0796%" height="15" fill="rgb(224,214,13)" fg:x="925" fg:w="1"/><text x="73.8379%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5879%" y="629" width="0.0796%" height="15" fill="rgb(237,84,33)" fg:x="925" fg:w="1"/><text x="73.8379%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.5879%" y="613" width="0.0796%" height="15" fill="rgb(231,25,9)" fg:x="925" fg:w="1"/><text x="73.8379%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.5879%" y="597" width="0.0796%" height="15" fill="rgb(207,51,8)" fg:x="925" fg:w="1"/><text x="73.8379%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.5879%" y="581" width="0.0796%" height="15" fill="rgb(234,189,54)" fg:x="925" fg:w="1"/><text x="73.8379%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.5879%" y="565" width="0.0796%" height="15" fill="rgb(214,188,52)" fg:x="925" fg:w="1"/><text x="73.8379%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.5879%" y="549" width="0.0796%" height="15" fill="rgb(214,17,11)" fg:x="925" fg:w="1"/><text x="73.8379%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6675%" y="693" width="0.0796%" height="15" fill="rgb(250,31,36)" fg:x="926" fg:w="1"/><text x="73.9175%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="73.6675%" y="709" width="0.1591%" height="15" fill="rgb(244,57,44)" fg:x="926" fg:w="2"/><text x="73.9175%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="73.7470%" y="693" width="0.0796%" height="15" fill="rgb(209,209,31)" fg:x="927" fg:w="1"/><text x="73.9970%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.7470%" y="677" width="0.0796%" height="15" fill="rgb(217,47,5)" fg:x="927" fg:w="1"/><text x="73.9970%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7470%" y="661" width="0.0796%" height="15" fill="rgb(214,78,42)" fg:x="927" fg:w="1"/><text x="73.9970%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="645" width="0.0796%" height="15" fill="rgb(226,15,23)" fg:x="927" fg:w="1"/><text x="73.9970%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7470%" y="629" width="0.0796%" height="15" fill="rgb(230,171,7)" fg:x="927" fg:w="1"/><text x="73.9970%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="613" width="0.0796%" height="15" fill="rgb(229,71,9)" fg:x="927" fg:w="1"/><text x="73.9970%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="73.7470%" y="597" width="0.0796%" height="15" fill="rgb(221,111,31)" fg:x="927" fg:w="1"/><text x="73.9970%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="581" width="0.0796%" height="15" fill="rgb(237,86,50)" fg:x="927" fg:w="1"/><text x="73.9970%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7470%" y="565" width="0.0796%" height="15" fill="rgb(234,49,32)" fg:x="927" fg:w="1"/><text x="73.9970%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7470%" y="549" width="0.0796%" height="15" fill="rgb(225,144,27)" fg:x="927" fg:w="1"/><text x="73.9970%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="73.7470%" y="533" width="0.0796%" height="15" fill="rgb(225,209,36)" fg:x="927" fg:w="1"/><text x="73.9970%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8266%" y="693" width="0.0796%" height="15" fill="rgb(218,109,14)" fg:x="928" fg:w="1"/><text x="74.0766%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="73.9061%" y="693" width="0.0796%" height="15" fill="rgb(238,186,42)" fg:x="929" fg:w="1"/><text x="74.1561%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9061%" y="677" width="0.0796%" height="15" fill="rgb(236,143,10)" fg:x="929" fg:w="1"/><text x="74.1561%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.9857%" y="693" width="0.0796%" height="15" fill="rgb(205,147,7)" fg:x="930" fg:w="1"/><text x="74.2357%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.0652%" y="597" width="0.0796%" height="15" fill="rgb(245,224,0)" fg:x="931" fg:w="1"/><text x="74.3152%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0652%" y="581" width="0.0796%" height="15" fill="rgb(213,208,32)" fg:x="931" fg:w="1"/><text x="74.3152%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (7 samples, 0.56%)</title><rect x="73.6675%" y="741" width="0.5569%" height="15" fill="rgb(208,212,4)" fg:x="926" fg:w="7"/><text x="73.9175%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="73.6675%" y="725" width="0.5569%" height="15" fill="rgb(236,143,49)" fg:x="926" fg:w="7"/><text x="73.9175%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="73.8266%" y="709" width="0.3978%" height="15" fill="rgb(228,152,33)" fg:x="928" fg:w="5"/><text x="74.0766%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.0652%" y="693" width="0.1591%" height="15" fill="rgb(236,132,39)" fg:x="931" fg:w="2"/><text x="74.3152%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="74.0652%" y="677" width="0.1591%" height="15" fill="rgb(228,176,23)" fg:x="931" fg:w="2"/><text x="74.3152%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.0652%" y="661" width="0.1591%" height="15" fill="rgb(229,34,18)" fg:x="931" fg:w="2"/><text x="74.3152%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.0652%" y="645" width="0.1591%" height="15" fill="rgb(244,81,37)" fg:x="931" fg:w="2"/><text x="74.3152%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.0652%" y="629" width="0.1591%" height="15" fill="rgb(242,79,32)" fg:x="931" fg:w="2"/><text x="74.3152%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.0652%" y="613" width="0.1591%" height="15" fill="rgb(245,15,51)" fg:x="931" fg:w="2"/><text x="74.3152%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1448%" y="597" width="0.0796%" height="15" fill="rgb(209,82,8)" fg:x="932" fg:w="1"/><text x="74.3948%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.1448%" y="581" width="0.0796%" height="15" fill="rgb(248,65,42)" fg:x="932" fg:w="1"/><text x="74.3948%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.1448%" y="565" width="0.0796%" height="15" fill="rgb(216,132,33)" fg:x="932" fg:w="1"/><text x="74.3948%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.1448%" y="549" width="0.0796%" height="15" fill="rgb(207,21,32)" fg:x="932" fg:w="1"/><text x="74.3948%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.1448%" y="533" width="0.0796%" height="15" fill="rgb(247,27,22)" fg:x="932" fg:w="1"/><text x="74.3948%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1448%" y="517" width="0.0796%" height="15" fill="rgb(254,72,41)" fg:x="932" fg:w="1"/><text x="74.3948%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.1448%" y="501" width="0.0796%" height="15" fill="rgb(250,6,31)" fg:x="932" fg:w="1"/><text x="74.3948%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.1448%" y="485" width="0.0796%" height="15" fill="rgb(224,124,0)" fg:x="932" fg:w="1"/><text x="74.3948%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.1448%" y="469" width="0.0796%" height="15" fill="rgb(228,7,24)" fg:x="932" fg:w="1"/><text x="74.3948%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.1448%" y="453" width="0.0796%" height="15" fill="rgb(250,202,22)" fg:x="932" fg:w="1"/><text x="74.3948%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.1448%" y="437" width="0.0796%" height="15" fill="rgb(214,89,5)" fg:x="932" fg:w="1"/><text x="74.3948%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.1448%" y="421" width="0.0796%" height="15" fill="rgb(228,82,34)" fg:x="932" fg:w="1"/><text x="74.3948%" y="431.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="74.2243%" y="725" width="0.2387%" height="15" fill="rgb(212,164,18)" fg:x="933" fg:w="3"/><text x="74.4743%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="74.2243%" y="709" width="0.2387%" height="15" fill="rgb(210,75,6)" fg:x="933" fg:w="3"/><text x="74.4743%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="74.2243%" y="693" width="0.2387%" height="15" fill="rgb(251,11,45)" fg:x="933" fg:w="3"/><text x="74.4743%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="74.3039%" y="677" width="0.1591%" height="15" fill="rgb(234,105,14)" fg:x="934" fg:w="2"/><text x="74.5539%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.3039%" y="661" width="0.1591%" height="15" fill="rgb(220,123,16)" fg:x="934" fg:w="2"/><text x="74.5539%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.3835%" y="645" width="0.0796%" height="15" fill="rgb(238,16,42)" fg:x="935" fg:w="1"/><text x="74.6335%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.3835%" y="629" width="0.0796%" height="15" fill="rgb(239,101,26)" fg:x="935" fg:w="1"/><text x="74.6335%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.3835%" y="613" width="0.0796%" height="15" fill="rgb(228,12,27)" fg:x="935" fg:w="1"/><text x="74.6335%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.3835%" y="597" width="0.0796%" height="15" fill="rgb(218,165,53)" fg:x="935" fg:w="1"/><text x="74.6335%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3835%" y="581" width="0.0796%" height="15" fill="rgb(250,44,27)" fg:x="935" fg:w="1"/><text x="74.6335%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.3835%" y="565" width="0.0796%" height="15" fill="rgb(229,69,35)" fg:x="935" fg:w="1"/><text x="74.6335%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3835%" y="549" width="0.0796%" height="15" fill="rgb(241,38,31)" fg:x="935" fg:w="1"/><text x="74.6335%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6221%" y="693" width="0.0796%" height="15" fill="rgb(224,152,13)" fg:x="938" fg:w="1"/><text x="74.8721%" y="703.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.7812%" y="581" width="0.0796%" height="15" fill="rgb(207,225,8)" fg:x="940" fg:w="1"/><text x="75.0312%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="74.7812%" y="565" width="0.0796%" height="15" fill="rgb(222,135,50)" fg:x="940" fg:w="1"/><text x="75.0312%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.7812%" y="645" width="0.1591%" height="15" fill="rgb(245,39,15)" fg:x="940" fg:w="2"/><text x="75.0312%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.7812%" y="629" width="0.1591%" height="15" fill="rgb(233,22,17)" fg:x="940" fg:w="2"/><text x="75.0312%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="74.7812%" y="613" width="0.1591%" height="15" fill="rgb(227,152,49)" fg:x="940" fg:w="2"/><text x="75.0312%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="74.7812%" y="597" width="0.1591%" height="15" fill="rgb(233,162,45)" fg:x="940" fg:w="2"/><text x="75.0312%" y="607.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="74.8608%" y="581" width="0.0796%" height="15" fill="rgb(217,44,48)" fg:x="941" fg:w="1"/><text x="75.1108%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="74.8608%" y="565" width="0.0796%" height="15" fill="rgb(253,41,35)" fg:x="941" fg:w="1"/><text x="75.1108%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.9403%" y="645" width="0.0796%" height="15" fill="rgb(254,32,37)" fg:x="942" fg:w="1"/><text x="75.1903%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="74.9403%" y="629" width="0.0796%" height="15" fill="rgb(250,9,9)" fg:x="942" fg:w="1"/><text x="75.1903%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.9403%" y="613" width="0.0796%" height="15" fill="rgb(212,37,16)" fg:x="942" fg:w="1"/><text x="75.1903%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.9403%" y="597" width="0.0796%" height="15" fill="rgb(235,142,51)" fg:x="942" fg:w="1"/><text x="75.1903%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="74.9403%" y="581" width="0.0796%" height="15" fill="rgb(250,225,53)" fg:x="942" fg:w="1"/><text x="75.1903%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.9403%" y="565" width="0.0796%" height="15" fill="rgb(207,188,48)" fg:x="942" fg:w="1"/><text x="75.1903%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="74.2243%" y="741" width="0.8751%" height="15" fill="rgb(222,25,21)" fg:x="933" fg:w="11"/><text x="74.4743%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="74.4630%" y="725" width="0.6364%" height="15" fill="rgb(249,112,5)" fg:x="936" fg:w="8"/><text x="74.7130%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="74.4630%" y="709" width="0.6364%" height="15" fill="rgb(242,11,22)" fg:x="936" fg:w="8"/><text x="74.7130%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="74.7017%" y="693" width="0.3978%" height="15" fill="rgb(217,125,14)" fg:x="939" fg:w="5"/><text x="74.9517%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="74.7017%" y="677" width="0.3978%" height="15" fill="rgb(239,92,14)" fg:x="939" fg:w="5"/><text x="74.9517%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="74.7017%" y="661" width="0.3978%" height="15" fill="rgb(232,145,17)" fg:x="939" fg:w="5"/><text x="74.9517%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="645" width="0.0796%" height="15" fill="rgb(250,158,16)" fg:x="943" fg:w="1"/><text x="75.2699%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0199%" y="629" width="0.0796%" height="15" fill="rgb(247,30,22)" fg:x="943" fg:w="1"/><text x="75.2699%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0199%" y="613" width="0.0796%" height="15" fill="rgb(219,215,46)" fg:x="943" fg:w="1"/><text x="75.2699%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="597" width="0.0796%" height="15" fill="rgb(237,40,53)" fg:x="943" fg:w="1"/><text x="75.2699%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0199%" y="581" width="0.0796%" height="15" fill="rgb(253,207,11)" fg:x="943" fg:w="1"/><text x="75.2699%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0199%" y="565" width="0.0796%" height="15" fill="rgb(242,16,9)" fg:x="943" fg:w="1"/><text x="75.2699%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="549" width="0.0796%" height="15" fill="rgb(237,94,35)" fg:x="943" fg:w="1"/><text x="75.2699%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0199%" y="533" width="0.0796%" height="15" fill="rgb(244,145,23)" fg:x="943" fg:w="1"/><text x="75.2699%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0199%" y="517" width="0.0796%" height="15" fill="rgb(209,93,17)" fg:x="943" fg:w="1"/><text x="75.2699%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="501" width="0.0796%" height="15" fill="rgb(205,201,0)" fg:x="943" fg:w="1"/><text x="75.2699%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.0199%" y="485" width="0.0796%" height="15" fill="rgb(225,198,48)" fg:x="943" fg:w="1"/><text x="75.2699%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.0199%" y="469" width="0.0796%" height="15" fill="rgb(211,131,51)" fg:x="943" fg:w="1"/><text x="75.2699%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0199%" y="453" width="0.0796%" height="15" fill="rgb(237,196,37)" fg:x="943" fg:w="1"/><text x="75.2699%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.1790%" y="629" width="0.0796%" height="15" fill="rgb(218,204,52)" fg:x="945" fg:w="1"/><text x="75.4290%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="75.0994%" y="693" width="0.2387%" height="15" fill="rgb(251,67,25)" fg:x="944" fg:w="3"/><text x="75.3494%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1790%" y="677" width="0.1591%" height="15" fill="rgb(219,87,2)" fg:x="945" fg:w="2"/><text x="75.4290%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1790%" y="661" width="0.1591%" height="15" fill="rgb(224,171,9)" fg:x="945" fg:w="2"/><text x="75.4290%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="75.1790%" y="645" width="0.1591%" height="15" fill="rgb(215,98,45)" fg:x="945" fg:w="2"/><text x="75.4290%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2586%" y="629" width="0.0796%" height="15" fill="rgb(231,48,23)" fg:x="946" fg:w="1"/><text x="75.5086%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (24 samples, 1.91%)</title><rect x="73.5879%" y="773" width="1.9093%" height="15" fill="rgb(233,138,42)" fg:x="925" fg:w="24"/><text x="73.8379%" y="783.50">&lt;..</text></g><g><title>engine::session::internal::Entities::add_persisted (24 samples, 1.91%)</title><rect x="73.5879%" y="757" width="1.9093%" height="15" fill="rgb(244,107,0)" fg:x="925" fg:w="24"/><text x="73.8379%" y="767.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="75.0994%" y="741" width="0.3978%" height="15" fill="rgb(224,15,0)" fg:x="944" fg:w="5"/><text x="75.3494%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="75.0994%" y="725" width="0.3978%" height="15" fill="rgb(218,71,35)" fg:x="944" fg:w="5"/><text x="75.3494%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="75.0994%" y="709" width="0.3978%" height="15" fill="rgb(244,32,22)" fg:x="944" fg:w="5"/><text x="75.3494%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.3381%" y="693" width="0.1591%" height="15" fill="rgb(232,209,34)" fg:x="947" fg:w="2"/><text x="75.5881%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.3381%" y="677" width="0.1591%" height="15" fill="rgb(232,54,38)" fg:x="947" fg:w="2"/><text x="75.5881%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.3381%" y="661" width="0.1591%" height="15" fill="rgb(208,83,16)" fg:x="947" fg:w="2"/><text x="75.5881%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.3381%" y="645" width="0.1591%" height="15" fill="rgb(208,70,33)" fg:x="947" fg:w="2"/><text x="75.5881%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.3381%" y="629" width="0.1591%" height="15" fill="rgb(247,38,12)" fg:x="947" fg:w="2"/><text x="75.5881%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.3381%" y="613" width="0.1591%" height="15" fill="rgb(206,34,42)" fg:x="947" fg:w="2"/><text x="75.5881%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.4972%" y="693" width="0.2387%" height="15" fill="rgb(226,75,43)" fg:x="949" fg:w="3"/><text x="75.7472%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.5768%" y="677" width="0.1591%" height="15" fill="rgb(223,109,12)" fg:x="950" fg:w="2"/><text x="75.8268%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.5768%" y="661" width="0.1591%" height="15" fill="rgb(218,53,16)" fg:x="950" fg:w="2"/><text x="75.8268%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5768%" y="645" width="0.1591%" height="15" fill="rgb(236,44,50)" fg:x="950" fg:w="2"/><text x="75.8268%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5768%" y="629" width="0.1591%" height="15" fill="rgb(211,163,12)" fg:x="950" fg:w="2"/><text x="75.8268%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5768%" y="613" width="0.1591%" height="15" fill="rgb(230,67,52)" fg:x="950" fg:w="2"/><text x="75.8268%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5768%" y="597" width="0.1591%" height="15" fill="rgb(224,204,24)" fg:x="950" fg:w="2"/><text x="75.8268%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.5768%" y="581" width="0.1591%" height="15" fill="rgb(210,50,27)" fg:x="950" fg:w="2"/><text x="75.8268%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5768%" y="565" width="0.1591%" height="15" fill="rgb(251,202,23)" fg:x="950" fg:w="2"/><text x="75.8268%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.5768%" y="549" width="0.1591%" height="15" fill="rgb(230,210,21)" fg:x="950" fg:w="2"/><text x="75.8268%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.5768%" y="533" width="0.1591%" height="15" fill="rgb(222,72,44)" fg:x="950" fg:w="2"/><text x="75.8268%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.6563%" y="517" width="0.0796%" height="15" fill="rgb(223,182,13)" fg:x="951" fg:w="1"/><text x="75.9063%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.6563%" y="501" width="0.0796%" height="15" fill="rgb(228,61,15)" fg:x="951" fg:w="1"/><text x="75.9063%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.7359%" y="517" width="0.0796%" height="15" fill="rgb(253,207,22)" fg:x="952" fg:w="1"/><text x="75.9859%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.7359%" y="501" width="0.0796%" height="15" fill="rgb(232,10,15)" fg:x="952" fg:w="1"/><text x="75.9859%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.40%)</title><rect x="75.4972%" y="725" width="0.3978%" height="15" fill="rgb(227,207,39)" fg:x="949" fg:w="5"/><text x="75.7472%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="75.4972%" y="709" width="0.3978%" height="15" fill="rgb(228,187,3)" fg:x="949" fg:w="5"/><text x="75.7472%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.7359%" y="693" width="0.1591%" height="15" fill="rgb(246,45,9)" fg:x="952" fg:w="2"/><text x="75.9859%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.7359%" y="677" width="0.1591%" height="15" fill="rgb(249,10,17)" fg:x="952" fg:w="2"/><text x="75.9859%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.7359%" y="661" width="0.1591%" height="15" fill="rgb(251,56,51)" fg:x="952" fg:w="2"/><text x="75.9859%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7359%" y="645" width="0.1591%" height="15" fill="rgb(232,51,36)" fg:x="952" fg:w="2"/><text x="75.9859%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7359%" y="629" width="0.1591%" height="15" fill="rgb(215,38,28)" fg:x="952" fg:w="2"/><text x="75.9859%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7359%" y="613" width="0.1591%" height="15" fill="rgb(218,5,35)" fg:x="952" fg:w="2"/><text x="75.9859%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7359%" y="597" width="0.1591%" height="15" fill="rgb(232,219,8)" fg:x="952" fg:w="2"/><text x="75.9859%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="75.7359%" y="581" width="0.1591%" height="15" fill="rgb(243,162,8)" fg:x="952" fg:w="2"/><text x="75.9859%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7359%" y="565" width="0.1591%" height="15" fill="rgb(218,86,32)" fg:x="952" fg:w="2"/><text x="75.9859%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="75.7359%" y="549" width="0.1591%" height="15" fill="rgb(218,179,51)" fg:x="952" fg:w="2"/><text x="75.9859%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7359%" y="533" width="0.1591%" height="15" fill="rgb(237,42,52)" fg:x="952" fg:w="2"/><text x="75.9859%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.8154%" y="517" width="0.0796%" height="15" fill="rgb(229,12,4)" fg:x="953" fg:w="1"/><text x="76.0654%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.9745%" y="533" width="0.0796%" height="15" fill="rgb(214,203,2)" fg:x="955" fg:w="1"/><text x="76.2245%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9745%" y="517" width="0.0796%" height="15" fill="rgb(241,11,44)" fg:x="955" fg:w="1"/><text x="76.2245%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="75.8950%" y="709" width="0.2387%" height="15" fill="rgb(221,106,48)" fg:x="954" fg:w="3"/><text x="76.1450%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8950%" y="693" width="0.2387%" height="15" fill="rgb(220,220,10)" fg:x="954" fg:w="3"/><text x="76.1450%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8950%" y="677" width="0.2387%" height="15" fill="rgb(228,220,44)" fg:x="954" fg:w="3"/><text x="76.1450%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8950%" y="661" width="0.2387%" height="15" fill="rgb(214,144,45)" fg:x="954" fg:w="3"/><text x="76.1450%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8950%" y="645" width="0.2387%" height="15" fill="rgb(224,142,28)" fg:x="954" fg:w="3"/><text x="76.1450%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8950%" y="629" width="0.2387%" height="15" fill="rgb(214,79,27)" fg:x="954" fg:w="3"/><text x="76.1450%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8950%" y="613" width="0.2387%" height="15" fill="rgb(208,173,30)" fg:x="954" fg:w="3"/><text x="76.1450%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8950%" y="597" width="0.2387%" height="15" fill="rgb(222,81,9)" fg:x="954" fg:w="3"/><text x="76.1450%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8950%" y="581" width="0.2387%" height="15" fill="rgb(217,152,25)" fg:x="954" fg:w="3"/><text x="76.1450%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8950%" y="565" width="0.2387%" height="15" fill="rgb(248,170,26)" fg:x="954" fg:w="3"/><text x="76.1450%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8950%" y="549" width="0.2387%" height="15" fill="rgb(206,151,5)" fg:x="954" fg:w="3"/><text x="76.1450%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.0541%" y="533" width="0.0796%" height="15" fill="rgb(216,7,52)" fg:x="956" fg:w="1"/><text x="76.3041%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.0541%" y="517" width="0.0796%" height="15" fill="rgb(228,27,44)" fg:x="956" fg:w="1"/><text x="76.3041%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.0541%" y="501" width="0.0796%" height="15" fill="rgb(208,221,38)" fg:x="956" fg:w="1"/><text x="76.3041%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.0541%" y="485" width="0.0796%" height="15" fill="rgb(240,59,23)" fg:x="956" fg:w="1"/><text x="76.3041%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.1337%" y="677" width="0.0796%" height="15" fill="rgb(210,127,41)" fg:x="957" fg:w="1"/><text x="76.3837%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2132%" y="645" width="0.0796%" height="15" fill="rgb(224,160,3)" fg:x="958" fg:w="1"/><text x="76.4632%" y="655.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.2928%" y="533" width="0.0796%" height="15" fill="rgb(215,228,26)" fg:x="959" fg:w="1"/><text x="76.5428%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.2928%" y="517" width="0.0796%" height="15" fill="rgb(218,107,38)" fg:x="959" fg:w="1"/><text x="76.5428%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.2928%" y="501" width="0.0796%" height="15" fill="rgb(246,159,42)" fg:x="959" fg:w="1"/><text x="76.5428%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="76.2928%" y="485" width="0.0796%" height="15" fill="rgb(251,23,41)" fg:x="959" fg:w="1"/><text x="76.5428%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="76.2928%" y="469" width="0.0796%" height="15" fill="rgb(246,94,53)" fg:x="959" fg:w="1"/><text x="76.5428%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2928%" y="453" width="0.0796%" height="15" fill="rgb(241,212,46)" fg:x="959" fg:w="1"/><text x="76.5428%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.2928%" y="629" width="0.1591%" height="15" fill="rgb(231,79,30)" fg:x="959" fg:w="2"/><text x="76.5428%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.2928%" y="613" width="0.1591%" height="15" fill="rgb(208,202,21)" fg:x="959" fg:w="2"/><text x="76.5428%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.2928%" y="597" width="0.1591%" height="15" fill="rgb(226,136,22)" fg:x="959" fg:w="2"/><text x="76.5428%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.2928%" y="581" width="0.1591%" height="15" fill="rgb(214,87,0)" fg:x="959" fg:w="2"/><text x="76.5428%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.2928%" y="565" width="0.1591%" height="15" fill="rgb(239,176,44)" fg:x="959" fg:w="2"/><text x="76.5428%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.2928%" y="549" width="0.1591%" height="15" fill="rgb(230,102,31)" fg:x="959" fg:w="2"/><text x="76.5428%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3723%" y="533" width="0.0796%" height="15" fill="rgb(219,40,19)" fg:x="960" fg:w="1"/><text x="76.6223%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4519%" y="629" width="0.0796%" height="15" fill="rgb(228,55,4)" fg:x="961" fg:w="1"/><text x="76.7019%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.5314%" y="629" width="0.0796%" height="15" fill="rgb(239,120,21)" fg:x="962" fg:w="1"/><text x="76.7814%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.5314%" y="613" width="0.0796%" height="15" fill="rgb(243,136,1)" fg:x="962" fg:w="1"/><text x="76.7814%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.5314%" y="597" width="0.0796%" height="15" fill="rgb(237,12,45)" fg:x="962" fg:w="1"/><text x="76.7814%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.5314%" y="581" width="0.0796%" height="15" fill="rgb(245,142,47)" fg:x="962" fg:w="1"/><text x="76.7814%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.6110%" y="549" width="0.0796%" height="15" fill="rgb(237,24,54)" fg:x="963" fg:w="1"/><text x="76.8610%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6110%" y="533" width="0.0796%" height="15" fill="rgb(234,164,40)" fg:x="963" fg:w="1"/><text x="76.8610%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.6110%" y="517" width="0.0796%" height="15" fill="rgb(242,95,12)" fg:x="963" fg:w="1"/><text x="76.8610%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (11 samples, 0.88%)</title><rect x="75.8950%" y="725" width="0.8751%" height="15" fill="rgb(238,75,28)" fg:x="954" fg:w="11"/><text x="76.1450%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="76.1337%" y="709" width="0.6364%" height="15" fill="rgb(236,4,26)" fg:x="957" fg:w="8"/><text x="76.3837%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="76.1337%" y="693" width="0.6364%" height="15" fill="rgb(252,158,20)" fg:x="957" fg:w="8"/><text x="76.3837%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.56%)</title><rect x="76.2132%" y="677" width="0.5569%" height="15" fill="rgb(231,67,31)" fg:x="958" fg:w="7"/><text x="76.4632%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="76.2132%" y="661" width="0.5569%" height="15" fill="rgb(241,151,13)" fg:x="958" fg:w="7"/><text x="76.4632%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="76.2928%" y="645" width="0.4773%" height="15" fill="rgb(242,25,36)" fg:x="959" fg:w="6"/><text x="76.5428%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6110%" y="629" width="0.1591%" height="15" fill="rgb(205,222,34)" fg:x="963" fg:w="2"/><text x="76.8610%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.6110%" y="613" width="0.1591%" height="15" fill="rgb(235,154,26)" fg:x="963" fg:w="2"/><text x="76.8610%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="76.6110%" y="597" width="0.1591%" height="15" fill="rgb(233,17,9)" fg:x="963" fg:w="2"/><text x="76.8610%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.6110%" y="581" width="0.1591%" height="15" fill="rgb(245,113,50)" fg:x="963" fg:w="2"/><text x="76.8610%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.6110%" y="565" width="0.1591%" height="15" fill="rgb(247,105,34)" fg:x="963" fg:w="2"/><text x="76.8610%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.6905%" y="549" width="0.0796%" height="15" fill="rgb(225,50,23)" fg:x="964" fg:w="1"/><text x="76.9405%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7701%" y="677" width="0.1591%" height="15" fill="rgb(253,189,32)" fg:x="965" fg:w="2"/><text x="77.0201%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7701%" y="661" width="0.1591%" height="15" fill="rgb(208,159,41)" fg:x="965" fg:w="2"/><text x="77.0201%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.7701%" y="645" width="0.1591%" height="15" fill="rgb(222,135,10)" fg:x="965" fg:w="2"/><text x="77.0201%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="76.7701%" y="629" width="0.1591%" height="15" fill="rgb(214,75,20)" fg:x="965" fg:w="2"/><text x="77.0201%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.0088%" y="581" width="0.0796%" height="15" fill="rgb(231,65,33)" fg:x="968" fg:w="1"/><text x="77.2588%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0088%" y="565" width="0.0796%" height="15" fill="rgb(251,139,6)" fg:x="968" fg:w="1"/><text x="77.2588%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.67%)</title><rect x="75.4972%" y="757" width="1.6706%" height="15" fill="rgb(225,220,53)" fg:x="949" fg:w="21"/><text x="75.7472%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (21 samples, 1.67%)</title><rect x="75.4972%" y="741" width="1.6706%" height="15" fill="rgb(244,73,26)" fg:x="949" fg:w="21"/><text x="75.7472%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="76.7701%" y="725" width="0.3978%" height="15" fill="rgb(244,98,34)" fg:x="965" fg:w="5"/><text x="77.0201%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="76.7701%" y="709" width="0.3978%" height="15" fill="rgb(211,131,5)" fg:x="965" fg:w="5"/><text x="77.0201%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="76.7701%" y="693" width="0.3978%" height="15" fill="rgb(238,14,50)" fg:x="965" fg:w="5"/><text x="77.0201%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.9292%" y="677" width="0.2387%" height="15" fill="rgb(206,132,52)" fg:x="967" fg:w="3"/><text x="77.1792%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.9292%" y="661" width="0.2387%" height="15" fill="rgb(228,200,17)" fg:x="967" fg:w="3"/><text x="77.1792%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.9292%" y="645" width="0.2387%" height="15" fill="rgb(209,53,28)" fg:x="967" fg:w="3"/><text x="77.1792%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.9292%" y="629" width="0.2387%" height="15" fill="rgb(240,214,22)" fg:x="967" fg:w="3"/><text x="77.1792%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="76.9292%" y="613" width="0.2387%" height="15" fill="rgb(213,217,46)" fg:x="967" fg:w="3"/><text x="77.1792%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.9292%" y="597" width="0.2387%" height="15" fill="rgb(241,159,53)" fg:x="967" fg:w="3"/><text x="77.1792%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.0883%" y="581" width="0.0796%" height="15" fill="rgb(241,70,32)" fg:x="969" fg:w="1"/><text x="77.3383%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.0883%" y="565" width="0.0796%" height="15" fill="rgb(233,117,50)" fg:x="969" fg:w="1"/><text x="77.3383%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.1679%" y="757" width="0.0796%" height="15" fill="rgb(211,114,15)" fg:x="970" fg:w="1"/><text x="77.4179%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.2474%" y="741" width="0.0796%" height="15" fill="rgb(254,0,36)" fg:x="971" fg:w="1"/><text x="77.4974%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3270%" y="565" width="0.0796%" height="15" fill="rgb(221,74,12)" fg:x="972" fg:w="1"/><text x="77.5770%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (25 samples, 1.99%)</title><rect x="75.4972%" y="773" width="1.9889%" height="15" fill="rgb(241,221,3)" fg:x="949" fg:w="25"/><text x="75.7472%" y="783.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="77.2474%" y="757" width="0.2387%" height="15" fill="rgb(252,91,23)" fg:x="971" fg:w="3"/><text x="77.4974%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="77.3270%" y="741" width="0.1591%" height="15" fill="rgb(232,1,25)" fg:x="972" fg:w="2"/><text x="77.5770%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="725" width="0.1591%" height="15" fill="rgb(253,145,25)" fg:x="972" fg:w="2"/><text x="77.5770%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.3270%" y="709" width="0.1591%" height="15" fill="rgb(226,43,53)" fg:x="972" fg:w="2"/><text x="77.5770%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="693" width="0.1591%" height="15" fill="rgb(245,116,39)" fg:x="972" fg:w="2"/><text x="77.5770%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="677" width="0.1591%" height="15" fill="rgb(231,205,33)" fg:x="972" fg:w="2"/><text x="77.5770%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="661" width="0.1591%" height="15" fill="rgb(238,96,15)" fg:x="972" fg:w="2"/><text x="77.5770%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.3270%" y="645" width="0.1591%" height="15" fill="rgb(212,80,14)" fg:x="972" fg:w="2"/><text x="77.5770%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="629" width="0.1591%" height="15" fill="rgb(209,118,24)" fg:x="972" fg:w="2"/><text x="77.5770%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="613" width="0.1591%" height="15" fill="rgb(234,176,14)" fg:x="972" fg:w="2"/><text x="77.5770%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="77.3270%" y="597" width="0.1591%" height="15" fill="rgb(207,145,21)" fg:x="972" fg:w="2"/><text x="77.5770%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="77.3270%" y="581" width="0.1591%" height="15" fill="rgb(218,58,54)" fg:x="972" fg:w="2"/><text x="77.5770%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4065%" y="565" width="0.0796%" height="15" fill="rgb(229,11,50)" fg:x="973" fg:w="1"/><text x="77.6565%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="77.4065%" y="549" width="0.0796%" height="15" fill="rgb(221,170,33)" fg:x="973" fg:w="1"/><text x="77.6565%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.4065%" y="533" width="0.0796%" height="15" fill="rgb(221,121,40)" fg:x="973" fg:w="1"/><text x="77.6565%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.4065%" y="517" width="0.0796%" height="15" fill="rgb(214,165,32)" fg:x="973" fg:w="1"/><text x="77.6565%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.4065%" y="501" width="0.0796%" height="15" fill="rgb(243,195,30)" fg:x="973" fg:w="1"/><text x="77.6565%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4065%" y="485" width="0.0796%" height="15" fill="rgb(238,0,27)" fg:x="973" fg:w="1"/><text x="77.6565%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4065%" y="469" width="0.0796%" height="15" fill="rgb(226,0,50)" fg:x="973" fg:w="1"/><text x="77.6565%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.4065%" y="453" width="0.0796%" height="15" fill="rgb(222,93,46)" fg:x="973" fg:w="1"/><text x="77.6565%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.4065%" y="437" width="0.0796%" height="15" fill="rgb(210,34,24)" fg:x="973" fg:w="1"/><text x="77.6565%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.4065%" y="421" width="0.0796%" height="15" fill="rgb(217,47,8)" fg:x="973" fg:w="1"/><text x="77.6565%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.4065%" y="405" width="0.0796%" height="15" fill="rgb(217,0,26)" fg:x="973" fg:w="1"/><text x="77.6565%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.4065%" y="389" width="0.0796%" height="15" fill="rgb(218,228,31)" fg:x="973" fg:w="1"/><text x="77.6565%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.4065%" y="373" width="0.0796%" height="15" fill="rgb(208,101,40)" fg:x="973" fg:w="1"/><text x="77.6565%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.4065%" y="357" width="0.0796%" height="15" fill="rgb(225,134,0)" fg:x="973" fg:w="1"/><text x="77.6565%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.4065%" y="341" width="0.0796%" height="15" fill="rgb(241,37,25)" fg:x="973" fg:w="1"/><text x="77.6565%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.4065%" y="325" width="0.0796%" height="15" fill="rgb(251,149,9)" fg:x="973" fg:w="1"/><text x="77.6565%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="77.4065%" y="309" width="0.0796%" height="15" fill="rgb(225,196,54)" fg:x="973" fg:w="1"/><text x="77.6565%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="77.4065%" y="293" width="0.0796%" height="15" fill="rgb(240,46,24)" fg:x="973" fg:w="1"/><text x="77.6565%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="77.4065%" y="277" width="0.0796%" height="15" fill="rgb(214,189,4)" fg:x="973" fg:w="1"/><text x="77.6565%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.4065%" y="261" width="0.0796%" height="15" fill="rgb(222,3,8)" fg:x="973" fg:w="1"/><text x="77.6565%" y="271.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="77.6452%" y="725" width="0.1591%" height="15" fill="rgb(250,163,6)" fg:x="976" fg:w="2"/><text x="77.8952%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="77.7247%" y="709" width="0.0796%" height="15" fill="rgb(225,23,45)" fg:x="977" fg:w="1"/><text x="77.9747%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.7247%" y="693" width="0.0796%" height="15" fill="rgb(225,177,23)" fg:x="977" fg:w="1"/><text x="77.9747%" y="703.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="77.7247%" y="677" width="0.0796%" height="15" fill="rgb(253,75,3)" fg:x="977" fg:w="1"/><text x="77.9747%" y="687.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="77.7247%" y="661" width="0.0796%" height="15" fill="rgb(237,85,4)" fg:x="977" fg:w="1"/><text x="77.9747%" y="671.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="77.7247%" y="645" width="0.0796%" height="15" fill="rgb(212,23,3)" fg:x="977" fg:w="1"/><text x="77.9747%" y="655.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.40%)</title><rect x="77.4861%" y="773" width="0.3978%" height="15" fill="rgb(250,127,19)" fg:x="974" fg:w="5"/><text x="77.7361%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.40%)</title><rect x="77.4861%" y="757" width="0.3978%" height="15" fill="rgb(222,82,14)" fg:x="974" fg:w="5"/><text x="77.7361%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="77.6452%" y="741" width="0.2387%" height="15" fill="rgb(213,63,47)" fg:x="976" fg:w="3"/><text x="77.8952%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="77.8043%" y="725" width="0.0796%" height="15" fill="rgb(219,132,41)" fg:x="978" fg:w="1"/><text x="78.0543%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="77.8043%" y="709" width="0.0796%" height="15" fill="rgb(251,205,16)" fg:x="978" fg:w="1"/><text x="78.0543%" y="719.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="77.8043%" y="693" width="0.0796%" height="15" fill="rgb(239,102,23)" fg:x="978" fg:w="1"/><text x="78.0543%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="77.8839%" y="773" width="0.0796%" height="15" fill="rgb(222,218,4)" fg:x="979" fg:w="1"/><text x="78.1339%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.9634%" y="757" width="0.0796%" height="15" fill="rgb(232,91,40)" fg:x="980" fg:w="1"/><text x="78.2134%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0430%" y="757" width="0.0796%" height="15" fill="rgb(238,170,50)" fg:x="981" fg:w="1"/><text x="78.2930%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.3612%" y="661" width="0.0796%" height="15" fill="rgb(243,52,25)" fg:x="985" fg:w="1"/><text x="78.6112%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3612%" y="645" width="0.0796%" height="15" fill="rgb(236,151,10)" fg:x="985" fg:w="1"/><text x="78.6112%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="77.9634%" y="773" width="0.5569%" height="15" fill="rgb(216,123,7)" fg:x="980" fg:w="7"/><text x="78.2134%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="78.1225%" y="757" width="0.3978%" height="15" fill="rgb(247,115,15)" fg:x="982" fg:w="5"/><text x="78.3725%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="78.2021%" y="741" width="0.3182%" height="15" fill="rgb(249,65,46)" fg:x="983" fg:w="4"/><text x="78.4521%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="78.2816%" y="725" width="0.2387%" height="15" fill="rgb(230,132,24)" fg:x="984" fg:w="3"/><text x="78.5316%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.2816%" y="709" width="0.2387%" height="15" fill="rgb(253,115,7)" fg:x="984" fg:w="3"/><text x="78.5316%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="78.3612%" y="693" width="0.1591%" height="15" fill="rgb(233,23,21)" fg:x="985" fg:w="2"/><text x="78.6112%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="78.3612%" y="677" width="0.1591%" height="15" fill="rgb(231,203,18)" fg:x="985" fg:w="2"/><text x="78.6112%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4407%" y="661" width="0.0796%" height="15" fill="rgb(233,19,15)" fg:x="986" fg:w="1"/><text x="78.6907%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.4407%" y="645" width="0.0796%" height="15" fill="rgb(213,12,4)" fg:x="986" fg:w="1"/><text x="78.6907%" y="655.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (381 samples, 30.31%)</title><rect x="48.2896%" y="789" width="30.3103%" height="15" fill="rgb(221,198,54)" fg:x="607" fg:w="381"/><text x="48.5396%" y="799.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.5203%" y="773" width="0.0796%" height="15" fill="rgb(247,189,16)" fg:x="987" fg:w="1"/><text x="78.7703%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="78.5203%" y="757" width="0.0796%" height="15" fill="rgb(213,82,46)" fg:x="987" fg:w="1"/><text x="78.7703%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="741" width="0.0796%" height="15" fill="rgb(216,129,40)" fg:x="987" fg:w="1"/><text x="78.7703%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5203%" y="725" width="0.0796%" height="15" fill="rgb(222,154,45)" fg:x="987" fg:w="1"/><text x="78.7703%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="709" width="0.0796%" height="15" fill="rgb(214,223,41)" fg:x="987" fg:w="1"/><text x="78.7703%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="693" width="0.0796%" height="15" fill="rgb(212,167,3)" fg:x="987" fg:w="1"/><text x="78.7703%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="677" width="0.0796%" height="15" fill="rgb(219,226,20)" fg:x="987" fg:w="1"/><text x="78.7703%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5203%" y="661" width="0.0796%" height="15" fill="rgb(231,29,48)" fg:x="987" fg:w="1"/><text x="78.7703%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="645" width="0.0796%" height="15" fill="rgb(224,12,4)" fg:x="987" fg:w="1"/><text x="78.7703%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="629" width="0.0796%" height="15" fill="rgb(217,180,30)" fg:x="987" fg:w="1"/><text x="78.7703%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="613" width="0.0796%" height="15" fill="rgb(237,137,17)" fg:x="987" fg:w="1"/><text x="78.7703%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5203%" y="597" width="0.0796%" height="15" fill="rgb(252,225,18)" fg:x="987" fg:w="1"/><text x="78.7703%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="581" width="0.0796%" height="15" fill="rgb(209,177,11)" fg:x="987" fg:w="1"/><text x="78.7703%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="565" width="0.0796%" height="15" fill="rgb(214,147,8)" fg:x="987" fg:w="1"/><text x="78.7703%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="549" width="0.0796%" height="15" fill="rgb(213,225,52)" fg:x="987" fg:w="1"/><text x="78.7703%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.5203%" y="533" width="0.0796%" height="15" fill="rgb(205,99,43)" fg:x="987" fg:w="1"/><text x="78.7703%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.5203%" y="517" width="0.0796%" height="15" fill="rgb(248,141,45)" fg:x="987" fg:w="1"/><text x="78.7703%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5203%" y="501" width="0.0796%" height="15" fill="rgb(233,198,44)" fg:x="987" fg:w="1"/><text x="78.7703%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.5203%" y="485" width="0.0796%" height="15" fill="rgb(231,176,38)" fg:x="987" fg:w="1"/><text x="78.7703%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.5203%" y="469" width="0.0796%" height="15" fill="rgb(209,31,1)" fg:x="987" fg:w="1"/><text x="78.7703%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.5203%" y="453" width="0.0796%" height="15" fill="rgb(246,42,27)" fg:x="987" fg:w="1"/><text x="78.7703%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.5203%" y="437" width="0.0796%" height="15" fill="rgb(244,104,27)" fg:x="987" fg:w="1"/><text x="78.7703%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.5203%" y="421" width="0.0796%" height="15" fill="rgb(209,14,27)" fg:x="987" fg:w="1"/><text x="78.7703%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5203%" y="405" width="0.0796%" height="15" fill="rgb(205,170,50)" fg:x="987" fg:w="1"/><text x="78.7703%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.5203%" y="389" width="0.0796%" height="15" fill="rgb(241,127,20)" fg:x="987" fg:w="1"/><text x="78.7703%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.5203%" y="373" width="0.0796%" height="15" fill="rgb(230,72,5)" fg:x="987" fg:w="1"/><text x="78.7703%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.5203%" y="357" width="0.0796%" height="15" fill="rgb(231,221,3)" fg:x="987" fg:w="1"/><text x="78.7703%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="78.5203%" y="341" width="0.0796%" height="15" fill="rgb(232,150,49)" fg:x="987" fg:w="1"/><text x="78.7703%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="78.5998%" y="773" width="0.1591%" height="15" fill="rgb(225,13,46)" fg:x="988" fg:w="2"/><text x="78.8498%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (991 samples, 78.84%)</title><rect x="0.0000%" y="837" width="78.8385%" height="15" fill="rgb(236,192,49)" fg:x="0" fg:w="991"/><text x="0.2500%" y="847.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (991 samples, 78.84%)</title><rect x="0.0000%" y="821" width="78.8385%" height="15" fill="rgb(242,107,14)" fg:x="0" fg:w="991"/><text x="0.2500%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (990 samples, 78.76%)</title><rect x="0.0796%" y="805" width="78.7589%" height="15" fill="rgb(251,185,35)" fg:x="1" fg:w="990"/><text x="0.3296%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (3 samples, 0.24%)</title><rect x="78.5998%" y="789" width="0.2387%" height="15" fill="rgb(212,128,8)" fg:x="988" fg:w="3"/><text x="78.8498%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="78.7589%" y="773" width="0.0796%" height="15" fill="rgb(215,223,6)" fg:x="990" fg:w="1"/><text x="79.0089%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.7589%" y="757" width="0.0796%" height="15" fill="rgb(216,23,45)" fg:x="990" fg:w="1"/><text x="79.0089%" y="767.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.7589%" y="741" width="0.0796%" height="15" fill="rgb(215,71,45)" fg:x="990" fg:w="1"/><text x="79.0089%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8385%" y="773" width="0.0796%" height="15" fill="rgb(224,2,48)" fg:x="991" fg:w="1"/><text x="79.0885%" y="783.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="78.9976%" y="677" width="0.3182%" height="15" fill="rgb(218,48,8)" fg:x="993" fg:w="4"/><text x="79.2476%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="79.3158%" y="677" width="0.1591%" height="15" fill="rgb(254,37,27)" fg:x="997" fg:w="2"/><text x="79.5658%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3954%" y="661" width="0.0796%" height="15" fill="rgb(237,112,2)" fg:x="998" fg:w="1"/><text x="79.6454%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.4749%" y="629" width="0.0796%" height="15" fill="rgb(243,64,54)" fg:x="999" fg:w="1"/><text x="79.7249%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.4749%" y="613" width="0.0796%" height="15" fill="rgb(211,93,4)" fg:x="999" fg:w="1"/><text x="79.7249%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="78.8385%" y="789" width="0.8751%" height="15" fill="rgb(249,127,30)" fg:x="991" fg:w="11"/><text x="79.0885%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (10 samples, 0.80%)</title><rect x="78.9181%" y="773" width="0.7955%" height="15" fill="rgb(248,76,17)" fg:x="992" fg:w="10"/><text x="79.1681%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="78.9181%" y="757" width="0.7955%" height="15" fill="rgb(244,153,49)" fg:x="992" fg:w="10"/><text x="79.1681%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (10 samples, 0.80%)</title><rect x="78.9181%" y="741" width="0.7955%" height="15" fill="rgb(231,94,34)" fg:x="992" fg:w="10"/><text x="79.1681%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="78.9181%" y="725" width="0.7955%" height="15" fill="rgb(253,162,40)" fg:x="992" fg:w="10"/><text x="79.1681%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="78.9976%" y="709" width="0.7160%" height="15" fill="rgb(219,194,14)" fg:x="993" fg:w="9"/><text x="79.2476%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="78.9976%" y="693" width="0.7160%" height="15" fill="rgb(226,80,42)" fg:x="993" fg:w="9"/><text x="79.2476%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.4749%" y="677" width="0.2387%" height="15" fill="rgb(208,108,5)" fg:x="999" fg:w="3"/><text x="79.7249%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.4749%" y="661" width="0.2387%" height="15" fill="rgb(209,204,33)" fg:x="999" fg:w="3"/><text x="79.7249%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="79.4749%" y="645" width="0.2387%" height="15" fill="rgb(232,22,14)" fg:x="999" fg:w="3"/><text x="79.7249%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.5545%" y="629" width="0.1591%" height="15" fill="rgb(236,139,41)" fg:x="1000" fg:w="2"/><text x="79.8045%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.6340%" y="613" width="0.0796%" height="15" fill="rgb(220,91,0)" fg:x="1001" fg:w="1"/><text x="79.8840%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6340%" y="597" width="0.0796%" height="15" fill="rgb(243,200,48)" fg:x="1001" fg:w="1"/><text x="79.8840%" y="607.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="79.7136%" y="709" width="0.2387%" height="15" fill="rgb(237,172,41)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="719.50"></text></g><g><title>libloading::safe::Library::new (3 samples, 0.24%)</title><rect x="79.7136%" y="693" width="0.2387%" height="15" fill="rgb(247,152,34)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="703.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="79.7136%" y="677" width="0.2387%" height="15" fill="rgb(205,88,40)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="687.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="79.7136%" y="661" width="0.2387%" height="15" fill="rgb(223,30,13)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.7136%" y="645" width="0.2387%" height="15" fill="rgb(249,7,18)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="655.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.7136%" y="629" width="0.2387%" height="15" fill="rgb(242,185,6)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="639.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="79.7136%" y="613" width="0.2387%" height="15" fill="rgb(234,115,47)" fg:x="1002" fg:w="3"/><text x="79.9636%" y="623.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (4 samples, 0.32%)</title><rect x="79.7136%" y="789" width="0.3182%" height="15" fill="rgb(213,98,2)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="799.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (4 samples, 0.32%)</title><rect x="79.7136%" y="773" width="0.3182%" height="15" fill="rgb(237,162,23)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="783.50"></text></g><g><title>engine::session::Session::new (4 samples, 0.32%)</title><rect x="79.7136%" y="757" width="0.3182%" height="15" fill="rgb(240,174,26)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="767.50"></text></g><g><title>engine::session::Session::initialize (4 samples, 0.32%)</title><rect x="79.7136%" y="741" width="0.3182%" height="15" fill="rgb(249,90,45)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (4 samples, 0.32%)</title><rect x="79.7136%" y="725" width="0.3182%" height="15" fill="rgb(212,126,4)" fg:x="1002" fg:w="4"/><text x="79.9636%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="79.9523%" y="709" width="0.0796%" height="15" fill="rgb(236,98,48)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="719.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="79.9523%" y="693" width="0.0796%" height="15" fill="rgb(250,14,51)" fg:x="1005" fg:w="1"/><text x="80.2023%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0318%" y="773" width="0.0796%" height="15" fill="rgb(236,2,16)" fg:x="1006" fg:w="1"/><text x="80.2818%" y="783.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.1909%" y="661" width="0.0796%" height="15" fill="rgb(250,146,3)" fg:x="1008" fg:w="1"/><text x="80.4409%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.1909%" y="645" width="0.0796%" height="15" fill="rgb(233,72,0)" fg:x="1008" fg:w="1"/><text x="80.4409%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.1909%" y="629" width="0.0796%" height="15" fill="rgb(249,172,7)" fg:x="1008" fg:w="1"/><text x="80.4409%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.2705%" y="645" width="0.0796%" height="15" fill="rgb(224,213,17)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.2705%" y="629" width="0.0796%" height="15" fill="rgb(221,52,2)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.2705%" y="613" width="0.0796%" height="15" fill="rgb(220,8,41)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.2705%" y="597" width="0.0796%" height="15" fill="rgb(230,207,34)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.2705%" y="581" width="0.0796%" height="15" fill="rgb(240,157,11)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.2705%" y="565" width="0.0796%" height="15" fill="rgb(243,209,15)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.2705%" y="549" width="0.0796%" height="15" fill="rgb(251,191,33)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.2705%" y="533" width="0.0796%" height="15" fill="rgb(217,58,8)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.2705%" y="517" width="0.0796%" height="15" fill="rgb(210,35,1)" fg:x="1009" fg:w="1"/><text x="80.5205%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.3500%" y="645" width="0.1591%" height="15" fill="rgb(231,62,7)" fg:x="1010" fg:w="2"/><text x="80.6000%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4296%" y="629" width="0.0796%" height="15" fill="rgb(207,73,10)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.4296%" y="613" width="0.0796%" height="15" fill="rgb(216,178,40)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4296%" y="597" width="0.0796%" height="15" fill="rgb(238,220,1)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.4296%" y="581" width="0.0796%" height="15" fill="rgb(246,169,39)" fg:x="1011" fg:w="1"/><text x="80.6796%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (6 samples, 0.48%)</title><rect x="80.1114%" y="693" width="0.4773%" height="15" fill="rgb(240,186,45)" fg:x="1007" fg:w="6"/><text x="80.3614%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="80.1114%" y="677" width="0.4773%" height="15" fill="rgb(225,14,29)" fg:x="1007" fg:w="6"/><text x="80.3614%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.2705%" y="661" width="0.3182%" height="15" fill="rgb(243,96,26)" fg:x="1009" fg:w="4"/><text x="80.5205%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.5091%" y="645" width="0.0796%" height="15" fill="rgb(234,139,10)" fg:x="1012" fg:w="1"/><text x="80.7591%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5887%" y="661" width="0.0796%" height="15" fill="rgb(235,208,23)" fg:x="1013" fg:w="1"/><text x="80.8387%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.5887%" y="693" width="0.1591%" height="15" fill="rgb(230,140,47)" fg:x="1013" fg:w="2"/><text x="80.8387%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="80.5887%" y="677" width="0.1591%" height="15" fill="rgb(241,227,54)" fg:x="1013" fg:w="2"/><text x="80.8387%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.6683%" y="661" width="0.0796%" height="15" fill="rgb(221,210,40)" fg:x="1014" fg:w="1"/><text x="80.9183%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.8274%" y="565" width="0.0796%" height="15" fill="rgb(207,52,1)" fg:x="1016" fg:w="1"/><text x="81.0774%" y="575.50"></text></g><g><title>engine::session::Session::flush (11 samples, 0.88%)</title><rect x="80.1114%" y="773" width="0.8751%" height="15" fill="rgb(243,147,42)" fg:x="1007" fg:w="11"/><text x="80.3614%" y="783.50"></text></g><g><title>engine::session::state::State::close (11 samples, 0.88%)</title><rect x="80.1114%" y="757" width="0.8751%" height="15" fill="rgb(245,93,7)" fg:x="1007" fg:w="11"/><text x="80.3614%" y="767.50"></text></g><g><title>engine::session::state::State::flush_entities (11 samples, 0.88%)</title><rect x="80.1114%" y="741" width="0.8751%" height="15" fill="rgb(243,119,13)" fg:x="1007" fg:w="11"/><text x="80.3614%" y="751.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (11 samples, 0.88%)</title><rect x="80.1114%" y="725" width="0.8751%" height="15" fill="rgb(228,164,28)" fg:x="1007" fg:w="11"/><text x="80.3614%" y="735.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (11 samples, 0.88%)</title><rect x="80.1114%" y="709" width="0.8751%" height="15" fill="rgb(234,37,39)" fg:x="1007" fg:w="11"/><text x="80.3614%" y="719.50"></text></g><g><title>kernel::model::any_entity_changes (3 samples, 0.24%)</title><rect x="80.7478%" y="693" width="0.2387%" height="15" fill="rgb(246,155,10)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (3 samples, 0.24%)</title><rect x="80.7478%" y="677" width="0.2387%" height="15" fill="rgb(208,140,53)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="80.7478%" y="661" width="0.2387%" height="15" fill="rgb(234,107,29)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="80.7478%" y="645" width="0.2387%" height="15" fill="rgb(217,45,5)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="80.7478%" y="629" width="0.2387%" height="15" fill="rgb(251,168,5)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="80.7478%" y="613" width="0.2387%" height="15" fill="rgb(242,96,14)" fg:x="1015" fg:w="3"/><text x="80.9978%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.8274%" y="597" width="0.1591%" height="15" fill="rgb(231,148,6)" fg:x="1016" fg:w="2"/><text x="81.0774%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.8274%" y="581" width="0.1591%" height="15" fill="rgb(249,100,2)" fg:x="1016" fg:w="2"/><text x="81.0774%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9069%" y="565" width="0.0796%" height="15" fill="rgb(212,22,52)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.9069%" y="549" width="0.0796%" height="15" fill="rgb(212,97,14)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9069%" y="533" width="0.0796%" height="15" fill="rgb(212,24,14)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="80.9069%" y="517" width="0.0796%" height="15" fill="rgb(239,209,43)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9069%" y="501" width="0.0796%" height="15" fill="rgb(226,211,38)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.9069%" y="485" width="0.0796%" height="15" fill="rgb(216,118,11)" fg:x="1017" fg:w="1"/><text x="81.1569%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="80.9865%" y="741" width="0.0796%" height="15" fill="rgb(223,214,43)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="80.9865%" y="725" width="0.0796%" height="15" fill="rgb(213,225,15)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.9865%" y="709" width="0.0796%" height="15" fill="rgb(233,115,42)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.9865%" y="693" width="0.0796%" height="15" fill="rgb(229,93,16)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9865%" y="677" width="0.0796%" height="15" fill="rgb(220,114,48)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.9865%" y="661" width="0.0796%" height="15" fill="rgb(253,78,24)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.9865%" y="645" width="0.0796%" height="15" fill="rgb(206,29,19)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.9865%" y="629" width="0.0796%" height="15" fill="rgb(220,96,19)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9865%" y="613" width="0.0796%" height="15" fill="rgb(222,62,18)" fg:x="1018" fg:w="1"/><text x="81.2365%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="81.0660%" y="725" width="0.0796%" height="15" fill="rgb(243,4,41)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="81.0660%" y="709" width="0.0796%" height="15" fill="rgb(232,199,53)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="81.0660%" y="693" width="0.0796%" height="15" fill="rgb(212,18,26)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="81.0660%" y="677" width="0.0796%" height="15" fill="rgb(218,30,49)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0660%" y="661" width="0.0796%" height="15" fill="rgb(250,154,52)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0660%" y="645" width="0.0796%" height="15" fill="rgb(218,176,16)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0660%" y="629" width="0.0796%" height="15" fill="rgb(215,61,51)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0660%" y="613" width="0.0796%" height="15" fill="rgb(234,40,53)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="81.0660%" y="597" width="0.0796%" height="15" fill="rgb(214,142,25)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0660%" y="581" width="0.0796%" height="15" fill="rgb(206,61,7)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0660%" y="565" width="0.0796%" height="15" fill="rgb(245,225,1)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="81.0660%" y="549" width="0.0796%" height="15" fill="rgb(224,122,37)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.0660%" y="533" width="0.0796%" height="15" fill="rgb(209,221,12)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.0660%" y="517" width="0.0796%" height="15" fill="rgb(248,70,2)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="81.0660%" y="501" width="0.0796%" height="15" fill="rgb(227,173,19)" fg:x="1019" fg:w="1"/><text x="81.3160%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="80.9865%" y="757" width="0.3182%" height="15" fill="rgb(228,217,53)" fg:x="1018" fg:w="4"/><text x="81.2365%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.0660%" y="741" width="0.2387%" height="15" fill="rgb(248,43,46)" fg:x="1019" fg:w="3"/><text x="81.3160%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="81.1456%" y="725" width="0.1591%" height="15" fill="rgb(236,202,32)" fg:x="1020" fg:w="2"/><text x="81.3956%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2251%" y="709" width="0.0796%" height="15" fill="rgb(231,220,0)" fg:x="1021" fg:w="1"/><text x="81.4751%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.2251%" y="693" width="0.0796%" height="15" fill="rgb(235,11,31)" fg:x="1021" fg:w="1"/><text x="81.4751%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="81.2251%" y="677" width="0.0796%" height="15" fill="rgb(247,159,37)" fg:x="1021" fg:w="1"/><text x="81.4751%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2251%" y="661" width="0.0796%" height="15" fill="rgb(246,179,15)" fg:x="1021" fg:w="1"/><text x="81.4751%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.3047%" y="709" width="0.0796%" height="15" fill="rgb(221,193,41)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.3047%" y="693" width="0.0796%" height="15" fill="rgb(228,30,1)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3047%" y="677" width="0.0796%" height="15" fill="rgb(233,226,32)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3047%" y="661" width="0.0796%" height="15" fill="rgb(238,110,42)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3047%" y="645" width="0.0796%" height="15" fill="rgb(233,141,16)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3047%" y="629" width="0.0796%" height="15" fill="rgb(212,227,9)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3047%" y="613" width="0.0796%" height="15" fill="rgb(247,119,37)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.3047%" y="597" width="0.0796%" height="15" fill="rgb(219,101,42)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3047%" y="581" width="0.0796%" height="15" fill="rgb(252,226,3)" fg:x="1022" fg:w="1"/><text x="81.5547%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="81.3047%" y="741" width="0.1591%" height="15" fill="rgb(229,50,28)" fg:x="1022" fg:w="2"/><text x="81.5547%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="81.3047%" y="725" width="0.1591%" height="15" fill="rgb(249,122,7)" fg:x="1022" fg:w="2"/><text x="81.5547%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="81.3842%" y="709" width="0.0796%" height="15" fill="rgb(207,101,46)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.3842%" y="693" width="0.0796%" height="15" fill="rgb(249,90,48)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.3842%" y="677" width="0.0796%" height="15" fill="rgb(231,10,48)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3842%" y="661" width="0.0796%" height="15" fill="rgb(234,120,19)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3842%" y="645" width="0.0796%" height="15" fill="rgb(212,221,36)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.3842%" y="629" width="0.0796%" height="15" fill="rgb(230,151,52)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3842%" y="613" width="0.0796%" height="15" fill="rgb(246,35,38)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.3842%" y="597" width="0.0796%" height="15" fill="rgb(208,110,54)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.3842%" y="581" width="0.0796%" height="15" fill="rgb(250,206,40)" fg:x="1023" fg:w="1"/><text x="81.6342%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="80.9865%" y="773" width="0.5569%" height="15" fill="rgb(225,204,22)" fg:x="1018" fg:w="7"/><text x="81.2365%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (3 samples, 0.24%)</title><rect x="81.3047%" y="757" width="0.2387%" height="15" fill="rgb(220,29,11)" fg:x="1022" fg:w="3"/><text x="81.5547%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="81.4638%" y="741" width="0.0796%" height="15" fill="rgb(254,133,9)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="81.4638%" y="725" width="0.0796%" height="15" fill="rgb(254,178,33)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.4638%" y="709" width="0.0796%" height="15" fill="rgb(239,217,37)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.4638%" y="693" width="0.0796%" height="15" fill="rgb(210,41,5)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.4638%" y="677" width="0.0796%" height="15" fill="rgb(227,23,47)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.4638%" y="661" width="0.0796%" height="15" fill="rgb(215,18,46)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4638%" y="645" width="0.0796%" height="15" fill="rgb(247,172,0)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4638%" y="629" width="0.0796%" height="15" fill="rgb(254,23,27)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4638%" y="613" width="0.0796%" height="15" fill="rgb(223,61,6)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4638%" y="597" width="0.0796%" height="15" fill="rgb(237,65,24)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="81.4638%" y="581" width="0.0796%" height="15" fill="rgb(238,133,22)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4638%" y="565" width="0.0796%" height="15" fill="rgb(217,219,5)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.4638%" y="549" width="0.0796%" height="15" fill="rgb(254,24,44)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.4638%" y="533" width="0.0796%" height="15" fill="rgb(217,136,50)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4638%" y="517" width="0.0796%" height="15" fill="rgb(243,85,15)" fg:x="1024" fg:w="1"/><text x="81.7138%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5434%" y="661" width="0.0796%" height="15" fill="rgb(224,85,42)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5434%" y="645" width="0.0796%" height="15" fill="rgb(237,142,36)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5434%" y="629" width="0.0796%" height="15" fill="rgb(215,131,52)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.5434%" y="613" width="0.0796%" height="15" fill="rgb(216,124,50)" fg:x="1025" fg:w="1"/><text x="81.7934%" y="623.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="81.5434%" y="773" width="0.2387%" height="15" fill="rgb(223,61,20)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="81.5434%" y="757" width="0.2387%" height="15" fill="rgb(250,62,47)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="81.5434%" y="741" width="0.2387%" height="15" fill="rgb(225,180,21)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="81.5434%" y="725" width="0.2387%" height="15" fill="rgb(210,89,33)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="81.5434%" y="709" width="0.2387%" height="15" fill="rgb(205,215,50)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="719.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="81.5434%" y="693" width="0.2387%" height="15" fill="rgb(207,191,48)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="81.5434%" y="677" width="0.2387%" height="15" fill="rgb(247,32,5)" fg:x="1025" fg:w="3"/><text x="81.7934%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6229%" y="661" width="0.1591%" height="15" fill="rgb(210,113,39)" fg:x="1026" fg:w="2"/><text x="81.8729%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.6229%" y="645" width="0.1591%" height="15" fill="rgb(242,181,23)" fg:x="1026" fg:w="2"/><text x="81.8729%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="81.6229%" y="629" width="0.1591%" height="15" fill="rgb(215,58,22)" fg:x="1026" fg:w="2"/><text x="81.8729%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="81.6229%" y="613" width="0.1591%" height="15" fill="rgb(236,31,11)" fg:x="1026" fg:w="2"/><text x="81.8729%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="81.6229%" y="597" width="0.1591%" height="15" fill="rgb(244,198,15)" fg:x="1026" fg:w="2"/><text x="81.8729%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7025%" y="581" width="0.0796%" height="15" fill="rgb(230,142,36)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.7025%" y="565" width="0.0796%" height="15" fill="rgb(219,48,29)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7025%" y="549" width="0.0796%" height="15" fill="rgb(237,179,43)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7025%" y="533" width="0.0796%" height="15" fill="rgb(221,67,37)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7025%" y="517" width="0.0796%" height="15" fill="rgb(222,217,18)" fg:x="1027" fg:w="1"/><text x="81.9525%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="81.7820%" y="757" width="0.0796%" height="15" fill="rgb(235,107,38)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.7820%" y="741" width="0.0796%" height="15" fill="rgb(227,110,50)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.7820%" y="725" width="0.0796%" height="15" fill="rgb(224,176,42)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.7820%" y="709" width="0.0796%" height="15" fill="rgb(250,34,11)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7820%" y="693" width="0.0796%" height="15" fill="rgb(253,107,24)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="81.7820%" y="677" width="0.0796%" height="15" fill="rgb(213,146,11)" fg:x="1028" fg:w="1"/><text x="82.0320%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="81.8616%" y="709" width="0.0796%" height="15" fill="rgb(216,88,42)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="81.8616%" y="693" width="0.0796%" height="15" fill="rgb(231,37,19)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.8616%" y="677" width="0.0796%" height="15" fill="rgb(213,154,5)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="81.8616%" y="661" width="0.0796%" height="15" fill="rgb(234,102,6)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="81.8616%" y="645" width="0.0796%" height="15" fill="rgb(206,125,39)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="81.8616%" y="629" width="0.0796%" height="15" fill="rgb(254,216,50)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="81.8616%" y="613" width="0.0796%" height="15" fill="rgb(205,65,40)" fg:x="1029" fg:w="1"/><text x="82.1116%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="81.9411%" y="677" width="0.0796%" height="15" fill="rgb(244,217,7)" fg:x="1030" fg:w="1"/><text x="82.1911%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.9411%" y="661" width="0.0796%" height="15" fill="rgb(220,203,19)" fg:x="1030" fg:w="1"/><text x="82.1911%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0207%" y="645" width="0.0796%" height="15" fill="rgb(254,124,45)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.0207%" y="629" width="0.0796%" height="15" fill="rgb(236,111,39)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.0207%" y="613" width="0.0796%" height="15" fill="rgb(243,49,31)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.0207%" y="597" width="0.0796%" height="15" fill="rgb(252,80,32)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.0207%" y="581" width="0.0796%" height="15" fill="rgb(221,67,33)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0207%" y="565" width="0.0796%" height="15" fill="rgb(225,12,36)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.0207%" y="549" width="0.0796%" height="15" fill="rgb(210,14,38)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.0207%" y="533" width="0.0796%" height="15" fill="rgb(251,82,7)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.0207%" y="517" width="0.0796%" height="15" fill="rgb(253,73,22)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.0207%" y="501" width="0.0796%" height="15" fill="rgb(237,31,38)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.0207%" y="485" width="0.0796%" height="15" fill="rgb(234,184,33)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0207%" y="469" width="0.0796%" height="15" fill="rgb(219,43,13)" fg:x="1031" fg:w="1"/><text x="82.2707%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1002%" y="597" width="0.0796%" height="15" fill="rgb(252,139,13)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1002%" y="581" width="0.0796%" height="15" fill="rgb(229,79,33)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1002%" y="565" width="0.0796%" height="15" fill="rgb(248,8,21)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1002%" y="549" width="0.0796%" height="15" fill="rgb(225,124,31)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.1002%" y="533" width="0.0796%" height="15" fill="rgb(248,141,9)" fg:x="1032" fg:w="1"/><text x="82.3502%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.1798%" y="597" width="0.0796%" height="15" fill="rgb(251,223,32)" fg:x="1033" fg:w="1"/><text x="82.4298%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="81.9411%" y="693" width="0.3978%" height="15" fill="rgb(251,8,33)" fg:x="1030" fg:w="5"/><text x="82.1911%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="82.0207%" y="677" width="0.3182%" height="15" fill="rgb(205,95,13)" fg:x="1031" fg:w="4"/><text x="82.2707%" y="687.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="82.0207%" y="661" width="0.3182%" height="15" fill="rgb(235,208,38)" fg:x="1031" fg:w="4"/><text x="82.2707%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="82.1002%" y="645" width="0.2387%" height="15" fill="rgb(222,33,24)" fg:x="1032" fg:w="3"/><text x="82.3502%" y="655.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="82.1002%" y="629" width="0.2387%" height="15" fill="rgb(219,97,3)" fg:x="1032" fg:w="3"/><text x="82.3502%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="82.1002%" y="613" width="0.2387%" height="15" fill="rgb(209,15,37)" fg:x="1032" fg:w="3"/><text x="82.3502%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2593%" y="597" width="0.0796%" height="15" fill="rgb(206,100,16)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2593%" y="581" width="0.0796%" height="15" fill="rgb(208,61,41)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2593%" y="565" width="0.0796%" height="15" fill="rgb(226,154,13)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.2593%" y="549" width="0.0796%" height="15" fill="rgb(226,113,19)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.2593%" y="533" width="0.0796%" height="15" fill="rgb(209,115,46)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2593%" y="517" width="0.0796%" height="15" fill="rgb(234,170,38)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2593%" y="501" width="0.0796%" height="15" fill="rgb(228,23,37)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.2593%" y="485" width="0.0796%" height="15" fill="rgb(243,83,27)" fg:x="1034" fg:w="1"/><text x="82.5093%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="82.3389%" y="677" width="0.0796%" height="15" fill="rgb(251,121,22)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.3389%" y="661" width="0.0796%" height="15" fill="rgb(205,106,26)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3389%" y="645" width="0.0796%" height="15" fill="rgb(251,23,10)" fg:x="1035" fg:w="1"/><text x="82.5889%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="81.9411%" y="709" width="0.5569%" height="15" fill="rgb(250,218,35)" fg:x="1030" fg:w="7"/><text x="82.1911%" y="719.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="82.3389%" y="693" width="0.1591%" height="15" fill="rgb(211,16,34)" fg:x="1035" fg:w="2"/><text x="82.5889%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.4185%" y="677" width="0.0796%" height="15" fill="rgb(238,148,30)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="687.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="82.4185%" y="661" width="0.0796%" height="15" fill="rgb(236,171,40)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.4185%" y="645" width="0.0796%" height="15" fill="rgb(237,128,15)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.4185%" y="629" width="0.0796%" height="15" fill="rgb(222,8,10)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.4185%" y="613" width="0.0796%" height="15" fill="rgb(244,223,11)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="597" width="0.0796%" height="15" fill="rgb(230,23,54)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="581" width="0.0796%" height="15" fill="rgb(206,71,18)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="565" width="0.0796%" height="15" fill="rgb(221,190,41)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="549" width="0.0796%" height="15" fill="rgb(242,202,19)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4185%" y="533" width="0.0796%" height="15" fill="rgb(242,213,28)" fg:x="1036" fg:w="1"/><text x="82.6685%" y="543.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="81.8616%" y="757" width="0.7160%" height="15" fill="rgb(224,77,34)" fg:x="1029" fg:w="9"/><text x="82.1116%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="81.8616%" y="741" width="0.7160%" height="15" fill="rgb(231,13,30)" fg:x="1029" fg:w="9"/><text x="82.1116%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="81.8616%" y="725" width="0.7160%" height="15" fill="rgb(231,126,46)" fg:x="1029" fg:w="9"/><text x="82.1116%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="82.4980%" y="709" width="0.0796%" height="15" fill="rgb(237,50,16)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="82.4980%" y="693" width="0.0796%" height="15" fill="rgb(250,0,53)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.4980%" y="677" width="0.0796%" height="15" fill="rgb(206,168,4)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.4980%" y="661" width="0.0796%" height="15" fill="rgb(237,195,30)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4980%" y="645" width="0.0796%" height="15" fill="rgb(250,185,28)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.4980%" y="629" width="0.0796%" height="15" fill="rgb(236,31,48)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="82.4980%" y="613" width="0.0796%" height="15" fill="rgb(240,210,1)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.4980%" y="597" width="0.0796%" height="15" fill="rgb(211,67,10)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.4980%" y="581" width="0.0796%" height="15" fill="rgb(224,37,37)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4980%" y="565" width="0.0796%" height="15" fill="rgb(211,57,29)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.4980%" y="549" width="0.0796%" height="15" fill="rgb(222,128,38)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4980%" y="533" width="0.0796%" height="15" fill="rgb(222,119,2)" fg:x="1037" fg:w="1"/><text x="82.7480%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5776%" y="757" width="0.0796%" height="15" fill="rgb(207,185,13)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="82.5776%" y="741" width="0.0796%" height="15" fill="rgb(234,134,26)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.5776%" y="725" width="0.0796%" height="15" fill="rgb(236,28,54)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5776%" y="709" width="0.0796%" height="15" fill="rgb(218,4,16)" fg:x="1038" fg:w="1"/><text x="82.8276%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.6571%" y="693" width="0.0796%" height="15" fill="rgb(206,115,32)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="82.6571%" y="677" width="0.0796%" height="15" fill="rgb(221,12,8)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="82.6571%" y="661" width="0.0796%" height="15" fill="rgb(239,207,6)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="82.6571%" y="645" width="0.0796%" height="15" fill="rgb(217,119,6)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="82.6571%" y="629" width="0.0796%" height="15" fill="rgb(230,27,1)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="82.6571%" y="613" width="0.0796%" height="15" fill="rgb(237,155,1)" fg:x="1039" fg:w="1"/><text x="82.9071%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.7367%" y="629" width="0.0796%" height="15" fill="rgb(248,66,50)" fg:x="1040" fg:w="1"/><text x="82.9867%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="82.7367%" y="645" width="0.1591%" height="15" fill="rgb(218,66,19)" fg:x="1040" fg:w="2"/><text x="82.9867%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.8162%" y="629" width="0.0796%" height="15" fill="rgb(229,19,7)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.8162%" y="613" width="0.0796%" height="15" fill="rgb(223,65,18)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="82.8162%" y="597" width="0.0796%" height="15" fill="rgb(216,100,6)" fg:x="1041" fg:w="1"/><text x="83.0662%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.9753%" y="629" width="0.0796%" height="15" fill="rgb(215,16,2)" fg:x="1043" fg:w="1"/><text x="83.2253%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.9753%" y="613" width="0.0796%" height="15" fill="rgb(219,20,33)" fg:x="1043" fg:w="1"/><text x="83.2253%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="82.9753%" y="597" width="0.0796%" height="15" fill="rgb(215,120,26)" fg:x="1043" fg:w="1"/><text x="83.2253%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.0549%" y="613" width="0.0796%" height="15" fill="rgb(240,175,31)" fg:x="1044" fg:w="1"/><text x="83.3049%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.1344%" y="613" width="0.0796%" height="15" fill="rgb(245,165,43)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.1344%" y="597" width="0.0796%" height="15" fill="rgb(228,92,16)" fg:x="1045" fg:w="1"/><text x="83.3844%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2140%" y="613" width="0.0796%" height="15" fill="rgb(252,37,37)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2140%" y="597" width="0.0796%" height="15" fill="rgb(220,96,32)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2140%" y="581" width="0.0796%" height="15" fill="rgb(206,224,2)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.2140%" y="565" width="0.0796%" height="15" fill="rgb(221,63,25)" fg:x="1046" fg:w="1"/><text x="83.4640%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.2936%" y="581" width="0.0796%" height="15" fill="rgb(244,60,40)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.2936%" y="565" width="0.0796%" height="15" fill="rgb(209,102,13)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.2936%" y="549" width="0.0796%" height="15" fill="rgb(216,127,17)" fg:x="1047" fg:w="1"/><text x="83.5436%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.2936%" y="597" width="0.2387%" height="15" fill="rgb(242,182,26)" fg:x="1047" fg:w="3"/><text x="83.5436%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.3731%" y="581" width="0.1591%" height="15" fill="rgb(233,22,19)" fg:x="1048" fg:w="2"/><text x="83.6231%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4527%" y="565" width="0.0796%" height="15" fill="rgb(238,173,31)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.4527%" y="549" width="0.0796%" height="15" fill="rgb(244,165,10)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4527%" y="533" width="0.0796%" height="15" fill="rgb(251,138,36)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.4527%" y="517" width="0.0796%" height="15" fill="rgb(233,2,19)" fg:x="1049" fg:w="1"/><text x="83.7027%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="83.0549%" y="629" width="0.5569%" height="15" fill="rgb(206,178,31)" fg:x="1044" fg:w="7"/><text x="83.3049%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="83.2936%" y="613" width="0.3182%" height="15" fill="rgb(223,128,44)" fg:x="1047" fg:w="4"/><text x="83.5436%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.5322%" y="597" width="0.0796%" height="15" fill="rgb(238,24,5)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.5322%" y="581" width="0.0796%" height="15" fill="rgb(217,140,4)" fg:x="1050" fg:w="1"/><text x="83.7822%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.95%)</title><rect x="82.7367%" y="661" width="0.9547%" height="15" fill="rgb(250,89,54)" fg:x="1040" fg:w="12"/><text x="82.9867%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="82.8958%" y="645" width="0.7955%" height="15" fill="rgb(223,199,30)" fg:x="1042" fg:w="10"/><text x="83.1458%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.6118%" y="629" width="0.0796%" height="15" fill="rgb(220,47,34)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.6118%" y="613" width="0.0796%" height="15" fill="rgb(206,12,44)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.6118%" y="597" width="0.0796%" height="15" fill="rgb(226,159,9)" fg:x="1051" fg:w="1"/><text x="83.8618%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.6913%" y="613" width="0.0796%" height="15" fill="rgb(224,150,25)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6913%" y="597" width="0.0796%" height="15" fill="rgb(248,214,17)" fg:x="1052" fg:w="1"/><text x="83.9413%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="83.9300%" y="581" width="0.0796%" height="15" fill="rgb(208,189,54)" fg:x="1055" fg:w="1"/><text x="84.1800%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="83.6913%" y="661" width="0.4773%" height="15" fill="rgb(233,78,33)" fg:x="1052" fg:w="6"/><text x="83.9413%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="83.6913%" y="645" width="0.4773%" height="15" fill="rgb(244,217,34)" fg:x="1052" fg:w="6"/><text x="83.9413%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="83.6913%" y="629" width="0.4773%" height="15" fill="rgb(221,41,46)" fg:x="1052" fg:w="6"/><text x="83.9413%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="83.7709%" y="613" width="0.3978%" height="15" fill="rgb(216,152,46)" fg:x="1053" fg:w="5"/><text x="84.0209%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="83.8504%" y="597" width="0.3182%" height="15" fill="rgb(235,72,49)" fg:x="1054" fg:w="4"/><text x="84.1004%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.0095%" y="581" width="0.1591%" height="15" fill="rgb(214,12,0)" fg:x="1056" fg:w="2"/><text x="84.2595%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.0891%" y="565" width="0.0796%" height="15" fill="rgb(254,8,3)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.0891%" y="549" width="0.0796%" height="15" fill="rgb(238,167,16)" fg:x="1057" fg:w="1"/><text x="84.3391%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2482%" y="613" width="0.0796%" height="15" fill="rgb(236,220,0)" fg:x="1059" fg:w="1"/><text x="84.4982%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4869%" y="533" width="0.0796%" height="15" fill="rgb(207,8,20)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.4869%" y="517" width="0.0796%" height="15" fill="rgb(236,113,14)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4869%" y="501" width="0.0796%" height="15" fill="rgb(207,6,6)" fg:x="1062" fg:w="1"/><text x="84.7369%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.5664%" y="517" width="0.0796%" height="15" fill="rgb(225,92,41)" fg:x="1063" fg:w="1"/><text x="84.8164%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="84.5664%" y="501" width="0.0796%" height="15" fill="rgb(234,224,18)" fg:x="1063" fg:w="1"/><text x="84.8164%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.5664%" y="485" width="0.0796%" height="15" fill="rgb(248,195,4)" fg:x="1063" fg:w="1"/><text x="84.8164%" y="495.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.07%)</title><rect x="82.6571%" y="757" width="2.0684%" height="15" fill="rgb(229,146,7)" fg:x="1039" fg:w="26"/><text x="82.9071%" y="767.50">e..</text></g><g><title>engine::session::Session::save_changes (26 samples, 2.07%)</title><rect x="82.6571%" y="741" width="2.0684%" height="15" fill="rgb(249,192,15)" fg:x="1039" fg:w="26"/><text x="82.9071%" y="751.50">e..</text></g><g><title>engine::session::state::State::close (26 samples, 2.07%)</title><rect x="82.6571%" y="725" width="2.0684%" height="15" fill="rgb(253,77,34)" fg:x="1039" fg:w="26"/><text x="82.9071%" y="735.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 2.07%)</title><rect x="82.6571%" y="709" width="2.0684%" height="15" fill="rgb(236,228,3)" fg:x="1039" fg:w="26"/><text x="82.9071%" y="719.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (25 samples, 1.99%)</title><rect x="82.7367%" y="693" width="1.9889%" height="15" fill="rgb(233,71,16)" fg:x="1040" fg:w="25"/><text x="82.9867%" y="703.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (25 samples, 1.99%)</title><rect x="82.7367%" y="677" width="1.9889%" height="15" fill="rgb(239,41,1)" fg:x="1040" fg:w="25"/><text x="82.9867%" y="687.50">e..</text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="84.1687%" y="661" width="0.5569%" height="15" fill="rgb(214,119,41)" fg:x="1058" fg:w="7"/><text x="84.4187%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="84.1687%" y="645" width="0.5569%" height="15" fill="rgb(213,17,39)" fg:x="1058" fg:w="7"/><text x="84.4187%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="84.2482%" y="629" width="0.4773%" height="15" fill="rgb(245,42,20)" fg:x="1059" fg:w="6"/><text x="84.4982%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="84.3278%" y="613" width="0.3978%" height="15" fill="rgb(252,18,22)" fg:x="1060" fg:w="5"/><text x="84.5778%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="84.3278%" y="597" width="0.3978%" height="15" fill="rgb(219,125,29)" fg:x="1060" fg:w="5"/><text x="84.5778%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="84.3278%" y="581" width="0.3978%" height="15" fill="rgb(215,56,47)" fg:x="1060" fg:w="5"/><text x="84.5778%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="84.4073%" y="565" width="0.3182%" height="15" fill="rgb(212,211,43)" fg:x="1061" fg:w="4"/><text x="84.6573%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="84.4869%" y="549" width="0.2387%" height="15" fill="rgb(225,24,34)" fg:x="1062" fg:w="3"/><text x="84.7369%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.5664%" y="533" width="0.1591%" height="15" fill="rgb(229,104,27)" fg:x="1063" fg:w="2"/><text x="84.8164%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6460%" y="517" width="0.0796%" height="15" fill="rgb(208,56,42)" fg:x="1064" fg:w="1"/><text x="84.8960%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7255%" y="677" width="0.0796%" height="15" fill="rgb(210,79,18)" fg:x="1065" fg:w="1"/><text x="84.9755%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7255%" y="661" width="0.0796%" height="15" fill="rgb(236,125,53)" fg:x="1065" fg:w="1"/><text x="84.9755%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="84.7255%" y="757" width="0.1591%" height="15" fill="rgb(207,101,52)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="84.7255%" y="741" width="0.1591%" height="15" fill="rgb(248,51,10)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="84.7255%" y="725" width="0.1591%" height="15" fill="rgb(222,184,26)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="84.7255%" y="709" width="0.1591%" height="15" fill="rgb(226,13,15)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="84.7255%" y="693" width="0.1591%" height="15" fill="rgb(238,108,43)" fg:x="1065" fg:w="2"/><text x="84.9755%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8051%" y="677" width="0.0796%" height="15" fill="rgb(252,6,18)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8051%" y="661" width="0.0796%" height="15" fill="rgb(215,206,11)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.8051%" y="645" width="0.0796%" height="15" fill="rgb(243,20,18)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8051%" y="629" width="0.0796%" height="15" fill="rgb(213,39,51)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="84.8051%" y="613" width="0.0796%" height="15" fill="rgb(225,153,38)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.8051%" y="597" width="0.0796%" height="15" fill="rgb(235,8,28)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="84.8051%" y="581" width="0.0796%" height="15" fill="rgb(215,0,21)" fg:x="1066" fg:w="1"/><text x="85.0551%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="84.8846%" y="741" width="0.0796%" height="15" fill="rgb(205,153,39)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.8846%" y="725" width="0.0796%" height="15" fill="rgb(231,172,8)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.8846%" y="709" width="0.0796%" height="15" fill="rgb(251,142,40)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.8846%" y="693" width="0.0796%" height="15" fill="rgb(214,48,45)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8846%" y="677" width="0.0796%" height="15" fill="rgb(231,29,28)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8846%" y="661" width="0.0796%" height="15" fill="rgb(245,57,8)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8846%" y="645" width="0.0796%" height="15" fill="rgb(236,199,39)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8846%" y="629" width="0.0796%" height="15" fill="rgb(208,132,35)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8846%" y="613" width="0.0796%" height="15" fill="rgb(225,217,34)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8846%" y="597" width="0.0796%" height="15" fill="rgb(252,227,26)" fg:x="1067" fg:w="1"/><text x="85.1346%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="84.9642%" y="725" width="0.0796%" height="15" fill="rgb(250,228,18)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.9642%" y="709" width="0.0796%" height="15" fill="rgb(222,176,49)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.9642%" y="693" width="0.0796%" height="15" fill="rgb(212,89,5)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="84.9642%" y="677" width="0.0796%" height="15" fill="rgb(211,131,11)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="84.9642%" y="661" width="0.0796%" height="15" fill="rgb(226,185,34)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9642%" y="645" width="0.0796%" height="15" fill="rgb(239,228,52)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="84.9642%" y="629" width="0.0796%" height="15" fill="rgb(213,126,26)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9642%" y="613" width="0.0796%" height="15" fill="rgb(248,59,21)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.9642%" y="597" width="0.0796%" height="15" fill="rgb(207,10,1)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9642%" y="581" width="0.0796%" height="15" fill="rgb(240,122,43)" fg:x="1068" fg:w="1"/><text x="85.2142%" y="591.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.0438%" y="725" width="0.0796%" height="15" fill="rgb(250,158,39)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0438%" y="709" width="0.0796%" height="15" fill="rgb(212,108,0)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.0438%" y="693" width="0.0796%" height="15" fill="rgb(231,150,38)" fg:x="1069" fg:w="1"/><text x="85.2938%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.1233%" y="677" width="0.0796%" height="15" fill="rgb(249,154,4)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.1233%" y="661" width="0.0796%" height="15" fill="rgb(219,46,1)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.1233%" y="645" width="0.0796%" height="15" fill="rgb(227,68,4)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1233%" y="629" width="0.0796%" height="15" fill="rgb(254,224,51)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1233%" y="613" width="0.0796%" height="15" fill="rgb(220,89,20)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.1233%" y="597" width="0.0796%" height="15" fill="rgb(245,148,36)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1233%" y="581" width="0.0796%" height="15" fill="rgb(216,50,30)" fg:x="1070" fg:w="1"/><text x="85.3733%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="629" width="0.0796%" height="15" fill="rgb(254,186,48)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="613" width="0.0796%" height="15" fill="rgb(237,78,54)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="597" width="0.0796%" height="15" fill="rgb(208,122,28)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="581" width="0.0796%" height="15" fill="rgb(237,71,0)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="565" width="0.0796%" height="15" fill="rgb(241,168,21)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.2824%" y="549" width="0.0796%" height="15" fill="rgb(252,223,14)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.2824%" y="533" width="0.0796%" height="15" fill="rgb(228,172,14)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.2824%" y="517" width="0.0796%" height="15" fill="rgb(236,44,24)" fg:x="1072" fg:w="1"/><text x="85.5324%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="84.8846%" y="757" width="0.5569%" height="15" fill="rgb(211,153,1)" fg:x="1067" fg:w="7"/><text x="85.1346%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="84.9642%" y="741" width="0.4773%" height="15" fill="rgb(242,70,19)" fg:x="1068" fg:w="6"/><text x="85.2142%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="85.1233%" y="725" width="0.3182%" height="15" fill="rgb(237,172,13)" fg:x="1070" fg:w="4"/><text x="85.3733%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="85.1233%" y="709" width="0.3182%" height="15" fill="rgb(215,222,51)" fg:x="1070" fg:w="4"/><text x="85.3733%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="85.1233%" y="693" width="0.3182%" height="15" fill="rgb(227,136,3)" fg:x="1070" fg:w="4"/><text x="85.3733%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="85.2029%" y="677" width="0.2387%" height="15" fill="rgb(234,107,46)" fg:x="1071" fg:w="3"/><text x="85.4529%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.2029%" y="661" width="0.2387%" height="15" fill="rgb(224,56,35)" fg:x="1071" fg:w="3"/><text x="85.4529%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.2029%" y="645" width="0.2387%" height="15" fill="rgb(253,132,31)" fg:x="1071" fg:w="3"/><text x="85.4529%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3620%" y="629" width="0.0796%" height="15" fill="rgb(249,97,5)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3620%" y="613" width="0.0796%" height="15" fill="rgb(225,135,20)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3620%" y="597" width="0.0796%" height="15" fill="rgb(220,48,27)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3620%" y="581" width="0.0796%" height="15" fill="rgb(214,91,28)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.3620%" y="565" width="0.0796%" height="15" fill="rgb(232,51,16)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3620%" y="549" width="0.0796%" height="15" fill="rgb(254,38,15)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3620%" y="533" width="0.0796%" height="15" fill="rgb(243,186,4)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3620%" y="517" width="0.0796%" height="15" fill="rgb(222,210,21)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.3620%" y="501" width="0.0796%" height="15" fill="rgb(228,132,3)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.3620%" y="485" width="0.0796%" height="15" fill="rgb(253,188,15)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3620%" y="469" width="0.0796%" height="15" fill="rgb(216,192,40)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.3620%" y="453" width="0.0796%" height="15" fill="rgb(230,126,2)" fg:x="1073" fg:w="1"/><text x="85.6120%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="85.4415%" y="757" width="0.0796%" height="15" fill="rgb(246,23,15)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="85.4415%" y="741" width="0.0796%" height="15" fill="rgb(250,224,8)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.4415%" y="725" width="0.0796%" height="15" fill="rgb(247,226,46)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.4415%" y="709" width="0.0796%" height="15" fill="rgb(226,67,43)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.4415%" y="693" width="0.0796%" height="15" fill="rgb(239,37,7)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.4415%" y="677" width="0.0796%" height="15" fill="rgb(239,125,3)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.4415%" y="661" width="0.0796%" height="15" fill="rgb(235,59,37)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.4415%" y="645" width="0.0796%" height="15" fill="rgb(241,214,47)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.4415%" y="629" width="0.0796%" height="15" fill="rgb(214,114,51)" fg:x="1074" fg:w="1"/><text x="85.6915%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="85.5211%" y="757" width="0.0796%" height="15" fill="rgb(221,180,19)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="85.5211%" y="741" width="0.0796%" height="15" fill="rgb(223,66,32)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.5211%" y="725" width="0.0796%" height="15" fill="rgb(218,134,38)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.5211%" y="709" width="0.0796%" height="15" fill="rgb(250,83,11)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5211%" y="693" width="0.0796%" height="15" fill="rgb(239,137,18)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5211%" y="677" width="0.0796%" height="15" fill="rgb(242,185,53)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="85.5211%" y="661" width="0.0796%" height="15" fill="rgb(244,165,31)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.5211%" y="645" width="0.0796%" height="15" fill="rgb(223,129,30)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="85.5211%" y="629" width="0.0796%" height="15" fill="rgb(240,148,35)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="85.5211%" y="613" width="0.0796%" height="15" fill="rgb(231,3,24)" fg:x="1075" fg:w="1"/><text x="85.7711%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6006%" y="677" width="0.0796%" height="15" fill="rgb(227,197,42)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6006%" y="661" width="0.0796%" height="15" fill="rgb(251,41,31)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6006%" y="645" width="0.0796%" height="15" fill="rgb(207,92,5)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6006%" y="629" width="0.0796%" height="15" fill="rgb(236,62,31)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6006%" y="613" width="0.0796%" height="15" fill="rgb(248,218,41)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.6006%" y="597" width="0.0796%" height="15" fill="rgb(250,128,19)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.6006%" y="581" width="0.0796%" height="15" fill="rgb(239,216,33)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.6006%" y="565" width="0.0796%" height="15" fill="rgb(216,44,26)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.6006%" y="549" width="0.0796%" height="15" fill="rgb(207,69,29)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6006%" y="533" width="0.0796%" height="15" fill="rgb(246,182,38)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.6006%" y="517" width="0.0796%" height="15" fill="rgb(252,219,28)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.6006%" y="501" width="0.0796%" height="15" fill="rgb(209,164,16)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.6006%" y="485" width="0.0796%" height="15" fill="rgb(208,49,15)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.6006%" y="469" width="0.0796%" height="15" fill="rgb(235,42,45)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.6006%" y="453" width="0.0796%" height="15" fill="rgb(246,198,8)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6006%" y="437" width="0.0796%" height="15" fill="rgb(237,205,33)" fg:x="1076" fg:w="1"/><text x="85.8506%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6802%" y="613" width="0.0796%" height="15" fill="rgb(249,116,21)" fg:x="1077" fg:w="1"/><text x="85.9302%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="85.6006%" y="725" width="0.2387%" height="15" fill="rgb(230,35,49)" fg:x="1076" fg:w="3"/><text x="85.8506%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.6006%" y="709" width="0.2387%" height="15" fill="rgb(207,8,52)" fg:x="1076" fg:w="3"/><text x="85.8506%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.6006%" y="693" width="0.2387%" height="15" fill="rgb(218,173,0)" fg:x="1076" fg:w="3"/><text x="85.8506%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.6802%" y="677" width="0.1591%" height="15" fill="rgb(248,106,34)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6802%" y="661" width="0.1591%" height="15" fill="rgb(232,50,11)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.6802%" y="645" width="0.1591%" height="15" fill="rgb(213,142,18)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.6802%" y="629" width="0.1591%" height="15" fill="rgb(246,117,38)" fg:x="1077" fg:w="2"/><text x="85.9302%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.7597%" y="613" width="0.0796%" height="15" fill="rgb(218,133,54)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7597%" y="597" width="0.0796%" height="15" fill="rgb(216,154,35)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7597%" y="581" width="0.0796%" height="15" fill="rgb(219,175,36)" fg:x="1078" fg:w="1"/><text x="86.0097%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="85.6006%" y="741" width="0.3182%" height="15" fill="rgb(224,0,16)" fg:x="1076" fg:w="4"/><text x="85.8506%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="85.8393%" y="725" width="0.0796%" height="15" fill="rgb(221,186,40)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="85.8393%" y="709" width="0.0796%" height="15" fill="rgb(254,0,31)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.8393%" y="693" width="0.0796%" height="15" fill="rgb(206,138,52)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.8393%" y="677" width="0.0796%" height="15" fill="rgb(229,99,30)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.8393%" y="661" width="0.0796%" height="15" fill="rgb(205,131,29)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="645" width="0.0796%" height="15" fill="rgb(232,114,46)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="629" width="0.0796%" height="15" fill="rgb(206,181,31)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="613" width="0.0796%" height="15" fill="rgb(251,142,12)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="597" width="0.0796%" height="15" fill="rgb(252,128,47)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="581" width="0.0796%" height="15" fill="rgb(208,51,33)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="565" width="0.0796%" height="15" fill="rgb(240,36,11)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="549" width="0.0796%" height="15" fill="rgb(245,160,28)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="85.8393%" y="533" width="0.0796%" height="15" fill="rgb(230,37,49)" fg:x="1079" fg:w="1"/><text x="86.0893%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="85.9189%" y="741" width="0.0796%" height="15" fill="rgb(227,40,34)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.9189%" y="725" width="0.0796%" height="15" fill="rgb(253,212,23)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.9189%" y="709" width="0.0796%" height="15" fill="rgb(230,155,36)" fg:x="1080" fg:w="1"/><text x="86.1689%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (54 samples, 4.30%)</title><rect x="81.7820%" y="773" width="4.2959%" height="15" fill="rgb(221,176,6)" fg:x="1028" fg:w="54"/><text x="82.0320%" y="783.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.48%)</title><rect x="85.6006%" y="757" width="0.4773%" height="15" fill="rgb(207,203,40)" fg:x="1076" fg:w="6"/><text x="85.8506%" y="767.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="85.9984%" y="741" width="0.0796%" height="15" fill="rgb(215,88,16)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.9984%" y="725" width="0.0796%" height="15" fill="rgb(233,52,54)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="85.9984%" y="709" width="0.0796%" height="15" fill="rgb(205,47,52)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="85.9984%" y="693" width="0.0796%" height="15" fill="rgb(218,56,43)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="85.9984%" y="677" width="0.0796%" height="15" fill="rgb(251,225,48)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="85.9984%" y="661" width="0.0796%" height="15" fill="rgb(244,56,1)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9984%" y="645" width="0.0796%" height="15" fill="rgb(215,46,3)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9984%" y="629" width="0.0796%" height="15" fill="rgb(252,25,51)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9984%" y="613" width="0.0796%" height="15" fill="rgb(243,86,25)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9984%" y="597" width="0.0796%" height="15" fill="rgb(223,57,49)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.9984%" y="581" width="0.0796%" height="15" fill="rgb(226,26,11)" fg:x="1081" fg:w="1"/><text x="86.2484%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="86.0780%" y="773" width="0.0796%" height="15" fill="rgb(233,166,51)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.0780%" y="757" width="0.0796%" height="15" fill="rgb(232,145,44)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="86.0780%" y="741" width="0.0796%" height="15" fill="rgb(246,98,4)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.0780%" y="725" width="0.0796%" height="15" fill="rgb(223,187,1)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.0780%" y="709" width="0.0796%" height="15" fill="rgb(245,183,34)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.0780%" y="693" width="0.0796%" height="15" fill="rgb(223,6,23)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.0780%" y="677" width="0.0796%" height="15" fill="rgb(226,63,21)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0780%" y="661" width="0.0796%" height="15" fill="rgb(244,58,43)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.0780%" y="645" width="0.0796%" height="15" fill="rgb(221,65,27)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.0780%" y="629" width="0.0796%" height="15" fill="rgb(231,17,48)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.0780%" y="613" width="0.0796%" height="15" fill="rgb(229,198,23)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.0780%" y="597" width="0.0796%" height="15" fill="rgb(220,192,38)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0780%" y="581" width="0.0796%" height="15" fill="rgb(224,157,12)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.0780%" y="565" width="0.0796%" height="15" fill="rgb(210,74,7)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.0780%" y="549" width="0.0796%" height="15" fill="rgb(233,184,31)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.0780%" y="533" width="0.0796%" height="15" fill="rgb(246,44,22)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.0780%" y="517" width="0.0796%" height="15" fill="rgb(236,102,41)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.0780%" y="501" width="0.0796%" height="15" fill="rgb(245,17,40)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.0780%" y="485" width="0.0796%" height="15" fill="rgb(227,165,9)" fg:x="1082" fg:w="1"/><text x="86.3280%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.1575%" y="741" width="0.0796%" height="15" fill="rgb(220,123,37)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.1575%" y="725" width="0.0796%" height="15" fill="rgb(239,124,16)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.1575%" y="709" width="0.0796%" height="15" fill="rgb(214,215,39)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.1575%" y="693" width="0.0796%" height="15" fill="rgb(224,72,47)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.1575%" y="677" width="0.0796%" height="15" fill="rgb(252,112,7)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.1575%" y="661" width="0.0796%" height="15" fill="rgb(228,116,35)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.1575%" y="645" width="0.0796%" height="15" fill="rgb(246,125,25)" fg:x="1083" fg:w="1"/><text x="86.4075%" y="655.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (2 samples, 0.16%)</title><rect x="86.1575%" y="773" width="0.1591%" height="15" fill="rgb(230,220,33)" fg:x="1083" fg:w="2"/><text x="86.4075%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (2 samples, 0.16%)</title><rect x="86.1575%" y="757" width="0.1591%" height="15" fill="rgb(220,48,47)" fg:x="1083" fg:w="2"/><text x="86.4075%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.2371%" y="741" width="0.0796%" height="15" fill="rgb(240,130,32)" fg:x="1084" fg:w="1"/><text x="86.4871%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.3166%" y="741" width="0.0796%" height="15" fill="rgb(252,97,40)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3166%" y="725" width="0.0796%" height="15" fill="rgb(211,117,15)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3166%" y="709" width="0.0796%" height="15" fill="rgb(223,47,44)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="693" width="0.0796%" height="15" fill="rgb(239,53,20)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="677" width="0.0796%" height="15" fill="rgb(242,71,22)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="661" width="0.0796%" height="15" fill="rgb(244,146,41)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="645" width="0.0796%" height="15" fill="rgb(206,133,42)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3166%" y="629" width="0.0796%" height="15" fill="rgb(220,206,16)" fg:x="1085" fg:w="1"/><text x="86.5666%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (81 samples, 6.44%)</title><rect x="80.0318%" y="789" width="6.4439%" height="15" fill="rgb(234,5,52)" fg:x="1006" fg:w="81"/><text x="80.2818%" y="799.50">&lt;tests::..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (2 samples, 0.16%)</title><rect x="86.3166%" y="773" width="0.1591%" height="15" fill="rgb(206,81,46)" fg:x="1085" fg:w="2"/><text x="86.5666%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="86.3166%" y="757" width="0.1591%" height="15" fill="rgb(245,111,47)" fg:x="1085" fg:w="2"/><text x="86.5666%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.3962%" y="741" width="0.0796%" height="15" fill="rgb(227,198,45)" fg:x="1086" fg:w="1"/><text x="86.6462%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="86.4757%" y="773" width="0.0796%" height="15" fill="rgb(223,141,47)" fg:x="1087" fg:w="1"/><text x="86.7257%" y="783.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="86.6348%" y="693" width="0.0796%" height="15" fill="rgb(234,124,3)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="86.6348%" y="677" width="0.0796%" height="15" fill="rgb(218,189,15)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.6348%" y="661" width="0.0796%" height="15" fill="rgb(253,91,25)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="86.6348%" y="645" width="0.0796%" height="15" fill="rgb(243,103,39)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="655.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="86.6348%" y="629" width="0.0796%" height="15" fill="rgb(252,94,6)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6348%" y="613" width="0.0796%" height="15" fill="rgb(236,153,18)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6348%" y="597" width="0.0796%" height="15" fill="rgb(218,227,22)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6348%" y="581" width="0.0796%" height="15" fill="rgb(209,53,33)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6348%" y="565" width="0.0796%" height="15" fill="rgb(252,183,3)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6348%" y="549" width="0.0796%" height="15" fill="rgb(249,138,54)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.6348%" y="533" width="0.0796%" height="15" fill="rgb(226,39,3)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.6348%" y="517" width="0.0796%" height="15" fill="rgb(237,129,38)" fg:x="1089" fg:w="1"/><text x="86.8848%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="86.7144%" y="661" width="0.0796%" height="15" fill="rgb(218,214,54)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="86.7144%" y="645" width="0.0796%" height="15" fill="rgb(228,112,8)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="86.7144%" y="629" width="0.0796%" height="15" fill="rgb(219,128,11)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7144%" y="613" width="0.0796%" height="15" fill="rgb(240,39,37)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7144%" y="597" width="0.0796%" height="15" fill="rgb(215,199,42)" fg:x="1090" fg:w="1"/><text x="86.9644%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (3 samples, 0.24%)</title><rect x="86.6348%" y="757" width="0.2387%" height="15" fill="rgb(248,51,13)" fg:x="1089" fg:w="3"/><text x="86.8848%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="86.6348%" y="741" width="0.2387%" height="15" fill="rgb(225,196,0)" fg:x="1089" fg:w="3"/><text x="86.8848%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="86.6348%" y="725" width="0.2387%" height="15" fill="rgb(221,31,53)" fg:x="1089" fg:w="3"/><text x="86.8848%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.6348%" y="709" width="0.2387%" height="15" fill="rgb(211,79,37)" fg:x="1089" fg:w="3"/><text x="86.8848%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.7144%" y="693" width="0.1591%" height="15" fill="rgb(227,118,20)" fg:x="1090" fg:w="2"/><text x="86.9644%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.7144%" y="677" width="0.1591%" height="15" fill="rgb(225,142,40)" fg:x="1090" fg:w="2"/><text x="86.9644%" y="687.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="86.7940%" y="661" width="0.0796%" height="15" fill="rgb(208,183,34)" fg:x="1091" fg:w="1"/><text x="87.0440%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="86.8735%" y="741" width="0.1591%" height="15" fill="rgb(209,112,52)" fg:x="1092" fg:w="2"/><text x="87.1235%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="86.8735%" y="725" width="0.1591%" height="15" fill="rgb(236,9,32)" fg:x="1092" fg:w="2"/><text x="87.1235%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="86.8735%" y="709" width="0.1591%" height="15" fill="rgb(208,222,9)" fg:x="1092" fg:w="2"/><text x="87.1235%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="87.0326%" y="725" width="0.0796%" height="15" fill="rgb(214,142,24)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.0326%" y="709" width="0.0796%" height="15" fill="rgb(244,48,51)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.0326%" y="693" width="0.0796%" height="15" fill="rgb(253,171,44)" fg:x="1094" fg:w="1"/><text x="87.2826%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.1122%" y="677" width="0.0796%" height="15" fill="rgb(221,85,21)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.1122%" y="661" width="0.0796%" height="15" fill="rgb(245,40,38)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.1122%" y="645" width="0.0796%" height="15" fill="rgb(220,135,37)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1122%" y="629" width="0.0796%" height="15" fill="rgb(249,62,46)" fg:x="1095" fg:w="1"/><text x="87.3622%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="87.2713%" y="661" width="0.1591%" height="15" fill="rgb(232,81,15)" fg:x="1097" fg:w="2"/><text x="87.5213%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="87.2713%" y="645" width="0.1591%" height="15" fill="rgb(244,179,28)" fg:x="1097" fg:w="2"/><text x="87.5213%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="87.2713%" y="629" width="0.1591%" height="15" fill="rgb(220,4,32)" fg:x="1097" fg:w="2"/><text x="87.5213%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.3508%" y="613" width="0.0796%" height="15" fill="rgb(214,116,42)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.3508%" y="597" width="0.0796%" height="15" fill="rgb(226,94,31)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.3508%" y="581" width="0.0796%" height="15" fill="rgb(241,172,26)" fg:x="1098" fg:w="1"/><text x="87.6008%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="87.4304%" y="661" width="0.2387%" height="15" fill="rgb(206,38,39)" fg:x="1099" fg:w="3"/><text x="87.6804%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="87.5099%" y="645" width="0.1591%" height="15" fill="rgb(210,139,19)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="87.5099%" y="629" width="0.1591%" height="15" fill="rgb(220,10,22)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="87.5099%" y="613" width="0.1591%" height="15" fill="rgb(225,218,36)" fg:x="1100" fg:w="2"/><text x="87.7599%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.5895%" y="597" width="0.0796%" height="15" fill="rgb(244,50,47)" fg:x="1101" fg:w="1"/><text x="87.8395%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.5895%" y="581" width="0.0796%" height="15" fill="rgb(247,80,2)" fg:x="1101" fg:w="1"/><text x="87.8395%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.5895%" y="565" width="0.0796%" height="15" fill="rgb(234,70,38)" fg:x="1101" fg:w="1"/><text x="87.8395%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.7486%" y="629" width="0.0796%" height="15" fill="rgb(238,170,25)" fg:x="1103" fg:w="1"/><text x="87.9986%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.8282%" y="613" width="0.0796%" height="15" fill="rgb(252,23,6)" fg:x="1104" fg:w="1"/><text x="88.0782%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9077%" y="613" width="0.0796%" height="15" fill="rgb(209,98,49)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9077%" y="597" width="0.0796%" height="15" fill="rgb(213,29,25)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9077%" y="581" width="0.0796%" height="15" fill="rgb(235,71,32)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9077%" y="565" width="0.0796%" height="15" fill="rgb(227,75,49)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.9077%" y="549" width="0.0796%" height="15" fill="rgb(220,19,24)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.9077%" y="533" width="0.0796%" height="15" fill="rgb(249,67,15)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.9077%" y="517" width="0.0796%" height="15" fill="rgb(233,197,44)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.9077%" y="501" width="0.0796%" height="15" fill="rgb(245,206,23)" fg:x="1105" fg:w="1"/><text x="88.1577%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="87.6691%" y="661" width="0.6364%" height="15" fill="rgb(205,164,14)" fg:x="1102" fg:w="8"/><text x="87.9191%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="87.7486%" y="645" width="0.5569%" height="15" fill="rgb(209,57,33)" fg:x="1103" fg:w="7"/><text x="87.9986%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="87.8282%" y="629" width="0.4773%" height="15" fill="rgb(237,209,41)" fg:x="1104" fg:w="6"/><text x="88.0782%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="87.9873%" y="613" width="0.3182%" height="15" fill="rgb(252,93,6)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="87.9873%" y="597" width="0.3182%" height="15" fill="rgb(218,214,32)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="87.9873%" y="581" width="0.3182%" height="15" fill="rgb(243,144,9)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.32%)</title><rect x="87.9873%" y="565" width="0.3182%" height="15" fill="rgb(254,62,38)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.32%)</title><rect x="87.9873%" y="549" width="0.3182%" height="15" fill="rgb(247,146,11)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="559.50"></text></g><g><title>realloc (4 samples, 0.32%)</title><rect x="87.9873%" y="533" width="0.3182%" height="15" fill="rgb(213,96,14)" fg:x="1106" fg:w="4"/><text x="88.2373%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.27%)</title><rect x="87.1917%" y="677" width="1.2729%" height="15" fill="rgb(246,102,11)" fg:x="1096" fg:w="16"/><text x="87.4417%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.3055%" y="661" width="0.1591%" height="15" fill="rgb(241,182,16)" fg:x="1110" fg:w="2"/><text x="88.5555%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.3850%" y="645" width="0.0796%" height="15" fill="rgb(225,28,43)" fg:x="1111" fg:w="1"/><text x="88.6350%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3850%" y="629" width="0.0796%" height="15" fill="rgb(247,87,15)" fg:x="1111" fg:w="1"/><text x="88.6350%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (18 samples, 1.43%)</title><rect x="87.1122%" y="709" width="1.4320%" height="15" fill="rgb(225,211,30)" fg:x="1095" fg:w="18"/><text x="87.3622%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.43%)</title><rect x="87.1122%" y="693" width="1.4320%" height="15" fill="rgb(223,111,44)" fg:x="1095" fg:w="18"/><text x="87.3622%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.4646%" y="677" width="0.0796%" height="15" fill="rgb(225,60,10)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.4646%" y="661" width="0.0796%" height="15" fill="rgb(245,196,31)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.4646%" y="645" width="0.0796%" height="15" fill="rgb(238,71,27)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.4646%" y="629" width="0.0796%" height="15" fill="rgb(212,77,40)" fg:x="1112" fg:w="1"/><text x="88.7146%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.5442%" y="661" width="0.0796%" height="15" fill="rgb(242,14,34)" fg:x="1113" fg:w="1"/><text x="88.7942%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.6237%" y="645" width="0.0796%" height="15" fill="rgb(227,221,15)" fg:x="1114" fg:w="1"/><text x="88.8737%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.7033%" y="645" width="0.0796%" height="15" fill="rgb(230,80,41)" fg:x="1115" fg:w="1"/><text x="88.9533%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7828%" y="629" width="0.0796%" height="15" fill="rgb(221,65,43)" fg:x="1116" fg:w="1"/><text x="89.0328%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.8624%" y="613" width="0.0796%" height="15" fill="rgb(250,139,15)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.8624%" y="597" width="0.0796%" height="15" fill="rgb(236,101,33)" fg:x="1117" fg:w="1"/><text x="89.1124%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="88.5442%" y="709" width="0.4773%" height="15" fill="rgb(240,185,7)" fg:x="1113" fg:w="6"/><text x="88.7942%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="88.5442%" y="693" width="0.4773%" height="15" fill="rgb(230,219,29)" fg:x="1113" fg:w="6"/><text x="88.7942%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="88.5442%" y="677" width="0.4773%" height="15" fill="rgb(250,208,42)" fg:x="1113" fg:w="6"/><text x="88.7942%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="88.6237%" y="661" width="0.3978%" height="15" fill="rgb(231,6,17)" fg:x="1114" fg:w="5"/><text x="88.8737%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7828%" y="645" width="0.2387%" height="15" fill="rgb(250,180,47)" fg:x="1116" fg:w="3"/><text x="89.0328%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="88.8624%" y="629" width="0.1591%" height="15" fill="rgb(218,156,38)" fg:x="1117" fg:w="2"/><text x="89.1124%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.9419%" y="613" width="0.0796%" height="15" fill="rgb(207,13,46)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.9419%" y="597" width="0.0796%" height="15" fill="rgb(221,30,24)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.9419%" y="581" width="0.0796%" height="15" fill="rgb(239,110,29)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.9419%" y="565" width="0.0796%" height="15" fill="rgb(223,212,28)" fg:x="1118" fg:w="1"/><text x="89.1919%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.0215%" y="613" width="0.0796%" height="15" fill="rgb(206,148,43)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0215%" y="597" width="0.0796%" height="15" fill="rgb(227,139,9)" fg:x="1119" fg:w="1"/><text x="89.2715%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0215%" y="677" width="0.1591%" height="15" fill="rgb(244,64,31)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="89.0215%" y="661" width="0.1591%" height="15" fill="rgb(219,45,45)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0215%" y="645" width="0.1591%" height="15" fill="rgb(205,112,40)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.0215%" y="629" width="0.1591%" height="15" fill="rgb(207,18,46)" fg:x="1119" fg:w="2"/><text x="89.2715%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1010%" y="613" width="0.0796%" height="15" fill="rgb(219,65,15)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1010%" y="597" width="0.0796%" height="15" fill="rgb(248,191,24)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.1010%" y="581" width="0.0796%" height="15" fill="rgb(251,155,16)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1010%" y="565" width="0.0796%" height="15" fill="rgb(249,62,38)" fg:x="1120" fg:w="1"/><text x="89.3510%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.1806%" y="661" width="0.0796%" height="15" fill="rgb(252,214,17)" fg:x="1121" fg:w="1"/><text x="89.4306%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.1806%" y="645" width="0.0796%" height="15" fill="rgb(246,215,53)" fg:x="1121" fg:w="1"/><text x="89.4306%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.2601%" y="661" width="0.0796%" height="15" fill="rgb(232,148,8)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.2601%" y="645" width="0.0796%" height="15" fill="rgb(221,119,15)" fg:x="1122" fg:w="1"/><text x="89.5101%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3397%" y="661" width="0.0796%" height="15" fill="rgb(239,69,36)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3397%" y="645" width="0.0796%" height="15" fill="rgb(247,164,1)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3397%" y="629" width="0.0796%" height="15" fill="rgb(216,221,53)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3397%" y="613" width="0.0796%" height="15" fill="rgb(249,57,29)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3397%" y="597" width="0.0796%" height="15" fill="rgb(227,23,6)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3397%" y="581" width="0.0796%" height="15" fill="rgb(213,211,30)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3397%" y="565" width="0.0796%" height="15" fill="rgb(254,202,30)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3397%" y="549" width="0.0796%" height="15" fill="rgb(248,213,0)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3397%" y="533" width="0.0796%" height="15" fill="rgb(248,55,48)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3397%" y="517" width="0.0796%" height="15" fill="rgb(217,221,51)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3397%" y="501" width="0.0796%" height="15" fill="rgb(233,8,16)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3397%" y="485" width="0.0796%" height="15" fill="rgb(220,23,39)" fg:x="1123" fg:w="1"/><text x="89.5897%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4193%" y="661" width="0.0796%" height="15" fill="rgb(236,20,54)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4193%" y="645" width="0.0796%" height="15" fill="rgb(213,22,0)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4193%" y="629" width="0.0796%" height="15" fill="rgb(226,144,21)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.4193%" y="613" width="0.0796%" height="15" fill="rgb(240,32,26)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.4193%" y="597" width="0.0796%" height="15" fill="rgb(252,225,52)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.4193%" y="581" width="0.0796%" height="15" fill="rgb(227,113,38)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4193%" y="565" width="0.0796%" height="15" fill="rgb(246,146,48)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.4193%" y="549" width="0.0796%" height="15" fill="rgb(229,83,50)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.4193%" y="533" width="0.0796%" height="15" fill="rgb(248,146,37)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.4193%" y="517" width="0.0796%" height="15" fill="rgb(230,102,37)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.4193%" y="501" width="0.0796%" height="15" fill="rgb(226,129,21)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.4193%" y="485" width="0.0796%" height="15" fill="rgb(241,215,13)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.4193%" y="469" width="0.0796%" height="15" fill="rgb(217,128,6)" fg:x="1124" fg:w="1"/><text x="89.6693%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4988%" y="661" width="0.1591%" height="15" fill="rgb(248,48,54)" fg:x="1125" fg:w="2"/><text x="89.7488%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="89.4988%" y="645" width="0.1591%" height="15" fill="rgb(219,83,38)" fg:x="1125" fg:w="2"/><text x="89.7488%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.5784%" y="629" width="0.0796%" height="15" fill="rgb(252,210,52)" fg:x="1126" fg:w="1"/><text x="89.8284%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6579%" y="645" width="0.0796%" height="15" fill="rgb(221,200,4)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.6579%" y="629" width="0.0796%" height="15" fill="rgb(216,58,11)" fg:x="1127" fg:w="1"/><text x="89.9079%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.7375%" y="645" width="0.0796%" height="15" fill="rgb(213,152,6)" fg:x="1128" fg:w="1"/><text x="89.9875%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.88%)</title><rect x="89.0215%" y="693" width="0.8751%" height="15" fill="rgb(209,210,52)" fg:x="1119" fg:w="11"/><text x="89.2715%" y="703.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="89.1806%" y="677" width="0.7160%" height="15" fill="rgb(216,26,42)" fg:x="1121" fg:w="9"/><text x="89.4306%" y="687.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="89.6579%" y="661" width="0.2387%" height="15" fill="rgb(229,8,52)" fg:x="1127" fg:w="3"/><text x="89.9079%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.8170%" y="645" width="0.0796%" height="15" fill="rgb(234,11,12)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.8170%" y="629" width="0.0796%" height="15" fill="rgb(222,132,34)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="639.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.8170%" y="613" width="0.0796%" height="15" fill="rgb(246,51,18)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.8170%" y="597" width="0.0796%" height="15" fill="rgb(234,40,7)" fg:x="1129" fg:w="1"/><text x="90.0670%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8966%" y="661" width="0.0796%" height="15" fill="rgb(240,11,8)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.8966%" y="645" width="0.0796%" height="15" fill="rgb(218,222,21)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="89.8966%" y="629" width="0.0796%" height="15" fill="rgb(238,59,21)" fg:x="1130" fg:w="1"/><text x="90.1466%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9761%" y="661" width="0.0796%" height="15" fill="rgb(252,128,29)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.9761%" y="645" width="0.0796%" height="15" fill="rgb(245,61,34)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="89.9761%" y="629" width="0.0796%" height="15" fill="rgb(246,36,52)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="89.9761%" y="613" width="0.0796%" height="15" fill="rgb(243,48,49)" fg:x="1131" fg:w="1"/><text x="90.2261%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0557%" y="661" width="0.0796%" height="15" fill="rgb(252,114,15)" fg:x="1132" fg:w="1"/><text x="90.3057%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1352%" y="661" width="0.0796%" height="15" fill="rgb(243,228,39)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.1352%" y="645" width="0.0796%" height="15" fill="rgb(205,143,2)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1352%" y="629" width="0.0796%" height="15" fill="rgb(224,122,19)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.1352%" y="613" width="0.0796%" height="15" fill="rgb(250,66,51)" fg:x="1133" fg:w="1"/><text x="90.3852%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.2148%" y="613" width="0.0796%" height="15" fill="rgb(224,134,48)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.2148%" y="597" width="0.0796%" height="15" fill="rgb(219,137,43)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.2148%" y="581" width="0.0796%" height="15" fill="rgb(207,44,47)" fg:x="1134" fg:w="1"/><text x="90.4648%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.4535%" y="597" width="0.0796%" height="15" fill="rgb(245,216,11)" fg:x="1137" fg:w="1"/><text x="90.7035%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5330%" y="581" width="0.1591%" height="15" fill="rgb(236,168,30)" fg:x="1138" fg:w="2"/><text x="90.7830%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="90.5330%" y="565" width="0.1591%" height="15" fill="rgb(249,110,10)" fg:x="1138" fg:w="2"/><text x="90.7830%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.6126%" y="549" width="0.0796%" height="15" fill="rgb(226,10,48)" fg:x="1139" fg:w="1"/><text x="90.8626%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="90.5330%" y="597" width="0.4773%" height="15" fill="rgb(243,14,47)" fg:x="1138" fg:w="6"/><text x="90.7830%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.6921%" y="581" width="0.3182%" height="15" fill="rgb(208,184,14)" fg:x="1140" fg:w="4"/><text x="90.9421%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="90.6921%" y="565" width="0.3182%" height="15" fill="rgb(236,198,54)" fg:x="1140" fg:w="4"/><text x="90.9421%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="90.6921%" y="549" width="0.3182%" height="15" fill="rgb(241,186,5)" fg:x="1140" fg:w="4"/><text x="90.9421%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.8512%" y="533" width="0.1591%" height="15" fill="rgb(237,191,37)" fg:x="1142" fg:w="2"/><text x="91.1012%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="90.9308%" y="517" width="0.0796%" height="15" fill="rgb(216,223,24)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.9308%" y="501" width="0.0796%" height="15" fill="rgb(210,29,29)" fg:x="1143" fg:w="1"/><text x="91.1808%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (15 samples, 1.19%)</title><rect x="89.8966%" y="693" width="1.1933%" height="15" fill="rgb(243,36,45)" fg:x="1130" fg:w="15"/><text x="90.1466%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.19%)</title><rect x="89.8966%" y="677" width="1.1933%" height="15" fill="rgb(217,109,6)" fg:x="1130" fg:w="15"/><text x="90.1466%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.88%)</title><rect x="90.2148%" y="661" width="0.8751%" height="15" fill="rgb(240,106,11)" fg:x="1134" fg:w="11"/><text x="90.4648%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.88%)</title><rect x="90.2148%" y="645" width="0.8751%" height="15" fill="rgb(230,187,12)" fg:x="1134" fg:w="11"/><text x="90.4648%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.88%)</title><rect x="90.2148%" y="629" width="0.8751%" height="15" fill="rgb(242,88,45)" fg:x="1134" fg:w="11"/><text x="90.4648%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="90.2944%" y="613" width="0.7955%" height="15" fill="rgb(240,181,21)" fg:x="1135" fg:w="10"/><text x="90.5444%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0103%" y="597" width="0.0796%" height="15" fill="rgb(252,126,44)" fg:x="1144" fg:w="1"/><text x="91.2603%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.1695%" y="517" width="0.0796%" height="15" fill="rgb(230,157,48)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1695%" y="501" width="0.0796%" height="15" fill="rgb(224,15,2)" fg:x="1146" fg:w="1"/><text x="91.4195%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.1695%" y="549" width="0.1591%" height="15" fill="rgb(215,1,6)" fg:x="1146" fg:w="2"/><text x="91.4195%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.1695%" y="533" width="0.1591%" height="15" fill="rgb(210,225,13)" fg:x="1146" fg:w="2"/><text x="91.4195%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2490%" y="517" width="0.0796%" height="15" fill="rgb(214,25,30)" fg:x="1147" fg:w="1"/><text x="91.4990%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.1695%" y="565" width="0.3182%" height="15" fill="rgb(254,43,34)" fg:x="1146" fg:w="4"/><text x="91.4195%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.3286%" y="549" width="0.1591%" height="15" fill="rgb(210,6,40)" fg:x="1148" fg:w="2"/><text x="91.5786%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.3286%" y="533" width="0.1591%" height="15" fill="rgb(251,76,23)" fg:x="1148" fg:w="2"/><text x="91.5786%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.3286%" y="517" width="0.1591%" height="15" fill="rgb(214,7,14)" fg:x="1148" fg:w="2"/><text x="91.5786%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="91.5672%" y="549" width="0.0796%" height="15" fill="rgb(227,100,33)" fg:x="1151" fg:w="1"/><text x="91.8172%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="91.1695%" y="597" width="0.5569%" height="15" fill="rgb(211,49,7)" fg:x="1146" fg:w="7"/><text x="91.4195%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="91.1695%" y="581" width="0.5569%" height="15" fill="rgb(228,223,1)" fg:x="1146" fg:w="7"/><text x="91.4195%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="91.4877%" y="565" width="0.2387%" height="15" fill="rgb(245,92,22)" fg:x="1150" fg:w="3"/><text x="91.7377%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6468%" y="549" width="0.0796%" height="15" fill="rgb(232,221,10)" fg:x="1152" fg:w="1"/><text x="91.8968%" y="559.50"></text></g><g><title>engine::session::state::State::close (67 samples, 5.33%)</title><rect x="86.5553%" y="773" width="5.3302%" height="15" fill="rgb(252,175,23)" fg:x="1088" fg:w="67"/><text x="86.8053%" y="783.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (63 samples, 5.01%)</title><rect x="86.8735%" y="757" width="5.0119%" height="15" fill="rgb(234,229,25)" fg:x="1092" fg:w="63"/><text x="87.1235%" y="767.50">engine..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (61 samples, 4.85%)</title><rect x="87.0326%" y="741" width="4.8528%" height="15" fill="rgb(254,127,20)" fg:x="1094" fg:w="61"/><text x="87.2826%" y="751.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (60 samples, 4.77%)</title><rect x="87.1122%" y="725" width="4.7733%" height="15" fill="rgb(211,151,37)" fg:x="1095" fg:w="60"/><text x="87.3622%" y="735.50">engine..</text></g><g><title>kernel::model::any_entity_changes (36 samples, 2.86%)</title><rect x="89.0215%" y="709" width="2.8640%" height="15" fill="rgb(226,185,3)" fg:x="1119" fg:w="36"/><text x="89.2715%" y="719.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="91.0899%" y="693" width="0.7955%" height="15" fill="rgb(223,38,29)" fg:x="1145" fg:w="10"/><text x="91.3399%" y="703.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="91.0899%" y="677" width="0.7955%" height="15" fill="rgb(206,134,22)" fg:x="1145" fg:w="10"/><text x="91.3399%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="91.0899%" y="661" width="0.7955%" height="15" fill="rgb(243,211,4)" fg:x="1145" fg:w="10"/><text x="91.3399%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="91.1695%" y="645" width="0.7160%" height="15" fill="rgb(244,214,18)" fg:x="1146" fg:w="9"/><text x="91.4195%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="91.1695%" y="629" width="0.7160%" height="15" fill="rgb(208,165,52)" fg:x="1146" fg:w="9"/><text x="91.4195%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="91.1695%" y="613" width="0.7160%" height="15" fill="rgb(245,165,39)" fg:x="1146" fg:w="9"/><text x="91.4195%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="91.7263%" y="597" width="0.1591%" height="15" fill="rgb(250,46,43)" fg:x="1153" fg:w="2"/><text x="91.9763%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="91.7263%" y="581" width="0.1591%" height="15" fill="rgb(242,86,47)" fg:x="1153" fg:w="2"/><text x="91.9763%" y="591.50"></text></g><g><title>engine::session::Session::close (69 samples, 5.49%)</title><rect x="86.4757%" y="789" width="5.4893%" height="15" fill="rgb(232,173,5)" fg:x="1087" fg:w="69"/><text x="86.7257%" y="799.50">engine:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="91.8854%" y="773" width="0.0796%" height="15" fill="rgb(208,117,14)" fg:x="1155" fg:w="1"/><text x="92.1354%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="92.2832%" y="677" width="0.0796%" height="15" fill="rgb(205,144,47)" fg:x="1160" fg:w="1"/><text x="92.5332%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="92.2832%" y="661" width="0.0796%" height="15" fill="rgb(228,62,6)" fg:x="1160" fg:w="1"/><text x="92.5332%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="92.2832%" y="645" width="0.0796%" height="15" fill="rgb(238,32,51)" fg:x="1160" fg:w="1"/><text x="92.5332%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="92.2832%" y="629" width="0.0796%" height="15" fill="rgb(251,211,21)" fg:x="1160" fg:w="1"/><text x="92.5332%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2832%" y="613" width="0.0796%" height="15" fill="rgb(244,43,23)" fg:x="1160" fg:w="1"/><text x="92.5332%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.3628%" y="597" width="0.0796%" height="15" fill="rgb(219,48,27)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.3628%" y="581" width="0.0796%" height="15" fill="rgb(251,72,17)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.3628%" y="565" width="0.0796%" height="15" fill="rgb(214,69,49)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.3628%" y="549" width="0.0796%" height="15" fill="rgb(242,96,45)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.3628%" y="533" width="0.0796%" height="15" fill="rgb(233,20,50)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3628%" y="517" width="0.0796%" height="15" fill="rgb(247,82,43)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3628%" y="501" width="0.0796%" height="15" fill="rgb(210,97,3)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3628%" y="485" width="0.0796%" height="15" fill="rgb(217,113,26)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3628%" y="469" width="0.0796%" height="15" fill="rgb(207,166,18)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.3628%" y="453" width="0.0796%" height="15" fill="rgb(205,124,54)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3628%" y="437" width="0.0796%" height="15" fill="rgb(211,140,29)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3628%" y="421" width="0.0796%" height="15" fill="rgb(228,83,33)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3628%" y="405" width="0.0796%" height="15" fill="rgb(225,217,40)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3628%" y="389" width="0.0796%" height="15" fill="rgb(221,229,30)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3628%" y="373" width="0.0796%" height="15" fill="rgb(210,1,48)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.3628%" y="357" width="0.0796%" height="15" fill="rgb(205,53,50)" fg:x="1161" fg:w="1"/><text x="92.6128%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.5219%" y="501" width="0.0796%" height="15" fill="rgb(211,25,54)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.5219%" y="485" width="0.0796%" height="15" fill="rgb(205,28,13)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.5219%" y="469" width="0.0796%" height="15" fill="rgb(214,37,48)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.5219%" y="453" width="0.0796%" height="15" fill="rgb(226,141,8)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="92.5219%" y="437" width="0.0796%" height="15" fill="rgb(206,200,0)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.5219%" y="421" width="0.0796%" height="15" fill="rgb(238,152,34)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="92.5219%" y="405" width="0.0796%" height="15" fill="rgb(216,72,48)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="92.5219%" y="389" width="0.0796%" height="15" fill="rgb(246,48,2)" fg:x="1163" fg:w="1"/><text x="92.7719%" y="399.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="92.0446%" y="709" width="0.6364%" height="15" fill="rgb(249,59,28)" fg:x="1157" fg:w="8"/><text x="92.2946%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="92.2832%" y="693" width="0.3978%" height="15" fill="rgb(253,198,14)" fg:x="1160" fg:w="5"/><text x="92.5332%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="92.3628%" y="677" width="0.3182%" height="15" fill="rgb(225,162,4)" fg:x="1161" fg:w="4"/><text x="92.6128%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="92.3628%" y="661" width="0.3182%" height="15" fill="rgb(231,126,49)" fg:x="1161" fg:w="4"/><text x="92.6128%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (4 samples, 0.32%)</title><rect x="92.3628%" y="645" width="0.3182%" height="15" fill="rgb(207,41,3)" fg:x="1161" fg:w="4"/><text x="92.6128%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="92.3628%" y="629" width="0.3182%" height="15" fill="rgb(212,223,36)" fg:x="1161" fg:w="4"/><text x="92.6128%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="92.3628%" y="613" width="0.3182%" height="15" fill="rgb(214,96,38)" fg:x="1161" fg:w="4"/><text x="92.6128%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="92.4423%" y="597" width="0.2387%" height="15" fill="rgb(246,104,47)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="92.4423%" y="581" width="0.2387%" height="15" fill="rgb(227,212,36)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.4423%" y="565" width="0.2387%" height="15" fill="rgb(250,163,41)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="92.4423%" y="549" width="0.2387%" height="15" fill="rgb(250,130,17)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="92.4423%" y="533" width="0.2387%" height="15" fill="rgb(206,42,32)" fg:x="1162" fg:w="3"/><text x="92.6923%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.5219%" y="517" width="0.1591%" height="15" fill="rgb(224,95,7)" fg:x="1163" fg:w="2"/><text x="92.7719%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6014%" y="501" width="0.0796%" height="15" fill="rgb(242,96,42)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6014%" y="485" width="0.0796%" height="15" fill="rgb(237,194,4)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6014%" y="469" width="0.0796%" height="15" fill="rgb(245,142,29)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6014%" y="453" width="0.0796%" height="15" fill="rgb(247,66,43)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6014%" y="437" width="0.0796%" height="15" fill="rgb(220,153,30)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6014%" y="421" width="0.0796%" height="15" fill="rgb(207,130,54)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6014%" y="405" width="0.0796%" height="15" fill="rgb(242,49,39)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6014%" y="389" width="0.0796%" height="15" fill="rgb(206,227,44)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6014%" y="373" width="0.0796%" height="15" fill="rgb(236,74,29)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6014%" y="357" width="0.0796%" height="15" fill="rgb(222,52,23)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6014%" y="341" width="0.0796%" height="15" fill="rgb(245,65,4)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.6014%" y="325" width="0.0796%" height="15" fill="rgb(205,120,32)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6014%" y="309" width="0.0796%" height="15" fill="rgb(226,156,21)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.6014%" y="293" width="0.0796%" height="15" fill="rgb(240,117,11)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.6014%" y="277" width="0.0796%" height="15" fill="rgb(232,214,36)" fg:x="1164" fg:w="1"/><text x="92.8514%" y="287.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (1 samples, 0.08%)</title><rect x="92.6810%" y="565" width="0.0796%" height="15" fill="rgb(252,121,45)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.6810%" y="549" width="0.0796%" height="15" fill="rgb(250,206,1)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.6810%" y="533" width="0.0796%" height="15" fill="rgb(213,40,16)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.6810%" y="517" width="0.0796%" height="15" fill="rgb(222,106,3)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.6810%" y="501" width="0.0796%" height="15" fill="rgb(238,140,8)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6810%" y="485" width="0.0796%" height="15" fill="rgb(217,119,30)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.6810%" y="469" width="0.0796%" height="15" fill="rgb(228,189,17)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6810%" y="453" width="0.0796%" height="15" fill="rgb(243,94,42)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.6810%" y="437" width="0.0796%" height="15" fill="rgb(228,105,42)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.6810%" y="421" width="0.0796%" height="15" fill="rgb(233,19,53)" fg:x="1165" fg:w="1"/><text x="92.9310%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.7605%" y="309" width="0.0796%" height="15" fill="rgb(240,22,26)" fg:x="1166" fg:w="1"/><text x="93.0105%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.7605%" y="517" width="0.1591%" height="15" fill="rgb(238,97,34)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.7605%" y="501" width="0.1591%" height="15" fill="rgb(210,177,8)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.7605%" y="485" width="0.1591%" height="15" fill="rgb(217,168,6)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.7605%" y="469" width="0.1591%" height="15" fill="rgb(223,34,43)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="92.7605%" y="453" width="0.1591%" height="15" fill="rgb(252,123,35)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="92.7605%" y="437" width="0.1591%" height="15" fill="rgb(243,162,1)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="92.7605%" y="421" width="0.1591%" height="15" fill="rgb(250,83,22)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.7605%" y="405" width="0.1591%" height="15" fill="rgb(247,184,7)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="92.7605%" y="389" width="0.1591%" height="15" fill="rgb(254,212,7)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="92.7605%" y="373" width="0.1591%" height="15" fill="rgb(249,198,8)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="92.7605%" y="357" width="0.1591%" height="15" fill="rgb(230,74,12)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="92.7605%" y="341" width="0.1591%" height="15" fill="rgb(253,174,9)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="92.7605%" y="325" width="0.1591%" height="15" fill="rgb(222,191,12)" fg:x="1166" fg:w="2"/><text x="93.0105%" y="335.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="92.8401%" y="309" width="0.0796%" height="15" fill="rgb(234,28,43)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="92.8401%" y="293" width="0.0796%" height="15" fill="rgb(232,13,38)" fg:x="1167" fg:w="1"/><text x="93.0901%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.1583%" y="469" width="0.0796%" height="15" fill="rgb(239,101,25)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.1583%" y="453" width="0.0796%" height="15" fill="rgb(237,214,49)" fg:x="1171" fg:w="1"/><text x="93.4083%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.3174%" y="245" width="0.0796%" height="15" fill="rgb(212,188,4)" fg:x="1173" fg:w="1"/><text x="93.5674%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="93.3174%" y="261" width="0.1591%" height="15" fill="rgb(208,167,23)" fg:x="1173" fg:w="2"/><text x="93.5674%" y="271.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="93.3970%" y="245" width="0.0796%" height="15" fill="rgb(209,179,40)" fg:x="1174" fg:w="1"/><text x="93.6470%" y="255.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.3970%" y="229" width="0.0796%" height="15" fill="rgb(233,144,24)" fg:x="1174" fg:w="1"/><text x="93.6470%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4765%" y="213" width="0.0796%" height="15" fill="rgb(250,4,25)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4765%" y="197" width="0.0796%" height="15" fill="rgb(236,222,29)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4765%" y="181" width="0.0796%" height="15" fill="rgb(228,152,14)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.4765%" y="165" width="0.0796%" height="15" fill="rgb(240,11,37)" fg:x="1175" fg:w="1"/><text x="93.7265%" y="175.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="93.2379%" y="341" width="0.3978%" height="15" fill="rgb(240,96,5)" fg:x="1172" fg:w="5"/><text x="93.4879%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.2379%" y="325" width="0.3978%" height="15" fill="rgb(242,145,4)" fg:x="1172" fg:w="5"/><text x="93.4879%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="93.2379%" y="309" width="0.3978%" height="15" fill="rgb(229,118,33)" fg:x="1172" fg:w="5"/><text x="93.4879%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="93.2379%" y="293" width="0.3978%" height="15" fill="rgb(213,82,17)" fg:x="1172" fg:w="5"/><text x="93.4879%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="93.3174%" y="277" width="0.3182%" height="15" fill="rgb(236,71,53)" fg:x="1173" fg:w="4"/><text x="93.5674%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.4765%" y="261" width="0.1591%" height="15" fill="rgb(227,158,19)" fg:x="1175" fg:w="2"/><text x="93.7265%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.4765%" y="245" width="0.1591%" height="15" fill="rgb(220,52,31)" fg:x="1175" fg:w="2"/><text x="93.7265%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.4765%" y="229" width="0.1591%" height="15" fill="rgb(232,137,27)" fg:x="1175" fg:w="2"/><text x="93.7265%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.5561%" y="213" width="0.0796%" height="15" fill="rgb(208,155,6)" fg:x="1176" fg:w="1"/><text x="93.8061%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.5561%" y="197" width="0.0796%" height="15" fill="rgb(253,212,46)" fg:x="1176" fg:w="1"/><text x="93.8061%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.5561%" y="181" width="0.0796%" height="15" fill="rgb(220,55,4)" fg:x="1176" fg:w="1"/><text x="93.8061%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.6356%" y="197" width="0.0796%" height="15" fill="rgb(226,100,5)" fg:x="1177" fg:w="1"/><text x="93.8856%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.6356%" y="181" width="0.0796%" height="15" fill="rgb(247,200,51)" fg:x="1177" fg:w="1"/><text x="93.8856%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="93.6356%" y="229" width="0.1591%" height="15" fill="rgb(220,203,54)" fg:x="1177" fg:w="2"/><text x="93.8856%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.6356%" y="213" width="0.1591%" height="15" fill="rgb(230,187,54)" fg:x="1177" fg:w="2"/><text x="93.8856%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7152%" y="197" width="0.0796%" height="15" fill="rgb(225,132,12)" fg:x="1178" fg:w="1"/><text x="93.9652%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="93.6356%" y="261" width="0.2387%" height="15" fill="rgb(205,210,33)" fg:x="1177" fg:w="3"/><text x="93.8856%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="93.6356%" y="245" width="0.2387%" height="15" fill="rgb(238,192,7)" fg:x="1177" fg:w="3"/><text x="93.8856%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="93.7947%" y="229" width="0.0796%" height="15" fill="rgb(245,82,29)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7947%" y="213" width="0.0796%" height="15" fill="rgb(234,222,39)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7947%" y="197" width="0.0796%" height="15" fill="rgb(231,222,18)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7947%" y="181" width="0.0796%" height="15" fill="rgb(216,61,10)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7947%" y="165" width="0.0796%" height="15" fill="rgb(241,116,34)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="175.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.7947%" y="149" width="0.0796%" height="15" fill="rgb(225,32,22)" fg:x="1179" fg:w="1"/><text x="94.0447%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="93.8743%" y="261" width="0.0796%" height="15" fill="rgb(236,35,19)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="93.8743%" y="245" width="0.0796%" height="15" fill="rgb(231,198,28)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.8743%" y="229" width="0.0796%" height="15" fill="rgb(211,215,31)" fg:x="1180" fg:w="1"/><text x="94.1243%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.9539%" y="229" width="0.0796%" height="15" fill="rgb(243,118,23)" fg:x="1181" fg:w="1"/><text x="94.2039%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="93.6356%" y="309" width="0.4773%" height="15" fill="rgb(228,104,45)" fg:x="1177" fg:w="6"/><text x="93.8856%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="93.6356%" y="293" width="0.4773%" height="15" fill="rgb(216,198,17)" fg:x="1177" fg:w="6"/><text x="93.8856%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="93.6356%" y="277" width="0.4773%" height="15" fill="rgb(249,39,23)" fg:x="1177" fg:w="6"/><text x="93.8856%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.9539%" y="261" width="0.1591%" height="15" fill="rgb(250,186,54)" fg:x="1181" fg:w="2"/><text x="94.2039%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.9539%" y="245" width="0.1591%" height="15" fill="rgb(243,110,14)" fg:x="1181" fg:w="2"/><text x="94.2039%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.0334%" y="229" width="0.0796%" height="15" fill="rgb(236,32,12)" fg:x="1182" fg:w="1"/><text x="94.2834%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.0334%" y="213" width="0.0796%" height="15" fill="rgb(211,92,33)" fg:x="1182" fg:w="1"/><text x="94.2834%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.95%)</title><rect x="93.2379%" y="357" width="0.9547%" height="15" fill="rgb(254,154,8)" fg:x="1172" fg:w="12"/><text x="93.4879%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="93.6356%" y="341" width="0.5569%" height="15" fill="rgb(241,107,40)" fg:x="1177" fg:w="7"/><text x="93.8856%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="93.6356%" y="325" width="0.5569%" height="15" fill="rgb(208,24,40)" fg:x="1177" fg:w="7"/><text x="93.8856%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.1130%" y="309" width="0.0796%" height="15" fill="rgb(252,158,9)" fg:x="1183" fg:w="1"/><text x="94.3630%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.1130%" y="293" width="0.0796%" height="15" fill="rgb(241,9,28)" fg:x="1183" fg:w="1"/><text x="94.3630%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.1130%" y="277" width="0.0796%" height="15" fill="rgb(210,199,32)" fg:x="1183" fg:w="1"/><text x="94.3630%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.1130%" y="261" width="0.0796%" height="15" fill="rgb(228,147,42)" fg:x="1183" fg:w="1"/><text x="94.3630%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1925%" y="341" width="0.0796%" height="15" fill="rgb(248,202,26)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.1925%" y="325" width="0.0796%" height="15" fill="rgb(225,67,4)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.1925%" y="309" width="0.0796%" height="15" fill="rgb(234,87,25)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.1925%" y="293" width="0.0796%" height="15" fill="rgb(229,58,0)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.1925%" y="277" width="0.0796%" height="15" fill="rgb(211,218,3)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1925%" y="261" width="0.0796%" height="15" fill="rgb(216,109,54)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.1925%" y="245" width="0.0796%" height="15" fill="rgb(252,156,40)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.1925%" y="229" width="0.0796%" height="15" fill="rgb(208,1,12)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="239.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="94.1925%" y="213" width="0.0796%" height="15" fill="rgb(214,179,53)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="94.1925%" y="197" width="0.0796%" height="15" fill="rgb(205,173,17)" fg:x="1184" fg:w="1"/><text x="94.4425%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.11%)</title><rect x="93.2379%" y="389" width="1.1138%" height="15" fill="rgb(243,26,15)" fg:x="1172" fg:w="14"/><text x="93.4879%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.11%)</title><rect x="93.2379%" y="373" width="1.1138%" height="15" fill="rgb(231,139,31)" fg:x="1172" fg:w="14"/><text x="93.4879%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="94.1925%" y="357" width="0.1591%" height="15" fill="rgb(208,163,22)" fg:x="1184" fg:w="2"/><text x="94.4425%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2721%" y="341" width="0.0796%" height="15" fill="rgb(245,84,24)" fg:x="1185" fg:w="1"/><text x="94.5221%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.2721%" y="325" width="0.0796%" height="15" fill="rgb(238,140,36)" fg:x="1185" fg:w="1"/><text x="94.5221%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.2721%" y="309" width="0.0796%" height="15" fill="rgb(218,211,39)" fg:x="1185" fg:w="1"/><text x="94.5221%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2721%" y="293" width="0.0796%" height="15" fill="rgb(242,59,29)" fg:x="1185" fg:w="1"/><text x="94.5221%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (15 samples, 1.19%)</title><rect x="93.2379%" y="469" width="1.1933%" height="15" fill="rgb(245,91,22)" fg:x="1172" fg:w="15"/><text x="93.4879%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (15 samples, 1.19%)</title><rect x="93.2379%" y="453" width="1.1933%" height="15" fill="rgb(206,13,6)" fg:x="1172" fg:w="15"/><text x="93.4879%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 1.19%)</title><rect x="93.2379%" y="437" width="1.1933%" height="15" fill="rgb(212,147,32)" fg:x="1172" fg:w="15"/><text x="93.4879%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 1.19%)</title><rect x="93.2379%" y="421" width="1.1933%" height="15" fill="rgb(254,64,12)" fg:x="1172" fg:w="15"/><text x="93.4879%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (15 samples, 1.19%)</title><rect x="93.2379%" y="405" width="1.1933%" height="15" fill="rgb(212,104,54)" fg:x="1172" fg:w="15"/><text x="93.4879%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3516%" y="389" width="0.0796%" height="15" fill="rgb(254,77,46)" fg:x="1186" fg:w="1"/><text x="94.6016%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.4312%" y="437" width="0.0796%" height="15" fill="rgb(219,55,26)" fg:x="1187" fg:w="1"/><text x="94.6812%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (23 samples, 1.83%)</title><rect x="92.7605%" y="533" width="1.8298%" height="15" fill="rgb(230,133,21)" fg:x="1166" fg:w="23"/><text x="93.0105%" y="543.50">p..</text></g><g><title>plugins_core::tools::contained_by (21 samples, 1.67%)</title><rect x="92.9196%" y="517" width="1.6706%" height="15" fill="rgb(247,110,50)" fg:x="1168" fg:w="21"/><text x="93.1696%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (21 samples, 1.67%)</title><rect x="92.9196%" y="501" width="1.6706%" height="15" fill="rgb(229,31,50)" fg:x="1168" fg:w="21"/><text x="93.1696%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.51%)</title><rect x="93.0788%" y="485" width="1.5115%" height="15" fill="rgb(250,13,40)" fg:x="1170" fg:w="19"/><text x="93.3288%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="94.4312%" y="469" width="0.1591%" height="15" fill="rgb(212,163,14)" fg:x="1187" fg:w="2"/><text x="94.6812%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.4312%" y="453" width="0.1591%" height="15" fill="rgb(211,190,39)" fg:x="1187" fg:w="2"/><text x="94.6812%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.5107%" y="437" width="0.0796%" height="15" fill="rgb(245,39,52)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.5107%" y="421" width="0.0796%" height="15" fill="rgb(216,76,3)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="94.5107%" y="405" width="0.0796%" height="15" fill="rgb(218,225,6)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5107%" y="389" width="0.0796%" height="15" fill="rgb(215,137,11)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5107%" y="373" width="0.0796%" height="15" fill="rgb(234,223,14)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.5107%" y="357" width="0.0796%" height="15" fill="rgb(236,24,21)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5107%" y="341" width="0.0796%" height="15" fill="rgb(208,183,10)" fg:x="1188" fg:w="1"/><text x="94.7607%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5903%" y="517" width="0.0796%" height="15" fill="rgb(254,9,3)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5903%" y="501" width="0.0796%" height="15" fill="rgb(225,112,10)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5903%" y="485" width="0.0796%" height="15" fill="rgb(232,7,4)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.5903%" y="469" width="0.0796%" height="15" fill="rgb(241,50,8)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.5903%" y="453" width="0.0796%" height="15" fill="rgb(209,164,32)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.5903%" y="437" width="0.0796%" height="15" fill="rgb(222,99,11)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.5903%" y="421" width="0.0796%" height="15" fill="rgb(208,139,8)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5903%" y="405" width="0.0796%" height="15" fill="rgb(210,220,31)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.5903%" y="389" width="0.0796%" height="15" fill="rgb(253,192,40)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.5903%" y="373" width="0.0796%" height="15" fill="rgb(218,174,11)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.5903%" y="357" width="0.0796%" height="15" fill="rgb(238,12,0)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.5903%" y="341" width="0.0796%" height="15" fill="rgb(223,87,52)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.5903%" y="325" width="0.0796%" height="15" fill="rgb(206,198,52)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.5903%" y="309" width="0.0796%" height="15" fill="rgb(239,183,3)" fg:x="1189" fg:w="1"/><text x="94.8403%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="94.5903%" y="533" width="0.2387%" height="15" fill="rgb(216,111,9)" fg:x="1189" fg:w="3"/><text x="94.8403%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="94.6698%" y="517" width="0.1591%" height="15" fill="rgb(221,6,16)" fg:x="1190" fg:w="2"/><text x="94.9198%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="94.7494%" y="501" width="0.0796%" height="15" fill="rgb(205,110,11)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="94.7494%" y="485" width="0.0796%" height="15" fill="rgb(210,162,38)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="94.7494%" y="469" width="0.0796%" height="15" fill="rgb(235,180,51)" fg:x="1191" fg:w="1"/><text x="94.9994%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (27 samples, 2.15%)</title><rect x="92.7605%" y="565" width="2.1480%" height="15" fill="rgb(205,214,28)" fg:x="1166" fg:w="27"/><text x="93.0105%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (27 samples, 2.15%)</title><rect x="92.7605%" y="549" width="2.1480%" height="15" fill="rgb(211,57,51)" fg:x="1166" fg:w="27"/><text x="93.0105%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="94.8290%" y="533" width="0.0796%" height="15" fill="rgb(207,55,41)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8290%" y="517" width="0.0796%" height="15" fill="rgb(245,45,35)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8290%" y="501" width="0.0796%" height="15" fill="rgb(233,168,39)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8290%" y="485" width="0.0796%" height="15" fill="rgb(216,61,7)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8290%" y="469" width="0.0796%" height="15" fill="rgb(237,109,44)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8290%" y="453" width="0.0796%" height="15" fill="rgb(240,92,7)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8290%" y="437" width="0.0796%" height="15" fill="rgb(252,17,32)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8290%" y="421" width="0.0796%" height="15" fill="rgb(219,85,5)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8290%" y="405" width="0.0796%" height="15" fill="rgb(213,50,52)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8290%" y="389" width="0.0796%" height="15" fill="rgb(239,79,50)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8290%" y="373" width="0.0796%" height="15" fill="rgb(249,49,7)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8290%" y="357" width="0.0796%" height="15" fill="rgb(222,126,43)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8290%" y="341" width="0.0796%" height="15" fill="rgb(230,157,52)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8290%" y="325" width="0.0796%" height="15" fill="rgb(210,66,35)" fg:x="1192" fg:w="1"/><text x="95.0790%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9085%" y="565" width="0.0796%" height="15" fill="rgb(220,96,16)" fg:x="1193" fg:w="1"/><text x="95.1585%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.9881%" y="533" width="0.0796%" height="15" fill="rgb(242,43,33)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.9881%" y="517" width="0.0796%" height="15" fill="rgb(248,128,51)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.9881%" y="501" width="0.0796%" height="15" fill="rgb(234,19,35)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9881%" y="485" width="0.0796%" height="15" fill="rgb(232,120,30)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9881%" y="469" width="0.0796%" height="15" fill="rgb(209,184,13)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9881%" y="453" width="0.0796%" height="15" fill="rgb(222,153,0)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9881%" y="437" width="0.0796%" height="15" fill="rgb(251,96,47)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.9881%" y="421" width="0.0796%" height="15" fill="rgb(253,113,5)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9881%" y="405" width="0.0796%" height="15" fill="rgb(241,96,1)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.9881%" y="389" width="0.0796%" height="15" fill="rgb(216,225,1)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.9881%" y="373" width="0.0796%" height="15" fill="rgb(227,108,0)" fg:x="1194" fg:w="1"/><text x="95.2381%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="95.0676%" y="517" width="0.0796%" height="15" fill="rgb(221,29,48)" fg:x="1195" fg:w="1"/><text x="95.3176%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.0676%" y="501" width="0.0796%" height="15" fill="rgb(222,55,16)" fg:x="1195" fg:w="1"/><text x="95.3176%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.0676%" y="485" width="0.0796%" height="15" fill="rgb(242,210,22)" fg:x="1195" fg:w="1"/><text x="95.3176%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (4 samples, 0.32%)</title><rect x="94.9881%" y="565" width="0.3182%" height="15" fill="rgb(223,142,30)" fg:x="1194" fg:w="4"/><text x="95.2381%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="94.9881%" y="549" width="0.3182%" height="15" fill="rgb(248,92,51)" fg:x="1194" fg:w="4"/><text x="95.2381%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="95.0676%" y="533" width="0.2387%" height="15" fill="rgb(249,201,12)" fg:x="1195" fg:w="3"/><text x="95.3176%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.1472%" y="517" width="0.1591%" height="15" fill="rgb(230,213,39)" fg:x="1196" fg:w="2"/><text x="95.3972%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.1472%" y="501" width="0.1591%" height="15" fill="rgb(232,46,34)" fg:x="1196" fg:w="2"/><text x="95.3972%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2267%" y="485" width="0.0796%" height="15" fill="rgb(226,194,19)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2267%" y="469" width="0.0796%" height="15" fill="rgb(254,144,47)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2267%" y="453" width="0.0796%" height="15" fill="rgb(254,168,3)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2267%" y="437" width="0.0796%" height="15" fill="rgb(249,104,32)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.2267%" y="421" width="0.0796%" height="15" fill="rgb(213,143,0)" fg:x="1197" fg:w="1"/><text x="95.4767%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="95.3063%" y="549" width="0.0796%" height="15" fill="rgb(211,72,7)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="95.3063%" y="533" width="0.0796%" height="15" fill="rgb(249,86,4)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.3063%" y="517" width="0.0796%" height="15" fill="rgb(252,17,31)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.3063%" y="501" width="0.0796%" height="15" fill="rgb(238,169,43)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.3063%" y="485" width="0.0796%" height="15" fill="rgb(220,206,52)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3063%" y="469" width="0.0796%" height="15" fill="rgb(214,176,19)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3063%" y="453" width="0.0796%" height="15" fill="rgb(206,11,39)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3063%" y="437" width="0.0796%" height="15" fill="rgb(234,191,6)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3063%" y="421" width="0.0796%" height="15" fill="rgb(244,46,51)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.3063%" y="405" width="0.0796%" height="15" fill="rgb(212,184,35)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3063%" y="389" width="0.0796%" height="15" fill="rgb(217,184,38)" fg:x="1198" fg:w="1"/><text x="95.5563%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="95.3858%" y="533" width="0.0796%" height="15" fill="rgb(218,88,44)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.3858%" y="517" width="0.0796%" height="15" fill="rgb(241,121,2)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="95.3858%" y="501" width="0.0796%" height="15" fill="rgb(232,92,4)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="95.3858%" y="485" width="0.0796%" height="15" fill="rgb(233,16,51)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="95.3858%" y="469" width="0.0796%" height="15" fill="rgb(205,138,9)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="95.3858%" y="453" width="0.0796%" height="15" fill="rgb(212,133,44)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="95.3858%" y="437" width="0.0796%" height="15" fill="rgb(247,170,39)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="421" width="0.0796%" height="15" fill="rgb(236,183,8)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.3858%" y="405" width="0.0796%" height="15" fill="rgb(245,194,21)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="389" width="0.0796%" height="15" fill="rgb(244,142,33)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="373" width="0.0796%" height="15" fill="rgb(237,159,51)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="357" width="0.0796%" height="15" fill="rgb(223,134,40)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.3858%" y="341" width="0.0796%" height="15" fill="rgb(217,227,45)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="325" width="0.0796%" height="15" fill="rgb(205,171,8)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="309" width="0.0796%" height="15" fill="rgb(231,83,23)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="95.3858%" y="293" width="0.0796%" height="15" fill="rgb(226,65,0)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="95.3858%" y="277" width="0.0796%" height="15" fill="rgb(218,127,49)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.3858%" y="261" width="0.0796%" height="15" fill="rgb(238,61,34)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="95.3858%" y="245" width="0.0796%" height="15" fill="rgb(228,144,3)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="95.3858%" y="229" width="0.0796%" height="15" fill="rgb(212,155,32)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="95.3858%" y="213" width="0.0796%" height="15" fill="rgb(219,3,13)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="95.3858%" y="197" width="0.0796%" height="15" fill="rgb(225,41,39)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="95.3858%" y="181" width="0.0796%" height="15" fill="rgb(236,169,50)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="95.3858%" y="165" width="0.0796%" height="15" fill="rgb(253,211,17)" fg:x="1199" fg:w="1"/><text x="95.6358%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.4654%" y="485" width="0.0796%" height="15" fill="rgb(219,67,7)" fg:x="1200" fg:w="1"/><text x="95.7154%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="95.4654%" y="501" width="0.1591%" height="15" fill="rgb(236,198,21)" fg:x="1200" fg:w="2"/><text x="95.7154%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.5449%" y="485" width="0.0796%" height="15" fill="rgb(250,83,24)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.5449%" y="469" width="0.0796%" height="15" fill="rgb(249,175,20)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5449%" y="453" width="0.0796%" height="15" fill="rgb(239,72,36)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5449%" y="437" width="0.0796%" height="15" fill="rgb(225,33,12)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5449%" y="421" width="0.0796%" height="15" fill="rgb(213,209,10)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5449%" y="405" width="0.0796%" height="15" fill="rgb(233,156,7)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5449%" y="389" width="0.0796%" height="15" fill="rgb(242,71,8)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5449%" y="373" width="0.0796%" height="15" fill="rgb(223,170,53)" fg:x="1201" fg:w="1"/><text x="95.7949%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="95.3858%" y="549" width="0.3182%" height="15" fill="rgb(252,23,27)" fg:x="1199" fg:w="4"/><text x="95.6358%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="95.4654%" y="533" width="0.2387%" height="15" fill="rgb(220,23,37)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="95.4654%" y="517" width="0.2387%" height="15" fill="rgb(208,60,20)" fg:x="1200" fg:w="3"/><text x="95.7154%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.6245%" y="501" width="0.0796%" height="15" fill="rgb(246,105,41)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.6245%" y="485" width="0.0796%" height="15" fill="rgb(229,80,14)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.6245%" y="469" width="0.0796%" height="15" fill="rgb(223,226,8)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6245%" y="453" width="0.0796%" height="15" fill="rgb(212,227,24)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6245%" y="437" width="0.0796%" height="15" fill="rgb(234,38,14)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6245%" y="421" width="0.0796%" height="15" fill="rgb(222,86,39)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6245%" y="405" width="0.0796%" height="15" fill="rgb(208,189,2)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.6245%" y="389" width="0.0796%" height="15" fill="rgb(229,19,19)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6245%" y="373" width="0.0796%" height="15" fill="rgb(250,169,51)" fg:x="1202" fg:w="1"/><text x="95.8745%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="95.7041%" y="549" width="0.0796%" height="15" fill="rgb(209,182,25)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.7041%" y="533" width="0.0796%" height="15" fill="rgb(240,113,23)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7041%" y="517" width="0.0796%" height="15" fill="rgb(224,93,33)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7041%" y="501" width="0.0796%" height="15" fill="rgb(234,37,17)" fg:x="1203" fg:w="1"/><text x="95.9541%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.7836%" y="533" width="0.0796%" height="15" fill="rgb(219,199,15)" fg:x="1204" fg:w="1"/><text x="96.0336%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.7836%" y="517" width="0.0796%" height="15" fill="rgb(249,190,12)" fg:x="1204" fg:w="1"/><text x="96.0336%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="95.8632%" y="533" width="0.0796%" height="15" fill="rgb(254,188,20)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="95.8632%" y="517" width="0.0796%" height="15" fill="rgb(227,85,36)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8632%" y="501" width="0.0796%" height="15" fill="rgb(214,186,36)" fg:x="1205" fg:w="1"/><text x="96.1132%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (42 samples, 3.34%)</title><rect x="92.6810%" y="581" width="3.3413%" height="15" fill="rgb(207,67,47)" fg:x="1165" fg:w="42"/><text x="92.9310%" y="591.50">&lt;pl..</text></g><g><title>plugins_core::location::change_location (9 samples, 0.72%)</title><rect x="95.3063%" y="565" width="0.7160%" height="15" fill="rgb(224,140,32)" fg:x="1198" fg:w="9"/><text x="95.5563%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="95.7836%" y="549" width="0.2387%" height="15" fill="rgb(225,114,12)" fg:x="1204" fg:w="3"/><text x="96.0336%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="95.9427%" y="533" width="0.0796%" height="15" fill="rgb(209,199,39)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9427%" y="517" width="0.0796%" height="15" fill="rgb(216,181,6)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9427%" y="501" width="0.0796%" height="15" fill="rgb(210,39,50)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9427%" y="485" width="0.0796%" height="15" fill="rgb(239,154,53)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9427%" y="469" width="0.0796%" height="15" fill="rgb(235,123,22)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9427%" y="453" width="0.0796%" height="15" fill="rgb(243,194,26)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9427%" y="437" width="0.0796%" height="15" fill="rgb(245,23,33)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9427%" y="421" width="0.0796%" height="15" fill="rgb(213,191,38)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9427%" y="405" width="0.0796%" height="15" fill="rgb(226,199,18)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.9427%" y="389" width="0.0796%" height="15" fill="rgb(210,106,30)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.9427%" y="373" width="0.0796%" height="15" fill="rgb(219,177,27)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.9427%" y="357" width="0.0796%" height="15" fill="rgb(215,14,22)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.9427%" y="341" width="0.0796%" height="15" fill="rgb(240,24,8)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9427%" y="325" width="0.0796%" height="15" fill="rgb(220,138,5)" fg:x="1206" fg:w="1"/><text x="96.1927%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (1 samples, 0.08%)</title><rect x="96.0223%" y="549" width="0.0796%" height="15" fill="rgb(254,39,11)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.0223%" y="533" width="0.0796%" height="15" fill="rgb(223,92,18)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.0223%" y="517" width="0.0796%" height="15" fill="rgb(231,216,35)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0223%" y="501" width="0.0796%" height="15" fill="rgb(210,197,31)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.0223%" y="485" width="0.0796%" height="15" fill="rgb(233,78,6)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0223%" y="469" width="0.0796%" height="15" fill="rgb(219,192,52)" fg:x="1207" fg:w="1"/><text x="96.2723%" y="479.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (2 samples, 0.16%)</title><rect x="96.0223%" y="565" width="0.1591%" height="15" fill="rgb(240,140,47)" fg:x="1207" fg:w="2"/><text x="96.2723%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.1018%" y="549" width="0.0796%" height="15" fill="rgb(214,22,41)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1018%" y="533" width="0.0796%" height="15" fill="rgb(216,28,18)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.1018%" y="517" width="0.0796%" height="15" fill="rgb(219,204,4)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.1018%" y="501" width="0.0796%" height="15" fill="rgb(216,98,27)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.1018%" y="485" width="0.0796%" height="15" fill="rgb(208,139,37)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.1018%" y="469" width="0.0796%" height="15" fill="rgb(241,193,50)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1018%" y="453" width="0.0796%" height="15" fill="rgb(227,24,47)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.1018%" y="437" width="0.0796%" height="15" fill="rgb(212,91,31)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.1018%" y="421" width="0.0796%" height="15" fill="rgb(253,174,34)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.1018%" y="405" width="0.0796%" height="15" fill="rgb(219,214,52)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.1018%" y="389" width="0.0796%" height="15" fill="rgb(222,221,3)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.1018%" y="373" width="0.0796%" height="15" fill="rgb(209,130,23)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.1018%" y="357" width="0.0796%" height="15" fill="rgb(232,162,43)" fg:x="1208" fg:w="1"/><text x="96.3518%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="96.2609%" y="517" width="0.1591%" height="15" fill="rgb(245,34,38)" fg:x="1210" fg:w="2"/><text x="96.5109%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="96.2609%" y="501" width="0.1591%" height="15" fill="rgb(226,70,5)" fg:x="1210" fg:w="2"/><text x="96.5109%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="96.2609%" y="485" width="0.1591%" height="15" fill="rgb(238,97,25)" fg:x="1210" fg:w="2"/><text x="96.5109%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.4200%" y="469" width="0.1591%" height="15" fill="rgb(246,1,22)" fg:x="1212" fg:w="2"/><text x="96.6700%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.4200%" y="453" width="0.1591%" height="15" fill="rgb(248,180,27)" fg:x="1212" fg:w="2"/><text x="96.6700%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.4200%" y="437" width="0.1591%" height="15" fill="rgb(223,147,15)" fg:x="1212" fg:w="2"/><text x="96.6700%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.4200%" y="421" width="0.1591%" height="15" fill="rgb(220,142,50)" fg:x="1212" fg:w="2"/><text x="96.6700%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4996%" y="405" width="0.0796%" height="15" fill="rgb(209,24,8)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4996%" y="389" width="0.0796%" height="15" fill="rgb(245,95,15)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4996%" y="373" width="0.0796%" height="15" fill="rgb(254,132,39)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4996%" y="357" width="0.0796%" height="15" fill="rgb(230,135,4)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4996%" y="341" width="0.0796%" height="15" fill="rgb(233,65,45)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4996%" y="325" width="0.0796%" height="15" fill="rgb(238,156,12)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4996%" y="309" width="0.0796%" height="15" fill="rgb(230,14,54)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4996%" y="293" width="0.0796%" height="15" fill="rgb(242,41,37)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4996%" y="277" width="0.0796%" height="15" fill="rgb(231,37,53)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4996%" y="261" width="0.0796%" height="15" fill="rgb(235,181,47)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4996%" y="245" width="0.0796%" height="15" fill="rgb(253,41,16)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4996%" y="229" width="0.0796%" height="15" fill="rgb(245,44,19)" fg:x="1213" fg:w="1"/><text x="96.7496%" y="239.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="96.5792%" y="469" width="0.0796%" height="15" fill="rgb(245,22,46)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="96.5792%" y="453" width="0.0796%" height="15" fill="rgb(207,84,51)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.5792%" y="437" width="0.0796%" height="15" fill="rgb(212,36,12)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="96.5792%" y="421" width="0.0796%" height="15" fill="rgb(240,188,18)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="96.5792%" y="405" width="0.0796%" height="15" fill="rgb(245,89,47)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="96.5792%" y="389" width="0.0796%" height="15" fill="rgb(216,24,14)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="96.5792%" y="373" width="0.0796%" height="15" fill="rgb(217,71,21)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5792%" y="357" width="0.0796%" height="15" fill="rgb(251,142,29)" fg:x="1214" fg:w="1"/><text x="96.8292%" y="367.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (8 samples, 0.64%)</title><rect x="96.1814%" y="533" width="0.6364%" height="15" fill="rgb(210,29,22)" fg:x="1209" fg:w="8"/><text x="96.4314%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.40%)</title><rect x="96.4200%" y="517" width="0.3978%" height="15" fill="rgb(248,174,36)" fg:x="1212" fg:w="5"/><text x="96.6700%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="96.4200%" y="501" width="0.3978%" height="15" fill="rgb(224,111,34)" fg:x="1212" fg:w="5"/><text x="96.6700%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="96.4200%" y="485" width="0.3978%" height="15" fill="rgb(245,177,23)" fg:x="1212" fg:w="5"/><text x="96.6700%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.6587%" y="469" width="0.1591%" height="15" fill="rgb(217,114,53)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.6587%" y="453" width="0.1591%" height="15" fill="rgb(223,157,10)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="96.6587%" y="437" width="0.1591%" height="15" fill="rgb(217,134,44)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="96.6587%" y="421" width="0.1591%" height="15" fill="rgb(222,195,7)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="96.6587%" y="405" width="0.1591%" height="15" fill="rgb(235,153,27)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.6587%" y="389" width="0.1591%" height="15" fill="rgb(247,105,14)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.6587%" y="373" width="0.1591%" height="15" fill="rgb(250,6,2)" fg:x="1215" fg:w="2"/><text x="96.9087%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8178%" y="405" width="0.0796%" height="15" fill="rgb(250,41,38)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8178%" y="389" width="0.0796%" height="15" fill="rgb(234,127,49)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8178%" y="373" width="0.0796%" height="15" fill="rgb(242,79,16)" fg:x="1217" fg:w="1"/><text x="97.0678%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8178%" y="437" width="0.1591%" height="15" fill="rgb(236,15,0)" fg:x="1217" fg:w="2"/><text x="97.0678%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.8178%" y="421" width="0.1591%" height="15" fill="rgb(217,113,36)" fg:x="1217" fg:w="2"/><text x="97.0678%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8974%" y="405" width="0.0796%" height="15" fill="rgb(239,12,4)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.8974%" y="389" width="0.0796%" height="15" fill="rgb(236,142,50)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.8974%" y="373" width="0.0796%" height="15" fill="rgb(244,108,52)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.8974%" y="357" width="0.0796%" height="15" fill="rgb(223,79,42)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.8974%" y="341" width="0.0796%" height="15" fill="rgb(245,34,19)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8974%" y="325" width="0.0796%" height="15" fill="rgb(222,137,30)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.8974%" y="309" width="0.0796%" height="15" fill="rgb(213,216,50)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.8974%" y="293" width="0.0796%" height="15" fill="rgb(206,117,33)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.8974%" y="277" width="0.0796%" height="15" fill="rgb(234,122,47)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.8974%" y="261" width="0.0796%" height="15" fill="rgb(226,61,39)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.8974%" y="245" width="0.0796%" height="15" fill="rgb(229,174,28)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8974%" y="229" width="0.0796%" height="15" fill="rgb(246,207,11)" fg:x="1218" fg:w="1"/><text x="97.1474%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.9769%" y="341" width="0.0796%" height="15" fill="rgb(245,212,19)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="96.9769%" y="325" width="0.0796%" height="15" fill="rgb(240,107,51)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.9769%" y="309" width="0.0796%" height="15" fill="rgb(238,67,13)" fg:x="1219" fg:w="1"/><text x="97.2269%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0565%" y="341" width="0.0796%" height="15" fill="rgb(250,8,29)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0565%" y="325" width="0.0796%" height="15" fill="rgb(227,44,9)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.0565%" y="309" width="0.0796%" height="15" fill="rgb(247,128,2)" fg:x="1220" fg:w="1"/><text x="97.3065%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="96.8178%" y="501" width="0.3978%" height="15" fill="rgb(239,11,50)" fg:x="1217" fg:w="5"/><text x="97.0678%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="96.8178%" y="485" width="0.3978%" height="15" fill="rgb(241,11,28)" fg:x="1217" fg:w="5"/><text x="97.0678%" y="495.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="96.8178%" y="469" width="0.3978%" height="15" fill="rgb(220,15,14)" fg:x="1217" fg:w="5"/><text x="97.0678%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="96.8178%" y="453" width="0.3978%" height="15" fill="rgb(226,97,9)" fg:x="1217" fg:w="5"/><text x="97.0678%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.9769%" y="437" width="0.2387%" height="15" fill="rgb(240,221,24)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.9769%" y="421" width="0.2387%" height="15" fill="rgb(238,199,31)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="96.9769%" y="405" width="0.2387%" height="15" fill="rgb(222,15,37)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.9769%" y="389" width="0.2387%" height="15" fill="rgb(225,66,12)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="96.9769%" y="373" width="0.2387%" height="15" fill="rgb(224,142,38)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="96.9769%" y="357" width="0.2387%" height="15" fill="rgb(208,206,25)" fg:x="1219" fg:w="3"/><text x="97.2269%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1360%" y="341" width="0.0796%" height="15" fill="rgb(205,153,20)" fg:x="1221" fg:w="1"/><text x="97.3860%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (14 samples, 1.11%)</title><rect x="96.1814%" y="565" width="1.1138%" height="15" fill="rgb(206,199,32)" fg:x="1209" fg:w="14"/><text x="96.4314%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (14 samples, 1.11%)</title><rect x="96.1814%" y="549" width="1.1138%" height="15" fill="rgb(246,135,31)" fg:x="1209" fg:w="14"/><text x="96.4314%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="96.8178%" y="533" width="0.4773%" height="15" fill="rgb(208,211,40)" fg:x="1217" fg:w="6"/><text x="97.0678%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (6 samples, 0.48%)</title><rect x="96.8178%" y="517" width="0.4773%" height="15" fill="rgb(210,219,1)" fg:x="1217" fg:w="6"/><text x="97.0678%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="97.2156%" y="501" width="0.0796%" height="15" fill="rgb(232,190,35)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="97.2156%" y="485" width="0.0796%" height="15" fill="rgb(211,9,18)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="495.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="97.2156%" y="469" width="0.0796%" height="15" fill="rgb(212,15,38)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.08%)</title><rect x="97.2156%" y="453" width="0.0796%" height="15" fill="rgb(238,74,28)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.08%)</title><rect x="97.2156%" y="437" width="0.0796%" height="15" fill="rgb(230,98,34)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.08%)</title><rect x="97.2156%" y="421" width="0.0796%" height="15" fill="rgb(212,130,40)" fg:x="1222" fg:w="1"/><text x="97.4656%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2951%" y="469" width="0.0796%" height="15" fill="rgb(234,200,15)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2951%" y="453" width="0.0796%" height="15" fill="rgb(216,227,29)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2951%" y="437" width="0.0796%" height="15" fill="rgb(226,47,50)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2951%" y="421" width="0.0796%" height="15" fill="rgb(232,146,36)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2951%" y="405" width="0.0796%" height="15" fill="rgb(234,162,39)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.2951%" y="389" width="0.0796%" height="15" fill="rgb(253,148,35)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.2951%" y="373" width="0.0796%" height="15" fill="rgb(253,200,8)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.2951%" y="357" width="0.0796%" height="15" fill="rgb(220,107,20)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.2951%" y="341" width="0.0796%" height="15" fill="rgb(205,200,12)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2951%" y="325" width="0.0796%" height="15" fill="rgb(219,123,42)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.2951%" y="309" width="0.0796%" height="15" fill="rgb(236,136,3)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.2951%" y="293" width="0.0796%" height="15" fill="rgb(213,112,27)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.2951%" y="277" width="0.0796%" height="15" fill="rgb(229,181,47)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.2951%" y="261" width="0.0796%" height="15" fill="rgb(243,123,15)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.2951%" y="245" width="0.0796%" height="15" fill="rgb(206,135,33)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2951%" y="229" width="0.0796%" height="15" fill="rgb(232,190,44)" fg:x="1223" fg:w="1"/><text x="97.5451%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="97.2951%" y="533" width="0.1591%" height="15" fill="rgb(237,122,12)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.2951%" y="517" width="0.1591%" height="15" fill="rgb(245,157,35)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.2951%" y="501" width="0.1591%" height="15" fill="rgb(205,164,34)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.2951%" y="485" width="0.1591%" height="15" fill="rgb(237,82,1)" fg:x="1223" fg:w="2"/><text x="97.5451%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3747%" y="469" width="0.0796%" height="15" fill="rgb(220,167,39)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.3747%" y="453" width="0.0796%" height="15" fill="rgb(208,133,37)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.3747%" y="437" width="0.0796%" height="15" fill="rgb(243,161,51)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.3747%" y="421" width="0.0796%" height="15" fill="rgb(232,127,41)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.3747%" y="405" width="0.0796%" height="15" fill="rgb(237,20,11)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3747%" y="389" width="0.0796%" height="15" fill="rgb(233,186,24)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.3747%" y="373" width="0.0796%" height="15" fill="rgb(210,39,6)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.3747%" y="357" width="0.0796%" height="15" fill="rgb(216,11,48)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.3747%" y="341" width="0.0796%" height="15" fill="rgb(222,13,18)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.3747%" y="325" width="0.0796%" height="15" fill="rgb(238,150,15)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.3747%" y="309" width="0.0796%" height="15" fill="rgb(235,57,5)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3747%" y="293" width="0.0796%" height="15" fill="rgb(214,196,13)" fg:x="1224" fg:w="1"/><text x="97.6247%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (3 samples, 0.24%)</title><rect x="97.2951%" y="565" width="0.2387%" height="15" fill="rgb(217,219,39)" fg:x="1223" fg:w="3"/><text x="97.5451%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.2951%" y="549" width="0.2387%" height="15" fill="rgb(237,225,39)" fg:x="1223" fg:w="3"/><text x="97.5451%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.4543%" y="533" width="0.0796%" height="15" fill="rgb(221,88,26)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.4543%" y="517" width="0.0796%" height="15" fill="rgb(205,45,48)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.4543%" y="501" width="0.0796%" height="15" fill="rgb(234,216,37)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4543%" y="485" width="0.0796%" height="15" fill="rgb(243,210,39)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4543%" y="469" width="0.0796%" height="15" fill="rgb(232,86,47)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4543%" y="453" width="0.0796%" height="15" fill="rgb(234,222,31)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4543%" y="437" width="0.0796%" height="15" fill="rgb(211,202,13)" fg:x="1225" fg:w="1"/><text x="97.7043%" y="447.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="97.5338%" y="565" width="0.0796%" height="15" fill="rgb(237,138,3)" fg:x="1226" fg:w="1"/><text x="97.7838%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5338%" y="549" width="0.0796%" height="15" fill="rgb(225,74,1)" fg:x="1226" fg:w="1"/><text x="97.7838%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5338%" y="533" width="0.0796%" height="15" fill="rgb(252,76,17)" fg:x="1226" fg:w="1"/><text x="97.7838%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.6134%" y="517" width="0.0796%" height="15" fill="rgb(217,109,21)" fg:x="1227" fg:w="1"/><text x="97.8634%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.6134%" y="501" width="0.0796%" height="15" fill="rgb(235,7,3)" fg:x="1227" fg:w="1"/><text x="97.8634%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.6134%" y="485" width="0.0796%" height="15" fill="rgb(238,16,13)" fg:x="1227" fg:w="1"/><text x="97.8634%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6134%" y="469" width="0.0796%" height="15" fill="rgb(242,32,47)" fg:x="1227" fg:w="1"/><text x="97.8634%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="97.6134%" y="549" width="0.1591%" height="15" fill="rgb(241,38,43)" fg:x="1227" fg:w="2"/><text x="97.8634%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.6134%" y="533" width="0.1591%" height="15" fill="rgb(213,124,26)" fg:x="1227" fg:w="2"/><text x="97.8634%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.6929%" y="517" width="0.0796%" height="15" fill="rgb(208,183,39)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="97.6929%" y="501" width="0.0796%" height="15" fill="rgb(222,116,36)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.6929%" y="485" width="0.0796%" height="15" fill="rgb(214,36,24)" fg:x="1228" fg:w="1"/><text x="97.9429%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="97.7725%" y="517" width="0.0796%" height="15" fill="rgb(254,64,37)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="97.7725%" y="501" width="0.0796%" height="15" fill="rgb(216,166,14)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.7725%" y="485" width="0.0796%" height="15" fill="rgb(242,144,17)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7725%" y="469" width="0.0796%" height="15" fill="rgb(233,229,42)" fg:x="1229" fg:w="1"/><text x="98.0225%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="97.7725%" y="549" width="0.1591%" height="15" fill="rgb(221,204,47)" fg:x="1229" fg:w="2"/><text x="98.0225%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.7725%" y="533" width="0.1591%" height="15" fill="rgb(230,26,44)" fg:x="1229" fg:w="2"/><text x="98.0225%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.8520%" y="517" width="0.0796%" height="15" fill="rgb(242,209,3)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="97.8520%" y="501" width="0.0796%" height="15" fill="rgb(229,32,19)" fg:x="1230" fg:w="1"/><text x="98.1020%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9316%" y="517" width="0.0796%" height="15" fill="rgb(211,49,50)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9316%" y="501" width="0.0796%" height="15" fill="rgb(208,171,21)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9316%" y="485" width="0.0796%" height="15" fill="rgb(240,86,9)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9316%" y="469" width="0.0796%" height="15" fill="rgb(207,169,47)" fg:x="1231" fg:w="1"/><text x="98.1816%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="97.9316%" y="549" width="0.1591%" height="15" fill="rgb(212,103,33)" fg:x="1231" fg:w="2"/><text x="98.1816%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="97.9316%" y="533" width="0.1591%" height="15" fill="rgb(209,86,21)" fg:x="1231" fg:w="2"/><text x="98.1816%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="98.0111%" y="517" width="0.0796%" height="15" fill="rgb(221,77,49)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.0111%" y="501" width="0.0796%" height="15" fill="rgb(244,188,21)" fg:x="1232" fg:w="1"/><text x="98.2611%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0907%" y="453" width="0.0796%" height="15" fill="rgb(228,11,38)" fg:x="1233" fg:w="1"/><text x="98.3407%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0907%" y="437" width="0.0796%" height="15" fill="rgb(222,158,25)" fg:x="1233" fg:w="1"/><text x="98.3407%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0907%" y="421" width="0.0796%" height="15" fill="rgb(232,223,3)" fg:x="1233" fg:w="1"/><text x="98.3407%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.0907%" y="405" width="0.0796%" height="15" fill="rgb(218,55,0)" fg:x="1233" fg:w="1"/><text x="98.3407%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="98.0907%" y="549" width="0.1591%" height="15" fill="rgb(223,130,7)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="98.0907%" y="533" width="0.1591%" height="15" fill="rgb(246,183,32)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.0907%" y="517" width="0.1591%" height="15" fill="rgb(233,194,27)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="98.0907%" y="501" width="0.1591%" height="15" fill="rgb(244,187,35)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.0907%" y="485" width="0.1591%" height="15" fill="rgb(238,33,29)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.0907%" y="469" width="0.1591%" height="15" fill="rgb(235,216,15)" fg:x="1233" fg:w="2"/><text x="98.3407%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="453" width="0.0796%" height="15" fill="rgb(211,167,33)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="437" width="0.0796%" height="15" fill="rgb(235,74,3)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="421" width="0.0796%" height="15" fill="rgb(241,103,0)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="405" width="0.0796%" height="15" fill="rgb(223,138,54)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="389" width="0.0796%" height="15" fill="rgb(228,24,36)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.1702%" y="373" width="0.0796%" height="15" fill="rgb(215,14,8)" fg:x="1234" fg:w="1"/><text x="98.4202%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="98.2498%" y="549" width="0.0796%" height="15" fill="rgb(231,9,2)" fg:x="1235" fg:w="1"/><text x="98.4998%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.3294%" y="533" width="0.0796%" height="15" fill="rgb(215,150,51)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.3294%" y="517" width="0.0796%" height="15" fill="rgb(254,124,6)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.3294%" y="501" width="0.0796%" height="15" fill="rgb(216,111,25)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.3294%" y="485" width="0.0796%" height="15" fill="rgb(237,87,46)" fg:x="1236" fg:w="1"/><text x="98.5794%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (31 samples, 2.47%)</title><rect x="96.0223%" y="581" width="2.4662%" height="15" fill="rgb(216,183,42)" fg:x="1207" fg:w="31"/><text x="96.2723%" y="591.50">&lt;p..</text></g><g><title>plugins_core::location::change_location (11 samples, 0.88%)</title><rect x="97.6134%" y="565" width="0.8751%" height="15" fill="rgb(214,175,46)" fg:x="1227" fg:w="11"/><text x="97.8634%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="98.3294%" y="549" width="0.1591%" height="15" fill="rgb(247,223,23)" fg:x="1236" fg:w="2"/><text x="98.5794%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="98.4089%" y="533" width="0.0796%" height="15" fill="rgb(240,132,12)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="98.4089%" y="517" width="0.0796%" height="15" fill="rgb(245,123,48)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.4089%" y="501" width="0.0796%" height="15" fill="rgb(245,156,12)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.4089%" y="485" width="0.0796%" height="15" fill="rgb(212,48,35)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="98.4089%" y="469" width="0.0796%" height="15" fill="rgb(213,21,25)" fg:x="1237" fg:w="1"/><text x="98.6589%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (82 samples, 6.52%)</title><rect x="92.0446%" y="773" width="6.5235%" height="15" fill="rgb(215,17,16)" fg:x="1157" fg:w="82"/><text x="92.2946%" y="783.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (82 samples, 6.52%)</title><rect x="92.0446%" y="757" width="6.5235%" height="15" fill="rgb(235,160,36)" fg:x="1157" fg:w="82"/><text x="92.2946%" y="767.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (82 samples, 6.52%)</title><rect x="92.0446%" y="741" width="6.5235%" height="15" fill="rgb(248,141,20)" fg:x="1157" fg:w="82"/><text x="92.2946%" y="751.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (82 samples, 6.52%)</title><rect x="92.0446%" y="725" width="6.5235%" height="15" fill="rgb(253,123,32)" fg:x="1157" fg:w="82"/><text x="92.2946%" y="735.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (74 samples, 5.89%)</title><rect x="92.6810%" y="709" width="5.8870%" height="15" fill="rgb(214,72,40)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="719.50">kernel:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (74 samples, 5.89%)</title><rect x="92.6810%" y="693" width="5.8870%" height="15" fill="rgb(234,122,41)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="703.50">&lt;plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (74 samples, 5.89%)</title><rect x="92.6810%" y="677" width="5.8870%" height="15" fill="rgb(236,55,21)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="687.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (74 samples, 5.89%)</title><rect x="92.6810%" y="661" width="5.8870%" height="15" fill="rgb(222,162,54)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="671.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (74 samples, 5.89%)</title><rect x="92.6810%" y="645" width="5.8870%" height="15" fill="rgb(219,74,8)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="655.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (74 samples, 5.89%)</title><rect x="92.6810%" y="629" width="5.8870%" height="15" fill="rgb(222,106,42)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="639.50">core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (74 samples, 5.89%)</title><rect x="92.6810%" y="613" width="5.8870%" height="15" fill="rgb(223,40,43)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="623.50">&lt;alloc:..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (74 samples, 5.89%)</title><rect x="92.6810%" y="597" width="5.8870%" height="15" fill="rgb(229,216,28)" fg:x="1165" fg:w="74"/><text x="92.9310%" y="607.50">&lt;engine..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.4885%" y="581" width="0.0796%" height="15" fill="rgb(222,17,5)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="98.4885%" y="565" width="0.0796%" height="15" fill="rgb(212,51,2)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4885%" y="549" width="0.0796%" height="15" fill="rgb(243,213,35)" fg:x="1238" fg:w="1"/><text x="98.7385%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.5680%" y="709" width="0.0796%" height="15" fill="rgb(218,68,26)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.5680%" y="693" width="0.0796%" height="15" fill="rgb(214,135,33)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.5680%" y="677" width="0.0796%" height="15" fill="rgb(248,7,20)" fg:x="1239" fg:w="1"/><text x="98.8180%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.5680%" y="741" width="0.1591%" height="15" fill="rgb(209,147,4)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.5680%" y="725" width="0.1591%" height="15" fill="rgb(251,48,10)" fg:x="1239" fg:w="2"/><text x="98.8180%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.6476%" y="709" width="0.0796%" height="15" fill="rgb(226,62,22)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.6476%" y="693" width="0.0796%" height="15" fill="rgb(218,5,25)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6476%" y="677" width="0.0796%" height="15" fill="rgb(240,229,8)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6476%" y="661" width="0.0796%" height="15" fill="rgb(219,123,53)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6476%" y="645" width="0.0796%" height="15" fill="rgb(239,77,49)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6476%" y="629" width="0.0796%" height="15" fill="rgb(247,22,15)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6476%" y="613" width="0.0796%" height="15" fill="rgb(210,55,17)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.6476%" y="597" width="0.0796%" height="15" fill="rgb(228,130,51)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6476%" y="581" width="0.0796%" height="15" fill="rgb(206,81,33)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6476%" y="565" width="0.0796%" height="15" fill="rgb(241,104,30)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6476%" y="549" width="0.0796%" height="15" fill="rgb(240,88,12)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.6476%" y="533" width="0.0796%" height="15" fill="rgb(249,116,19)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.6476%" y="517" width="0.0796%" height="15" fill="rgb(250,218,1)" fg:x="1240" fg:w="1"/><text x="98.8976%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7271%" y="677" width="0.0796%" height="15" fill="rgb(233,220,16)" fg:x="1241" fg:w="1"/><text x="98.9771%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8067%" y="613" width="0.0796%" height="15" fill="rgb(248,195,9)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.8067%" y="597" width="0.0796%" height="15" fill="rgb(230,58,11)" fg:x="1242" fg:w="1"/><text x="99.0567%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8862%" y="581" width="0.0796%" height="15" fill="rgb(217,125,51)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="591.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="98.8862%" y="565" width="0.0796%" height="15" fill="rgb(252,119,13)" fg:x="1243" fg:w="1"/><text x="99.1362%" y="575.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="98.7271%" y="725" width="0.3182%" height="15" fill="rgb(245,23,2)" fg:x="1241" fg:w="4"/><text x="98.9771%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="98.7271%" y="709" width="0.3182%" height="15" fill="rgb(216,98,41)" fg:x="1241" fg:w="4"/><text x="98.9771%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="98.7271%" y="693" width="0.3182%" height="15" fill="rgb(228,181,52)" fg:x="1241" fg:w="4"/><text x="98.9771%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.8067%" y="677" width="0.2387%" height="15" fill="rgb(238,203,39)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8067%" y="661" width="0.2387%" height="15" fill="rgb(214,56,7)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="98.8067%" y="645" width="0.2387%" height="15" fill="rgb(229,167,38)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="98.8067%" y="629" width="0.2387%" height="15" fill="rgb(242,135,4)" fg:x="1242" fg:w="3"/><text x="99.0567%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.8862%" y="613" width="0.1591%" height="15" fill="rgb(211,228,4)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="98.8862%" y="597" width="0.1591%" height="15" fill="rgb(206,139,51)" fg:x="1243" fg:w="2"/><text x="99.1362%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9658%" y="581" width="0.0796%" height="15" fill="rgb(236,70,25)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9658%" y="565" width="0.0796%" height="15" fill="rgb(224,211,44)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9658%" y="549" width="0.0796%" height="15" fill="rgb(226,160,45)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9658%" y="533" width="0.0796%" height="15" fill="rgb(235,150,10)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9658%" y="517" width="0.0796%" height="15" fill="rgb(253,222,52)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9658%" y="501" width="0.0796%" height="15" fill="rgb(248,159,14)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9658%" y="485" width="0.0796%" height="15" fill="rgb(252,161,4)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9658%" y="469" width="0.0796%" height="15" fill="rgb(227,107,7)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9658%" y="453" width="0.0796%" height="15" fill="rgb(248,227,35)" fg:x="1244" fg:w="1"/><text x="99.2158%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0453%" y="645" width="0.0796%" height="15" fill="rgb(240,68,14)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0453%" y="629" width="0.0796%" height="15" fill="rgb(243,5,47)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0453%" y="613" width="0.0796%" height="15" fill="rgb(225,134,14)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0453%" y="597" width="0.0796%" height="15" fill="rgb(225,207,41)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0453%" y="581" width="0.0796%" height="15" fill="rgb(207,214,21)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0453%" y="565" width="0.0796%" height="15" fill="rgb(230,100,48)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.0453%" y="549" width="0.0796%" height="15" fill="rgb(231,155,51)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0453%" y="533" width="0.0796%" height="15" fill="rgb(252,98,23)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0453%" y="517" width="0.0796%" height="15" fill="rgb(216,151,14)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.0453%" y="501" width="0.0796%" height="15" fill="rgb(250,20,49)" fg:x="1245" fg:w="1"/><text x="99.2953%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1249%" y="613" width="0.0796%" height="15" fill="rgb(217,134,33)" fg:x="1246" fg:w="1"/><text x="99.3749%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.1249%" y="597" width="0.0796%" height="15" fill="rgb(205,94,24)" fg:x="1246" fg:w="1"/><text x="99.3749%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1249%" y="581" width="0.0796%" height="15" fill="rgb(244,96,26)" fg:x="1246" fg:w="1"/><text x="99.3749%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (9 samples, 0.72%)</title><rect x="98.5680%" y="773" width="0.7160%" height="15" fill="rgb(218,48,4)" fg:x="1239" fg:w="9"/><text x="98.8180%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (9 samples, 0.72%)</title><rect x="98.5680%" y="757" width="0.7160%" height="15" fill="rgb(210,74,37)" fg:x="1239" fg:w="9"/><text x="98.8180%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.56%)</title><rect x="98.7271%" y="741" width="0.5569%" height="15" fill="rgb(240,170,7)" fg:x="1241" fg:w="7"/><text x="98.9771%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.0453%" y="725" width="0.2387%" height="15" fill="rgb(251,120,48)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="735.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0453%" y="709" width="0.2387%" height="15" fill="rgb(219,149,25)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.0453%" y="693" width="0.2387%" height="15" fill="rgb(223,222,45)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.0453%" y="677" width="0.2387%" height="15" fill="rgb(216,18,1)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="687.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.0453%" y="661" width="0.2387%" height="15" fill="rgb(251,184,12)" fg:x="1245" fg:w="3"/><text x="99.2953%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1249%" y="645" width="0.1591%" height="15" fill="rgb(222,116,37)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="655.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1249%" y="629" width="0.1591%" height="15" fill="rgb(236,223,24)" fg:x="1246" fg:w="2"/><text x="99.3749%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2045%" y="613" width="0.0796%" height="15" fill="rgb(229,38,32)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2045%" y="597" width="0.0796%" height="15" fill="rgb(251,208,7)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2045%" y="581" width="0.0796%" height="15" fill="rgb(207,226,43)" fg:x="1247" fg:w="1"/><text x="99.4545%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.2840%" y="725" width="0.0796%" height="15" fill="rgb(247,229,43)" fg:x="1248" fg:w="1"/><text x="99.5340%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="99.2840%" y="709" width="0.0796%" height="15" fill="rgb(217,201,52)" fg:x="1248" fg:w="1"/><text x="99.5340%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="99.2840%" y="741" width="0.1591%" height="15" fill="rgb(228,68,39)" fg:x="1248" fg:w="2"/><text x="99.5340%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (1 samples, 0.08%)</title><rect x="99.3636%" y="725" width="0.0796%" height="15" fill="rgb(218,138,7)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="735.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.3636%" y="709" width="0.0796%" height="15" fill="rgb(230,78,37)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3636%" y="693" width="0.0796%" height="15" fill="rgb(246,177,36)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="677" width="0.0796%" height="15" fill="rgb(231,190,6)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3636%" y="661" width="0.0796%" height="15" fill="rgb(234,217,25)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3636%" y="645" width="0.0796%" height="15" fill="rgb(249,131,38)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3636%" y="629" width="0.0796%" height="15" fill="rgb(253,168,16)" fg:x="1249" fg:w="1"/><text x="99.6136%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="99.2840%" y="757" width="0.2387%" height="15" fill="rgb(232,181,39)" fg:x="1248" fg:w="3"/><text x="99.5340%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.4431%" y="741" width="0.0796%" height="15" fill="rgb(216,167,0)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4431%" y="725" width="0.0796%" height="15" fill="rgb(247,77,10)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4431%" y="709" width="0.0796%" height="15" fill="rgb(220,28,10)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4431%" y="693" width="0.0796%" height="15" fill="rgb(251,163,49)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.4431%" y="677" width="0.0796%" height="15" fill="rgb(249,148,50)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.4431%" y="661" width="0.0796%" height="15" fill="rgb(238,149,36)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.4431%" y="645" width="0.0796%" height="15" fill="rgb(248,191,13)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4431%" y="629" width="0.0796%" height="15" fill="rgb(233,73,17)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4431%" y="613" width="0.0796%" height="15" fill="rgb(233,197,11)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.4431%" y="597" width="0.0796%" height="15" fill="rgb(245,42,8)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.4431%" y="581" width="0.0796%" height="15" fill="rgb(217,39,50)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.4431%" y="565" width="0.0796%" height="15" fill="rgb(250,23,13)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.4431%" y="549" width="0.0796%" height="15" fill="rgb(219,204,45)" fg:x="1250" fg:w="1"/><text x="99.6931%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="99.2840%" y="773" width="0.3978%" height="15" fill="rgb(248,54,16)" fg:x="1248" fg:w="5"/><text x="99.5340%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.5227%" y="757" width="0.1591%" height="15" fill="rgb(213,16,14)" fg:x="1251" fg:w="2"/><text x="99.7727%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.6022%" y="741" width="0.0796%" height="15" fill="rgb(245,18,44)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="725" width="0.0796%" height="15" fill="rgb(232,10,47)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6022%" y="709" width="0.0796%" height="15" fill="rgb(237,185,33)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="693" width="0.0796%" height="15" fill="rgb(224,223,44)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="677" width="0.0796%" height="15" fill="rgb(238,98,11)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="661" width="0.0796%" height="15" fill="rgb(217,33,34)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6022%" y="645" width="0.0796%" height="15" fill="rgb(232,193,38)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="629" width="0.0796%" height="15" fill="rgb(231,23,4)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="613" width="0.0796%" height="15" fill="rgb(218,154,4)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.6022%" y="597" width="0.0796%" height="15" fill="rgb(243,171,32)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.6022%" y="581" width="0.0796%" height="15" fill="rgb(210,102,6)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6022%" y="565" width="0.0796%" height="15" fill="rgb(205,134,8)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.6022%" y="549" width="0.0796%" height="15" fill="rgb(240,115,17)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.6022%" y="533" width="0.0796%" height="15" fill="rgb(213,62,14)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.6022%" y="517" width="0.0796%" height="15" fill="rgb(249,149,16)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.6022%" y="501" width="0.0796%" height="15" fill="rgb(220,195,22)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.6022%" y="485" width="0.0796%" height="15" fill="rgb(211,106,49)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6022%" y="469" width="0.0796%" height="15" fill="rgb(214,176,52)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.6022%" y="453" width="0.0796%" height="15" fill="rgb(212,121,30)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.6022%" y="437" width="0.0796%" height="15" fill="rgb(231,167,39)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.6022%" y="421" width="0.0796%" height="15" fill="rgb(233,93,22)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="99.6022%" y="405" width="0.0796%" height="15" fill="rgb(242,187,26)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="415.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="99.6022%" y="389" width="0.0796%" height="15" fill="rgb(209,152,0)" fg:x="1252" fg:w="1"/><text x="99.8522%" y="399.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.6818%" y="773" width="0.1591%" height="15" fill="rgb(208,174,22)" fg:x="1253" fg:w="2"/><text x="99.9318%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.6818%" y="757" width="0.1591%" height="15" fill="rgb(216,172,41)" fg:x="1253" fg:w="2"/><text x="99.9318%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.7613%" y="741" width="0.0796%" height="15" fill="rgb(238,206,48)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="99.7613%" y="725" width="0.0796%" height="15" fill="rgb(229,70,36)" fg:x="1254" fg:w="1"/><text x="100.0113%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.8409%" y="773" width="0.0796%" height="15" fill="rgb(230,152,25)" fg:x="1255" fg:w="1"/><text x="100.0909%" y="783.50"></text></g><g><title>all (1,257 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(243,173,54)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1151.50"></text></g><g><title>simple-20ff020b (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(252,104,23)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1135.50">simple-20ff020b</text></g><g><title>_start (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(224,24,50)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1119.50">_start</text></g><g><title>__libc_start_main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(212,13,43)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1103.50">__libc_start_main</text></g><g><title>main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(243,34,26)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1087.50">main</text></g><g><title>std::rt::lang_start_internal (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(239,209,5)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1071.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(239,212,43)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(228,72,25)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(205,82,49)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1023.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(221,205,24)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="1007.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,257 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(206,213,29)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,257 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(228,180,8)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,257 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(217,131,9)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="959.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,257 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(207,188,14)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="943.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,257 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(254,82,24)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="927.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,257 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(209,29,48)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="911.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,257 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(248,24,3)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="895.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,257 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(209,134,11)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="879.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,257 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(253,54,47)" fg:x="0" fg:w="1257"/><text x="0.2500%" y="863.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (266 samples, 21.16%)</title><rect x="78.8385%" y="837" width="21.1615%" height="15" fill="rgb(214,163,42)" fg:x="991" fg:w="266"/><text x="79.0885%" y="847.50">&lt;criterion::routine::Function&lt;M,F..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (266 samples, 21.16%)</title><rect x="78.8385%" y="821" width="21.1615%" height="15" fill="rgb(206,25,12)" fg:x="991" fg:w="266"/><text x="79.0885%" y="831.50">criterion::bencher::Bencher&lt;M&gt;::i..</text></g><g><title>tests::evaluate_text_in_new_domain (266 samples, 21.16%)</title><rect x="78.8385%" y="805" width="21.1615%" height="15" fill="rgb(240,49,44)" fg:x="991" fg:w="266"/><text x="79.0885%" y="815.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (101 samples, 8.04%)</title><rect x="91.9650%" y="789" width="8.0350%" height="15" fill="rgb(245,4,38)" fg:x="1156" fg:w="101"/><text x="92.2150%" y="799.50">engine::ses..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.9204%" y="773" width="0.0796%" height="15" fill="rgb(215,72,38)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="783.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="99.9204%" y="757" width="0.0796%" height="15" fill="rgb(215,123,24)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="99.9204%" y="741" width="0.0796%" height="15" fill="rgb(242,140,44)" fg:x="1256" fg:w="1"/><text x="100.1704%" y="751.50"></text></g></svg></svg>