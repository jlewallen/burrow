<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1125.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="1247"><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.1604%" y="629" width="0.1604%" height="15" fill="rgb(236,125,25)" fg:x="2" fg:w="2"/><text x="0.4104%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.3208%" y="629" width="0.0802%" height="15" fill="rgb(254,182,48)" fg:x="4" fg:w="1"/><text x="0.5708%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.3208%" y="613" width="0.0802%" height="15" fill="rgb(216,108,44)" fg:x="4" fg:w="1"/><text x="0.5708%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4010%" y="613" width="0.1604%" height="15" fill="rgb(222,72,39)" fg:x="5" fg:w="2"/><text x="0.6510%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.6415%" y="597" width="0.0802%" height="15" fill="rgb(252,70,39)" fg:x="8" fg:w="1"/><text x="0.8915%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6415%" y="581" width="0.0802%" height="15" fill="rgb(243,99,34)" fg:x="8" fg:w="1"/><text x="0.8915%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.88%)</title><rect x="0.0000%" y="661" width="0.8821%" height="15" fill="rgb(252,109,12)" fg:x="0" fg:w="11"/><text x="0.2500%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="0.0000%" y="645" width="0.8821%" height="15" fill="rgb(211,186,10)" fg:x="0" fg:w="11"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="0.4010%" y="629" width="0.4812%" height="15" fill="rgb(246,90,8)" fg:x="5" fg:w="6"/><text x="0.6510%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="0.5613%" y="613" width="0.3208%" height="15" fill="rgb(226,91,24)" fg:x="7" fg:w="4"/><text x="0.8113%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7217%" y="597" width="0.1604%" height="15" fill="rgb(216,28,44)" fg:x="9" fg:w="2"/><text x="0.9717%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.9623%" y="629" width="0.1604%" height="15" fill="rgb(229,36,0)" fg:x="12" fg:w="2"/><text x="1.2123%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.2029%" y="597" width="0.1604%" height="15" fill="rgb(245,97,18)" fg:x="15" fg:w="2"/><text x="1.4529%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="1.2029%" y="613" width="0.2406%" height="15" fill="rgb(241,97,54)" fg:x="15" fg:w="3"/><text x="1.4529%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.3633%" y="597" width="0.0802%" height="15" fill="rgb(234,125,17)" fg:x="17" fg:w="1"/><text x="1.6133%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.4435%" y="613" width="0.0802%" height="15" fill="rgb(228,172,39)" fg:x="18" fg:w="1"/><text x="1.6935%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.5237%" y="613" width="0.1604%" height="15" fill="rgb(227,169,1)" fg:x="19" fg:w="2"/><text x="1.7737%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.5237%" y="597" width="0.1604%" height="15" fill="rgb(206,13,35)" fg:x="19" fg:w="2"/><text x="1.7737%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.80%)</title><rect x="0.9623%" y="645" width="0.8019%" height="15" fill="rgb(211,117,30)" fg:x="12" fg:w="10"/><text x="1.2123%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="1.1227%" y="629" width="0.6415%" height="15" fill="rgb(230,198,4)" fg:x="14" fg:w="8"/><text x="1.3727%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.6840%" y="613" width="0.0802%" height="15" fill="rgb(213,87,54)" fg:x="21" fg:w="1"/><text x="1.9340%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6840%" y="597" width="0.0802%" height="15" fill="rgb(248,43,22)" fg:x="21" fg:w="1"/><text x="1.9340%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6840%" y="581" width="0.0802%" height="15" fill="rgb(213,175,48)" fg:x="21" fg:w="1"/><text x="1.9340%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.96%)</title><rect x="0.8821%" y="661" width="0.9623%" height="15" fill="rgb(252,55,9)" fg:x="11" fg:w="12"/><text x="1.1321%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="1.7642%" y="645" width="0.0802%" height="15" fill="rgb(231,72,33)" fg:x="22" fg:w="1"/><text x="2.0142%" y="655.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.00%)</title><rect x="0.0000%" y="677" width="2.0048%" height="15" fill="rgb(213,2,54)" fg:x="0" fg:w="25"/><text x="0.2500%" y="687.50">&lt;..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.8444%" y="661" width="0.1604%" height="15" fill="rgb(208,88,25)" fg:x="23" fg:w="2"/><text x="2.0944%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.17%)</title><rect x="0.0000%" y="741" width="2.1652%" height="15" fill="rgb(215,117,13)" fg:x="0" fg:w="27"/><text x="0.2500%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (27 samples, 2.17%)</title><rect x="0.0000%" y="725" width="2.1652%" height="15" fill="rgb(243,147,21)" fg:x="0" fg:w="27"/><text x="0.2500%" y="735.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.17%)</title><rect x="0.0000%" y="709" width="2.1652%" height="15" fill="rgb(208,215,36)" fg:x="0" fg:w="27"/><text x="0.2500%" y="719.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (27 samples, 2.17%)</title><rect x="0.0000%" y="693" width="2.1652%" height="15" fill="rgb(238,187,24)" fg:x="0" fg:w="27"/><text x="0.2500%" y="703.50">c..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.0048%" y="677" width="0.1604%" height="15" fill="rgb(214,173,11)" fg:x="25" fg:w="2"/><text x="2.2548%" y="687.50"></text></g><g><title>&lt;engine::storage::InMemoryStorageFactory as engine::storage::StorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="2.1652%" y="709" width="0.0802%" height="15" fill="rgb(222,71,20)" fg:x="27" fg:w="1"/><text x="2.4152%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="2.2454%" y="693" width="0.0802%" height="15" fill="rgb(242,125,4)" fg:x="28" fg:w="1"/><text x="2.4954%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.3256%" y="677" width="0.0802%" height="15" fill="rgb(217,101,52)" fg:x="29" fg:w="1"/><text x="2.5756%" y="687.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.4860%" y="613" width="0.0802%" height="15" fill="rgb(223,2,50)" fg:x="31" fg:w="1"/><text x="2.7360%" y="623.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.4860%" y="629" width="0.1604%" height="15" fill="rgb(225,197,9)" fg:x="31" fg:w="2"/><text x="2.7360%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5662%" y="613" width="0.0802%" height="15" fill="rgb(234,76,27)" fg:x="32" fg:w="1"/><text x="2.8162%" y="623.50"></text></g><g><title>__pthread_mutex_lock (1 samples, 0.08%)</title><rect x="2.6464%" y="581" width="0.0802%" height="15" fill="rgb(213,161,26)" fg:x="33" fg:w="1"/><text x="2.8964%" y="591.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.96%)</title><rect x="2.4058%" y="661" width="0.9623%" height="15" fill="rgb(210,228,2)" fg:x="30" fg:w="12"/><text x="2.6558%" y="671.50"></text></g><g><title>libloading::safe::Library::new (12 samples, 0.96%)</title><rect x="2.4058%" y="645" width="0.9623%" height="15" fill="rgb(235,4,16)" fg:x="30" fg:w="12"/><text x="2.6558%" y="655.50"></text></g><g><title>dlopen (9 samples, 0.72%)</title><rect x="2.6464%" y="629" width="0.7217%" height="15" fill="rgb(235,83,42)" fg:x="33" fg:w="9"/><text x="2.8964%" y="639.50"></text></g><g><title>_dl_catch_error (9 samples, 0.72%)</title><rect x="2.6464%" y="613" width="0.7217%" height="15" fill="rgb(207,116,39)" fg:x="33" fg:w="9"/><text x="2.8964%" y="623.50"></text></g><g><title>_dl_catch_exception (9 samples, 0.72%)</title><rect x="2.6464%" y="597" width="0.7217%" height="15" fill="rgb(253,206,9)" fg:x="33" fg:w="9"/><text x="2.8964%" y="607.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.7265%" y="581" width="0.6415%" height="15" fill="rgb(234,32,47)" fg:x="34" fg:w="8"/><text x="2.9765%" y="591.50"></text></g><g><title>_dl_catch_exception (8 samples, 0.64%)</title><rect x="2.7265%" y="565" width="0.6415%" height="15" fill="rgb(247,40,39)" fg:x="34" fg:w="8"/><text x="2.9765%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (13 samples, 1.04%)</title><rect x="2.4058%" y="677" width="1.0425%" height="15" fill="rgb(236,199,13)" fg:x="30" fg:w="13"/><text x="2.6558%" y="687.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.3681%" y="661" width="0.0802%" height="15" fill="rgb(240,127,44)" fg:x="42" fg:w="1"/><text x="3.6181%" y="671.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="3.3681%" y="645" width="0.0802%" height="15" fill="rgb(248,220,47)" fg:x="42" fg:w="1"/><text x="3.6181%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.4483%" y="645" width="0.0802%" height="15" fill="rgb(240,78,9)" fg:x="43" fg:w="1"/><text x="3.6983%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="3.4483%" y="661" width="0.2406%" height="15" fill="rgb(245,119,5)" fg:x="43" fg:w="3"/><text x="3.6983%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="3.5285%" y="645" width="0.1604%" height="15" fill="rgb(238,175,31)" fg:x="44" fg:w="2"/><text x="3.7785%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="3.5285%" y="629" width="0.1604%" height="15" fill="rgb(232,140,42)" fg:x="44" fg:w="2"/><text x="3.7785%" y="639.50"></text></g><g><title>engine::session::Session::initialize (19 samples, 1.52%)</title><rect x="2.3256%" y="693" width="1.5237%" height="15" fill="rgb(218,179,7)" fg:x="29" fg:w="19"/><text x="2.5756%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (5 samples, 0.40%)</title><rect x="3.4483%" y="677" width="0.4010%" height="15" fill="rgb(232,79,27)" fg:x="43" fg:w="5"/><text x="3.6983%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="3.6889%" y="661" width="0.1604%" height="15" fill="rgb(247,11,19)" fg:x="46" fg:w="2"/><text x="3.9389%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="3.6889%" y="645" width="0.1604%" height="15" fill="rgb(216,171,54)" fg:x="46" fg:w="2"/><text x="3.9389%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="3.6889%" y="629" width="0.1604%" height="15" fill="rgb(233,158,36)" fg:x="46" fg:w="2"/><text x="3.9389%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="3.6889%" y="613" width="0.1604%" height="15" fill="rgb(215,48,47)" fg:x="46" fg:w="2"/><text x="3.9389%" y="623.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="3.6889%" y="597" width="0.1604%" height="15" fill="rgb(230,223,15)" fg:x="46" fg:w="2"/><text x="3.9389%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (22 samples, 1.76%)</title><rect x="2.1652%" y="741" width="1.7642%" height="15" fill="rgb(234,49,19)" fg:x="27" fg:w="22"/><text x="2.4152%" y="751.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (22 samples, 1.76%)</title><rect x="2.1652%" y="725" width="1.7642%" height="15" fill="rgb(232,89,25)" fg:x="27" fg:w="22"/><text x="2.4152%" y="735.50"></text></g><g><title>engine::session::Session::new (21 samples, 1.68%)</title><rect x="2.2454%" y="709" width="1.6840%" height="15" fill="rgb(237,206,28)" fg:x="28" fg:w="21"/><text x="2.4954%" y="719.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.8492%" y="693" width="0.0802%" height="15" fill="rgb(249,68,37)" fg:x="48" fg:w="1"/><text x="4.0992%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.8492%" y="677" width="0.0802%" height="15" fill="rgb(226,99,43)" fg:x="48" fg:w="1"/><text x="4.0992%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.8492%" y="661" width="0.0802%" height="15" fill="rgb(216,46,28)" fg:x="48" fg:w="1"/><text x="4.0992%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.8492%" y="645" width="0.0802%" height="15" fill="rgb(216,33,9)" fg:x="48" fg:w="1"/><text x="4.0992%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="3.8492%" y="629" width="0.0802%" height="15" fill="rgb(216,129,4)" fg:x="48" fg:w="1"/><text x="4.0992%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="3.8492%" y="613" width="0.0802%" height="15" fill="rgb(216,106,3)" fg:x="48" fg:w="1"/><text x="4.0992%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="4.0096%" y="709" width="0.1604%" height="15" fill="rgb(217,79,45)" fg:x="50" fg:w="2"/><text x="4.2596%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.0898%" y="693" width="0.0802%" height="15" fill="rgb(239,98,13)" fg:x="51" fg:w="1"/><text x="4.3398%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="4.0898%" y="677" width="0.0802%" height="15" fill="rgb(221,115,4)" fg:x="51" fg:w="1"/><text x="4.3398%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="4.0898%" y="661" width="0.0802%" height="15" fill="rgb(215,85,0)" fg:x="51" fg:w="1"/><text x="4.3398%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="4.0898%" y="645" width="0.0802%" height="15" fill="rgb(230,62,15)" fg:x="51" fg:w="1"/><text x="4.3398%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="4.0898%" y="629" width="0.0802%" height="15" fill="rgb(247,162,2)" fg:x="51" fg:w="1"/><text x="4.3398%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.0898%" y="613" width="0.0802%" height="15" fill="rgb(212,112,32)" fg:x="51" fg:w="1"/><text x="4.3398%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.0898%" y="597" width="0.0802%" height="15" fill="rgb(216,137,9)" fg:x="51" fg:w="1"/><text x="4.3398%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.0898%" y="581" width="0.0802%" height="15" fill="rgb(250,149,33)" fg:x="51" fg:w="1"/><text x="4.3398%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.0898%" y="565" width="0.0802%" height="15" fill="rgb(246,124,31)" fg:x="51" fg:w="1"/><text x="4.3398%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.0898%" y="549" width="0.0802%" height="15" fill="rgb(216,210,22)" fg:x="51" fg:w="1"/><text x="4.3398%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.0898%" y="533" width="0.0802%" height="15" fill="rgb(228,128,36)" fg:x="51" fg:w="1"/><text x="4.3398%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.0898%" y="517" width="0.0802%" height="15" fill="rgb(231,41,0)" fg:x="51" fg:w="1"/><text x="4.3398%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="4.0898%" y="501" width="0.0802%" height="15" fill="rgb(232,61,26)" fg:x="51" fg:w="1"/><text x="4.3398%" y="511.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="4.1700%" y="709" width="0.0802%" height="15" fill="rgb(217,60,9)" fg:x="52" fg:w="1"/><text x="4.4200%" y="719.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="4.1700%" y="693" width="0.0802%" height="15" fill="rgb(233,41,35)" fg:x="52" fg:w="1"/><text x="4.4200%" y="703.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="4.1700%" y="677" width="0.0802%" height="15" fill="rgb(253,139,43)" fg:x="52" fg:w="1"/><text x="4.4200%" y="687.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="4.1700%" y="661" width="0.0802%" height="15" fill="rgb(245,100,51)" fg:x="52" fg:w="1"/><text x="4.4200%" y="671.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="4.1700%" y="645" width="0.0802%" height="15" fill="rgb(250,208,18)" fg:x="52" fg:w="1"/><text x="4.4200%" y="655.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="4.1700%" y="629" width="0.0802%" height="15" fill="rgb(245,33,2)" fg:x="52" fg:w="1"/><text x="4.4200%" y="639.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="4.1700%" y="613" width="0.0802%" height="15" fill="rgb(244,171,31)" fg:x="52" fg:w="1"/><text x="4.4200%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.3304%" y="597" width="0.2406%" height="15" fill="rgb(229,1,43)" fg:x="54" fg:w="3"/><text x="4.5804%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.4908%" y="581" width="0.0802%" height="15" fill="rgb(223,153,28)" fg:x="56" fg:w="1"/><text x="4.7408%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.4908%" y="565" width="0.0802%" height="15" fill="rgb(241,4,46)" fg:x="56" fg:w="1"/><text x="4.7408%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.4908%" y="549" width="0.0802%" height="15" fill="rgb(230,81,11)" fg:x="56" fg:w="1"/><text x="4.7408%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="4.3304%" y="613" width="0.5613%" height="15" fill="rgb(253,204,39)" fg:x="54" fg:w="7"/><text x="4.5804%" y="623.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="4.5710%" y="597" width="0.3208%" height="15" fill="rgb(250,96,8)" fg:x="57" fg:w="4"/><text x="4.8210%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.7314%" y="581" width="0.1604%" height="15" fill="rgb(219,89,54)" fg:x="59" fg:w="2"/><text x="4.9814%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.16%)</title><rect x="4.7314%" y="565" width="0.1604%" height="15" fill="rgb(235,136,39)" fg:x="59" fg:w="2"/><text x="4.9814%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="4.8917%" y="597" width="0.3208%" height="15" fill="rgb(230,155,37)" fg:x="61" fg:w="4"/><text x="5.1417%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.9719%" y="581" width="0.2406%" height="15" fill="rgb(235,199,50)" fg:x="62" fg:w="3"/><text x="5.2219%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.0521%" y="565" width="0.1604%" height="15" fill="rgb(227,81,32)" fg:x="63" fg:w="2"/><text x="5.3021%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.0521%" y="549" width="0.1604%" height="15" fill="rgb(225,6,28)" fg:x="63" fg:w="2"/><text x="5.3021%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.2125%" y="549" width="0.0802%" height="15" fill="rgb(207,211,17)" fg:x="65" fg:w="1"/><text x="5.4625%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.2927%" y="549" width="0.1604%" height="15" fill="rgb(228,31,49)" fg:x="66" fg:w="2"/><text x="5.5427%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.2927%" y="533" width="0.1604%" height="15" fill="rgb(230,185,3)" fg:x="66" fg:w="2"/><text x="5.5427%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="5.2927%" y="517" width="0.1604%" height="15" fill="rgb(206,167,15)" fg:x="66" fg:w="2"/><text x="5.5427%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.2927%" y="501" width="0.1604%" height="15" fill="rgb(234,2,36)" fg:x="66" fg:w="2"/><text x="5.5427%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3729%" y="485" width="0.0802%" height="15" fill="rgb(239,160,29)" fg:x="67" fg:w="1"/><text x="5.6229%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="5.2125%" y="581" width="0.3208%" height="15" fill="rgb(236,117,2)" fg:x="65" fg:w="4"/><text x="5.4625%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="5.2125%" y="565" width="0.3208%" height="15" fill="rgb(215,117,37)" fg:x="65" fg:w="4"/><text x="5.4625%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4531%" y="549" width="0.0802%" height="15" fill="rgb(244,48,36)" fg:x="68" fg:w="1"/><text x="5.7031%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="5.5333%" y="581" width="0.5613%" height="15" fill="rgb(223,101,37)" fg:x="69" fg:w="7"/><text x="5.7833%" y="591.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="5.8540%" y="565" width="0.2406%" height="15" fill="rgb(205,200,1)" fg:x="73" fg:w="3"/><text x="6.1040%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.9342%" y="549" width="0.1604%" height="15" fill="rgb(209,193,20)" fg:x="74" fg:w="2"/><text x="6.1842%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.9342%" y="533" width="0.1604%" height="15" fill="rgb(214,63,13)" fg:x="74" fg:w="2"/><text x="6.1842%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.0946%" y="565" width="0.0802%" height="15" fill="rgb(253,113,46)" fg:x="76" fg:w="1"/><text x="6.3446%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.0946%" y="549" width="0.0802%" height="15" fill="rgb(237,103,34)" fg:x="76" fg:w="1"/><text x="6.3446%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.0946%" y="533" width="0.0802%" height="15" fill="rgb(223,38,25)" fg:x="76" fg:w="1"/><text x="6.3446%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.0946%" y="517" width="0.0802%" height="15" fill="rgb(251,32,32)" fg:x="76" fg:w="1"/><text x="6.3446%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.2550%" y="549" width="0.1604%" height="15" fill="rgb(228,65,22)" fg:x="78" fg:w="2"/><text x="6.5050%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.2550%" y="533" width="0.1604%" height="15" fill="rgb(205,11,46)" fg:x="78" fg:w="2"/><text x="6.5050%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="6.4154%" y="549" width="0.0802%" height="15" fill="rgb(220,35,2)" fg:x="80" fg:w="1"/><text x="6.6654%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.4154%" y="533" width="0.0802%" height="15" fill="rgb(217,151,17)" fg:x="80" fg:w="1"/><text x="6.6654%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4154%" y="517" width="0.0802%" height="15" fill="rgb(243,227,35)" fg:x="80" fg:w="1"/><text x="6.6654%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="6.1748%" y="565" width="0.4010%" height="15" fill="rgb(214,0,34)" fg:x="77" fg:w="5"/><text x="6.4248%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.4956%" y="549" width="0.0802%" height="15" fill="rgb(209,42,37)" fg:x="81" fg:w="1"/><text x="6.7456%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.4956%" y="533" width="0.0802%" height="15" fill="rgb(251,176,30)" fg:x="81" fg:w="1"/><text x="6.7456%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="6.4956%" y="517" width="0.0802%" height="15" fill="rgb(223,64,40)" fg:x="81" fg:w="1"/><text x="6.7456%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="6.0946%" y="581" width="0.8019%" height="15" fill="rgb(227,180,23)" fg:x="76" fg:w="10"/><text x="6.3446%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="6.5758%" y="565" width="0.3208%" height="15" fill="rgb(220,137,31)" fg:x="82" fg:w="4"/><text x="6.8258%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (34 samples, 2.73%)</title><rect x="4.2502%" y="629" width="2.7265%" height="15" fill="rgb(245,124,25)" fg:x="53" fg:w="34"/><text x="4.5002%" y="639.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.09%)</title><rect x="4.8917%" y="613" width="2.0850%" height="15" fill="rgb(217,157,5)" fg:x="61" fg:w="26"/><text x="5.1417%" y="623.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="5.2125%" y="597" width="1.7642%" height="15" fill="rgb(225,59,2)" fg:x="65" fg:w="22"/><text x="5.4625%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.8966%" y="581" width="0.0802%" height="15" fill="rgb(220,182,9)" fg:x="86" fg:w="1"/><text x="7.1466%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.8966%" y="565" width="0.0802%" height="15" fill="rgb(249,54,24)" fg:x="86" fg:w="1"/><text x="7.1466%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.1371%" y="597" width="0.0802%" height="15" fill="rgb(216,89,17)" fg:x="89" fg:w="1"/><text x="7.3871%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2173%" y="581" width="0.0802%" height="15" fill="rgb(245,20,45)" fg:x="90" fg:w="1"/><text x="7.4673%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.2975%" y="581" width="0.0802%" height="15" fill="rgb(230,83,14)" fg:x="91" fg:w="1"/><text x="7.5475%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.3777%" y="565" width="0.0802%" height="15" fill="rgb(246,109,11)" fg:x="92" fg:w="1"/><text x="7.6277%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.4579%" y="565" width="0.0802%" height="15" fill="rgb(235,85,23)" fg:x="93" fg:w="1"/><text x="7.7079%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.4579%" y="549" width="0.0802%" height="15" fill="rgb(215,101,36)" fg:x="93" fg:w="1"/><text x="7.7079%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="6.9767%" y="629" width="0.6415%" height="15" fill="rgb(228,140,31)" fg:x="87" fg:w="8"/><text x="7.2267%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.64%)</title><rect x="6.9767%" y="613" width="0.6415%" height="15" fill="rgb(234,162,37)" fg:x="87" fg:w="8"/><text x="7.2267%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="7.2173%" y="597" width="0.4010%" height="15" fill="rgb(221,0,24)" fg:x="90" fg:w="5"/><text x="7.4673%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="7.3777%" y="581" width="0.2406%" height="15" fill="rgb(230,161,41)" fg:x="92" fg:w="3"/><text x="7.6277%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="7.5381%" y="565" width="0.0802%" height="15" fill="rgb(224,46,24)" fg:x="94" fg:w="1"/><text x="7.7881%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="7.6183%" y="613" width="0.0802%" height="15" fill="rgb(205,59,32)" fg:x="95" fg:w="1"/><text x="7.8683%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="7.9391%" y="581" width="0.0802%" height="15" fill="rgb(239,31,20)" fg:x="99" fg:w="1"/><text x="8.1891%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.9391%" y="565" width="0.0802%" height="15" fill="rgb(233,149,44)" fg:x="99" fg:w="1"/><text x="8.1891%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.2598%" y="533" width="0.0802%" height="15" fill="rgb(243,47,26)" fg:x="103" fg:w="1"/><text x="8.5098%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.2598%" y="517" width="0.0802%" height="15" fill="rgb(233,107,5)" fg:x="103" fg:w="1"/><text x="8.5098%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.2598%" y="501" width="0.0802%" height="15" fill="rgb(248,140,33)" fg:x="103" fg:w="1"/><text x="8.5098%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.3400%" y="517" width="0.0802%" height="15" fill="rgb(228,178,19)" fg:x="104" fg:w="1"/><text x="8.5900%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="8.5004%" y="485" width="0.0802%" height="15" fill="rgb(224,39,49)" fg:x="106" fg:w="1"/><text x="8.7504%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="8.0192%" y="565" width="0.7217%" height="15" fill="rgb(246,56,47)" fg:x="100" fg:w="9"/><text x="8.2692%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="8.0192%" y="549" width="0.7217%" height="15" fill="rgb(220,73,27)" fg:x="100" fg:w="9"/><text x="8.2692%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="8.3400%" y="533" width="0.4010%" height="15" fill="rgb(239,112,21)" fg:x="104" fg:w="5"/><text x="8.5900%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="8.4202%" y="517" width="0.3208%" height="15" fill="rgb(253,14,51)" fg:x="105" fg:w="4"/><text x="8.6702%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="8.5004%" y="501" width="0.2406%" height="15" fill="rgb(215,58,12)" fg:x="106" fg:w="3"/><text x="8.7504%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="8.5806%" y="485" width="0.1604%" height="15" fill="rgb(207,181,19)" fg:x="107" fg:w="2"/><text x="8.8306%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="8.6608%" y="469" width="0.0802%" height="15" fill="rgb(211,214,34)" fg:x="108" fg:w="1"/><text x="8.9108%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6608%" y="453" width="0.0802%" height="15" fill="rgb(243,124,39)" fg:x="108" fg:w="1"/><text x="8.9108%" y="463.50"></text></g><g><title>engine::session::Session::flush (60 samples, 4.81%)</title><rect x="4.0096%" y="725" width="4.8115%" height="15" fill="rgb(248,135,21)" fg:x="50" fg:w="60"/><text x="4.2596%" y="735.50">engine..</text></g><g><title>engine::session::state::State::close (57 samples, 4.57%)</title><rect x="4.2502%" y="709" width="4.5710%" height="15" fill="rgb(245,218,3)" fg:x="53" fg:w="57"/><text x="4.5002%" y="719.50">engin..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.57%)</title><rect x="4.2502%" y="693" width="4.5710%" height="15" fill="rgb(225,144,22)" fg:x="53" fg:w="57"/><text x="4.5002%" y="703.50">engin..</text></g><g><title>core::iter::adapters::try_process (57 samples, 4.57%)</title><rect x="4.2502%" y="677" width="4.5710%" height="15" fill="rgb(250,90,15)" fg:x="53" fg:w="57"/><text x="4.5002%" y="687.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 4.57%)</title><rect x="4.2502%" y="661" width="4.5710%" height="15" fill="rgb(224,64,29)" fg:x="53" fg:w="57"/><text x="4.5002%" y="671.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (57 samples, 4.57%)</title><rect x="4.2502%" y="645" width="4.5710%" height="15" fill="rgb(217,50,47)" fg:x="53" fg:w="57"/><text x="4.5002%" y="655.50">engin..</text></g><g><title>kernel::model::any_entity_changes (15 samples, 1.20%)</title><rect x="7.6183%" y="629" width="1.2029%" height="15" fill="rgb(231,159,47)" fg:x="95" fg:w="15"/><text x="7.8683%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (14 samples, 1.12%)</title><rect x="7.6985%" y="613" width="1.1227%" height="15" fill="rgb(213,89,29)" fg:x="96" fg:w="14"/><text x="7.9485%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.04%)</title><rect x="7.7787%" y="597" width="1.0425%" height="15" fill="rgb(243,90,23)" fg:x="97" fg:w="13"/><text x="8.0287%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="8.0192%" y="581" width="0.8019%" height="15" fill="rgb(213,21,6)" fg:x="100" fg:w="10"/><text x="8.2692%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7410%" y="565" width="0.0802%" height="15" fill="rgb(237,139,17)" fg:x="109" fg:w="1"/><text x="8.9910%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7410%" y="549" width="0.0802%" height="15" fill="rgb(250,147,17)" fg:x="109" fg:w="1"/><text x="8.9910%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.7410%" y="533" width="0.0802%" height="15" fill="rgb(212,208,42)" fg:x="109" fg:w="1"/><text x="8.9910%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.8212%" y="709" width="0.0802%" height="15" fill="rgb(215,229,40)" fg:x="110" fg:w="1"/><text x="9.0712%" y="719.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="8.9014%" y="677" width="0.0802%" height="15" fill="rgb(206,204,1)" fg:x="111" fg:w="1"/><text x="9.1514%" y="687.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="8.9014%" y="661" width="0.0802%" height="15" fill="rgb(230,62,32)" fg:x="111" fg:w="1"/><text x="9.1514%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="8.9816%" y="629" width="0.0802%" height="15" fill="rgb(223,22,42)" fg:x="112" fg:w="1"/><text x="9.2316%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="8.9816%" y="613" width="0.0802%" height="15" fill="rgb(244,6,23)" fg:x="112" fg:w="1"/><text x="9.2316%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.9816%" y="597" width="0.0802%" height="15" fill="rgb(240,221,42)" fg:x="112" fg:w="1"/><text x="9.2316%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="8.9816%" y="661" width="0.1604%" height="15" fill="rgb(222,74,7)" fg:x="112" fg:w="2"/><text x="9.2316%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="8.9816%" y="645" width="0.1604%" height="15" fill="rgb(227,191,38)" fg:x="112" fg:w="2"/><text x="9.2316%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.0617%" y="629" width="0.0802%" height="15" fill="rgb(227,89,34)" fg:x="113" fg:w="1"/><text x="9.3117%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.0617%" y="613" width="0.0802%" height="15" fill="rgb(215,153,25)" fg:x="113" fg:w="1"/><text x="9.3117%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0617%" y="597" width="0.0802%" height="15" fill="rgb(215,153,46)" fg:x="113" fg:w="1"/><text x="9.3117%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="9.0617%" y="581" width="0.0802%" height="15" fill="rgb(242,38,52)" fg:x="113" fg:w="1"/><text x="9.3117%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0617%" y="565" width="0.0802%" height="15" fill="rgb(218,112,4)" fg:x="113" fg:w="1"/><text x="9.3117%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.0617%" y="549" width="0.0802%" height="15" fill="rgb(231,210,31)" fg:x="113" fg:w="1"/><text x="9.3117%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.0617%" y="533" width="0.0802%" height="15" fill="rgb(245,223,36)" fg:x="113" fg:w="1"/><text x="9.3117%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="8.9816%" y="677" width="0.2406%" height="15" fill="rgb(246,41,2)" fg:x="112" fg:w="3"/><text x="9.2316%" y="687.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="9.1419%" y="661" width="0.0802%" height="15" fill="rgb(227,51,31)" fg:x="114" fg:w="1"/><text x="9.3919%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1419%" y="645" width="0.0802%" height="15" fill="rgb(222,95,26)" fg:x="114" fg:w="1"/><text x="9.3919%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.1419%" y="629" width="0.0802%" height="15" fill="rgb(224,190,1)" fg:x="114" fg:w="1"/><text x="9.3919%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="9.1419%" y="613" width="0.0802%" height="15" fill="rgb(209,90,42)" fg:x="114" fg:w="1"/><text x="9.3919%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="9.2221%" y="661" width="0.1604%" height="15" fill="rgb(232,225,50)" fg:x="115" fg:w="2"/><text x="9.4721%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.2221%" y="645" width="0.1604%" height="15" fill="rgb(239,89,47)" fg:x="115" fg:w="2"/><text x="9.4721%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.2221%" y="629" width="0.1604%" height="15" fill="rgb(230,212,50)" fg:x="115" fg:w="2"/><text x="9.4721%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2221%" y="613" width="0.1604%" height="15" fill="rgb(252,1,27)" fg:x="115" fg:w="2"/><text x="9.4721%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="9.2221%" y="597" width="0.1604%" height="15" fill="rgb(237,179,41)" fg:x="115" fg:w="2"/><text x="9.4721%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2221%" y="581" width="0.1604%" height="15" fill="rgb(214,151,37)" fg:x="115" fg:w="2"/><text x="9.4721%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="9.2221%" y="565" width="0.1604%" height="15" fill="rgb(211,74,11)" fg:x="115" fg:w="2"/><text x="9.4721%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="9.2221%" y="549" width="0.1604%" height="15" fill="rgb(242,21,21)" fg:x="115" fg:w="2"/><text x="9.4721%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.3023%" y="533" width="0.0802%" height="15" fill="rgb(226,106,43)" fg:x="116" fg:w="1"/><text x="9.5523%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.3825%" y="597" width="0.0802%" height="15" fill="rgb(229,162,39)" fg:x="117" fg:w="1"/><text x="9.6325%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.3825%" y="581" width="0.0802%" height="15" fill="rgb(228,159,25)" fg:x="117" fg:w="1"/><text x="9.6325%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.3825%" y="565" width="0.0802%" height="15" fill="rgb(237,32,23)" fg:x="117" fg:w="1"/><text x="9.6325%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.3825%" y="549" width="0.0802%" height="15" fill="rgb(212,35,32)" fg:x="117" fg:w="1"/><text x="9.6325%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.3825%" y="533" width="0.0802%" height="15" fill="rgb(215,199,1)" fg:x="117" fg:w="1"/><text x="9.6325%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.3825%" y="517" width="0.0802%" height="15" fill="rgb(215,67,13)" fg:x="117" fg:w="1"/><text x="9.6325%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="9.3825%" y="501" width="0.0802%" height="15" fill="rgb(216,20,47)" fg:x="117" fg:w="1"/><text x="9.6325%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="9.3825%" y="485" width="0.0802%" height="15" fill="rgb(249,183,48)" fg:x="117" fg:w="1"/><text x="9.6325%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="9.3825%" y="469" width="0.0802%" height="15" fill="rgb(208,86,37)" fg:x="117" fg:w="1"/><text x="9.6325%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="9.3825%" y="453" width="0.0802%" height="15" fill="rgb(251,192,7)" fg:x="117" fg:w="1"/><text x="9.6325%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="9.3825%" y="437" width="0.0802%" height="15" fill="rgb(234,196,3)" fg:x="117" fg:w="1"/><text x="9.6325%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.3825%" y="421" width="0.0802%" height="15" fill="rgb(229,150,39)" fg:x="117" fg:w="1"/><text x="9.6325%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="9.2221%" y="677" width="0.3208%" height="15" fill="rgb(226,19,29)" fg:x="115" fg:w="4"/><text x="9.4721%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="9.3825%" y="661" width="0.1604%" height="15" fill="rgb(226,222,2)" fg:x="117" fg:w="2"/><text x="9.6325%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="9.3825%" y="645" width="0.1604%" height="15" fill="rgb(235,85,29)" fg:x="117" fg:w="2"/><text x="9.6325%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.3825%" y="629" width="0.1604%" height="15" fill="rgb(237,194,43)" fg:x="117" fg:w="2"/><text x="9.6325%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="9.3825%" y="613" width="0.1604%" height="15" fill="rgb(211,4,42)" fg:x="117" fg:w="2"/><text x="9.6325%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4627%" y="597" width="0.0802%" height="15" fill="rgb(221,80,37)" fg:x="118" fg:w="1"/><text x="9.7127%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.5429%" y="645" width="0.0802%" height="15" fill="rgb(222,47,31)" fg:x="119" fg:w="1"/><text x="9.7929%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.5429%" y="629" width="0.0802%" height="15" fill="rgb(249,82,52)" fg:x="119" fg:w="1"/><text x="9.7929%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5429%" y="613" width="0.0802%" height="15" fill="rgb(218,203,2)" fg:x="119" fg:w="1"/><text x="9.7929%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5429%" y="597" width="0.0802%" height="15" fill="rgb(210,175,14)" fg:x="119" fg:w="1"/><text x="9.7929%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.5429%" y="581" width="0.0802%" height="15" fill="rgb(216,210,12)" fg:x="119" fg:w="1"/><text x="9.7929%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.5429%" y="565" width="0.0802%" height="15" fill="rgb(229,120,18)" fg:x="119" fg:w="1"/><text x="9.7929%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.5429%" y="549" width="0.0802%" height="15" fill="rgb(231,174,12)" fg:x="119" fg:w="1"/><text x="9.7929%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="9.5429%" y="533" width="0.0802%" height="15" fill="rgb(214,101,53)" fg:x="119" fg:w="1"/><text x="9.7929%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="9.5429%" y="517" width="0.0802%" height="15" fill="rgb(246,89,43)" fg:x="119" fg:w="1"/><text x="9.7929%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="9.5429%" y="501" width="0.0802%" height="15" fill="rgb(222,9,51)" fg:x="119" fg:w="1"/><text x="9.7929%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="9.5429%" y="485" width="0.0802%" height="15" fill="rgb(252,221,9)" fg:x="119" fg:w="1"/><text x="9.7929%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="9.5429%" y="469" width="0.0802%" height="15" fill="rgb(248,28,15)" fg:x="119" fg:w="1"/><text x="9.7929%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.80%)</title><rect x="8.9014%" y="693" width="0.8019%" height="15" fill="rgb(213,54,52)" fg:x="111" fg:w="10"/><text x="9.1514%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="9.5429%" y="677" width="0.1604%" height="15" fill="rgb(240,3,45)" fg:x="119" fg:w="2"/><text x="9.7929%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="9.5429%" y="661" width="0.1604%" height="15" fill="rgb(239,138,24)" fg:x="119" fg:w="2"/><text x="9.7929%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="9.6231%" y="645" width="0.0802%" height="15" fill="rgb(233,45,54)" fg:x="120" fg:w="1"/><text x="9.8731%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="9.6231%" y="629" width="0.0802%" height="15" fill="rgb(220,131,2)" fg:x="120" fg:w="1"/><text x="9.8731%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6231%" y="613" width="0.0802%" height="15" fill="rgb(240,154,36)" fg:x="120" fg:w="1"/><text x="9.8731%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6231%" y="597" width="0.0802%" height="15" fill="rgb(251,221,1)" fg:x="120" fg:w="1"/><text x="9.8731%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.6231%" y="581" width="0.0802%" height="15" fill="rgb(225,217,1)" fg:x="120" fg:w="1"/><text x="9.8731%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (11 samples, 0.88%)</title><rect x="8.9014%" y="709" width="0.8821%" height="15" fill="rgb(241,105,49)" fg:x="111" fg:w="11"/><text x="9.1514%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.7033%" y="693" width="0.0802%" height="15" fill="rgb(215,44,32)" fg:x="121" fg:w="1"/><text x="9.9533%" y="703.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="9.7033%" y="677" width="0.0802%" height="15" fill="rgb(213,222,14)" fg:x="121" fg:w="1"/><text x="9.9533%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="9.7033%" y="661" width="0.0802%" height="15" fill="rgb(207,99,52)" fg:x="121" fg:w="1"/><text x="9.9533%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.9439%" y="597" width="0.0802%" height="15" fill="rgb(214,208,52)" fg:x="124" fg:w="1"/><text x="10.1939%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.9439%" y="581" width="0.0802%" height="15" fill="rgb(244,169,0)" fg:x="124" fg:w="1"/><text x="10.1939%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="9.7835%" y="693" width="0.3208%" height="15" fill="rgb(216,193,37)" fg:x="122" fg:w="4"/><text x="10.0335%" y="703.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="9.7835%" y="677" width="0.3208%" height="15" fill="rgb(212,158,10)" fg:x="122" fg:w="4"/><text x="10.0335%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="9.7835%" y="661" width="0.3208%" height="15" fill="rgb(213,110,20)" fg:x="122" fg:w="4"/><text x="10.0335%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="9.7835%" y="645" width="0.3208%" height="15" fill="rgb(226,5,42)" fg:x="122" fg:w="4"/><text x="10.0335%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="9.9439%" y="629" width="0.1604%" height="15" fill="rgb(211,93,8)" fg:x="124" fg:w="2"/><text x="10.1939%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="9.9439%" y="613" width="0.1604%" height="15" fill="rgb(240,208,12)" fg:x="124" fg:w="2"/><text x="10.1939%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.0241%" y="597" width="0.0802%" height="15" fill="rgb(233,127,50)" fg:x="125" fg:w="1"/><text x="10.2741%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.0241%" y="581" width="0.0802%" height="15" fill="rgb(227,199,53)" fg:x="125" fg:w="1"/><text x="10.2741%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.0241%" y="565" width="0.0802%" height="15" fill="rgb(235,199,10)" fg:x="125" fg:w="1"/><text x="10.2741%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.1043%" y="693" width="0.0802%" height="15" fill="rgb(228,148,35)" fg:x="126" fg:w="1"/><text x="10.3543%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="10.1043%" y="677" width="0.0802%" height="15" fill="rgb(217,87,19)" fg:x="126" fg:w="1"/><text x="10.3543%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.1043%" y="661" width="0.0802%" height="15" fill="rgb(239,9,32)" fg:x="126" fg:w="1"/><text x="10.3543%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1043%" y="645" width="0.0802%" height="15" fill="rgb(229,101,29)" fg:x="126" fg:w="1"/><text x="10.3543%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.1844%" y="613" width="0.0802%" height="15" fill="rgb(208,143,26)" fg:x="127" fg:w="1"/><text x="10.4344%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.1844%" y="645" width="0.1604%" height="15" fill="rgb(214,10,2)" fg:x="127" fg:w="2"/><text x="10.4344%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="10.1844%" y="629" width="0.1604%" height="15" fill="rgb(254,203,30)" fg:x="127" fg:w="2"/><text x="10.4344%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.2646%" y="613" width="0.0802%" height="15" fill="rgb(242,45,3)" fg:x="128" fg:w="1"/><text x="10.5146%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2646%" y="597" width="0.0802%" height="15" fill="rgb(209,146,51)" fg:x="128" fg:w="1"/><text x="10.5146%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.2646%" y="581" width="0.0802%" height="15" fill="rgb(222,80,5)" fg:x="128" fg:w="1"/><text x="10.5146%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2646%" y="565" width="0.0802%" height="15" fill="rgb(252,80,35)" fg:x="128" fg:w="1"/><text x="10.5146%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.2646%" y="549" width="0.0802%" height="15" fill="rgb(246,125,28)" fg:x="128" fg:w="1"/><text x="10.5146%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.2646%" y="533" width="0.0802%" height="15" fill="rgb(224,143,51)" fg:x="128" fg:w="1"/><text x="10.5146%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.2646%" y="517" width="0.0802%" height="15" fill="rgb(205,24,17)" fg:x="128" fg:w="1"/><text x="10.5146%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.2646%" y="501" width="0.0802%" height="15" fill="rgb(253,128,30)" fg:x="128" fg:w="1"/><text x="10.5146%" y="511.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="10.1844%" y="693" width="0.2406%" height="15" fill="rgb(214,153,25)" fg:x="127" fg:w="3"/><text x="10.4344%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="10.1844%" y="677" width="0.2406%" height="15" fill="rgb(214,4,28)" fg:x="127" fg:w="3"/><text x="10.4344%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="10.1844%" y="661" width="0.2406%" height="15" fill="rgb(235,179,52)" fg:x="127" fg:w="3"/><text x="10.4344%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="10.3448%" y="645" width="0.0802%" height="15" fill="rgb(233,27,42)" fg:x="129" fg:w="1"/><text x="10.5948%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.3448%" y="629" width="0.0802%" height="15" fill="rgb(238,35,25)" fg:x="129" fg:w="1"/><text x="10.5948%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.3448%" y="613" width="0.0802%" height="15" fill="rgb(227,44,31)" fg:x="129" fg:w="1"/><text x="10.5948%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.3448%" y="597" width="0.0802%" height="15" fill="rgb(232,201,13)" fg:x="129" fg:w="1"/><text x="10.5948%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.3448%" y="581" width="0.0802%" height="15" fill="rgb(224,172,52)" fg:x="129" fg:w="1"/><text x="10.5948%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="10.4250%" y="677" width="0.0802%" height="15" fill="rgb(214,27,26)" fg:x="130" fg:w="1"/><text x="10.6750%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="10.4250%" y="661" width="0.0802%" height="15" fill="rgb(210,185,52)" fg:x="130" fg:w="1"/><text x="10.6750%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.4250%" y="645" width="0.0802%" height="15" fill="rgb(249,59,32)" fg:x="130" fg:w="1"/><text x="10.6750%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.5052%" y="661" width="0.0802%" height="15" fill="rgb(242,209,18)" fg:x="131" fg:w="1"/><text x="10.7552%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="10.5052%" y="645" width="0.0802%" height="15" fill="rgb(229,0,18)" fg:x="131" fg:w="1"/><text x="10.7552%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (23 samples, 1.84%)</title><rect x="8.8212%" y="725" width="1.8444%" height="15" fill="rgb(217,138,29)" fg:x="110" fg:w="23"/><text x="9.0712%" y="735.50">p..</text></g><g><title>plugins_core::tools::set_container (11 samples, 0.88%)</title><rect x="9.7835%" y="709" width="0.8821%" height="15" fill="rgb(215,72,42)" fg:x="122" fg:w="11"/><text x="10.0335%" y="719.50"></text></g><g><title>plugins_core::location::Location::set (3 samples, 0.24%)</title><rect x="10.4250%" y="693" width="0.2406%" height="15" fill="rgb(254,115,11)" fg:x="130" fg:w="3"/><text x="10.6750%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="10.5052%" y="677" width="0.1604%" height="15" fill="rgb(205,133,39)" fg:x="131" fg:w="2"/><text x="10.7552%" y="687.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="10.5854%" y="661" width="0.0802%" height="15" fill="rgb(211,36,27)" fg:x="132" fg:w="1"/><text x="10.8354%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5854%" y="645" width="0.0802%" height="15" fill="rgb(221,48,10)" fg:x="132" fg:w="1"/><text x="10.8354%" y="655.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="10.5854%" y="629" width="0.0802%" height="15" fill="rgb(230,172,50)" fg:x="132" fg:w="1"/><text x="10.8354%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.5854%" y="613" width="0.0802%" height="15" fill="rgb(249,72,18)" fg:x="132" fg:w="1"/><text x="10.8354%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5854%" y="597" width="0.0802%" height="15" fill="rgb(237,58,48)" fg:x="132" fg:w="1"/><text x="10.8354%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="10.6656%" y="677" width="0.0802%" height="15" fill="rgb(242,123,3)" fg:x="133" fg:w="1"/><text x="10.9156%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.6656%" y="661" width="0.0802%" height="15" fill="rgb(232,111,32)" fg:x="133" fg:w="1"/><text x="10.9156%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="10.6656%" y="693" width="0.1604%" height="15" fill="rgb(229,108,3)" fg:x="133" fg:w="2"/><text x="10.9156%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.7458%" y="677" width="0.0802%" height="15" fill="rgb(222,158,10)" fg:x="134" fg:w="1"/><text x="10.9958%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="10.7458%" y="661" width="0.0802%" height="15" fill="rgb(205,34,49)" fg:x="134" fg:w="1"/><text x="10.9958%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7458%" y="645" width="0.0802%" height="15" fill="rgb(232,21,14)" fg:x="134" fg:w="1"/><text x="10.9958%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="10.7458%" y="629" width="0.0802%" height="15" fill="rgb(229,127,44)" fg:x="134" fg:w="1"/><text x="10.9958%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="10.7458%" y="613" width="0.0802%" height="15" fill="rgb(232,171,4)" fg:x="134" fg:w="1"/><text x="10.9958%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.7458%" y="597" width="0.0802%" height="15" fill="rgb(250,92,16)" fg:x="134" fg:w="1"/><text x="10.9958%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.7458%" y="581" width="0.0802%" height="15" fill="rgb(230,103,38)" fg:x="134" fg:w="1"/><text x="10.9958%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8260%" y="613" width="0.0802%" height="15" fill="rgb(253,167,9)" fg:x="135" fg:w="1"/><text x="11.0760%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.8260%" y="597" width="0.0802%" height="15" fill="rgb(222,118,11)" fg:x="135" fg:w="1"/><text x="11.0760%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8260%" y="581" width="0.0802%" height="15" fill="rgb(240,202,0)" fg:x="135" fg:w="1"/><text x="11.0760%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.9062%" y="549" width="0.0802%" height="15" fill="rgb(236,124,4)" fg:x="136" fg:w="1"/><text x="11.1562%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9062%" y="533" width="0.0802%" height="15" fill="rgb(244,128,18)" fg:x="136" fg:w="1"/><text x="11.1562%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.9062%" y="517" width="0.0802%" height="15" fill="rgb(231,206,5)" fg:x="136" fg:w="1"/><text x="11.1562%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="10.8260%" y="693" width="0.2406%" height="15" fill="rgb(237,111,8)" fg:x="135" fg:w="3"/><text x="11.0760%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="10.8260%" y="677" width="0.2406%" height="15" fill="rgb(225,127,3)" fg:x="135" fg:w="3"/><text x="11.0760%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.8260%" y="661" width="0.2406%" height="15" fill="rgb(222,85,48)" fg:x="135" fg:w="3"/><text x="11.0760%" y="671.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="10.8260%" y="645" width="0.2406%" height="15" fill="rgb(221,108,37)" fg:x="135" fg:w="3"/><text x="11.0760%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="10.8260%" y="629" width="0.2406%" height="15" fill="rgb(226,169,36)" fg:x="135" fg:w="3"/><text x="11.0760%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="10.9062%" y="613" width="0.1604%" height="15" fill="rgb(237,76,12)" fg:x="136" fg:w="2"/><text x="11.1562%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="10.9062%" y="597" width="0.1604%" height="15" fill="rgb(210,227,32)" fg:x="136" fg:w="2"/><text x="11.1562%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="10.9062%" y="581" width="0.1604%" height="15" fill="rgb(214,117,20)" fg:x="136" fg:w="2"/><text x="11.1562%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="10.9062%" y="565" width="0.1604%" height="15" fill="rgb(234,119,41)" fg:x="136" fg:w="2"/><text x="11.1562%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.9864%" y="549" width="0.0802%" height="15" fill="rgb(230,130,47)" fg:x="137" fg:w="1"/><text x="11.2364%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0666%" y="645" width="0.1604%" height="15" fill="rgb(215,21,41)" fg:x="138" fg:w="2"/><text x="11.3166%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="11.0666%" y="629" width="0.1604%" height="15" fill="rgb(226,26,53)" fg:x="138" fg:w="2"/><text x="11.3166%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1468%" y="613" width="0.0802%" height="15" fill="rgb(221,92,23)" fg:x="139" fg:w="1"/><text x="11.3968%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1468%" y="597" width="0.0802%" height="15" fill="rgb(213,156,21)" fg:x="139" fg:w="1"/><text x="11.3968%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="11.0666%" y="677" width="0.2406%" height="15" fill="rgb(254,166,29)" fg:x="138" fg:w="3"/><text x="11.3166%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="11.0666%" y="661" width="0.2406%" height="15" fill="rgb(213,71,1)" fg:x="138" fg:w="3"/><text x="11.3166%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2269%" y="645" width="0.0802%" height="15" fill="rgb(245,8,13)" fg:x="140" fg:w="1"/><text x="11.4769%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.2269%" y="629" width="0.0802%" height="15" fill="rgb(213,32,32)" fg:x="140" fg:w="1"/><text x="11.4769%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.2269%" y="613" width="0.0802%" height="15" fill="rgb(251,86,50)" fg:x="140" fg:w="1"/><text x="11.4769%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.2269%" y="597" width="0.0802%" height="15" fill="rgb(252,92,41)" fg:x="140" fg:w="1"/><text x="11.4769%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="11.0666%" y="693" width="0.3208%" height="15" fill="rgb(234,70,35)" fg:x="138" fg:w="4"/><text x="11.3166%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.3071%" y="677" width="0.0802%" height="15" fill="rgb(210,157,19)" fg:x="141" fg:w="1"/><text x="11.5571%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.3071%" y="661" width="0.0802%" height="15" fill="rgb(206,20,45)" fg:x="141" fg:w="1"/><text x="11.5571%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3071%" y="645" width="0.0802%" height="15" fill="rgb(207,34,7)" fg:x="141" fg:w="1"/><text x="11.5571%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.3071%" y="629" width="0.0802%" height="15" fill="rgb(253,151,14)" fg:x="141" fg:w="1"/><text x="11.5571%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3071%" y="613" width="0.0802%" height="15" fill="rgb(252,1,18)" fg:x="141" fg:w="1"/><text x="11.5571%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.3071%" y="597" width="0.0802%" height="15" fill="rgb(214,77,52)" fg:x="141" fg:w="1"/><text x="11.5571%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.3071%" y="581" width="0.0802%" height="15" fill="rgb(254,106,35)" fg:x="141" fg:w="1"/><text x="11.5571%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.3071%" y="565" width="0.0802%" height="15" fill="rgb(212,67,40)" fg:x="141" fg:w="1"/><text x="11.5571%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.3071%" y="549" width="0.0802%" height="15" fill="rgb(228,76,23)" fg:x="141" fg:w="1"/><text x="11.5571%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3071%" y="533" width="0.0802%" height="15" fill="rgb(250,198,5)" fg:x="141" fg:w="1"/><text x="11.5571%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.3071%" y="517" width="0.0802%" height="15" fill="rgb(209,20,25)" fg:x="141" fg:w="1"/><text x="11.5571%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.3071%" y="501" width="0.0802%" height="15" fill="rgb(236,32,4)" fg:x="141" fg:w="1"/><text x="11.5571%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.3071%" y="485" width="0.0802%" height="15" fill="rgb(215,31,6)" fg:x="141" fg:w="1"/><text x="11.5571%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.3071%" y="469" width="0.0802%" height="15" fill="rgb(207,186,49)" fg:x="141" fg:w="1"/><text x="11.5571%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.3071%" y="453" width="0.0802%" height="15" fill="rgb(211,212,49)" fg:x="141" fg:w="1"/><text x="11.5571%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3071%" y="437" width="0.0802%" height="15" fill="rgb(229,51,41)" fg:x="141" fg:w="1"/><text x="11.5571%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.3873%" y="661" width="0.0802%" height="15" fill="rgb(205,225,36)" fg:x="142" fg:w="1"/><text x="11.6373%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="11.3873%" y="645" width="0.0802%" height="15" fill="rgb(209,213,45)" fg:x="142" fg:w="1"/><text x="11.6373%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="11.3873%" y="629" width="0.0802%" height="15" fill="rgb(219,35,49)" fg:x="142" fg:w="1"/><text x="11.6373%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="11.4675%" y="661" width="0.0802%" height="15" fill="rgb(215,205,22)" fg:x="143" fg:w="1"/><text x="11.7175%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.4675%" y="645" width="0.0802%" height="15" fill="rgb(248,204,34)" fg:x="143" fg:w="1"/><text x="11.7175%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4675%" y="629" width="0.0802%" height="15" fill="rgb(219,223,31)" fg:x="143" fg:w="1"/><text x="11.7175%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.4675%" y="613" width="0.0802%" height="15" fill="rgb(236,14,8)" fg:x="143" fg:w="1"/><text x="11.7175%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="10.6656%" y="709" width="0.9623%" height="15" fill="rgb(243,129,23)" fg:x="133" fg:w="12"/><text x="10.9156%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="11.3873%" y="693" width="0.2406%" height="15" fill="rgb(205,204,5)" fg:x="142" fg:w="3"/><text x="11.6373%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="11.3873%" y="677" width="0.2406%" height="15" fill="rgb(244,115,32)" fg:x="142" fg:w="3"/><text x="11.6373%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="11.5477%" y="661" width="0.0802%" height="15" fill="rgb(229,123,14)" fg:x="144" fg:w="1"/><text x="11.7977%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="11.5477%" y="645" width="0.0802%" height="15" fill="rgb(250,85,1)" fg:x="144" fg:w="1"/><text x="11.7977%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="11.5477%" y="629" width="0.0802%" height="15" fill="rgb(209,141,54)" fg:x="144" fg:w="1"/><text x="11.7977%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.5477%" y="613" width="0.0802%" height="15" fill="rgb(244,107,39)" fg:x="144" fg:w="1"/><text x="11.7977%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.5477%" y="597" width="0.0802%" height="15" fill="rgb(230,68,26)" fg:x="144" fg:w="1"/><text x="11.7977%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="11.5477%" y="581" width="0.0802%" height="15" fill="rgb(220,178,33)" fg:x="144" fg:w="1"/><text x="11.7977%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="11.5477%" y="565" width="0.0802%" height="15" fill="rgb(220,77,53)" fg:x="144" fg:w="1"/><text x="11.7977%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="11.5477%" y="549" width="0.0802%" height="15" fill="rgb(224,108,19)" fg:x="144" fg:w="1"/><text x="11.7977%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="11.5477%" y="533" width="0.0802%" height="15" fill="rgb(223,203,27)" fg:x="144" fg:w="1"/><text x="11.7977%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.5477%" y="517" width="0.0802%" height="15" fill="rgb(211,32,46)" fg:x="144" fg:w="1"/><text x="11.7977%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="11.5477%" y="501" width="0.0802%" height="15" fill="rgb(240,101,27)" fg:x="144" fg:w="1"/><text x="11.7977%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="11.5477%" y="485" width="0.0802%" height="15" fill="rgb(217,210,11)" fg:x="144" fg:w="1"/><text x="11.7977%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="11.5477%" y="469" width="0.0802%" height="15" fill="rgb(236,130,21)" fg:x="144" fg:w="1"/><text x="11.7977%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.04%)</title><rect x="10.6656%" y="725" width="1.0425%" height="15" fill="rgb(250,136,8)" fg:x="133" fg:w="13"/><text x="10.9156%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.6279%" y="709" width="0.0802%" height="15" fill="rgb(243,223,36)" fg:x="145" fg:w="1"/><text x="11.8779%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.6279%" y="693" width="0.0802%" height="15" fill="rgb(246,184,8)" fg:x="145" fg:w="1"/><text x="11.8779%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.6279%" y="677" width="0.0802%" height="15" fill="rgb(222,158,36)" fg:x="145" fg:w="1"/><text x="11.8779%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.6279%" y="661" width="0.0802%" height="15" fill="rgb(210,220,19)" fg:x="145" fg:w="1"/><text x="11.8779%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.6279%" y="645" width="0.0802%" height="15" fill="rgb(246,44,38)" fg:x="145" fg:w="1"/><text x="11.8779%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.6279%" y="629" width="0.0802%" height="15" fill="rgb(246,186,14)" fg:x="145" fg:w="1"/><text x="11.8779%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.6279%" y="613" width="0.0802%" height="15" fill="rgb(233,193,20)" fg:x="145" fg:w="1"/><text x="11.8779%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.7081%" y="661" width="0.0802%" height="15" fill="rgb(215,60,5)" fg:x="146" fg:w="1"/><text x="11.9581%" y="671.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="11.7081%" y="725" width="0.2406%" height="15" fill="rgb(207,128,10)" fg:x="146" fg:w="3"/><text x="11.9581%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="11.7081%" y="709" width="0.2406%" height="15" fill="rgb(238,84,54)" fg:x="146" fg:w="3"/><text x="11.9581%" y="719.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="11.7081%" y="693" width="0.2406%" height="15" fill="rgb(213,130,11)" fg:x="146" fg:w="3"/><text x="11.9581%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="11.7081%" y="677" width="0.2406%" height="15" fill="rgb(235,62,9)" fg:x="146" fg:w="3"/><text x="11.9581%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="11.7883%" y="661" width="0.1604%" height="15" fill="rgb(222,64,24)" fg:x="147" fg:w="2"/><text x="12.0383%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.8685%" y="645" width="0.0802%" height="15" fill="rgb(238,193,42)" fg:x="148" fg:w="1"/><text x="12.1185%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="11.8685%" y="629" width="0.0802%" height="15" fill="rgb(243,204,46)" fg:x="148" fg:w="1"/><text x="12.1185%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="11.8685%" y="613" width="0.0802%" height="15" fill="rgb(243,196,11)" fg:x="148" fg:w="1"/><text x="12.1185%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="12.1091%" y="709" width="0.1604%" height="15" fill="rgb(232,77,22)" fg:x="151" fg:w="2"/><text x="12.3591%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.1091%" y="693" width="0.1604%" height="15" fill="rgb(215,80,25)" fg:x="151" fg:w="2"/><text x="12.3591%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.1893%" y="677" width="0.0802%" height="15" fill="rgb(210,173,7)" fg:x="152" fg:w="1"/><text x="12.4393%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1893%" y="661" width="0.0802%" height="15" fill="rgb(207,101,10)" fg:x="152" fg:w="1"/><text x="12.4393%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.1893%" y="645" width="0.0802%" height="15" fill="rgb(246,57,48)" fg:x="152" fg:w="1"/><text x="12.4393%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.1893%" y="629" width="0.0802%" height="15" fill="rgb(236,184,40)" fg:x="152" fg:w="1"/><text x="12.4393%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2694%" y="709" width="0.0802%" height="15" fill="rgb(210,205,13)" fg:x="153" fg:w="1"/><text x="12.5194%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2694%" y="693" width="0.0802%" height="15" fill="rgb(231,129,42)" fg:x="153" fg:w="1"/><text x="12.5194%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.2694%" y="677" width="0.0802%" height="15" fill="rgb(220,229,54)" fg:x="153" fg:w="1"/><text x="12.5194%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.2694%" y="661" width="0.0802%" height="15" fill="rgb(230,192,26)" fg:x="153" fg:w="1"/><text x="12.5194%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.2694%" y="645" width="0.0802%" height="15" fill="rgb(253,18,30)" fg:x="153" fg:w="1"/><text x="12.5194%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.2694%" y="629" width="0.0802%" height="15" fill="rgb(216,62,53)" fg:x="153" fg:w="1"/><text x="12.5194%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2694%" y="613" width="0.0802%" height="15" fill="rgb(230,79,29)" fg:x="153" fg:w="1"/><text x="12.5194%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.2694%" y="597" width="0.0802%" height="15" fill="rgb(242,26,26)" fg:x="153" fg:w="1"/><text x="12.5194%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.2694%" y="581" width="0.0802%" height="15" fill="rgb(227,125,21)" fg:x="153" fg:w="1"/><text x="12.5194%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.2694%" y="565" width="0.0802%" height="15" fill="rgb(229,93,26)" fg:x="153" fg:w="1"/><text x="12.5194%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.2694%" y="549" width="0.0802%" height="15" fill="rgb(227,228,8)" fg:x="153" fg:w="1"/><text x="12.5194%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.2694%" y="533" width="0.0802%" height="15" fill="rgb(233,56,0)" fg:x="153" fg:w="1"/><text x="12.5194%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.2694%" y="517" width="0.0802%" height="15" fill="rgb(225,185,17)" fg:x="153" fg:w="1"/><text x="12.5194%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="12.4298%" y="661" width="0.0802%" height="15" fill="rgb(238,202,30)" fg:x="155" fg:w="1"/><text x="12.6798%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.4298%" y="645" width="0.0802%" height="15" fill="rgb(236,60,13)" fg:x="155" fg:w="1"/><text x="12.6798%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.4298%" y="629" width="0.0802%" height="15" fill="rgb(244,92,0)" fg:x="155" fg:w="1"/><text x="12.6798%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="12.4298%" y="613" width="0.0802%" height="15" fill="rgb(225,57,15)" fg:x="155" fg:w="1"/><text x="12.6798%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="12.4298%" y="597" width="0.0802%" height="15" fill="rgb(228,5,28)" fg:x="155" fg:w="1"/><text x="12.6798%" y="607.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="12.5100%" y="565" width="0.0802%" height="15" fill="rgb(252,34,51)" fg:x="156" fg:w="1"/><text x="12.7600%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.5100%" y="549" width="0.0802%" height="15" fill="rgb(235,58,7)" fg:x="156" fg:w="1"/><text x="12.7600%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5100%" y="533" width="0.0802%" height="15" fill="rgb(250,132,20)" fg:x="156" fg:w="1"/><text x="12.7600%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.5100%" y="517" width="0.0802%" height="15" fill="rgb(217,164,0)" fg:x="156" fg:w="1"/><text x="12.7600%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5100%" y="501" width="0.0802%" height="15" fill="rgb(208,220,35)" fg:x="156" fg:w="1"/><text x="12.7600%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5100%" y="485" width="0.0802%" height="15" fill="rgb(227,42,51)" fg:x="156" fg:w="1"/><text x="12.7600%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5100%" y="469" width="0.0802%" height="15" fill="rgb(225,146,38)" fg:x="156" fg:w="1"/><text x="12.7600%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.5902%" y="549" width="0.0802%" height="15" fill="rgb(252,108,37)" fg:x="157" fg:w="1"/><text x="12.8402%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.5902%" y="533" width="0.0802%" height="15" fill="rgb(244,101,24)" fg:x="157" fg:w="1"/><text x="12.8402%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.5902%" y="517" width="0.0802%" height="15" fill="rgb(213,161,50)" fg:x="157" fg:w="1"/><text x="12.8402%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5902%" y="501" width="0.0802%" height="15" fill="rgb(248,159,19)" fg:x="157" fg:w="1"/><text x="12.8402%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.5902%" y="485" width="0.0802%" height="15" fill="rgb(233,179,15)" fg:x="157" fg:w="1"/><text x="12.8402%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.5902%" y="469" width="0.0802%" height="15" fill="rgb(248,178,3)" fg:x="157" fg:w="1"/><text x="12.8402%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.5902%" y="453" width="0.0802%" height="15" fill="rgb(245,190,41)" fg:x="157" fg:w="1"/><text x="12.8402%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.5902%" y="437" width="0.0802%" height="15" fill="rgb(218,151,19)" fg:x="157" fg:w="1"/><text x="12.8402%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5902%" y="421" width="0.0802%" height="15" fill="rgb(245,25,44)" fg:x="157" fg:w="1"/><text x="12.8402%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.5902%" y="405" width="0.0802%" height="15" fill="rgb(235,172,47)" fg:x="157" fg:w="1"/><text x="12.8402%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.5902%" y="389" width="0.0802%" height="15" fill="rgb(246,33,12)" fg:x="157" fg:w="1"/><text x="12.8402%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.5902%" y="373" width="0.0802%" height="15" fill="rgb(214,124,7)" fg:x="157" fg:w="1"/><text x="12.8402%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.5902%" y="357" width="0.0802%" height="15" fill="rgb(246,186,18)" fg:x="157" fg:w="1"/><text x="12.8402%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.5902%" y="341" width="0.0802%" height="15" fill="rgb(231,94,1)" fg:x="157" fg:w="1"/><text x="12.8402%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5902%" y="325" width="0.0802%" height="15" fill="rgb(208,33,48)" fg:x="157" fg:w="1"/><text x="12.8402%" y="335.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="12.5100%" y="597" width="0.2406%" height="15" fill="rgb(208,195,44)" fg:x="156" fg:w="3"/><text x="12.7600%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="12.5100%" y="581" width="0.2406%" height="15" fill="rgb(226,13,52)" fg:x="156" fg:w="3"/><text x="12.7600%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.5902%" y="565" width="0.1604%" height="15" fill="rgb(217,219,45)" fg:x="157" fg:w="2"/><text x="12.8402%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.6704%" y="549" width="0.0802%" height="15" fill="rgb(223,45,25)" fg:x="158" fg:w="1"/><text x="12.9204%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.6704%" y="533" width="0.0802%" height="15" fill="rgb(241,163,0)" fg:x="158" fg:w="1"/><text x="12.9204%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.6704%" y="517" width="0.0802%" height="15" fill="rgb(216,68,47)" fg:x="158" fg:w="1"/><text x="12.9204%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.6704%" y="501" width="0.0802%" height="15" fill="rgb(236,119,45)" fg:x="158" fg:w="1"/><text x="12.9204%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.6704%" y="485" width="0.0802%" height="15" fill="rgb(209,188,24)" fg:x="158" fg:w="1"/><text x="12.9204%" y="495.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="12.7506%" y="597" width="0.0802%" height="15" fill="rgb(221,118,7)" fg:x="159" fg:w="1"/><text x="13.0006%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.7506%" y="581" width="0.0802%" height="15" fill="rgb(213,148,43)" fg:x="159" fg:w="1"/><text x="13.0006%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="12.5100%" y="613" width="0.4812%" height="15" fill="rgb(231,21,43)" fg:x="156" fg:w="6"/><text x="12.7600%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="12.8308%" y="597" width="0.1604%" height="15" fill="rgb(232,213,43)" fg:x="160" fg:w="2"/><text x="13.0808%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.8308%" y="581" width="0.1604%" height="15" fill="rgb(239,145,50)" fg:x="160" fg:w="2"/><text x="13.0808%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="12.8308%" y="565" width="0.1604%" height="15" fill="rgb(222,131,18)" fg:x="160" fg:w="2"/><text x="13.0808%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="12.9110%" y="549" width="0.0802%" height="15" fill="rgb(243,181,13)" fg:x="161" fg:w="1"/><text x="13.1610%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.9110%" y="533" width="0.0802%" height="15" fill="rgb(212,74,41)" fg:x="161" fg:w="1"/><text x="13.1610%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.9110%" y="517" width="0.0802%" height="15" fill="rgb(237,143,34)" fg:x="161" fg:w="1"/><text x="13.1610%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="12.9110%" y="501" width="0.0802%" height="15" fill="rgb(228,139,0)" fg:x="161" fg:w="1"/><text x="13.1610%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.9110%" y="485" width="0.0802%" height="15" fill="rgb(227,214,11)" fg:x="161" fg:w="1"/><text x="13.1610%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.9912%" y="597" width="0.0802%" height="15" fill="rgb(228,118,39)" fg:x="162" fg:w="1"/><text x="13.2412%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.9912%" y="581" width="0.0802%" height="15" fill="rgb(207,117,22)" fg:x="162" fg:w="1"/><text x="13.2412%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9912%" y="565" width="0.0802%" height="15" fill="rgb(225,91,8)" fg:x="162" fg:w="1"/><text x="13.2412%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9912%" y="549" width="0.0802%" height="15" fill="rgb(230,219,48)" fg:x="162" fg:w="1"/><text x="13.2412%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9912%" y="533" width="0.0802%" height="15" fill="rgb(244,0,23)" fg:x="162" fg:w="1"/><text x="13.2412%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9912%" y="517" width="0.0802%" height="15" fill="rgb(206,212,23)" fg:x="162" fg:w="1"/><text x="13.2412%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9912%" y="501" width="0.0802%" height="15" fill="rgb(254,62,10)" fg:x="162" fg:w="1"/><text x="13.2412%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9912%" y="485" width="0.0802%" height="15" fill="rgb(236,58,8)" fg:x="162" fg:w="1"/><text x="13.2412%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9912%" y="469" width="0.0802%" height="15" fill="rgb(232,212,17)" fg:x="162" fg:w="1"/><text x="13.2412%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9912%" y="453" width="0.0802%" height="15" fill="rgb(206,132,9)" fg:x="162" fg:w="1"/><text x="13.2412%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="12.9912%" y="437" width="0.0802%" height="15" fill="rgb(234,97,28)" fg:x="162" fg:w="1"/><text x="13.2412%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="12.9912%" y="421" width="0.0802%" height="15" fill="rgb(254,144,9)" fg:x="162" fg:w="1"/><text x="13.2412%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.1516%" y="437" width="0.1604%" height="15" fill="rgb(244,204,43)" fg:x="164" fg:w="2"/><text x="13.4016%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="13.1516%" y="421" width="0.1604%" height="15" fill="rgb(248,177,16)" fg:x="164" fg:w="2"/><text x="13.4016%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="13.1516%" y="405" width="0.1604%" height="15" fill="rgb(219,110,15)" fg:x="164" fg:w="2"/><text x="13.4016%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="13.1516%" y="389" width="0.1604%" height="15" fill="rgb(212,203,25)" fg:x="164" fg:w="2"/><text x="13.4016%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="13.1516%" y="373" width="0.1604%" height="15" fill="rgb(205,50,1)" fg:x="164" fg:w="2"/><text x="13.4016%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="13.1516%" y="357" width="0.1604%" height="15" fill="rgb(222,152,41)" fg:x="164" fg:w="2"/><text x="13.4016%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="13.1516%" y="341" width="0.1604%" height="15" fill="rgb(236,83,3)" fg:x="164" fg:w="2"/><text x="13.4016%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1516%" y="565" width="0.2406%" height="15" fill="rgb(214,30,54)" fg:x="164" fg:w="3"/><text x="13.4016%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1516%" y="549" width="0.2406%" height="15" fill="rgb(250,117,31)" fg:x="164" fg:w="3"/><text x="13.4016%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.1516%" y="533" width="0.2406%" height="15" fill="rgb(228,77,14)" fg:x="164" fg:w="3"/><text x="13.4016%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="13.1516%" y="517" width="0.2406%" height="15" fill="rgb(241,3,28)" fg:x="164" fg:w="3"/><text x="13.4016%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="13.1516%" y="501" width="0.2406%" height="15" fill="rgb(221,175,52)" fg:x="164" fg:w="3"/><text x="13.4016%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="13.1516%" y="485" width="0.2406%" height="15" fill="rgb(237,91,6)" fg:x="164" fg:w="3"/><text x="13.4016%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="13.1516%" y="469" width="0.2406%" height="15" fill="rgb(246,46,42)" fg:x="164" fg:w="3"/><text x="13.4016%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="13.1516%" y="453" width="0.2406%" height="15" fill="rgb(235,199,0)" fg:x="164" fg:w="3"/><text x="13.4016%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.3119%" y="437" width="0.0802%" height="15" fill="rgb(224,44,40)" fg:x="166" fg:w="1"/><text x="13.5619%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.3119%" y="421" width="0.0802%" height="15" fill="rgb(209,24,35)" fg:x="166" fg:w="1"/><text x="13.5619%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.3921%" y="533" width="0.0802%" height="15" fill="rgb(244,46,22)" fg:x="167" fg:w="1"/><text x="13.6421%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="12.9912%" y="613" width="0.5613%" height="15" fill="rgb(235,99,8)" fg:x="162" fg:w="7"/><text x="13.2412%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="13.0714%" y="597" width="0.4812%" height="15" fill="rgb(218,127,36)" fg:x="163" fg:w="6"/><text x="13.3214%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="13.1516%" y="581" width="0.4010%" height="15" fill="rgb(238,47,46)" fg:x="164" fg:w="5"/><text x="13.4016%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.3921%" y="565" width="0.1604%" height="15" fill="rgb(233,65,17)" fg:x="167" fg:w="2"/><text x="13.6421%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.3921%" y="549" width="0.1604%" height="15" fill="rgb(239,22,33)" fg:x="167" fg:w="2"/><text x="13.6421%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.4723%" y="533" width="0.0802%" height="15" fill="rgb(243,66,43)" fg:x="168" fg:w="1"/><text x="13.7223%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.4723%" y="517" width="0.0802%" height="15" fill="rgb(235,210,28)" fg:x="168" fg:w="1"/><text x="13.7223%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5525%" y="549" width="0.0802%" height="15" fill="rgb(205,191,50)" fg:x="169" fg:w="1"/><text x="13.8025%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5525%" y="533" width="0.0802%" height="15" fill="rgb(251,217,19)" fg:x="169" fg:w="1"/><text x="13.8025%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.5525%" y="517" width="0.0802%" height="15" fill="rgb(205,174,37)" fg:x="169" fg:w="1"/><text x="13.8025%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5525%" y="501" width="0.0802%" height="15" fill="rgb(212,158,42)" fg:x="169" fg:w="1"/><text x="13.8025%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.5525%" y="485" width="0.0802%" height="15" fill="rgb(212,208,51)" fg:x="169" fg:w="1"/><text x="13.8025%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.5525%" y="469" width="0.0802%" height="15" fill="rgb(225,198,20)" fg:x="169" fg:w="1"/><text x="13.8025%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.5525%" y="453" width="0.0802%" height="15" fill="rgb(247,41,44)" fg:x="169" fg:w="1"/><text x="13.8025%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.5525%" y="437" width="0.0802%" height="15" fill="rgb(228,33,41)" fg:x="169" fg:w="1"/><text x="13.8025%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5525%" y="421" width="0.0802%" height="15" fill="rgb(215,47,52)" fg:x="169" fg:w="1"/><text x="13.8025%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.5525%" y="405" width="0.0802%" height="15" fill="rgb(248,106,37)" fg:x="169" fg:w="1"/><text x="13.8025%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.5525%" y="389" width="0.0802%" height="15" fill="rgb(238,91,29)" fg:x="169" fg:w="1"/><text x="13.8025%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.5525%" y="373" width="0.0802%" height="15" fill="rgb(226,111,40)" fg:x="169" fg:w="1"/><text x="13.8025%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.5525%" y="357" width="0.0802%" height="15" fill="rgb(229,159,36)" fg:x="169" fg:w="1"/><text x="13.8025%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.5525%" y="341" width="0.0802%" height="15" fill="rgb(221,109,4)" fg:x="169" fg:w="1"/><text x="13.8025%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5525%" y="325" width="0.0802%" height="15" fill="rgb(236,56,25)" fg:x="169" fg:w="1"/><text x="13.8025%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="13.6327%" y="485" width="0.0802%" height="15" fill="rgb(244,113,23)" fg:x="170" fg:w="1"/><text x="13.8827%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6327%" y="469" width="0.0802%" height="15" fill="rgb(249,132,2)" fg:x="170" fg:w="1"/><text x="13.8827%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="13.5525%" y="581" width="0.2406%" height="15" fill="rgb(205,185,21)" fg:x="169" fg:w="3"/><text x="13.8025%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="13.5525%" y="565" width="0.2406%" height="15" fill="rgb(245,130,2)" fg:x="169" fg:w="3"/><text x="13.8025%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.6327%" y="549" width="0.1604%" height="15" fill="rgb(246,71,26)" fg:x="170" fg:w="2"/><text x="13.8827%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.6327%" y="533" width="0.1604%" height="15" fill="rgb(234,194,6)" fg:x="170" fg:w="2"/><text x="13.8827%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="13.6327%" y="517" width="0.1604%" height="15" fill="rgb(206,24,32)" fg:x="170" fg:w="2"/><text x="13.8827%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.6327%" y="501" width="0.1604%" height="15" fill="rgb(233,7,54)" fg:x="170" fg:w="2"/><text x="13.8827%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7129%" y="485" width="0.0802%" height="15" fill="rgb(252,46,1)" fg:x="171" fg:w="1"/><text x="13.9629%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7129%" y="469" width="0.0802%" height="15" fill="rgb(216,113,53)" fg:x="171" fg:w="1"/><text x="13.9629%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="13.7129%" y="453" width="0.0802%" height="15" fill="rgb(215,40,24)" fg:x="171" fg:w="1"/><text x="13.9629%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (18 samples, 1.44%)</title><rect x="12.5100%" y="629" width="1.4435%" height="15" fill="rgb(233,222,8)" fg:x="156" fg:w="18"/><text x="12.7600%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (5 samples, 0.40%)</title><rect x="13.5525%" y="613" width="0.4010%" height="15" fill="rgb(248,73,28)" fg:x="169" fg:w="5"/><text x="13.8025%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="13.5525%" y="597" width="0.4010%" height="15" fill="rgb(247,126,28)" fg:x="169" fg:w="5"/><text x="13.8025%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="13.7931%" y="581" width="0.1604%" height="15" fill="rgb(242,173,54)" fg:x="172" fg:w="2"/><text x="14.0431%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.7931%" y="565" width="0.1604%" height="15" fill="rgb(244,186,22)" fg:x="172" fg:w="2"/><text x="14.0431%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.8733%" y="549" width="0.0802%" height="15" fill="rgb(231,187,4)" fg:x="173" fg:w="1"/><text x="14.1233%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8733%" y="533" width="0.0802%" height="15" fill="rgb(252,66,47)" fg:x="173" fg:w="1"/><text x="14.1233%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.8733%" y="517" width="0.0802%" height="15" fill="rgb(240,228,28)" fg:x="173" fg:w="1"/><text x="14.1233%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.8733%" y="501" width="0.0802%" height="15" fill="rgb(237,63,43)" fg:x="173" fg:w="1"/><text x="14.1233%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.8733%" y="485" width="0.0802%" height="15" fill="rgb(214,1,44)" fg:x="173" fg:w="1"/><text x="14.1233%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="13.8733%" y="469" width="0.0802%" height="15" fill="rgb(212,2,46)" fg:x="173" fg:w="1"/><text x="14.1233%" y="479.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="12.5100%" y="645" width="1.5237%" height="15" fill="rgb(213,142,5)" fg:x="156" fg:w="19"/><text x="12.7600%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="13.9535%" y="629" width="0.0802%" height="15" fill="rgb(229,135,1)" fg:x="174" fg:w="1"/><text x="14.2035%" y="639.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="13.9535%" y="613" width="0.0802%" height="15" fill="rgb(252,98,38)" fg:x="174" fg:w="1"/><text x="14.2035%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.0337%" y="597" width="0.0802%" height="15" fill="rgb(206,89,40)" fg:x="175" fg:w="1"/><text x="14.2837%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.0337%" y="581" width="0.0802%" height="15" fill="rgb(219,73,36)" fg:x="175" fg:w="1"/><text x="14.2837%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0337%" y="565" width="0.0802%" height="15" fill="rgb(207,168,32)" fg:x="175" fg:w="1"/><text x="14.2837%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.0337%" y="549" width="0.0802%" height="15" fill="rgb(215,113,21)" fg:x="175" fg:w="1"/><text x="14.2837%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0337%" y="533" width="0.0802%" height="15" fill="rgb(217,144,43)" fg:x="175" fg:w="1"/><text x="14.2837%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.0337%" y="517" width="0.0802%" height="15" fill="rgb(249,48,50)" fg:x="175" fg:w="1"/><text x="14.2837%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.0337%" y="501" width="0.0802%" height="15" fill="rgb(242,1,26)" fg:x="175" fg:w="1"/><text x="14.2837%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (21 samples, 1.68%)</title><rect x="12.5100%" y="661" width="1.6840%" height="15" fill="rgb(231,167,42)" fg:x="156" fg:w="21"/><text x="12.7600%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="14.0337%" y="645" width="0.1604%" height="15" fill="rgb(242,177,45)" fg:x="175" fg:w="2"/><text x="14.2837%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="14.0337%" y="629" width="0.1604%" height="15" fill="rgb(232,121,42)" fg:x="175" fg:w="2"/><text x="14.2837%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="14.0337%" y="613" width="0.1604%" height="15" fill="rgb(205,8,42)" fg:x="175" fg:w="2"/><text x="14.2837%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="14.1139%" y="597" width="0.0802%" height="15" fill="rgb(238,199,24)" fg:x="176" fg:w="1"/><text x="14.3639%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.1139%" y="581" width="0.0802%" height="15" fill="rgb(228,112,2)" fg:x="176" fg:w="1"/><text x="14.3639%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.1139%" y="565" width="0.0802%" height="15" fill="rgb(215,115,33)" fg:x="176" fg:w="1"/><text x="14.3639%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.1139%" y="549" width="0.0802%" height="15" fill="rgb(230,209,34)" fg:x="176" fg:w="1"/><text x="14.3639%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="14.1139%" y="533" width="0.0802%" height="15" fill="rgb(246,76,12)" fg:x="176" fg:w="1"/><text x="14.3639%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="14.1941%" y="645" width="0.0802%" height="15" fill="rgb(240,110,9)" fg:x="177" fg:w="1"/><text x="14.4441%" y="655.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="14.1941%" y="629" width="0.0802%" height="15" fill="rgb(224,94,46)" fg:x="177" fg:w="1"/><text x="14.4441%" y="639.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="14.1941%" y="613" width="0.0802%" height="15" fill="rgb(247,150,22)" fg:x="177" fg:w="1"/><text x="14.4441%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.1941%" y="597" width="0.0802%" height="15" fill="rgb(249,85,13)" fg:x="177" fg:w="1"/><text x="14.4441%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (25 samples, 2.00%)</title><rect x="12.3496%" y="709" width="2.0048%" height="15" fill="rgb(208,77,41)" fg:x="154" fg:w="25"/><text x="12.5996%" y="719.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 2.00%)</title><rect x="12.3496%" y="693" width="2.0048%" height="15" fill="rgb(240,42,44)" fg:x="154" fg:w="25"/><text x="12.5996%" y="703.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (24 samples, 1.92%)</title><rect x="12.4298%" y="677" width="1.9246%" height="15" fill="rgb(222,10,51)" fg:x="155" fg:w="24"/><text x="12.6798%" y="687.50">p..</text></g><g><title>plugins_core::build::Build::new (2 samples, 0.16%)</title><rect x="14.1941%" y="661" width="0.1604%" height="15" fill="rgb(208,146,53)" fg:x="177" fg:w="2"/><text x="14.4441%" y="671.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="14.2743%" y="645" width="0.0802%" height="15" fill="rgb(236,162,23)" fg:x="178" fg:w="1"/><text x="14.5243%" y="655.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="14.2743%" y="629" width="0.0802%" height="15" fill="rgb(218,66,21)" fg:x="178" fg:w="1"/><text x="14.5243%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.2743%" y="613" width="0.0802%" height="15" fill="rgb(233,6,47)" fg:x="178" fg:w="1"/><text x="14.5243%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.2743%" y="597" width="0.0802%" height="15" fill="rgb(236,59,51)" fg:x="178" fg:w="1"/><text x="14.5243%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.2743%" y="581" width="0.0802%" height="15" fill="rgb(242,12,46)" fg:x="178" fg:w="1"/><text x="14.5243%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.2743%" y="565" width="0.0802%" height="15" fill="rgb(243,142,19)" fg:x="178" fg:w="1"/><text x="14.5243%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="14.3545%" y="693" width="0.0802%" height="15" fill="rgb(217,28,17)" fg:x="179" fg:w="1"/><text x="14.6045%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.3545%" y="677" width="0.0802%" height="15" fill="rgb(228,2,27)" fg:x="179" fg:w="1"/><text x="14.6045%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="14.5148%" y="645" width="0.0802%" height="15" fill="rgb(214,221,4)" fg:x="181" fg:w="1"/><text x="14.7648%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="14.5148%" y="629" width="0.0802%" height="15" fill="rgb(224,69,26)" fg:x="181" fg:w="1"/><text x="14.7648%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="14.5148%" y="613" width="0.0802%" height="15" fill="rgb(219,70,4)" fg:x="181" fg:w="1"/><text x="14.7648%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="14.5148%" y="597" width="0.0802%" height="15" fill="rgb(218,157,39)" fg:x="181" fg:w="1"/><text x="14.7648%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="14.5148%" y="581" width="0.0802%" height="15" fill="rgb(238,36,28)" fg:x="181" fg:w="1"/><text x="14.7648%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="14.5148%" y="565" width="0.0802%" height="15" fill="rgb(232,29,0)" fg:x="181" fg:w="1"/><text x="14.7648%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="14.6752%" y="581" width="0.0802%" height="15" fill="rgb(243,138,46)" fg:x="183" fg:w="1"/><text x="14.9252%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="14.7554%" y="565" width="0.0802%" height="15" fill="rgb(232,186,41)" fg:x="184" fg:w="1"/><text x="15.0054%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.7554%" y="549" width="0.0802%" height="15" fill="rgb(252,166,17)" fg:x="184" fg:w="1"/><text x="15.0054%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="14.7554%" y="533" width="0.0802%" height="15" fill="rgb(228,179,12)" fg:x="184" fg:w="1"/><text x="15.0054%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="14.7554%" y="517" width="0.0802%" height="15" fill="rgb(254,205,53)" fg:x="184" fg:w="1"/><text x="15.0054%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="14.7554%" y="581" width="0.1604%" height="15" fill="rgb(224,163,47)" fg:x="184" fg:w="2"/><text x="15.0054%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="14.8356%" y="565" width="0.0802%" height="15" fill="rgb(208,43,47)" fg:x="185" fg:w="1"/><text x="15.0856%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="14.9158%" y="565" width="0.2406%" height="15" fill="rgb(224,198,38)" fg:x="186" fg:w="3"/><text x="15.1658%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="14.9158%" y="549" width="0.2406%" height="15" fill="rgb(234,12,40)" fg:x="186" fg:w="3"/><text x="15.1658%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="15.3168%" y="533" width="0.0802%" height="15" fill="rgb(237,212,39)" fg:x="191" fg:w="1"/><text x="15.5668%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.3168%" y="517" width="0.0802%" height="15" fill="rgb(253,2,33)" fg:x="191" fg:w="1"/><text x="15.5668%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.3168%" y="501" width="0.0802%" height="15" fill="rgb(251,29,16)" fg:x="191" fg:w="1"/><text x="15.5668%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="15.3168%" y="549" width="0.2406%" height="15" fill="rgb(214,38,29)" fg:x="191" fg:w="3"/><text x="15.5668%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="15.3970%" y="533" width="0.1604%" height="15" fill="rgb(226,226,29)" fg:x="192" fg:w="2"/><text x="15.6470%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.4771%" y="517" width="0.0802%" height="15" fill="rgb(236,79,42)" fg:x="193" fg:w="1"/><text x="15.7271%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.4771%" y="501" width="0.0802%" height="15" fill="rgb(222,12,36)" fg:x="193" fg:w="1"/><text x="15.7271%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="15.5573%" y="549" width="0.3208%" height="15" fill="rgb(232,123,44)" fg:x="194" fg:w="4"/><text x="15.8073%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.7979%" y="533" width="0.0802%" height="15" fill="rgb(234,93,50)" fg:x="197" fg:w="1"/><text x="16.0479%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.8781%" y="533" width="0.0802%" height="15" fill="rgb(210,86,49)" fg:x="198" fg:w="1"/><text x="16.1281%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.8781%" y="517" width="0.0802%" height="15" fill="rgb(224,91,54)" fg:x="198" fg:w="1"/><text x="16.1281%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="15.9583%" y="517" width="0.0802%" height="15" fill="rgb(239,169,9)" fg:x="199" fg:w="1"/><text x="16.2083%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="15.9583%" y="501" width="0.0802%" height="15" fill="rgb(238,29,17)" fg:x="199" fg:w="1"/><text x="16.2083%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="15.9583%" y="485" width="0.0802%" height="15" fill="rgb(227,160,22)" fg:x="199" fg:w="1"/><text x="16.2083%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.9583%" y="469" width="0.0802%" height="15" fill="rgb(231,129,52)" fg:x="199" fg:w="1"/><text x="16.2083%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="16.0385%" y="517" width="0.2406%" height="15" fill="rgb(241,184,9)" fg:x="200" fg:w="3"/><text x="16.2885%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="16.1187%" y="501" width="0.1604%" height="15" fill="rgb(217,43,48)" fg:x="201" fg:w="2"/><text x="16.3687%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.1989%" y="485" width="0.0802%" height="15" fill="rgb(213,49,1)" fg:x="202" fg:w="1"/><text x="16.4489%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.1989%" y="469" width="0.0802%" height="15" fill="rgb(223,79,39)" fg:x="202" fg:w="1"/><text x="16.4489%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.1989%" y="453" width="0.0802%" height="15" fill="rgb(228,227,46)" fg:x="202" fg:w="1"/><text x="16.4489%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="15.9583%" y="533" width="0.4812%" height="15" fill="rgb(245,89,41)" fg:x="199" fg:w="6"/><text x="16.2083%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.2791%" y="517" width="0.1604%" height="15" fill="rgb(253,83,21)" fg:x="203" fg:w="2"/><text x="16.5291%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.2791%" y="501" width="0.1604%" height="15" fill="rgb(229,116,51)" fg:x="203" fg:w="2"/><text x="16.5291%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="15.8781%" y="549" width="0.7217%" height="15" fill="rgb(246,67,26)" fg:x="198" fg:w="9"/><text x="16.1281%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="16.4395%" y="533" width="0.1604%" height="15" fill="rgb(250,117,20)" fg:x="205" fg:w="2"/><text x="16.6895%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="16.4395%" y="517" width="0.1604%" height="15" fill="rgb(207,88,17)" fg:x="205" fg:w="2"/><text x="16.6895%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="16.5196%" y="501" width="0.0802%" height="15" fill="rgb(212,98,36)" fg:x="206" fg:w="1"/><text x="16.7696%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.52%)</title><rect x="15.1564%" y="565" width="1.5237%" height="15" fill="rgb(221,72,6)" fg:x="189" fg:w="19"/><text x="15.4064%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.5998%" y="549" width="0.0802%" height="15" fill="rgb(235,129,19)" fg:x="207" fg:w="1"/><text x="16.8498%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.5998%" y="533" width="0.0802%" height="15" fill="rgb(237,200,6)" fg:x="207" fg:w="1"/><text x="16.8498%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="16.5998%" y="517" width="0.0802%" height="15" fill="rgb(239,69,54)" fg:x="207" fg:w="1"/><text x="16.8498%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.17%)</title><rect x="14.5950%" y="597" width="2.1652%" height="15" fill="rgb(214,68,45)" fg:x="182" fg:w="27"/><text x="14.8450%" y="607.50">&lt;..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (23 samples, 1.84%)</title><rect x="14.9158%" y="581" width="1.8444%" height="15" fill="rgb(254,160,8)" fg:x="186" fg:w="23"/><text x="15.1658%" y="591.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="16.6800%" y="565" width="0.0802%" height="15" fill="rgb(215,226,31)" fg:x="208" fg:w="1"/><text x="16.9300%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="16.6800%" y="549" width="0.0802%" height="15" fill="rgb(253,6,35)" fg:x="208" fg:w="1"/><text x="16.9300%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8404%" y="565" width="0.0802%" height="15" fill="rgb(219,96,42)" fg:x="210" fg:w="1"/><text x="17.0904%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.9206%" y="533" width="0.1604%" height="15" fill="rgb(207,170,13)" fg:x="211" fg:w="2"/><text x="17.1706%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0810%" y="533" width="0.0802%" height="15" fill="rgb(239,101,5)" fg:x="213" fg:w="1"/><text x="17.3310%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.1612%" y="517" width="0.0802%" height="15" fill="rgb(228,183,34)" fg:x="214" fg:w="1"/><text x="17.4112%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="17.2414%" y="517" width="0.2406%" height="15" fill="rgb(205,28,31)" fg:x="215" fg:w="3"/><text x="17.4914%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.3216%" y="501" width="0.1604%" height="15" fill="rgb(214,118,50)" fg:x="216" fg:w="2"/><text x="17.5716%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="16.7602%" y="597" width="0.8019%" height="15" fill="rgb(213,108,51)" fg:x="209" fg:w="10"/><text x="17.0102%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="16.7602%" y="581" width="0.8019%" height="15" fill="rgb(238,56,37)" fg:x="209" fg:w="10"/><text x="17.0102%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="16.9206%" y="565" width="0.6415%" height="15" fill="rgb(214,136,28)" fg:x="211" fg:w="8"/><text x="17.1706%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="16.9206%" y="549" width="0.6415%" height="15" fill="rgb(221,201,54)" fg:x="211" fg:w="8"/><text x="17.1706%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="17.1612%" y="533" width="0.4010%" height="15" fill="rgb(228,216,39)" fg:x="214" fg:w="5"/><text x="17.4112%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="17.4820%" y="517" width="0.0802%" height="15" fill="rgb(207,229,49)" fg:x="218" fg:w="1"/><text x="17.7320%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4820%" y="501" width="0.0802%" height="15" fill="rgb(224,23,43)" fg:x="218" fg:w="1"/><text x="17.7320%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4820%" y="485" width="0.0802%" height="15" fill="rgb(247,97,18)" fg:x="218" fg:w="1"/><text x="17.7320%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="17.5621%" y="581" width="0.2406%" height="15" fill="rgb(232,53,32)" fg:x="219" fg:w="3"/><text x="17.8121%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="17.6423%" y="565" width="0.1604%" height="15" fill="rgb(247,38,23)" fg:x="220" fg:w="2"/><text x="17.8923%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="17.9631%" y="501" width="0.1604%" height="15" fill="rgb(228,101,52)" fg:x="224" fg:w="2"/><text x="18.2131%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.0433%" y="485" width="0.0802%" height="15" fill="rgb(231,45,36)" fg:x="225" fg:w="1"/><text x="18.2933%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.0433%" y="469" width="0.0802%" height="15" fill="rgb(221,183,50)" fg:x="225" fg:w="1"/><text x="18.2933%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="18.2037%" y="453" width="0.0802%" height="15" fill="rgb(251,132,12)" fg:x="227" fg:w="1"/><text x="18.4537%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="17.9631%" y="533" width="0.4812%" height="15" fill="rgb(252,50,16)" fg:x="224" fg:w="6"/><text x="18.2131%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="17.9631%" y="517" width="0.4812%" height="15" fill="rgb(224,60,15)" fg:x="224" fg:w="6"/><text x="18.2131%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="18.1235%" y="501" width="0.3208%" height="15" fill="rgb(254,2,34)" fg:x="226" fg:w="4"/><text x="18.3735%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="18.2037%" y="485" width="0.2406%" height="15" fill="rgb(232,154,8)" fg:x="227" fg:w="3"/><text x="18.4537%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="18.2037%" y="469" width="0.2406%" height="15" fill="rgb(235,190,52)" fg:x="227" fg:w="3"/><text x="18.4537%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="18.2839%" y="453" width="0.1604%" height="15" fill="rgb(213,218,38)" fg:x="228" fg:w="2"/><text x="18.5339%" y="463.50"></text></g><g><title>engine::session::Session::flush (52 samples, 4.17%)</title><rect x="14.3545%" y="709" width="4.1700%" height="15" fill="rgb(237,50,37)" fg:x="179" fg:w="52"/><text x="14.6045%" y="719.50">engin..</text></g><g><title>engine::session::Session::save_changes (51 samples, 4.09%)</title><rect x="14.4346%" y="693" width="4.0898%" height="15" fill="rgb(235,51,35)" fg:x="180" fg:w="51"/><text x="14.6846%" y="703.50">engi..</text></g><g><title>engine::session::state::State::close (51 samples, 4.09%)</title><rect x="14.4346%" y="677" width="4.0898%" height="15" fill="rgb(244,40,52)" fg:x="180" fg:w="51"/><text x="14.6846%" y="687.50">engi..</text></g><g><title>engine::session::state::State::flush_entities (50 samples, 4.01%)</title><rect x="14.5148%" y="661" width="4.0096%" height="15" fill="rgb(217,225,45)" fg:x="181" fg:w="50"/><text x="14.7648%" y="671.50">engi..</text></g><g><title>core::iter::adapters::try_process (49 samples, 3.93%)</title><rect x="14.5950%" y="645" width="3.9294%" height="15" fill="rgb(247,191,36)" fg:x="182" fg:w="49"/><text x="14.8450%" y="655.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 3.93%)</title><rect x="14.5950%" y="629" width="3.9294%" height="15" fill="rgb(251,144,31)" fg:x="182" fg:w="49"/><text x="14.8450%" y="639.50">&lt;all..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (49 samples, 3.93%)</title><rect x="14.5950%" y="613" width="3.9294%" height="15" fill="rgb(227,155,41)" fg:x="182" fg:w="49"/><text x="14.8450%" y="623.50">engi..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="17.5621%" y="597" width="0.9623%" height="15" fill="rgb(236,121,36)" fg:x="219" fg:w="12"/><text x="17.8121%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="17.8027%" y="581" width="0.7217%" height="15" fill="rgb(221,128,28)" fg:x="222" fg:w="9"/><text x="18.0527%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="17.8027%" y="565" width="0.7217%" height="15" fill="rgb(249,67,50)" fg:x="222" fg:w="9"/><text x="18.0527%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="17.8829%" y="549" width="0.6415%" height="15" fill="rgb(241,126,38)" fg:x="223" fg:w="8"/><text x="18.1329%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.4443%" y="533" width="0.0802%" height="15" fill="rgb(239,33,14)" fg:x="230" fg:w="1"/><text x="18.6943%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="18.5245%" y="677" width="0.0802%" height="15" fill="rgb(207,221,54)" fg:x="231" fg:w="1"/><text x="18.7745%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.5245%" y="661" width="0.0802%" height="15" fill="rgb(242,138,43)" fg:x="231" fg:w="1"/><text x="18.7745%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5245%" y="645" width="0.0802%" height="15" fill="rgb(231,118,19)" fg:x="231" fg:w="1"/><text x="18.7745%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="18.6047%" y="645" width="0.0802%" height="15" fill="rgb(214,128,54)" fg:x="232" fg:w="1"/><text x="18.8547%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="18.6047%" y="629" width="0.0802%" height="15" fill="rgb(236,136,6)" fg:x="232" fg:w="1"/><text x="18.8547%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="18.6047%" y="613" width="0.0802%" height="15" fill="rgb(247,30,38)" fg:x="232" fg:w="1"/><text x="18.8547%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="18.6047%" y="677" width="0.1604%" height="15" fill="rgb(249,189,40)" fg:x="232" fg:w="2"/><text x="18.8547%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="18.6047%" y="661" width="0.1604%" height="15" fill="rgb(247,179,7)" fg:x="232" fg:w="2"/><text x="18.8547%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="18.6848%" y="645" width="0.0802%" height="15" fill="rgb(239,46,52)" fg:x="233" fg:w="1"/><text x="18.9348%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="18.6848%" y="629" width="0.0802%" height="15" fill="rgb(225,28,52)" fg:x="233" fg:w="1"/><text x="18.9348%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6848%" y="613" width="0.0802%" height="15" fill="rgb(217,208,44)" fg:x="233" fg:w="1"/><text x="18.9348%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="18.6848%" y="597" width="0.0802%" height="15" fill="rgb(224,11,34)" fg:x="233" fg:w="1"/><text x="18.9348%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6848%" y="581" width="0.0802%" height="15" fill="rgb(205,134,17)" fg:x="233" fg:w="1"/><text x="18.9348%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="18.6848%" y="565" width="0.0802%" height="15" fill="rgb(237,125,9)" fg:x="233" fg:w="1"/><text x="18.9348%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.6848%" y="549" width="0.0802%" height="15" fill="rgb(208,139,47)" fg:x="233" fg:w="1"/><text x="18.9348%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.7650%" y="677" width="0.0802%" height="15" fill="rgb(242,5,5)" fg:x="234" fg:w="1"/><text x="19.0150%" y="687.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7650%" y="661" width="0.0802%" height="15" fill="rgb(218,78,2)" fg:x="234" fg:w="1"/><text x="19.0150%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.7650%" y="645" width="0.0802%" height="15" fill="rgb(217,75,16)" fg:x="234" fg:w="1"/><text x="19.0150%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="18.7650%" y="629" width="0.0802%" height="15" fill="rgb(212,56,17)" fg:x="234" fg:w="1"/><text x="19.0150%" y="639.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="18.7650%" y="613" width="0.0802%" height="15" fill="rgb(228,61,29)" fg:x="234" fg:w="1"/><text x="19.0150%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.7650%" y="597" width="0.0802%" height="15" fill="rgb(247,202,38)" fg:x="234" fg:w="1"/><text x="19.0150%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.9254%" y="597" width="0.0802%" height="15" fill="rgb(211,216,43)" fg:x="236" fg:w="1"/><text x="19.1754%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="18.8452%" y="629" width="0.2406%" height="15" fill="rgb(220,7,49)" fg:x="235" fg:w="3"/><text x="19.0952%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="18.8452%" y="613" width="0.2406%" height="15" fill="rgb(219,158,7)" fg:x="235" fg:w="3"/><text x="19.0952%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="19.0056%" y="597" width="0.0802%" height="15" fill="rgb(206,127,9)" fg:x="237" fg:w="1"/><text x="19.2556%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="19.0056%" y="581" width="0.0802%" height="15" fill="rgb(206,103,43)" fg:x="237" fg:w="1"/><text x="19.2556%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="19.2462%" y="565" width="0.0802%" height="15" fill="rgb(240,108,41)" fg:x="240" fg:w="1"/><text x="19.4962%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="18.8452%" y="677" width="0.5613%" height="15" fill="rgb(252,212,6)" fg:x="235" fg:w="7"/><text x="19.0952%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (7 samples, 0.56%)</title><rect x="18.8452%" y="661" width="0.5613%" height="15" fill="rgb(248,105,31)" fg:x="235" fg:w="7"/><text x="19.0952%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="18.8452%" y="645" width="0.5613%" height="15" fill="rgb(241,123,4)" fg:x="235" fg:w="7"/><text x="19.0952%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="19.0858%" y="629" width="0.3208%" height="15" fill="rgb(223,74,37)" fg:x="238" fg:w="4"/><text x="19.3358%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="19.1660%" y="613" width="0.2406%" height="15" fill="rgb(251,219,28)" fg:x="239" fg:w="3"/><text x="19.4160%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1660%" y="597" width="0.2406%" height="15" fill="rgb(218,36,31)" fg:x="239" fg:w="3"/><text x="19.4160%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="19.1660%" y="581" width="0.2406%" height="15" fill="rgb(229,40,15)" fg:x="239" fg:w="3"/><text x="19.4160%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3264%" y="565" width="0.0802%" height="15" fill="rgb(208,138,37)" fg:x="241" fg:w="1"/><text x="19.5764%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.3264%" y="549" width="0.0802%" height="15" fill="rgb(208,40,52)" fg:x="241" fg:w="1"/><text x="19.5764%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.3264%" y="533" width="0.0802%" height="15" fill="rgb(246,181,48)" fg:x="241" fg:w="1"/><text x="19.5764%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.3264%" y="517" width="0.0802%" height="15" fill="rgb(253,178,36)" fg:x="241" fg:w="1"/><text x="19.5764%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.3264%" y="501" width="0.0802%" height="15" fill="rgb(210,170,6)" fg:x="241" fg:w="1"/><text x="19.5764%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3264%" y="485" width="0.0802%" height="15" fill="rgb(243,62,22)" fg:x="241" fg:w="1"/><text x="19.5764%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="19.3264%" y="469" width="0.0802%" height="15" fill="rgb(213,145,26)" fg:x="241" fg:w="1"/><text x="19.5764%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="19.3264%" y="453" width="0.0802%" height="15" fill="rgb(237,177,23)" fg:x="241" fg:w="1"/><text x="19.5764%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="19.3264%" y="437" width="0.0802%" height="15" fill="rgb(252,5,24)" fg:x="241" fg:w="1"/><text x="19.5764%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="19.3264%" y="421" width="0.0802%" height="15" fill="rgb(230,108,54)" fg:x="241" fg:w="1"/><text x="19.5764%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="19.3264%" y="405" width="0.0802%" height="15" fill="rgb(252,192,41)" fg:x="241" fg:w="1"/><text x="19.5764%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.3264%" y="389" width="0.0802%" height="15" fill="rgb(218,125,20)" fg:x="241" fg:w="1"/><text x="19.5764%" y="399.50"></text></g><g><title>plugins_core::build::Build::holding (13 samples, 1.04%)</title><rect x="18.5245%" y="709" width="1.0425%" height="15" fill="rgb(230,223,15)" fg:x="231" fg:w="13"/><text x="18.7745%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (13 samples, 1.04%)</title><rect x="18.5245%" y="693" width="1.0425%" height="15" fill="rgb(239,99,47)" fg:x="231" fg:w="13"/><text x="18.7745%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="19.4066%" y="677" width="0.1604%" height="15" fill="rgb(222,214,23)" fg:x="242" fg:w="2"/><text x="19.6566%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="19.4066%" y="661" width="0.1604%" height="15" fill="rgb(250,98,43)" fg:x="242" fg:w="2"/><text x="19.6566%" y="671.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4868%" y="645" width="0.0802%" height="15" fill="rgb(226,140,11)" fg:x="243" fg:w="1"/><text x="19.7368%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.4868%" y="629" width="0.0802%" height="15" fill="rgb(239,2,22)" fg:x="243" fg:w="1"/><text x="19.7368%" y="639.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="19.4868%" y="613" width="0.0802%" height="15" fill="rgb(209,106,26)" fg:x="243" fg:w="1"/><text x="19.7368%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.4868%" y="597" width="0.0802%" height="15" fill="rgb(209,135,11)" fg:x="243" fg:w="1"/><text x="19.7368%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="19.4868%" y="581" width="0.0802%" height="15" fill="rgb(241,58,6)" fg:x="243" fg:w="1"/><text x="19.7368%" y="591.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="19.6472%" y="677" width="0.0802%" height="15" fill="rgb(214,78,1)" fg:x="245" fg:w="1"/><text x="19.8972%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="19.6472%" y="661" width="0.0802%" height="15" fill="rgb(229,135,33)" fg:x="245" fg:w="1"/><text x="19.8972%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6472%" y="645" width="0.0802%" height="15" fill="rgb(245,87,50)" fg:x="245" fg:w="1"/><text x="19.8972%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.6472%" y="629" width="0.0802%" height="15" fill="rgb(222,222,8)" fg:x="245" fg:w="1"/><text x="19.8972%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="19.6472%" y="613" width="0.0802%" height="15" fill="rgb(214,97,50)" fg:x="245" fg:w="1"/><text x="19.8972%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6472%" y="597" width="0.0802%" height="15" fill="rgb(244,161,51)" fg:x="245" fg:w="1"/><text x="19.8972%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="19.6472%" y="581" width="0.0802%" height="15" fill="rgb(225,17,4)" fg:x="245" fg:w="1"/><text x="19.8972%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="19.6472%" y="565" width="0.0802%" height="15" fill="rgb(238,10,13)" fg:x="245" fg:w="1"/><text x="19.8972%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="19.5670%" y="709" width="0.2406%" height="15" fill="rgb(239,169,14)" fg:x="244" fg:w="3"/><text x="19.8170%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="19.5670%" y="693" width="0.2406%" height="15" fill="rgb(213,105,25)" fg:x="244" fg:w="3"/><text x="19.8170%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="19.7273%" y="677" width="0.0802%" height="15" fill="rgb(233,4,17)" fg:x="246" fg:w="1"/><text x="19.9773%" y="687.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="19.8075%" y="709" width="0.0802%" height="15" fill="rgb(212,5,35)" fg:x="247" fg:w="1"/><text x="20.0575%" y="719.50"></text></g><g><title>kernel::model::builder::EntityBuilder::with_key (1 samples, 0.08%)</title><rect x="19.8075%" y="693" width="0.0802%" height="15" fill="rgb(216,3,14)" fg:x="247" fg:w="1"/><text x="20.0575%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="19.9679%" y="645" width="0.0802%" height="15" fill="rgb(240,105,33)" fg:x="249" fg:w="1"/><text x="20.2179%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="20.0481%" y="645" width="0.0802%" height="15" fill="rgb(216,73,0)" fg:x="250" fg:w="1"/><text x="20.2981%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="20.0481%" y="629" width="0.0802%" height="15" fill="rgb(217,153,48)" fg:x="250" fg:w="1"/><text x="20.2981%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="20.0481%" y="613" width="0.0802%" height="15" fill="rgb(218,180,8)" fg:x="250" fg:w="1"/><text x="20.2981%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="20.0481%" y="597" width="0.0802%" height="15" fill="rgb(252,168,2)" fg:x="250" fg:w="1"/><text x="20.2981%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0481%" y="581" width="0.0802%" height="15" fill="rgb(224,116,33)" fg:x="250" fg:w="1"/><text x="20.2981%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.0481%" y="565" width="0.0802%" height="15" fill="rgb(229,205,17)" fg:x="250" fg:w="1"/><text x="20.2981%" y="575.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="19.9679%" y="661" width="0.2406%" height="15" fill="rgb(234,1,41)" fg:x="249" fg:w="3"/><text x="20.2179%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="20.1283%" y="645" width="0.0802%" height="15" fill="rgb(244,185,8)" fg:x="251" fg:w="1"/><text x="20.3783%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1283%" y="629" width="0.0802%" height="15" fill="rgb(248,51,21)" fg:x="251" fg:w="1"/><text x="20.3783%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.1283%" y="613" width="0.0802%" height="15" fill="rgb(248,157,31)" fg:x="251" fg:w="1"/><text x="20.3783%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="20.2085%" y="661" width="0.1604%" height="15" fill="rgb(210,34,47)" fg:x="252" fg:w="2"/><text x="20.4585%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="20.2085%" y="645" width="0.1604%" height="15" fill="rgb(227,139,53)" fg:x="252" fg:w="2"/><text x="20.4585%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="20.2887%" y="629" width="0.0802%" height="15" fill="rgb(232,211,37)" fg:x="253" fg:w="1"/><text x="20.5387%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="20.2887%" y="613" width="0.0802%" height="15" fill="rgb(236,133,10)" fg:x="253" fg:w="1"/><text x="20.5387%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="20.3689%" y="645" width="0.1604%" height="15" fill="rgb(243,202,25)" fg:x="254" fg:w="2"/><text x="20.6189%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.3689%" y="629" width="0.1604%" height="15" fill="rgb(224,59,9)" fg:x="254" fg:w="2"/><text x="20.6189%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.3689%" y="613" width="0.1604%" height="15" fill="rgb(206,146,16)" fg:x="254" fg:w="2"/><text x="20.6189%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.3689%" y="597" width="0.1604%" height="15" fill="rgb(220,47,2)" fg:x="254" fg:w="2"/><text x="20.6189%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="20.3689%" y="581" width="0.1604%" height="15" fill="rgb(225,124,51)" fg:x="254" fg:w="2"/><text x="20.6189%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.3689%" y="565" width="0.1604%" height="15" fill="rgb(241,220,50)" fg:x="254" fg:w="2"/><text x="20.6189%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="20.3689%" y="549" width="0.1604%" height="15" fill="rgb(232,168,5)" fg:x="254" fg:w="2"/><text x="20.6189%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="20.3689%" y="533" width="0.1604%" height="15" fill="rgb(243,90,22)" fg:x="254" fg:w="2"/><text x="20.6189%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="20.3689%" y="517" width="0.1604%" height="15" fill="rgb(223,153,32)" fg:x="254" fg:w="2"/><text x="20.6189%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="20.3689%" y="501" width="0.1604%" height="15" fill="rgb(243,124,20)" fg:x="254" fg:w="2"/><text x="20.6189%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.3689%" y="485" width="0.1604%" height="15" fill="rgb(246,168,39)" fg:x="254" fg:w="2"/><text x="20.6189%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="20.3689%" y="469" width="0.1604%" height="15" fill="rgb(222,165,54)" fg:x="254" fg:w="2"/><text x="20.6189%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="20.3689%" y="453" width="0.1604%" height="15" fill="rgb(251,142,27)" fg:x="254" fg:w="2"/><text x="20.6189%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="20.3689%" y="437" width="0.1604%" height="15" fill="rgb(207,168,50)" fg:x="254" fg:w="2"/><text x="20.6189%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="20.3689%" y="421" width="0.1604%" height="15" fill="rgb(250,139,25)" fg:x="254" fg:w="2"/><text x="20.6189%" y="431.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="20.3689%" y="405" width="0.1604%" height="15" fill="rgb(214,194,48)" fg:x="254" fg:w="2"/><text x="20.6189%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="20.3689%" y="389" width="0.1604%" height="15" fill="rgb(227,138,47)" fg:x="254" fg:w="2"/><text x="20.6189%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5293%" y="613" width="0.0802%" height="15" fill="rgb(250,162,5)" fg:x="256" fg:w="1"/><text x="20.7793%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5293%" y="597" width="0.0802%" height="15" fill="rgb(229,74,25)" fg:x="256" fg:w="1"/><text x="20.7793%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="20.5293%" y="581" width="0.0802%" height="15" fill="rgb(221,124,34)" fg:x="256" fg:w="1"/><text x="20.7793%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5293%" y="565" width="0.0802%" height="15" fill="rgb(225,94,25)" fg:x="256" fg:w="1"/><text x="20.7793%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="20.5293%" y="549" width="0.0802%" height="15" fill="rgb(210,100,12)" fg:x="256" fg:w="1"/><text x="20.7793%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="20.5293%" y="533" width="0.0802%" height="15" fill="rgb(206,62,48)" fg:x="256" fg:w="1"/><text x="20.7793%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="20.5293%" y="517" width="0.0802%" height="15" fill="rgb(222,181,9)" fg:x="256" fg:w="1"/><text x="20.7793%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="20.5293%" y="501" width="0.0802%" height="15" fill="rgb(248,42,38)" fg:x="256" fg:w="1"/><text x="20.7793%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5293%" y="485" width="0.0802%" height="15" fill="rgb(213,40,6)" fg:x="256" fg:w="1"/><text x="20.7793%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="20.5293%" y="469" width="0.0802%" height="15" fill="rgb(211,108,15)" fg:x="256" fg:w="1"/><text x="20.7793%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="20.5293%" y="453" width="0.0802%" height="15" fill="rgb(249,62,9)" fg:x="256" fg:w="1"/><text x="20.7793%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="20.5293%" y="437" width="0.0802%" height="15" fill="rgb(233,26,54)" fg:x="256" fg:w="1"/><text x="20.7793%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="20.5293%" y="421" width="0.0802%" height="15" fill="rgb(210,175,26)" fg:x="256" fg:w="1"/><text x="20.7793%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="20.5293%" y="405" width="0.0802%" height="15" fill="rgb(210,43,33)" fg:x="256" fg:w="1"/><text x="20.7793%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.5293%" y="389" width="0.0802%" height="15" fill="rgb(224,46,17)" fg:x="256" fg:w="1"/><text x="20.7793%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="20.3689%" y="661" width="0.3208%" height="15" fill="rgb(254,24,38)" fg:x="254" fg:w="4"/><text x="20.6189%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="20.5293%" y="645" width="0.1604%" height="15" fill="rgb(248,32,0)" fg:x="256" fg:w="2"/><text x="20.7793%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="20.5293%" y="629" width="0.1604%" height="15" fill="rgb(224,37,41)" fg:x="256" fg:w="2"/><text x="20.7793%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.6095%" y="613" width="0.0802%" height="15" fill="rgb(252,70,22)" fg:x="257" fg:w="1"/><text x="20.8595%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6095%" y="597" width="0.0802%" height="15" fill="rgb(241,123,50)" fg:x="257" fg:w="1"/><text x="20.8595%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="20.6095%" y="581" width="0.0802%" height="15" fill="rgb(246,138,33)" fg:x="257" fg:w="1"/><text x="20.8595%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6095%" y="565" width="0.0802%" height="15" fill="rgb(218,39,32)" fg:x="257" fg:w="1"/><text x="20.8595%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="20.6095%" y="549" width="0.0802%" height="15" fill="rgb(241,229,10)" fg:x="257" fg:w="1"/><text x="20.8595%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="20.6095%" y="533" width="0.0802%" height="15" fill="rgb(212,160,10)" fg:x="257" fg:w="1"/><text x="20.8595%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="20.6897%" y="629" width="0.3208%" height="15" fill="rgb(227,48,51)" fg:x="258" fg:w="4"/><text x="20.9397%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="20.6897%" y="613" width="0.3208%" height="15" fill="rgb(238,159,21)" fg:x="258" fg:w="4"/><text x="20.9397%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="20.8500%" y="597" width="0.1604%" height="15" fill="rgb(216,1,10)" fg:x="260" fg:w="2"/><text x="21.1000%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="581" width="0.1604%" height="15" fill="rgb(209,228,25)" fg:x="260" fg:w="2"/><text x="21.1000%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="20.8500%" y="565" width="0.1604%" height="15" fill="rgb(234,160,10)" fg:x="260" fg:w="2"/><text x="21.1000%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="20.8500%" y="549" width="0.1604%" height="15" fill="rgb(212,66,25)" fg:x="260" fg:w="2"/><text x="21.1000%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="20.8500%" y="533" width="0.1604%" height="15" fill="rgb(254,121,18)" fg:x="260" fg:w="2"/><text x="21.1000%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.0104%" y="549" width="0.0802%" height="15" fill="rgb(219,127,1)" fg:x="262" fg:w="1"/><text x="21.2604%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0104%" y="533" width="0.0802%" height="15" fill="rgb(219,224,42)" fg:x="262" fg:w="1"/><text x="21.2604%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.20%)</title><rect x="19.9679%" y="677" width="1.2029%" height="15" fill="rgb(253,130,22)" fg:x="249" fg:w="15"/><text x="20.2179%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="20.6897%" y="661" width="0.4812%" height="15" fill="rgb(253,39,28)" fg:x="258" fg:w="6"/><text x="20.9397%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="20.6897%" y="645" width="0.4812%" height="15" fill="rgb(231,126,37)" fg:x="258" fg:w="6"/><text x="20.9397%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="21.0104%" y="629" width="0.1604%" height="15" fill="rgb(251,145,14)" fg:x="262" fg:w="2"/><text x="21.2604%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.0104%" y="613" width="0.1604%" height="15" fill="rgb(229,164,30)" fg:x="262" fg:w="2"/><text x="21.2604%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0104%" y="597" width="0.1604%" height="15" fill="rgb(233,227,54)" fg:x="262" fg:w="2"/><text x="21.2604%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="21.0104%" y="581" width="0.1604%" height="15" fill="rgb(240,94,22)" fg:x="262" fg:w="2"/><text x="21.2604%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.0104%" y="565" width="0.1604%" height="15" fill="rgb(217,56,16)" fg:x="262" fg:w="2"/><text x="21.2604%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.0906%" y="549" width="0.0802%" height="15" fill="rgb(229,133,38)" fg:x="263" fg:w="1"/><text x="21.3406%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.0906%" y="533" width="0.0802%" height="15" fill="rgb(225,139,35)" fg:x="263" fg:w="1"/><text x="21.3406%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.1708%" y="661" width="0.0802%" height="15" fill="rgb(223,100,16)" fg:x="264" fg:w="1"/><text x="21.4208%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (19 samples, 1.52%)</title><rect x="19.8877%" y="693" width="1.5237%" height="15" fill="rgb(207,43,50)" fg:x="248" fg:w="19"/><text x="20.1377%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="21.1708%" y="677" width="0.2406%" height="15" fill="rgb(237,221,9)" fg:x="264" fg:w="3"/><text x="21.4208%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="21.2510%" y="661" width="0.1604%" height="15" fill="rgb(236,134,24)" fg:x="265" fg:w="2"/><text x="21.5010%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="21.3312%" y="645" width="0.0802%" height="15" fill="rgb(222,173,4)" fg:x="266" fg:w="1"/><text x="21.5812%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.3312%" y="629" width="0.0802%" height="15" fill="rgb(234,144,52)" fg:x="266" fg:w="1"/><text x="21.5812%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="21.3312%" y="613" width="0.0802%" height="15" fill="rgb(223,41,7)" fg:x="266" fg:w="1"/><text x="21.5812%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.4114%" y="645" width="0.0802%" height="15" fill="rgb(226,143,9)" fg:x="267" fg:w="1"/><text x="21.6614%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.4114%" y="629" width="0.0802%" height="15" fill="rgb(234,43,37)" fg:x="267" fg:w="1"/><text x="21.6614%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.4114%" y="613" width="0.0802%" height="15" fill="rgb(224,188,11)" fg:x="267" fg:w="1"/><text x="21.6614%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="21.4114%" y="677" width="0.1604%" height="15" fill="rgb(233,113,28)" fg:x="267" fg:w="2"/><text x="21.6614%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="21.4114%" y="661" width="0.1604%" height="15" fill="rgb(215,16,1)" fg:x="267" fg:w="2"/><text x="21.6614%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.4916%" y="645" width="0.0802%" height="15" fill="rgb(238,74,38)" fg:x="268" fg:w="1"/><text x="21.7416%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4916%" y="629" width="0.0802%" height="15" fill="rgb(221,66,35)" fg:x="268" fg:w="1"/><text x="21.7416%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="21.5718%" y="677" width="0.0802%" height="15" fill="rgb(251,225,2)" fg:x="269" fg:w="1"/><text x="21.8218%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="21.5718%" y="661" width="0.0802%" height="15" fill="rgb(240,169,18)" fg:x="269" fg:w="1"/><text x="21.8218%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="21.5718%" y="645" width="0.0802%" height="15" fill="rgb(243,130,50)" fg:x="269" fg:w="1"/><text x="21.8218%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="21.6520%" y="629" width="0.0802%" height="15" fill="rgb(228,75,13)" fg:x="270" fg:w="1"/><text x="21.9020%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.6520%" y="613" width="0.0802%" height="15" fill="rgb(252,95,35)" fg:x="270" fg:w="1"/><text x="21.9020%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6520%" y="597" width="0.0802%" height="15" fill="rgb(222,180,54)" fg:x="270" fg:w="1"/><text x="21.9020%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.6520%" y="581" width="0.0802%" height="15" fill="rgb(250,110,34)" fg:x="270" fg:w="1"/><text x="21.9020%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6520%" y="565" width="0.0802%" height="15" fill="rgb(208,100,21)" fg:x="270" fg:w="1"/><text x="21.9020%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.6520%" y="549" width="0.0802%" height="15" fill="rgb(209,123,47)" fg:x="270" fg:w="1"/><text x="21.9020%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.6520%" y="533" width="0.0802%" height="15" fill="rgb(237,147,9)" fg:x="270" fg:w="1"/><text x="21.9020%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.6520%" y="517" width="0.0802%" height="15" fill="rgb(228,206,23)" fg:x="270" fg:w="1"/><text x="21.9020%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.6520%" y="501" width="0.0802%" height="15" fill="rgb(217,174,46)" fg:x="270" fg:w="1"/><text x="21.9020%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6520%" y="485" width="0.0802%" height="15" fill="rgb(231,126,21)" fg:x="270" fg:w="1"/><text x="21.9020%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.6520%" y="469" width="0.0802%" height="15" fill="rgb(245,26,1)" fg:x="270" fg:w="1"/><text x="21.9020%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.6520%" y="453" width="0.0802%" height="15" fill="rgb(224,138,39)" fg:x="270" fg:w="1"/><text x="21.9020%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.6520%" y="437" width="0.0802%" height="15" fill="rgb(208,97,3)" fg:x="270" fg:w="1"/><text x="21.9020%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.6520%" y="421" width="0.0802%" height="15" fill="rgb(222,77,29)" fg:x="270" fg:w="1"/><text x="21.9020%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.6520%" y="405" width="0.0802%" height="15" fill="rgb(243,188,36)" fg:x="270" fg:w="1"/><text x="21.9020%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.6520%" y="389" width="0.0802%" height="15" fill="rgb(218,214,3)" fg:x="270" fg:w="1"/><text x="21.9020%" y="399.50"></text></g><g><title>plugins_core::build::Build::occupying (24 samples, 1.92%)</title><rect x="19.8877%" y="709" width="1.9246%" height="15" fill="rgb(211,183,45)" fg:x="248" fg:w="24"/><text x="20.1377%" y="719.50">p..</text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.40%)</title><rect x="21.4114%" y="693" width="0.4010%" height="15" fill="rgb(230,218,25)" fg:x="267" fg:w="5"/><text x="21.6614%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (2 samples, 0.16%)</title><rect x="21.6520%" y="677" width="0.1604%" height="15" fill="rgb(233,86,6)" fg:x="270" fg:w="2"/><text x="21.9020%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="21.6520%" y="661" width="0.1604%" height="15" fill="rgb(220,59,24)" fg:x="270" fg:w="2"/><text x="21.9020%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="21.6520%" y="645" width="0.1604%" height="15" fill="rgb(227,60,1)" fg:x="270" fg:w="2"/><text x="21.9020%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="21.7322%" y="629" width="0.0802%" height="15" fill="rgb(216,212,54)" fg:x="271" fg:w="1"/><text x="21.9822%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.7322%" y="613" width="0.0802%" height="15" fill="rgb(227,81,54)" fg:x="271" fg:w="1"/><text x="21.9822%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.7322%" y="597" width="0.0802%" height="15" fill="rgb(206,204,43)" fg:x="271" fg:w="1"/><text x="21.9822%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.7322%" y="581" width="0.0802%" height="15" fill="rgb(219,29,26)" fg:x="271" fg:w="1"/><text x="21.9822%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7322%" y="565" width="0.0802%" height="15" fill="rgb(252,40,36)" fg:x="271" fg:w="1"/><text x="21.9822%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.8123%" y="693" width="0.0802%" height="15" fill="rgb(224,205,39)" fg:x="272" fg:w="1"/><text x="22.0623%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="21.8925%" y="645" width="0.0802%" height="15" fill="rgb(222,13,21)" fg:x="273" fg:w="1"/><text x="22.1425%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="21.8925%" y="629" width="0.0802%" height="15" fill="rgb(243,139,6)" fg:x="273" fg:w="1"/><text x="22.1425%" y="639.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::de::Deserialize for engine::identifiers::model::Identifiers&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.8925%" y="613" width="0.0802%" height="15" fill="rgb(237,101,11)" fg:x="273" fg:w="1"/><text x="22.1425%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8925%" y="597" width="0.0802%" height="15" fill="rgb(254,49,28)" fg:x="273" fg:w="1"/><text x="22.1425%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::de::Deserialize for kernel::model::base::Acls&gt;::deserialize (1 samples, 0.08%)</title><rect x="21.8925%" y="581" width="0.0802%" height="15" fill="rgb(223,41,21)" fg:x="273" fg:w="1"/><text x="22.1425%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="21.8925%" y="565" width="0.0802%" height="15" fill="rgb(225,103,29)" fg:x="273" fg:w="1"/><text x="22.1425%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9727%" y="629" width="0.0802%" height="15" fill="rgb(244,82,43)" fg:x="274" fg:w="1"/><text x="22.2227%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="21.9727%" y="613" width="0.0802%" height="15" fill="rgb(217,39,3)" fg:x="274" fg:w="1"/><text x="22.2227%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="21.8925%" y="661" width="0.2406%" height="15" fill="rgb(239,128,25)" fg:x="273" fg:w="3"/><text x="22.1425%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="21.9727%" y="645" width="0.1604%" height="15" fill="rgb(210,192,37)" fg:x="274" fg:w="2"/><text x="22.2227%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="22.0529%" y="629" width="0.0802%" height="15" fill="rgb(219,98,18)" fg:x="275" fg:w="1"/><text x="22.3029%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.0529%" y="613" width="0.0802%" height="15" fill="rgb(224,228,38)" fg:x="275" fg:w="1"/><text x="22.3029%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.0529%" y="597" width="0.0802%" height="15" fill="rgb(241,129,43)" fg:x="275" fg:w="1"/><text x="22.3029%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="581" width="0.0802%" height="15" fill="rgb(223,8,51)" fg:x="276" fg:w="1"/><text x="22.3831%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="565" width="0.0802%" height="15" fill="rgb(233,76,24)" fg:x="276" fg:w="1"/><text x="22.3831%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.1331%" y="549" width="0.0802%" height="15" fill="rgb(219,115,10)" fg:x="276" fg:w="1"/><text x="22.3831%" y="559.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="22.1331%" y="613" width="0.1604%" height="15" fill="rgb(222,137,12)" fg:x="276" fg:w="2"/><text x="22.3831%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="22.1331%" y="597" width="0.1604%" height="15" fill="rgb(216,192,16)" fg:x="276" fg:w="2"/><text x="22.3831%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2133%" y="581" width="0.0802%" height="15" fill="rgb(247,6,27)" fg:x="277" fg:w="1"/><text x="22.4633%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.2133%" y="565" width="0.0802%" height="15" fill="rgb(254,39,44)" fg:x="277" fg:w="1"/><text x="22.4633%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="22.2133%" y="549" width="0.0802%" height="15" fill="rgb(251,116,35)" fg:x="277" fg:w="1"/><text x="22.4633%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="22.2133%" y="533" width="0.0802%" height="15" fill="rgb(208,61,44)" fg:x="277" fg:w="1"/><text x="22.4633%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.2133%" y="517" width="0.0802%" height="15" fill="rgb(250,34,5)" fg:x="277" fg:w="1"/><text x="22.4633%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2133%" y="501" width="0.0802%" height="15" fill="rgb(241,40,15)" fg:x="277" fg:w="1"/><text x="22.4633%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.2133%" y="485" width="0.0802%" height="15" fill="rgb(229,182,2)" fg:x="277" fg:w="1"/><text x="22.4633%" y="495.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="22.1331%" y="645" width="0.3208%" height="15" fill="rgb(244,148,52)" fg:x="276" fg:w="4"/><text x="22.3831%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="22.1331%" y="629" width="0.3208%" height="15" fill="rgb(225,211,4)" fg:x="276" fg:w="4"/><text x="22.3831%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="22.2935%" y="613" width="0.1604%" height="15" fill="rgb(208,222,47)" fg:x="278" fg:w="2"/><text x="22.5435%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="22.3737%" y="597" width="0.0802%" height="15" fill="rgb(233,162,0)" fg:x="279" fg:w="1"/><text x="22.6237%" y="607.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="22.4539%" y="645" width="0.0802%" height="15" fill="rgb(241,54,13)" fg:x="280" fg:w="1"/><text x="22.7039%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.5341%" y="613" width="0.0802%" height="15" fill="rgb(213,89,18)" fg:x="281" fg:w="1"/><text x="22.7841%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6143%" y="613" width="0.0802%" height="15" fill="rgb(215,170,37)" fg:x="282" fg:w="1"/><text x="22.8643%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.6143%" y="597" width="0.0802%" height="15" fill="rgb(216,133,15)" fg:x="282" fg:w="1"/><text x="22.8643%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (10 samples, 0.80%)</title><rect x="22.1331%" y="661" width="0.8019%" height="15" fill="rgb(230,42,19)" fg:x="276" fg:w="10"/><text x="22.3831%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="22.5341%" y="645" width="0.4010%" height="15" fill="rgb(221,103,41)" fg:x="281" fg:w="5"/><text x="22.7841%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="22.5341%" y="629" width="0.4010%" height="15" fill="rgb(220,142,31)" fg:x="281" fg:w="5"/><text x="22.7841%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="22.6945%" y="613" width="0.2406%" height="15" fill="rgb(239,218,4)" fg:x="283" fg:w="3"/><text x="22.9445%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (3 samples, 0.24%)</title><rect x="22.6945%" y="597" width="0.2406%" height="15" fill="rgb(232,16,4)" fg:x="283" fg:w="3"/><text x="22.9445%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="22.6945%" y="581" width="0.2406%" height="15" fill="rgb(226,213,25)" fg:x="283" fg:w="3"/><text x="22.9445%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.7747%" y="565" width="0.1604%" height="15" fill="rgb(235,135,19)" fg:x="284" fg:w="2"/><text x="23.0247%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="22.7747%" y="549" width="0.1604%" height="15" fill="rgb(240,107,29)" fg:x="284" fg:w="2"/><text x="23.0247%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="22.7747%" y="533" width="0.1604%" height="15" fill="rgb(206,164,44)" fg:x="284" fg:w="2"/><text x="23.0247%" y="543.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="22.7747%" y="517" width="0.1604%" height="15" fill="rgb(210,23,48)" fg:x="284" fg:w="2"/><text x="23.0247%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8549%" y="501" width="0.0802%" height="15" fill="rgb(212,138,25)" fg:x="285" fg:w="1"/><text x="23.1049%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.8549%" y="485" width="0.0802%" height="15" fill="rgb(224,152,3)" fg:x="285" fg:w="1"/><text x="23.1049%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.9350%" y="597" width="0.1604%" height="15" fill="rgb(214,38,23)" fg:x="286" fg:w="2"/><text x="23.1850%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="22.9350%" y="581" width="0.1604%" height="15" fill="rgb(215,161,10)" fg:x="286" fg:w="2"/><text x="23.1850%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.0152%" y="565" width="0.0802%" height="15" fill="rgb(240,185,7)" fg:x="287" fg:w="1"/><text x="23.2652%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="21.8925%" y="693" width="1.2831%" height="15" fill="rgb(244,104,25)" fg:x="273" fg:w="16"/><text x="22.1425%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.28%)</title><rect x="21.8925%" y="677" width="1.2831%" height="15" fill="rgb(242,140,44)" fg:x="273" fg:w="16"/><text x="22.1425%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="22.9350%" y="661" width="0.2406%" height="15" fill="rgb(245,30,19)" fg:x="286" fg:w="3"/><text x="23.1850%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="22.9350%" y="645" width="0.2406%" height="15" fill="rgb(219,208,35)" fg:x="286" fg:w="3"/><text x="23.1850%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="22.9350%" y="629" width="0.2406%" height="15" fill="rgb(235,200,7)" fg:x="286" fg:w="3"/><text x="23.1850%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="22.9350%" y="613" width="0.2406%" height="15" fill="rgb(220,193,10)" fg:x="286" fg:w="3"/><text x="23.1850%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0954%" y="597" width="0.0802%" height="15" fill="rgb(212,216,39)" fg:x="288" fg:w="1"/><text x="23.3454%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.0954%" y="581" width="0.0802%" height="15" fill="rgb(212,134,19)" fg:x="288" fg:w="1"/><text x="23.3454%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0954%" y="565" width="0.0802%" height="15" fill="rgb(230,57,24)" fg:x="288" fg:w="1"/><text x="23.3454%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.0954%" y="549" width="0.0802%" height="15" fill="rgb(238,209,37)" fg:x="288" fg:w="1"/><text x="23.3454%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.0954%" y="533" width="0.0802%" height="15" fill="rgb(247,11,45)" fg:x="288" fg:w="1"/><text x="23.3454%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="23.1756%" y="661" width="0.0802%" height="15" fill="rgb(222,126,6)" fg:x="289" fg:w="1"/><text x="23.4256%" y="671.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (142 samples, 11.39%)</title><rect x="11.9487%" y="725" width="11.3873%" height="15" fill="rgb(245,77,24)" fg:x="149" fg:w="142"/><text x="12.1987%" y="735.50">plugins_core::bui..</text></g><g><title>plugins_core::build::Build::wearing (19 samples, 1.52%)</title><rect x="21.8123%" y="709" width="1.5237%" height="15" fill="rgb(227,14,24)" fg:x="272" fg:w="19"/><text x="22.0623%" y="719.50"></text></g><g><title>plugins_core::tools::set_wearing (2 samples, 0.16%)</title><rect x="23.1756%" y="693" width="0.1604%" height="15" fill="rgb(211,112,42)" fg:x="289" fg:w="2"/><text x="23.4256%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.1756%" y="677" width="0.1604%" height="15" fill="rgb(230,103,42)" fg:x="289" fg:w="2"/><text x="23.4256%" y="687.50"></text></g><g><title>plugins_core::fashion::model::_::&lt;impl serde::ser::Serialize for plugins_core::fashion::model::Wearing&gt;::serialize (1 samples, 0.08%)</title><rect x="23.2558%" y="661" width="0.0802%" height="15" fill="rgb(228,125,42)" fg:x="290" fg:w="1"/><text x="23.5058%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.2558%" y="645" width="0.0802%" height="15" fill="rgb(243,33,6)" fg:x="290" fg:w="1"/><text x="23.5058%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.2558%" y="629" width="0.0802%" height="15" fill="rgb(231,2,40)" fg:x="290" fg:w="1"/><text x="23.5058%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.3360%" y="693" width="0.0802%" height="15" fill="rgb(224,200,53)" fg:x="291" fg:w="1"/><text x="23.5860%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="23.4964%" y="661" width="0.0802%" height="15" fill="rgb(215,116,36)" fg:x="293" fg:w="1"/><text x="23.7464%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="23.4964%" y="645" width="0.0802%" height="15" fill="rgb(240,23,51)" fg:x="293" fg:w="1"/><text x="23.7464%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="23.4964%" y="629" width="0.0802%" height="15" fill="rgb(221,72,5)" fg:x="293" fg:w="1"/><text x="23.7464%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="23.4964%" y="613" width="0.0802%" height="15" fill="rgb(245,142,9)" fg:x="293" fg:w="1"/><text x="23.7464%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4964%" y="597" width="0.0802%" height="15" fill="rgb(207,34,16)" fg:x="293" fg:w="1"/><text x="23.7464%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="23.5766%" y="661" width="0.0802%" height="15" fill="rgb(252,101,12)" fg:x="294" fg:w="1"/><text x="23.8266%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="23.5766%" y="645" width="0.0802%" height="15" fill="rgb(239,89,37)" fg:x="294" fg:w="1"/><text x="23.8266%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="23.5766%" y="629" width="0.0802%" height="15" fill="rgb(252,227,37)" fg:x="294" fg:w="1"/><text x="23.8266%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.5766%" y="613" width="0.0802%" height="15" fill="rgb(212,164,17)" fg:x="294" fg:w="1"/><text x="23.8266%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="23.6568%" y="645" width="0.1604%" height="15" fill="rgb(240,86,13)" fg:x="295" fg:w="2"/><text x="23.9068%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="23.6568%" y="629" width="0.1604%" height="15" fill="rgb(233,183,32)" fg:x="295" fg:w="2"/><text x="23.9068%" y="639.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="23.6568%" y="613" width="0.1604%" height="15" fill="rgb(205,201,38)" fg:x="295" fg:w="2"/><text x="23.9068%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="23.6568%" y="597" width="0.1604%" height="15" fill="rgb(210,122,38)" fg:x="295" fg:w="2"/><text x="23.9068%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7370%" y="581" width="0.0802%" height="15" fill="rgb(241,174,26)" fg:x="296" fg:w="1"/><text x="23.9870%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.7370%" y="565" width="0.0802%" height="15" fill="rgb(219,89,7)" fg:x="296" fg:w="1"/><text x="23.9870%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.7370%" y="549" width="0.0802%" height="15" fill="rgb(246,9,24)" fg:x="296" fg:w="1"/><text x="23.9870%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.7370%" y="533" width="0.0802%" height="15" fill="rgb(205,132,21)" fg:x="296" fg:w="1"/><text x="23.9870%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.7370%" y="517" width="0.0802%" height="15" fill="rgb(210,11,17)" fg:x="296" fg:w="1"/><text x="23.9870%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="23.8172%" y="613" width="0.0802%" height="15" fill="rgb(226,138,14)" fg:x="297" fg:w="1"/><text x="24.0672%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8172%" y="597" width="0.0802%" height="15" fill="rgb(224,108,44)" fg:x="297" fg:w="1"/><text x="24.0672%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="23.6568%" y="661" width="0.3208%" height="15" fill="rgb(247,114,36)" fg:x="295" fg:w="4"/><text x="23.9068%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="23.8172%" y="645" width="0.1604%" height="15" fill="rgb(231,183,14)" fg:x="297" fg:w="2"/><text x="24.0672%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.8172%" y="629" width="0.1604%" height="15" fill="rgb(218,168,4)" fg:x="297" fg:w="2"/><text x="24.0672%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="23.8974%" y="613" width="0.0802%" height="15" fill="rgb(210,8,3)" fg:x="298" fg:w="1"/><text x="24.1474%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.8974%" y="597" width="0.0802%" height="15" fill="rgb(216,165,0)" fg:x="298" fg:w="1"/><text x="24.1474%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8974%" y="581" width="0.0802%" height="15" fill="rgb(245,120,5)" fg:x="298" fg:w="1"/><text x="24.1474%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="23.9775%" y="661" width="0.1604%" height="15" fill="rgb(249,121,32)" fg:x="299" fg:w="2"/><text x="24.2275%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="23.9775%" y="645" width="0.1604%" height="15" fill="rgb(211,55,33)" fg:x="299" fg:w="2"/><text x="24.2275%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="23.9775%" y="629" width="0.1604%" height="15" fill="rgb(254,46,35)" fg:x="299" fg:w="2"/><text x="24.2275%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.0577%" y="613" width="0.0802%" height="15" fill="rgb(213,213,19)" fg:x="300" fg:w="1"/><text x="24.3077%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="24.0577%" y="597" width="0.0802%" height="15" fill="rgb(207,152,44)" fg:x="300" fg:w="1"/><text x="24.3077%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.0577%" y="581" width="0.0802%" height="15" fill="rgb(227,195,36)" fg:x="300" fg:w="1"/><text x="24.3077%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.0577%" y="565" width="0.0802%" height="15" fill="rgb(210,137,36)" fg:x="300" fg:w="1"/><text x="24.3077%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.0577%" y="549" width="0.0802%" height="15" fill="rgb(253,47,47)" fg:x="300" fg:w="1"/><text x="24.3077%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.1379%" y="565" width="0.0802%" height="15" fill="rgb(230,147,18)" fg:x="301" fg:w="1"/><text x="24.3879%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1379%" y="549" width="0.0802%" height="15" fill="rgb(247,33,49)" fg:x="301" fg:w="1"/><text x="24.3879%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.1379%" y="533" width="0.0802%" height="15" fill="rgb(239,26,29)" fg:x="301" fg:w="1"/><text x="24.3879%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.1379%" y="517" width="0.0802%" height="15" fill="rgb(245,145,52)" fg:x="301" fg:w="1"/><text x="24.3879%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="24.1379%" y="629" width="0.1604%" height="15" fill="rgb(224,139,32)" fg:x="301" fg:w="2"/><text x="24.3879%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.1379%" y="613" width="0.1604%" height="15" fill="rgb(238,202,19)" fg:x="301" fg:w="2"/><text x="24.3879%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.1379%" y="597" width="0.1604%" height="15" fill="rgb(249,211,53)" fg:x="301" fg:w="2"/><text x="24.3879%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.1379%" y="581" width="0.1604%" height="15" fill="rgb(237,229,33)" fg:x="301" fg:w="2"/><text x="24.3879%" y="591.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="24.2181%" y="565" width="0.0802%" height="15" fill="rgb(208,97,40)" fg:x="302" fg:w="1"/><text x="24.4681%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.96%)</title><rect x="23.4162%" y="677" width="0.9623%" height="15" fill="rgb(254,36,16)" fg:x="292" fg:w="12"/><text x="23.6662%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="24.1379%" y="661" width="0.2406%" height="15" fill="rgb(221,7,12)" fg:x="301" fg:w="3"/><text x="24.3879%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="24.1379%" y="645" width="0.2406%" height="15" fill="rgb(205,11,12)" fg:x="301" fg:w="3"/><text x="24.3879%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.2983%" y="629" width="0.0802%" height="15" fill="rgb(227,72,28)" fg:x="303" fg:w="1"/><text x="24.5483%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.2983%" y="613" width="0.0802%" height="15" fill="rgb(228,7,34)" fg:x="303" fg:w="1"/><text x="24.5483%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.2983%" y="597" width="0.0802%" height="15" fill="rgb(230,52,42)" fg:x="303" fg:w="1"/><text x="24.5483%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2983%" y="581" width="0.0802%" height="15" fill="rgb(219,177,53)" fg:x="303" fg:w="1"/><text x="24.5483%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.2983%" y="565" width="0.0802%" height="15" fill="rgb(243,196,34)" fg:x="303" fg:w="1"/><text x="24.5483%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.2983%" y="549" width="0.0802%" height="15" fill="rgb(213,66,49)" fg:x="303" fg:w="1"/><text x="24.5483%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.2983%" y="533" width="0.0802%" height="15" fill="rgb(233,11,50)" fg:x="303" fg:w="1"/><text x="24.5483%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (13 samples, 1.04%)</title><rect x="23.4162%" y="693" width="1.0425%" height="15" fill="rgb(235,190,6)" fg:x="292" fg:w="13"/><text x="23.6662%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.3785%" y="677" width="0.0802%" height="15" fill="rgb(212,64,44)" fg:x="304" fg:w="1"/><text x="24.6285%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.3785%" y="661" width="0.0802%" height="15" fill="rgb(206,95,44)" fg:x="304" fg:w="1"/><text x="24.6285%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.3785%" y="645" width="0.0802%" height="15" fill="rgb(227,136,25)" fg:x="304" fg:w="1"/><text x="24.6285%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.3785%" y="629" width="0.0802%" height="15" fill="rgb(206,178,17)" fg:x="304" fg:w="1"/><text x="24.6285%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (15 samples, 1.20%)</title><rect x="23.3360%" y="725" width="1.2029%" height="15" fill="rgb(208,168,35)" fg:x="291" fg:w="15"/><text x="23.5860%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (15 samples, 1.20%)</title><rect x="23.3360%" y="709" width="1.2029%" height="15" fill="rgb(213,210,40)" fg:x="291" fg:w="15"/><text x="23.5860%" y="719.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="24.4587%" y="693" width="0.0802%" height="15" fill="rgb(236,60,6)" fg:x="305" fg:w="1"/><text x="24.7087%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="24.4587%" y="677" width="0.0802%" height="15" fill="rgb(220,186,36)" fg:x="305" fg:w="1"/><text x="24.7087%" y="687.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="24.4587%" y="661" width="0.0802%" height="15" fill="rgb(225,120,49)" fg:x="305" fg:w="1"/><text x="24.7087%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.4587%" y="645" width="0.0802%" height="15" fill="rgb(250,115,20)" fg:x="305" fg:w="1"/><text x="24.7087%" y="655.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="24.4587%" y="629" width="0.0802%" height="15" fill="rgb(207,214,23)" fg:x="305" fg:w="1"/><text x="24.7087%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="24.4587%" y="613" width="0.0802%" height="15" fill="rgb(240,9,18)" fg:x="305" fg:w="1"/><text x="24.7087%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4587%" y="597" width="0.0802%" height="15" fill="rgb(232,170,48)" fg:x="305" fg:w="1"/><text x="24.7087%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.4587%" y="581" width="0.0802%" height="15" fill="rgb(236,149,23)" fg:x="305" fg:w="1"/><text x="24.7087%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.4587%" y="565" width="0.0802%" height="15" fill="rgb(210,125,42)" fg:x="305" fg:w="1"/><text x="24.7087%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.4587%" y="549" width="0.0802%" height="15" fill="rgb(207,201,52)" fg:x="305" fg:w="1"/><text x="24.7087%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.4587%" y="533" width="0.0802%" height="15" fill="rgb(250,187,37)" fg:x="305" fg:w="1"/><text x="24.7087%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.4587%" y="517" width="0.0802%" height="15" fill="rgb(214,186,2)" fg:x="305" fg:w="1"/><text x="24.7087%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4587%" y="501" width="0.0802%" height="15" fill="rgb(207,189,15)" fg:x="305" fg:w="1"/><text x="24.7087%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="24.6191%" y="677" width="0.0802%" height="15" fill="rgb(221,99,21)" fg:x="307" fg:w="1"/><text x="24.8691%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="24.6993%" y="677" width="0.0802%" height="15" fill="rgb(212,67,18)" fg:x="308" fg:w="1"/><text x="24.9493%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="24.6993%" y="661" width="0.0802%" height="15" fill="rgb(226,24,24)" fg:x="308" fg:w="1"/><text x="24.9493%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.6993%" y="645" width="0.0802%" height="15" fill="rgb(252,123,31)" fg:x="308" fg:w="1"/><text x="24.9493%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6993%" y="629" width="0.0802%" height="15" fill="rgb(251,227,47)" fg:x="308" fg:w="1"/><text x="24.9493%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="24.6993%" y="613" width="0.0802%" height="15" fill="rgb(233,84,53)" fg:x="308" fg:w="1"/><text x="24.9493%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.6993%" y="597" width="0.0802%" height="15" fill="rgb(228,57,19)" fg:x="308" fg:w="1"/><text x="24.9493%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="24.7795%" y="661" width="0.1604%" height="15" fill="rgb(251,81,5)" fg:x="309" fg:w="2"/><text x="25.0295%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="24.7795%" y="645" width="0.1604%" height="15" fill="rgb(236,211,27)" fg:x="309" fg:w="2"/><text x="25.0295%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.7795%" y="629" width="0.1604%" height="15" fill="rgb(218,21,6)" fg:x="309" fg:w="2"/><text x="25.0295%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="24.8597%" y="613" width="0.0802%" height="15" fill="rgb(239,104,19)" fg:x="310" fg:w="1"/><text x="25.1097%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8597%" y="597" width="0.0802%" height="15" fill="rgb(234,179,27)" fg:x="310" fg:w="1"/><text x="25.1097%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="24.8597%" y="581" width="0.0802%" height="15" fill="rgb(221,154,39)" fg:x="310" fg:w="1"/><text x="25.1097%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="24.8597%" y="565" width="0.0802%" height="15" fill="rgb(228,190,1)" fg:x="310" fg:w="1"/><text x="25.1097%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="24.8597%" y="549" width="0.0802%" height="15" fill="rgb(244,122,33)" fg:x="310" fg:w="1"/><text x="25.1097%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="24.8597%" y="533" width="0.0802%" height="15" fill="rgb(227,56,37)" fg:x="310" fg:w="1"/><text x="25.1097%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8597%" y="517" width="0.0802%" height="15" fill="rgb(207,158,16)" fg:x="310" fg:w="1"/><text x="25.1097%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="24.8597%" y="501" width="0.0802%" height="15" fill="rgb(251,222,30)" fg:x="310" fg:w="1"/><text x="25.1097%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="24.8597%" y="485" width="0.0802%" height="15" fill="rgb(240,22,49)" fg:x="310" fg:w="1"/><text x="25.1097%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="24.8597%" y="469" width="0.0802%" height="15" fill="rgb(224,207,37)" fg:x="310" fg:w="1"/><text x="25.1097%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="24.8597%" y="453" width="0.0802%" height="15" fill="rgb(249,188,40)" fg:x="310" fg:w="1"/><text x="25.1097%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="24.8597%" y="437" width="0.0802%" height="15" fill="rgb(254,141,11)" fg:x="310" fg:w="1"/><text x="25.1097%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.8597%" y="421" width="0.0802%" height="15" fill="rgb(231,177,6)" fg:x="310" fg:w="1"/><text x="25.1097%" y="431.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="24.9399%" y="661" width="0.0802%" height="15" fill="rgb(241,6,16)" fg:x="311" fg:w="1"/><text x="25.1899%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9399%" y="645" width="0.0802%" height="15" fill="rgb(230,50,14)" fg:x="311" fg:w="1"/><text x="25.1899%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9399%" y="629" width="0.0802%" height="15" fill="rgb(254,36,3)" fg:x="311" fg:w="1"/><text x="25.1899%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="24.9399%" y="613" width="0.0802%" height="15" fill="rgb(226,149,37)" fg:x="311" fg:w="1"/><text x="25.1899%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="25.0200%" y="661" width="0.1604%" height="15" fill="rgb(253,49,27)" fg:x="312" fg:w="2"/><text x="25.2700%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1804%" y="549" width="0.0802%" height="15" fill="rgb(249,182,52)" fg:x="314" fg:w="1"/><text x="25.4304%" y="559.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="24.7795%" y="677" width="0.5613%" height="15" fill="rgb(223,42,15)" fg:x="309" fg:w="7"/><text x="25.0295%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="25.1804%" y="661" width="0.1604%" height="15" fill="rgb(232,31,42)" fg:x="314" fg:w="2"/><text x="25.4304%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="25.1804%" y="645" width="0.1604%" height="15" fill="rgb(233,56,46)" fg:x="314" fg:w="2"/><text x="25.4304%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="25.1804%" y="629" width="0.1604%" height="15" fill="rgb(241,143,21)" fg:x="314" fg:w="2"/><text x="25.4304%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="25.1804%" y="613" width="0.1604%" height="15" fill="rgb(251,222,15)" fg:x="314" fg:w="2"/><text x="25.4304%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="25.1804%" y="597" width="0.1604%" height="15" fill="rgb(242,101,40)" fg:x="314" fg:w="2"/><text x="25.4304%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="25.1804%" y="581" width="0.1604%" height="15" fill="rgb(247,60,44)" fg:x="314" fg:w="2"/><text x="25.4304%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="25.1804%" y="565" width="0.1604%" height="15" fill="rgb(254,48,47)" fg:x="314" fg:w="2"/><text x="25.4304%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2606%" y="549" width="0.0802%" height="15" fill="rgb(253,30,33)" fg:x="315" fg:w="1"/><text x="25.5106%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="25.2606%" y="533" width="0.0802%" height="15" fill="rgb(253,214,47)" fg:x="315" fg:w="1"/><text x="25.5106%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="25.2606%" y="517" width="0.0802%" height="15" fill="rgb(241,108,29)" fg:x="315" fg:w="1"/><text x="25.5106%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.3408%" y="661" width="0.0802%" height="15" fill="rgb(240,36,2)" fg:x="316" fg:w="1"/><text x="25.5908%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.3408%" y="645" width="0.0802%" height="15" fill="rgb(243,198,24)" fg:x="316" fg:w="1"/><text x="25.5908%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3408%" y="629" width="0.0802%" height="15" fill="rgb(225,98,27)" fg:x="316" fg:w="1"/><text x="25.5908%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3408%" y="613" width="0.0802%" height="15" fill="rgb(208,86,30)" fg:x="316" fg:w="1"/><text x="25.5908%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3408%" y="597" width="0.0802%" height="15" fill="rgb(242,157,11)" fg:x="316" fg:w="1"/><text x="25.5908%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3408%" y="581" width="0.0802%" height="15" fill="rgb(244,84,16)" fg:x="316" fg:w="1"/><text x="25.5908%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.3408%" y="565" width="0.0802%" height="15" fill="rgb(247,20,46)" fg:x="316" fg:w="1"/><text x="25.5908%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.3408%" y="549" width="0.0802%" height="15" fill="rgb(240,157,20)" fg:x="316" fg:w="1"/><text x="25.5908%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.3408%" y="533" width="0.0802%" height="15" fill="rgb(212,151,38)" fg:x="316" fg:w="1"/><text x="25.5908%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.3408%" y="517" width="0.0802%" height="15" fill="rgb(233,197,14)" fg:x="316" fg:w="1"/><text x="25.5908%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.3408%" y="501" width="0.0802%" height="15" fill="rgb(226,148,28)" fg:x="316" fg:w="1"/><text x="25.5908%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.3408%" y="485" width="0.0802%" height="15" fill="rgb(244,141,30)" fg:x="316" fg:w="1"/><text x="25.5908%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.3408%" y="469" width="0.0802%" height="15" fill="rgb(215,73,38)" fg:x="316" fg:w="1"/><text x="25.5908%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.3408%" y="453" width="0.0802%" height="15" fill="rgb(230,148,29)" fg:x="316" fg:w="1"/><text x="25.5908%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.3408%" y="437" width="0.0802%" height="15" fill="rgb(250,41,52)" fg:x="316" fg:w="1"/><text x="25.5908%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.3408%" y="421" width="0.0802%" height="15" fill="rgb(215,48,1)" fg:x="316" fg:w="1"/><text x="25.5908%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3408%" y="405" width="0.0802%" height="15" fill="rgb(205,223,38)" fg:x="316" fg:w="1"/><text x="25.5908%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.4210%" y="629" width="0.1604%" height="15" fill="rgb(213,51,8)" fg:x="317" fg:w="2"/><text x="25.6710%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.4210%" y="613" width="0.1604%" height="15" fill="rgb(248,53,11)" fg:x="317" fg:w="2"/><text x="25.6710%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.4210%" y="597" width="0.1604%" height="15" fill="rgb(218,140,4)" fg:x="317" fg:w="2"/><text x="25.6710%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5012%" y="581" width="0.0802%" height="15" fill="rgb(248,161,31)" fg:x="318" fg:w="1"/><text x="25.7512%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="25.4210%" y="661" width="0.2406%" height="15" fill="rgb(239,88,32)" fg:x="317" fg:w="3"/><text x="25.6710%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.4210%" y="645" width="0.2406%" height="15" fill="rgb(234,14,28)" fg:x="317" fg:w="3"/><text x="25.6710%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5814%" y="629" width="0.0802%" height="15" fill="rgb(235,173,11)" fg:x="319" fg:w="1"/><text x="25.8314%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5814%" y="613" width="0.0802%" height="15" fill="rgb(222,70,2)" fg:x="319" fg:w="1"/><text x="25.8314%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5814%" y="597" width="0.0802%" height="15" fill="rgb(228,196,41)" fg:x="319" fg:w="1"/><text x="25.8314%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5814%" y="581" width="0.0802%" height="15" fill="rgb(249,19,9)" fg:x="319" fg:w="1"/><text x="25.8314%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.5814%" y="565" width="0.0802%" height="15" fill="rgb(221,16,43)" fg:x="319" fg:w="1"/><text x="25.8314%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (14 samples, 1.12%)</title><rect x="24.6191%" y="693" width="1.1227%" height="15" fill="rgb(225,207,6)" fg:x="307" fg:w="14"/><text x="24.8691%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="25.3408%" y="677" width="0.4010%" height="15" fill="rgb(249,32,32)" fg:x="316" fg:w="5"/><text x="25.5908%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.6616%" y="661" width="0.0802%" height="15" fill="rgb(232,163,43)" fg:x="320" fg:w="1"/><text x="25.9116%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.6616%" y="645" width="0.0802%" height="15" fill="rgb(236,158,54)" fg:x="320" fg:w="1"/><text x="25.9116%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.6616%" y="629" width="0.0802%" height="15" fill="rgb(205,126,44)" fg:x="320" fg:w="1"/><text x="25.9116%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6616%" y="613" width="0.0802%" height="15" fill="rgb(210,162,12)" fg:x="320" fg:w="1"/><text x="25.9116%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="25.6616%" y="597" width="0.0802%" height="15" fill="rgb(218,156,48)" fg:x="320" fg:w="1"/><text x="25.9116%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="25.6616%" y="581" width="0.0802%" height="15" fill="rgb(248,210,3)" fg:x="320" fg:w="1"/><text x="25.9116%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="25.6616%" y="565" width="0.0802%" height="15" fill="rgb(212,43,27)" fg:x="320" fg:w="1"/><text x="25.9116%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="25.6616%" y="549" width="0.0802%" height="15" fill="rgb(241,52,6)" fg:x="320" fg:w="1"/><text x="25.9116%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="25.6616%" y="533" width="0.0802%" height="15" fill="rgb(222,178,35)" fg:x="320" fg:w="1"/><text x="25.9116%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="25.6616%" y="517" width="0.0802%" height="15" fill="rgb(205,121,46)" fg:x="320" fg:w="1"/><text x="25.9116%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (16 samples, 1.28%)</title><rect x="24.5389%" y="709" width="1.2831%" height="15" fill="rgb(249,67,1)" fg:x="306" fg:w="16"/><text x="24.7889%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="25.7418%" y="693" width="0.0802%" height="15" fill="rgb(238,168,42)" fg:x="321" fg:w="1"/><text x="25.9918%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="25.7418%" y="677" width="0.0802%" height="15" fill="rgb(205,36,48)" fg:x="321" fg:w="1"/><text x="25.9918%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7418%" y="661" width="0.0802%" height="15" fill="rgb(240,85,12)" fg:x="321" fg:w="1"/><text x="25.9918%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7418%" y="645" width="0.0802%" height="15" fill="rgb(245,27,39)" fg:x="321" fg:w="1"/><text x="25.9918%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (274 samples, 21.97%)</title><rect x="3.9294%" y="741" width="21.9727%" height="15" fill="rgb(218,129,34)" fg:x="49" fg:w="274"/><text x="4.1794%" y="751.50">&lt;tests::HoldingKeyInVessel as tests..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (17 samples, 1.36%)</title><rect x="24.5389%" y="725" width="1.3633%" height="15" fill="rgb(221,157,12)" fg:x="306" fg:w="17"/><text x="24.7889%" y="735.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="25.8220%" y="709" width="0.0802%" height="15" fill="rgb(213,206,20)" fg:x="322" fg:w="1"/><text x="26.0720%" y="719.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="25.8220%" y="693" width="0.0802%" height="15" fill="rgb(227,115,30)" fg:x="322" fg:w="1"/><text x="26.0720%" y="703.50"></text></g><g><title>kernel::model::builder::EntityBuilder::new (1 samples, 0.08%)</title><rect x="25.8220%" y="677" width="0.0802%" height="15" fill="rgb(221,40,47)" fg:x="322" fg:w="1"/><text x="26.0720%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (2 samples, 0.16%)</title><rect x="25.9022%" y="741" width="0.1604%" height="15" fill="rgb(239,96,49)" fg:x="323" fg:w="2"/><text x="26.1522%" y="751.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="25.9824%" y="725" width="0.0802%" height="15" fill="rgb(223,24,38)" fg:x="324" fg:w="1"/><text x="26.2324%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="25.9824%" y="709" width="0.0802%" height="15" fill="rgb(242,35,45)" fg:x="324" fg:w="1"/><text x="26.2324%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="25.9824%" y="693" width="0.0802%" height="15" fill="rgb(236,20,9)" fg:x="324" fg:w="1"/><text x="26.2324%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.9824%" y="677" width="0.0802%" height="15" fill="rgb(239,124,8)" fg:x="324" fg:w="1"/><text x="26.2324%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.0626%" y="725" width="0.0802%" height="15" fill="rgb(228,92,29)" fg:x="325" fg:w="1"/><text x="26.3126%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.1427%" y="661" width="0.0802%" height="15" fill="rgb(251,53,39)" fg:x="326" fg:w="1"/><text x="26.3927%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="26.1427%" y="709" width="0.1604%" height="15" fill="rgb(224,44,10)" fg:x="326" fg:w="2"/><text x="26.3927%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.1427%" y="693" width="0.1604%" height="15" fill="rgb(254,10,15)" fg:x="326" fg:w="2"/><text x="26.3927%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="26.1427%" y="677" width="0.1604%" height="15" fill="rgb(245,173,6)" fg:x="326" fg:w="2"/><text x="26.3927%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2229%" y="661" width="0.0802%" height="15" fill="rgb(228,74,0)" fg:x="327" fg:w="1"/><text x="26.4729%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.3031%" y="645" width="0.0802%" height="15" fill="rgb(206,138,29)" fg:x="328" fg:w="1"/><text x="26.5531%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3031%" y="629" width="0.0802%" height="15" fill="rgb(253,27,43)" fg:x="328" fg:w="1"/><text x="26.5531%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="26.3833%" y="629" width="0.0802%" height="15" fill="rgb(231,73,0)" fg:x="329" fg:w="1"/><text x="26.6333%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.4635%" y="597" width="0.0802%" height="15" fill="rgb(218,9,23)" fg:x="330" fg:w="1"/><text x="26.7135%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.3031%" y="661" width="0.3208%" height="15" fill="rgb(251,55,29)" fg:x="328" fg:w="4"/><text x="26.5531%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="26.3833%" y="645" width="0.2406%" height="15" fill="rgb(223,180,22)" fg:x="329" fg:w="3"/><text x="26.6333%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.4635%" y="629" width="0.1604%" height="15" fill="rgb(223,29,21)" fg:x="330" fg:w="2"/><text x="26.7135%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.4635%" y="613" width="0.1604%" height="15" fill="rgb(251,103,37)" fg:x="330" fg:w="2"/><text x="26.7135%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.5437%" y="597" width="0.0802%" height="15" fill="rgb(214,11,21)" fg:x="331" fg:w="1"/><text x="26.7937%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.5437%" y="581" width="0.0802%" height="15" fill="rgb(205,137,13)" fg:x="331" fg:w="1"/><text x="26.7937%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.5437%" y="565" width="0.0802%" height="15" fill="rgb(225,58,47)" fg:x="331" fg:w="1"/><text x="26.7937%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.7041%" y="645" width="0.0802%" height="15" fill="rgb(222,197,14)" fg:x="333" fg:w="1"/><text x="26.9541%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.7041%" y="629" width="0.0802%" height="15" fill="rgb(215,210,33)" fg:x="333" fg:w="1"/><text x="26.9541%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7843%" y="613" width="0.0802%" height="15" fill="rgb(242,13,9)" fg:x="334" fg:w="1"/><text x="27.0343%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.7843%" y="597" width="0.0802%" height="15" fill="rgb(218,31,39)" fg:x="334" fg:w="1"/><text x="27.0343%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7843%" y="581" width="0.0802%" height="15" fill="rgb(211,214,23)" fg:x="334" fg:w="1"/><text x="27.0343%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.7843%" y="565" width="0.0802%" height="15" fill="rgb(237,92,14)" fg:x="334" fg:w="1"/><text x="27.0343%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.7843%" y="549" width="0.0802%" height="15" fill="rgb(220,78,5)" fg:x="334" fg:w="1"/><text x="27.0343%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.7843%" y="533" width="0.0802%" height="15" fill="rgb(237,23,21)" fg:x="334" fg:w="1"/><text x="27.0343%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.7843%" y="517" width="0.0802%" height="15" fill="rgb(251,207,51)" fg:x="334" fg:w="1"/><text x="27.0343%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.7843%" y="501" width="0.0802%" height="15" fill="rgb(249,206,18)" fg:x="334" fg:w="1"/><text x="27.0343%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.7843%" y="485" width="0.0802%" height="15" fill="rgb(236,20,19)" fg:x="334" fg:w="1"/><text x="27.0343%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.7843%" y="469" width="0.0802%" height="15" fill="rgb(214,227,29)" fg:x="334" fg:w="1"/><text x="27.0343%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.7843%" y="453" width="0.0802%" height="15" fill="rgb(209,183,4)" fg:x="334" fg:w="1"/><text x="27.0343%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.7843%" y="437" width="0.0802%" height="15" fill="rgb(233,111,23)" fg:x="334" fg:w="1"/><text x="27.0343%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.7843%" y="421" width="0.0802%" height="15" fill="rgb(238,121,27)" fg:x="334" fg:w="1"/><text x="27.0343%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7843%" y="405" width="0.0802%" height="15" fill="rgb(236,120,41)" fg:x="334" fg:w="1"/><text x="27.0343%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="26.7843%" y="629" width="0.1604%" height="15" fill="rgb(241,143,10)" fg:x="334" fg:w="2"/><text x="27.0343%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.8645%" y="613" width="0.0802%" height="15" fill="rgb(224,86,31)" fg:x="335" fg:w="1"/><text x="27.1145%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.9447%" y="629" width="0.0802%" height="15" fill="rgb(236,212,27)" fg:x="336" fg:w="1"/><text x="27.1947%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.9447%" y="613" width="0.0802%" height="15" fill="rgb(219,43,51)" fg:x="336" fg:w="1"/><text x="27.1947%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.9447%" y="597" width="0.0802%" height="15" fill="rgb(232,216,8)" fg:x="336" fg:w="1"/><text x="27.1947%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.9447%" y="581" width="0.0802%" height="15" fill="rgb(206,222,39)" fg:x="336" fg:w="1"/><text x="27.1947%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="27.1051%" y="565" width="0.0802%" height="15" fill="rgb(209,149,48)" fg:x="338" fg:w="1"/><text x="27.3551%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1852%" y="565" width="0.0802%" height="15" fill="rgb(229,155,21)" fg:x="339" fg:w="1"/><text x="27.4352%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="26.6239%" y="661" width="0.7217%" height="15" fill="rgb(246,152,26)" fg:x="332" fg:w="9"/><text x="26.8739%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="26.7843%" y="645" width="0.5613%" height="15" fill="rgb(206,70,42)" fg:x="334" fg:w="7"/><text x="27.0343%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="27.0249%" y="629" width="0.3208%" height="15" fill="rgb(236,9,11)" fg:x="337" fg:w="4"/><text x="27.2749%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="27.0249%" y="613" width="0.3208%" height="15" fill="rgb(238,145,47)" fg:x="337" fg:w="4"/><text x="27.2749%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="27.1051%" y="597" width="0.2406%" height="15" fill="rgb(252,189,7)" fg:x="338" fg:w="3"/><text x="27.3551%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.1051%" y="581" width="0.2406%" height="15" fill="rgb(254,168,51)" fg:x="338" fg:w="3"/><text x="27.3551%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2654%" y="565" width="0.0802%" height="15" fill="rgb(227,105,46)" fg:x="340" fg:w="1"/><text x="27.5154%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2654%" y="549" width="0.0802%" height="15" fill="rgb(227,74,30)" fg:x="340" fg:w="1"/><text x="27.5154%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.2654%" y="533" width="0.0802%" height="15" fill="rgb(206,212,44)" fg:x="340" fg:w="1"/><text x="27.5154%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.3456%" y="613" width="0.0802%" height="15" fill="rgb(252,69,11)" fg:x="341" fg:w="1"/><text x="27.5956%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.3456%" y="597" width="0.0802%" height="15" fill="rgb(239,116,0)" fg:x="341" fg:w="1"/><text x="27.5956%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.3456%" y="581" width="0.0802%" height="15" fill="rgb(246,189,23)" fg:x="341" fg:w="1"/><text x="27.5956%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.3456%" y="565" width="0.0802%" height="15" fill="rgb(229,50,41)" fg:x="341" fg:w="1"/><text x="27.5956%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.3456%" y="549" width="0.0802%" height="15" fill="rgb(214,66,37)" fg:x="341" fg:w="1"/><text x="27.5956%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.3456%" y="533" width="0.0802%" height="15" fill="rgb(226,28,6)" fg:x="341" fg:w="1"/><text x="27.5956%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.3456%" y="517" width="0.0802%" height="15" fill="rgb(239,154,0)" fg:x="341" fg:w="1"/><text x="27.5956%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.3456%" y="501" width="0.0802%" height="15" fill="rgb(233,97,11)" fg:x="341" fg:w="1"/><text x="27.5956%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.3456%" y="485" width="0.0802%" height="15" fill="rgb(236,215,16)" fg:x="341" fg:w="1"/><text x="27.5956%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.3456%" y="469" width="0.0802%" height="15" fill="rgb(246,188,29)" fg:x="341" fg:w="1"/><text x="27.5956%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="27.3456%" y="453" width="0.0802%" height="15" fill="rgb(207,7,29)" fg:x="341" fg:w="1"/><text x="27.5956%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="27.3456%" y="437" width="0.0802%" height="15" fill="rgb(238,112,43)" fg:x="341" fg:w="1"/><text x="27.5956%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="27.3456%" y="421" width="0.0802%" height="15" fill="rgb(230,110,32)" fg:x="341" fg:w="1"/><text x="27.5956%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="27.3456%" y="405" width="0.0802%" height="15" fill="rgb(218,197,32)" fg:x="341" fg:w="1"/><text x="27.5956%" y="415.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="27.3456%" y="389" width="0.0802%" height="15" fill="rgb(252,61,9)" fg:x="341" fg:w="1"/><text x="27.5956%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4258%" y="597" width="0.0802%" height="15" fill="rgb(244,140,14)" fg:x="342" fg:w="1"/><text x="27.6758%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.4258%" y="581" width="0.0802%" height="15" fill="rgb(216,14,47)" fg:x="342" fg:w="1"/><text x="27.6758%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="27.4258%" y="565" width="0.0802%" height="15" fill="rgb(224,130,52)" fg:x="342" fg:w="1"/><text x="27.6758%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="27.4258%" y="549" width="0.0802%" height="15" fill="rgb(210,229,51)" fg:x="342" fg:w="1"/><text x="27.6758%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="27.4258%" y="533" width="0.0802%" height="15" fill="rgb(242,13,9)" fg:x="342" fg:w="1"/><text x="27.6758%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="27.4258%" y="517" width="0.0802%" height="15" fill="rgb(252,71,50)" fg:x="342" fg:w="1"/><text x="27.6758%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4258%" y="501" width="0.0802%" height="15" fill="rgb(218,225,6)" fg:x="342" fg:w="1"/><text x="27.6758%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="27.4258%" y="485" width="0.0802%" height="15" fill="rgb(219,27,35)" fg:x="342" fg:w="1"/><text x="27.6758%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="27.4258%" y="469" width="0.0802%" height="15" fill="rgb(226,30,1)" fg:x="342" fg:w="1"/><text x="27.6758%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="27.4258%" y="453" width="0.0802%" height="15" fill="rgb(227,164,34)" fg:x="342" fg:w="1"/><text x="27.6758%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="27.4258%" y="437" width="0.0802%" height="15" fill="rgb(206,103,4)" fg:x="342" fg:w="1"/><text x="27.6758%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (16 samples, 1.28%)</title><rect x="26.3031%" y="693" width="1.2831%" height="15" fill="rgb(214,166,19)" fg:x="328" fg:w="16"/><text x="26.5531%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (16 samples, 1.28%)</title><rect x="26.3031%" y="677" width="1.2831%" height="15" fill="rgb(240,56,20)" fg:x="328" fg:w="16"/><text x="26.5531%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="27.3456%" y="661" width="0.2406%" height="15" fill="rgb(224,25,3)" fg:x="341" fg:w="3"/><text x="27.5956%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="27.3456%" y="645" width="0.2406%" height="15" fill="rgb(216,206,54)" fg:x="341" fg:w="3"/><text x="27.5956%" y="655.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="27.3456%" y="629" width="0.2406%" height="15" fill="rgb(225,142,10)" fg:x="341" fg:w="3"/><text x="27.5956%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="27.4258%" y="613" width="0.1604%" height="15" fill="rgb(246,9,18)" fg:x="342" fg:w="2"/><text x="27.6758%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="27.5060%" y="597" width="0.0802%" height="15" fill="rgb(247,140,18)" fg:x="343" fg:w="1"/><text x="27.7560%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.5060%" y="581" width="0.0802%" height="15" fill="rgb(239,184,22)" fg:x="343" fg:w="1"/><text x="27.7560%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="27.5862%" y="677" width="0.0802%" height="15" fill="rgb(227,94,44)" fg:x="344" fg:w="1"/><text x="27.8362%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5862%" y="661" width="0.0802%" height="15" fill="rgb(219,43,3)" fg:x="344" fg:w="1"/><text x="27.8362%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5862%" y="645" width="0.0802%" height="15" fill="rgb(210,76,31)" fg:x="344" fg:w="1"/><text x="27.8362%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5862%" y="629" width="0.0802%" height="15" fill="rgb(225,85,12)" fg:x="344" fg:w="1"/><text x="27.8362%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5862%" y="613" width="0.0802%" height="15" fill="rgb(214,191,28)" fg:x="344" fg:w="1"/><text x="27.8362%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5862%" y="597" width="0.0802%" height="15" fill="rgb(214,43,14)" fg:x="344" fg:w="1"/><text x="27.8362%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="27.5862%" y="581" width="0.0802%" height="15" fill="rgb(253,117,5)" fg:x="344" fg:w="1"/><text x="27.8362%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="27.5862%" y="565" width="0.0802%" height="15" fill="rgb(208,124,26)" fg:x="344" fg:w="1"/><text x="27.8362%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="27.6664%" y="677" width="0.0802%" height="15" fill="rgb(228,208,39)" fg:x="345" fg:w="1"/><text x="27.9164%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="27.6664%" y="661" width="0.0802%" height="15" fill="rgb(206,180,39)" fg:x="345" fg:w="1"/><text x="27.9164%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8268%" y="645" width="0.0802%" height="15" fill="rgb(205,111,37)" fg:x="347" fg:w="1"/><text x="28.0768%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8268%" y="629" width="0.0802%" height="15" fill="rgb(208,121,24)" fg:x="347" fg:w="1"/><text x="28.0768%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.8268%" y="613" width="0.0802%" height="15" fill="rgb(218,215,32)" fg:x="347" fg:w="1"/><text x="28.0768%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8268%" y="597" width="0.0802%" height="15" fill="rgb(244,168,53)" fg:x="347" fg:w="1"/><text x="28.0768%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="27.9070%" y="613" width="0.0802%" height="15" fill="rgb(214,9,36)" fg:x="348" fg:w="1"/><text x="28.1570%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="27.9070%" y="597" width="0.0802%" height="15" fill="rgb(231,4,34)" fg:x="348" fg:w="1"/><text x="28.1570%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="27.9070%" y="581" width="0.0802%" height="15" fill="rgb(210,83,51)" fg:x="348" fg:w="1"/><text x="28.1570%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.9070%" y="565" width="0.0802%" height="15" fill="rgb(224,112,1)" fg:x="348" fg:w="1"/><text x="28.1570%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.9070%" y="549" width="0.0802%" height="15" fill="rgb(216,33,41)" fg:x="348" fg:w="1"/><text x="28.1570%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (23 samples, 1.84%)</title><rect x="26.3031%" y="709" width="1.8444%" height="15" fill="rgb(215,179,42)" fg:x="328" fg:w="23"/><text x="26.5531%" y="719.50">&lt;..</text></g><g><title>plugins_core::tools::get_occupant_keys (7 samples, 0.56%)</title><rect x="27.5862%" y="693" width="0.5613%" height="15" fill="rgb(205,81,48)" fg:x="344" fg:w="7"/><text x="27.8362%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="27.7466%" y="677" width="0.4010%" height="15" fill="rgb(246,17,30)" fg:x="346" fg:w="5"/><text x="27.9966%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.7466%" y="661" width="0.4010%" height="15" fill="rgb(226,19,16)" fg:x="346" fg:w="5"/><text x="27.9966%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.9070%" y="645" width="0.2406%" height="15" fill="rgb(207,3,14)" fg:x="348" fg:w="3"/><text x="28.1570%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.9070%" y="629" width="0.2406%" height="15" fill="rgb(226,77,12)" fg:x="348" fg:w="3"/><text x="28.1570%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.9872%" y="613" width="0.1604%" height="15" fill="rgb(226,76,25)" fg:x="349" fg:w="2"/><text x="28.2372%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.9872%" y="597" width="0.1604%" height="15" fill="rgb(217,216,25)" fg:x="349" fg:w="2"/><text x="28.2372%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="27.9872%" y="581" width="0.1604%" height="15" fill="rgb(247,127,42)" fg:x="349" fg:w="2"/><text x="28.2372%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.0674%" y="565" width="0.0802%" height="15" fill="rgb(226,10,34)" fg:x="350" fg:w="1"/><text x="28.3174%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1476%" y="709" width="0.0802%" height="15" fill="rgb(249,78,0)" fg:x="351" fg:w="1"/><text x="28.3976%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="28.2277%" y="693" width="0.0802%" height="15" fill="rgb(226,218,38)" fg:x="352" fg:w="1"/><text x="28.4777%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.2277%" y="677" width="0.0802%" height="15" fill="rgb(240,92,1)" fg:x="352" fg:w="1"/><text x="28.4777%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.2277%" y="661" width="0.0802%" height="15" fill="rgb(237,224,33)" fg:x="352" fg:w="1"/><text x="28.4777%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="28.2277%" y="645" width="0.0802%" height="15" fill="rgb(211,46,1)" fg:x="352" fg:w="1"/><text x="28.4777%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="28.3079%" y="661" width="0.0802%" height="15" fill="rgb(239,190,4)" fg:x="353" fg:w="1"/><text x="28.5579%" y="671.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="28.3079%" y="693" width="0.1604%" height="15" fill="rgb(221,50,22)" fg:x="353" fg:w="2"/><text x="28.5579%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="28.3079%" y="677" width="0.1604%" height="15" fill="rgb(207,176,8)" fg:x="353" fg:w="2"/><text x="28.5579%" y="687.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="28.3881%" y="661" width="0.0802%" height="15" fill="rgb(244,114,50)" fg:x="354" fg:w="1"/><text x="28.6381%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.5485%" y="661" width="0.0802%" height="15" fill="rgb(226,206,19)" fg:x="356" fg:w="1"/><text x="28.7985%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.5485%" y="645" width="0.0802%" height="15" fill="rgb(208,199,16)" fg:x="356" fg:w="1"/><text x="28.7985%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="28.5485%" y="629" width="0.0802%" height="15" fill="rgb(208,38,14)" fg:x="356" fg:w="1"/><text x="28.7985%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="28.6287%" y="645" width="0.0802%" height="15" fill="rgb(221,211,49)" fg:x="357" fg:w="1"/><text x="28.8787%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.6287%" y="629" width="0.0802%" height="15" fill="rgb(227,214,34)" fg:x="357" fg:w="1"/><text x="28.8787%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.6287%" y="613" width="0.0802%" height="15" fill="rgb(234,5,54)" fg:x="357" fg:w="1"/><text x="28.8787%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.6287%" y="597" width="0.0802%" height="15" fill="rgb(236,215,22)" fg:x="357" fg:w="1"/><text x="28.8787%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="28.6287%" y="581" width="0.0802%" height="15" fill="rgb(244,0,11)" fg:x="357" fg:w="1"/><text x="28.8787%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="28.6287%" y="565" width="0.0802%" height="15" fill="rgb(212,140,16)" fg:x="357" fg:w="1"/><text x="28.8787%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="28.6287%" y="549" width="0.0802%" height="15" fill="rgb(238,101,37)" fg:x="357" fg:w="1"/><text x="28.8787%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6287%" y="533" width="0.0802%" height="15" fill="rgb(247,46,3)" fg:x="357" fg:w="1"/><text x="28.8787%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="28.7089%" y="613" width="0.2406%" height="15" fill="rgb(208,106,19)" fg:x="358" fg:w="3"/><text x="28.9589%" y="623.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="28.7089%" y="597" width="0.2406%" height="15" fill="rgb(240,227,15)" fg:x="358" fg:w="3"/><text x="28.9589%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="28.7089%" y="581" width="0.2406%" height="15" fill="rgb(226,173,6)" fg:x="358" fg:w="3"/><text x="28.9589%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="28.8693%" y="565" width="0.0802%" height="15" fill="rgb(213,191,1)" fg:x="360" fg:w="1"/><text x="29.1193%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.32%)</title><rect x="28.7089%" y="629" width="0.3208%" height="15" fill="rgb(246,51,36)" fg:x="358" fg:w="4"/><text x="28.9589%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="28.9495%" y="613" width="0.0802%" height="15" fill="rgb(238,40,32)" fg:x="361" fg:w="1"/><text x="29.1995%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="29.1099%" y="613" width="0.2406%" height="15" fill="rgb(208,126,27)" fg:x="363" fg:w="3"/><text x="29.3599%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.1901%" y="597" width="0.1604%" height="15" fill="rgb(227,117,38)" fg:x="364" fg:w="2"/><text x="29.4401%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.4306%" y="565" width="0.0802%" height="15" fill="rgb(232,16,1)" fg:x="367" fg:w="1"/><text x="29.6806%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.4306%" y="549" width="0.0802%" height="15" fill="rgb(212,111,31)" fg:x="367" fg:w="1"/><text x="29.6806%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.4306%" y="533" width="0.0802%" height="15" fill="rgb(253,227,2)" fg:x="367" fg:w="1"/><text x="29.6806%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.4306%" y="517" width="0.0802%" height="15" fill="rgb(216,122,17)" fg:x="367" fg:w="1"/><text x="29.6806%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.4306%" y="501" width="0.0802%" height="15" fill="rgb(227,37,2)" fg:x="367" fg:w="1"/><text x="29.6806%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="29.4306%" y="485" width="0.0802%" height="15" fill="rgb(244,113,40)" fg:x="367" fg:w="1"/><text x="29.6806%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="29.4306%" y="469" width="0.0802%" height="15" fill="rgb(217,193,34)" fg:x="367" fg:w="1"/><text x="29.6806%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="29.4306%" y="597" width="0.1604%" height="15" fill="rgb(212,223,15)" fg:x="367" fg:w="2"/><text x="29.6806%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="29.4306%" y="581" width="0.1604%" height="15" fill="rgb(238,143,18)" fg:x="367" fg:w="2"/><text x="29.6806%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="29.5108%" y="565" width="0.0802%" height="15" fill="rgb(231,18,49)" fg:x="368" fg:w="1"/><text x="29.7608%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.5108%" y="549" width="0.0802%" height="15" fill="rgb(249,122,4)" fg:x="368" fg:w="1"/><text x="29.7608%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.5108%" y="533" width="0.0802%" height="15" fill="rgb(245,138,54)" fg:x="368" fg:w="1"/><text x="29.7608%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.5108%" y="517" width="0.0802%" height="15" fill="rgb(218,130,18)" fg:x="368" fg:w="1"/><text x="29.7608%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5108%" y="501" width="0.0802%" height="15" fill="rgb(235,94,13)" fg:x="368" fg:w="1"/><text x="29.7608%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.5910%" y="597" width="0.0802%" height="15" fill="rgb(247,143,5)" fg:x="369" fg:w="1"/><text x="29.8410%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="29.6712%" y="581" width="0.0802%" height="15" fill="rgb(212,59,54)" fg:x="370" fg:w="1"/><text x="29.9212%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="29.7514%" y="581" width="0.1604%" height="15" fill="rgb(206,121,24)" fg:x="371" fg:w="2"/><text x="30.0014%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="29.7514%" y="565" width="0.1604%" height="15" fill="rgb(235,38,8)" fg:x="371" fg:w="2"/><text x="30.0014%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.8316%" y="549" width="0.0802%" height="15" fill="rgb(227,102,26)" fg:x="372" fg:w="1"/><text x="30.0816%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.8316%" y="533" width="0.0802%" height="15" fill="rgb(240,183,46)" fg:x="372" fg:w="1"/><text x="30.0816%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="29.9920%" y="565" width="0.0802%" height="15" fill="rgb(208,177,23)" fg:x="374" fg:w="1"/><text x="30.2420%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="29.9920%" y="549" width="0.0802%" height="15" fill="rgb(216,152,5)" fg:x="374" fg:w="1"/><text x="30.2420%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="29.9920%" y="533" width="0.0802%" height="15" fill="rgb(238,199,2)" fg:x="374" fg:w="1"/><text x="30.2420%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0722%" y="565" width="0.0802%" height="15" fill="rgb(235,142,28)" fg:x="375" fg:w="1"/><text x="30.3222%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="29.9118%" y="581" width="0.3208%" height="15" fill="rgb(225,97,25)" fg:x="373" fg:w="4"/><text x="30.1618%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.1524%" y="565" width="0.0802%" height="15" fill="rgb(208,75,46)" fg:x="376" fg:w="1"/><text x="30.4024%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.1524%" y="549" width="0.0802%" height="15" fill="rgb(240,136,15)" fg:x="376" fg:w="1"/><text x="30.4024%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.1524%" y="533" width="0.0802%" height="15" fill="rgb(235,36,27)" fg:x="376" fg:w="1"/><text x="30.4024%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="29.6712%" y="597" width="0.8019%" height="15" fill="rgb(231,132,23)" fg:x="370" fg:w="10"/><text x="29.9212%" y="607.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.2326%" y="581" width="0.2406%" height="15" fill="rgb(205,208,20)" fg:x="377" fg:w="3"/><text x="30.4826%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.20%)</title><rect x="29.3504%" y="613" width="1.2029%" height="15" fill="rgb(215,26,40)" fg:x="366" fg:w="15"/><text x="29.6004%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.4731%" y="597" width="0.0802%" height="15" fill="rgb(238,183,34)" fg:x="380" fg:w="1"/><text x="30.7231%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.4731%" y="581" width="0.0802%" height="15" fill="rgb(207,96,10)" fg:x="380" fg:w="1"/><text x="30.7231%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.76%)</title><rect x="29.0297%" y="629" width="1.7642%" height="15" fill="rgb(218,88,6)" fg:x="362" fg:w="22"/><text x="29.2797%" y="639.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="30.5533%" y="613" width="0.2406%" height="15" fill="rgb(217,22,49)" fg:x="381" fg:w="3"/><text x="30.8033%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="30.5533%" y="597" width="0.2406%" height="15" fill="rgb(240,195,14)" fg:x="381" fg:w="3"/><text x="30.8033%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.7137%" y="581" width="0.0802%" height="15" fill="rgb(229,48,27)" fg:x="383" fg:w="1"/><text x="30.9637%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.7137%" y="565" width="0.0802%" height="15" fill="rgb(220,194,45)" fg:x="383" fg:w="1"/><text x="30.9637%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.7137%" y="549" width="0.0802%" height="15" fill="rgb(252,60,20)" fg:x="383" fg:w="1"/><text x="30.9637%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="30.7137%" y="533" width="0.0802%" height="15" fill="rgb(244,169,33)" fg:x="383" fg:w="1"/><text x="30.9637%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (27 samples, 2.17%)</title><rect x="28.7089%" y="645" width="2.1652%" height="15" fill="rgb(234,141,34)" fg:x="358" fg:w="27"/><text x="28.9589%" y="655.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="30.7939%" y="629" width="0.0802%" height="15" fill="rgb(241,141,9)" fg:x="384" fg:w="1"/><text x="31.0439%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="30.7939%" y="613" width="0.0802%" height="15" fill="rgb(246,27,36)" fg:x="384" fg:w="1"/><text x="31.0439%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="30.7939%" y="597" width="0.0802%" height="15" fill="rgb(216,188,42)" fg:x="384" fg:w="1"/><text x="31.0439%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="30.7939%" y="581" width="0.0802%" height="15" fill="rgb(234,205,22)" fg:x="384" fg:w="1"/><text x="31.0439%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="30.7939%" y="565" width="0.0802%" height="15" fill="rgb(210,202,32)" fg:x="384" fg:w="1"/><text x="31.0439%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7939%" y="549" width="0.0802%" height="15" fill="rgb(217,0,48)" fg:x="384" fg:w="1"/><text x="31.0439%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8741%" y="613" width="0.0802%" height="15" fill="rgb(207,115,37)" fg:x="385" fg:w="1"/><text x="31.1241%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.0345%" y="597" width="0.1604%" height="15" fill="rgb(237,221,44)" fg:x="387" fg:w="2"/><text x="31.2845%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="30.8741%" y="645" width="0.5613%" height="15" fill="rgb(249,78,2)" fg:x="385" fg:w="7"/><text x="31.1241%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="30.8741%" y="629" width="0.5613%" height="15" fill="rgb(211,169,23)" fg:x="385" fg:w="7"/><text x="31.1241%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="30.9543%" y="613" width="0.4812%" height="15" fill="rgb(207,116,29)" fg:x="386" fg:w="6"/><text x="31.2043%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.1949%" y="597" width="0.2406%" height="15" fill="rgb(240,84,33)" fg:x="389" fg:w="3"/><text x="31.4449%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.1949%" y="581" width="0.2406%" height="15" fill="rgb(229,224,31)" fg:x="389" fg:w="3"/><text x="31.4449%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="31.1949%" y="565" width="0.2406%" height="15" fill="rgb(227,90,31)" fg:x="389" fg:w="3"/><text x="31.4449%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="31.1949%" y="549" width="0.2406%" height="15" fill="rgb(249,22,41)" fg:x="389" fg:w="3"/><text x="31.4449%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.5156%" y="613" width="0.0802%" height="15" fill="rgb(239,65,11)" fg:x="393" fg:w="1"/><text x="31.7656%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.7562%" y="581" width="0.1604%" height="15" fill="rgb(205,5,23)" fg:x="396" fg:w="2"/><text x="32.0062%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="31.9166%" y="581" width="0.1604%" height="15" fill="rgb(254,78,52)" fg:x="398" fg:w="2"/><text x="32.1666%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="31.9166%" y="565" width="0.1604%" height="15" fill="rgb(214,156,33)" fg:x="398" fg:w="2"/><text x="32.1666%" y="575.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="32.0770%" y="565" width="0.2406%" height="15" fill="rgb(208,20,30)" fg:x="400" fg:w="3"/><text x="32.3270%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.3176%" y="565" width="0.1604%" height="15" fill="rgb(223,133,18)" fg:x="403" fg:w="2"/><text x="32.5676%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.3978%" y="549" width="0.0802%" height="15" fill="rgb(222,91,41)" fg:x="404" fg:w="1"/><text x="32.6478%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.4779%" y="549" width="0.0802%" height="15" fill="rgb(247,137,48)" fg:x="405" fg:w="1"/><text x="32.7279%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="32.5581%" y="549" width="0.1604%" height="15" fill="rgb(239,156,11)" fg:x="406" fg:w="2"/><text x="32.8081%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6383%" y="533" width="0.0802%" height="15" fill="rgb(244,56,26)" fg:x="407" fg:w="1"/><text x="32.8883%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="32.8789%" y="533" width="0.1604%" height="15" fill="rgb(205,131,49)" fg:x="410" fg:w="2"/><text x="33.1289%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.0393%" y="533" width="0.0802%" height="15" fill="rgb(224,0,2)" fg:x="412" fg:w="1"/><text x="33.2893%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="33.1195%" y="533" width="0.1604%" height="15" fill="rgb(247,59,36)" fg:x="413" fg:w="2"/><text x="33.3695%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.1195%" y="517" width="0.1604%" height="15" fill="rgb(215,4,47)" fg:x="413" fg:w="2"/><text x="33.3695%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.1997%" y="501" width="0.0802%" height="15" fill="rgb(242,72,42)" fg:x="414" fg:w="1"/><text x="33.4497%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1997%" y="485" width="0.0802%" height="15" fill="rgb(232,145,44)" fg:x="414" fg:w="1"/><text x="33.4497%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (23 samples, 1.84%)</title><rect x="31.5958%" y="613" width="1.8444%" height="15" fill="rgb(205,108,43)" fg:x="394" fg:w="23"/><text x="31.8458%" y="623.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (23 samples, 1.84%)</title><rect x="31.5958%" y="597" width="1.8444%" height="15" fill="rgb(215,190,17)" fg:x="394" fg:w="23"/><text x="31.8458%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.36%)</title><rect x="32.0770%" y="581" width="1.3633%" height="15" fill="rgb(223,90,34)" fg:x="400" fg:w="17"/><text x="32.3270%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.96%)</title><rect x="32.4779%" y="565" width="0.9623%" height="15" fill="rgb(216,25,0)" fg:x="405" fg:w="12"/><text x="32.7279%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="32.7185%" y="549" width="0.7217%" height="15" fill="rgb(223,51,28)" fg:x="408" fg:w="9"/><text x="32.9685%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.2799%" y="533" width="0.1604%" height="15" fill="rgb(227,131,7)" fg:x="415" fg:w="2"/><text x="33.5299%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.3601%" y="517" width="0.0802%" height="15" fill="rgb(216,72,36)" fg:x="416" fg:w="1"/><text x="33.6101%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.3601%" y="501" width="0.0802%" height="15" fill="rgb(243,158,40)" fg:x="416" fg:w="1"/><text x="33.6101%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="33.4403%" y="565" width="0.1604%" height="15" fill="rgb(218,60,54)" fg:x="417" fg:w="2"/><text x="33.6903%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.5204%" y="549" width="0.0802%" height="15" fill="rgb(230,15,46)" fg:x="418" fg:w="1"/><text x="33.7704%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="33.5204%" y="533" width="0.0802%" height="15" fill="rgb(250,22,26)" fg:x="418" fg:w="1"/><text x="33.7704%" y="543.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (27 samples, 2.17%)</title><rect x="31.5156%" y="629" width="2.1652%" height="15" fill="rgb(239,194,40)" fg:x="393" fg:w="27"/><text x="31.7656%" y="639.50">&lt;..</text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="33.4403%" y="613" width="0.2406%" height="15" fill="rgb(219,62,9)" fg:x="417" fg:w="3"/><text x="33.6903%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="33.4403%" y="597" width="0.2406%" height="15" fill="rgb(228,45,21)" fg:x="417" fg:w="3"/><text x="33.6903%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="33.4403%" y="581" width="0.2406%" height="15" fill="rgb(242,56,44)" fg:x="417" fg:w="3"/><text x="33.6903%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="33.6006%" y="565" width="0.0802%" height="15" fill="rgb(239,170,14)" fg:x="419" fg:w="1"/><text x="33.8506%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="33.7610%" y="597" width="0.3208%" height="15" fill="rgb(236,150,13)" fg:x="421" fg:w="4"/><text x="34.0110%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.8412%" y="581" width="0.2406%" height="15" fill="rgb(228,15,30)" fg:x="422" fg:w="3"/><text x="34.0912%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="34.0016%" y="565" width="0.0802%" height="15" fill="rgb(217,43,28)" fg:x="424" fg:w="1"/><text x="34.2516%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.1620%" y="581" width="0.0802%" height="15" fill="rgb(246,223,1)" fg:x="426" fg:w="1"/><text x="34.4120%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2422%" y="565" width="0.0802%" height="15" fill="rgb(247,103,7)" fg:x="427" fg:w="1"/><text x="34.4922%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.32%)</title><rect x="34.0818%" y="597" width="0.3208%" height="15" fill="rgb(205,105,39)" fg:x="425" fg:w="4"/><text x="34.3318%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.2422%" y="581" width="0.1604%" height="15" fill="rgb(216,134,18)" fg:x="427" fg:w="2"/><text x="34.4922%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3224%" y="565" width="0.0802%" height="15" fill="rgb(226,139,50)" fg:x="428" fg:w="1"/><text x="34.5724%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3224%" y="549" width="0.0802%" height="15" fill="rgb(251,152,38)" fg:x="428" fg:w="1"/><text x="34.5724%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.3224%" y="533" width="0.0802%" height="15" fill="rgb(222,63,15)" fg:x="428" fg:w="1"/><text x="34.5724%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="34.4026%" y="565" width="0.1604%" height="15" fill="rgb(212,198,28)" fg:x="429" fg:w="2"/><text x="34.6526%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="34.7233%" y="549" width="0.0802%" height="15" fill="rgb(216,93,38)" fg:x="433" fg:w="1"/><text x="34.9733%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="34.7233%" y="533" width="0.0802%" height="15" fill="rgb(247,202,44)" fg:x="433" fg:w="1"/><text x="34.9733%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="34.9639%" y="517" width="0.2406%" height="15" fill="rgb(237,204,46)" fg:x="436" fg:w="3"/><text x="35.2139%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.0441%" y="501" width="0.1604%" height="15" fill="rgb(224,98,48)" fg:x="437" fg:w="2"/><text x="35.2941%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.0441%" y="485" width="0.1604%" height="15" fill="rgb(247,105,21)" fg:x="437" fg:w="2"/><text x="35.2941%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="35.3649%" y="501" width="0.0802%" height="15" fill="rgb(212,137,52)" fg:x="441" fg:w="1"/><text x="35.6149%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.04%)</title><rect x="34.5630%" y="565" width="1.0425%" height="15" fill="rgb(223,76,33)" fg:x="431" fg:w="13"/><text x="34.8130%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.80%)</title><rect x="34.8035%" y="549" width="0.8019%" height="15" fill="rgb(209,156,27)" fg:x="434" fg:w="10"/><text x="35.0535%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="34.9639%" y="533" width="0.6415%" height="15" fill="rgb(249,81,54)" fg:x="436" fg:w="8"/><text x="35.2139%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="35.2045%" y="517" width="0.4010%" height="15" fill="rgb(241,46,29)" fg:x="439" fg:w="5"/><text x="35.4545%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="35.4451%" y="501" width="0.1604%" height="15" fill="rgb(213,193,39)" fg:x="442" fg:w="2"/><text x="35.6951%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4451%" y="485" width="0.1604%" height="15" fill="rgb(214,85,16)" fg:x="442" fg:w="2"/><text x="35.6951%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.4451%" y="469" width="0.1604%" height="15" fill="rgb(216,184,17)" fg:x="442" fg:w="2"/><text x="35.6951%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="35.4451%" y="453" width="0.1604%" height="15" fill="rgb(254,219,29)" fg:x="442" fg:w="2"/><text x="35.6951%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.28%)</title><rect x="34.4026%" y="581" width="1.2831%" height="15" fill="rgb(209,148,34)" fg:x="429" fg:w="16"/><text x="34.6526%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="35.6055%" y="565" width="0.0802%" height="15" fill="rgb(253,215,11)" fg:x="444" fg:w="1"/><text x="35.8555%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6055%" y="549" width="0.0802%" height="15" fill="rgb(232,126,20)" fg:x="444" fg:w="1"/><text x="35.8555%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.6856%" y="581" width="0.0802%" height="15" fill="rgb(248,118,51)" fg:x="445" fg:w="1"/><text x="35.9356%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (28 samples, 2.25%)</title><rect x="33.6808%" y="629" width="2.2454%" height="15" fill="rgb(226,121,21)" fg:x="420" fg:w="28"/><text x="33.9308%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (27 samples, 2.17%)</title><rect x="33.7610%" y="613" width="2.1652%" height="15" fill="rgb(216,128,16)" fg:x="421" fg:w="27"/><text x="34.0110%" y="623.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.52%)</title><rect x="34.4026%" y="597" width="1.5237%" height="15" fill="rgb(205,17,9)" fg:x="429" fg:w="19"/><text x="34.6526%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="35.7658%" y="581" width="0.1604%" height="15" fill="rgb(206,197,21)" fg:x="446" fg:w="2"/><text x="36.0158%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="35.8460%" y="565" width="0.0802%" height="15" fill="rgb(212,202,9)" fg:x="447" fg:w="1"/><text x="36.0960%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="35.8460%" y="549" width="0.0802%" height="15" fill="rgb(241,131,50)" fg:x="447" fg:w="1"/><text x="36.0960%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="36.3272%" y="485" width="0.1604%" height="15" fill="rgb(228,115,51)" fg:x="453" fg:w="2"/><text x="36.5772%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.3272%" y="469" width="0.1604%" height="15" fill="rgb(237,209,8)" fg:x="453" fg:w="2"/><text x="36.5772%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.6480%" y="453" width="0.1604%" height="15" fill="rgb(241,121,28)" fg:x="457" fg:w="2"/><text x="36.8980%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.7281%" y="437" width="0.0802%" height="15" fill="rgb(238,194,51)" fg:x="458" fg:w="1"/><text x="36.9781%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7281%" y="421" width="0.0802%" height="15" fill="rgb(208,41,39)" fg:x="458" fg:w="1"/><text x="36.9781%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="36.5678%" y="469" width="0.3208%" height="15" fill="rgb(223,95,44)" fg:x="456" fg:w="4"/><text x="36.8178%" y="479.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="36.8083%" y="453" width="0.0802%" height="15" fill="rgb(253,98,40)" fg:x="459" fg:w="1"/><text x="37.0583%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.8885%" y="469" width="0.0802%" height="15" fill="rgb(210,5,12)" fg:x="460" fg:w="1"/><text x="37.1385%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.8885%" y="453" width="0.0802%" height="15" fill="rgb(233,201,23)" fg:x="460" fg:w="1"/><text x="37.1385%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="36.3272%" y="501" width="0.8019%" height="15" fill="rgb(251,68,15)" fg:x="453" fg:w="10"/><text x="36.5772%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="36.4876%" y="485" width="0.6415%" height="15" fill="rgb(243,10,46)" fg:x="455" fg:w="8"/><text x="36.7376%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="36.9687%" y="469" width="0.1604%" height="15" fill="rgb(253,130,44)" fg:x="461" fg:w="2"/><text x="37.2187%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.0489%" y="453" width="0.0802%" height="15" fill="rgb(244,5,26)" fg:x="462" fg:w="1"/><text x="37.2989%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.0489%" y="437" width="0.0802%" height="15" fill="rgb(220,126,20)" fg:x="462" fg:w="1"/><text x="37.2989%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.1291%" y="501" width="0.0802%" height="15" fill="rgb(212,188,29)" fg:x="463" fg:w="1"/><text x="37.3791%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="37.1291%" y="485" width="0.0802%" height="15" fill="rgb(227,194,48)" fg:x="463" fg:w="1"/><text x="37.3791%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.28%)</title><rect x="36.0064%" y="533" width="1.2831%" height="15" fill="rgb(245,64,28)" fg:x="449" fg:w="16"/><text x="36.2564%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (14 samples, 1.12%)</title><rect x="36.1668%" y="517" width="1.1227%" height="15" fill="rgb(205,44,7)" fg:x="451" fg:w="14"/><text x="36.4168%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2093%" y="501" width="0.0802%" height="15" fill="rgb(213,193,11)" fg:x="464" fg:w="1"/><text x="37.4593%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.2093%" y="485" width="0.0802%" height="15" fill="rgb(238,157,6)" fg:x="464" fg:w="1"/><text x="37.4593%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.2093%" y="469" width="0.0802%" height="15" fill="rgb(222,73,7)" fg:x="464" fg:w="1"/><text x="37.4593%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="37.2895%" y="533" width="0.0802%" height="15" fill="rgb(224,78,15)" fg:x="465" fg:w="1"/><text x="37.5395%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.44%)</title><rect x="36.0064%" y="565" width="1.4435%" height="15" fill="rgb(218,149,46)" fg:x="449" fg:w="18"/><text x="36.2564%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (18 samples, 1.44%)</title><rect x="36.0064%" y="549" width="1.4435%" height="15" fill="rgb(218,175,44)" fg:x="449" fg:w="18"/><text x="36.2564%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3697%" y="533" width="0.0802%" height="15" fill="rgb(215,183,45)" fg:x="466" fg:w="1"/><text x="37.6197%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.3697%" y="517" width="0.0802%" height="15" fill="rgb(226,116,37)" fg:x="466" fg:w="1"/><text x="37.6197%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.3697%" y="501" width="0.0802%" height="15" fill="rgb(252,224,12)" fg:x="466" fg:w="1"/><text x="37.6197%" y="511.50"></text></g><g><title>engine::session::state::State::close (142 samples, 11.39%)</title><rect x="26.1427%" y="725" width="11.3873%" height="15" fill="rgb(232,212,21)" fg:x="326" fg:w="142"/><text x="26.3927%" y="735.50">engine::session::..</text></g><g><title>engine::session::state::State::flush_entities (116 samples, 9.30%)</title><rect x="28.2277%" y="709" width="9.3023%" height="15" fill="rgb(226,191,16)" fg:x="352" fg:w="116"/><text x="28.4777%" y="719.50">engine::sessi..</text></g><g><title>core::iter::adapters::try_process (113 samples, 9.06%)</title><rect x="28.4683%" y="693" width="9.0617%" height="15" fill="rgb(231,156,11)" fg:x="355" fg:w="113"/><text x="28.7183%" y="703.50">core::iter::a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (113 samples, 9.06%)</title><rect x="28.4683%" y="677" width="9.0617%" height="15" fill="rgb(225,134,49)" fg:x="355" fg:w="113"/><text x="28.7183%" y="687.50">&lt;alloc::vec::..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (111 samples, 8.90%)</title><rect x="28.6287%" y="661" width="8.9014%" height="15" fill="rgb(254,55,32)" fg:x="357" fg:w="111"/><text x="28.8787%" y="671.50">engine::sessi..</text></g><g><title>kernel::model::any_entity_changes (76 samples, 6.09%)</title><rect x="31.4354%" y="645" width="6.0946%" height="15" fill="rgb(242,195,29)" fg:x="392" fg:w="76"/><text x="31.6854%" y="655.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (20 samples, 1.60%)</title><rect x="35.9262%" y="629" width="1.6038%" height="15" fill="rgb(210,155,20)" fg:x="448" fg:w="20"/><text x="36.1762%" y="639.50"></text></g><g><title>serde_json::de::from_trait (20 samples, 1.60%)</title><rect x="35.9262%" y="613" width="1.6038%" height="15" fill="rgb(243,170,23)" fg:x="448" fg:w="20"/><text x="36.1762%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.60%)</title><rect x="35.9262%" y="597" width="1.6038%" height="15" fill="rgb(242,197,51)" fg:x="448" fg:w="20"/><text x="36.1762%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (20 samples, 1.60%)</title><rect x="35.9262%" y="581" width="1.6038%" height="15" fill="rgb(248,48,13)" fg:x="448" fg:w="20"/><text x="36.1762%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="37.4499%" y="565" width="0.0802%" height="15" fill="rgb(221,185,15)" fg:x="467" fg:w="1"/><text x="37.6999%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="37.5301%" y="725" width="0.0802%" height="15" fill="rgb(244,49,7)" fg:x="468" fg:w="1"/><text x="37.7801%" y="735.50"></text></g><g><title>engine::session::Session::close (145 samples, 11.63%)</title><rect x="26.0626%" y="741" width="11.6279%" height="15" fill="rgb(213,182,52)" fg:x="325" fg:w="145"/><text x="26.3126%" y="751.50">engine::session::..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="37.6103%" y="725" width="0.0802%" height="15" fill="rgb(209,15,45)" fg:x="469" fg:w="1"/><text x="37.8603%" y="735.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="37.6103%" y="709" width="0.0802%" height="15" fill="rgb(233,23,44)" fg:x="469" fg:w="1"/><text x="37.8603%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="37.6103%" y="693" width="0.0802%" height="15" fill="rgb(220,182,30)" fg:x="469" fg:w="1"/><text x="37.8603%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="37.6103%" y="677" width="0.0802%" height="15" fill="rgb(219,116,33)" fg:x="469" fg:w="1"/><text x="37.8603%" y="687.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="37.6103%" y="661" width="0.0802%" height="15" fill="rgb(231,15,21)" fg:x="469" fg:w="1"/><text x="37.8603%" y="671.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="37.7706%" y="581" width="0.0802%" height="15" fill="rgb(238,119,25)" fg:x="471" fg:w="1"/><text x="38.0206%" y="591.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.7706%" y="565" width="0.0802%" height="15" fill="rgb(232,30,39)" fg:x="471" fg:w="1"/><text x="38.0206%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="38.0112%" y="533" width="0.0802%" height="15" fill="rgb(241,26,30)" fg:x="474" fg:w="1"/><text x="38.2612%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0112%" y="517" width="0.0802%" height="15" fill="rgb(234,154,4)" fg:x="474" fg:w="1"/><text x="38.2612%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.0112%" y="501" width="0.0802%" height="15" fill="rgb(229,199,39)" fg:x="474" fg:w="1"/><text x="38.2612%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.0112%" y="485" width="0.0802%" height="15" fill="rgb(236,213,10)" fg:x="474" fg:w="1"/><text x="38.2612%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.0112%" y="469" width="0.0802%" height="15" fill="rgb(247,28,19)" fg:x="474" fg:w="1"/><text x="38.2612%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.0112%" y="453" width="0.0802%" height="15" fill="rgb(239,199,24)" fg:x="474" fg:w="1"/><text x="38.2612%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0112%" y="437" width="0.0802%" height="15" fill="rgb(246,122,13)" fg:x="474" fg:w="1"/><text x="38.2612%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.0112%" y="421" width="0.0802%" height="15" fill="rgb(210,203,29)" fg:x="474" fg:w="1"/><text x="38.2612%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.0112%" y="405" width="0.0802%" height="15" fill="rgb(218,4,50)" fg:x="474" fg:w="1"/><text x="38.2612%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.0112%" y="389" width="0.0802%" height="15" fill="rgb(236,142,48)" fg:x="474" fg:w="1"/><text x="38.2612%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.0112%" y="373" width="0.0802%" height="15" fill="rgb(245,173,2)" fg:x="474" fg:w="1"/><text x="38.2612%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.0112%" y="357" width="0.0802%" height="15" fill="rgb(244,196,18)" fg:x="474" fg:w="1"/><text x="38.2612%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.0112%" y="341" width="0.0802%" height="15" fill="rgb(221,27,33)" fg:x="474" fg:w="1"/><text x="38.2612%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.0914%" y="469" width="0.0802%" height="15" fill="rgb(210,206,16)" fg:x="475" fg:w="1"/><text x="38.3414%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="37.9310%" y="565" width="0.3208%" height="15" fill="rgb(238,161,34)" fg:x="473" fg:w="4"/><text x="38.1810%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="38.0112%" y="549" width="0.2406%" height="15" fill="rgb(243,118,39)" fg:x="474" fg:w="3"/><text x="38.2612%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.0914%" y="533" width="0.1604%" height="15" fill="rgb(234,126,9)" fg:x="475" fg:w="2"/><text x="38.3414%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0914%" y="517" width="0.1604%" height="15" fill="rgb(234,167,42)" fg:x="475" fg:w="2"/><text x="38.3414%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="38.0914%" y="501" width="0.1604%" height="15" fill="rgb(238,54,48)" fg:x="475" fg:w="2"/><text x="38.3414%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.0914%" y="485" width="0.1604%" height="15" fill="rgb(226,105,2)" fg:x="475" fg:w="2"/><text x="38.3414%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.1716%" y="469" width="0.0802%" height="15" fill="rgb(223,95,23)" fg:x="476" fg:w="1"/><text x="38.4216%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.1716%" y="453" width="0.0802%" height="15" fill="rgb(249,212,19)" fg:x="476" fg:w="1"/><text x="38.4216%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2518%" y="501" width="0.0802%" height="15" fill="rgb(234,158,54)" fg:x="477" fg:w="1"/><text x="38.5018%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="38.2518%" y="565" width="0.1604%" height="15" fill="rgb(247,114,32)" fg:x="477" fg:w="2"/><text x="38.5018%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="38.2518%" y="549" width="0.1604%" height="15" fill="rgb(250,68,44)" fg:x="477" fg:w="2"/><text x="38.5018%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="38.2518%" y="533" width="0.1604%" height="15" fill="rgb(242,3,15)" fg:x="477" fg:w="2"/><text x="38.5018%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="38.2518%" y="517" width="0.1604%" height="15" fill="rgb(223,110,32)" fg:x="477" fg:w="2"/><text x="38.5018%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.3320%" y="501" width="0.0802%" height="15" fill="rgb(216,26,54)" fg:x="478" fg:w="1"/><text x="38.5820%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.3320%" y="485" width="0.0802%" height="15" fill="rgb(209,145,42)" fg:x="478" fg:w="1"/><text x="38.5820%" y="495.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (10 samples, 0.80%)</title><rect x="37.7706%" y="613" width="0.8019%" height="15" fill="rgb(240,111,53)" fg:x="471" fg:w="10"/><text x="38.0206%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (10 samples, 0.80%)</title><rect x="37.7706%" y="597" width="0.8019%" height="15" fill="rgb(209,101,4)" fg:x="471" fg:w="10"/><text x="38.0206%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (9 samples, 0.72%)</title><rect x="37.8508%" y="581" width="0.7217%" height="15" fill="rgb(231,74,29)" fg:x="472" fg:w="9"/><text x="38.1008%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="38.4122%" y="565" width="0.1604%" height="15" fill="rgb(223,12,12)" fg:x="479" fg:w="2"/><text x="38.6622%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="38.4122%" y="549" width="0.1604%" height="15" fill="rgb(207,162,2)" fg:x="479" fg:w="2"/><text x="38.6622%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="38.4122%" y="533" width="0.1604%" height="15" fill="rgb(230,152,0)" fg:x="479" fg:w="2"/><text x="38.6622%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="38.4122%" y="517" width="0.1604%" height="15" fill="rgb(254,156,19)" fg:x="479" fg:w="2"/><text x="38.6622%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.4924%" y="501" width="0.0802%" height="15" fill="rgb(250,28,0)" fg:x="480" fg:w="1"/><text x="38.7424%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.4924%" y="485" width="0.0802%" height="15" fill="rgb(253,27,5)" fg:x="480" fg:w="1"/><text x="38.7424%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="38.4924%" y="469" width="0.0802%" height="15" fill="rgb(244,154,7)" fg:x="480" fg:w="1"/><text x="38.7424%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="38.4924%" y="453" width="0.0802%" height="15" fill="rgb(242,108,21)" fg:x="480" fg:w="1"/><text x="38.7424%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="38.4924%" y="437" width="0.0802%" height="15" fill="rgb(254,200,38)" fg:x="480" fg:w="1"/><text x="38.7424%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="38.4924%" y="421" width="0.0802%" height="15" fill="rgb(250,145,41)" fg:x="480" fg:w="1"/><text x="38.7424%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.4924%" y="405" width="0.0802%" height="15" fill="rgb(235,136,31)" fg:x="480" fg:w="1"/><text x="38.7424%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="38.4924%" y="389" width="0.0802%" height="15" fill="rgb(215,13,18)" fg:x="480" fg:w="1"/><text x="38.7424%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.4924%" y="373" width="0.0802%" height="15" fill="rgb(238,199,12)" fg:x="480" fg:w="1"/><text x="38.7424%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="38.4924%" y="357" width="0.0802%" height="15" fill="rgb(242,179,49)" fg:x="480" fg:w="1"/><text x="38.7424%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.4924%" y="341" width="0.0802%" height="15" fill="rgb(214,10,44)" fg:x="480" fg:w="1"/><text x="38.7424%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="38.4924%" y="325" width="0.0802%" height="15" fill="rgb(229,181,11)" fg:x="480" fg:w="1"/><text x="38.7424%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="38.4924%" y="309" width="0.0802%" height="15" fill="rgb(244,155,10)" fg:x="480" fg:w="1"/><text x="38.7424%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="38.4924%" y="293" width="0.0802%" height="15" fill="rgb(254,13,48)" fg:x="480" fg:w="1"/><text x="38.7424%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.4924%" y="277" width="0.0802%" height="15" fill="rgb(210,164,6)" fg:x="480" fg:w="1"/><text x="38.7424%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5726%" y="613" width="0.0802%" height="15" fill="rgb(216,187,40)" fg:x="481" fg:w="1"/><text x="38.8226%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (2 samples, 0.16%)</title><rect x="38.6528%" y="613" width="0.1604%" height="15" fill="rgb(208,143,21)" fg:x="482" fg:w="2"/><text x="38.9028%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7330%" y="597" width="0.0802%" height="15" fill="rgb(211,73,41)" fg:x="483" fg:w="1"/><text x="38.9830%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (18 samples, 1.44%)</title><rect x="37.6905%" y="629" width="1.4435%" height="15" fill="rgb(244,69,21)" fg:x="470" fg:w="18"/><text x="37.9405%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.32%)</title><rect x="38.8132%" y="613" width="0.3208%" height="15" fill="rgb(230,152,32)" fg:x="484" fg:w="4"/><text x="39.0632%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="38.8132%" y="597" width="0.3208%" height="15" fill="rgb(208,110,18)" fg:x="484" fg:w="4"/><text x="39.0632%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="38.9735%" y="581" width="0.1604%" height="15" fill="rgb(214,201,49)" fg:x="486" fg:w="2"/><text x="39.2235%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9735%" y="565" width="0.1604%" height="15" fill="rgb(253,153,27)" fg:x="486" fg:w="2"/><text x="39.2235%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="38.9735%" y="549" width="0.1604%" height="15" fill="rgb(238,61,11)" fg:x="486" fg:w="2"/><text x="39.2235%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.0537%" y="533" width="0.0802%" height="15" fill="rgb(227,84,2)" fg:x="487" fg:w="1"/><text x="39.3037%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.0537%" y="517" width="0.0802%" height="15" fill="rgb(233,52,8)" fg:x="487" fg:w="1"/><text x="39.3037%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.0537%" y="501" width="0.0802%" height="15" fill="rgb(209,136,13)" fg:x="487" fg:w="1"/><text x="39.3037%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.0537%" y="485" width="0.0802%" height="15" fill="rgb(229,86,25)" fg:x="487" fg:w="1"/><text x="39.3037%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.0537%" y="469" width="0.0802%" height="15" fill="rgb(235,47,16)" fg:x="487" fg:w="1"/><text x="39.3037%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="39.0537%" y="453" width="0.0802%" height="15" fill="rgb(231,186,4)" fg:x="487" fg:w="1"/><text x="39.3037%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="39.0537%" y="437" width="0.0802%" height="15" fill="rgb(209,213,23)" fg:x="487" fg:w="1"/><text x="39.3037%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="39.1339%" y="581" width="0.0802%" height="15" fill="rgb(212,142,47)" fg:x="488" fg:w="1"/><text x="39.3839%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1339%" y="565" width="0.0802%" height="15" fill="rgb(251,86,24)" fg:x="488" fg:w="1"/><text x="39.3839%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2141%" y="533" width="0.0802%" height="15" fill="rgb(206,217,17)" fg:x="489" fg:w="1"/><text x="39.4641%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="39.2141%" y="517" width="0.0802%" height="15" fill="rgb(248,92,38)" fg:x="489" fg:w="1"/><text x="39.4641%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="39.2141%" y="549" width="0.1604%" height="15" fill="rgb(214,25,29)" fg:x="489" fg:w="2"/><text x="39.4641%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2943%" y="533" width="0.0802%" height="15" fill="rgb(245,117,13)" fg:x="490" fg:w="1"/><text x="39.5443%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="39.2943%" y="517" width="0.0802%" height="15" fill="rgb(205,169,9)" fg:x="490" fg:w="1"/><text x="39.5443%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="39.2943%" y="501" width="0.0802%" height="15" fill="rgb(223,134,38)" fg:x="490" fg:w="1"/><text x="39.5443%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="39.2943%" y="485" width="0.0802%" height="15" fill="rgb(249,129,49)" fg:x="490" fg:w="1"/><text x="39.5443%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="39.2943%" y="469" width="0.0802%" height="15" fill="rgb(229,157,45)" fg:x="490" fg:w="1"/><text x="39.5443%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2943%" y="453" width="0.0802%" height="15" fill="rgb(232,159,11)" fg:x="490" fg:w="1"/><text x="39.5443%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="39.2943%" y="437" width="0.0802%" height="15" fill="rgb(230,134,26)" fg:x="490" fg:w="1"/><text x="39.5443%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="39.2943%" y="421" width="0.0802%" height="15" fill="rgb(234,149,40)" fg:x="490" fg:w="1"/><text x="39.5443%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="39.2943%" y="405" width="0.0802%" height="15" fill="rgb(221,122,15)" fg:x="490" fg:w="1"/><text x="39.5443%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="39.2943%" y="389" width="0.0802%" height="15" fill="rgb(228,127,0)" fg:x="490" fg:w="1"/><text x="39.5443%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="39.2943%" y="373" width="0.0802%" height="15" fill="rgb(248,37,7)" fg:x="490" fg:w="1"/><text x="39.5443%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="39.2943%" y="357" width="0.0802%" height="15" fill="rgb(215,140,49)" fg:x="490" fg:w="1"/><text x="39.5443%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="39.3745%" y="485" width="0.0802%" height="15" fill="rgb(236,65,39)" fg:x="491" fg:w="1"/><text x="39.6245%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.4547%" y="453" width="0.0802%" height="15" fill="rgb(253,102,38)" fg:x="492" fg:w="1"/><text x="39.7047%" y="463.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (24 samples, 1.92%)</title><rect x="37.6905%" y="645" width="1.9246%" height="15" fill="rgb(244,100,34)" fg:x="470" fg:w="24"/><text x="37.9405%" y="655.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (6 samples, 0.48%)</title><rect x="39.1339%" y="629" width="0.4812%" height="15" fill="rgb(210,179,47)" fg:x="488" fg:w="6"/><text x="39.3839%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (6 samples, 0.48%)</title><rect x="39.1339%" y="613" width="0.4812%" height="15" fill="rgb(231,41,37)" fg:x="488" fg:w="6"/><text x="39.3839%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="39.1339%" y="597" width="0.4812%" height="15" fill="rgb(226,209,17)" fg:x="488" fg:w="6"/><text x="39.3839%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="39.2141%" y="581" width="0.4010%" height="15" fill="rgb(231,154,20)" fg:x="489" fg:w="5"/><text x="39.4641%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="39.2141%" y="565" width="0.4010%" height="15" fill="rgb(216,134,24)" fg:x="489" fg:w="5"/><text x="39.4641%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="39.3745%" y="549" width="0.2406%" height="15" fill="rgb(224,71,42)" fg:x="491" fg:w="3"/><text x="39.6245%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.3745%" y="533" width="0.2406%" height="15" fill="rgb(250,65,23)" fg:x="491" fg:w="3"/><text x="39.6245%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="39.3745%" y="517" width="0.2406%" height="15" fill="rgb(209,160,35)" fg:x="491" fg:w="3"/><text x="39.6245%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="39.3745%" y="501" width="0.2406%" height="15" fill="rgb(215,8,11)" fg:x="491" fg:w="3"/><text x="39.6245%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="39.4547%" y="485" width="0.1604%" height="15" fill="rgb(227,27,12)" fg:x="492" fg:w="2"/><text x="39.7047%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="39.4547%" y="469" width="0.1604%" height="15" fill="rgb(226,111,41)" fg:x="492" fg:w="2"/><text x="39.7047%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.5349%" y="453" width="0.0802%" height="15" fill="rgb(212,195,15)" fg:x="493" fg:w="1"/><text x="39.7849%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.6151%" y="645" width="0.0802%" height="15" fill="rgb(216,191,17)" fg:x="494" fg:w="1"/><text x="39.8651%" y="655.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="39.9358%" y="469" width="0.0802%" height="15" fill="rgb(215,57,44)" fg:x="498" fg:w="1"/><text x="40.1858%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="39.9358%" y="453" width="0.0802%" height="15" fill="rgb(209,38,4)" fg:x="498" fg:w="1"/><text x="40.1858%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="40.0160%" y="453" width="0.0802%" height="15" fill="rgb(238,49,31)" fg:x="499" fg:w="1"/><text x="40.2660%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0160%" y="437" width="0.0802%" height="15" fill="rgb(219,48,39)" fg:x="499" fg:w="1"/><text x="40.2660%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0160%" y="421" width="0.0802%" height="15" fill="rgb(252,223,43)" fg:x="499" fg:w="1"/><text x="40.2660%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.0160%" y="405" width="0.0802%" height="15" fill="rgb(247,205,46)" fg:x="499" fg:w="1"/><text x="40.2660%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.0160%" y="389" width="0.0802%" height="15" fill="rgb(231,16,40)" fg:x="499" fg:w="1"/><text x="40.2660%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.0160%" y="373" width="0.0802%" height="15" fill="rgb(231,115,5)" fg:x="499" fg:w="1"/><text x="40.2660%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0160%" y="357" width="0.0802%" height="15" fill="rgb(206,127,43)" fg:x="499" fg:w="1"/><text x="40.2660%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0160%" y="341" width="0.0802%" height="15" fill="rgb(218,101,9)" fg:x="499" fg:w="1"/><text x="40.2660%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.0160%" y="325" width="0.0802%" height="15" fill="rgb(235,138,50)" fg:x="499" fg:w="1"/><text x="40.2660%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.0160%" y="309" width="0.0802%" height="15" fill="rgb(214,197,52)" fg:x="499" fg:w="1"/><text x="40.2660%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.0160%" y="293" width="0.0802%" height="15" fill="rgb(230,80,19)" fg:x="499" fg:w="1"/><text x="40.2660%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.0160%" y="277" width="0.0802%" height="15" fill="rgb(224,77,16)" fg:x="499" fg:w="1"/><text x="40.2660%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="40.0962%" y="453" width="0.0802%" height="15" fill="rgb(246,4,13)" fg:x="500" fg:w="1"/><text x="40.3462%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.64%)</title><rect x="39.7755%" y="485" width="0.6415%" height="15" fill="rgb(220,177,26)" fg:x="496" fg:w="8"/><text x="40.0255%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="40.0160%" y="469" width="0.4010%" height="15" fill="rgb(215,114,45)" fg:x="499" fg:w="5"/><text x="40.2660%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.1764%" y="453" width="0.2406%" height="15" fill="rgb(215,71,54)" fg:x="501" fg:w="3"/><text x="40.4264%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.1764%" y="437" width="0.2406%" height="15" fill="rgb(211,155,22)" fg:x="501" fg:w="3"/><text x="40.4264%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.1764%" y="421" width="0.2406%" height="15" fill="rgb(245,206,18)" fg:x="501" fg:w="3"/><text x="40.4264%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.1764%" y="405" width="0.2406%" height="15" fill="rgb(248,216,48)" fg:x="501" fg:w="3"/><text x="40.4264%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="40.2566%" y="389" width="0.1604%" height="15" fill="rgb(244,84,45)" fg:x="502" fg:w="2"/><text x="40.5066%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="40.2566%" y="373" width="0.1604%" height="15" fill="rgb(245,13,45)" fg:x="502" fg:w="2"/><text x="40.5066%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3368%" y="357" width="0.0802%" height="15" fill="rgb(247,163,2)" fg:x="503" fg:w="1"/><text x="40.5868%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4170%" y="469" width="0.0802%" height="15" fill="rgb(211,175,10)" fg:x="504" fg:w="1"/><text x="40.6670%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="40.5774%" y="421" width="0.2406%" height="15" fill="rgb(215,186,31)" fg:x="506" fg:w="3"/><text x="40.8274%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.6576%" y="405" width="0.1604%" height="15" fill="rgb(207,42,11)" fg:x="507" fg:w="2"/><text x="40.9076%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.6576%" y="389" width="0.1604%" height="15" fill="rgb(224,197,20)" fg:x="507" fg:w="2"/><text x="40.9076%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.6576%" y="373" width="0.1604%" height="15" fill="rgb(244,119,36)" fg:x="507" fg:w="2"/><text x="40.9076%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.6576%" y="357" width="0.1604%" height="15" fill="rgb(250,60,27)" fg:x="507" fg:w="2"/><text x="40.9076%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.6576%" y="341" width="0.1604%" height="15" fill="rgb(252,202,1)" fg:x="507" fg:w="2"/><text x="40.9076%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.6576%" y="325" width="0.1604%" height="15" fill="rgb(206,53,25)" fg:x="507" fg:w="2"/><text x="40.9076%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.6576%" y="309" width="0.1604%" height="15" fill="rgb(210,88,4)" fg:x="507" fg:w="2"/><text x="40.9076%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="40.6576%" y="293" width="0.1604%" height="15" fill="rgb(211,144,28)" fg:x="507" fg:w="2"/><text x="40.9076%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="40.6576%" y="277" width="0.1604%" height="15" fill="rgb(247,81,32)" fg:x="507" fg:w="2"/><text x="40.9076%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="40.6576%" y="261" width="0.1604%" height="15" fill="rgb(225,192,11)" fg:x="507" fg:w="2"/><text x="40.9076%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="40.6576%" y="245" width="0.1604%" height="15" fill="rgb(232,212,27)" fg:x="507" fg:w="2"/><text x="40.9076%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.7378%" y="229" width="0.0802%" height="15" fill="rgb(239,3,29)" fg:x="508" fg:w="1"/><text x="40.9878%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8180%" y="421" width="0.0802%" height="15" fill="rgb(252,225,29)" fg:x="509" fg:w="1"/><text x="41.0680%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.8180%" y="405" width="0.0802%" height="15" fill="rgb(205,151,9)" fg:x="509" fg:w="1"/><text x="41.0680%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.8180%" y="389" width="0.0802%" height="15" fill="rgb(216,171,47)" fg:x="509" fg:w="1"/><text x="41.0680%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.8180%" y="373" width="0.0802%" height="15" fill="rgb(206,181,1)" fg:x="509" fg:w="1"/><text x="41.0680%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.8180%" y="357" width="0.0802%" height="15" fill="rgb(232,218,10)" fg:x="509" fg:w="1"/><text x="41.0680%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8180%" y="341" width="0.0802%" height="15" fill="rgb(244,222,51)" fg:x="509" fg:w="1"/><text x="41.0680%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="40.8180%" y="325" width="0.0802%" height="15" fill="rgb(252,215,16)" fg:x="509" fg:w="1"/><text x="41.0680%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.5774%" y="453" width="0.4010%" height="15" fill="rgb(212,130,13)" fg:x="506" fg:w="5"/><text x="40.8274%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="40.5774%" y="437" width="0.4010%" height="15" fill="rgb(227,103,37)" fg:x="506" fg:w="5"/><text x="40.8274%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.8982%" y="421" width="0.0802%" height="15" fill="rgb(249,48,15)" fg:x="510" fg:w="1"/><text x="41.1482%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="41.0585%" y="389" width="0.0802%" height="15" fill="rgb(225,96,9)" fg:x="512" fg:w="1"/><text x="41.3085%" y="399.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (18 samples, 1.44%)</title><rect x="39.7755%" y="501" width="1.4435%" height="15" fill="rgb(213,81,41)" fg:x="496" fg:w="18"/><text x="40.0255%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="40.4170%" y="485" width="0.8019%" height="15" fill="rgb(230,15,12)" fg:x="504" fg:w="10"/><text x="40.6670%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="40.4972%" y="469" width="0.7217%" height="15" fill="rgb(218,106,37)" fg:x="505" fg:w="9"/><text x="40.7472%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.9783%" y="453" width="0.2406%" height="15" fill="rgb(223,172,47)" fg:x="511" fg:w="3"/><text x="41.2283%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9783%" y="437" width="0.2406%" height="15" fill="rgb(246,180,49)" fg:x="511" fg:w="3"/><text x="41.2283%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.9783%" y="421" width="0.2406%" height="15" fill="rgb(231,63,37)" fg:x="511" fg:w="3"/><text x="41.2283%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.9783%" y="405" width="0.2406%" height="15" fill="rgb(235,70,40)" fg:x="511" fg:w="3"/><text x="41.2283%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.1387%" y="389" width="0.0802%" height="15" fill="rgb(250,54,26)" fg:x="513" fg:w="1"/><text x="41.3887%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="41.1387%" y="373" width="0.0802%" height="15" fill="rgb(214,190,1)" fg:x="513" fg:w="1"/><text x="41.3887%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::finding::EntityRelationship&gt; (1 samples, 0.08%)</title><rect x="41.2189%" y="469" width="0.0802%" height="15" fill="rgb(212,40,35)" fg:x="514" fg:w="1"/><text x="41.4689%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.2991%" y="453" width="0.0802%" height="15" fill="rgb(239,183,47)" fg:x="515" fg:w="1"/><text x="41.5491%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.3793%" y="453" width="0.0802%" height="15" fill="rgb(211,171,49)" fg:x="516" fg:w="1"/><text x="41.6293%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="41.5397%" y="373" width="0.0802%" height="15" fill="rgb(249,186,27)" fg:x="518" fg:w="1"/><text x="41.7897%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.5397%" y="357" width="0.0802%" height="15" fill="rgb(223,23,48)" fg:x="518" fg:w="1"/><text x="41.7897%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="41.6199%" y="357" width="0.0802%" height="15" fill="rgb(209,203,21)" fg:x="519" fg:w="1"/><text x="41.8699%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="41.5397%" y="389" width="0.4812%" height="15" fill="rgb(229,33,27)" fg:x="518" fg:w="6"/><text x="41.7897%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="41.6199%" y="373" width="0.4010%" height="15" fill="rgb(207,8,53)" fg:x="519" fg:w="5"/><text x="41.8699%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="41.7001%" y="357" width="0.3208%" height="15" fill="rgb(221,42,0)" fg:x="520" fg:w="4"/><text x="41.9501%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="41.7001%" y="341" width="0.3208%" height="15" fill="rgb(223,115,3)" fg:x="520" fg:w="4"/><text x="41.9501%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="41.8605%" y="325" width="0.1604%" height="15" fill="rgb(239,35,26)" fg:x="522" fg:w="2"/><text x="42.1105%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8605%" y="309" width="0.1604%" height="15" fill="rgb(233,22,9)" fg:x="522" fg:w="2"/><text x="42.1105%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.8605%" y="293" width="0.1604%" height="15" fill="rgb(236,221,48)" fg:x="522" fg:w="2"/><text x="42.1105%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.8605%" y="277" width="0.1604%" height="15" fill="rgb(235,52,30)" fg:x="522" fg:w="2"/><text x="42.1105%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="42.0209%" y="357" width="0.1604%" height="15" fill="rgb(238,133,51)" fg:x="524" fg:w="2"/><text x="42.2709%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.1010%" y="341" width="0.0802%" height="15" fill="rgb(213,122,23)" fg:x="525" fg:w="1"/><text x="42.3510%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.1010%" y="325" width="0.0802%" height="15" fill="rgb(225,8,15)" fg:x="525" fg:w="1"/><text x="42.3510%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1010%" y="309" width="0.0802%" height="15" fill="rgb(219,126,35)" fg:x="525" fg:w="1"/><text x="42.3510%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="42.1812%" y="357" width="0.0802%" height="15" fill="rgb(246,113,21)" fg:x="526" fg:w="1"/><text x="42.4312%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="42.1812%" y="341" width="0.0802%" height="15" fill="rgb(241,193,32)" fg:x="526" fg:w="1"/><text x="42.4312%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.1812%" y="325" width="0.0802%" height="15" fill="rgb(218,99,18)" fg:x="526" fg:w="1"/><text x="42.4312%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2614%" y="293" width="0.0802%" height="15" fill="rgb(225,114,4)" fg:x="527" fg:w="1"/><text x="42.5114%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2614%" y="277" width="0.0802%" height="15" fill="rgb(235,0,15)" fg:x="527" fg:w="1"/><text x="42.5114%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.4218%" y="261" width="0.0802%" height="15" fill="rgb(247,45,27)" fg:x="529" fg:w="1"/><text x="42.6718%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.56%)</title><rect x="42.0209%" y="389" width="0.5613%" height="15" fill="rgb(249,88,53)" fg:x="524" fg:w="7"/><text x="42.2709%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="42.0209%" y="373" width="0.5613%" height="15" fill="rgb(207,58,45)" fg:x="524" fg:w="7"/><text x="42.2709%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="42.2614%" y="357" width="0.3208%" height="15" fill="rgb(216,7,11)" fg:x="527" fg:w="4"/><text x="42.5114%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.2614%" y="341" width="0.3208%" height="15" fill="rgb(230,40,33)" fg:x="527" fg:w="4"/><text x="42.5114%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="42.2614%" y="325" width="0.3208%" height="15" fill="rgb(232,24,46)" fg:x="527" fg:w="4"/><text x="42.5114%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="42.2614%" y="309" width="0.3208%" height="15" fill="rgb(219,222,45)" fg:x="527" fg:w="4"/><text x="42.5114%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="42.3416%" y="293" width="0.2406%" height="15" fill="rgb(229,85,44)" fg:x="528" fg:w="3"/><text x="42.5916%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="42.3416%" y="277" width="0.2406%" height="15" fill="rgb(243,71,36)" fg:x="528" fg:w="3"/><text x="42.5916%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5020%" y="261" width="0.0802%" height="15" fill="rgb(230,203,45)" fg:x="530" fg:w="1"/><text x="42.7520%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5020%" y="245" width="0.0802%" height="15" fill="rgb(224,77,49)" fg:x="530" fg:w="1"/><text x="42.7520%" y="255.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (15 samples, 1.20%)</title><rect x="41.4595%" y="437" width="1.2029%" height="15" fill="rgb(210,186,47)" fg:x="517" fg:w="15"/><text x="41.7095%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (15 samples, 1.20%)</title><rect x="41.4595%" y="421" width="1.2029%" height="15" fill="rgb(232,146,10)" fg:x="517" fg:w="15"/><text x="41.7095%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (14 samples, 1.12%)</title><rect x="41.5397%" y="405" width="1.1227%" height="15" fill="rgb(236,185,51)" fg:x="518" fg:w="14"/><text x="41.7897%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.5822%" y="389" width="0.0802%" height="15" fill="rgb(223,206,43)" fg:x="531" fg:w="1"/><text x="42.8322%" y="399.50"></text></g><g><title>plugins_core::tools::contained_by (17 samples, 1.36%)</title><rect x="41.4595%" y="453" width="1.3633%" height="15" fill="rgb(227,212,9)" fg:x="517" fg:w="17"/><text x="41.7095%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="42.6624%" y="437" width="0.1604%" height="15" fill="rgb(205,82,3)" fg:x="532" fg:w="2"/><text x="42.9124%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.6624%" y="421" width="0.1604%" height="15" fill="rgb(214,2,27)" fg:x="532" fg:w="2"/><text x="42.9124%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="42.6624%" y="405" width="0.1604%" height="15" fill="rgb(241,37,22)" fg:x="532" fg:w="2"/><text x="42.9124%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="42.6624%" y="389" width="0.1604%" height="15" fill="rgb(219,182,1)" fg:x="532" fg:w="2"/><text x="42.9124%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="42.7426%" y="373" width="0.0802%" height="15" fill="rgb(208,224,23)" fg:x="533" fg:w="1"/><text x="42.9926%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="42.7426%" y="357" width="0.0802%" height="15" fill="rgb(219,121,32)" fg:x="533" fg:w="1"/><text x="42.9926%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.8228%" y="309" width="0.0802%" height="15" fill="rgb(253,13,40)" fg:x="534" fg:w="1"/><text x="43.0728%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.8228%" y="293" width="0.0802%" height="15" fill="rgb(233,6,28)" fg:x="534" fg:w="1"/><text x="43.0728%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="42.8228%" y="277" width="0.0802%" height="15" fill="rgb(233,73,8)" fg:x="534" fg:w="1"/><text x="43.0728%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.8228%" y="261" width="0.0802%" height="15" fill="rgb(223,48,27)" fg:x="534" fg:w="1"/><text x="43.0728%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.8228%" y="245" width="0.0802%" height="15" fill="rgb(231,98,37)" fg:x="534" fg:w="1"/><text x="43.0728%" y="255.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.8228%" y="229" width="0.0802%" height="15" fill="rgb(249,43,32)" fg:x="534" fg:w="1"/><text x="43.0728%" y="239.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.8228%" y="213" width="0.0802%" height="15" fill="rgb(246,184,20)" fg:x="534" fg:w="1"/><text x="43.0728%" y="223.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.8228%" y="197" width="0.0802%" height="15" fill="rgb(251,216,0)" fg:x="534" fg:w="1"/><text x="43.0728%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.8228%" y="181" width="0.0802%" height="15" fill="rgb(238,41,42)" fg:x="534" fg:w="1"/><text x="43.0728%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.8228%" y="165" width="0.0802%" height="15" fill="rgb(227,224,50)" fg:x="534" fg:w="1"/><text x="43.0728%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.8228%" y="149" width="0.0802%" height="15" fill="rgb(237,189,18)" fg:x="534" fg:w="1"/><text x="43.0728%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.8228%" y="133" width="0.0802%" height="15" fill="rgb(238,108,6)" fg:x="534" fg:w="1"/><text x="43.0728%" y="143.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.8228%" y="117" width="0.0802%" height="15" fill="rgb(214,197,53)" fg:x="534" fg:w="1"/><text x="43.0728%" y="127.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.8228%" y="101" width="0.0802%" height="15" fill="rgb(206,183,15)" fg:x="534" fg:w="1"/><text x="43.0728%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.8228%" y="85" width="0.0802%" height="15" fill="rgb(208,130,32)" fg:x="534" fg:w="1"/><text x="43.0728%" y="95.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="42.8228%" y="341" width="0.1604%" height="15" fill="rgb(226,128,52)" fg:x="534" fg:w="2"/><text x="43.0728%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="42.8228%" y="325" width="0.1604%" height="15" fill="rgb(231,183,21)" fg:x="534" fg:w="2"/><text x="43.0728%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="42.9030%" y="309" width="0.0802%" height="15" fill="rgb(216,8,35)" fg:x="535" fg:w="1"/><text x="43.1530%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="42.9030%" y="293" width="0.0802%" height="15" fill="rgb(224,221,8)" fg:x="535" fg:w="1"/><text x="43.1530%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="42.8228%" y="437" width="0.2406%" height="15" fill="rgb(210,111,33)" fg:x="534" fg:w="3"/><text x="43.0728%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="42.8228%" y="421" width="0.2406%" height="15" fill="rgb(232,211,38)" fg:x="534" fg:w="3"/><text x="43.0728%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="42.8228%" y="405" width="0.2406%" height="15" fill="rgb(216,190,27)" fg:x="534" fg:w="3"/><text x="43.0728%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="42.8228%" y="389" width="0.2406%" height="15" fill="rgb(237,215,27)" fg:x="534" fg:w="3"/><text x="43.0728%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="42.8228%" y="373" width="0.2406%" height="15" fill="rgb(251,121,39)" fg:x="534" fg:w="3"/><text x="43.0728%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="42.8228%" y="357" width="0.2406%" height="15" fill="rgb(244,21,14)" fg:x="534" fg:w="3"/><text x="43.0728%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="42.9832%" y="341" width="0.0802%" height="15" fill="rgb(221,192,22)" fg:x="536" fg:w="1"/><text x="43.2332%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="42.9832%" y="325" width="0.0802%" height="15" fill="rgb(251,190,28)" fg:x="536" fg:w="1"/><text x="43.2332%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="42.9832%" y="309" width="0.0802%" height="15" fill="rgb(217,4,51)" fg:x="536" fg:w="1"/><text x="43.2332%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="43.0634%" y="373" width="0.0802%" height="15" fill="rgb(215,183,49)" fg:x="537" fg:w="1"/><text x="43.3134%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="43.0634%" y="357" width="0.0802%" height="15" fill="rgb(249,28,49)" fg:x="537" fg:w="1"/><text x="43.3134%" y="367.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="43.0634%" y="341" width="0.0802%" height="15" fill="rgb(214,42,20)" fg:x="537" fg:w="1"/><text x="43.3134%" y="351.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (24 samples, 1.92%)</title><rect x="41.2991%" y="469" width="1.9246%" height="15" fill="rgb(222,77,27)" fg:x="515" fg:w="24"/><text x="41.5491%" y="479.50">p..</text></g><g><title>plugins_core::tools::occupied_by (5 samples, 0.40%)</title><rect x="42.8228%" y="453" width="0.4010%" height="15" fill="rgb(252,198,32)" fg:x="534" fg:w="5"/><text x="43.0728%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="43.0634%" y="437" width="0.1604%" height="15" fill="rgb(207,140,50)" fg:x="537" fg:w="2"/><text x="43.3134%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.0634%" y="421" width="0.1604%" height="15" fill="rgb(251,170,16)" fg:x="537" fg:w="2"/><text x="43.3134%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.0634%" y="405" width="0.1604%" height="15" fill="rgb(249,111,45)" fg:x="537" fg:w="2"/><text x="43.3134%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.0634%" y="389" width="0.1604%" height="15" fill="rgb(241,99,35)" fg:x="537" fg:w="2"/><text x="43.3134%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.1435%" y="373" width="0.0802%" height="15" fill="rgb(216,188,17)" fg:x="538" fg:w="1"/><text x="43.3935%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2237%" y="453" width="0.0802%" height="15" fill="rgb(254,209,53)" fg:x="539" fg:w="1"/><text x="43.4737%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (28 samples, 2.25%)</title><rect x="41.2189%" y="501" width="2.2454%" height="15" fill="rgb(231,105,41)" fg:x="514" fg:w="28"/><text x="41.4689%" y="511.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (28 samples, 2.25%)</title><rect x="41.2189%" y="485" width="2.2454%" height="15" fill="rgb(242,93,23)" fg:x="514" fg:w="28"/><text x="41.4689%" y="495.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="43.2237%" y="469" width="0.2406%" height="15" fill="rgb(218,159,11)" fg:x="539" fg:w="3"/><text x="43.4737%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="43.3039%" y="453" width="0.1604%" height="15" fill="rgb(209,90,32)" fg:x="540" fg:w="2"/><text x="43.5539%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="43.3039%" y="437" width="0.1604%" height="15" fill="rgb(253,118,46)" fg:x="540" fg:w="2"/><text x="43.5539%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="43.3039%" y="421" width="0.1604%" height="15" fill="rgb(219,121,2)" fg:x="540" fg:w="2"/><text x="43.5539%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="43.3039%" y="405" width="0.1604%" height="15" fill="rgb(207,57,47)" fg:x="540" fg:w="2"/><text x="43.5539%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="43.3039%" y="389" width="0.1604%" height="15" fill="rgb(235,113,43)" fg:x="540" fg:w="2"/><text x="43.5539%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="43.3039%" y="373" width="0.1604%" height="15" fill="rgb(238,30,50)" fg:x="540" fg:w="2"/><text x="43.5539%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.3039%" y="357" width="0.1604%" height="15" fill="rgb(237,47,29)" fg:x="540" fg:w="2"/><text x="43.5539%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="43.3039%" y="341" width="0.1604%" height="15" fill="rgb(245,102,24)" fg:x="540" fg:w="2"/><text x="43.5539%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="43.3039%" y="325" width="0.1604%" height="15" fill="rgb(245,152,9)" fg:x="540" fg:w="2"/><text x="43.5539%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3841%" y="309" width="0.0802%" height="15" fill="rgb(223,213,17)" fg:x="541" fg:w="1"/><text x="43.6341%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3841%" y="293" width="0.0802%" height="15" fill="rgb(241,164,4)" fg:x="541" fg:w="1"/><text x="43.6341%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (3 samples, 0.24%)</title><rect x="43.4643%" y="485" width="0.2406%" height="15" fill="rgb(205,209,31)" fg:x="542" fg:w="3"/><text x="43.7143%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="43.5445%" y="469" width="0.1604%" height="15" fill="rgb(248,173,2)" fg:x="543" fg:w="2"/><text x="43.7945%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="43.6247%" y="453" width="0.0802%" height="15" fill="rgb(207,67,32)" fg:x="544" fg:w="1"/><text x="43.8747%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="437" width="0.0802%" height="15" fill="rgb(239,109,13)" fg:x="544" fg:w="1"/><text x="43.8747%" y="447.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="421" width="0.0802%" height="15" fill="rgb(233,123,24)" fg:x="544" fg:w="1"/><text x="43.8747%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="405" width="0.0802%" height="15" fill="rgb(232,120,19)" fg:x="544" fg:w="1"/><text x="43.8747%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="389" width="0.0802%" height="15" fill="rgb(225,17,50)" fg:x="544" fg:w="1"/><text x="43.8747%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="373" width="0.0802%" height="15" fill="rgb(239,216,13)" fg:x="544" fg:w="1"/><text x="43.8747%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="43.6247%" y="357" width="0.0802%" height="15" fill="rgb(232,213,26)" fg:x="544" fg:w="1"/><text x="43.8747%" y="367.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="43.6247%" y="341" width="0.0802%" height="15" fill="rgb(244,59,39)" fg:x="544" fg:w="1"/><text x="43.8747%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="43.6247%" y="325" width="0.0802%" height="15" fill="rgb(234,61,35)" fg:x="544" fg:w="1"/><text x="43.8747%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.08%)</title><rect x="43.6247%" y="309" width="0.0802%" height="15" fill="rgb(245,94,24)" fg:x="544" fg:w="1"/><text x="43.8747%" y="319.50"></text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="43.6247%" y="293" width="0.0802%" height="15" fill="rgb(238,190,44)" fg:x="544" fg:w="1"/><text x="43.8747%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="43.6247%" y="277" width="0.0802%" height="15" fill="rgb(205,145,25)" fg:x="544" fg:w="1"/><text x="43.8747%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.6247%" y="261" width="0.0802%" height="15" fill="rgb(229,158,41)" fg:x="544" fg:w="1"/><text x="43.8747%" y="271.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="43.6247%" y="245" width="0.0802%" height="15" fill="rgb(224,121,5)" fg:x="544" fg:w="1"/><text x="43.8747%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="43.6247%" y="229" width="0.0802%" height="15" fill="rgb(238,168,35)" fg:x="544" fg:w="1"/><text x="43.8747%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="43.7049%" y="469" width="0.0802%" height="15" fill="rgb(231,11,42)" fg:x="545" fg:w="1"/><text x="43.9549%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="43.7049%" y="453" width="0.0802%" height="15" fill="rgb(241,105,19)" fg:x="545" fg:w="1"/><text x="43.9549%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="43.7049%" y="437" width="0.0802%" height="15" fill="rgb(253,210,20)" fg:x="545" fg:w="1"/><text x="43.9549%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::end (1 samples, 0.08%)</title><rect x="43.7851%" y="453" width="0.0802%" height="15" fill="rgb(215,72,52)" fg:x="546" fg:w="1"/><text x="44.0351%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7851%" y="437" width="0.0802%" height="15" fill="rgb(223,225,30)" fg:x="546" fg:w="1"/><text x="44.0351%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.7851%" y="421" width="0.0802%" height="15" fill="rgb(220,138,44)" fg:x="546" fg:w="1"/><text x="44.0351%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.7851%" y="405" width="0.0802%" height="15" fill="rgb(206,128,12)" fg:x="546" fg:w="1"/><text x="44.0351%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.8653%" y="453" width="0.1604%" height="15" fill="rgb(245,194,0)" fg:x="547" fg:w="2"/><text x="44.1153%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (2 samples, 0.16%)</title><rect x="43.8653%" y="437" width="0.1604%" height="15" fill="rgb(235,175,41)" fg:x="547" fg:w="2"/><text x="44.1153%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.8653%" y="421" width="0.1604%" height="15" fill="rgb(216,15,48)" fg:x="547" fg:w="2"/><text x="44.1153%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.8653%" y="405" width="0.1604%" height="15" fill="rgb(223,179,5)" fg:x="547" fg:w="2"/><text x="44.1153%" y="415.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (5 samples, 0.40%)</title><rect x="43.7049%" y="485" width="0.4010%" height="15" fill="rgb(220,80,15)" fg:x="545" fg:w="5"/><text x="43.9549%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (4 samples, 0.32%)</title><rect x="43.7851%" y="469" width="0.3208%" height="15" fill="rgb(228,20,30)" fg:x="546" fg:w="4"/><text x="44.0351%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct_variant (1 samples, 0.08%)</title><rect x="44.0257%" y="453" width="0.0802%" height="15" fill="rgb(229,194,27)" fg:x="549" fg:w="1"/><text x="44.2757%" y="463.50"></text></g><g><title>plugins_core::library::actions::reply_ok (10 samples, 0.80%)</title><rect x="43.4643%" y="501" width="0.8019%" height="15" fill="rgb(238,202,32)" fg:x="542" fg:w="10"/><text x="43.7143%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (2 samples, 0.16%)</title><rect x="44.1059%" y="485" width="0.1604%" height="15" fill="rgb(207,82,27)" fg:x="550" fg:w="2"/><text x="44.3559%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.1059%" y="469" width="0.1604%" height="15" fill="rgb(246,122,46)" fg:x="550" fg:w="2"/><text x="44.3559%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2662%" y="421" width="0.0802%" height="15" fill="rgb(220,101,26)" fg:x="552" fg:w="1"/><text x="44.5162%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.2662%" y="405" width="0.0802%" height="15" fill="rgb(251,63,9)" fg:x="552" fg:w="1"/><text x="44.5162%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="44.2662%" y="453" width="0.1604%" height="15" fill="rgb(235,186,5)" fg:x="552" fg:w="2"/><text x="44.5162%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="44.2662%" y="437" width="0.1604%" height="15" fill="rgb(241,139,37)" fg:x="552" fg:w="2"/><text x="44.5162%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="44.3464%" y="421" width="0.0802%" height="15" fill="rgb(252,177,51)" fg:x="553" fg:w="1"/><text x="44.5964%" y="431.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="44.4266%" y="437" width="0.0802%" height="15" fill="rgb(214,131,22)" fg:x="554" fg:w="1"/><text x="44.6766%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.5068%" y="421" width="0.1604%" height="15" fill="rgb(246,53,19)" fg:x="555" fg:w="2"/><text x="44.7568%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5870%" y="405" width="0.0802%" height="15" fill="rgb(231,158,27)" fg:x="556" fg:w="1"/><text x="44.8370%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="44.5870%" y="389" width="0.0802%" height="15" fill="rgb(226,166,46)" fg:x="556" fg:w="1"/><text x="44.8370%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5870%" y="373" width="0.0802%" height="15" fill="rgb(218,178,26)" fg:x="556" fg:w="1"/><text x="44.8370%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="44.5870%" y="357" width="0.0802%" height="15" fill="rgb(206,25,39)" fg:x="556" fg:w="1"/><text x="44.8370%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="44.5870%" y="341" width="0.0802%" height="15" fill="rgb(232,218,41)" fg:x="556" fg:w="1"/><text x="44.8370%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="44.5870%" y="325" width="0.0802%" height="15" fill="rgb(212,151,15)" fg:x="556" fg:w="1"/><text x="44.8370%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="44.5870%" y="309" width="0.0802%" height="15" fill="rgb(213,49,22)" fg:x="556" fg:w="1"/><text x="44.8370%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5870%" y="293" width="0.0802%" height="15" fill="rgb(247,116,21)" fg:x="556" fg:w="1"/><text x="44.8370%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.5870%" y="277" width="0.0802%" height="15" fill="rgb(248,98,14)" fg:x="556" fg:w="1"/><text x="44.8370%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.5870%" y="261" width="0.0802%" height="15" fill="rgb(247,72,6)" fg:x="556" fg:w="1"/><text x="44.8370%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.5870%" y="245" width="0.0802%" height="15" fill="rgb(213,9,22)" fg:x="556" fg:w="1"/><text x="44.8370%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.5870%" y="229" width="0.0802%" height="15" fill="rgb(213,122,30)" fg:x="556" fg:w="1"/><text x="44.8370%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.5870%" y="213" width="0.0802%" height="15" fill="rgb(244,11,30)" fg:x="556" fg:w="1"/><text x="44.8370%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.5870%" y="197" width="0.0802%" height="15" fill="rgb(236,102,26)" fg:x="556" fg:w="1"/><text x="44.8370%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.6672%" y="421" width="0.0802%" height="15" fill="rgb(231,166,37)" fg:x="557" fg:w="1"/><text x="44.9172%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="44.6672%" y="405" width="0.0802%" height="15" fill="rgb(220,224,29)" fg:x="557" fg:w="1"/><text x="44.9172%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="44.6672%" y="389" width="0.0802%" height="15" fill="rgb(227,30,40)" fg:x="557" fg:w="1"/><text x="44.9172%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="44.2662%" y="485" width="0.6415%" height="15" fill="rgb(235,8,36)" fg:x="552" fg:w="8"/><text x="44.5162%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="44.2662%" y="469" width="0.6415%" height="15" fill="rgb(232,175,19)" fg:x="552" fg:w="8"/><text x="44.5162%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="44.4266%" y="453" width="0.4812%" height="15" fill="rgb(217,114,10)" fg:x="554" fg:w="6"/><text x="44.6766%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="44.5068%" y="437" width="0.4010%" height="15" fill="rgb(214,112,41)" fg:x="555" fg:w="5"/><text x="44.7568%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.7474%" y="421" width="0.1604%" height="15" fill="rgb(226,69,34)" fg:x="558" fg:w="2"/><text x="44.9974%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7474%" y="405" width="0.1604%" height="15" fill="rgb(219,23,46)" fg:x="558" fg:w="2"/><text x="44.9974%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="44.7474%" y="389" width="0.1604%" height="15" fill="rgb(233,3,8)" fg:x="558" fg:w="2"/><text x="44.9974%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7474%" y="373" width="0.1604%" height="15" fill="rgb(251,34,42)" fg:x="558" fg:w="2"/><text x="44.9974%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="44.7474%" y="357" width="0.1604%" height="15" fill="rgb(215,84,9)" fg:x="558" fg:w="2"/><text x="44.9974%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="44.7474%" y="341" width="0.1604%" height="15" fill="rgb(231,75,52)" fg:x="558" fg:w="2"/><text x="44.9974%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="44.7474%" y="325" width="0.1604%" height="15" fill="rgb(247,201,31)" fg:x="558" fg:w="2"/><text x="44.9974%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="44.7474%" y="309" width="0.1604%" height="15" fill="rgb(215,171,37)" fg:x="558" fg:w="2"/><text x="44.9974%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="44.9880%" y="341" width="0.0802%" height="15" fill="rgb(208,208,44)" fg:x="561" fg:w="1"/><text x="45.2380%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.0682%" y="341" width="0.0802%" height="15" fill="rgb(247,146,54)" fg:x="562" fg:w="1"/><text x="45.3182%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="44.9078%" y="485" width="0.3208%" height="15" fill="rgb(209,0,40)" fg:x="560" fg:w="4"/><text x="45.1578%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="44.9078%" y="469" width="0.3208%" height="15" fill="rgb(221,59,4)" fg:x="560" fg:w="4"/><text x="45.1578%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="44.9078%" y="453" width="0.3208%" height="15" fill="rgb(227,153,47)" fg:x="560" fg:w="4"/><text x="45.1578%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="44.9078%" y="437" width="0.3208%" height="15" fill="rgb(253,225,10)" fg:x="560" fg:w="4"/><text x="45.1578%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="44.9880%" y="421" width="0.2406%" height="15" fill="rgb(237,201,24)" fg:x="561" fg:w="3"/><text x="45.2380%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="44.9880%" y="405" width="0.2406%" height="15" fill="rgb(238,23,27)" fg:x="561" fg:w="3"/><text x="45.2380%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="44.9880%" y="389" width="0.2406%" height="15" fill="rgb(236,54,50)" fg:x="561" fg:w="3"/><text x="45.2380%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="44.9880%" y="373" width="0.2406%" height="15" fill="rgb(216,106,0)" fg:x="561" fg:w="3"/><text x="45.2380%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="44.9880%" y="357" width="0.2406%" height="15" fill="rgb(234,179,35)" fg:x="561" fg:w="3"/><text x="45.2380%" y="367.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="45.1484%" y="341" width="0.0802%" height="15" fill="rgb(210,35,8)" fg:x="563" fg:w="1"/><text x="45.3984%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.2285%" y="405" width="0.1604%" height="15" fill="rgb(238,144,16)" fg:x="564" fg:w="2"/><text x="45.4785%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.2285%" y="389" width="0.1604%" height="15" fill="rgb(244,54,7)" fg:x="564" fg:w="2"/><text x="45.4785%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.2285%" y="373" width="0.1604%" height="15" fill="rgb(233,225,40)" fg:x="564" fg:w="2"/><text x="45.4785%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.2285%" y="357" width="0.1604%" height="15" fill="rgb(249,227,23)" fg:x="564" fg:w="2"/><text x="45.4785%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.2285%" y="341" width="0.1604%" height="15" fill="rgb(215,42,44)" fg:x="564" fg:w="2"/><text x="45.4785%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.2285%" y="325" width="0.1604%" height="15" fill="rgb(220,145,40)" fg:x="564" fg:w="2"/><text x="45.4785%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.2285%" y="309" width="0.1604%" height="15" fill="rgb(228,218,40)" fg:x="564" fg:w="2"/><text x="45.4785%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="45.2285%" y="293" width="0.1604%" height="15" fill="rgb(217,52,54)" fg:x="564" fg:w="2"/><text x="45.4785%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="45.2285%" y="277" width="0.1604%" height="15" fill="rgb(223,90,22)" fg:x="564" fg:w="2"/><text x="45.4785%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="45.2285%" y="261" width="0.1604%" height="15" fill="rgb(232,114,35)" fg:x="564" fg:w="2"/><text x="45.4785%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="45.2285%" y="245" width="0.1604%" height="15" fill="rgb(227,223,50)" fg:x="564" fg:w="2"/><text x="45.4785%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.2285%" y="229" width="0.1604%" height="15" fill="rgb(249,175,7)" fg:x="564" fg:w="2"/><text x="45.4785%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="45.2285%" y="453" width="0.2406%" height="15" fill="rgb(249,173,15)" fg:x="564" fg:w="3"/><text x="45.4785%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="45.2285%" y="437" width="0.2406%" height="15" fill="rgb(240,131,6)" fg:x="564" fg:w="3"/><text x="45.4785%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="45.2285%" y="421" width="0.2406%" height="15" fill="rgb(246,117,16)" fg:x="564" fg:w="3"/><text x="45.4785%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.3889%" y="405" width="0.0802%" height="15" fill="rgb(209,32,16)" fg:x="566" fg:w="1"/><text x="45.6389%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="45.4691%" y="453" width="0.0802%" height="15" fill="rgb(207,45,44)" fg:x="567" fg:w="1"/><text x="45.7191%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.4691%" y="437" width="0.0802%" height="15" fill="rgb(210,66,3)" fg:x="567" fg:w="1"/><text x="45.7191%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="45.4691%" y="421" width="0.0802%" height="15" fill="rgb(246,133,30)" fg:x="567" fg:w="1"/><text x="45.7191%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="45.4691%" y="405" width="0.0802%" height="15" fill="rgb(224,37,17)" fg:x="567" fg:w="1"/><text x="45.7191%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="45.4691%" y="389" width="0.0802%" height="15" fill="rgb(237,218,18)" fg:x="567" fg:w="1"/><text x="45.7191%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="45.4691%" y="373" width="0.0802%" height="15" fill="rgb(240,57,8)" fg:x="567" fg:w="1"/><text x="45.7191%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.5493%" y="421" width="0.0802%" height="15" fill="rgb(231,51,38)" fg:x="568" fg:w="1"/><text x="45.7993%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6295%" y="373" width="0.0802%" height="15" fill="rgb(230,89,50)" fg:x="569" fg:w="1"/><text x="45.8795%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.7097%" y="373" width="0.0802%" height="15" fill="rgb(234,103,34)" fg:x="570" fg:w="1"/><text x="45.9597%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.7097%" y="357" width="0.0802%" height="15" fill="rgb(220,45,48)" fg:x="570" fg:w="1"/><text x="45.9597%" y="367.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="45.2285%" y="485" width="0.6415%" height="15" fill="rgb(250,210,3)" fg:x="564" fg:w="8"/><text x="45.4785%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.64%)</title><rect x="45.2285%" y="469" width="0.6415%" height="15" fill="rgb(210,118,12)" fg:x="564" fg:w="8"/><text x="45.4785%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="45.5493%" y="453" width="0.3208%" height="15" fill="rgb(238,154,21)" fg:x="568" fg:w="4"/><text x="45.7993%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="45.5493%" y="437" width="0.3208%" height="15" fill="rgb(227,220,4)" fg:x="568" fg:w="4"/><text x="45.7993%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="45.6295%" y="421" width="0.2406%" height="15" fill="rgb(207,179,27)" fg:x="569" fg:w="3"/><text x="45.8795%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="45.6295%" y="405" width="0.2406%" height="15" fill="rgb(240,111,30)" fg:x="569" fg:w="3"/><text x="45.8795%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="45.6295%" y="389" width="0.2406%" height="15" fill="rgb(251,29,1)" fg:x="569" fg:w="3"/><text x="45.8795%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.7899%" y="373" width="0.0802%" height="15" fill="rgb(224,141,39)" fg:x="571" fg:w="1"/><text x="46.0399%" y="383.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.8701%" y="469" width="0.1604%" height="15" fill="rgb(207,98,26)" fg:x="572" fg:w="2"/><text x="46.1201%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="46.0305%" y="469" width="0.0802%" height="15" fill="rgb(221,37,6)" fg:x="574" fg:w="1"/><text x="46.2805%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="46.0305%" y="453" width="0.0802%" height="15" fill="rgb(217,32,44)" fg:x="574" fg:w="1"/><text x="46.2805%" y="463.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="46.0305%" y="437" width="0.0802%" height="15" fill="rgb(253,149,2)" fg:x="574" fg:w="1"/><text x="46.2805%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="46.1107%" y="373" width="0.1604%" height="15" fill="rgb(220,165,39)" fg:x="575" fg:w="2"/><text x="46.3607%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="46.1107%" y="357" width="0.1604%" height="15" fill="rgb(235,33,48)" fg:x="575" fg:w="2"/><text x="46.3607%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.1107%" y="341" width="0.1604%" height="15" fill="rgb(221,89,6)" fg:x="575" fg:w="2"/><text x="46.3607%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.1909%" y="325" width="0.0802%" height="15" fill="rgb(215,214,6)" fg:x="576" fg:w="1"/><text x="46.4409%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.1909%" y="309" width="0.0802%" height="15" fill="rgb(241,1,30)" fg:x="576" fg:w="1"/><text x="46.4409%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1909%" y="293" width="0.0802%" height="15" fill="rgb(211,140,32)" fg:x="576" fg:w="1"/><text x="46.4409%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.1909%" y="277" width="0.0802%" height="15" fill="rgb(232,48,21)" fg:x="576" fg:w="1"/><text x="46.4409%" y="287.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.1909%" y="261" width="0.0802%" height="15" fill="rgb(252,217,9)" fg:x="576" fg:w="1"/><text x="46.4409%" y="271.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.1909%" y="245" width="0.0802%" height="15" fill="rgb(206,123,34)" fg:x="576" fg:w="1"/><text x="46.4409%" y="255.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.1909%" y="229" width="0.0802%" height="15" fill="rgb(245,161,38)" fg:x="576" fg:w="1"/><text x="46.4409%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.1909%" y="213" width="0.0802%" height="15" fill="rgb(233,205,7)" fg:x="576" fg:w="1"/><text x="46.4409%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.1909%" y="197" width="0.0802%" height="15" fill="rgb(217,119,18)" fg:x="576" fg:w="1"/><text x="46.4409%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.1909%" y="181" width="0.0802%" height="15" fill="rgb(252,126,3)" fg:x="576" fg:w="1"/><text x="46.4409%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.1909%" y="165" width="0.0802%" height="15" fill="rgb(252,188,15)" fg:x="576" fg:w="1"/><text x="46.4409%" y="175.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.1909%" y="149" width="0.0802%" height="15" fill="rgb(228,1,48)" fg:x="576" fg:w="1"/><text x="46.4409%" y="159.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.1909%" y="133" width="0.0802%" height="15" fill="rgb(205,187,8)" fg:x="576" fg:w="1"/><text x="46.4409%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.2711%" y="357" width="0.0802%" height="15" fill="rgb(205,105,50)" fg:x="577" fg:w="1"/><text x="46.5211%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3512%" y="341" width="0.0802%" height="15" fill="rgb(211,31,46)" fg:x="578" fg:w="1"/><text x="46.6012%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="46.3512%" y="325" width="0.0802%" height="15" fill="rgb(213,126,5)" fg:x="578" fg:w="1"/><text x="46.6012%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3512%" y="309" width="0.0802%" height="15" fill="rgb(231,87,9)" fg:x="578" fg:w="1"/><text x="46.6012%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="46.3512%" y="293" width="0.0802%" height="15" fill="rgb(219,224,20)" fg:x="578" fg:w="1"/><text x="46.6012%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="46.3512%" y="277" width="0.0802%" height="15" fill="rgb(230,84,21)" fg:x="578" fg:w="1"/><text x="46.6012%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.3512%" y="261" width="0.0802%" height="15" fill="rgb(224,169,42)" fg:x="578" fg:w="1"/><text x="46.6012%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="46.2711%" y="373" width="0.3208%" height="15" fill="rgb(227,182,13)" fg:x="577" fg:w="4"/><text x="46.5211%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="46.3512%" y="357" width="0.2406%" height="15" fill="rgb(249,57,41)" fg:x="578" fg:w="3"/><text x="46.6012%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.4314%" y="341" width="0.1604%" height="15" fill="rgb(214,93,52)" fg:x="579" fg:w="2"/><text x="46.6814%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.4314%" y="325" width="0.1604%" height="15" fill="rgb(229,161,34)" fg:x="579" fg:w="2"/><text x="46.6814%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="46.4314%" y="309" width="0.1604%" height="15" fill="rgb(227,193,17)" fg:x="579" fg:w="2"/><text x="46.6814%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.4314%" y="293" width="0.1604%" height="15" fill="rgb(242,164,46)" fg:x="579" fg:w="2"/><text x="46.6814%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.5116%" y="277" width="0.0802%" height="15" fill="rgb(242,142,47)" fg:x="580" fg:w="1"/><text x="46.7616%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.5116%" y="261" width="0.0802%" height="15" fill="rgb(208,23,18)" fg:x="580" fg:w="1"/><text x="46.7616%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.5918%" y="373" width="0.0802%" height="15" fill="rgb(219,54,38)" fg:x="581" fg:w="1"/><text x="46.8418%" y="383.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="46.1107%" y="469" width="0.6415%" height="15" fill="rgb(206,97,35)" fg:x="575" fg:w="8"/><text x="46.3607%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="46.1107%" y="453" width="0.6415%" height="15" fill="rgb(208,76,8)" fg:x="575" fg:w="8"/><text x="46.3607%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.64%)</title><rect x="46.1107%" y="437" width="0.6415%" height="15" fill="rgb(220,92,28)" fg:x="575" fg:w="8"/><text x="46.3607%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (8 samples, 0.64%)</title><rect x="46.1107%" y="421" width="0.6415%" height="15" fill="rgb(209,158,39)" fg:x="575" fg:w="8"/><text x="46.3607%" y="431.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (8 samples, 0.64%)</title><rect x="46.1107%" y="405" width="0.6415%" height="15" fill="rgb(238,175,9)" fg:x="575" fg:w="8"/><text x="46.3607%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (8 samples, 0.64%)</title><rect x="46.1107%" y="389" width="0.6415%" height="15" fill="rgb(240,116,17)" fg:x="575" fg:w="8"/><text x="46.3607%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="46.6720%" y="373" width="0.0802%" height="15" fill="rgb(208,7,2)" fg:x="582" fg:w="1"/><text x="46.9220%" y="383.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="46.6720%" y="357" width="0.0802%" height="15" fill="rgb(252,52,4)" fg:x="582" fg:w="1"/><text x="46.9220%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="46.6720%" y="341" width="0.0802%" height="15" fill="rgb(222,68,34)" fg:x="582" fg:w="1"/><text x="46.9220%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6720%" y="325" width="0.0802%" height="15" fill="rgb(242,154,35)" fg:x="582" fg:w="1"/><text x="46.9220%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6720%" y="309" width="0.0802%" height="15" fill="rgb(210,125,54)" fg:x="582" fg:w="1"/><text x="46.9220%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.6720%" y="293" width="0.0802%" height="15" fill="rgb(247,121,18)" fg:x="582" fg:w="1"/><text x="46.9220%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.6720%" y="277" width="0.0802%" height="15" fill="rgb(223,48,51)" fg:x="582" fg:w="1"/><text x="46.9220%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.6720%" y="261" width="0.0802%" height="15" fill="rgb(211,156,48)" fg:x="582" fg:w="1"/><text x="46.9220%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.6720%" y="245" width="0.0802%" height="15" fill="rgb(236,56,31)" fg:x="582" fg:w="1"/><text x="46.9220%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6720%" y="229" width="0.0802%" height="15" fill="rgb(247,157,52)" fg:x="582" fg:w="1"/><text x="46.9220%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="46.8324%" y="421" width="0.0802%" height="15" fill="rgb(244,121,39)" fg:x="584" fg:w="1"/><text x="47.0824%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.8324%" y="405" width="0.0802%" height="15" fill="rgb(239,4,40)" fg:x="584" fg:w="1"/><text x="47.0824%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="46.7522%" y="437" width="0.2406%" height="15" fill="rgb(213,204,45)" fg:x="583" fg:w="3"/><text x="47.0022%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="46.9126%" y="421" width="0.0802%" height="15" fill="rgb(242,107,0)" fg:x="585" fg:w="1"/><text x="47.1626%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.9126%" y="405" width="0.0802%" height="15" fill="rgb(215,152,25)" fg:x="585" fg:w="1"/><text x="47.1626%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.9126%" y="389" width="0.0802%" height="15" fill="rgb(233,151,6)" fg:x="585" fg:w="1"/><text x="47.1626%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9126%" y="373" width="0.0802%" height="15" fill="rgb(206,126,44)" fg:x="585" fg:w="1"/><text x="47.1626%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9928%" y="421" width="0.0802%" height="15" fill="rgb(209,145,15)" fg:x="586" fg:w="1"/><text x="47.2428%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="46.7522%" y="469" width="0.4010%" height="15" fill="rgb(235,214,8)" fg:x="583" fg:w="5"/><text x="47.0022%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="46.7522%" y="453" width="0.4010%" height="15" fill="rgb(216,140,51)" fg:x="583" fg:w="5"/><text x="47.0022%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="46.9928%" y="437" width="0.1604%" height="15" fill="rgb(213,83,34)" fg:x="586" fg:w="2"/><text x="47.2428%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.0730%" y="421" width="0.0802%" height="15" fill="rgb(218,186,44)" fg:x="587" fg:w="1"/><text x="47.3230%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.0730%" y="405" width="0.0802%" height="15" fill="rgb(225,147,10)" fg:x="587" fg:w="1"/><text x="47.3230%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.0730%" y="389" width="0.0802%" height="15" fill="rgb(209,214,20)" fg:x="587" fg:w="1"/><text x="47.3230%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (17 samples, 1.36%)</title><rect x="45.8701%" y="485" width="1.3633%" height="15" fill="rgb(252,61,32)" fg:x="572" fg:w="17"/><text x="46.1201%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="47.1532%" y="469" width="0.0802%" height="15" fill="rgb(237,204,10)" fg:x="588" fg:w="1"/><text x="47.4032%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.1532%" y="453" width="0.0802%" height="15" fill="rgb(246,118,16)" fg:x="588" fg:w="1"/><text x="47.4032%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="47.1532%" y="437" width="0.0802%" height="15" fill="rgb(214,50,9)" fg:x="588" fg:w="1"/><text x="47.4032%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="47.1532%" y="421" width="0.0802%" height="15" fill="rgb(212,41,1)" fg:x="588" fg:w="1"/><text x="47.4032%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="47.1532%" y="405" width="0.0802%" height="15" fill="rgb(228,172,32)" fg:x="588" fg:w="1"/><text x="47.4032%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="47.1532%" y="389" width="0.0802%" height="15" fill="rgb(231,85,38)" fg:x="588" fg:w="1"/><text x="47.4032%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.1532%" y="373" width="0.0802%" height="15" fill="rgb(223,120,31)" fg:x="588" fg:w="1"/><text x="47.4032%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.1532%" y="357" width="0.0802%" height="15" fill="rgb(254,174,9)" fg:x="588" fg:w="1"/><text x="47.4032%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="47.1532%" y="341" width="0.0802%" height="15" fill="rgb(243,197,0)" fg:x="588" fg:w="1"/><text x="47.4032%" y="351.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="47.1532%" y="325" width="0.0802%" height="15" fill="rgb(226,186,17)" fg:x="588" fg:w="1"/><text x="47.4032%" y="335.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="47.1532%" y="309" width="0.0802%" height="15" fill="rgb(229,38,38)" fg:x="588" fg:w="1"/><text x="47.4032%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="47.1532%" y="293" width="0.0802%" height="15" fill="rgb(238,82,14)" fg:x="588" fg:w="1"/><text x="47.4032%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="47.2334%" y="469" width="0.0802%" height="15" fill="rgb(230,154,54)" fg:x="589" fg:w="1"/><text x="47.4834%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="47.2334%" y="485" width="0.1604%" height="15" fill="rgb(243,84,17)" fg:x="589" fg:w="2"/><text x="47.4834%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="47.3136%" y="469" width="0.0802%" height="15" fill="rgb(226,41,37)" fg:x="590" fg:w="1"/><text x="47.5636%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="47.3136%" y="453" width="0.0802%" height="15" fill="rgb(219,20,18)" fg:x="590" fg:w="1"/><text x="47.5636%" y="463.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="47.3136%" y="437" width="0.0802%" height="15" fill="rgb(243,173,39)" fg:x="590" fg:w="1"/><text x="47.5636%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="47.3136%" y="421" width="0.0802%" height="15" fill="rgb(245,79,20)" fg:x="590" fg:w="1"/><text x="47.5636%" y="431.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="47.3136%" y="405" width="0.0802%" height="15" fill="rgb(229,101,45)" fg:x="590" fg:w="1"/><text x="47.5636%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="47.3136%" y="389" width="0.0802%" height="15" fill="rgb(215,123,52)" fg:x="590" fg:w="1"/><text x="47.5636%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="47.3136%" y="373" width="0.0802%" height="15" fill="rgb(215,11,33)" fg:x="590" fg:w="1"/><text x="47.5636%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="47.3136%" y="357" width="0.0802%" height="15" fill="rgb(245,105,20)" fg:x="590" fg:w="1"/><text x="47.5636%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.3136%" y="341" width="0.0802%" height="15" fill="rgb(231,132,30)" fg:x="590" fg:w="1"/><text x="47.5636%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.3136%" y="325" width="0.0802%" height="15" fill="rgb(224,62,21)" fg:x="590" fg:w="1"/><text x="47.5636%" y="335.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="47.3937%" y="469" width="0.2406%" height="15" fill="rgb(209,221,38)" fg:x="591" fg:w="3"/><text x="47.6437%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="47.4739%" y="453" width="0.1604%" height="15" fill="rgb(229,200,30)" fg:x="592" fg:w="2"/><text x="47.7239%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="47.4739%" y="437" width="0.1604%" height="15" fill="rgb(237,142,41)" fg:x="592" fg:w="2"/><text x="47.7239%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5541%" y="421" width="0.0802%" height="15" fill="rgb(238,37,22)" fg:x="593" fg:w="1"/><text x="47.8041%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="47.5541%" y="405" width="0.0802%" height="15" fill="rgb(234,182,17)" fg:x="593" fg:w="1"/><text x="47.8041%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.5541%" y="389" width="0.0802%" height="15" fill="rgb(237,58,48)" fg:x="593" fg:w="1"/><text x="47.8041%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (100 samples, 8.02%)</title><rect x="39.7755%" y="517" width="8.0192%" height="15" fill="rgb(226,112,37)" fg:x="496" fg:w="100"/><text x="40.0255%" y="527.50">&lt;plugins_co..</text></g><g><title>plugins_core::location::change_location (44 samples, 3.53%)</title><rect x="44.2662%" y="501" width="3.5285%" height="15" fill="rgb(230,201,20)" fg:x="552" fg:w="44"/><text x="44.5162%" y="511.50">plu..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="47.3937%" y="485" width="0.4010%" height="15" fill="rgb(252,95,39)" fg:x="591" fg:w="5"/><text x="47.6437%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="47.6343%" y="469" width="0.1604%" height="15" fill="rgb(240,150,33)" fg:x="594" fg:w="2"/><text x="47.8843%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="47.6343%" y="453" width="0.1604%" height="15" fill="rgb(208,202,37)" fg:x="594" fg:w="2"/><text x="47.8843%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="47.6343%" y="437" width="0.1604%" height="15" fill="rgb(251,37,12)" fg:x="594" fg:w="2"/><text x="47.8843%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="47.6343%" y="421" width="0.1604%" height="15" fill="rgb(247,150,26)" fg:x="594" fg:w="2"/><text x="47.8843%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="47.7145%" y="405" width="0.0802%" height="15" fill="rgb(232,28,8)" fg:x="595" fg:w="1"/><text x="47.9645%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.7145%" y="389" width="0.0802%" height="15" fill="rgb(226,121,34)" fg:x="595" fg:w="1"/><text x="47.9645%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="47.7947%" y="469" width="0.0802%" height="15" fill="rgb(237,23,13)" fg:x="596" fg:w="1"/><text x="48.0447%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.7947%" y="453" width="0.0802%" height="15" fill="rgb(214,42,29)" fg:x="596" fg:w="1"/><text x="48.0447%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="47.7947%" y="437" width="0.0802%" height="15" fill="rgb(246,204,29)" fg:x="596" fg:w="1"/><text x="48.0447%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8749%" y="453" width="0.0802%" height="15" fill="rgb(242,28,40)" fg:x="597" fg:w="1"/><text x="48.1249%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8749%" y="437" width="0.0802%" height="15" fill="rgb(243,64,49)" fg:x="597" fg:w="1"/><text x="48.1249%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="47.8749%" y="421" width="0.0802%" height="15" fill="rgb(226,93,13)" fg:x="597" fg:w="1"/><text x="48.1249%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.9551%" y="389" width="0.1604%" height="15" fill="rgb(241,113,26)" fg:x="598" fg:w="2"/><text x="48.2051%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="48.0353%" y="373" width="0.0802%" height="15" fill="rgb(209,209,0)" fg:x="599" fg:w="1"/><text x="48.2853%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.1155%" y="389" width="0.0802%" height="15" fill="rgb(251,183,50)" fg:x="600" fg:w="1"/><text x="48.3655%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.1155%" y="373" width="0.0802%" height="15" fill="rgb(248,24,43)" fg:x="600" fg:w="1"/><text x="48.3655%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (8 samples, 0.64%)</title><rect x="47.7947%" y="485" width="0.6415%" height="15" fill="rgb(218,102,9)" fg:x="596" fg:w="8"/><text x="48.0447%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="47.8749%" y="469" width="0.5613%" height="15" fill="rgb(249,209,39)" fg:x="597" fg:w="7"/><text x="48.1249%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="47.9551%" y="453" width="0.4812%" height="15" fill="rgb(210,37,6)" fg:x="598" fg:w="6"/><text x="48.2051%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="47.9551%" y="437" width="0.4812%" height="15" fill="rgb(212,99,4)" fg:x="598" fg:w="6"/><text x="48.2051%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="47.9551%" y="421" width="0.4812%" height="15" fill="rgb(253,59,46)" fg:x="598" fg:w="6"/><text x="48.2051%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="47.9551%" y="405" width="0.4812%" height="15" fill="rgb(229,96,9)" fg:x="598" fg:w="6"/><text x="48.2051%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="48.1957%" y="389" width="0.2406%" height="15" fill="rgb(207,103,49)" fg:x="601" fg:w="3"/><text x="48.4457%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.1957%" y="373" width="0.2406%" height="15" fill="rgb(250,226,20)" fg:x="601" fg:w="3"/><text x="48.4457%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="48.5966%" y="453" width="0.1604%" height="15" fill="rgb(238,220,11)" fg:x="606" fg:w="2"/><text x="48.8466%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="48.6768%" y="437" width="0.0802%" height="15" fill="rgb(236,74,15)" fg:x="607" fg:w="1"/><text x="48.9268%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.7570%" y="453" width="0.0802%" height="15" fill="rgb(218,43,40)" fg:x="608" fg:w="1"/><text x="49.0070%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.7570%" y="437" width="0.0802%" height="15" fill="rgb(245,206,37)" fg:x="608" fg:w="1"/><text x="49.0070%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.7570%" y="421" width="0.0802%" height="15" fill="rgb(206,30,3)" fg:x="608" fg:w="1"/><text x="49.0070%" y="431.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (16 samples, 1.28%)</title><rect x="47.7947%" y="501" width="1.2831%" height="15" fill="rgb(211,29,35)" fg:x="596" fg:w="16"/><text x="48.0447%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="48.4362%" y="485" width="0.6415%" height="15" fill="rgb(218,49,50)" fg:x="604" fg:w="8"/><text x="48.6862%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="48.5966%" y="469" width="0.4812%" height="15" fill="rgb(211,114,30)" fg:x="606" fg:w="6"/><text x="48.8466%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="48.8372%" y="453" width="0.2406%" height="15" fill="rgb(238,70,33)" fg:x="609" fg:w="3"/><text x="49.0872%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.8372%" y="437" width="0.2406%" height="15" fill="rgb(238,141,50)" fg:x="609" fg:w="3"/><text x="49.0872%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="48.8372%" y="421" width="0.2406%" height="15" fill="rgb(205,69,6)" fg:x="609" fg:w="3"/><text x="49.0872%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="48.8372%" y="405" width="0.2406%" height="15" fill="rgb(229,65,0)" fg:x="609" fg:w="3"/><text x="49.0872%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="48.9976%" y="389" width="0.0802%" height="15" fill="rgb(211,3,37)" fg:x="611" fg:w="1"/><text x="49.2476%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="48.9976%" y="373" width="0.0802%" height="15" fill="rgb(223,196,42)" fg:x="611" fg:w="1"/><text x="49.2476%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0778%" y="453" width="0.0802%" height="15" fill="rgb(227,191,15)" fg:x="612" fg:w="1"/><text x="49.3278%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0778%" y="437" width="0.0802%" height="15" fill="rgb(229,210,53)" fg:x="612" fg:w="1"/><text x="49.3278%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.0778%" y="421" width="0.0802%" height="15" fill="rgb(250,203,10)" fg:x="612" fg:w="1"/><text x="49.3278%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.0778%" y="405" width="0.0802%" height="15" fill="rgb(247,8,37)" fg:x="612" fg:w="1"/><text x="49.3278%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.0778%" y="389" width="0.0802%" height="15" fill="rgb(240,52,9)" fg:x="612" fg:w="1"/><text x="49.3278%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.0778%" y="373" width="0.0802%" height="15" fill="rgb(243,100,52)" fg:x="612" fg:w="1"/><text x="49.3278%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0778%" y="357" width="0.0802%" height="15" fill="rgb(224,149,30)" fg:x="612" fg:w="1"/><text x="49.3278%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.0778%" y="341" width="0.0802%" height="15" fill="rgb(232,27,45)" fg:x="612" fg:w="1"/><text x="49.3278%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.0778%" y="325" width="0.0802%" height="15" fill="rgb(242,161,36)" fg:x="612" fg:w="1"/><text x="49.3278%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.0778%" y="309" width="0.0802%" height="15" fill="rgb(235,223,32)" fg:x="612" fg:w="1"/><text x="49.3278%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.0778%" y="293" width="0.0802%" height="15" fill="rgb(242,78,19)" fg:x="612" fg:w="1"/><text x="49.3278%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.0778%" y="277" width="0.0802%" height="15" fill="rgb(233,157,47)" fg:x="612" fg:w="1"/><text x="49.3278%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.0778%" y="261" width="0.0802%" height="15" fill="rgb(251,213,5)" fg:x="612" fg:w="1"/><text x="49.3278%" y="271.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="49.1580%" y="373" width="0.0802%" height="15" fill="rgb(215,223,5)" fg:x="613" fg:w="1"/><text x="49.4080%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.1580%" y="357" width="0.0802%" height="15" fill="rgb(230,14,7)" fg:x="613" fg:w="1"/><text x="49.4080%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3184%" y="357" width="0.0802%" height="15" fill="rgb(249,179,20)" fg:x="615" fg:w="1"/><text x="49.5684%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3184%" y="341" width="0.0802%" height="15" fill="rgb(230,204,44)" fg:x="615" fg:w="1"/><text x="49.5684%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.3184%" y="325" width="0.0802%" height="15" fill="rgb(233,229,46)" fg:x="615" fg:w="1"/><text x="49.5684%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3184%" y="309" width="0.0802%" height="15" fill="rgb(210,154,35)" fg:x="615" fg:w="1"/><text x="49.5684%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.3184%" y="293" width="0.0802%" height="15" fill="rgb(220,178,16)" fg:x="615" fg:w="1"/><text x="49.5684%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.3184%" y="277" width="0.0802%" height="15" fill="rgb(243,0,53)" fg:x="615" fg:w="1"/><text x="49.5684%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.3184%" y="261" width="0.0802%" height="15" fill="rgb(223,221,47)" fg:x="615" fg:w="1"/><text x="49.5684%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.3184%" y="245" width="0.0802%" height="15" fill="rgb(233,82,15)" fg:x="615" fg:w="1"/><text x="49.5684%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3184%" y="229" width="0.0802%" height="15" fill="rgb(222,8,38)" fg:x="615" fg:w="1"/><text x="49.5684%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="49.3184%" y="213" width="0.0802%" height="15" fill="rgb(241,28,48)" fg:x="615" fg:w="1"/><text x="49.5684%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="49.3184%" y="197" width="0.0802%" height="15" fill="rgb(209,227,15)" fg:x="615" fg:w="1"/><text x="49.5684%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="49.3184%" y="181" width="0.0802%" height="15" fill="rgb(234,189,48)" fg:x="615" fg:w="1"/><text x="49.5684%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="49.3184%" y="165" width="0.0802%" height="15" fill="rgb(212,27,44)" fg:x="615" fg:w="1"/><text x="49.5684%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="49.3184%" y="149" width="0.0802%" height="15" fill="rgb(249,55,42)" fg:x="615" fg:w="1"/><text x="49.5684%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.3986%" y="357" width="0.0802%" height="15" fill="rgb(215,211,28)" fg:x="616" fg:w="1"/><text x="49.6486%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="49.1580%" y="389" width="0.4812%" height="15" fill="rgb(221,155,16)" fg:x="613" fg:w="6"/><text x="49.4080%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="49.2382%" y="373" width="0.4010%" height="15" fill="rgb(247,106,30)" fg:x="614" fg:w="5"/><text x="49.4882%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="49.4787%" y="357" width="0.1604%" height="15" fill="rgb(230,76,31)" fg:x="617" fg:w="2"/><text x="49.7287%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.4787%" y="341" width="0.1604%" height="15" fill="rgb(222,6,48)" fg:x="617" fg:w="2"/><text x="49.7287%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="49.4787%" y="325" width="0.1604%" height="15" fill="rgb(228,82,3)" fg:x="617" fg:w="2"/><text x="49.7287%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="49.4787%" y="309" width="0.1604%" height="15" fill="rgb(245,208,52)" fg:x="617" fg:w="2"/><text x="49.7287%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5589%" y="293" width="0.0802%" height="15" fill="rgb(218,65,17)" fg:x="618" fg:w="1"/><text x="49.8089%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="49.6391%" y="373" width="0.0802%" height="15" fill="rgb(242,63,26)" fg:x="619" fg:w="1"/><text x="49.8891%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7193%" y="357" width="0.0802%" height="15" fill="rgb(224,119,39)" fg:x="620" fg:w="1"/><text x="49.9693%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.7193%" y="341" width="0.0802%" height="15" fill="rgb(229,106,3)" fg:x="620" fg:w="1"/><text x="49.9693%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7193%" y="325" width="0.0802%" height="15" fill="rgb(248,6,33)" fg:x="620" fg:w="1"/><text x="49.9693%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.7193%" y="309" width="0.0802%" height="15" fill="rgb(226,3,49)" fg:x="620" fg:w="1"/><text x="49.9693%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="49.7193%" y="293" width="0.0802%" height="15" fill="rgb(228,142,14)" fg:x="620" fg:w="1"/><text x="49.9693%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="49.7193%" y="277" width="0.0802%" height="15" fill="rgb(241,141,54)" fg:x="620" fg:w="1"/><text x="49.9693%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="49.7193%" y="261" width="0.0802%" height="15" fill="rgb(252,17,50)" fg:x="620" fg:w="1"/><text x="49.9693%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7193%" y="245" width="0.0802%" height="15" fill="rgb(221,120,48)" fg:x="620" fg:w="1"/><text x="49.9693%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="49.7193%" y="229" width="0.0802%" height="15" fill="rgb(229,171,33)" fg:x="620" fg:w="1"/><text x="49.9693%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="49.6391%" y="389" width="0.2406%" height="15" fill="rgb(236,207,21)" fg:x="619" fg:w="3"/><text x="49.8891%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="49.7193%" y="373" width="0.1604%" height="15" fill="rgb(218,93,35)" fg:x="620" fg:w="2"/><text x="49.9693%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.7995%" y="357" width="0.0802%" height="15" fill="rgb(207,101,8)" fg:x="621" fg:w="1"/><text x="50.0495%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7995%" y="341" width="0.0802%" height="15" fill="rgb(237,67,44)" fg:x="621" fg:w="1"/><text x="50.0495%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.7995%" y="325" width="0.0802%" height="15" fill="rgb(236,218,7)" fg:x="621" fg:w="1"/><text x="50.0495%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.7995%" y="309" width="0.0802%" height="15" fill="rgb(252,207,10)" fg:x="621" fg:w="1"/><text x="50.0495%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.7995%" y="293" width="0.0802%" height="15" fill="rgb(221,175,6)" fg:x="621" fg:w="1"/><text x="50.0495%" y="303.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (11 samples, 0.88%)</title><rect x="49.1580%" y="437" width="0.8821%" height="15" fill="rgb(230,105,53)" fg:x="613" fg:w="11"/><text x="49.4080%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (11 samples, 0.88%)</title><rect x="49.1580%" y="421" width="0.8821%" height="15" fill="rgb(253,83,6)" fg:x="613" fg:w="11"/><text x="49.4080%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (11 samples, 0.88%)</title><rect x="49.1580%" y="405" width="0.8821%" height="15" fill="rgb(206,198,44)" fg:x="613" fg:w="11"/><text x="49.4080%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="49.8797%" y="389" width="0.1604%" height="15" fill="rgb(206,164,29)" fg:x="622" fg:w="2"/><text x="50.1297%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="49.8797%" y="373" width="0.1604%" height="15" fill="rgb(215,2,50)" fg:x="622" fg:w="2"/><text x="50.1297%" y="383.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="49.8797%" y="357" width="0.1604%" height="15" fill="rgb(246,127,18)" fg:x="622" fg:w="2"/><text x="50.1297%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="49.8797%" y="341" width="0.1604%" height="15" fill="rgb(232,6,21)" fg:x="622" fg:w="2"/><text x="50.1297%" y="351.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="49.8797%" y="325" width="0.1604%" height="15" fill="rgb(224,154,1)" fg:x="622" fg:w="2"/><text x="50.1297%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.9599%" y="309" width="0.0802%" height="15" fill="rgb(248,135,32)" fg:x="623" fg:w="1"/><text x="50.2099%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.9599%" y="293" width="0.0802%" height="15" fill="rgb(253,129,38)" fg:x="623" fg:w="1"/><text x="50.2099%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.9599%" y="277" width="0.0802%" height="15" fill="rgb(214,110,11)" fg:x="623" fg:w="1"/><text x="50.2099%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="49.9599%" y="261" width="0.0802%" height="15" fill="rgb(246,150,22)" fg:x="623" fg:w="1"/><text x="50.2099%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="49.9599%" y="245" width="0.0802%" height="15" fill="rgb(219,170,39)" fg:x="623" fg:w="1"/><text x="50.2099%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9599%" y="229" width="0.0802%" height="15" fill="rgb(221,143,52)" fg:x="623" fg:w="1"/><text x="50.2099%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.9599%" y="213" width="0.0802%" height="15" fill="rgb(237,122,11)" fg:x="623" fg:w="1"/><text x="50.2099%" y="223.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.9599%" y="197" width="0.0802%" height="15" fill="rgb(217,114,13)" fg:x="623" fg:w="1"/><text x="50.2099%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.9599%" y="181" width="0.0802%" height="15" fill="rgb(218,184,28)" fg:x="623" fg:w="1"/><text x="50.2099%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.9599%" y="165" width="0.0802%" height="15" fill="rgb(237,33,22)" fg:x="623" fg:w="1"/><text x="50.2099%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.9599%" y="149" width="0.0802%" height="15" fill="rgb(224,56,42)" fg:x="623" fg:w="1"/><text x="50.2099%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9599%" y="133" width="0.0802%" height="15" fill="rgb(216,138,53)" fg:x="623" fg:w="1"/><text x="50.2099%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.9599%" y="117" width="0.0802%" height="15" fill="rgb(233,229,40)" fg:x="623" fg:w="1"/><text x="50.2099%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.9599%" y="101" width="0.0802%" height="15" fill="rgb(252,105,0)" fg:x="623" fg:w="1"/><text x="50.2099%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.9599%" y="85" width="0.0802%" height="15" fill="rgb(212,75,24)" fg:x="623" fg:w="1"/><text x="50.2099%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.9599%" y="69" width="0.0802%" height="15" fill="rgb(235,168,50)" fg:x="623" fg:w="1"/><text x="50.2099%" y="79.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="49.9599%" y="53" width="0.0802%" height="15" fill="rgb(247,204,12)" fg:x="623" fg:w="1"/><text x="50.2099%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="50.0401%" y="437" width="0.0802%" height="15" fill="rgb(250,203,27)" fg:x="624" fg:w="1"/><text x="50.2901%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.0401%" y="421" width="0.0802%" height="15" fill="rgb(221,215,2)" fg:x="624" fg:w="1"/><text x="50.2901%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.0401%" y="405" width="0.0802%" height="15" fill="rgb(242,163,47)" fg:x="624" fg:w="1"/><text x="50.2901%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.4411%" y="261" width="0.2406%" height="15" fill="rgb(237,136,50)" fg:x="629" fg:w="3"/><text x="50.6911%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="50.4411%" y="245" width="0.2406%" height="15" fill="rgb(217,201,47)" fg:x="629" fg:w="3"/><text x="50.6911%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="50.4411%" y="229" width="0.2406%" height="15" fill="rgb(212,38,47)" fg:x="629" fg:w="3"/><text x="50.6911%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="50.4411%" y="213" width="0.2406%" height="15" fill="rgb(254,113,41)" fg:x="629" fg:w="3"/><text x="50.6911%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="50.4411%" y="197" width="0.2406%" height="15" fill="rgb(236,7,22)" fg:x="629" fg:w="3"/><text x="50.6911%" y="207.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="50.4411%" y="181" width="0.2406%" height="15" fill="rgb(235,81,25)" fg:x="629" fg:w="3"/><text x="50.6911%" y="191.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="50.4411%" y="165" width="0.2406%" height="15" fill="rgb(216,41,31)" fg:x="629" fg:w="3"/><text x="50.6911%" y="175.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="50.2005%" y="405" width="0.5613%" height="15" fill="rgb(249,219,15)" fg:x="626" fg:w="7"/><text x="50.4505%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="50.2807%" y="389" width="0.4812%" height="15" fill="rgb(248,201,3)" fg:x="627" fg:w="6"/><text x="50.5307%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="50.3609%" y="373" width="0.4010%" height="15" fill="rgb(249,141,18)" fg:x="628" fg:w="5"/><text x="50.6109%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="50.4411%" y="357" width="0.3208%" height="15" fill="rgb(222,32,39)" fg:x="629" fg:w="4"/><text x="50.6911%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="50.4411%" y="341" width="0.3208%" height="15" fill="rgb(237,139,51)" fg:x="629" fg:w="4"/><text x="50.6911%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="50.4411%" y="325" width="0.3208%" height="15" fill="rgb(218,210,4)" fg:x="629" fg:w="4"/><text x="50.6911%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.32%)</title><rect x="50.4411%" y="309" width="0.3208%" height="15" fill="rgb(217,199,13)" fg:x="629" fg:w="4"/><text x="50.6911%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.32%)</title><rect x="50.4411%" y="293" width="0.3208%" height="15" fill="rgb(222,118,25)" fg:x="629" fg:w="4"/><text x="50.6911%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.32%)</title><rect x="50.4411%" y="277" width="0.3208%" height="15" fill="rgb(241,70,28)" fg:x="629" fg:w="4"/><text x="50.6911%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.6816%" y="261" width="0.0802%" height="15" fill="rgb(205,51,41)" fg:x="632" fg:w="1"/><text x="50.9316%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.6816%" y="245" width="0.0802%" height="15" fill="rgb(237,165,49)" fg:x="632" fg:w="1"/><text x="50.9316%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.7618%" y="405" width="0.0802%" height="15" fill="rgb(213,10,51)" fg:x="633" fg:w="1"/><text x="51.0118%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="50.8420%" y="405" width="0.1604%" height="15" fill="rgb(245,89,32)" fg:x="634" fg:w="2"/><text x="51.0920%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="50.8420%" y="389" width="0.1604%" height="15" fill="rgb(249,81,54)" fg:x="634" fg:w="2"/><text x="51.0920%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="50.8420%" y="373" width="0.1604%" height="15" fill="rgb(223,134,14)" fg:x="634" fg:w="2"/><text x="51.0920%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="50.8420%" y="357" width="0.1604%" height="15" fill="rgb(233,62,37)" fg:x="634" fg:w="2"/><text x="51.0920%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="50.8420%" y="341" width="0.1604%" height="15" fill="rgb(219,117,42)" fg:x="634" fg:w="2"/><text x="51.0920%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="50.8420%" y="325" width="0.1604%" height="15" fill="rgb(248,40,28)" fg:x="634" fg:w="2"/><text x="51.0920%" y="335.50"></text></g><g><title>plugins_core::tools::contained_by (24 samples, 1.92%)</title><rect x="49.1580%" y="453" width="1.9246%" height="15" fill="rgb(246,66,35)" fg:x="613" fg:w="24"/><text x="49.4080%" y="463.50">p..</text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.96%)</title><rect x="50.1203%" y="437" width="0.9623%" height="15" fill="rgb(250,229,22)" fg:x="625" fg:w="12"/><text x="50.3703%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.96%)</title><rect x="50.1203%" y="421" width="0.9623%" height="15" fill="rgb(213,89,18)" fg:x="625" fg:w="12"/><text x="50.3703%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0024%" y="405" width="0.0802%" height="15" fill="rgb(213,122,9)" fg:x="636" fg:w="1"/><text x="51.2524%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0024%" y="389" width="0.0802%" height="15" fill="rgb(220,213,48)" fg:x="636" fg:w="1"/><text x="51.2524%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="51.0024%" y="373" width="0.0802%" height="15" fill="rgb(244,109,54)" fg:x="636" fg:w="1"/><text x="51.2524%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="51.0024%" y="357" width="0.0802%" height="15" fill="rgb(254,104,49)" fg:x="636" fg:w="1"/><text x="51.2524%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0826%" y="309" width="0.0802%" height="15" fill="rgb(219,28,32)" fg:x="637" fg:w="1"/><text x="51.3326%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.0826%" y="293" width="0.0802%" height="15" fill="rgb(249,153,33)" fg:x="637" fg:w="1"/><text x="51.3326%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="51.0826%" y="341" width="0.1604%" height="15" fill="rgb(230,116,21)" fg:x="637" fg:w="2"/><text x="51.3326%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="51.0826%" y="325" width="0.1604%" height="15" fill="rgb(247,110,3)" fg:x="637" fg:w="2"/><text x="51.3326%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.1628%" y="309" width="0.0802%" height="15" fill="rgb(227,128,3)" fg:x="638" fg:w="1"/><text x="51.4128%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1628%" y="293" width="0.0802%" height="15" fill="rgb(208,21,1)" fg:x="638" fg:w="1"/><text x="51.4128%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="51.1628%" y="277" width="0.0802%" height="15" fill="rgb(225,24,20)" fg:x="638" fg:w="1"/><text x="51.4128%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.1628%" y="261" width="0.0802%" height="15" fill="rgb(250,159,24)" fg:x="638" fg:w="1"/><text x="51.4128%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.2430%" y="293" width="0.0802%" height="15" fill="rgb(214,30,53)" fg:x="639" fg:w="1"/><text x="51.4930%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="51.0826%" y="437" width="0.3208%" height="15" fill="rgb(243,198,11)" fg:x="637" fg:w="4"/><text x="51.3326%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="51.0826%" y="421" width="0.3208%" height="15" fill="rgb(232,33,1)" fg:x="637" fg:w="4"/><text x="51.3326%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="51.0826%" y="405" width="0.3208%" height="15" fill="rgb(242,60,11)" fg:x="637" fg:w="4"/><text x="51.3326%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="51.0826%" y="389" width="0.3208%" height="15" fill="rgb(241,229,34)" fg:x="637" fg:w="4"/><text x="51.3326%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (4 samples, 0.32%)</title><rect x="51.0826%" y="373" width="0.3208%" height="15" fill="rgb(230,92,51)" fg:x="637" fg:w="4"/><text x="51.3326%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="51.0826%" y="357" width="0.3208%" height="15" fill="rgb(212,209,8)" fg:x="637" fg:w="4"/><text x="51.3326%" y="367.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="51.2430%" y="341" width="0.1604%" height="15" fill="rgb(241,55,35)" fg:x="639" fg:w="2"/><text x="51.4930%" y="351.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="51.2430%" y="325" width="0.1604%" height="15" fill="rgb(208,187,52)" fg:x="639" fg:w="2"/><text x="51.4930%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="51.2430%" y="309" width="0.1604%" height="15" fill="rgb(251,110,17)" fg:x="639" fg:w="2"/><text x="51.4930%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.3232%" y="293" width="0.0802%" height="15" fill="rgb(246,225,54)" fg:x="640" fg:w="1"/><text x="51.5732%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.3232%" y="277" width="0.0802%" height="15" fill="rgb(220,109,6)" fg:x="640" fg:w="1"/><text x="51.5732%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="51.3232%" y="261" width="0.0802%" height="15" fill="rgb(228,56,50)" fg:x="640" fg:w="1"/><text x="51.5732%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="51.3232%" y="245" width="0.0802%" height="15" fill="rgb(230,34,30)" fg:x="640" fg:w="1"/><text x="51.5732%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="51.3232%" y="229" width="0.0802%" height="15" fill="rgb(205,28,42)" fg:x="640" fg:w="1"/><text x="51.5732%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="51.3232%" y="213" width="0.0802%" height="15" fill="rgb(215,68,0)" fg:x="640" fg:w="1"/><text x="51.5732%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="51.3232%" y="197" width="0.0802%" height="15" fill="rgb(206,91,47)" fg:x="640" fg:w="1"/><text x="51.5732%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.3232%" y="181" width="0.0802%" height="15" fill="rgb(241,159,43)" fg:x="640" fg:w="1"/><text x="51.5732%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="51.3232%" y="165" width="0.0802%" height="15" fill="rgb(232,191,38)" fg:x="640" fg:w="1"/><text x="51.5732%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="51.3232%" y="149" width="0.0802%" height="15" fill="rgb(212,180,41)" fg:x="640" fg:w="1"/><text x="51.5732%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="51.3232%" y="133" width="0.0802%" height="15" fill="rgb(236,134,49)" fg:x="640" fg:w="1"/><text x="51.5732%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="51.3232%" y="117" width="0.0802%" height="15" fill="rgb(221,83,26)" fg:x="640" fg:w="1"/><text x="51.5732%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="51.3232%" y="101" width="0.0802%" height="15" fill="rgb(215,87,39)" fg:x="640" fg:w="1"/><text x="51.5732%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="51.3232%" y="85" width="0.0802%" height="15" fill="rgb(242,28,29)" fg:x="640" fg:w="1"/><text x="51.5732%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="51.3232%" y="69" width="0.0802%" height="15" fill="rgb(212,219,47)" fg:x="640" fg:w="1"/><text x="51.5732%" y="79.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="51.3232%" y="53" width="0.0802%" height="15" fill="rgb(221,35,20)" fg:x="640" fg:w="1"/><text x="51.5732%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.08%)</title><rect x="51.3232%" y="37" width="0.0802%" height="15" fill="rgb(234,144,13)" fg:x="640" fg:w="1"/><text x="51.5732%" y="47.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.4034%" y="405" width="0.0802%" height="15" fill="rgb(237,41,27)" fg:x="641" fg:w="1"/><text x="51.6534%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.4034%" y="389" width="0.0802%" height="15" fill="rgb(253,175,5)" fg:x="641" fg:w="1"/><text x="51.6534%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.4836%" y="405" width="0.0802%" height="15" fill="rgb(235,210,51)" fg:x="642" fg:w="1"/><text x="51.7336%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="51.4836%" y="389" width="0.0802%" height="15" fill="rgb(241,180,35)" fg:x="642" fg:w="1"/><text x="51.7336%" y="399.50"></text></g><g><title>plugins_core::tools::occupied_by (7 samples, 0.56%)</title><rect x="51.0826%" y="453" width="0.5613%" height="15" fill="rgb(219,45,16)" fg:x="637" fg:w="7"/><text x="51.3326%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="51.4034%" y="437" width="0.2406%" height="15" fill="rgb(247,212,4)" fg:x="641" fg:w="3"/><text x="51.6534%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="51.4034%" y="421" width="0.2406%" height="15" fill="rgb(224,211,1)" fg:x="641" fg:w="3"/><text x="51.6534%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.5638%" y="405" width="0.0802%" height="15" fill="rgb(210,193,36)" fg:x="643" fg:w="1"/><text x="51.8138%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.5638%" y="389" width="0.0802%" height="15" fill="rgb(215,121,20)" fg:x="643" fg:w="1"/><text x="51.8138%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.5638%" y="373" width="0.0802%" height="15" fill="rgb(238,146,2)" fg:x="643" fg:w="1"/><text x="51.8138%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.5638%" y="357" width="0.0802%" height="15" fill="rgb(254,123,45)" fg:x="643" fg:w="1"/><text x="51.8138%" y="367.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (33 samples, 2.65%)</title><rect x="49.0778%" y="469" width="2.6464%" height="15" fill="rgb(225,126,11)" fg:x="612" fg:w="33"/><text x="49.3278%" y="479.50">pl..</text></g><g><title>plugins_core::tools::worn_by (1 samples, 0.08%)</title><rect x="51.6439%" y="453" width="0.0802%" height="15" fill="rgb(239,12,5)" fg:x="644" fg:w="1"/><text x="51.8939%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="51.6439%" y="437" width="0.0802%" height="15" fill="rgb(241,207,14)" fg:x="644" fg:w="1"/><text x="51.8939%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="51.6439%" y="421" width="0.0802%" height="15" fill="rgb(227,134,33)" fg:x="644" fg:w="1"/><text x="51.8939%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.6439%" y="405" width="0.0802%" height="15" fill="rgb(221,40,52)" fg:x="644" fg:w="1"/><text x="51.8939%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.6439%" y="389" width="0.0802%" height="15" fill="rgb(206,93,8)" fg:x="644" fg:w="1"/><text x="51.8939%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.7241%" y="437" width="0.0802%" height="15" fill="rgb(242,160,22)" fg:x="645" fg:w="1"/><text x="51.9741%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8845%" y="389" width="0.0802%" height="15" fill="rgb(232,204,40)" fg:x="647" fg:w="1"/><text x="52.1345%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8845%" y="373" width="0.0802%" height="15" fill="rgb(247,210,47)" fg:x="647" fg:w="1"/><text x="52.1345%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.8845%" y="357" width="0.0802%" height="15" fill="rgb(211,91,7)" fg:x="647" fg:w="1"/><text x="52.1345%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8845%" y="341" width="0.0802%" height="15" fill="rgb(252,160,34)" fg:x="647" fg:w="1"/><text x="52.1345%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.8845%" y="325" width="0.0802%" height="15" fill="rgb(220,34,39)" fg:x="647" fg:w="1"/><text x="52.1345%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.8845%" y="309" width="0.0802%" height="15" fill="rgb(247,49,38)" fg:x="647" fg:w="1"/><text x="52.1345%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.8845%" y="293" width="0.0802%" height="15" fill="rgb(228,175,44)" fg:x="647" fg:w="1"/><text x="52.1345%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.8845%" y="277" width="0.0802%" height="15" fill="rgb(218,214,32)" fg:x="647" fg:w="1"/><text x="52.1345%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8845%" y="261" width="0.0802%" height="15" fill="rgb(213,50,12)" fg:x="647" fg:w="1"/><text x="52.1345%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.8845%" y="245" width="0.0802%" height="15" fill="rgb(219,35,41)" fg:x="647" fg:w="1"/><text x="52.1345%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.8845%" y="229" width="0.0802%" height="15" fill="rgb(219,18,38)" fg:x="647" fg:w="1"/><text x="52.1345%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::name (4 samples, 0.32%)</title><rect x="51.8043%" y="437" width="0.3208%" height="15" fill="rgb(223,217,6)" fg:x="646" fg:w="4"/><text x="52.0543%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="51.8043%" y="421" width="0.3208%" height="15" fill="rgb(208,193,35)" fg:x="646" fg:w="4"/><text x="52.0543%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="51.8043%" y="405" width="0.3208%" height="15" fill="rgb(254,212,54)" fg:x="646" fg:w="4"/><text x="52.0543%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9647%" y="389" width="0.1604%" height="15" fill="rgb(205,10,2)" fg:x="648" fg:w="2"/><text x="52.2147%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9647%" y="373" width="0.1604%" height="15" fill="rgb(230,133,29)" fg:x="648" fg:w="2"/><text x="52.2147%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="51.9647%" y="357" width="0.1604%" height="15" fill="rgb(226,14,15)" fg:x="648" fg:w="2"/><text x="52.2147%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9647%" y="341" width="0.1604%" height="15" fill="rgb(226,140,54)" fg:x="648" fg:w="2"/><text x="52.2147%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="51.9647%" y="325" width="0.1604%" height="15" fill="rgb(250,47,41)" fg:x="648" fg:w="2"/><text x="52.2147%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.9647%" y="309" width="0.1604%" height="15" fill="rgb(227,218,41)" fg:x="648" fg:w="2"/><text x="52.2147%" y="319.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.0449%" y="293" width="0.0802%" height="15" fill="rgb(254,183,7)" fg:x="649" fg:w="1"/><text x="52.2949%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.0449%" y="277" width="0.0802%" height="15" fill="rgb(206,84,53)" fg:x="649" fg:w="1"/><text x="52.2949%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (40 samples, 3.21%)</title><rect x="49.0778%" y="501" width="3.2077%" height="15" fill="rgb(213,177,2)" fg:x="612" fg:w="40"/><text x="49.3278%" y="511.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (40 samples, 3.21%)</title><rect x="49.0778%" y="485" width="3.2077%" height="15" fill="rgb(234,28,29)" fg:x="612" fg:w="40"/><text x="49.3278%" y="495.50">&lt;pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (7 samples, 0.56%)</title><rect x="51.7241%" y="469" width="0.5613%" height="15" fill="rgb(248,211,38)" fg:x="645" fg:w="7"/><text x="51.9741%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (7 samples, 0.56%)</title><rect x="51.7241%" y="453" width="0.5613%" height="15" fill="rgb(246,30,0)" fg:x="645" fg:w="7"/><text x="51.9741%" y="463.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="52.1251%" y="437" width="0.1604%" height="15" fill="rgb(244,115,24)" fg:x="650" fg:w="2"/><text x="52.3751%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="52.1251%" y="421" width="0.1604%" height="15" fill="rgb(226,193,14)" fg:x="650" fg:w="2"/><text x="52.3751%" y="431.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.1251%" y="405" width="0.1604%" height="15" fill="rgb(211,196,48)" fg:x="650" fg:w="2"/><text x="52.3751%" y="415.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="52.1251%" y="389" width="0.1604%" height="15" fill="rgb(235,32,20)" fg:x="650" fg:w="2"/><text x="52.3751%" y="399.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.16%)</title><rect x="52.1251%" y="373" width="0.1604%" height="15" fill="rgb(251,151,49)" fg:x="650" fg:w="2"/><text x="52.3751%" y="383.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="52.2855%" y="501" width="0.0802%" height="15" fill="rgb(254,141,38)" fg:x="652" fg:w="1"/><text x="52.5355%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2855%" y="485" width="0.0802%" height="15" fill="rgb(209,118,44)" fg:x="652" fg:w="1"/><text x="52.5355%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2855%" y="469" width="0.0802%" height="15" fill="rgb(205,81,4)" fg:x="652" fg:w="1"/><text x="52.5355%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.2855%" y="453" width="0.0802%" height="15" fill="rgb(241,25,6)" fg:x="652" fg:w="1"/><text x="52.5355%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.2855%" y="437" width="0.0802%" height="15" fill="rgb(212,179,29)" fg:x="652" fg:w="1"/><text x="52.5355%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.2855%" y="421" width="0.0802%" height="15" fill="rgb(241,40,32)" fg:x="652" fg:w="1"/><text x="52.5355%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2855%" y="405" width="0.0802%" height="15" fill="rgb(223,35,2)" fg:x="652" fg:w="1"/><text x="52.5355%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2855%" y="389" width="0.0802%" height="15" fill="rgb(221,125,54)" fg:x="652" fg:w="1"/><text x="52.5355%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.2855%" y="373" width="0.0802%" height="15" fill="rgb(230,5,49)" fg:x="652" fg:w="1"/><text x="52.5355%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.2855%" y="357" width="0.0802%" height="15" fill="rgb(221,157,7)" fg:x="652" fg:w="1"/><text x="52.5355%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.2855%" y="341" width="0.0802%" height="15" fill="rgb(242,163,10)" fg:x="652" fg:w="1"/><text x="52.5355%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.2855%" y="325" width="0.0802%" height="15" fill="rgb(232,30,2)" fg:x="652" fg:w="1"/><text x="52.5355%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.2855%" y="309" width="0.0802%" height="15" fill="rgb(245,102,40)" fg:x="652" fg:w="1"/><text x="52.5355%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="52.3657%" y="485" width="0.0802%" height="15" fill="rgb(242,10,41)" fg:x="653" fg:w="1"/><text x="52.6157%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="52.3657%" y="469" width="0.0802%" height="15" fill="rgb(236,184,36)" fg:x="653" fg:w="1"/><text x="52.6157%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="52.3657%" y="453" width="0.0802%" height="15" fill="rgb(247,147,48)" fg:x="653" fg:w="1"/><text x="52.6157%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="52.3657%" y="437" width="0.0802%" height="15" fill="rgb(226,166,2)" fg:x="653" fg:w="1"/><text x="52.6157%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="52.4459%" y="421" width="0.0802%" height="15" fill="rgb(251,196,7)" fg:x="654" fg:w="1"/><text x="52.6959%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5261%" y="405" width="0.0802%" height="15" fill="rgb(241,40,13)" fg:x="655" fg:w="1"/><text x="52.7761%" y="415.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (3 samples, 0.24%)</title><rect x="52.4459%" y="485" width="0.2406%" height="15" fill="rgb(254,4,12)" fg:x="654" fg:w="3"/><text x="52.6959%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (3 samples, 0.24%)</title><rect x="52.4459%" y="469" width="0.2406%" height="15" fill="rgb(244,139,49)" fg:x="654" fg:w="3"/><text x="52.6959%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (3 samples, 0.24%)</title><rect x="52.4459%" y="453" width="0.2406%" height="15" fill="rgb(227,28,42)" fg:x="654" fg:w="3"/><text x="52.6959%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (3 samples, 0.24%)</title><rect x="52.4459%" y="437" width="0.2406%" height="15" fill="rgb(231,135,32)" fg:x="654" fg:w="3"/><text x="52.6959%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="52.5261%" y="421" width="0.1604%" height="15" fill="rgb(244,182,3)" fg:x="655" fg:w="2"/><text x="52.7761%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="52.6063%" y="405" width="0.0802%" height="15" fill="rgb(247,46,19)" fg:x="656" fg:w="1"/><text x="52.8563%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_ok (5 samples, 0.40%)</title><rect x="52.3657%" y="501" width="0.4010%" height="15" fill="rgb(251,179,10)" fg:x="653" fg:w="5"/><text x="52.6157%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::ObservedEntity&gt; (1 samples, 0.08%)</title><rect x="52.6864%" y="485" width="0.0802%" height="15" fill="rgb(229,222,18)" fg:x="657" fg:w="1"/><text x="52.9364%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.6864%" y="469" width="0.0802%" height="15" fill="rgb(251,107,20)" fg:x="657" fg:w="1"/><text x="52.9364%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="52.7666%" y="453" width="0.0802%" height="15" fill="rgb(233,193,19)" fg:x="658" fg:w="1"/><text x="53.0166%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.7666%" y="437" width="0.0802%" height="15" fill="rgb(229,146,53)" fg:x="658" fg:w="1"/><text x="53.0166%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7666%" y="421" width="0.0802%" height="15" fill="rgb(244,52,11)" fg:x="658" fg:w="1"/><text x="53.0166%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="52.7666%" y="405" width="0.0802%" height="15" fill="rgb(245,211,46)" fg:x="658" fg:w="1"/><text x="53.0166%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="52.7666%" y="389" width="0.0802%" height="15" fill="rgb(213,8,31)" fg:x="658" fg:w="1"/><text x="53.0166%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.7666%" y="373" width="0.0802%" height="15" fill="rgb(205,101,39)" fg:x="658" fg:w="1"/><text x="53.0166%" y="383.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="52.7666%" y="485" width="0.1604%" height="15" fill="rgb(212,157,1)" fg:x="658" fg:w="2"/><text x="53.0166%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="52.7666%" y="469" width="0.1604%" height="15" fill="rgb(232,30,46)" fg:x="658" fg:w="2"/><text x="53.0166%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="52.8468%" y="453" width="0.0802%" height="15" fill="rgb(216,201,6)" fg:x="659" fg:w="1"/><text x="53.0968%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="52.8468%" y="437" width="0.0802%" height="15" fill="rgb(209,18,6)" fg:x="659" fg:w="1"/><text x="53.0968%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="53.0072%" y="453" width="0.4010%" height="15" fill="rgb(219,138,3)" fg:x="661" fg:w="5"/><text x="53.2572%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="53.0874%" y="437" width="0.3208%" height="15" fill="rgb(210,91,46)" fg:x="662" fg:w="4"/><text x="53.3374%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.1676%" y="421" width="0.2406%" height="15" fill="rgb(241,80,44)" fg:x="663" fg:w="3"/><text x="53.4176%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.2478%" y="405" width="0.1604%" height="15" fill="rgb(236,205,36)" fg:x="664" fg:w="2"/><text x="53.4978%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.3280%" y="389" width="0.0802%" height="15" fill="rgb(205,59,37)" fg:x="665" fg:w="1"/><text x="53.5780%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.3280%" y="373" width="0.0802%" height="15" fill="rgb(239,166,39)" fg:x="665" fg:w="1"/><text x="53.5780%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.3280%" y="357" width="0.0802%" height="15" fill="rgb(239,146,40)" fg:x="665" fg:w="1"/><text x="53.5780%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.3280%" y="341" width="0.0802%" height="15" fill="rgb(231,11,52)" fg:x="665" fg:w="1"/><text x="53.5780%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.3280%" y="325" width="0.0802%" height="15" fill="rgb(253,21,37)" fg:x="665" fg:w="1"/><text x="53.5780%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.3280%" y="309" width="0.0802%" height="15" fill="rgb(224,87,39)" fg:x="665" fg:w="1"/><text x="53.5780%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.3280%" y="293" width="0.0802%" height="15" fill="rgb(249,15,46)" fg:x="665" fg:w="1"/><text x="53.5780%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.3280%" y="277" width="0.0802%" height="15" fill="rgb(250,37,51)" fg:x="665" fg:w="1"/><text x="53.5780%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.3280%" y="261" width="0.0802%" height="15" fill="rgb(205,185,43)" fg:x="665" fg:w="1"/><text x="53.5780%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.3280%" y="245" width="0.0802%" height="15" fill="rgb(206,65,41)" fg:x="665" fg:w="1"/><text x="53.5780%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.3280%" y="229" width="0.0802%" height="15" fill="rgb(236,159,32)" fg:x="665" fg:w="1"/><text x="53.5780%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.3280%" y="213" width="0.0802%" height="15" fill="rgb(228,199,27)" fg:x="665" fg:w="1"/><text x="53.5780%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="53.4082%" y="453" width="0.0802%" height="15" fill="rgb(212,0,37)" fg:x="666" fg:w="1"/><text x="53.6582%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="53.4082%" y="437" width="0.0802%" height="15" fill="rgb(248,50,11)" fg:x="666" fg:w="1"/><text x="53.6582%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.4082%" y="421" width="0.0802%" height="15" fill="rgb(231,164,25)" fg:x="666" fg:w="1"/><text x="53.6582%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="53.5686%" y="421" width="0.0802%" height="15" fill="rgb(238,38,39)" fg:x="668" fg:w="1"/><text x="53.8186%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.5686%" y="405" width="0.0802%" height="15" fill="rgb(210,15,50)" fg:x="668" fg:w="1"/><text x="53.8186%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.80%)</title><rect x="52.9270%" y="485" width="0.8019%" height="15" fill="rgb(251,126,36)" fg:x="660" fg:w="10"/><text x="53.1770%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.80%)</title><rect x="52.9270%" y="469" width="0.8019%" height="15" fill="rgb(243,59,26)" fg:x="660" fg:w="10"/><text x="53.1770%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="53.4884%" y="453" width="0.2406%" height="15" fill="rgb(215,24,30)" fg:x="667" fg:w="3"/><text x="53.7384%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="53.4884%" y="437" width="0.2406%" height="15" fill="rgb(253,50,51)" fg:x="667" fg:w="3"/><text x="53.7384%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="53.6488%" y="421" width="0.0802%" height="15" fill="rgb(252,2,16)" fg:x="669" fg:w="1"/><text x="53.8988%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="53.6488%" y="405" width="0.0802%" height="15" fill="rgb(209,123,36)" fg:x="669" fg:w="1"/><text x="53.8988%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="53.6488%" y="389" width="0.0802%" height="15" fill="rgb(245,60,15)" fg:x="669" fg:w="1"/><text x="53.8988%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.6488%" y="373" width="0.0802%" height="15" fill="rgb(246,4,13)" fg:x="669" fg:w="1"/><text x="53.8988%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6488%" y="357" width="0.0802%" height="15" fill="rgb(210,223,46)" fg:x="669" fg:w="1"/><text x="53.8988%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7289%" y="453" width="0.0802%" height="15" fill="rgb(248,1,9)" fg:x="670" fg:w="1"/><text x="53.9789%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7289%" y="437" width="0.0802%" height="15" fill="rgb(254,2,34)" fg:x="670" fg:w="1"/><text x="53.9789%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.7289%" y="421" width="0.0802%" height="15" fill="rgb(239,176,1)" fg:x="670" fg:w="1"/><text x="53.9789%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7289%" y="405" width="0.0802%" height="15" fill="rgb(250,25,32)" fg:x="670" fg:w="1"/><text x="53.9789%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.7289%" y="389" width="0.0802%" height="15" fill="rgb(225,28,39)" fg:x="670" fg:w="1"/><text x="53.9789%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.7289%" y="373" width="0.0802%" height="15" fill="rgb(230,166,37)" fg:x="670" fg:w="1"/><text x="53.9789%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.7289%" y="357" width="0.0802%" height="15" fill="rgb(246,220,4)" fg:x="670" fg:w="1"/><text x="53.9789%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.7289%" y="341" width="0.0802%" height="15" fill="rgb(219,119,33)" fg:x="670" fg:w="1"/><text x="53.9789%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.7289%" y="325" width="0.0802%" height="15" fill="rgb(221,207,38)" fg:x="670" fg:w="1"/><text x="53.9789%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.7289%" y="309" width="0.0802%" height="15" fill="rgb(214,153,5)" fg:x="670" fg:w="1"/><text x="53.9789%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.7289%" y="293" width="0.0802%" height="15" fill="rgb(223,50,16)" fg:x="670" fg:w="1"/><text x="53.9789%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.7289%" y="277" width="0.0802%" height="15" fill="rgb(209,207,12)" fg:x="670" fg:w="1"/><text x="53.9789%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.7289%" y="261" width="0.0802%" height="15" fill="rgb(207,3,46)" fg:x="670" fg:w="1"/><text x="53.9789%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.7289%" y="245" width="0.0802%" height="15" fill="rgb(232,45,53)" fg:x="670" fg:w="1"/><text x="53.9789%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.7289%" y="229" width="0.0802%" height="15" fill="rgb(206,140,15)" fg:x="670" fg:w="1"/><text x="53.9789%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.8091%" y="421" width="0.0802%" height="15" fill="rgb(245,66,17)" fg:x="671" fg:w="1"/><text x="54.0591%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (2 samples, 0.16%)</title><rect x="53.8091%" y="453" width="0.1604%" height="15" fill="rgb(221,25,37)" fg:x="671" fg:w="2"/><text x="54.0591%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="53.8091%" y="437" width="0.1604%" height="15" fill="rgb(215,99,47)" fg:x="671" fg:w="2"/><text x="54.0591%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="53.8893%" y="421" width="0.0802%" height="15" fill="rgb(219,154,44)" fg:x="672" fg:w="1"/><text x="54.1393%" y="431.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.32%)</title><rect x="53.7289%" y="485" width="0.3208%" height="15" fill="rgb(210,197,36)" fg:x="670" fg:w="4"/><text x="53.9789%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="53.7289%" y="469" width="0.3208%" height="15" fill="rgb(217,137,10)" fg:x="670" fg:w="4"/><text x="53.9789%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="53.9695%" y="453" width="0.0802%" height="15" fill="rgb(240,216,26)" fg:x="673" fg:w="1"/><text x="54.2195%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="53.9695%" y="437" width="0.0802%" height="15" fill="rgb(242,76,17)" fg:x="673" fg:w="1"/><text x="54.2195%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="53.9695%" y="421" width="0.0802%" height="15" fill="rgb(243,142,51)" fg:x="673" fg:w="1"/><text x="54.2195%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="53.9695%" y="405" width="0.0802%" height="15" fill="rgb(233,109,46)" fg:x="673" fg:w="1"/><text x="54.2195%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="53.9695%" y="389" width="0.0802%" height="15" fill="rgb(252,45,32)" fg:x="673" fg:w="1"/><text x="54.2195%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9695%" y="373" width="0.0802%" height="15" fill="rgb(210,69,52)" fg:x="673" fg:w="1"/><text x="54.2195%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="54.0497%" y="469" width="0.0802%" height="15" fill="rgb(242,30,2)" fg:x="674" fg:w="1"/><text x="54.2997%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="54.0497%" y="453" width="0.0802%" height="15" fill="rgb(246,137,1)" fg:x="674" fg:w="1"/><text x="54.2997%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.0497%" y="437" width="0.0802%" height="15" fill="rgb(221,205,25)" fg:x="674" fg:w="1"/><text x="54.2997%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="54.1299%" y="421" width="0.0802%" height="15" fill="rgb(224,44,43)" fg:x="675" fg:w="1"/><text x="54.3799%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.2101%" y="405" width="0.0802%" height="15" fill="rgb(209,81,13)" fg:x="676" fg:w="1"/><text x="54.4601%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3705%" y="341" width="0.0802%" height="15" fill="rgb(227,88,4)" fg:x="678" fg:w="1"/><text x="54.6205%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.3705%" y="325" width="0.0802%" height="15" fill="rgb(228,118,49)" fg:x="678" fg:w="1"/><text x="54.6205%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.3705%" y="309" width="0.0802%" height="15" fill="rgb(225,215,27)" fg:x="678" fg:w="1"/><text x="54.6205%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="54.1299%" y="437" width="0.4010%" height="15" fill="rgb(235,226,1)" fg:x="675" fg:w="5"/><text x="54.3799%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="54.2101%" y="421" width="0.3208%" height="15" fill="rgb(205,107,17)" fg:x="676" fg:w="4"/><text x="54.4601%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.2903%" y="405" width="0.2406%" height="15" fill="rgb(247,85,8)" fg:x="677" fg:w="3"/><text x="54.5403%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.2903%" y="389" width="0.2406%" height="15" fill="rgb(230,220,20)" fg:x="677" fg:w="3"/><text x="54.5403%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="54.2903%" y="373" width="0.2406%" height="15" fill="rgb(237,22,6)" fg:x="677" fg:w="3"/><text x="54.5403%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.2903%" y="357" width="0.2406%" height="15" fill="rgb(253,39,1)" fg:x="677" fg:w="3"/><text x="54.5403%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.4507%" y="341" width="0.0802%" height="15" fill="rgb(251,206,50)" fg:x="679" fg:w="1"/><text x="54.7007%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.4507%" y="325" width="0.0802%" height="15" fill="rgb(239,162,11)" fg:x="679" fg:w="1"/><text x="54.7007%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.72%)</title><rect x="54.0497%" y="485" width="0.7217%" height="15" fill="rgb(234,164,6)" fg:x="674" fg:w="9"/><text x="54.2997%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="54.1299%" y="469" width="0.6415%" height="15" fill="rgb(238,112,10)" fg:x="675" fg:w="8"/><text x="54.3799%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="54.1299%" y="453" width="0.6415%" height="15" fill="rgb(232,78,29)" fg:x="675" fg:w="8"/><text x="54.3799%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="54.5309%" y="437" width="0.2406%" height="15" fill="rgb(232,20,13)" fg:x="680" fg:w="3"/><text x="54.7809%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="54.6111%" y="421" width="0.1604%" height="15" fill="rgb(222,175,9)" fg:x="681" fg:w="2"/><text x="54.8611%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="54.6111%" y="405" width="0.1604%" height="15" fill="rgb(233,61,14)" fg:x="681" fg:w="2"/><text x="54.8611%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="54.6111%" y="389" width="0.1604%" height="15" fill="rgb(224,152,29)" fg:x="681" fg:w="2"/><text x="54.8611%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.6111%" y="373" width="0.1604%" height="15" fill="rgb(232,26,6)" fg:x="681" fg:w="2"/><text x="54.8611%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.6913%" y="357" width="0.0802%" height="15" fill="rgb(210,116,11)" fg:x="682" fg:w="1"/><text x="54.9413%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="54.7715%" y="485" width="0.1604%" height="15" fill="rgb(238,213,15)" fg:x="683" fg:w="2"/><text x="55.0215%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="54.8516%" y="469" width="0.0802%" height="15" fill="rgb(236,177,32)" fg:x="684" fg:w="1"/><text x="55.1016%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.8516%" y="453" width="0.0802%" height="15" fill="rgb(230,36,43)" fg:x="684" fg:w="1"/><text x="55.1016%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9318%" y="437" width="0.0802%" height="15" fill="rgb(212,76,23)" fg:x="685" fg:w="1"/><text x="55.1818%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.9318%" y="421" width="0.0802%" height="15" fill="rgb(225,168,24)" fg:x="685" fg:w="1"/><text x="55.1818%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="54.9318%" y="405" width="0.0802%" height="15" fill="rgb(206,40,44)" fg:x="685" fg:w="1"/><text x="55.1818%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9318%" y="389" width="0.0802%" height="15" fill="rgb(251,213,6)" fg:x="685" fg:w="1"/><text x="55.1818%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.9318%" y="373" width="0.0802%" height="15" fill="rgb(220,7,47)" fg:x="685" fg:w="1"/><text x="55.1818%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.9318%" y="357" width="0.0802%" height="15" fill="rgb(254,130,53)" fg:x="685" fg:w="1"/><text x="55.1818%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.9318%" y="341" width="0.0802%" height="15" fill="rgb(240,2,46)" fg:x="685" fg:w="1"/><text x="55.1818%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.9318%" y="325" width="0.0802%" height="15" fill="rgb(252,144,40)" fg:x="685" fg:w="1"/><text x="55.1818%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9318%" y="309" width="0.0802%" height="15" fill="rgb(226,23,10)" fg:x="685" fg:w="1"/><text x="55.1818%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.9318%" y="293" width="0.0802%" height="15" fill="rgb(212,204,35)" fg:x="685" fg:w="1"/><text x="55.1818%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.9318%" y="277" width="0.0802%" height="15" fill="rgb(218,201,15)" fg:x="685" fg:w="1"/><text x="55.1818%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.9318%" y="261" width="0.0802%" height="15" fill="rgb(224,197,5)" fg:x="685" fg:w="1"/><text x="55.1818%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.9318%" y="245" width="0.0802%" height="15" fill="rgb(224,185,18)" fg:x="685" fg:w="1"/><text x="55.1818%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.9318%" y="229" width="0.0802%" height="15" fill="rgb(251,71,45)" fg:x="685" fg:w="1"/><text x="55.1818%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9318%" y="213" width="0.0802%" height="15" fill="rgb(216,74,24)" fg:x="685" fg:w="1"/><text x="55.1818%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="55.0120%" y="437" width="0.0802%" height="15" fill="rgb(250,36,51)" fg:x="686" fg:w="1"/><text x="55.2620%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="55.0120%" y="421" width="0.0802%" height="15" fill="rgb(209,224,28)" fg:x="686" fg:w="1"/><text x="55.2620%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="55.0120%" y="405" width="0.0802%" height="15" fill="rgb(228,5,10)" fg:x="686" fg:w="1"/><text x="55.2620%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.0120%" y="389" width="0.0802%" height="15" fill="rgb(250,57,40)" fg:x="686" fg:w="1"/><text x="55.2620%" y="399.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="54.9318%" y="469" width="0.2406%" height="15" fill="rgb(228,194,41)" fg:x="685" fg:w="3"/><text x="55.1818%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="54.9318%" y="453" width="0.2406%" height="15" fill="rgb(206,68,23)" fg:x="685" fg:w="3"/><text x="55.1818%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.0922%" y="437" width="0.0802%" height="15" fill="rgb(230,33,29)" fg:x="687" fg:w="1"/><text x="55.3422%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.0922%" y="421" width="0.0802%" height="15" fill="rgb(210,39,32)" fg:x="687" fg:w="1"/><text x="55.3422%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.0922%" y="405" width="0.0802%" height="15" fill="rgb(236,89,23)" fg:x="687" fg:w="1"/><text x="55.3422%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.0922%" y="389" width="0.0802%" height="15" fill="rgb(218,52,52)" fg:x="687" fg:w="1"/><text x="55.3422%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.0922%" y="373" width="0.0802%" height="15" fill="rgb(235,154,5)" fg:x="687" fg:w="1"/><text x="55.3422%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (94 samples, 7.54%)</title><rect x="47.7947%" y="517" width="7.5381%" height="15" fill="rgb(223,168,9)" fg:x="596" fg:w="94"/><text x="48.0447%" y="527.50">&lt;plugins_c..</text></g><g><title>plugins_core::location::change_location (32 samples, 2.57%)</title><rect x="52.7666%" y="501" width="2.5662%" height="15" fill="rgb(220,8,33)" fg:x="658" fg:w="32"/><text x="53.0166%" y="511.50">pl..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="54.9318%" y="485" width="0.4010%" height="15" fill="rgb(216,176,3)" fg:x="685" fg:w="5"/><text x="55.1818%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="55.1724%" y="469" width="0.1604%" height="15" fill="rgb(254,150,22)" fg:x="688" fg:w="2"/><text x="55.4224%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2526%" y="453" width="0.0802%" height="15" fill="rgb(231,61,53)" fg:x="689" fg:w="1"/><text x="55.5026%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.2526%" y="437" width="0.0802%" height="15" fill="rgb(249,177,41)" fg:x="689" fg:w="1"/><text x="55.5026%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.2526%" y="421" width="0.0802%" height="15" fill="rgb(221,122,7)" fg:x="689" fg:w="1"/><text x="55.5026%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.2526%" y="405" width="0.0802%" height="15" fill="rgb(215,115,7)" fg:x="689" fg:w="1"/><text x="55.5026%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.2526%" y="389" width="0.0802%" height="15" fill="rgb(218,108,33)" fg:x="689" fg:w="1"/><text x="55.5026%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.2526%" y="373" width="0.0802%" height="15" fill="rgb(221,205,39)" fg:x="689" fg:w="1"/><text x="55.5026%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.2526%" y="357" width="0.0802%" height="15" fill="rgb(220,171,18)" fg:x="689" fg:w="1"/><text x="55.5026%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.2526%" y="341" width="0.0802%" height="15" fill="rgb(236,188,29)" fg:x="689" fg:w="1"/><text x="55.5026%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.2526%" y="325" width="0.0802%" height="15" fill="rgb(239,29,5)" fg:x="689" fg:w="1"/><text x="55.5026%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.2526%" y="309" width="0.0802%" height="15" fill="rgb(236,114,44)" fg:x="689" fg:w="1"/><text x="55.5026%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.2526%" y="293" width="0.0802%" height="15" fill="rgb(239,214,48)" fg:x="689" fg:w="1"/><text x="55.5026%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.2526%" y="277" width="0.0802%" height="15" fill="rgb(241,56,8)" fg:x="689" fg:w="1"/><text x="55.5026%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.2526%" y="261" width="0.0802%" height="15" fill="rgb(228,201,0)" fg:x="689" fg:w="1"/><text x="55.5026%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.2526%" y="245" width="0.0802%" height="15" fill="rgb(226,219,34)" fg:x="689" fg:w="1"/><text x="55.5026%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (222 samples, 17.80%)</title><rect x="37.6905%" y="709" width="17.8027%" height="15" fill="rgb(209,204,54)" fg:x="470" fg:w="222"/><text x="37.9405%" y="719.50">&lt;engine::session::Session as..</text></g><g><title>kernel::plugins::mw::apply_middleware (222 samples, 17.80%)</title><rect x="37.6905%" y="693" width="17.8027%" height="15" fill="rgb(251,160,17)" fg:x="470" fg:w="222"/><text x="37.9405%" y="703.50">kernel::plugins::mw::apply_m..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (222 samples, 17.80%)</title><rect x="37.6905%" y="677" width="17.8027%" height="15" fill="rgb(235,15,25)" fg:x="470" fg:w="222"/><text x="37.9405%" y="687.50">kernel::plugins::mw::Middlew..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (222 samples, 17.80%)</title><rect x="37.6905%" y="661" width="17.8027%" height="15" fill="rgb(216,209,28)" fg:x="470" fg:w="222"/><text x="37.9405%" y="671.50">&lt;engine::session::ExpandSurr..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (197 samples, 15.80%)</title><rect x="39.6953%" y="645" width="15.7979%" height="15" fill="rgb(248,123,21)" fg:x="495" fg:w="197"/><text x="39.9453%" y="655.50">kernel::plugins::mw::Mid..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (197 samples, 15.80%)</title><rect x="39.6953%" y="629" width="15.7979%" height="15" fill="rgb(226,138,44)" fg:x="495" fg:w="197"/><text x="39.9453%" y="639.50">&lt;plugins_dynlib::Dynamic..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (196 samples, 15.72%)</title><rect x="39.7755%" y="613" width="15.7177%" height="15" fill="rgb(211,104,54)" fg:x="496" fg:w="196"/><text x="40.0255%" y="623.50">kernel::plugins::mw::Mid..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (196 samples, 15.72%)</title><rect x="39.7755%" y="597" width="15.7177%" height="15" fill="rgb(241,198,15)" fg:x="496" fg:w="196"/><text x="40.0255%" y="607.50">core::ops::function::FnO..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (196 samples, 15.72%)</title><rect x="39.7755%" y="581" width="15.7177%" height="15" fill="rgb(227,155,54)" fg:x="496" fg:w="196"/><text x="40.0255%" y="591.50">kernel::plugins::mw::Mid..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (196 samples, 15.72%)</title><rect x="39.7755%" y="565" width="15.7177%" height="15" fill="rgb(225,131,31)" fg:x="496" fg:w="196"/><text x="40.0255%" y="575.50">core::ops::function::FnO..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (196 samples, 15.72%)</title><rect x="39.7755%" y="549" width="15.7177%" height="15" fill="rgb(242,40,17)" fg:x="496" fg:w="196"/><text x="40.0255%" y="559.50">&lt;alloc::boxed::Box&lt;F,A&gt; ..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (196 samples, 15.72%)</title><rect x="39.7755%" y="533" width="15.7177%" height="15" fill="rgb(254,57,35)" fg:x="496" fg:w="196"/><text x="40.0255%" y="543.50">&lt;engine::session::state:..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.3328%" y="517" width="0.1604%" height="15" fill="rgb(240,64,32)" fg:x="690" fg:w="2"/><text x="55.5828%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="55.4932%" y="677" width="0.0802%" height="15" fill="rgb(251,136,26)" fg:x="692" fg:w="1"/><text x="55.7432%" y="687.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="55.4932%" y="661" width="0.0802%" height="15" fill="rgb(208,60,54)" fg:x="692" fg:w="1"/><text x="55.7432%" y="671.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="55.4932%" y="645" width="0.0802%" height="15" fill="rgb(220,13,12)" fg:x="692" fg:w="1"/><text x="55.7432%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="55.4932%" y="629" width="0.0802%" height="15" fill="rgb(213,149,1)" fg:x="692" fg:w="1"/><text x="55.7432%" y="639.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="55.4932%" y="613" width="0.0802%" height="15" fill="rgb(212,191,39)" fg:x="692" fg:w="1"/><text x="55.7432%" y="623.50"></text></g><g><title>&lt;plugins_core::emote::EmotePlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="55.5734%" y="677" width="0.0802%" height="15" fill="rgb(215,221,42)" fg:x="693" fg:w="1"/><text x="55.8234%" y="687.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="55.4932%" y="709" width="0.2406%" height="15" fill="rgb(244,79,23)" fg:x="692" fg:w="3"/><text x="55.7432%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="55.4932%" y="693" width="0.2406%" height="15" fill="rgb(247,17,29)" fg:x="692" fg:w="3"/><text x="55.7432%" y="703.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="55.6536%" y="677" width="0.0802%" height="15" fill="rgb(251,221,21)" fg:x="694" fg:w="1"/><text x="55.9036%" y="687.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="55.6536%" y="661" width="0.0802%" height="15" fill="rgb(207,202,34)" fg:x="694" fg:w="1"/><text x="55.9036%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="55.6536%" y="645" width="0.0802%" height="15" fill="rgb(217,4,34)" fg:x="694" fg:w="1"/><text x="55.9036%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="55.7338%" y="709" width="0.0802%" height="15" fill="rgb(253,17,16)" fg:x="695" fg:w="1"/><text x="55.9838%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="55.8140%" y="709" width="0.0802%" height="15" fill="rgb(223,91,48)" fg:x="696" fg:w="1"/><text x="56.0640%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.8941%" y="581" width="0.0802%" height="15" fill="rgb(244,191,22)" fg:x="697" fg:w="1"/><text x="56.1441%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8941%" y="645" width="0.1604%" height="15" fill="rgb(211,107,14)" fg:x="697" fg:w="2"/><text x="56.1441%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8941%" y="629" width="0.1604%" height="15" fill="rgb(232,81,23)" fg:x="697" fg:w="2"/><text x="56.1441%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8941%" y="613" width="0.1604%" height="15" fill="rgb(237,126,14)" fg:x="697" fg:w="2"/><text x="56.1441%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8941%" y="597" width="0.1604%" height="15" fill="rgb(230,65,39)" fg:x="697" fg:w="2"/><text x="56.1441%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9743%" y="581" width="0.0802%" height="15" fill="rgb(208,106,41)" fg:x="698" fg:w="1"/><text x="56.2243%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9743%" y="565" width="0.0802%" height="15" fill="rgb(206,125,25)" fg:x="698" fg:w="1"/><text x="56.2243%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.9743%" y="549" width="0.0802%" height="15" fill="rgb(250,24,29)" fg:x="698" fg:w="1"/><text x="56.2243%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.9743%" y="533" width="0.0802%" height="15" fill="rgb(226,49,32)" fg:x="698" fg:w="1"/><text x="56.2243%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.9743%" y="517" width="0.0802%" height="15" fill="rgb(217,110,16)" fg:x="698" fg:w="1"/><text x="56.2243%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9743%" y="501" width="0.0802%" height="15" fill="rgb(252,16,53)" fg:x="698" fg:w="1"/><text x="56.2243%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9743%" y="485" width="0.0802%" height="15" fill="rgb(238,163,11)" fg:x="698" fg:w="1"/><text x="56.2243%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.9743%" y="469" width="0.0802%" height="15" fill="rgb(206,210,1)" fg:x="698" fg:w="1"/><text x="56.2243%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.9743%" y="453" width="0.0802%" height="15" fill="rgb(229,8,25)" fg:x="698" fg:w="1"/><text x="56.2243%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.9743%" y="437" width="0.0802%" height="15" fill="rgb(247,155,23)" fg:x="698" fg:w="1"/><text x="56.2243%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.9743%" y="421" width="0.0802%" height="15" fill="rgb(207,26,7)" fg:x="698" fg:w="1"/><text x="56.2243%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9743%" y="405" width="0.0802%" height="15" fill="rgb(215,179,12)" fg:x="698" fg:w="1"/><text x="56.2243%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="56.0545%" y="645" width="0.1604%" height="15" fill="rgb(238,208,11)" fg:x="699" fg:w="2"/><text x="56.3045%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="56.0545%" y="629" width="0.1604%" height="15" fill="rgb(238,102,42)" fg:x="699" fg:w="2"/><text x="56.3045%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1347%" y="613" width="0.0802%" height="15" fill="rgb(239,35,9)" fg:x="700" fg:w="1"/><text x="56.3847%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1347%" y="597" width="0.0802%" height="15" fill="rgb(244,182,30)" fg:x="700" fg:w="1"/><text x="56.3847%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="56.1347%" y="581" width="0.0802%" height="15" fill="rgb(232,181,23)" fg:x="700" fg:w="1"/><text x="56.3847%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1347%" y="565" width="0.0802%" height="15" fill="rgb(242,154,29)" fg:x="700" fg:w="1"/><text x="56.3847%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.1347%" y="549" width="0.0802%" height="15" fill="rgb(219,23,2)" fg:x="700" fg:w="1"/><text x="56.3847%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1347%" y="533" width="0.0802%" height="15" fill="rgb(234,94,43)" fg:x="700" fg:w="1"/><text x="56.3847%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.2149%" y="597" width="0.0802%" height="15" fill="rgb(223,55,45)" fg:x="701" fg:w="1"/><text x="56.4649%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.2951%" y="485" width="0.0802%" height="15" fill="rgb(241,215,54)" fg:x="702" fg:w="1"/><text x="56.5451%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.2951%" y="469" width="0.0802%" height="15" fill="rgb(247,63,53)" fg:x="702" fg:w="1"/><text x="56.5451%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="56.2951%" y="549" width="0.1604%" height="15" fill="rgb(220,166,7)" fg:x="702" fg:w="2"/><text x="56.5451%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.2951%" y="533" width="0.1604%" height="15" fill="rgb(248,53,45)" fg:x="702" fg:w="2"/><text x="56.5451%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="56.2951%" y="517" width="0.1604%" height="15" fill="rgb(224,207,20)" fg:x="702" fg:w="2"/><text x="56.5451%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.2951%" y="501" width="0.1604%" height="15" fill="rgb(244,185,11)" fg:x="702" fg:w="2"/><text x="56.5451%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="56.3753%" y="485" width="0.0802%" height="15" fill="rgb(230,13,42)" fg:x="703" fg:w="1"/><text x="56.6253%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.3753%" y="469" width="0.0802%" height="15" fill="rgb(243,191,18)" fg:x="703" fg:w="1"/><text x="56.6253%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.4555%" y="549" width="0.0802%" height="15" fill="rgb(249,135,15)" fg:x="704" fg:w="1"/><text x="56.7055%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.4555%" y="533" width="0.0802%" height="15" fill="rgb(229,26,35)" fg:x="704" fg:w="1"/><text x="56.7055%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.4555%" y="517" width="0.0802%" height="15" fill="rgb(216,191,16)" fg:x="704" fg:w="1"/><text x="56.7055%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.4555%" y="501" width="0.0802%" height="15" fill="rgb(242,18,7)" fg:x="704" fg:w="1"/><text x="56.7055%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.6159%" y="469" width="0.0802%" height="15" fill="rgb(205,128,17)" fg:x="706" fg:w="1"/><text x="56.8659%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::from_value (7 samples, 0.56%)</title><rect x="56.2149%" y="645" width="0.5613%" height="15" fill="rgb(229,199,44)" fg:x="701" fg:w="7"/><text x="56.4649%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="56.2149%" y="629" width="0.5613%" height="15" fill="rgb(234,222,3)" fg:x="701" fg:w="7"/><text x="56.4649%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="56.2149%" y="613" width="0.5613%" height="15" fill="rgb(220,170,20)" fg:x="701" fg:w="7"/><text x="56.4649%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (6 samples, 0.48%)</title><rect x="56.2951%" y="597" width="0.4812%" height="15" fill="rgb(207,138,8)" fg:x="702" fg:w="6"/><text x="56.5451%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="56.2951%" y="581" width="0.4812%" height="15" fill="rgb(244,130,36)" fg:x="702" fg:w="6"/><text x="56.5451%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="56.2951%" y="565" width="0.4812%" height="15" fill="rgb(207,197,52)" fg:x="702" fg:w="6"/><text x="56.5451%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.5357%" y="549" width="0.2406%" height="15" fill="rgb(206,9,21)" fg:x="705" fg:w="3"/><text x="56.7857%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.6159%" y="533" width="0.1604%" height="15" fill="rgb(250,15,47)" fg:x="706" fg:w="2"/><text x="56.8659%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.6159%" y="517" width="0.1604%" height="15" fill="rgb(235,202,14)" fg:x="706" fg:w="2"/><text x="56.8659%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.6159%" y="501" width="0.1604%" height="15" fill="rgb(211,180,47)" fg:x="706" fg:w="2"/><text x="56.8659%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.6159%" y="485" width="0.1604%" height="15" fill="rgb(209,61,11)" fg:x="706" fg:w="2"/><text x="56.8659%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.6961%" y="469" width="0.0802%" height="15" fill="rgb(243,197,29)" fg:x="707" fg:w="1"/><text x="56.9461%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.0168%" y="453" width="0.0802%" height="15" fill="rgb(216,185,16)" fg:x="711" fg:w="1"/><text x="57.2668%" y="463.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="57.0168%" y="437" width="0.0802%" height="15" fill="rgb(248,5,15)" fg:x="711" fg:w="1"/><text x="57.2668%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="57.0168%" y="469" width="0.1604%" height="15" fill="rgb(240,39,41)" fg:x="711" fg:w="2"/><text x="57.2668%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.0970%" y="453" width="0.0802%" height="15" fill="rgb(224,220,43)" fg:x="712" fg:w="1"/><text x="57.3470%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="57.0168%" y="485" width="0.2406%" height="15" fill="rgb(215,21,24)" fg:x="711" fg:w="3"/><text x="57.2668%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.1772%" y="469" width="0.0802%" height="15" fill="rgb(220,102,8)" fg:x="713" fg:w="1"/><text x="57.4272%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="56.9366%" y="549" width="0.4812%" height="15" fill="rgb(225,185,10)" fg:x="710" fg:w="6"/><text x="57.1866%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="56.9366%" y="533" width="0.4812%" height="15" fill="rgb(212,108,24)" fg:x="710" fg:w="6"/><text x="57.1866%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="56.9366%" y="517" width="0.4812%" height="15" fill="rgb(237,27,0)" fg:x="710" fg:w="6"/><text x="57.1866%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="56.9366%" y="501" width="0.4812%" height="15" fill="rgb(212,106,38)" fg:x="710" fg:w="6"/><text x="57.1866%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.2574%" y="485" width="0.1604%" height="15" fill="rgb(210,125,30)" fg:x="714" fg:w="2"/><text x="57.5074%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="57.2574%" y="469" width="0.1604%" height="15" fill="rgb(215,219,1)" fg:x="714" fg:w="2"/><text x="57.5074%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.3376%" y="453" width="0.0802%" height="15" fill="rgb(223,10,12)" fg:x="715" fg:w="1"/><text x="57.5876%" y="463.50"></text></g><g><title>engine::session::Session::load_entity (20 samples, 1.60%)</title><rect x="55.8941%" y="677" width="1.6038%" height="15" fill="rgb(245,40,34)" fg:x="697" fg:w="20"/><text x="56.1441%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.60%)</title><rect x="55.8941%" y="661" width="1.6038%" height="15" fill="rgb(211,185,19)" fg:x="697" fg:w="20"/><text x="56.1441%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (9 samples, 0.72%)</title><rect x="56.7763%" y="645" width="0.7217%" height="15" fill="rgb(243,190,43)" fg:x="708" fg:w="9"/><text x="57.0263%" y="655.50"></text></g><g><title>serde_json::de::from_trait (8 samples, 0.64%)</title><rect x="56.8565%" y="629" width="0.6415%" height="15" fill="rgb(232,208,29)" fg:x="709" fg:w="8"/><text x="57.1065%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="56.8565%" y="613" width="0.6415%" height="15" fill="rgb(234,134,27)" fg:x="709" fg:w="8"/><text x="57.1065%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="56.8565%" y="597" width="0.6415%" height="15" fill="rgb(225,41,29)" fg:x="709" fg:w="8"/><text x="57.1065%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="56.8565%" y="581" width="0.6415%" height="15" fill="rgb(241,214,44)" fg:x="709" fg:w="8"/><text x="57.1065%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="56.8565%" y="565" width="0.6415%" height="15" fill="rgb(205,219,41)" fg:x="709" fg:w="8"/><text x="57.1065%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4178%" y="549" width="0.0802%" height="15" fill="rgb(226,15,26)" fg:x="716" fg:w="1"/><text x="57.6678%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.4178%" y="533" width="0.0802%" height="15" fill="rgb(210,83,41)" fg:x="716" fg:w="1"/><text x="57.6678%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="57.4178%" y="517" width="0.0802%" height="15" fill="rgb(247,9,39)" fg:x="716" fg:w="1"/><text x="57.6678%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.4980%" y="645" width="0.0802%" height="15" fill="rgb(209,37,30)" fg:x="717" fg:w="1"/><text x="57.7480%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.4980%" y="629" width="0.0802%" height="15" fill="rgb(248,170,46)" fg:x="717" fg:w="1"/><text x="57.7480%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.4980%" y="613" width="0.0802%" height="15" fill="rgb(237,129,44)" fg:x="717" fg:w="1"/><text x="57.7480%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4980%" y="597" width="0.0802%" height="15" fill="rgb(225,117,51)" fg:x="717" fg:w="1"/><text x="57.7480%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.4980%" y="581" width="0.0802%" height="15" fill="rgb(212,165,2)" fg:x="717" fg:w="1"/><text x="57.7480%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4980%" y="565" width="0.0802%" height="15" fill="rgb(213,53,45)" fg:x="717" fg:w="1"/><text x="57.7480%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.4980%" y="549" width="0.0802%" height="15" fill="rgb(220,148,3)" fg:x="717" fg:w="1"/><text x="57.7480%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.4980%" y="533" width="0.0802%" height="15" fill="rgb(228,37,29)" fg:x="717" fg:w="1"/><text x="57.7480%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.4980%" y="517" width="0.0802%" height="15" fill="rgb(209,76,29)" fg:x="717" fg:w="1"/><text x="57.7480%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.4980%" y="501" width="0.0802%" height="15" fill="rgb(215,90,5)" fg:x="717" fg:w="1"/><text x="57.7480%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.4980%" y="485" width="0.0802%" height="15" fill="rgb(227,207,32)" fg:x="717" fg:w="1"/><text x="57.7480%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.4980%" y="469" width="0.0802%" height="15" fill="rgb(251,218,44)" fg:x="717" fg:w="1"/><text x="57.7480%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8188%" y="565" width="0.0802%" height="15" fill="rgb(211,44,16)" fg:x="721" fg:w="1"/><text x="58.0688%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="57.8188%" y="549" width="0.0802%" height="15" fill="rgb(242,170,37)" fg:x="721" fg:w="1"/><text x="58.0688%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8188%" y="533" width="0.0802%" height="15" fill="rgb(205,181,22)" fg:x="721" fg:w="1"/><text x="58.0688%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="57.6584%" y="597" width="0.4010%" height="15" fill="rgb(228,130,19)" fg:x="719" fg:w="5"/><text x="57.9084%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="57.7386%" y="581" width="0.3208%" height="15" fill="rgb(228,9,15)" fg:x="720" fg:w="4"/><text x="57.9886%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="57.8990%" y="565" width="0.1604%" height="15" fill="rgb(219,66,48)" fg:x="722" fg:w="2"/><text x="58.1490%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="57.8990%" y="549" width="0.1604%" height="15" fill="rgb(234,203,10)" fg:x="722" fg:w="2"/><text x="58.1490%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9791%" y="533" width="0.0802%" height="15" fill="rgb(219,209,1)" fg:x="723" fg:w="1"/><text x="58.2291%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.9791%" y="517" width="0.0802%" height="15" fill="rgb(206,167,9)" fg:x="723" fg:w="1"/><text x="58.2291%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.9791%" y="501" width="0.0802%" height="15" fill="rgb(210,11,39)" fg:x="723" fg:w="1"/><text x="58.2291%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.9791%" y="485" width="0.0802%" height="15" fill="rgb(251,90,47)" fg:x="723" fg:w="1"/><text x="58.2291%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.9791%" y="469" width="0.0802%" height="15" fill="rgb(237,7,4)" fg:x="723" fg:w="1"/><text x="58.2291%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9791%" y="453" width="0.0802%" height="15" fill="rgb(232,205,47)" fg:x="723" fg:w="1"/><text x="58.2291%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="57.9791%" y="437" width="0.0802%" height="15" fill="rgb(215,86,48)" fg:x="723" fg:w="1"/><text x="58.2291%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="57.9791%" y="421" width="0.0802%" height="15" fill="rgb(232,14,47)" fg:x="723" fg:w="1"/><text x="58.2291%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="57.9791%" y="405" width="0.0802%" height="15" fill="rgb(240,28,46)" fg:x="723" fg:w="1"/><text x="58.2291%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="57.9791%" y="389" width="0.0802%" height="15" fill="rgb(224,85,5)" fg:x="723" fg:w="1"/><text x="58.2291%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="57.9791%" y="373" width="0.0802%" height="15" fill="rgb(219,34,25)" fg:x="723" fg:w="1"/><text x="58.2291%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9791%" y="357" width="0.0802%" height="15" fill="rgb(247,137,45)" fg:x="723" fg:w="1"/><text x="58.2291%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.0593%" y="565" width="0.0802%" height="15" fill="rgb(237,121,47)" fg:x="724" fg:w="1"/><text x="58.3093%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.1395%" y="549" width="0.0802%" height="15" fill="rgb(247,148,27)" fg:x="725" fg:w="1"/><text x="58.3895%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1395%" y="533" width="0.0802%" height="15" fill="rgb(220,44,0)" fg:x="725" fg:w="1"/><text x="58.3895%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.1395%" y="517" width="0.0802%" height="15" fill="rgb(236,61,29)" fg:x="725" fg:w="1"/><text x="58.3895%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1395%" y="501" width="0.0802%" height="15" fill="rgb(244,180,35)" fg:x="725" fg:w="1"/><text x="58.3895%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.1395%" y="485" width="0.0802%" height="15" fill="rgb(242,14,54)" fg:x="725" fg:w="1"/><text x="58.3895%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.1395%" y="469" width="0.0802%" height="15" fill="rgb(206,24,45)" fg:x="725" fg:w="1"/><text x="58.3895%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.1395%" y="453" width="0.0802%" height="15" fill="rgb(215,211,6)" fg:x="725" fg:w="1"/><text x="58.3895%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.1395%" y="437" width="0.0802%" height="15" fill="rgb(207,56,2)" fg:x="725" fg:w="1"/><text x="58.3895%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1395%" y="421" width="0.0802%" height="15" fill="rgb(220,135,9)" fg:x="725" fg:w="1"/><text x="58.3895%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.1395%" y="405" width="0.0802%" height="15" fill="rgb(214,145,52)" fg:x="725" fg:w="1"/><text x="58.3895%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.1395%" y="389" width="0.0802%" height="15" fill="rgb(241,83,53)" fg:x="725" fg:w="1"/><text x="58.3895%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.1395%" y="373" width="0.0802%" height="15" fill="rgb(222,66,13)" fg:x="725" fg:w="1"/><text x="58.3895%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.1395%" y="357" width="0.0802%" height="15" fill="rgb(239,164,54)" fg:x="725" fg:w="1"/><text x="58.3895%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.1395%" y="341" width="0.0802%" height="15" fill="rgb(216,189,13)" fg:x="725" fg:w="1"/><text x="58.3895%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1395%" y="325" width="0.0802%" height="15" fill="rgb(228,212,51)" fg:x="725" fg:w="1"/><text x="58.3895%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2197%" y="501" width="0.0802%" height="15" fill="rgb(207,190,21)" fg:x="726" fg:w="1"/><text x="58.4697%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.2197%" y="485" width="0.0802%" height="15" fill="rgb(245,28,35)" fg:x="726" fg:w="1"/><text x="58.4697%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="58.2999%" y="469" width="0.0802%" height="15" fill="rgb(239,23,40)" fg:x="727" fg:w="1"/><text x="58.5499%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.3801%" y="453" width="0.0802%" height="15" fill="rgb(242,10,51)" fg:x="728" fg:w="1"/><text x="58.6301%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3801%" y="437" width="0.0802%" height="15" fill="rgb(207,186,5)" fg:x="728" fg:w="1"/><text x="58.6301%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.3801%" y="421" width="0.0802%" height="15" fill="rgb(242,21,16)" fg:x="728" fg:w="1"/><text x="58.6301%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.3801%" y="405" width="0.0802%" height="15" fill="rgb(237,0,53)" fg:x="728" fg:w="1"/><text x="58.6301%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.3801%" y="389" width="0.0802%" height="15" fill="rgb(215,8,52)" fg:x="728" fg:w="1"/><text x="58.6301%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.3801%" y="373" width="0.0802%" height="15" fill="rgb(248,62,44)" fg:x="728" fg:w="1"/><text x="58.6301%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3801%" y="357" width="0.0802%" height="15" fill="rgb(224,83,15)" fg:x="728" fg:w="1"/><text x="58.6301%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.3801%" y="341" width="0.0802%" height="15" fill="rgb(249,100,46)" fg:x="728" fg:w="1"/><text x="58.6301%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.3801%" y="325" width="0.0802%" height="15" fill="rgb(213,35,48)" fg:x="728" fg:w="1"/><text x="58.6301%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.3801%" y="309" width="0.0802%" height="15" fill="rgb(251,2,13)" fg:x="728" fg:w="1"/><text x="58.6301%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.3801%" y="293" width="0.0802%" height="15" fill="rgb(212,132,21)" fg:x="728" fg:w="1"/><text x="58.6301%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.3801%" y="277" width="0.0802%" height="15" fill="rgb(247,17,21)" fg:x="728" fg:w="1"/><text x="58.6301%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.3801%" y="261" width="0.0802%" height="15" fill="rgb(220,177,38)" fg:x="728" fg:w="1"/><text x="58.6301%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="58.2197%" y="549" width="0.3208%" height="15" fill="rgb(233,219,21)" fg:x="726" fg:w="4"/><text x="58.4697%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="58.2197%" y="533" width="0.3208%" height="15" fill="rgb(246,17,7)" fg:x="726" fg:w="4"/><text x="58.4697%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="58.2197%" y="517" width="0.3208%" height="15" fill="rgb(212,4,22)" fg:x="726" fg:w="4"/><text x="58.4697%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="58.2999%" y="501" width="0.2406%" height="15" fill="rgb(243,85,21)" fg:x="727" fg:w="3"/><text x="58.5499%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="58.2999%" y="485" width="0.2406%" height="15" fill="rgb(232,218,2)" fg:x="727" fg:w="3"/><text x="58.5499%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (2 samples, 0.16%)</title><rect x="58.3801%" y="469" width="0.1604%" height="15" fill="rgb(253,168,47)" fg:x="728" fg:w="2"/><text x="58.6301%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.4603%" y="453" width="0.0802%" height="15" fill="rgb(238,101,25)" fg:x="729" fg:w="1"/><text x="58.7103%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4603%" y="437" width="0.0802%" height="15" fill="rgb(251,86,12)" fg:x="729" fg:w="1"/><text x="58.7103%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="58.5405%" y="517" width="0.1604%" height="15" fill="rgb(241,112,44)" fg:x="730" fg:w="2"/><text x="58.7905%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="58.5405%" y="501" width="0.1604%" height="15" fill="rgb(224,28,25)" fg:x="730" fg:w="2"/><text x="58.7905%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.7009%" y="517" width="0.0802%" height="15" fill="rgb(209,201,1)" fg:x="732" fg:w="1"/><text x="58.9509%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="58.7811%" y="501" width="0.0802%" height="15" fill="rgb(231,30,22)" fg:x="733" fg:w="1"/><text x="59.0311%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.7811%" y="485" width="0.0802%" height="15" fill="rgb(247,96,31)" fg:x="733" fg:w="1"/><text x="59.0311%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.88%)</title><rect x="58.0593%" y="597" width="0.8821%" height="15" fill="rgb(251,100,12)" fg:x="724" fg:w="11"/><text x="58.3093%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.88%)</title><rect x="58.0593%" y="581" width="0.8821%" height="15" fill="rgb(224,174,7)" fg:x="724" fg:w="11"/><text x="58.3093%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (10 samples, 0.80%)</title><rect x="58.1395%" y="565" width="0.8019%" height="15" fill="rgb(231,168,19)" fg:x="725" fg:w="10"/><text x="58.3895%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="58.5405%" y="549" width="0.4010%" height="15" fill="rgb(226,85,5)" fg:x="730" fg:w="5"/><text x="58.7905%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="58.5405%" y="533" width="0.4010%" height="15" fill="rgb(210,215,5)" fg:x="730" fg:w="5"/><text x="58.7905%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="58.7811%" y="517" width="0.1604%" height="15" fill="rgb(233,70,8)" fg:x="733" fg:w="2"/><text x="59.0311%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="58.8613%" y="501" width="0.0802%" height="15" fill="rgb(229,109,53)" fg:x="734" fg:w="1"/><text x="59.1113%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8613%" y="485" width="0.0802%" height="15" fill="rgb(213,125,35)" fg:x="734" fg:w="1"/><text x="59.1113%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.9415%" y="565" width="0.0802%" height="15" fill="rgb(215,12,48)" fg:x="735" fg:w="1"/><text x="59.1915%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.0217%" y="565" width="0.0802%" height="15" fill="rgb(207,12,38)" fg:x="736" fg:w="1"/><text x="59.2717%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.60%)</title><rect x="57.5782%" y="645" width="1.6038%" height="15" fill="rgb(216,229,2)" fg:x="718" fg:w="20"/><text x="57.8282%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.60%)</title><rect x="57.5782%" y="629" width="1.6038%" height="15" fill="rgb(229,209,31)" fg:x="718" fg:w="20"/><text x="57.8282%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (20 samples, 1.60%)</title><rect x="57.5782%" y="613" width="1.6038%" height="15" fill="rgb(239,57,22)" fg:x="718" fg:w="20"/><text x="57.8282%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="58.9415%" y="597" width="0.2406%" height="15" fill="rgb(239,119,54)" fg:x="735" fg:w="3"/><text x="59.1915%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="58.9415%" y="581" width="0.2406%" height="15" fill="rgb(231,80,45)" fg:x="735" fg:w="3"/><text x="59.1915%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.1018%" y="565" width="0.0802%" height="15" fill="rgb(219,138,19)" fg:x="737" fg:w="1"/><text x="59.3518%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.1018%" y="549" width="0.0802%" height="15" fill="rgb(216,53,26)" fg:x="737" fg:w="1"/><text x="59.3518%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.1018%" y="533" width="0.0802%" height="15" fill="rgb(224,30,16)" fg:x="737" fg:w="1"/><text x="59.3518%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.1018%" y="517" width="0.0802%" height="15" fill="rgb(224,151,24)" fg:x="737" fg:w="1"/><text x="59.3518%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.1820%" y="613" width="0.0802%" height="15" fill="rgb(236,75,7)" fg:x="738" fg:w="1"/><text x="59.4320%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.1820%" y="597" width="0.0802%" height="15" fill="rgb(248,106,42)" fg:x="738" fg:w="1"/><text x="59.4320%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.1820%" y="581" width="0.0802%" height="15" fill="rgb(222,217,11)" fg:x="738" fg:w="1"/><text x="59.4320%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.2622%" y="613" width="0.0802%" height="15" fill="rgb(234,143,31)" fg:x="739" fg:w="1"/><text x="59.5122%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.2622%" y="597" width="0.0802%" height="15" fill="rgb(237,148,28)" fg:x="739" fg:w="1"/><text x="59.5122%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2622%" y="581" width="0.0802%" height="15" fill="rgb(241,151,6)" fg:x="739" fg:w="1"/><text x="59.5122%" y="591.50"></text></g><g><title>engine::session::internal::Added::find_refs (24 samples, 1.92%)</title><rect x="57.4980%" y="677" width="1.9246%" height="15" fill="rgb(226,55,18)" fg:x="717" fg:w="24"/><text x="57.7480%" y="687.50">e..</text></g><g><title>kernel::model::entity_ref::find_entity_refs (24 samples, 1.92%)</title><rect x="57.4980%" y="661" width="1.9246%" height="15" fill="rgb(226,196,6)" fg:x="717" fg:w="24"/><text x="57.7480%" y="671.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.1820%" y="645" width="0.2406%" height="15" fill="rgb(251,228,11)" fg:x="738" fg:w="3"/><text x="59.4320%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.1820%" y="629" width="0.2406%" height="15" fill="rgb(219,197,15)" fg:x="738" fg:w="3"/><text x="59.4320%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="59.3424%" y="613" width="0.0802%" height="15" fill="rgb(243,105,44)" fg:x="740" fg:w="1"/><text x="59.5924%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.3424%" y="597" width="0.0802%" height="15" fill="rgb(205,183,40)" fg:x="740" fg:w="1"/><text x="59.5924%" y="607.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="59.3424%" y="581" width="0.0802%" height="15" fill="rgb(232,138,46)" fg:x="740" fg:w="1"/><text x="59.5924%" y="591.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="59.3424%" y="565" width="0.0802%" height="15" fill="rgb(234,161,14)" fg:x="740" fg:w="1"/><text x="59.5924%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="59.3424%" y="549" width="0.0802%" height="15" fill="rgb(238,211,18)" fg:x="740" fg:w="1"/><text x="59.5924%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="59.3424%" y="533" width="0.0802%" height="15" fill="rgb(217,130,2)" fg:x="740" fg:w="1"/><text x="59.5924%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="59.3424%" y="517" width="0.0802%" height="15" fill="rgb(251,17,29)" fg:x="740" fg:w="1"/><text x="59.5924%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.4226%" y="661" width="0.1604%" height="15" fill="rgb(243,18,0)" fg:x="741" fg:w="2"/><text x="59.6726%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="59.4226%" y="645" width="0.1604%" height="15" fill="rgb(227,220,45)" fg:x="741" fg:w="2"/><text x="59.6726%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.5028%" y="629" width="0.0802%" height="15" fill="rgb(212,34,2)" fg:x="742" fg:w="1"/><text x="59.7528%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.5028%" y="613" width="0.0802%" height="15" fill="rgb(236,23,8)" fg:x="742" fg:w="1"/><text x="59.7528%" y="623.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.5830%" y="645" width="0.0802%" height="15" fill="rgb(210,113,39)" fg:x="743" fg:w="1"/><text x="59.8330%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="59.5830%" y="661" width="0.1604%" height="15" fill="rgb(243,123,48)" fg:x="743" fg:w="2"/><text x="59.8330%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.6632%" y="645" width="0.0802%" height="15" fill="rgb(223,175,36)" fg:x="744" fg:w="1"/><text x="59.9132%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.6632%" y="629" width="0.0802%" height="15" fill="rgb(226,100,30)" fg:x="744" fg:w="1"/><text x="59.9132%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6632%" y="613" width="0.0802%" height="15" fill="rgb(221,225,39)" fg:x="744" fg:w="1"/><text x="59.9132%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.6632%" y="597" width="0.0802%" height="15" fill="rgb(224,222,42)" fg:x="744" fg:w="1"/><text x="59.9132%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.6632%" y="581" width="0.0802%" height="15" fill="rgb(221,53,1)" fg:x="744" fg:w="1"/><text x="59.9132%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.0642%" y="533" width="0.0802%" height="15" fill="rgb(216,187,48)" fg:x="749" fg:w="1"/><text x="60.3142%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.0642%" y="517" width="0.0802%" height="15" fill="rgb(220,108,2)" fg:x="749" fg:w="1"/><text x="60.3142%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="60.1443%" y="533" width="0.0802%" height="15" fill="rgb(216,13,42)" fg:x="750" fg:w="1"/><text x="60.3943%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="60.2245%" y="469" width="0.0802%" height="15" fill="rgb(205,14,29)" fg:x="751" fg:w="1"/><text x="60.4745%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="60.2245%" y="533" width="0.1604%" height="15" fill="rgb(217,168,30)" fg:x="751" fg:w="2"/><text x="60.4745%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.2245%" y="517" width="0.1604%" height="15" fill="rgb(246,173,54)" fg:x="751" fg:w="2"/><text x="60.4745%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.2245%" y="501" width="0.1604%" height="15" fill="rgb(227,177,11)" fg:x="751" fg:w="2"/><text x="60.4745%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.2245%" y="485" width="0.1604%" height="15" fill="rgb(223,215,51)" fg:x="751" fg:w="2"/><text x="60.4745%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3047%" y="469" width="0.0802%" height="15" fill="rgb(253,4,17)" fg:x="752" fg:w="1"/><text x="60.5547%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="60.0642%" y="565" width="0.4010%" height="15" fill="rgb(206,150,43)" fg:x="749" fg:w="5"/><text x="60.3142%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="60.0642%" y="549" width="0.4010%" height="15" fill="rgb(241,100,52)" fg:x="749" fg:w="5"/><text x="60.3142%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3849%" y="533" width="0.0802%" height="15" fill="rgb(234,120,21)" fg:x="753" fg:w="1"/><text x="60.6349%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.3849%" y="517" width="0.0802%" height="15" fill="rgb(231,60,11)" fg:x="753" fg:w="1"/><text x="60.6349%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="60.3849%" y="501" width="0.0802%" height="15" fill="rgb(247,77,50)" fg:x="753" fg:w="1"/><text x="60.6349%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (11 samples, 0.88%)</title><rect x="59.7434%" y="661" width="0.8821%" height="15" fill="rgb(251,199,54)" fg:x="745" fg:w="11"/><text x="59.9934%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.80%)</title><rect x="59.8236%" y="645" width="0.8019%" height="15" fill="rgb(212,120,38)" fg:x="746" fg:w="10"/><text x="60.0736%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="59.8236%" y="629" width="0.8019%" height="15" fill="rgb(250,161,37)" fg:x="746" fg:w="10"/><text x="60.0736%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.0642%" y="613" width="0.5613%" height="15" fill="rgb(232,158,45)" fg:x="749" fg:w="7"/><text x="60.3142%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="60.0642%" y="597" width="0.5613%" height="15" fill="rgb(233,114,2)" fg:x="749" fg:w="7"/><text x="60.3142%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="60.0642%" y="581" width="0.5613%" height="15" fill="rgb(248,139,0)" fg:x="749" fg:w="7"/><text x="60.3142%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4651%" y="565" width="0.1604%" height="15" fill="rgb(222,164,18)" fg:x="754" fg:w="2"/><text x="60.7151%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.4651%" y="549" width="0.1604%" height="15" fill="rgb(221,140,42)" fg:x="754" fg:w="2"/><text x="60.7151%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="60.5453%" y="533" width="0.0802%" height="15" fill="rgb(209,186,11)" fg:x="755" fg:w="1"/><text x="60.7953%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="60.5453%" y="517" width="0.0802%" height="15" fill="rgb(254,212,38)" fg:x="755" fg:w="1"/><text x="60.7953%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="60.5453%" y="501" width="0.0802%" height="15" fill="rgb(219,156,31)" fg:x="755" fg:w="1"/><text x="60.7953%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.5453%" y="485" width="0.0802%" height="15" fill="rgb(222,148,42)" fg:x="755" fg:w="1"/><text x="60.7953%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="60.5453%" y="469" width="0.0802%" height="15" fill="rgb(225,65,5)" fg:x="755" fg:w="1"/><text x="60.7953%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="60.7859%" y="517" width="0.2406%" height="15" fill="rgb(235,28,12)" fg:x="758" fg:w="3"/><text x="61.0359%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="60.7859%" y="501" width="0.2406%" height="15" fill="rgb(245,58,4)" fg:x="758" fg:w="3"/><text x="61.0359%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="60.9463%" y="485" width="0.0802%" height="15" fill="rgb(235,118,5)" fg:x="760" fg:w="1"/><text x="61.1963%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9463%" y="469" width="0.0802%" height="15" fill="rgb(253,196,3)" fg:x="760" fg:w="1"/><text x="61.1963%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.0265%" y="469" width="0.0802%" height="15" fill="rgb(238,90,28)" fg:x="761" fg:w="1"/><text x="61.2765%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="61.0265%" y="453" width="0.0802%" height="15" fill="rgb(254,227,4)" fg:x="761" fg:w="1"/><text x="61.2765%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.0265%" y="485" width="0.1604%" height="15" fill="rgb(237,114,35)" fg:x="761" fg:w="2"/><text x="61.2765%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1067%" y="469" width="0.0802%" height="15" fill="rgb(221,147,29)" fg:x="762" fg:w="1"/><text x="61.3567%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.1067%" y="453" width="0.0802%" height="15" fill="rgb(216,201,17)" fg:x="762" fg:w="1"/><text x="61.3567%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1067%" y="437" width="0.0802%" height="15" fill="rgb(251,46,50)" fg:x="762" fg:w="1"/><text x="61.3567%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="61.0265%" y="501" width="0.2406%" height="15" fill="rgb(216,143,48)" fg:x="761" fg:w="3"/><text x="61.2765%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1868%" y="485" width="0.0802%" height="15" fill="rgb(224,62,51)" fg:x="763" fg:w="1"/><text x="61.4368%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="60.7859%" y="565" width="0.5613%" height="15" fill="rgb(232,152,20)" fg:x="758" fg:w="7"/><text x="61.0359%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="60.7859%" y="549" width="0.5613%" height="15" fill="rgb(233,194,7)" fg:x="758" fg:w="7"/><text x="61.0359%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="60.7859%" y="533" width="0.5613%" height="15" fill="rgb(207,33,22)" fg:x="758" fg:w="7"/><text x="61.0359%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.0265%" y="517" width="0.3208%" height="15" fill="rgb(226,54,34)" fg:x="761" fg:w="4"/><text x="61.2765%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2670%" y="501" width="0.0802%" height="15" fill="rgb(227,161,47)" fg:x="764" fg:w="1"/><text x="61.5170%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.2670%" y="485" width="0.0802%" height="15" fill="rgb(218,58,37)" fg:x="764" fg:w="1"/><text x="61.5170%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.2670%" y="469" width="0.0802%" height="15" fill="rgb(208,173,18)" fg:x="764" fg:w="1"/><text x="61.5170%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (69 samples, 5.53%)</title><rect x="55.8941%" y="693" width="5.5333%" height="15" fill="rgb(230,159,11)" fg:x="697" fg:w="69"/><text x="56.1441%" y="703.50">engine:..</text></g><g><title>engine::session::internal::Entities::add_persisted (25 samples, 2.00%)</title><rect x="59.4226%" y="677" width="2.0048%" height="15" fill="rgb(238,90,51)" fg:x="741" fg:w="25"/><text x="59.6726%" y="687.50">e..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (10 samples, 0.80%)</title><rect x="60.6255%" y="661" width="0.8019%" height="15" fill="rgb(225,97,36)" fg:x="756" fg:w="10"/><text x="60.8755%" y="671.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="60.6255%" y="645" width="0.8019%" height="15" fill="rgb(211,205,42)" fg:x="756" fg:w="10"/><text x="60.8755%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="60.6255%" y="629" width="0.8019%" height="15" fill="rgb(219,152,7)" fg:x="756" fg:w="10"/><text x="60.8755%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="60.6255%" y="613" width="0.8019%" height="15" fill="rgb(222,79,10)" fg:x="756" fg:w="10"/><text x="60.8755%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="60.7057%" y="597" width="0.7217%" height="15" fill="rgb(242,13,11)" fg:x="757" fg:w="9"/><text x="60.9557%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="60.7057%" y="581" width="0.7217%" height="15" fill="rgb(231,143,41)" fg:x="757" fg:w="9"/><text x="60.9557%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3472%" y="565" width="0.0802%" height="15" fill="rgb(222,147,19)" fg:x="765" fg:w="1"/><text x="61.5972%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.3472%" y="549" width="0.0802%" height="15" fill="rgb(235,5,39)" fg:x="765" fg:w="1"/><text x="61.5972%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4274%" y="661" width="0.0802%" height="15" fill="rgb(246,155,51)" fg:x="766" fg:w="1"/><text x="61.6774%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.4274%" y="645" width="0.0802%" height="15" fill="rgb(218,157,4)" fg:x="766" fg:w="1"/><text x="61.6774%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.5076%" y="613" width="0.0802%" height="15" fill="rgb(226,184,4)" fg:x="767" fg:w="1"/><text x="61.7576%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.5076%" y="597" width="0.0802%" height="15" fill="rgb(210,103,26)" fg:x="767" fg:w="1"/><text x="61.7576%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="61.5878%" y="613" width="0.0802%" height="15" fill="rgb(228,23,31)" fg:x="768" fg:w="1"/><text x="61.8378%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="61.5878%" y="597" width="0.0802%" height="15" fill="rgb(205,176,34)" fg:x="768" fg:w="1"/><text x="61.8378%" y="607.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="61.5878%" y="581" width="0.0802%" height="15" fill="rgb(246,213,37)" fg:x="768" fg:w="1"/><text x="61.8378%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.5878%" y="565" width="0.0802%" height="15" fill="rgb(213,52,45)" fg:x="768" fg:w="1"/><text x="61.8378%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5878%" y="549" width="0.0802%" height="15" fill="rgb(249,9,52)" fg:x="768" fg:w="1"/><text x="61.8378%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5878%" y="533" width="0.0802%" height="15" fill="rgb(205,97,16)" fg:x="768" fg:w="1"/><text x="61.8378%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.5878%" y="517" width="0.0802%" height="15" fill="rgb(214,11,46)" fg:x="768" fg:w="1"/><text x="61.8378%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.5878%" y="501" width="0.0802%" height="15" fill="rgb(221,66,18)" fg:x="768" fg:w="1"/><text x="61.8378%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.5878%" y="485" width="0.0802%" height="15" fill="rgb(213,49,1)" fg:x="768" fg:w="1"/><text x="61.8378%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5878%" y="469" width="0.0802%" height="15" fill="rgb(232,75,51)" fg:x="768" fg:w="1"/><text x="61.8378%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.5878%" y="453" width="0.0802%" height="15" fill="rgb(208,218,40)" fg:x="768" fg:w="1"/><text x="61.8378%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.5878%" y="437" width="0.0802%" height="15" fill="rgb(206,144,50)" fg:x="768" fg:w="1"/><text x="61.8378%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.5878%" y="421" width="0.0802%" height="15" fill="rgb(216,9,51)" fg:x="768" fg:w="1"/><text x="61.8378%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.5878%" y="405" width="0.0802%" height="15" fill="rgb(226,6,53)" fg:x="768" fg:w="1"/><text x="61.8378%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.5878%" y="389" width="0.0802%" height="15" fill="rgb(216,9,50)" fg:x="768" fg:w="1"/><text x="61.8378%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.5878%" y="373" width="0.0802%" height="15" fill="rgb(214,101,31)" fg:x="768" fg:w="1"/><text x="61.8378%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="61.5076%" y="661" width="0.2406%" height="15" fill="rgb(247,85,17)" fg:x="767" fg:w="3"/><text x="61.7576%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="61.5076%" y="645" width="0.2406%" height="15" fill="rgb(248,138,25)" fg:x="767" fg:w="3"/><text x="61.7576%" y="655.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="61.5076%" y="629" width="0.2406%" height="15" fill="rgb(225,146,20)" fg:x="767" fg:w="3"/><text x="61.7576%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.6680%" y="613" width="0.0802%" height="15" fill="rgb(224,184,17)" fg:x="769" fg:w="1"/><text x="61.9180%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.6680%" y="597" width="0.0802%" height="15" fill="rgb(231,10,20)" fg:x="769" fg:w="1"/><text x="61.9180%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.6680%" y="581" width="0.0802%" height="15" fill="rgb(210,93,37)" fg:x="769" fg:w="1"/><text x="61.9180%" y="591.50"></text></g><g><title>engine::session::internal::Added::find_refs (6 samples, 0.48%)</title><rect x="61.4274%" y="693" width="0.4812%" height="15" fill="rgb(226,84,42)" fg:x="766" fg:w="6"/><text x="61.6774%" y="703.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="61.4274%" y="677" width="0.4812%" height="15" fill="rgb(253,192,7)" fg:x="766" fg:w="6"/><text x="61.6774%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.7482%" y="661" width="0.1604%" height="15" fill="rgb(214,107,27)" fg:x="770" fg:w="2"/><text x="61.9982%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.7482%" y="645" width="0.1604%" height="15" fill="rgb(238,146,21)" fg:x="770" fg:w="2"/><text x="61.9982%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (2 samples, 0.16%)</title><rect x="61.7482%" y="629" width="0.1604%" height="15" fill="rgb(209,136,30)" fg:x="770" fg:w="2"/><text x="61.9982%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (2 samples, 0.16%)</title><rect x="61.7482%" y="613" width="0.1604%" height="15" fill="rgb(226,60,22)" fg:x="770" fg:w="2"/><text x="61.9982%" y="623.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="61.8284%" y="597" width="0.0802%" height="15" fill="rgb(243,92,26)" fg:x="771" fg:w="1"/><text x="62.0784%" y="607.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="61.8284%" y="581" width="0.0802%" height="15" fill="rgb(211,85,33)" fg:x="771" fg:w="1"/><text x="62.0784%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="61.8284%" y="565" width="0.0802%" height="15" fill="rgb(243,187,44)" fg:x="771" fg:w="1"/><text x="62.0784%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="61.8284%" y="549" width="0.0802%" height="15" fill="rgb(251,172,23)" fg:x="771" fg:w="1"/><text x="62.0784%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="61.8284%" y="533" width="0.0802%" height="15" fill="rgb(254,162,50)" fg:x="771" fg:w="1"/><text x="62.0784%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="61.8284%" y="517" width="0.0802%" height="15" fill="rgb(239,14,53)" fg:x="771" fg:w="1"/><text x="62.0784%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9086%" y="629" width="0.0802%" height="15" fill="rgb(242,208,8)" fg:x="772" fg:w="1"/><text x="62.1586%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.9086%" y="613" width="0.0802%" height="15" fill="rgb(225,61,41)" fg:x="772" fg:w="1"/><text x="62.1586%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9086%" y="597" width="0.0802%" height="15" fill="rgb(219,154,6)" fg:x="772" fg:w="1"/><text x="62.1586%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.9086%" y="581" width="0.0802%" height="15" fill="rgb(227,223,44)" fg:x="772" fg:w="1"/><text x="62.1586%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.9086%" y="565" width="0.0802%" height="15" fill="rgb(220,188,6)" fg:x="772" fg:w="1"/><text x="62.1586%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.9086%" y="549" width="0.0802%" height="15" fill="rgb(216,65,22)" fg:x="772" fg:w="1"/><text x="62.1586%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.9086%" y="533" width="0.0802%" height="15" fill="rgb(236,66,46)" fg:x="772" fg:w="1"/><text x="62.1586%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9086%" y="517" width="0.0802%" height="15" fill="rgb(211,150,52)" fg:x="772" fg:w="1"/><text x="62.1586%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.9086%" y="501" width="0.0802%" height="15" fill="rgb(253,89,19)" fg:x="772" fg:w="1"/><text x="62.1586%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.9086%" y="485" width="0.0802%" height="15" fill="rgb(245,4,1)" fg:x="772" fg:w="1"/><text x="62.1586%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.9086%" y="469" width="0.0802%" height="15" fill="rgb(230,109,16)" fg:x="772" fg:w="1"/><text x="62.1586%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.9086%" y="453" width="0.0802%" height="15" fill="rgb(213,7,47)" fg:x="772" fg:w="1"/><text x="62.1586%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.9086%" y="437" width="0.0802%" height="15" fill="rgb(242,148,14)" fg:x="772" fg:w="1"/><text x="62.1586%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9086%" y="421" width="0.0802%" height="15" fill="rgb(238,51,34)" fg:x="772" fg:w="1"/><text x="62.1586%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.9086%" y="677" width="0.2406%" height="15" fill="rgb(222,49,22)" fg:x="772" fg:w="3"/><text x="62.1586%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.9086%" y="661" width="0.2406%" height="15" fill="rgb(237,102,50)" fg:x="772" fg:w="3"/><text x="62.1586%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.9086%" y="645" width="0.2406%" height="15" fill="rgb(237,195,8)" fg:x="772" fg:w="3"/><text x="62.1586%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.9888%" y="629" width="0.1604%" height="15" fill="rgb(245,60,18)" fg:x="773" fg:w="2"/><text x="62.2388%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.9888%" y="613" width="0.1604%" height="15" fill="rgb(253,74,32)" fg:x="773" fg:w="2"/><text x="62.2388%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0690%" y="597" width="0.0802%" height="15" fill="rgb(240,91,39)" fg:x="774" fg:w="1"/><text x="62.3190%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.0690%" y="581" width="0.0802%" height="15" fill="rgb(221,162,34)" fg:x="774" fg:w="1"/><text x="62.3190%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.0690%" y="565" width="0.0802%" height="15" fill="rgb(223,32,2)" fg:x="774" fg:w="1"/><text x="62.3190%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.0690%" y="549" width="0.0802%" height="15" fill="rgb(245,220,46)" fg:x="774" fg:w="1"/><text x="62.3190%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.0690%" y="533" width="0.0802%" height="15" fill="rgb(216,38,33)" fg:x="774" fg:w="1"/><text x="62.3190%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0690%" y="517" width="0.0802%" height="15" fill="rgb(210,123,14)" fg:x="774" fg:w="1"/><text x="62.3190%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="62.0690%" y="501" width="0.0802%" height="15" fill="rgb(214,38,47)" fg:x="774" fg:w="1"/><text x="62.3190%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="62.0690%" y="485" width="0.0802%" height="15" fill="rgb(244,180,16)" fg:x="774" fg:w="1"/><text x="62.3190%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="62.0690%" y="469" width="0.0802%" height="15" fill="rgb(252,21,32)" fg:x="774" fg:w="1"/><text x="62.3190%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="62.0690%" y="453" width="0.0802%" height="15" fill="rgb(245,218,31)" fg:x="774" fg:w="1"/><text x="62.3190%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="62.0690%" y="437" width="0.0802%" height="15" fill="rgb(247,81,18)" fg:x="774" fg:w="1"/><text x="62.3190%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.0690%" y="421" width="0.0802%" height="15" fill="rgb(220,151,1)" fg:x="774" fg:w="1"/><text x="62.3190%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="62.1492%" y="677" width="0.0802%" height="15" fill="rgb(211,157,11)" fg:x="775" fg:w="1"/><text x="62.3992%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="62.1492%" y="661" width="0.0802%" height="15" fill="rgb(239,46,30)" fg:x="775" fg:w="1"/><text x="62.3992%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1492%" y="645" width="0.0802%" height="15" fill="rgb(236,144,43)" fg:x="775" fg:w="1"/><text x="62.3992%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1492%" y="629" width="0.0802%" height="15" fill="rgb(206,71,45)" fg:x="775" fg:w="1"/><text x="62.3992%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.1492%" y="613" width="0.0802%" height="15" fill="rgb(240,85,31)" fg:x="775" fg:w="1"/><text x="62.3992%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1492%" y="597" width="0.0802%" height="15" fill="rgb(221,43,52)" fg:x="775" fg:w="1"/><text x="62.3992%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.1492%" y="581" width="0.0802%" height="15" fill="rgb(243,106,22)" fg:x="775" fg:w="1"/><text x="62.3992%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.1492%" y="565" width="0.0802%" height="15" fill="rgb(209,138,38)" fg:x="775" fg:w="1"/><text x="62.3992%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.3095%" y="581" width="0.0802%" height="15" fill="rgb(216,63,40)" fg:x="777" fg:w="1"/><text x="62.5595%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.3095%" y="565" width="0.0802%" height="15" fill="rgb(206,115,21)" fg:x="777" fg:w="1"/><text x="62.5595%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.3095%" y="549" width="0.0802%" height="15" fill="rgb(235,53,44)" fg:x="777" fg:w="1"/><text x="62.5595%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.3095%" y="533" width="0.0802%" height="15" fill="rgb(244,160,14)" fg:x="777" fg:w="1"/><text x="62.5595%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.3095%" y="517" width="0.0802%" height="15" fill="rgb(223,16,19)" fg:x="777" fg:w="1"/><text x="62.5595%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.3095%" y="501" width="0.0802%" height="15" fill="rgb(242,63,42)" fg:x="777" fg:w="1"/><text x="62.5595%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="62.3095%" y="485" width="0.0802%" height="15" fill="rgb(209,66,49)" fg:x="777" fg:w="1"/><text x="62.5595%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="62.3095%" y="469" width="0.0802%" height="15" fill="rgb(207,126,46)" fg:x="777" fg:w="1"/><text x="62.5595%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.4699%" y="501" width="0.0802%" height="15" fill="rgb(218,160,41)" fg:x="779" fg:w="1"/><text x="62.7199%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.4699%" y="485" width="0.0802%" height="15" fill="rgb(234,125,46)" fg:x="779" fg:w="1"/><text x="62.7199%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.4699%" y="469" width="0.0802%" height="15" fill="rgb(205,66,36)" fg:x="779" fg:w="1"/><text x="62.7199%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::from_value (5 samples, 0.40%)</title><rect x="62.2294%" y="677" width="0.4010%" height="15" fill="rgb(220,135,16)" fg:x="776" fg:w="5"/><text x="62.4794%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="62.2294%" y="661" width="0.4010%" height="15" fill="rgb(214,217,54)" fg:x="776" fg:w="5"/><text x="62.4794%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="62.2294%" y="645" width="0.4010%" height="15" fill="rgb(206,30,9)" fg:x="776" fg:w="5"/><text x="62.4794%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="62.3095%" y="629" width="0.3208%" height="15" fill="rgb(207,196,5)" fg:x="777" fg:w="4"/><text x="62.5595%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="62.3095%" y="613" width="0.3208%" height="15" fill="rgb(227,116,12)" fg:x="777" fg:w="4"/><text x="62.5595%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="62.3095%" y="597" width="0.3208%" height="15" fill="rgb(235,227,13)" fg:x="777" fg:w="4"/><text x="62.5595%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.3897%" y="581" width="0.2406%" height="15" fill="rgb(238,212,29)" fg:x="778" fg:w="3"/><text x="62.6397%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.3897%" y="565" width="0.2406%" height="15" fill="rgb(230,152,17)" fg:x="778" fg:w="3"/><text x="62.6397%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="62.4699%" y="549" width="0.1604%" height="15" fill="rgb(220,197,1)" fg:x="779" fg:w="2"/><text x="62.7199%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="62.4699%" y="533" width="0.1604%" height="15" fill="rgb(229,227,40)" fg:x="779" fg:w="2"/><text x="62.7199%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="62.4699%" y="517" width="0.1604%" height="15" fill="rgb(227,179,16)" fg:x="779" fg:w="2"/><text x="62.7199%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="62.5501%" y="501" width="0.0802%" height="15" fill="rgb(246,116,44)" fg:x="780" fg:w="1"/><text x="62.8001%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.5501%" y="485" width="0.0802%" height="15" fill="rgb(205,191,4)" fg:x="780" fg:w="1"/><text x="62.8001%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.5501%" y="469" width="0.0802%" height="15" fill="rgb(245,69,19)" fg:x="780" fg:w="1"/><text x="62.8001%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.7105%" y="501" width="0.0802%" height="15" fill="rgb(230,29,26)" fg:x="782" fg:w="1"/><text x="62.9605%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.7105%" y="485" width="0.0802%" height="15" fill="rgb(239,192,26)" fg:x="782" fg:w="1"/><text x="62.9605%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="62.7105%" y="533" width="0.2406%" height="15" fill="rgb(219,92,16)" fg:x="782" fg:w="3"/><text x="62.9605%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="62.7105%" y="517" width="0.2406%" height="15" fill="rgb(246,147,43)" fg:x="782" fg:w="3"/><text x="62.9605%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="62.7907%" y="501" width="0.1604%" height="15" fill="rgb(222,147,11)" fg:x="783" fg:w="2"/><text x="63.0407%" y="511.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.12%)</title><rect x="61.9086%" y="693" width="1.1227%" height="15" fill="rgb(243,71,8)" fg:x="772" fg:w="14"/><text x="62.1586%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (5 samples, 0.40%)</title><rect x="62.6303%" y="677" width="0.4010%" height="15" fill="rgb(250,36,12)" fg:x="781" fg:w="5"/><text x="62.8803%" y="687.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="62.6303%" y="661" width="0.4010%" height="15" fill="rgb(207,168,14)" fg:x="781" fg:w="5"/><text x="62.8803%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="62.6303%" y="645" width="0.4010%" height="15" fill="rgb(254,210,51)" fg:x="781" fg:w="5"/><text x="62.8803%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="62.6303%" y="629" width="0.4010%" height="15" fill="rgb(236,152,38)" fg:x="781" fg:w="5"/><text x="62.8803%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.7105%" y="613" width="0.3208%" height="15" fill="rgb(240,164,36)" fg:x="782" fg:w="4"/><text x="62.9605%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.7105%" y="597" width="0.3208%" height="15" fill="rgb(210,171,36)" fg:x="782" fg:w="4"/><text x="62.9605%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.7105%" y="581" width="0.3208%" height="15" fill="rgb(254,156,34)" fg:x="782" fg:w="4"/><text x="62.9605%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="62.7105%" y="565" width="0.3208%" height="15" fill="rgb(216,204,23)" fg:x="782" fg:w="4"/><text x="62.9605%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="62.7105%" y="549" width="0.3208%" height="15" fill="rgb(230,75,38)" fg:x="782" fg:w="4"/><text x="62.9605%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.9511%" y="533" width="0.0802%" height="15" fill="rgb(248,197,25)" fg:x="785" fg:w="1"/><text x="63.2011%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="62.9511%" y="517" width="0.0802%" height="15" fill="rgb(234,121,26)" fg:x="785" fg:w="1"/><text x="63.2011%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.9511%" y="501" width="0.0802%" height="15" fill="rgb(220,41,36)" fg:x="785" fg:w="1"/><text x="63.2011%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="62.9511%" y="485" width="0.0802%" height="15" fill="rgb(227,33,32)" fg:x="785" fg:w="1"/><text x="63.2011%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.9511%" y="469" width="0.0802%" height="15" fill="rgb(208,214,54)" fg:x="785" fg:w="1"/><text x="63.2011%" y="479.50"></text></g><g><title>engine::session::Session::load_entity (90 samples, 7.22%)</title><rect x="55.8941%" y="709" width="7.2173%" height="15" fill="rgb(205,37,38)" fg:x="697" fg:w="90"/><text x="56.1441%" y="719.50">engine::se..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="63.0313%" y="693" width="0.0802%" height="15" fill="rgb(252,2,0)" fg:x="786" fg:w="1"/><text x="63.2813%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.0313%" y="677" width="0.0802%" height="15" fill="rgb(212,171,10)" fg:x="786" fg:w="1"/><text x="63.2813%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.1115%" y="693" width="0.0802%" height="15" fill="rgb(239,35,46)" fg:x="787" fg:w="1"/><text x="63.3615%" y="703.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.1917%" y="661" width="0.1604%" height="15" fill="rgb(209,34,42)" fg:x="788" fg:w="2"/><text x="63.4417%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2719%" y="645" width="0.0802%" height="15" fill="rgb(237,9,4)" fg:x="789" fg:w="1"/><text x="63.5219%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.2719%" y="629" width="0.0802%" height="15" fill="rgb(254,55,38)" fg:x="789" fg:w="1"/><text x="63.5219%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="63.1115%" y="709" width="0.3208%" height="15" fill="rgb(222,95,29)" fg:x="787" fg:w="4"/><text x="63.3615%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="63.1917%" y="693" width="0.2406%" height="15" fill="rgb(241,218,37)" fg:x="788" fg:w="3"/><text x="63.4417%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="63.1917%" y="677" width="0.2406%" height="15" fill="rgb(225,89,28)" fg:x="788" fg:w="3"/><text x="63.4417%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.3520%" y="661" width="0.0802%" height="15" fill="rgb(231,17,25)" fg:x="790" fg:w="1"/><text x="63.6020%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3520%" y="645" width="0.0802%" height="15" fill="rgb(206,216,48)" fg:x="790" fg:w="1"/><text x="63.6020%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.3520%" y="629" width="0.0802%" height="15" fill="rgb(247,190,28)" fg:x="790" fg:w="1"/><text x="63.6020%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.3520%" y="613" width="0.0802%" height="15" fill="rgb(216,196,12)" fg:x="790" fg:w="1"/><text x="63.6020%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.3520%" y="597" width="0.0802%" height="15" fill="rgb(232,114,19)" fg:x="790" fg:w="1"/><text x="63.6020%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="63.4322%" y="693" width="0.0802%" height="15" fill="rgb(240,60,14)" fg:x="791" fg:w="1"/><text x="63.6822%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.4322%" y="677" width="0.0802%" height="15" fill="rgb(250,108,9)" fg:x="791" fg:w="1"/><text x="63.6822%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4322%" y="661" width="0.0802%" height="15" fill="rgb(227,228,21)" fg:x="791" fg:w="1"/><text x="63.6822%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.4322%" y="645" width="0.0802%" height="15" fill="rgb(254,16,52)" fg:x="791" fg:w="1"/><text x="63.6822%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4322%" y="629" width="0.0802%" height="15" fill="rgb(222,58,2)" fg:x="791" fg:w="1"/><text x="63.6822%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4322%" y="613" width="0.0802%" height="15" fill="rgb(253,68,14)" fg:x="791" fg:w="1"/><text x="63.6822%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4322%" y="597" width="0.0802%" height="15" fill="rgb(226,96,17)" fg:x="791" fg:w="1"/><text x="63.6822%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.5124%" y="677" width="0.0802%" height="15" fill="rgb(227,199,2)" fg:x="792" fg:w="1"/><text x="63.7624%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.5926%" y="661" width="0.0802%" height="15" fill="rgb(228,227,48)" fg:x="793" fg:w="1"/><text x="63.8426%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5926%" y="645" width="0.0802%" height="15" fill="rgb(249,183,0)" fg:x="793" fg:w="1"/><text x="63.8426%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="63.4322%" y="709" width="0.3208%" height="15" fill="rgb(250,89,38)" fg:x="791" fg:w="4"/><text x="63.6822%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="63.5124%" y="693" width="0.2406%" height="15" fill="rgb(240,227,8)" fg:x="792" fg:w="3"/><text x="63.7624%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="63.5926%" y="677" width="0.1604%" height="15" fill="rgb(242,197,35)" fg:x="793" fg:w="2"/><text x="63.8426%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.6728%" y="661" width="0.0802%" height="15" fill="rgb(224,37,41)" fg:x="794" fg:w="1"/><text x="63.9228%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.6728%" y="645" width="0.0802%" height="15" fill="rgb(236,127,7)" fg:x="794" fg:w="1"/><text x="63.9228%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9134%" y="661" width="0.0802%" height="15" fill="rgb(230,62,52)" fg:x="797" fg:w="1"/><text x="64.1634%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9134%" y="645" width="0.0802%" height="15" fill="rgb(235,114,23)" fg:x="797" fg:w="1"/><text x="64.1634%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.9134%" y="629" width="0.0802%" height="15" fill="rgb(211,55,40)" fg:x="797" fg:w="1"/><text x="64.1634%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.9134%" y="613" width="0.0802%" height="15" fill="rgb(228,123,1)" fg:x="797" fg:w="1"/><text x="64.1634%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.9134%" y="597" width="0.0802%" height="15" fill="rgb(244,208,8)" fg:x="797" fg:w="1"/><text x="64.1634%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.9134%" y="581" width="0.0802%" height="15" fill="rgb(237,118,14)" fg:x="797" fg:w="1"/><text x="64.1634%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9134%" y="565" width="0.0802%" height="15" fill="rgb(219,170,13)" fg:x="797" fg:w="1"/><text x="64.1634%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.9134%" y="549" width="0.0802%" height="15" fill="rgb(212,39,43)" fg:x="797" fg:w="1"/><text x="64.1634%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.9134%" y="533" width="0.0802%" height="15" fill="rgb(244,191,2)" fg:x="797" fg:w="1"/><text x="64.1634%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.9134%" y="517" width="0.0802%" height="15" fill="rgb(219,201,46)" fg:x="797" fg:w="1"/><text x="64.1634%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.9134%" y="501" width="0.0802%" height="15" fill="rgb(218,82,7)" fg:x="797" fg:w="1"/><text x="64.1634%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.9134%" y="485" width="0.0802%" height="15" fill="rgb(208,192,8)" fg:x="797" fg:w="1"/><text x="64.1634%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.9134%" y="469" width="0.0802%" height="15" fill="rgb(244,54,32)" fg:x="797" fg:w="1"/><text x="64.1634%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="63.9936%" y="661" width="0.0802%" height="15" fill="rgb(240,43,52)" fg:x="798" fg:w="1"/><text x="64.2436%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="63.9936%" y="645" width="0.0802%" height="15" fill="rgb(233,134,29)" fg:x="798" fg:w="1"/><text x="64.2436%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9936%" y="629" width="0.0802%" height="15" fill="rgb(236,128,10)" fg:x="798" fg:w="1"/><text x="64.2436%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.9936%" y="613" width="0.0802%" height="15" fill="rgb(207,46,54)" fg:x="798" fg:w="1"/><text x="64.2436%" y="623.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="64.0738%" y="661" width="0.0802%" height="15" fill="rgb(248,140,35)" fg:x="799" fg:w="1"/><text x="64.3238%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.0738%" y="645" width="0.0802%" height="15" fill="rgb(241,103,35)" fg:x="799" fg:w="1"/><text x="64.3238%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.1540%" y="581" width="0.0802%" height="15" fill="rgb(223,19,48)" fg:x="800" fg:w="1"/><text x="64.4040%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.2342%" y="533" width="0.0802%" height="15" fill="rgb(238,177,46)" fg:x="801" fg:w="1"/><text x="64.4842%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2342%" y="517" width="0.0802%" height="15" fill="rgb(213,102,15)" fg:x="801" fg:w="1"/><text x="64.4842%" y="527.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.2342%" y="501" width="0.0802%" height="15" fill="rgb(254,135,52)" fg:x="801" fg:w="1"/><text x="64.4842%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.2342%" y="485" width="0.0802%" height="15" fill="rgb(240,59,6)" fg:x="801" fg:w="1"/><text x="64.4842%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.2342%" y="469" width="0.0802%" height="15" fill="rgb(207,226,5)" fg:x="801" fg:w="1"/><text x="64.4842%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="64.2342%" y="453" width="0.0802%" height="15" fill="rgb(208,167,17)" fg:x="801" fg:w="1"/><text x="64.4842%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.2342%" y="437" width="0.0802%" height="15" fill="rgb(254,94,10)" fg:x="801" fg:w="1"/><text x="64.4842%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2342%" y="421" width="0.0802%" height="15" fill="rgb(229,33,11)" fg:x="801" fg:w="1"/><text x="64.4842%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="64.3144%" y="533" width="0.0802%" height="15" fill="rgb(249,145,48)" fg:x="802" fg:w="1"/><text x="64.5644%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.2342%" y="565" width="0.2406%" height="15" fill="rgb(253,68,54)" fg:x="801" fg:w="3"/><text x="64.4842%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.2342%" y="549" width="0.2406%" height="15" fill="rgb(223,27,42)" fg:x="801" fg:w="3"/><text x="64.4842%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.3945%" y="533" width="0.0802%" height="15" fill="rgb(235,123,13)" fg:x="803" fg:w="1"/><text x="64.6445%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.3945%" y="517" width="0.0802%" height="15" fill="rgb(244,154,7)" fg:x="803" fg:w="1"/><text x="64.6445%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3945%" y="501" width="0.0802%" height="15" fill="rgb(214,30,25)" fg:x="803" fg:w="1"/><text x="64.6445%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.4747%" y="565" width="0.0802%" height="15" fill="rgb(252,189,13)" fg:x="804" fg:w="1"/><text x="64.7247%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.4747%" y="549" width="0.0802%" height="15" fill="rgb(234,27,40)" fg:x="804" fg:w="1"/><text x="64.7247%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.4747%" y="533" width="0.0802%" height="15" fill="rgb(252,199,25)" fg:x="804" fg:w="1"/><text x="64.7247%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="64.4747%" y="517" width="0.0802%" height="15" fill="rgb(234,207,20)" fg:x="804" fg:w="1"/><text x="64.7247%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.5549%" y="533" width="0.0802%" height="15" fill="rgb(244,220,10)" fg:x="805" fg:w="1"/><text x="64.8049%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.56%)</title><rect x="64.1540%" y="613" width="0.5613%" height="15" fill="rgb(247,68,23)" fg:x="800" fg:w="7"/><text x="64.4040%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="64.1540%" y="597" width="0.5613%" height="15" fill="rgb(254,61,4)" fg:x="800" fg:w="7"/><text x="64.4040%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="64.2342%" y="581" width="0.4812%" height="15" fill="rgb(245,208,35)" fg:x="801" fg:w="6"/><text x="64.4842%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.5549%" y="565" width="0.1604%" height="15" fill="rgb(235,90,11)" fg:x="805" fg:w="2"/><text x="64.8049%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.5549%" y="549" width="0.1604%" height="15" fill="rgb(239,139,43)" fg:x="805" fg:w="2"/><text x="64.8049%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.6351%" y="533" width="0.0802%" height="15" fill="rgb(209,187,9)" fg:x="806" fg:w="1"/><text x="64.8851%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6351%" y="517" width="0.0802%" height="15" fill="rgb(241,30,6)" fg:x="806" fg:w="1"/><text x="64.8851%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.6351%" y="501" width="0.0802%" height="15" fill="rgb(216,104,1)" fg:x="806" fg:w="1"/><text x="64.8851%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="64.6351%" y="485" width="0.0802%" height="15" fill="rgb(238,55,39)" fg:x="806" fg:w="1"/><text x="64.8851%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6351%" y="469" width="0.0802%" height="15" fill="rgb(226,151,41)" fg:x="806" fg:w="1"/><text x="64.8851%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.6351%" y="453" width="0.0802%" height="15" fill="rgb(228,73,40)" fg:x="806" fg:w="1"/><text x="64.8851%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="64.6351%" y="437" width="0.0802%" height="15" fill="rgb(215,81,0)" fg:x="806" fg:w="1"/><text x="64.8851%" y="447.50"></text></g><g><title>kernel::model::entity::Entity::from_value (8 samples, 0.64%)</title><rect x="64.1540%" y="661" width="0.6415%" height="15" fill="rgb(209,52,39)" fg:x="800" fg:w="8"/><text x="64.4040%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.64%)</title><rect x="64.1540%" y="645" width="0.6415%" height="15" fill="rgb(221,127,5)" fg:x="800" fg:w="8"/><text x="64.4040%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="64.1540%" y="629" width="0.6415%" height="15" fill="rgb(213,215,6)" fg:x="800" fg:w="8"/><text x="64.4040%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.7153%" y="613" width="0.0802%" height="15" fill="rgb(214,118,13)" fg:x="807" fg:w="1"/><text x="64.9653%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.7153%" y="597" width="0.0802%" height="15" fill="rgb(207,205,41)" fg:x="807" fg:w="1"/><text x="64.9653%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="64.7153%" y="581" width="0.0802%" height="15" fill="rgb(218,208,45)" fg:x="807" fg:w="1"/><text x="64.9653%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.7153%" y="565" width="0.0802%" height="15" fill="rgb(244,81,54)" fg:x="807" fg:w="1"/><text x="64.9653%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.7955%" y="565" width="0.0802%" height="15" fill="rgb(244,175,1)" fg:x="808" fg:w="1"/><text x="65.0455%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7955%" y="549" width="0.0802%" height="15" fill="rgb(232,128,28)" fg:x="808" fg:w="1"/><text x="65.0455%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.7955%" y="533" width="0.0802%" height="15" fill="rgb(234,83,13)" fg:x="808" fg:w="1"/><text x="65.0455%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7955%" y="517" width="0.0802%" height="15" fill="rgb(233,222,35)" fg:x="808" fg:w="1"/><text x="65.0455%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="64.7955%" y="501" width="0.0802%" height="15" fill="rgb(244,204,21)" fg:x="808" fg:w="1"/><text x="65.0455%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.7955%" y="485" width="0.0802%" height="15" fill="rgb(225,121,40)" fg:x="808" fg:w="1"/><text x="65.0455%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7955%" y="469" width="0.0802%" height="15" fill="rgb(231,89,18)" fg:x="808" fg:w="1"/><text x="65.0455%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.7955%" y="453" width="0.0802%" height="15" fill="rgb(205,41,50)" fg:x="808" fg:w="1"/><text x="65.0455%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7955%" y="437" width="0.0802%" height="15" fill="rgb(254,25,22)" fg:x="808" fg:w="1"/><text x="65.0455%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="64.7955%" y="597" width="0.1604%" height="15" fill="rgb(208,44,21)" fg:x="808" fg:w="2"/><text x="65.0455%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="64.7955%" y="581" width="0.1604%" height="15" fill="rgb(237,59,53)" fg:x="808" fg:w="2"/><text x="65.0455%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8757%" y="565" width="0.0802%" height="15" fill="rgb(233,24,36)" fg:x="809" fg:w="1"/><text x="65.1257%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8757%" y="549" width="0.0802%" height="15" fill="rgb(216,92,41)" fg:x="809" fg:w="1"/><text x="65.1257%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.8757%" y="533" width="0.0802%" height="15" fill="rgb(225,158,49)" fg:x="809" fg:w="1"/><text x="65.1257%" y="543.50"></text></g><g><title>engine::session::Session::load_entity (16 samples, 1.28%)</title><rect x="63.7530%" y="693" width="1.2831%" height="15" fill="rgb(244,11,16)" fg:x="795" fg:w="16"/><text x="64.0030%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (16 samples, 1.28%)</title><rect x="63.7530%" y="677" width="1.2831%" height="15" fill="rgb(208,215,38)" fg:x="795" fg:w="16"/><text x="64.0030%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="64.7955%" y="661" width="0.2406%" height="15" fill="rgb(250,69,53)" fg:x="808" fg:w="3"/><text x="65.0455%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="64.7955%" y="645" width="0.2406%" height="15" fill="rgb(240,187,52)" fg:x="808" fg:w="3"/><text x="65.0455%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="64.7955%" y="629" width="0.2406%" height="15" fill="rgb(235,22,25)" fg:x="808" fg:w="3"/><text x="65.0455%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="64.7955%" y="613" width="0.2406%" height="15" fill="rgb(213,173,22)" fg:x="808" fg:w="3"/><text x="65.0455%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.9559%" y="597" width="0.0802%" height="15" fill="rgb(218,47,0)" fg:x="810" fg:w="1"/><text x="65.2059%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.0361%" y="645" width="0.0802%" height="15" fill="rgb(254,157,11)" fg:x="811" fg:w="1"/><text x="65.2861%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.0361%" y="629" width="0.0802%" height="15" fill="rgb(233,154,6)" fg:x="811" fg:w="1"/><text x="65.2861%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.0361%" y="613" width="0.0802%" height="15" fill="rgb(233,207,47)" fg:x="811" fg:w="1"/><text x="65.2861%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.0361%" y="597" width="0.0802%" height="15" fill="rgb(249,128,18)" fg:x="811" fg:w="1"/><text x="65.2861%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="65.0361%" y="677" width="0.1604%" height="15" fill="rgb(211,27,42)" fg:x="811" fg:w="2"/><text x="65.2861%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.0361%" y="661" width="0.1604%" height="15" fill="rgb(240,163,26)" fg:x="811" fg:w="2"/><text x="65.2861%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.1163%" y="645" width="0.0802%" height="15" fill="rgb(232,118,46)" fg:x="812" fg:w="1"/><text x="65.3663%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1163%" y="629" width="0.0802%" height="15" fill="rgb(238,158,34)" fg:x="812" fg:w="1"/><text x="65.3663%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.1163%" y="613" width="0.0802%" height="15" fill="rgb(254,99,45)" fg:x="812" fg:w="1"/><text x="65.3663%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1163%" y="597" width="0.0802%" height="15" fill="rgb(247,205,20)" fg:x="812" fg:w="1"/><text x="65.3663%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.1163%" y="581" width="0.0802%" height="15" fill="rgb(240,20,41)" fg:x="812" fg:w="1"/><text x="65.3663%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.1163%" y="565" width="0.0802%" height="15" fill="rgb(231,22,43)" fg:x="812" fg:w="1"/><text x="65.3663%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.1965%" y="661" width="0.0802%" height="15" fill="rgb(207,86,33)" fg:x="813" fg:w="1"/><text x="65.4465%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.1965%" y="645" width="0.0802%" height="15" fill="rgb(231,148,5)" fg:x="813" fg:w="1"/><text x="65.4465%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2767%" y="597" width="0.1604%" height="15" fill="rgb(253,77,28)" fg:x="814" fg:w="2"/><text x="65.5267%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2767%" y="581" width="0.1604%" height="15" fill="rgb(253,227,9)" fg:x="814" fg:w="2"/><text x="65.5267%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.2767%" y="565" width="0.1604%" height="15" fill="rgb(235,4,18)" fg:x="814" fg:w="2"/><text x="65.5267%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.2767%" y="549" width="0.1604%" height="15" fill="rgb(205,206,45)" fg:x="814" fg:w="2"/><text x="65.5267%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.2767%" y="533" width="0.1604%" height="15" fill="rgb(252,34,0)" fg:x="814" fg:w="2"/><text x="65.5267%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.2767%" y="517" width="0.1604%" height="15" fill="rgb(213,56,7)" fg:x="814" fg:w="2"/><text x="65.5267%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="65.2767%" y="501" width="0.1604%" height="15" fill="rgb(227,74,29)" fg:x="814" fg:w="2"/><text x="65.5267%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="65.2767%" y="485" width="0.1604%" height="15" fill="rgb(221,32,48)" fg:x="814" fg:w="2"/><text x="65.5267%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="65.2767%" y="469" width="0.1604%" height="15" fill="rgb(230,205,25)" fg:x="814" fg:w="2"/><text x="65.5267%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="65.2767%" y="453" width="0.1604%" height="15" fill="rgb(215,110,9)" fg:x="814" fg:w="2"/><text x="65.5267%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="65.2767%" y="437" width="0.1604%" height="15" fill="rgb(245,220,47)" fg:x="814" fg:w="2"/><text x="65.5267%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="65.2767%" y="421" width="0.1604%" height="15" fill="rgb(224,117,5)" fg:x="814" fg:w="2"/><text x="65.5267%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2767%" y="645" width="0.2406%" height="15" fill="rgb(242,208,25)" fg:x="814" fg:w="3"/><text x="65.5267%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2767%" y="629" width="0.2406%" height="15" fill="rgb(226,12,37)" fg:x="814" fg:w="3"/><text x="65.5267%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.2767%" y="613" width="0.2406%" height="15" fill="rgb(224,221,22)" fg:x="814" fg:w="3"/><text x="65.5267%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4370%" y="597" width="0.0802%" height="15" fill="rgb(239,38,44)" fg:x="816" fg:w="1"/><text x="65.6870%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.5172%" y="645" width="0.0802%" height="15" fill="rgb(218,25,46)" fg:x="817" fg:w="1"/><text x="65.7672%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.5974%" y="645" width="0.0802%" height="15" fill="rgb(206,137,51)" fg:x="818" fg:w="1"/><text x="65.8474%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="65.5974%" y="629" width="0.0802%" height="15" fill="rgb(233,174,3)" fg:x="818" fg:w="1"/><text x="65.8474%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="65.5974%" y="613" width="0.0802%" height="15" fill="rgb(207,224,43)" fg:x="818" fg:w="1"/><text x="65.8474%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.5974%" y="597" width="0.0802%" height="15" fill="rgb(230,46,27)" fg:x="818" fg:w="1"/><text x="65.8474%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="65.6776%" y="581" width="0.0802%" height="15" fill="rgb(251,215,32)" fg:x="819" fg:w="1"/><text x="65.9276%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.80%)</title><rect x="65.1965%" y="677" width="0.8019%" height="15" fill="rgb(244,219,19)" fg:x="813" fg:w="10"/><text x="65.4465%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="65.2767%" y="661" width="0.7217%" height="15" fill="rgb(242,125,36)" fg:x="814" fg:w="9"/><text x="65.5267%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="65.6776%" y="645" width="0.3208%" height="15" fill="rgb(251,211,12)" fg:x="819" fg:w="4"/><text x="65.9276%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.6776%" y="629" width="0.3208%" height="15" fill="rgb(209,179,33)" fg:x="819" fg:w="4"/><text x="65.9276%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="65.6776%" y="613" width="0.3208%" height="15" fill="rgb(205,161,48)" fg:x="819" fg:w="4"/><text x="65.9276%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.6776%" y="597" width="0.3208%" height="15" fill="rgb(241,139,8)" fg:x="819" fg:w="4"/><text x="65.9276%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="65.7578%" y="581" width="0.2406%" height="15" fill="rgb(246,159,53)" fg:x="820" fg:w="3"/><text x="66.0078%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.7578%" y="565" width="0.2406%" height="15" fill="rgb(212,62,27)" fg:x="820" fg:w="3"/><text x="66.0078%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.8380%" y="549" width="0.1604%" height="15" fill="rgb(216,168,18)" fg:x="821" fg:w="2"/><text x="66.0880%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9182%" y="533" width="0.0802%" height="15" fill="rgb(228,136,50)" fg:x="822" fg:w="1"/><text x="66.1682%" y="543.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (354 samples, 28.39%)</title><rect x="37.6905%" y="741" width="28.3881%" height="15" fill="rgb(237,19,45)" fg:x="470" fg:w="354"/><text x="37.9405%" y="751.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::session::Session::evaluate_and_perform_as (354 samples, 28.39%)</title><rect x="37.6905%" y="725" width="28.3881%" height="15" fill="rgb(249,150,28)" fg:x="470" fg:w="354"/><text x="37.9405%" y="735.50">engine::session::Session::evaluate_and_perform..</text></g><g><title>kernel::model::entry::EntryResolver::world (29 samples, 2.33%)</title><rect x="63.7530%" y="709" width="2.3256%" height="15" fill="rgb(236,179,39)" fg:x="795" fg:w="29"/><text x="64.0030%" y="719.50">k..</text></g><g><title>kernel::model::entry::Entry::new (13 samples, 1.04%)</title><rect x="65.0361%" y="693" width="1.0425%" height="15" fill="rgb(250,113,27)" fg:x="811" fg:w="13"/><text x="65.2861%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.9984%" y="677" width="0.0802%" height="15" fill="rgb(223,13,14)" fg:x="823" fg:w="1"/><text x="66.2484%" y="687.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="65.9984%" y="661" width="0.0802%" height="15" fill="rgb(226,68,24)" fg:x="823" fg:w="1"/><text x="66.2484%" y="671.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.08%)</title><rect x="65.9984%" y="645" width="0.0802%" height="15" fill="rgb(239,40,50)" fg:x="823" fg:w="1"/><text x="66.2484%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (825 samples, 66.16%)</title><rect x="0.0000%" y="789" width="66.1588%" height="15" fill="rgb(209,187,0)" fg:x="0" fg:w="825"/><text x="0.2500%" y="799.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (825 samples, 66.16%)</title><rect x="0.0000%" y="773" width="66.1588%" height="15" fill="rgb(240,61,8)" fg:x="0" fg:w="825"/><text x="0.2500%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (825 samples, 66.16%)</title><rect x="0.0000%" y="757" width="66.1588%" height="15" fill="rgb(236,137,5)" fg:x="0" fg:w="825"/><text x="0.2500%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="66.0786%" y="741" width="0.0802%" height="15" fill="rgb(247,214,21)" fg:x="824" fg:w="1"/><text x="66.3286%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="66.0786%" y="725" width="0.0802%" height="15" fill="rgb(244,115,25)" fg:x="824" fg:w="1"/><text x="66.3286%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.0786%" y="709" width="0.0802%" height="15" fill="rgb(230,58,38)" fg:x="824" fg:w="1"/><text x="66.3286%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.0786%" y="693" width="0.0802%" height="15" fill="rgb(206,122,6)" fg:x="824" fg:w="1"/><text x="66.3286%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.2390%" y="693" width="0.0802%" height="15" fill="rgb(217,135,53)" fg:x="826" fg:w="1"/><text x="66.4890%" y="703.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.24%)</title><rect x="66.1588%" y="725" width="0.2406%" height="15" fill="rgb(225,120,8)" fg:x="825" fg:w="3"/><text x="66.4088%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="66.1588%" y="709" width="0.2406%" height="15" fill="rgb(226,3,30)" fg:x="825" fg:w="3"/><text x="66.4088%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="66.3192%" y="693" width="0.0802%" height="15" fill="rgb(214,159,38)" fg:x="827" fg:w="1"/><text x="66.5692%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.3192%" y="677" width="0.0802%" height="15" fill="rgb(242,182,47)" fg:x="827" fg:w="1"/><text x="66.5692%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4796%" y="629" width="0.0802%" height="15" fill="rgb(245,202,26)" fg:x="829" fg:w="1"/><text x="66.7296%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.5597%" y="629" width="0.0802%" height="15" fill="rgb(226,163,3)" fg:x="830" fg:w="1"/><text x="66.8097%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.5597%" y="613" width="0.0802%" height="15" fill="rgb(219,4,4)" fg:x="830" fg:w="1"/><text x="66.8097%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.6399%" y="597" width="0.0802%" height="15" fill="rgb(223,85,4)" fg:x="831" fg:w="1"/><text x="66.8899%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.6399%" y="581" width="0.0802%" height="15" fill="rgb(242,170,11)" fg:x="831" fg:w="1"/><text x="66.8899%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.7201%" y="597" width="0.1604%" height="15" fill="rgb(221,97,42)" fg:x="832" fg:w="2"/><text x="66.9701%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="66.3994%" y="661" width="0.7217%" height="15" fill="rgb(231,206,45)" fg:x="828" fg:w="9"/><text x="66.6494%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="66.4796%" y="645" width="0.6415%" height="15" fill="rgb(216,23,48)" fg:x="829" fg:w="8"/><text x="66.7296%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="66.6399%" y="629" width="0.4812%" height="15" fill="rgb(225,49,9)" fg:x="831" fg:w="6"/><text x="66.8899%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="66.6399%" y="613" width="0.4812%" height="15" fill="rgb(247,24,47)" fg:x="831" fg:w="6"/><text x="66.8899%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="66.8805%" y="597" width="0.2406%" height="15" fill="rgb(253,145,10)" fg:x="834" fg:w="3"/><text x="67.1305%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.9607%" y="581" width="0.1604%" height="15" fill="rgb(206,62,10)" fg:x="835" fg:w="2"/><text x="67.2107%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2013%" y="629" width="0.0802%" height="15" fill="rgb(224,159,31)" fg:x="838" fg:w="1"/><text x="67.4513%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2013%" y="613" width="0.0802%" height="15" fill="rgb(234,184,15)" fg:x="838" fg:w="1"/><text x="67.4513%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.3617%" y="613" width="0.0802%" height="15" fill="rgb(237,101,1)" fg:x="840" fg:w="1"/><text x="67.6117%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.3617%" y="597" width="0.0802%" height="15" fill="rgb(211,99,29)" fg:x="840" fg:w="1"/><text x="67.6117%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.36%)</title><rect x="66.1588%" y="741" width="1.3633%" height="15" fill="rgb(250,167,3)" fg:x="825" fg:w="17"/><text x="66.4088%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (14 samples, 1.12%)</title><rect x="66.3994%" y="725" width="1.1227%" height="15" fill="rgb(225,58,6)" fg:x="828" fg:w="14"/><text x="66.6494%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="66.3994%" y="709" width="1.1227%" height="15" fill="rgb(251,161,21)" fg:x="828" fg:w="14"/><text x="66.6494%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (14 samples, 1.12%)</title><rect x="66.3994%" y="693" width="1.1227%" height="15" fill="rgb(253,203,35)" fg:x="828" fg:w="14"/><text x="66.6494%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.12%)</title><rect x="66.3994%" y="677" width="1.1227%" height="15" fill="rgb(214,220,52)" fg:x="828" fg:w="14"/><text x="66.6494%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="67.1211%" y="661" width="0.4010%" height="15" fill="rgb(235,216,33)" fg:x="837" fg:w="5"/><text x="67.3711%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="67.1211%" y="645" width="0.4010%" height="15" fill="rgb(231,79,26)" fg:x="837" fg:w="5"/><text x="67.3711%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="67.2815%" y="629" width="0.2406%" height="15" fill="rgb(244,218,10)" fg:x="839" fg:w="3"/><text x="67.5315%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.4419%" y="613" width="0.0802%" height="15" fill="rgb(238,15,9)" fg:x="841" fg:w="1"/><text x="67.6919%" y="623.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="67.5221%" y="693" width="0.0802%" height="15" fill="rgb(235,112,15)" fg:x="842" fg:w="1"/><text x="67.7721%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5221%" y="677" width="0.0802%" height="15" fill="rgb(239,126,18)" fg:x="842" fg:w="1"/><text x="67.7721%" y="687.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="67.6022%" y="629" width="0.0802%" height="15" fill="rgb(253,171,19)" fg:x="843" fg:w="1"/><text x="67.8522%" y="639.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="67.6022%" y="613" width="0.0802%" height="15" fill="rgb(237,218,25)" fg:x="843" fg:w="1"/><text x="67.8522%" y="623.50"></text></g><g><title>dlopen (3 samples, 0.24%)</title><rect x="67.6824%" y="629" width="0.2406%" height="15" fill="rgb(213,88,46)" fg:x="844" fg:w="3"/><text x="67.9324%" y="639.50"></text></g><g><title>_dl_catch_error (3 samples, 0.24%)</title><rect x="67.6824%" y="613" width="0.2406%" height="15" fill="rgb(222,124,54)" fg:x="844" fg:w="3"/><text x="67.9324%" y="623.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="67.6824%" y="597" width="0.2406%" height="15" fill="rgb(209,206,42)" fg:x="844" fg:w="3"/><text x="67.9324%" y="607.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="67.6824%" y="581" width="0.2406%" height="15" fill="rgb(219,25,49)" fg:x="844" fg:w="3"/><text x="67.9324%" y="591.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="67.6824%" y="565" width="0.2406%" height="15" fill="rgb(228,207,53)" fg:x="844" fg:w="3"/><text x="67.9324%" y="575.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (5 samples, 0.40%)</title><rect x="67.6022%" y="677" width="0.4010%" height="15" fill="rgb(224,3,4)" fg:x="843" fg:w="5"/><text x="67.8522%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (5 samples, 0.40%)</title><rect x="67.6022%" y="661" width="0.4010%" height="15" fill="rgb(254,206,26)" fg:x="843" fg:w="5"/><text x="67.8522%" y="671.50"></text></g><g><title>libloading::safe::Library::new (5 samples, 0.40%)</title><rect x="67.6022%" y="645" width="0.4010%" height="15" fill="rgb(209,4,26)" fg:x="843" fg:w="5"/><text x="67.8522%" y="655.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="67.9230%" y="629" width="0.0802%" height="15" fill="rgb(243,193,32)" fg:x="847" fg:w="1"/><text x="68.1730%" y="639.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="67.9230%" y="613" width="0.0802%" height="15" fill="rgb(225,150,36)" fg:x="847" fg:w="1"/><text x="68.1730%" y="623.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="67.9230%" y="597" width="0.0802%" height="15" fill="rgb(225,131,26)" fg:x="847" fg:w="1"/><text x="68.1730%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="67.9230%" y="581" width="0.0802%" height="15" fill="rgb(236,126,12)" fg:x="847" fg:w="1"/><text x="68.1730%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.9230%" y="565" width="0.0802%" height="15" fill="rgb(238,167,44)" fg:x="847" fg:w="1"/><text x="68.1730%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.9230%" y="549" width="0.0802%" height="15" fill="rgb(238,153,31)" fg:x="847" fg:w="1"/><text x="68.1730%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.9230%" y="533" width="0.0802%" height="15" fill="rgb(254,41,51)" fg:x="847" fg:w="1"/><text x="68.1730%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.0032%" y="629" width="0.0802%" height="15" fill="rgb(224,100,52)" fg:x="848" fg:w="1"/><text x="68.2532%" y="639.50"></text></g><g><title>engine::session::Session::initialize (7 samples, 0.56%)</title><rect x="67.6022%" y="693" width="0.5613%" height="15" fill="rgb(246,226,38)" fg:x="843" fg:w="7"/><text x="67.8522%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="68.0032%" y="677" width="0.1604%" height="15" fill="rgb(252,21,43)" fg:x="848" fg:w="2"/><text x="68.2532%" y="687.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="68.0032%" y="661" width="0.1604%" height="15" fill="rgb(250,44,8)" fg:x="848" fg:w="2"/><text x="68.2532%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="68.0032%" y="645" width="0.1604%" height="15" fill="rgb(224,200,45)" fg:x="848" fg:w="2"/><text x="68.2532%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.0834%" y="629" width="0.0802%" height="15" fill="rgb(208,75,52)" fg:x="849" fg:w="1"/><text x="68.3334%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.0834%" y="613" width="0.0802%" height="15" fill="rgb(213,167,20)" fg:x="849" fg:w="1"/><text x="68.3334%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.0834%" y="597" width="0.0802%" height="15" fill="rgb(236,163,42)" fg:x="849" fg:w="1"/><text x="68.3334%" y="607.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (9 samples, 0.72%)</title><rect x="67.5221%" y="741" width="0.7217%" height="15" fill="rgb(210,98,31)" fg:x="842" fg:w="9"/><text x="67.7721%" y="751.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (9 samples, 0.72%)</title><rect x="67.5221%" y="725" width="0.7217%" height="15" fill="rgb(246,166,15)" fg:x="842" fg:w="9"/><text x="67.7721%" y="735.50"></text></g><g><title>engine::session::Session::new (9 samples, 0.72%)</title><rect x="67.5221%" y="709" width="0.7217%" height="15" fill="rgb(214,114,7)" fg:x="842" fg:w="9"/><text x="67.7721%" y="719.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="68.1636%" y="693" width="0.0802%" height="15" fill="rgb(217,202,34)" fg:x="850" fg:w="1"/><text x="68.4136%" y="703.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="68.1636%" y="677" width="0.0802%" height="15" fill="rgb(227,226,29)" fg:x="850" fg:w="1"/><text x="68.4136%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.1636%" y="661" width="0.0802%" height="15" fill="rgb(254,65,44)" fg:x="850" fg:w="1"/><text x="68.4136%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.1636%" y="645" width="0.0802%" height="15" fill="rgb(213,150,32)" fg:x="850" fg:w="1"/><text x="68.4136%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.1636%" y="629" width="0.0802%" height="15" fill="rgb(208,86,46)" fg:x="850" fg:w="1"/><text x="68.4136%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.1636%" y="613" width="0.0802%" height="15" fill="rgb(222,75,3)" fg:x="850" fg:w="1"/><text x="68.4136%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.3240%" y="597" width="0.0802%" height="15" fill="rgb(225,213,9)" fg:x="852" fg:w="1"/><text x="68.5740%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.3240%" y="581" width="0.0802%" height="15" fill="rgb(209,199,10)" fg:x="852" fg:w="1"/><text x="68.5740%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="68.3240%" y="613" width="0.1604%" height="15" fill="rgb(213,18,17)" fg:x="852" fg:w="2"/><text x="68.5740%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.4042%" y="597" width="0.0802%" height="15" fill="rgb(243,79,44)" fg:x="853" fg:w="1"/><text x="68.6542%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.4042%" y="581" width="0.0802%" height="15" fill="rgb(226,20,5)" fg:x="853" fg:w="1"/><text x="68.6542%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.4042%" y="565" width="0.0802%" height="15" fill="rgb(217,52,31)" fg:x="853" fg:w="1"/><text x="68.6542%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.4844%" y="597" width="0.0802%" height="15" fill="rgb(229,42,7)" fg:x="854" fg:w="1"/><text x="68.7344%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.5646%" y="597" width="0.1604%" height="15" fill="rgb(206,118,29)" fg:x="855" fg:w="2"/><text x="68.8146%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.6447%" y="581" width="0.0802%" height="15" fill="rgb(248,132,44)" fg:x="856" fg:w="1"/><text x="68.8947%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.6447%" y="565" width="0.0802%" height="15" fill="rgb(231,56,33)" fg:x="856" fg:w="1"/><text x="68.8947%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="68.6447%" y="549" width="0.0802%" height="15" fill="rgb(208,31,11)" fg:x="856" fg:w="1"/><text x="68.8947%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.7249%" y="581" width="0.0802%" height="15" fill="rgb(216,56,33)" fg:x="857" fg:w="1"/><text x="68.9749%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.7249%" y="565" width="0.0802%" height="15" fill="rgb(213,100,0)" fg:x="857" fg:w="1"/><text x="68.9749%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.7249%" y="549" width="0.0802%" height="15" fill="rgb(236,166,18)" fg:x="857" fg:w="1"/><text x="68.9749%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.7249%" y="533" width="0.0802%" height="15" fill="rgb(251,132,12)" fg:x="857" fg:w="1"/><text x="68.9749%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.7249%" y="517" width="0.0802%" height="15" fill="rgb(216,117,7)" fg:x="857" fg:w="1"/><text x="68.9749%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.7249%" y="501" width="0.0802%" height="15" fill="rgb(243,184,8)" fg:x="857" fg:w="1"/><text x="68.9749%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.7249%" y="485" width="0.0802%" height="15" fill="rgb(212,91,32)" fg:x="857" fg:w="1"/><text x="68.9749%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.8051%" y="517" width="0.0802%" height="15" fill="rgb(224,147,15)" fg:x="858" fg:w="1"/><text x="69.0551%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.8051%" y="565" width="0.1604%" height="15" fill="rgb(228,84,10)" fg:x="858" fg:w="2"/><text x="69.0551%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="68.8051%" y="549" width="0.1604%" height="15" fill="rgb(221,161,22)" fg:x="858" fg:w="2"/><text x="69.0551%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="68.8051%" y="533" width="0.1604%" height="15" fill="rgb(250,132,20)" fg:x="858" fg:w="2"/><text x="69.0551%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="68.8853%" y="517" width="0.0802%" height="15" fill="rgb(209,161,12)" fg:x="859" fg:w="1"/><text x="69.1353%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="68.9655%" y="549" width="0.2406%" height="15" fill="rgb(232,142,42)" fg:x="860" fg:w="3"/><text x="69.2155%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="69.0457%" y="533" width="0.1604%" height="15" fill="rgb(240,228,27)" fg:x="861" fg:w="2"/><text x="69.2957%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="69.0457%" y="517" width="0.1604%" height="15" fill="rgb(243,0,31)" fg:x="861" fg:w="2"/><text x="69.2957%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.1259%" y="501" width="0.0802%" height="15" fill="rgb(237,100,15)" fg:x="862" fg:w="1"/><text x="69.3759%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="68.8051%" y="581" width="0.4812%" height="15" fill="rgb(230,26,48)" fg:x="858" fg:w="6"/><text x="69.0551%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="68.9655%" y="565" width="0.3208%" height="15" fill="rgb(215,7,13)" fg:x="860" fg:w="4"/><text x="69.2155%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="69.2061%" y="549" width="0.0802%" height="15" fill="rgb(227,172,5)" fg:x="863" fg:w="1"/><text x="69.4561%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.2061%" y="533" width="0.0802%" height="15" fill="rgb(248,206,14)" fg:x="863" fg:w="1"/><text x="69.4561%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.2061%" y="517" width="0.0802%" height="15" fill="rgb(231,62,54)" fg:x="863" fg:w="1"/><text x="69.4561%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="69.2061%" y="501" width="0.0802%" height="15" fill="rgb(222,136,26)" fg:x="863" fg:w="1"/><text x="69.4561%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="68.7249%" y="597" width="0.6415%" height="15" fill="rgb(211,115,42)" fg:x="857" fg:w="8"/><text x="68.9749%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.2863%" y="581" width="0.0802%" height="15" fill="rgb(234,5,17)" fg:x="864" fg:w="1"/><text x="69.5363%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (15 samples, 1.20%)</title><rect x="68.2438%" y="629" width="1.2029%" height="15" fill="rgb(233,67,14)" fg:x="851" fg:w="15"/><text x="68.4938%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.96%)</title><rect x="68.4844%" y="613" width="0.9623%" height="15" fill="rgb(225,133,51)" fg:x="854" fg:w="12"/><text x="68.7344%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="69.3665%" y="597" width="0.0802%" height="15" fill="rgb(206,107,40)" fg:x="865" fg:w="1"/><text x="69.6165%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="69.3665%" y="581" width="0.0802%" height="15" fill="rgb(210,56,9)" fg:x="865" fg:w="1"/><text x="69.6165%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.3665%" y="565" width="0.0802%" height="15" fill="rgb(222,204,4)" fg:x="865" fg:w="1"/><text x="69.6165%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4467%" y="597" width="0.0802%" height="15" fill="rgb(210,168,3)" fg:x="866" fg:w="1"/><text x="69.6967%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="69.5269%" y="581" width="0.1604%" height="15" fill="rgb(246,183,26)" fg:x="867" fg:w="2"/><text x="69.7769%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="69.4467%" y="629" width="0.3208%" height="15" fill="rgb(228,27,31)" fg:x="866" fg:w="4"/><text x="69.6967%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="69.4467%" y="613" width="0.3208%" height="15" fill="rgb(206,8,2)" fg:x="866" fg:w="4"/><text x="69.6967%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="69.5269%" y="597" width="0.2406%" height="15" fill="rgb(251,229,16)" fg:x="867" fg:w="3"/><text x="69.7769%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="581" width="0.0802%" height="15" fill="rgb(208,84,44)" fg:x="869" fg:w="1"/><text x="69.9372%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.6872%" y="565" width="0.0802%" height="15" fill="rgb(221,228,13)" fg:x="869" fg:w="1"/><text x="69.9372%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.6872%" y="549" width="0.0802%" height="15" fill="rgb(248,42,47)" fg:x="869" fg:w="1"/><text x="69.9372%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6872%" y="533" width="0.0802%" height="15" fill="rgb(222,124,41)" fg:x="869" fg:w="1"/><text x="69.9372%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.8476%" y="581" width="0.1604%" height="15" fill="rgb(244,191,35)" fg:x="871" fg:w="2"/><text x="70.0976%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.8476%" y="565" width="0.1604%" height="15" fill="rgb(222,223,54)" fg:x="871" fg:w="2"/><text x="70.0976%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9278%" y="549" width="0.0802%" height="15" fill="rgb(248,178,42)" fg:x="872" fg:w="1"/><text x="70.1778%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="70.0080%" y="581" width="0.0802%" height="15" fill="rgb(238,21,24)" fg:x="873" fg:w="1"/><text x="70.2580%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.0080%" y="565" width="0.0802%" height="15" fill="rgb(227,134,7)" fg:x="873" fg:w="1"/><text x="70.2580%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.0080%" y="549" width="0.0802%" height="15" fill="rgb(205,191,1)" fg:x="873" fg:w="1"/><text x="70.2580%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="70.0882%" y="549" width="0.0802%" height="15" fill="rgb(222,166,30)" fg:x="874" fg:w="1"/><text x="70.3382%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="70.2486%" y="533" width="0.0802%" height="15" fill="rgb(229,94,26)" fg:x="876" fg:w="1"/><text x="70.4986%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="70.2486%" y="517" width="0.0802%" height="15" fill="rgb(246,97,2)" fg:x="876" fg:w="1"/><text x="70.4986%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.56%)</title><rect x="70.0882%" y="565" width="0.5613%" height="15" fill="rgb(252,112,53)" fg:x="874" fg:w="7"/><text x="70.3382%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="70.1684%" y="549" width="0.4812%" height="15" fill="rgb(225,52,38)" fg:x="875" fg:w="6"/><text x="70.4184%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="70.3288%" y="533" width="0.3208%" height="15" fill="rgb(215,203,24)" fg:x="877" fg:w="4"/><text x="70.5788%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="70.4090%" y="517" width="0.2406%" height="15" fill="rgb(210,122,52)" fg:x="878" fg:w="3"/><text x="70.6590%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="70.4892%" y="501" width="0.1604%" height="15" fill="rgb(209,161,44)" fg:x="879" fg:w="2"/><text x="70.7392%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="70.5694%" y="485" width="0.0802%" height="15" fill="rgb(221,97,16)" fg:x="880" fg:w="1"/><text x="70.8194%" y="495.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.49%)</title><rect x="68.2438%" y="725" width="2.4860%" height="15" fill="rgb(209,87,13)" fg:x="851" fg:w="31"/><text x="68.4938%" y="735.50">en..</text></g><g><title>engine::session::state::State::close (31 samples, 2.49%)</title><rect x="68.2438%" y="709" width="2.4860%" height="15" fill="rgb(242,1,21)" fg:x="851" fg:w="31"/><text x="68.4938%" y="719.50">en..</text></g><g><title>engine::session::state::State::flush_entities (31 samples, 2.49%)</title><rect x="68.2438%" y="693" width="2.4860%" height="15" fill="rgb(251,170,41)" fg:x="851" fg:w="31"/><text x="68.4938%" y="703.50">en..</text></g><g><title>core::iter::adapters::try_process (31 samples, 2.49%)</title><rect x="68.2438%" y="677" width="2.4860%" height="15" fill="rgb(227,201,10)" fg:x="851" fg:w="31"/><text x="68.4938%" y="687.50">co..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 2.49%)</title><rect x="68.2438%" y="661" width="2.4860%" height="15" fill="rgb(231,100,29)" fg:x="851" fg:w="31"/><text x="68.4938%" y="671.50">&lt;a..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (31 samples, 2.49%)</title><rect x="68.2438%" y="645" width="2.4860%" height="15" fill="rgb(226,31,35)" fg:x="851" fg:w="31"/><text x="68.4938%" y="655.50">en..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="69.7674%" y="629" width="0.9623%" height="15" fill="rgb(254,99,26)" fg:x="870" fg:w="12"/><text x="70.0174%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.96%)</title><rect x="69.7674%" y="613" width="0.9623%" height="15" fill="rgb(217,228,17)" fg:x="870" fg:w="12"/><text x="70.0174%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.96%)</title><rect x="69.7674%" y="597" width="0.9623%" height="15" fill="rgb(226,132,8)" fg:x="870" fg:w="12"/><text x="70.0174%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="70.0882%" y="581" width="0.6415%" height="15" fill="rgb(220,202,47)" fg:x="874" fg:w="8"/><text x="70.3382%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.6496%" y="565" width="0.0802%" height="15" fill="rgb(245,194,10)" fg:x="881" fg:w="1"/><text x="70.8996%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.7298%" y="677" width="0.0802%" height="15" fill="rgb(225,44,52)" fg:x="882" fg:w="1"/><text x="70.9798%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.7298%" y="661" width="0.0802%" height="15" fill="rgb(235,10,4)" fg:x="882" fg:w="1"/><text x="70.9798%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7298%" y="645" width="0.0802%" height="15" fill="rgb(244,32,23)" fg:x="882" fg:w="1"/><text x="70.9798%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7298%" y="629" width="0.0802%" height="15" fill="rgb(210,115,0)" fg:x="882" fg:w="1"/><text x="70.9798%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.7298%" y="613" width="0.0802%" height="15" fill="rgb(246,72,16)" fg:x="882" fg:w="1"/><text x="70.9798%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7298%" y="597" width="0.0802%" height="15" fill="rgb(223,32,10)" fg:x="882" fg:w="1"/><text x="70.9798%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="70.7298%" y="581" width="0.0802%" height="15" fill="rgb(223,97,52)" fg:x="882" fg:w="1"/><text x="70.9798%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="70.8099%" y="645" width="0.0802%" height="15" fill="rgb(238,69,38)" fg:x="883" fg:w="1"/><text x="71.0599%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.8099%" y="629" width="0.0802%" height="15" fill="rgb(226,61,1)" fg:x="883" fg:w="1"/><text x="71.0599%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="70.8099%" y="661" width="0.1604%" height="15" fill="rgb(244,56,14)" fg:x="883" fg:w="2"/><text x="71.0599%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.8901%" y="645" width="0.0802%" height="15" fill="rgb(242,164,18)" fg:x="884" fg:w="1"/><text x="71.1401%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="629" width="0.0802%" height="15" fill="rgb(217,130,28)" fg:x="884" fg:w="1"/><text x="71.1401%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="613" width="0.0802%" height="15" fill="rgb(218,118,52)" fg:x="884" fg:w="1"/><text x="71.1401%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="597" width="0.0802%" height="15" fill="rgb(251,112,38)" fg:x="884" fg:w="1"/><text x="71.1401%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.8901%" y="581" width="0.0802%" height="15" fill="rgb(239,14,50)" fg:x="884" fg:w="1"/><text x="71.1401%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.9703%" y="613" width="0.0802%" height="15" fill="rgb(228,141,54)" fg:x="885" fg:w="1"/><text x="71.2203%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9703%" y="597" width="0.0802%" height="15" fill="rgb(236,128,15)" fg:x="885" fg:w="1"/><text x="71.2203%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.9703%" y="629" width="0.1604%" height="15" fill="rgb(206,140,54)" fg:x="885" fg:w="2"/><text x="71.2203%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0505%" y="613" width="0.0802%" height="15" fill="rgb(240,0,44)" fg:x="886" fg:w="1"/><text x="71.3005%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0505%" y="597" width="0.0802%" height="15" fill="rgb(243,207,23)" fg:x="886" fg:w="1"/><text x="71.3005%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0505%" y="581" width="0.0802%" height="15" fill="rgb(247,202,1)" fg:x="886" fg:w="1"/><text x="71.3005%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0505%" y="565" width="0.0802%" height="15" fill="rgb(239,83,27)" fg:x="886" fg:w="1"/><text x="71.3005%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0505%" y="549" width="0.0802%" height="15" fill="rgb(219,205,7)" fg:x="886" fg:w="1"/><text x="71.3005%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0505%" y="533" width="0.0802%" height="15" fill="rgb(249,184,22)" fg:x="886" fg:w="1"/><text x="71.3005%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="71.0505%" y="517" width="0.0802%" height="15" fill="rgb(230,150,14)" fg:x="886" fg:w="1"/><text x="71.3005%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="70.8099%" y="677" width="0.4010%" height="15" fill="rgb(240,118,34)" fg:x="883" fg:w="5"/><text x="71.0599%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="70.9703%" y="661" width="0.2406%" height="15" fill="rgb(227,162,21)" fg:x="885" fg:w="3"/><text x="71.2203%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="70.9703%" y="645" width="0.2406%" height="15" fill="rgb(219,14,9)" fg:x="885" fg:w="3"/><text x="71.2203%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.1307%" y="629" width="0.0802%" height="15" fill="rgb(223,226,16)" fg:x="887" fg:w="1"/><text x="71.3807%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.1307%" y="613" width="0.0802%" height="15" fill="rgb(246,161,37)" fg:x="887" fg:w="1"/><text x="71.3807%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2109%" y="613" width="0.0802%" height="15" fill="rgb(205,221,43)" fg:x="888" fg:w="1"/><text x="71.4609%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2109%" y="597" width="0.0802%" height="15" fill="rgb(228,216,26)" fg:x="888" fg:w="1"/><text x="71.4609%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.2109%" y="581" width="0.0802%" height="15" fill="rgb(251,33,17)" fg:x="888" fg:w="1"/><text x="71.4609%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.2911%" y="613" width="0.0802%" height="15" fill="rgb(246,126,36)" fg:x="889" fg:w="1"/><text x="71.5411%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.2911%" y="597" width="0.0802%" height="15" fill="rgb(217,160,24)" fg:x="889" fg:w="1"/><text x="71.5411%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.2911%" y="581" width="0.0802%" height="15" fill="rgb(211,64,12)" fg:x="889" fg:w="1"/><text x="71.5411%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.2911%" y="565" width="0.0802%" height="15" fill="rgb(238,47,36)" fg:x="889" fg:w="1"/><text x="71.5411%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (9 samples, 0.72%)</title><rect x="70.7298%" y="693" width="0.7217%" height="15" fill="rgb(210,157,42)" fg:x="882" fg:w="9"/><text x="70.9798%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="71.2109%" y="677" width="0.2406%" height="15" fill="rgb(242,84,39)" fg:x="888" fg:w="3"/><text x="71.4609%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="71.2109%" y="661" width="0.2406%" height="15" fill="rgb(207,65,41)" fg:x="888" fg:w="3"/><text x="71.4609%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="71.2109%" y="645" width="0.2406%" height="15" fill="rgb(246,97,27)" fg:x="888" fg:w="3"/><text x="71.4609%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.2109%" y="629" width="0.2406%" height="15" fill="rgb(229,9,43)" fg:x="888" fg:w="3"/><text x="71.4609%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.3713%" y="613" width="0.0802%" height="15" fill="rgb(211,82,44)" fg:x="890" fg:w="1"/><text x="71.6213%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.3713%" y="597" width="0.0802%" height="15" fill="rgb(253,45,54)" fg:x="890" fg:w="1"/><text x="71.6213%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.3713%" y="581" width="0.0802%" height="15" fill="rgb(235,94,32)" fg:x="890" fg:w="1"/><text x="71.6213%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3713%" y="565" width="0.0802%" height="15" fill="rgb(252,143,1)" fg:x="890" fg:w="1"/><text x="71.6213%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (10 samples, 0.80%)</title><rect x="70.7298%" y="709" width="0.8019%" height="15" fill="rgb(239,164,4)" fg:x="882" fg:w="10"/><text x="70.9798%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.4515%" y="693" width="0.0802%" height="15" fill="rgb(222,25,39)" fg:x="891" fg:w="1"/><text x="71.7015%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="71.4515%" y="677" width="0.0802%" height="15" fill="rgb(234,175,9)" fg:x="891" fg:w="1"/><text x="71.7015%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4515%" y="661" width="0.0802%" height="15" fill="rgb(247,200,41)" fg:x="891" fg:w="1"/><text x="71.7015%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.4515%" y="645" width="0.0802%" height="15" fill="rgb(245,101,27)" fg:x="891" fg:w="1"/><text x="71.7015%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.5317%" y="693" width="0.0802%" height="15" fill="rgb(221,29,7)" fg:x="892" fg:w="1"/><text x="71.7817%" y="703.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="71.5317%" y="677" width="0.0802%" height="15" fill="rgb(240,184,10)" fg:x="892" fg:w="1"/><text x="71.7817%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="71.5317%" y="661" width="0.0802%" height="15" fill="rgb(251,85,15)" fg:x="892" fg:w="1"/><text x="71.7817%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="71.5317%" y="645" width="0.0802%" height="15" fill="rgb(252,84,16)" fg:x="892" fg:w="1"/><text x="71.7817%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5317%" y="629" width="0.0802%" height="15" fill="rgb(233,136,6)" fg:x="892" fg:w="1"/><text x="71.7817%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="71.6119%" y="629" width="0.0802%" height="15" fill="rgb(226,169,30)" fg:x="893" fg:w="1"/><text x="71.8619%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.6119%" y="613" width="0.0802%" height="15" fill="rgb(241,83,18)" fg:x="893" fg:w="1"/><text x="71.8619%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="71.6119%" y="645" width="0.2406%" height="15" fill="rgb(239,151,5)" fg:x="893" fg:w="3"/><text x="71.8619%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.6921%" y="629" width="0.1604%" height="15" fill="rgb(238,56,13)" fg:x="894" fg:w="2"/><text x="71.9421%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.6921%" y="613" width="0.1604%" height="15" fill="rgb(224,100,0)" fg:x="894" fg:w="2"/><text x="71.9421%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="71.6921%" y="597" width="0.1604%" height="15" fill="rgb(231,168,26)" fg:x="894" fg:w="2"/><text x="71.9421%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="71.6921%" y="581" width="0.1604%" height="15" fill="rgb(238,110,3)" fg:x="894" fg:w="2"/><text x="71.9421%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.7723%" y="565" width="0.0802%" height="15" fill="rgb(216,190,1)" fg:x="895" fg:w="1"/><text x="72.0223%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.8524%" y="613" width="0.0802%" height="15" fill="rgb(208,130,52)" fg:x="896" fg:w="1"/><text x="72.1024%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (16 samples, 1.28%)</title><rect x="70.7298%" y="725" width="1.2831%" height="15" fill="rgb(233,74,12)" fg:x="882" fg:w="16"/><text x="70.9798%" y="735.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.48%)</title><rect x="71.5317%" y="709" width="0.4812%" height="15" fill="rgb(248,12,15)" fg:x="892" fg:w="6"/><text x="71.7817%" y="719.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="71.6119%" y="693" width="0.4010%" height="15" fill="rgb(228,18,29)" fg:x="893" fg:w="5"/><text x="71.8619%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="71.6119%" y="677" width="0.4010%" height="15" fill="rgb(206,153,11)" fg:x="893" fg:w="5"/><text x="71.8619%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="71.6119%" y="661" width="0.4010%" height="15" fill="rgb(216,50,30)" fg:x="893" fg:w="5"/><text x="71.8619%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="71.8524%" y="645" width="0.1604%" height="15" fill="rgb(217,20,39)" fg:x="896" fg:w="2"/><text x="72.1024%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="71.8524%" y="629" width="0.1604%" height="15" fill="rgb(232,130,46)" fg:x="896" fg:w="2"/><text x="72.1024%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.9326%" y="613" width="0.0802%" height="15" fill="rgb(233,141,43)" fg:x="897" fg:w="1"/><text x="72.1826%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9326%" y="597" width="0.0802%" height="15" fill="rgb(240,64,34)" fg:x="897" fg:w="1"/><text x="72.1826%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="71.9326%" y="581" width="0.0802%" height="15" fill="rgb(230,28,31)" fg:x="897" fg:w="1"/><text x="72.1826%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9326%" y="565" width="0.0802%" height="15" fill="rgb(223,56,30)" fg:x="897" fg:w="1"/><text x="72.1826%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.9326%" y="549" width="0.0802%" height="15" fill="rgb(248,134,16)" fg:x="897" fg:w="1"/><text x="72.1826%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.9326%" y="533" width="0.0802%" height="15" fill="rgb(206,202,4)" fg:x="897" fg:w="1"/><text x="72.1826%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.0128%" y="693" width="0.0802%" height="15" fill="rgb(219,116,48)" fg:x="898" fg:w="1"/><text x="72.2628%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.0128%" y="677" width="0.0802%" height="15" fill="rgb(224,122,46)" fg:x="898" fg:w="1"/><text x="72.2628%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0128%" y="661" width="0.0802%" height="15" fill="rgb(219,114,47)" fg:x="898" fg:w="1"/><text x="72.2628%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0128%" y="645" width="0.0802%" height="15" fill="rgb(244,60,44)" fg:x="898" fg:w="1"/><text x="72.2628%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.0128%" y="629" width="0.0802%" height="15" fill="rgb(243,226,25)" fg:x="898" fg:w="1"/><text x="72.2628%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0128%" y="613" width="0.0802%" height="15" fill="rgb(243,101,52)" fg:x="898" fg:w="1"/><text x="72.2628%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.0128%" y="597" width="0.0802%" height="15" fill="rgb(207,69,25)" fg:x="898" fg:w="1"/><text x="72.2628%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.0128%" y="581" width="0.0802%" height="15" fill="rgb(222,204,53)" fg:x="898" fg:w="1"/><text x="72.2628%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="72.0930%" y="693" width="0.0802%" height="15" fill="rgb(234,84,49)" fg:x="899" fg:w="1"/><text x="72.3430%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="72.0930%" y="677" width="0.0802%" height="15" fill="rgb(233,77,41)" fg:x="899" fg:w="1"/><text x="72.3430%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="72.0930%" y="661" width="0.0802%" height="15" fill="rgb(221,200,42)" fg:x="899" fg:w="1"/><text x="72.3430%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.0930%" y="645" width="0.0802%" height="15" fill="rgb(221,29,35)" fg:x="899" fg:w="1"/><text x="72.3430%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.0930%" y="629" width="0.0802%" height="15" fill="rgb(221,71,22)" fg:x="899" fg:w="1"/><text x="72.3430%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.0930%" y="613" width="0.0802%" height="15" fill="rgb(216,162,23)" fg:x="899" fg:w="1"/><text x="72.3430%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.0930%" y="597" width="0.0802%" height="15" fill="rgb(248,32,48)" fg:x="899" fg:w="1"/><text x="72.3430%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.1732%" y="693" width="0.0802%" height="15" fill="rgb(241,156,30)" fg:x="900" fg:w="1"/><text x="72.4232%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.1732%" y="677" width="0.0802%" height="15" fill="rgb(237,196,46)" fg:x="900" fg:w="1"/><text x="72.4232%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.1732%" y="661" width="0.0802%" height="15" fill="rgb(216,2,6)" fg:x="900" fg:w="1"/><text x="72.4232%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.1732%" y="645" width="0.0802%" height="15" fill="rgb(214,47,16)" fg:x="900" fg:w="1"/><text x="72.4232%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1732%" y="629" width="0.0802%" height="15" fill="rgb(240,123,13)" fg:x="900" fg:w="1"/><text x="72.4232%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="72.1732%" y="613" width="0.0802%" height="15" fill="rgb(206,47,48)" fg:x="900" fg:w="1"/><text x="72.4232%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1732%" y="597" width="0.0802%" height="15" fill="rgb(252,88,27)" fg:x="900" fg:w="1"/><text x="72.4232%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.1732%" y="581" width="0.0802%" height="15" fill="rgb(218,105,30)" fg:x="900" fg:w="1"/><text x="72.4232%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.1732%" y="565" width="0.0802%" height="15" fill="rgb(227,52,46)" fg:x="900" fg:w="1"/><text x="72.4232%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.1732%" y="549" width="0.0802%" height="15" fill="rgb(222,190,21)" fg:x="900" fg:w="1"/><text x="72.4232%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="72.0128%" y="725" width="0.3208%" height="15" fill="rgb(205,86,20)" fg:x="898" fg:w="4"/><text x="72.2628%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="72.0128%" y="709" width="0.3208%" height="15" fill="rgb(233,45,1)" fg:x="898" fg:w="4"/><text x="72.2628%" y="719.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="72.2534%" y="693" width="0.0802%" height="15" fill="rgb(208,39,6)" fg:x="901" fg:w="1"/><text x="72.5034%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.2534%" y="677" width="0.0802%" height="15" fill="rgb(211,178,22)" fg:x="901" fg:w="1"/><text x="72.5034%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.2534%" y="661" width="0.0802%" height="15" fill="rgb(227,112,23)" fg:x="901" fg:w="1"/><text x="72.5034%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="72.3336%" y="709" width="0.0802%" height="15" fill="rgb(214,41,4)" fg:x="902" fg:w="1"/><text x="72.5836%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="72.3336%" y="693" width="0.0802%" height="15" fill="rgb(219,144,46)" fg:x="902" fg:w="1"/><text x="72.5836%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="72.4940%" y="645" width="0.0802%" height="15" fill="rgb(253,176,50)" fg:x="904" fg:w="1"/><text x="72.7440%" y="655.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="72.5742%" y="613" width="0.0802%" height="15" fill="rgb(206,123,1)" fg:x="905" fg:w="1"/><text x="72.8242%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5742%" y="597" width="0.0802%" height="15" fill="rgb(250,111,32)" fg:x="905" fg:w="1"/><text x="72.8242%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="72.5742%" y="581" width="0.0802%" height="15" fill="rgb(229,17,49)" fg:x="905" fg:w="1"/><text x="72.8242%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="72.5742%" y="565" width="0.0802%" height="15" fill="rgb(250,123,19)" fg:x="905" fg:w="1"/><text x="72.8242%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="72.5742%" y="549" width="0.0802%" height="15" fill="rgb(220,124,20)" fg:x="905" fg:w="1"/><text x="72.8242%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.5742%" y="533" width="0.0802%" height="15" fill="rgb(242,85,25)" fg:x="905" fg:w="1"/><text x="72.8242%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5742%" y="517" width="0.0802%" height="15" fill="rgb(245,217,7)" fg:x="905" fg:w="1"/><text x="72.8242%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.5742%" y="501" width="0.0802%" height="15" fill="rgb(242,50,25)" fg:x="905" fg:w="1"/><text x="72.8242%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5742%" y="485" width="0.0802%" height="15" fill="rgb(251,210,24)" fg:x="905" fg:w="1"/><text x="72.8242%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="72.5742%" y="469" width="0.0802%" height="15" fill="rgb(238,24,8)" fg:x="905" fg:w="1"/><text x="72.8242%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="72.5742%" y="453" width="0.0802%" height="15" fill="rgb(211,96,19)" fg:x="905" fg:w="1"/><text x="72.8242%" y="463.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="72.5742%" y="645" width="0.1604%" height="15" fill="rgb(222,186,12)" fg:x="905" fg:w="2"/><text x="72.8242%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="72.5742%" y="629" width="0.1604%" height="15" fill="rgb(212,70,49)" fg:x="905" fg:w="2"/><text x="72.8242%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="72.6544%" y="613" width="0.0802%" height="15" fill="rgb(238,69,49)" fg:x="906" fg:w="1"/><text x="72.9044%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="72.6544%" y="597" width="0.0802%" height="15" fill="rgb(225,13,3)" fg:x="906" fg:w="1"/><text x="72.9044%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.6544%" y="581" width="0.0802%" height="15" fill="rgb(229,188,14)" fg:x="906" fg:w="1"/><text x="72.9044%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.6544%" y="565" width="0.0802%" height="15" fill="rgb(218,58,16)" fg:x="906" fg:w="1"/><text x="72.9044%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.6544%" y="549" width="0.0802%" height="15" fill="rgb(206,213,49)" fg:x="906" fg:w="1"/><text x="72.9044%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6544%" y="533" width="0.0802%" height="15" fill="rgb(225,152,48)" fg:x="906" fg:w="1"/><text x="72.9044%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.6544%" y="517" width="0.0802%" height="15" fill="rgb(216,103,42)" fg:x="906" fg:w="1"/><text x="72.9044%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.6544%" y="501" width="0.0802%" height="15" fill="rgb(212,214,39)" fg:x="906" fg:w="1"/><text x="72.9044%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.6544%" y="485" width="0.0802%" height="15" fill="rgb(249,52,41)" fg:x="906" fg:w="1"/><text x="72.9044%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.6544%" y="469" width="0.0802%" height="15" fill="rgb(212,173,53)" fg:x="906" fg:w="1"/><text x="72.9044%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6544%" y="453" width="0.0802%" height="15" fill="rgb(232,222,21)" fg:x="906" fg:w="1"/><text x="72.9044%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.6544%" y="437" width="0.0802%" height="15" fill="rgb(206,228,31)" fg:x="906" fg:w="1"/><text x="72.9044%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.6544%" y="421" width="0.0802%" height="15" fill="rgb(231,121,16)" fg:x="906" fg:w="1"/><text x="72.9044%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.6544%" y="405" width="0.0802%" height="15" fill="rgb(241,3,23)" fg:x="906" fg:w="1"/><text x="72.9044%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.6544%" y="389" width="0.0802%" height="15" fill="rgb(220,68,37)" fg:x="906" fg:w="1"/><text x="72.9044%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.6544%" y="373" width="0.0802%" height="15" fill="rgb(212,23,49)" fg:x="906" fg:w="1"/><text x="72.9044%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.6544%" y="357" width="0.0802%" height="15" fill="rgb(231,38,8)" fg:x="906" fg:w="1"/><text x="72.9044%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.40%)</title><rect x="72.4138%" y="709" width="0.4010%" height="15" fill="rgb(222,137,29)" fg:x="903" fg:w="5"/><text x="72.6638%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="72.4138%" y="693" width="0.4010%" height="15" fill="rgb(239,8,6)" fg:x="903" fg:w="5"/><text x="72.6638%" y="703.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="72.4138%" y="677" width="0.4010%" height="15" fill="rgb(224,142,47)" fg:x="903" fg:w="5"/><text x="72.6638%" y="687.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.32%)</title><rect x="72.4940%" y="661" width="0.3208%" height="15" fill="rgb(226,67,29)" fg:x="904" fg:w="4"/><text x="72.7440%" y="671.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="72.7346%" y="645" width="0.0802%" height="15" fill="rgb(212,144,29)" fg:x="907" fg:w="1"/><text x="72.9846%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="72.7346%" y="629" width="0.0802%" height="15" fill="rgb(252,2,51)" fg:x="907" fg:w="1"/><text x="72.9846%" y="639.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="72.7346%" y="613" width="0.0802%" height="15" fill="rgb(246,103,52)" fg:x="907" fg:w="1"/><text x="72.9846%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="72.7346%" y="597" width="0.0802%" height="15" fill="rgb(229,229,35)" fg:x="907" fg:w="1"/><text x="72.9846%" y="607.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.7346%" y="581" width="0.0802%" height="15" fill="rgb(209,83,15)" fg:x="907" fg:w="1"/><text x="72.9846%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7346%" y="565" width="0.0802%" height="15" fill="rgb(218,54,16)" fg:x="907" fg:w="1"/><text x="72.9846%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.7346%" y="549" width="0.0802%" height="15" fill="rgb(205,2,26)" fg:x="907" fg:w="1"/><text x="72.9846%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="72.8148%" y="693" width="0.0802%" height="15" fill="rgb(248,180,0)" fg:x="908" fg:w="1"/><text x="73.0648%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8148%" y="677" width="0.0802%" height="15" fill="rgb(231,136,16)" fg:x="908" fg:w="1"/><text x="73.0648%" y="687.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="72.8949%" y="677" width="0.0802%" height="15" fill="rgb(215,90,4)" fg:x="909" fg:w="1"/><text x="73.1449%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.9751%" y="565" width="0.0802%" height="15" fill="rgb(251,131,3)" fg:x="910" fg:w="1"/><text x="73.2251%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.9751%" y="549" width="0.0802%" height="15" fill="rgb(244,47,21)" fg:x="910" fg:w="1"/><text x="73.2251%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.0553%" y="517" width="0.0802%" height="15" fill="rgb(231,115,9)" fg:x="911" fg:w="1"/><text x="73.3053%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0553%" y="501" width="0.0802%" height="15" fill="rgb(241,119,20)" fg:x="911" fg:w="1"/><text x="73.3053%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.0553%" y="485" width="0.0802%" height="15" fill="rgb(224,99,0)" fg:x="911" fg:w="1"/><text x="73.3053%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.0553%" y="469" width="0.0802%" height="15" fill="rgb(219,213,18)" fg:x="911" fg:w="1"/><text x="73.3053%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="73.0553%" y="549" width="0.1604%" height="15" fill="rgb(209,71,34)" fg:x="911" fg:w="2"/><text x="73.3053%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.0553%" y="533" width="0.1604%" height="15" fill="rgb(245,203,20)" fg:x="911" fg:w="2"/><text x="73.3053%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="73.1355%" y="517" width="0.0802%" height="15" fill="rgb(221,44,20)" fg:x="912" fg:w="1"/><text x="73.3855%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="73.2157%" y="549" width="0.2406%" height="15" fill="rgb(229,97,0)" fg:x="913" fg:w="3"/><text x="73.4657%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="73.2157%" y="533" width="0.2406%" height="15" fill="rgb(206,56,49)" fg:x="913" fg:w="3"/><text x="73.4657%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="73.2157%" y="517" width="0.2406%" height="15" fill="rgb(208,216,41)" fg:x="913" fg:w="3"/><text x="73.4657%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="73.2959%" y="501" width="0.1604%" height="15" fill="rgb(231,31,6)" fg:x="914" fg:w="2"/><text x="73.5459%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.3761%" y="485" width="0.0802%" height="15" fill="rgb(239,88,23)" fg:x="915" fg:w="1"/><text x="73.6261%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.3761%" y="469" width="0.0802%" height="15" fill="rgb(227,111,45)" fg:x="915" fg:w="1"/><text x="73.6261%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.3761%" y="453" width="0.0802%" height="15" fill="rgb(207,167,18)" fg:x="915" fg:w="1"/><text x="73.6261%" y="463.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.5365%" y="533" width="0.0802%" height="15" fill="rgb(253,127,17)" fg:x="917" fg:w="1"/><text x="73.7865%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.5365%" y="517" width="0.0802%" height="15" fill="rgb(211,229,9)" fg:x="917" fg:w="1"/><text x="73.7865%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="73.6167%" y="517" width="0.0802%" height="15" fill="rgb(249,25,14)" fg:x="918" fg:w="1"/><text x="73.8667%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6167%" y="501" width="0.0802%" height="15" fill="rgb(237,177,4)" fg:x="918" fg:w="1"/><text x="73.8667%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6167%" y="485" width="0.0802%" height="15" fill="rgb(248,163,50)" fg:x="918" fg:w="1"/><text x="73.8667%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.6167%" y="469" width="0.0802%" height="15" fill="rgb(246,67,42)" fg:x="918" fg:w="1"/><text x="73.8667%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="73.0553%" y="565" width="0.7217%" height="15" fill="rgb(228,136,45)" fg:x="911" fg:w="9"/><text x="73.3053%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="73.4563%" y="549" width="0.3208%" height="15" fill="rgb(218,93,4)" fg:x="916" fg:w="4"/><text x="73.7063%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="73.6167%" y="533" width="0.1604%" height="15" fill="rgb(209,82,29)" fg:x="918" fg:w="2"/><text x="73.8667%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.6969%" y="517" width="0.0802%" height="15" fill="rgb(213,219,38)" fg:x="919" fg:w="1"/><text x="73.9469%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.6969%" y="501" width="0.0802%" height="15" fill="rgb(233,212,17)" fg:x="919" fg:w="1"/><text x="73.9469%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="73.6969%" y="485" width="0.0802%" height="15" fill="rgb(225,65,3)" fg:x="919" fg:w="1"/><text x="73.9469%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="72.9751%" y="597" width="0.8821%" height="15" fill="rgb(226,25,1)" fg:x="910" fg:w="11"/><text x="73.2251%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="72.9751%" y="581" width="0.8821%" height="15" fill="rgb(229,83,27)" fg:x="910" fg:w="11"/><text x="73.2251%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.7771%" y="565" width="0.0802%" height="15" fill="rgb(245,80,47)" fg:x="920" fg:w="1"/><text x="74.0271%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="73.7771%" y="549" width="0.0802%" height="15" fill="rgb(213,79,27)" fg:x="920" fg:w="1"/><text x="74.0271%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.7771%" y="533" width="0.0802%" height="15" fill="rgb(232,38,28)" fg:x="920" fg:w="1"/><text x="74.0271%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="73.7771%" y="517" width="0.0802%" height="15" fill="rgb(253,63,39)" fg:x="920" fg:w="1"/><text x="74.0271%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="73.7771%" y="501" width="0.0802%" height="15" fill="rgb(222,204,17)" fg:x="920" fg:w="1"/><text x="74.0271%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="73.7771%" y="485" width="0.0802%" height="15" fill="rgb(254,135,49)" fg:x="920" fg:w="1"/><text x="74.0271%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8573%" y="533" width="0.0802%" height="15" fill="rgb(226,203,24)" fg:x="921" fg:w="1"/><text x="74.1073%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.9374%" y="533" width="0.0802%" height="15" fill="rgb(225,2,17)" fg:x="922" fg:w="1"/><text x="74.1874%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.9374%" y="517" width="0.0802%" height="15" fill="rgb(234,135,43)" fg:x="922" fg:w="1"/><text x="74.1874%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.0176%" y="517" width="0.0802%" height="15" fill="rgb(224,14,46)" fg:x="923" fg:w="1"/><text x="74.2676%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0176%" y="501" width="0.0802%" height="15" fill="rgb(206,42,0)" fg:x="923" fg:w="1"/><text x="74.2676%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.8573%" y="597" width="0.3208%" height="15" fill="rgb(244,38,23)" fg:x="921" fg:w="4"/><text x="74.1073%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="73.8573%" y="581" width="0.3208%" height="15" fill="rgb(230,25,21)" fg:x="921" fg:w="4"/><text x="74.1073%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.8573%" y="565" width="0.3208%" height="15" fill="rgb(252,217,28)" fg:x="921" fg:w="4"/><text x="74.1073%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="73.8573%" y="549" width="0.3208%" height="15" fill="rgb(251,4,49)" fg:x="921" fg:w="4"/><text x="74.1073%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="74.0176%" y="533" width="0.1604%" height="15" fill="rgb(217,126,31)" fg:x="923" fg:w="2"/><text x="74.2676%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="74.0978%" y="517" width="0.0802%" height="15" fill="rgb(242,181,33)" fg:x="924" fg:w="1"/><text x="74.3478%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="74.0978%" y="501" width="0.0802%" height="15" fill="rgb(241,108,6)" fg:x="924" fg:w="1"/><text x="74.3478%" y="511.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="74.1780%" y="581" width="0.0802%" height="15" fill="rgb(238,87,39)" fg:x="925" fg:w="1"/><text x="74.4280%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.1780%" y="565" width="0.0802%" height="15" fill="rgb(244,101,49)" fg:x="925" fg:w="1"/><text x="74.4280%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2582%" y="549" width="0.0802%" height="15" fill="rgb(211,43,42)" fg:x="926" fg:w="1"/><text x="74.5082%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2582%" y="533" width="0.0802%" height="15" fill="rgb(210,93,2)" fg:x="926" fg:w="1"/><text x="74.5082%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="74.2582%" y="517" width="0.0802%" height="15" fill="rgb(242,149,32)" fg:x="926" fg:w="1"/><text x="74.5082%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="74.3384%" y="501" width="0.2406%" height="15" fill="rgb(228,1,6)" fg:x="927" fg:w="3"/><text x="74.5884%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.4988%" y="485" width="0.0802%" height="15" fill="rgb(221,0,20)" fg:x="929" fg:w="1"/><text x="74.7488%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4988%" y="469" width="0.0802%" height="15" fill="rgb(230,39,32)" fg:x="929" fg:w="1"/><text x="74.7488%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="74.8196%" y="453" width="0.2406%" height="15" fill="rgb(240,89,38)" fg:x="933" fg:w="3"/><text x="75.0696%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.8998%" y="437" width="0.1604%" height="15" fill="rgb(208,221,23)" fg:x="934" fg:w="2"/><text x="75.1498%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="74.8998%" y="421" width="0.1604%" height="15" fill="rgb(220,145,29)" fg:x="934" fg:w="2"/><text x="75.1498%" y="431.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.8998%" y="405" width="0.1604%" height="15" fill="rgb(219,146,23)" fg:x="934" fg:w="2"/><text x="75.1498%" y="415.50"></text></g><g><title>engine::session::Session::flush (29 samples, 2.33%)</title><rect x="72.8148%" y="709" width="2.3256%" height="15" fill="rgb(244,114,49)" fg:x="908" fg:w="29"/><text x="73.0648%" y="719.50">e..</text></g><g><title>engine::session::Session::save_changes (28 samples, 2.25%)</title><rect x="72.8949%" y="693" width="2.2454%" height="15" fill="rgb(221,17,10)" fg:x="909" fg:w="28"/><text x="73.1449%" y="703.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.17%)</title><rect x="72.9751%" y="677" width="2.1652%" height="15" fill="rgb(228,133,21)" fg:x="910" fg:w="27"/><text x="73.2251%" y="687.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.17%)</title><rect x="72.9751%" y="661" width="2.1652%" height="15" fill="rgb(218,81,30)" fg:x="910" fg:w="27"/><text x="73.2251%" y="671.50">e..</text></g><g><title>core::iter::adapters::try_process (27 samples, 2.17%)</title><rect x="72.9751%" y="645" width="2.1652%" height="15" fill="rgb(240,29,36)" fg:x="910" fg:w="27"/><text x="73.2251%" y="655.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27 samples, 2.17%)</title><rect x="72.9751%" y="629" width="2.1652%" height="15" fill="rgb(246,0,36)" fg:x="910" fg:w="27"/><text x="73.2251%" y="639.50">&lt;..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.17%)</title><rect x="72.9751%" y="613" width="2.1652%" height="15" fill="rgb(217,79,8)" fg:x="910" fg:w="27"/><text x="73.2251%" y="623.50">e..</text></g><g><title>kernel::model::any_entity_changes (12 samples, 0.96%)</title><rect x="74.1780%" y="597" width="0.9623%" height="15" fill="rgb(229,124,44)" fg:x="925" fg:w="12"/><text x="74.4280%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.88%)</title><rect x="74.2582%" y="581" width="0.8821%" height="15" fill="rgb(210,187,22)" fg:x="926" fg:w="11"/><text x="74.5082%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.88%)</title><rect x="74.2582%" y="565" width="0.8821%" height="15" fill="rgb(212,115,40)" fg:x="926" fg:w="11"/><text x="74.5082%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.80%)</title><rect x="74.3384%" y="549" width="0.8019%" height="15" fill="rgb(210,2,54)" fg:x="927" fg:w="10"/><text x="74.5884%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.80%)</title><rect x="74.3384%" y="533" width="0.8019%" height="15" fill="rgb(227,168,43)" fg:x="927" fg:w="10"/><text x="74.5884%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="74.3384%" y="517" width="0.8019%" height="15" fill="rgb(249,92,8)" fg:x="927" fg:w="10"/><text x="74.5884%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="74.5790%" y="501" width="0.5613%" height="15" fill="rgb(239,111,35)" fg:x="930" fg:w="7"/><text x="74.8290%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="74.5790%" y="485" width="0.5613%" height="15" fill="rgb(230,126,13)" fg:x="930" fg:w="7"/><text x="74.8290%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="74.6592%" y="469" width="0.4812%" height="15" fill="rgb(243,116,33)" fg:x="931" fg:w="6"/><text x="74.9092%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.0601%" y="453" width="0.0802%" height="15" fill="rgb(246,103,21)" fg:x="936" fg:w="1"/><text x="75.3101%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="75.1403%" y="677" width="0.1604%" height="15" fill="rgb(237,53,26)" fg:x="937" fg:w="2"/><text x="75.3903%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="75.1403%" y="661" width="0.1604%" height="15" fill="rgb(213,121,15)" fg:x="937" fg:w="2"/><text x="75.3903%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="75.1403%" y="645" width="0.1604%" height="15" fill="rgb(251,83,35)" fg:x="937" fg:w="2"/><text x="75.3903%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.1403%" y="629" width="0.1604%" height="15" fill="rgb(222,79,8)" fg:x="937" fg:w="2"/><text x="75.3903%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2205%" y="613" width="0.0802%" height="15" fill="rgb(217,74,36)" fg:x="938" fg:w="1"/><text x="75.4705%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2205%" y="597" width="0.0802%" height="15" fill="rgb(221,14,30)" fg:x="938" fg:w="1"/><text x="75.4705%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2205%" y="581" width="0.0802%" height="15" fill="rgb(216,221,5)" fg:x="938" fg:w="1"/><text x="75.4705%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2205%" y="565" width="0.0802%" height="15" fill="rgb(236,118,16)" fg:x="938" fg:w="1"/><text x="75.4705%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2205%" y="549" width="0.0802%" height="15" fill="rgb(243,91,43)" fg:x="938" fg:w="1"/><text x="75.4705%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="75.2205%" y="533" width="0.0802%" height="15" fill="rgb(231,110,7)" fg:x="938" fg:w="1"/><text x="75.4705%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="75.2205%" y="517" width="0.0802%" height="15" fill="rgb(217,80,6)" fg:x="938" fg:w="1"/><text x="75.4705%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="75.2205%" y="501" width="0.0802%" height="15" fill="rgb(251,116,7)" fg:x="938" fg:w="1"/><text x="75.4705%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2205%" y="485" width="0.0802%" height="15" fill="rgb(236,70,22)" fg:x="938" fg:w="1"/><text x="75.4705%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.2205%" y="469" width="0.0802%" height="15" fill="rgb(245,13,10)" fg:x="938" fg:w="1"/><text x="75.4705%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.2205%" y="453" width="0.0802%" height="15" fill="rgb(233,146,34)" fg:x="938" fg:w="1"/><text x="75.4705%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="75.2205%" y="437" width="0.0802%" height="15" fill="rgb(241,196,34)" fg:x="938" fg:w="1"/><text x="75.4705%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="75.2205%" y="421" width="0.0802%" height="15" fill="rgb(207,150,20)" fg:x="938" fg:w="1"/><text x="75.4705%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="75.2205%" y="405" width="0.0802%" height="15" fill="rgb(251,27,52)" fg:x="938" fg:w="1"/><text x="75.4705%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2205%" y="389" width="0.0802%" height="15" fill="rgb(221,76,2)" fg:x="938" fg:w="1"/><text x="75.4705%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.3007%" y="629" width="0.0802%" height="15" fill="rgb(242,94,41)" fg:x="939" fg:w="1"/><text x="75.5507%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.3007%" y="613" width="0.0802%" height="15" fill="rgb(245,9,8)" fg:x="939" fg:w="1"/><text x="75.5507%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.3007%" y="597" width="0.0802%" height="15" fill="rgb(236,139,26)" fg:x="939" fg:w="1"/><text x="75.5507%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3007%" y="581" width="0.0802%" height="15" fill="rgb(249,11,18)" fg:x="939" fg:w="1"/><text x="75.5507%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.3007%" y="565" width="0.0802%" height="15" fill="rgb(206,175,35)" fg:x="939" fg:w="1"/><text x="75.5507%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.3007%" y="549" width="0.0802%" height="15" fill="rgb(231,3,46)" fg:x="939" fg:w="1"/><text x="75.5507%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.4611%" y="597" width="0.0802%" height="15" fill="rgb(243,27,8)" fg:x="941" fg:w="1"/><text x="75.7111%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.4611%" y="581" width="0.0802%" height="15" fill="rgb(223,53,13)" fg:x="941" fg:w="1"/><text x="75.7111%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.4611%" y="565" width="0.0802%" height="15" fill="rgb(248,68,15)" fg:x="941" fg:w="1"/><text x="75.7111%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="75.3007%" y="677" width="0.3208%" height="15" fill="rgb(216,61,26)" fg:x="939" fg:w="4"/><text x="75.5507%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="75.3007%" y="661" width="0.3208%" height="15" fill="rgb(213,201,24)" fg:x="939" fg:w="4"/><text x="75.5507%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="75.3007%" y="645" width="0.3208%" height="15" fill="rgb(214,20,17)" fg:x="939" fg:w="4"/><text x="75.5507%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="75.3809%" y="629" width="0.2406%" height="15" fill="rgb(206,21,46)" fg:x="940" fg:w="3"/><text x="75.6309%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.4611%" y="613" width="0.1604%" height="15" fill="rgb(234,222,24)" fg:x="941" fg:w="2"/><text x="75.7111%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5413%" y="597" width="0.0802%" height="15" fill="rgb(221,25,26)" fg:x="942" fg:w="1"/><text x="75.7913%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5413%" y="581" width="0.0802%" height="15" fill="rgb(241,148,26)" fg:x="942" fg:w="1"/><text x="75.7913%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.5413%" y="565" width="0.0802%" height="15" fill="rgb(248,119,35)" fg:x="942" fg:w="1"/><text x="75.7913%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5413%" y="549" width="0.0802%" height="15" fill="rgb(239,126,23)" fg:x="942" fg:w="1"/><text x="75.7913%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5413%" y="533" width="0.0802%" height="15" fill="rgb(247,120,25)" fg:x="942" fg:w="1"/><text x="75.7913%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5413%" y="517" width="0.0802%" height="15" fill="rgb(220,93,32)" fg:x="942" fg:w="1"/><text x="75.7913%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.56%)</title><rect x="75.1403%" y="709" width="0.5613%" height="15" fill="rgb(236,46,26)" fg:x="937" fg:w="7"/><text x="75.3903%" y="719.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.56%)</title><rect x="75.1403%" y="693" width="0.5613%" height="15" fill="rgb(229,20,45)" fg:x="937" fg:w="7"/><text x="75.3903%" y="703.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="75.6215%" y="677" width="0.0802%" height="15" fill="rgb(225,168,41)" fg:x="943" fg:w="1"/><text x="75.8715%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="75.6215%" y="661" width="0.0802%" height="15" fill="rgb(253,123,20)" fg:x="943" fg:w="1"/><text x="75.8715%" y="671.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6215%" y="645" width="0.0802%" height="15" fill="rgb(244,17,29)" fg:x="943" fg:w="1"/><text x="75.8715%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6215%" y="629" width="0.0802%" height="15" fill="rgb(242,196,24)" fg:x="943" fg:w="1"/><text x="75.8715%" y="639.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6215%" y="613" width="0.0802%" height="15" fill="rgb(210,113,45)" fg:x="943" fg:w="1"/><text x="75.8715%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6215%" y="597" width="0.0802%" height="15" fill="rgb(205,129,3)" fg:x="943" fg:w="1"/><text x="75.8715%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6215%" y="581" width="0.0802%" height="15" fill="rgb(232,74,10)" fg:x="943" fg:w="1"/><text x="75.8715%" y="591.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="75.7017%" y="709" width="0.0802%" height="15" fill="rgb(251,63,43)" fg:x="944" fg:w="1"/><text x="75.9517%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="75.7017%" y="693" width="0.0802%" height="15" fill="rgb(228,215,15)" fg:x="944" fg:w="1"/><text x="75.9517%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.7017%" y="677" width="0.0802%" height="15" fill="rgb(233,179,38)" fg:x="944" fg:w="1"/><text x="75.9517%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.7017%" y="661" width="0.0802%" height="15" fill="rgb(227,187,9)" fg:x="944" fg:w="1"/><text x="75.9517%" y="671.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="75.7819%" y="709" width="0.0802%" height="15" fill="rgb(231,89,27)" fg:x="945" fg:w="1"/><text x="76.0319%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="75.7819%" y="693" width="0.0802%" height="15" fill="rgb(225,117,1)" fg:x="945" fg:w="1"/><text x="76.0319%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="75.7819%" y="677" width="0.0802%" height="15" fill="rgb(239,120,49)" fg:x="945" fg:w="1"/><text x="76.0319%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.8621%" y="661" width="0.0802%" height="15" fill="rgb(236,137,37)" fg:x="946" fg:w="1"/><text x="76.1121%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.8621%" y="645" width="0.0802%" height="15" fill="rgb(239,73,42)" fg:x="946" fg:w="1"/><text x="76.1121%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8621%" y="629" width="0.0802%" height="15" fill="rgb(207,169,6)" fg:x="946" fg:w="1"/><text x="76.1121%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8621%" y="613" width="0.0802%" height="15" fill="rgb(228,171,10)" fg:x="946" fg:w="1"/><text x="76.1121%" y="623.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="75.8621%" y="597" width="0.0802%" height="15" fill="rgb(217,228,47)" fg:x="946" fg:w="1"/><text x="76.1121%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="75.9423%" y="645" width="0.0802%" height="15" fill="rgb(227,116,17)" fg:x="947" fg:w="1"/><text x="76.1923%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="75.9423%" y="629" width="0.0802%" height="15" fill="rgb(245,128,36)" fg:x="947" fg:w="1"/><text x="76.1923%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.9423%" y="613" width="0.0802%" height="15" fill="rgb(221,139,3)" fg:x="947" fg:w="1"/><text x="76.1923%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.9423%" y="597" width="0.0802%" height="15" fill="rgb(207,59,54)" fg:x="947" fg:w="1"/><text x="76.1923%" y="607.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="75.9423%" y="661" width="0.1604%" height="15" fill="rgb(231,129,12)" fg:x="947" fg:w="2"/><text x="76.1923%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.0225%" y="645" width="0.0802%" height="15" fill="rgb(235,49,17)" fg:x="948" fg:w="1"/><text x="76.2725%" y="655.50"></text></g><g><title>&lt;engine::identifiers::model::Identifiers as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="76.0225%" y="629" width="0.0802%" height="15" fill="rgb(229,175,11)" fg:x="948" fg:w="1"/><text x="76.2725%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0225%" y="613" width="0.0802%" height="15" fill="rgb(206,187,30)" fg:x="948" fg:w="1"/><text x="76.2725%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="76.0225%" y="597" width="0.0802%" height="15" fill="rgb(214,39,19)" fg:x="948" fg:w="1"/><text x="76.2725%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="76.0225%" y="581" width="0.0802%" height="15" fill="rgb(243,92,46)" fg:x="948" fg:w="1"/><text x="76.2725%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="76.0225%" y="565" width="0.0802%" height="15" fill="rgb(240,125,36)" fg:x="948" fg:w="1"/><text x="76.2725%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="76.0225%" y="549" width="0.0802%" height="15" fill="rgb(217,193,45)" fg:x="948" fg:w="1"/><text x="76.2725%" y="559.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="76.1026%" y="613" width="0.0802%" height="15" fill="rgb(230,127,16)" fg:x="949" fg:w="1"/><text x="76.3526%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="76.1026%" y="597" width="0.0802%" height="15" fill="rgb(208,161,0)" fg:x="949" fg:w="1"/><text x="76.3526%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.1026%" y="581" width="0.0802%" height="15" fill="rgb(251,69,39)" fg:x="949" fg:w="1"/><text x="76.3526%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.1026%" y="565" width="0.0802%" height="15" fill="rgb(229,86,22)" fg:x="949" fg:w="1"/><text x="76.3526%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.1828%" y="565" width="0.0802%" height="15" fill="rgb(223,67,43)" fg:x="950" fg:w="1"/><text x="76.4328%" y="575.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="76.1026%" y="661" width="0.2406%" height="15" fill="rgb(254,80,31)" fg:x="949" fg:w="3"/><text x="76.3526%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="76.1026%" y="645" width="0.2406%" height="15" fill="rgb(225,149,52)" fg:x="949" fg:w="3"/><text x="76.3526%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="76.1026%" y="629" width="0.2406%" height="15" fill="rgb(214,169,18)" fg:x="949" fg:w="3"/><text x="76.3526%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.1828%" y="613" width="0.1604%" height="15" fill="rgb(236,224,43)" fg:x="950" fg:w="2"/><text x="76.4328%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1828%" y="597" width="0.1604%" height="15" fill="rgb(251,125,34)" fg:x="950" fg:w="2"/><text x="76.4328%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1828%" y="581" width="0.1604%" height="15" fill="rgb(224,39,44)" fg:x="950" fg:w="2"/><text x="76.4328%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.2630%" y="565" width="0.0802%" height="15" fill="rgb(206,111,46)" fg:x="951" fg:w="1"/><text x="76.5130%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2630%" y="549" width="0.0802%" height="15" fill="rgb(227,147,50)" fg:x="951" fg:w="1"/><text x="76.5130%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3432%" y="581" width="0.0802%" height="15" fill="rgb(239,144,36)" fg:x="952" fg:w="1"/><text x="76.5932%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.3432%" y="565" width="0.0802%" height="15" fill="rgb(216,17,19)" fg:x="952" fg:w="1"/><text x="76.5932%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.3432%" y="549" width="0.0802%" height="15" fill="rgb(211,192,29)" fg:x="952" fg:w="1"/><text x="76.5932%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.3432%" y="533" width="0.0802%" height="15" fill="rgb(238,195,20)" fg:x="952" fg:w="1"/><text x="76.5932%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.3432%" y="517" width="0.0802%" height="15" fill="rgb(213,210,42)" fg:x="952" fg:w="1"/><text x="76.5932%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3432%" y="501" width="0.0802%" height="15" fill="rgb(244,4,49)" fg:x="952" fg:w="1"/><text x="76.5932%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.3432%" y="485" width="0.0802%" height="15" fill="rgb(254,106,42)" fg:x="952" fg:w="1"/><text x="76.5932%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.3432%" y="469" width="0.0802%" height="15" fill="rgb(222,182,12)" fg:x="952" fg:w="1"/><text x="76.5932%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.3432%" y="453" width="0.0802%" height="15" fill="rgb(228,160,15)" fg:x="952" fg:w="1"/><text x="76.5932%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.3432%" y="437" width="0.0802%" height="15" fill="rgb(243,149,43)" fg:x="952" fg:w="1"/><text x="76.5932%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.3432%" y="421" width="0.0802%" height="15" fill="rgb(245,150,32)" fg:x="952" fg:w="1"/><text x="76.5932%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3432%" y="405" width="0.0802%" height="15" fill="rgb(205,43,19)" fg:x="952" fg:w="1"/><text x="76.5932%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.3432%" y="661" width="0.1604%" height="15" fill="rgb(249,189,35)" fg:x="952" fg:w="2"/><text x="76.5932%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.3432%" y="645" width="0.1604%" height="15" fill="rgb(223,9,0)" fg:x="952" fg:w="2"/><text x="76.5932%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.3432%" y="629" width="0.1604%" height="15" fill="rgb(213,142,45)" fg:x="952" fg:w="2"/><text x="76.5932%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3432%" y="613" width="0.1604%" height="15" fill="rgb(208,148,2)" fg:x="952" fg:w="2"/><text x="76.5932%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.3432%" y="597" width="0.1604%" height="15" fill="rgb(207,191,42)" fg:x="952" fg:w="2"/><text x="76.5932%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.4234%" y="581" width="0.0802%" height="15" fill="rgb(215,218,38)" fg:x="953" fg:w="1"/><text x="76.6734%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.5036%" y="629" width="0.0802%" height="15" fill="rgb(223,195,24)" fg:x="954" fg:w="1"/><text x="76.7536%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.5036%" y="613" width="0.0802%" height="15" fill="rgb(254,60,30)" fg:x="954" fg:w="1"/><text x="76.7536%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="76.5036%" y="597" width="0.0802%" height="15" fill="rgb(223,2,9)" fg:x="954" fg:w="1"/><text x="76.7536%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="76.5036%" y="581" width="0.0802%" height="15" fill="rgb(253,134,46)" fg:x="954" fg:w="1"/><text x="76.7536%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5838%" y="597" width="0.0802%" height="15" fill="rgb(206,209,20)" fg:x="955" fg:w="1"/><text x="76.8338%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5838%" y="581" width="0.0802%" height="15" fill="rgb(253,104,42)" fg:x="955" fg:w="1"/><text x="76.8338%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.5838%" y="565" width="0.0802%" height="15" fill="rgb(223,47,23)" fg:x="955" fg:w="1"/><text x="76.8338%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5838%" y="549" width="0.0802%" height="15" fill="rgb(247,148,44)" fg:x="955" fg:w="1"/><text x="76.8338%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5838%" y="533" width="0.0802%" height="15" fill="rgb(221,224,16)" fg:x="955" fg:w="1"/><text x="76.8338%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.5838%" y="517" width="0.0802%" height="15" fill="rgb(252,103,29)" fg:x="955" fg:w="1"/><text x="76.8338%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.5838%" y="501" width="0.0802%" height="15" fill="rgb(244,185,34)" fg:x="955" fg:w="1"/><text x="76.8338%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.5838%" y="485" width="0.0802%" height="15" fill="rgb(218,18,50)" fg:x="955" fg:w="1"/><text x="76.8338%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5838%" y="469" width="0.0802%" height="15" fill="rgb(234,105,8)" fg:x="955" fg:w="1"/><text x="76.8338%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.5838%" y="453" width="0.0802%" height="15" fill="rgb(249,51,19)" fg:x="955" fg:w="1"/><text x="76.8338%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.5838%" y="437" width="0.0802%" height="15" fill="rgb(233,132,7)" fg:x="955" fg:w="1"/><text x="76.8338%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.5838%" y="421" width="0.0802%" height="15" fill="rgb(229,181,43)" fg:x="955" fg:w="1"/><text x="76.8338%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.5838%" y="405" width="0.0802%" height="15" fill="rgb(223,20,7)" fg:x="955" fg:w="1"/><text x="76.8338%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.5838%" y="389" width="0.0802%" height="15" fill="rgb(245,13,34)" fg:x="955" fg:w="1"/><text x="76.8338%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="75.8621%" y="677" width="0.8821%" height="15" fill="rgb(242,0,53)" fg:x="946" fg:w="11"/><text x="76.1121%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="76.5036%" y="661" width="0.2406%" height="15" fill="rgb(233,115,19)" fg:x="954" fg:w="3"/><text x="76.7536%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="76.5036%" y="645" width="0.2406%" height="15" fill="rgb(216,170,26)" fg:x="954" fg:w="3"/><text x="76.7536%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="76.5838%" y="629" width="0.1604%" height="15" fill="rgb(233,13,0)" fg:x="955" fg:w="2"/><text x="76.8338%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="76.5838%" y="613" width="0.1604%" height="15" fill="rgb(228,79,21)" fg:x="955" fg:w="2"/><text x="76.8338%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6640%" y="597" width="0.0802%" height="15" fill="rgb(244,17,41)" fg:x="956" fg:w="1"/><text x="76.9140%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6640%" y="581" width="0.0802%" height="15" fill="rgb(253,152,11)" fg:x="956" fg:w="1"/><text x="76.9140%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.96%)</title><rect x="75.8621%" y="693" width="0.9623%" height="15" fill="rgb(254,94,47)" fg:x="946" fg:w="12"/><text x="76.1121%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.7442%" y="677" width="0.0802%" height="15" fill="rgb(239,66,43)" fg:x="957" fg:w="1"/><text x="76.9942%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.7442%" y="661" width="0.0802%" height="15" fill="rgb(251,25,22)" fg:x="957" fg:w="1"/><text x="76.9942%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.7442%" y="645" width="0.0802%" height="15" fill="rgb(227,65,46)" fg:x="957" fg:w="1"/><text x="76.9942%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.7442%" y="629" width="0.0802%" height="15" fill="rgb(240,180,32)" fg:x="957" fg:w="1"/><text x="76.9942%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.7442%" y="613" width="0.0802%" height="15" fill="rgb(242,11,35)" fg:x="957" fg:w="1"/><text x="76.9942%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="76.8244%" y="645" width="0.0802%" height="15" fill="rgb(221,41,49)" fg:x="958" fg:w="1"/><text x="77.0744%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="76.8244%" y="629" width="0.0802%" height="15" fill="rgb(253,80,52)" fg:x="958" fg:w="1"/><text x="77.0744%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.8244%" y="613" width="0.0802%" height="15" fill="rgb(232,152,28)" fg:x="958" fg:w="1"/><text x="77.0744%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8244%" y="597" width="0.0802%" height="15" fill="rgb(219,110,12)" fg:x="958" fg:w="1"/><text x="77.0744%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="76.8244%" y="581" width="0.0802%" height="15" fill="rgb(218,98,43)" fg:x="958" fg:w="1"/><text x="77.0744%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.8244%" y="565" width="0.0802%" height="15" fill="rgb(253,96,49)" fg:x="958" fg:w="1"/><text x="77.0744%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8244%" y="549" width="0.0802%" height="15" fill="rgb(238,132,17)" fg:x="958" fg:w="1"/><text x="77.0744%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.9046%" y="613" width="0.0802%" height="15" fill="rgb(208,82,25)" fg:x="959" fg:w="1"/><text x="77.1546%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="76.8244%" y="677" width="0.3208%" height="15" fill="rgb(237,77,13)" fg:x="958" fg:w="4"/><text x="77.0744%" y="687.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="76.8244%" y="661" width="0.3208%" height="15" fill="rgb(230,6,11)" fg:x="958" fg:w="4"/><text x="77.0744%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="76.9046%" y="645" width="0.2406%" height="15" fill="rgb(207,29,48)" fg:x="959" fg:w="3"/><text x="77.1546%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="76.9046%" y="629" width="0.2406%" height="15" fill="rgb(247,105,22)" fg:x="959" fg:w="3"/><text x="77.1546%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.9848%" y="613" width="0.1604%" height="15" fill="rgb(223,114,44)" fg:x="960" fg:w="2"/><text x="77.2348%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="76.9848%" y="597" width="0.1604%" height="15" fill="rgb(242,3,46)" fg:x="960" fg:w="2"/><text x="77.2348%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="76.9848%" y="581" width="0.1604%" height="15" fill="rgb(243,197,8)" fg:x="960" fg:w="2"/><text x="77.2348%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0650%" y="565" width="0.0802%" height="15" fill="rgb(238,171,27)" fg:x="961" fg:w="1"/><text x="77.3150%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="77.1451%" y="677" width="0.0802%" height="15" fill="rgb(254,144,27)" fg:x="962" fg:w="1"/><text x="77.3951%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="77.1451%" y="661" width="0.0802%" height="15" fill="rgb(216,203,36)" fg:x="962" fg:w="1"/><text x="77.3951%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="77.2253%" y="661" width="0.0802%" height="15" fill="rgb(247,27,26)" fg:x="963" fg:w="1"/><text x="77.4753%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="77.2253%" y="645" width="0.0802%" height="15" fill="rgb(234,180,24)" fg:x="963" fg:w="1"/><text x="77.4753%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="77.2253%" y="677" width="0.2406%" height="15" fill="rgb(221,50,43)" fg:x="963" fg:w="3"/><text x="77.4753%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (2 samples, 0.16%)</title><rect x="77.3055%" y="661" width="0.1604%" height="15" fill="rgb(236,50,6)" fg:x="964" fg:w="2"/><text x="77.5555%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="77.3857%" y="645" width="0.0802%" height="15" fill="rgb(245,172,32)" fg:x="965" fg:w="1"/><text x="77.6357%" y="655.50"></text></g><g><title>plugins_core::build::Build::occupying (21 samples, 1.68%)</title><rect x="75.8621%" y="709" width="1.6840%" height="15" fill="rgb(207,54,46)" fg:x="946" fg:w="21"/><text x="76.1121%" y="719.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.72%)</title><rect x="76.8244%" y="693" width="0.7217%" height="15" fill="rgb(218,67,44)" fg:x="958" fg:w="9"/><text x="77.0744%" y="703.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="77.4659%" y="677" width="0.0802%" height="15" fill="rgb(208,152,22)" fg:x="966" fg:w="1"/><text x="77.7159%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="77.4659%" y="661" width="0.0802%" height="15" fill="rgb(243,177,0)" fg:x="966" fg:w="1"/><text x="77.7159%" y="671.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="77.4659%" y="645" width="0.0802%" height="15" fill="rgb(212,75,12)" fg:x="966" fg:w="1"/><text x="77.7159%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.4659%" y="629" width="0.0802%" height="15" fill="rgb(212,129,29)" fg:x="966" fg:w="1"/><text x="77.7159%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.4659%" y="613" width="0.0802%" height="15" fill="rgb(241,229,35)" fg:x="966" fg:w="1"/><text x="77.7159%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4659%" y="597" width="0.0802%" height="15" fill="rgb(232,49,32)" fg:x="966" fg:w="1"/><text x="77.7159%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4659%" y="581" width="0.0802%" height="15" fill="rgb(243,119,48)" fg:x="966" fg:w="1"/><text x="77.7159%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.4659%" y="565" width="0.0802%" height="15" fill="rgb(212,205,30)" fg:x="966" fg:w="1"/><text x="77.7159%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4659%" y="549" width="0.0802%" height="15" fill="rgb(218,175,42)" fg:x="966" fg:w="1"/><text x="77.7159%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.4659%" y="533" width="0.0802%" height="15" fill="rgb(230,156,27)" fg:x="966" fg:w="1"/><text x="77.7159%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.4659%" y="517" width="0.0802%" height="15" fill="rgb(254,32,43)" fg:x="966" fg:w="1"/><text x="77.7159%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.4659%" y="501" width="0.0802%" height="15" fill="rgb(246,89,34)" fg:x="966" fg:w="1"/><text x="77.7159%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5461%" y="613" width="0.0802%" height="15" fill="rgb(247,162,17)" fg:x="967" fg:w="1"/><text x="77.7961%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="77.5461%" y="661" width="0.1604%" height="15" fill="rgb(219,71,37)" fg:x="967" fg:w="2"/><text x="77.7961%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (2 samples, 0.16%)</title><rect x="77.5461%" y="645" width="0.1604%" height="15" fill="rgb(210,184,7)" fg:x="967" fg:w="2"/><text x="77.7961%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="77.5461%" y="629" width="0.1604%" height="15" fill="rgb(245,16,32)" fg:x="967" fg:w="2"/><text x="77.7961%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="77.6263%" y="613" width="0.0802%" height="15" fill="rgb(209,62,7)" fg:x="968" fg:w="1"/><text x="77.8763%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="77.6263%" y="597" width="0.0802%" height="15" fill="rgb(215,16,15)" fg:x="968" fg:w="1"/><text x="77.8763%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.6263%" y="581" width="0.0802%" height="15" fill="rgb(223,60,14)" fg:x="968" fg:w="1"/><text x="77.8763%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="77.6263%" y="565" width="0.0802%" height="15" fill="rgb(244,134,12)" fg:x="968" fg:w="1"/><text x="77.8763%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="77.6263%" y="549" width="0.0802%" height="15" fill="rgb(224,3,41)" fg:x="968" fg:w="1"/><text x="77.8763%" y="559.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="77.6263%" y="533" width="0.0802%" height="15" fill="rgb(213,84,2)" fg:x="968" fg:w="1"/><text x="77.8763%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="77.7065%" y="645" width="0.0802%" height="15" fill="rgb(213,216,27)" fg:x="969" fg:w="1"/><text x="77.9565%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="77.7065%" y="629" width="0.0802%" height="15" fill="rgb(218,76,35)" fg:x="969" fg:w="1"/><text x="77.9565%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7065%" y="613" width="0.0802%" height="15" fill="rgb(253,89,24)" fg:x="969" fg:w="1"/><text x="77.9565%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="77.7065%" y="597" width="0.0802%" height="15" fill="rgb(217,188,40)" fg:x="969" fg:w="1"/><text x="77.9565%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7065%" y="581" width="0.0802%" height="15" fill="rgb(237,79,38)" fg:x="969" fg:w="1"/><text x="77.9565%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.7065%" y="565" width="0.0802%" height="15" fill="rgb(215,116,13)" fg:x="969" fg:w="1"/><text x="77.9565%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.7065%" y="549" width="0.0802%" height="15" fill="rgb(249,66,35)" fg:x="969" fg:w="1"/><text x="77.9565%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="77.5461%" y="693" width="0.4010%" height="15" fill="rgb(253,86,18)" fg:x="967" fg:w="5"/><text x="77.7961%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="77.5461%" y="677" width="0.4010%" height="15" fill="rgb(209,175,36)" fg:x="967" fg:w="5"/><text x="77.7961%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="77.7065%" y="661" width="0.2406%" height="15" fill="rgb(253,149,3)" fg:x="969" fg:w="3"/><text x="77.9565%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="77.7867%" y="645" width="0.1604%" height="15" fill="rgb(242,124,49)" fg:x="970" fg:w="2"/><text x="78.0367%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="77.7867%" y="629" width="0.1604%" height="15" fill="rgb(219,171,24)" fg:x="970" fg:w="2"/><text x="78.0367%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8669%" y="613" width="0.0802%" height="15" fill="rgb(216,121,30)" fg:x="971" fg:w="1"/><text x="78.1169%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8669%" y="597" width="0.0802%" height="15" fill="rgb(234,165,21)" fg:x="971" fg:w="1"/><text x="78.1169%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="77.8669%" y="581" width="0.0802%" height="15" fill="rgb(234,103,40)" fg:x="971" fg:w="1"/><text x="78.1169%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8669%" y="565" width="0.0802%" height="15" fill="rgb(250,137,24)" fg:x="971" fg:w="1"/><text x="78.1169%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.8669%" y="549" width="0.0802%" height="15" fill="rgb(253,22,21)" fg:x="971" fg:w="1"/><text x="78.1169%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.8669%" y="533" width="0.0802%" height="15" fill="rgb(243,22,5)" fg:x="971" fg:w="1"/><text x="78.1169%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8669%" y="517" width="0.0802%" height="15" fill="rgb(212,56,7)" fg:x="971" fg:w="1"/><text x="78.1169%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (71 samples, 5.69%)</title><rect x="72.3336%" y="725" width="5.6937%" height="15" fill="rgb(223,190,49)" fg:x="902" fg:w="71"/><text x="72.5836%" y="735.50">plugins..</text></g><g><title>plugins_core::build::Build::wearing (6 samples, 0.48%)</title><rect x="77.5461%" y="709" width="0.4812%" height="15" fill="rgb(221,110,35)" fg:x="967" fg:w="6"/><text x="77.7961%" y="719.50"></text></g><g><title>plugins_core::tools::set_wearing (1 samples, 0.08%)</title><rect x="77.9471%" y="693" width="0.0802%" height="15" fill="rgb(212,113,34)" fg:x="972" fg:w="1"/><text x="78.1971%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="77.9471%" y="677" width="0.0802%" height="15" fill="rgb(216,125,47)" fg:x="972" fg:w="1"/><text x="78.1971%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9471%" y="661" width="0.0802%" height="15" fill="rgb(251,112,19)" fg:x="972" fg:w="1"/><text x="78.1971%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.9471%" y="645" width="0.0802%" height="15" fill="rgb(254,200,41)" fg:x="972" fg:w="1"/><text x="78.1971%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.0273%" y="693" width="0.0802%" height="15" fill="rgb(225,17,42)" fg:x="973" fg:w="1"/><text x="78.2773%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="78.0273%" y="677" width="0.0802%" height="15" fill="rgb(208,105,35)" fg:x="973" fg:w="1"/><text x="78.2773%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.1075%" y="613" width="0.0802%" height="15" fill="rgb(210,125,51)" fg:x="974" fg:w="1"/><text x="78.3575%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="78.1075%" y="597" width="0.0802%" height="15" fill="rgb(227,213,18)" fg:x="974" fg:w="1"/><text x="78.3575%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.1075%" y="581" width="0.0802%" height="15" fill="rgb(221,174,32)" fg:x="974" fg:w="1"/><text x="78.3575%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.1075%" y="565" width="0.0802%" height="15" fill="rgb(234,23,1)" fg:x="974" fg:w="1"/><text x="78.3575%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1075%" y="549" width="0.0802%" height="15" fill="rgb(209,65,17)" fg:x="974" fg:w="1"/><text x="78.3575%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.1075%" y="533" width="0.0802%" height="15" fill="rgb(206,224,31)" fg:x="974" fg:w="1"/><text x="78.3575%" y="543.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="78.1075%" y="645" width="0.1604%" height="15" fill="rgb(230,20,38)" fg:x="974" fg:w="2"/><text x="78.3575%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="78.1075%" y="629" width="0.1604%" height="15" fill="rgb(211,9,41)" fg:x="974" fg:w="2"/><text x="78.3575%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.1877%" y="613" width="0.0802%" height="15" fill="rgb(233,214,4)" fg:x="975" fg:w="1"/><text x="78.4377%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.1877%" y="597" width="0.0802%" height="15" fill="rgb(225,60,54)" fg:x="975" fg:w="1"/><text x="78.4377%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1877%" y="581" width="0.0802%" height="15" fill="rgb(206,228,35)" fg:x="975" fg:w="1"/><text x="78.4377%" y="591.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="78.1075%" y="661" width="0.2406%" height="15" fill="rgb(212,178,50)" fg:x="974" fg:w="3"/><text x="78.3575%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="78.2678%" y="645" width="0.0802%" height="15" fill="rgb(206,192,33)" fg:x="976" fg:w="1"/><text x="78.5178%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.2678%" y="629" width="0.0802%" height="15" fill="rgb(238,210,1)" fg:x="976" fg:w="1"/><text x="78.5178%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="78.2678%" y="613" width="0.0802%" height="15" fill="rgb(205,65,52)" fg:x="976" fg:w="1"/><text x="78.5178%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="78.2678%" y="597" width="0.0802%" height="15" fill="rgb(237,204,51)" fg:x="976" fg:w="1"/><text x="78.5178%" y="607.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="78.2678%" y="581" width="0.0802%" height="15" fill="rgb(213,119,51)" fg:x="976" fg:w="1"/><text x="78.5178%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="78.2678%" y="565" width="0.0802%" height="15" fill="rgb(244,156,37)" fg:x="976" fg:w="1"/><text x="78.5178%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.3480%" y="661" width="0.0802%" height="15" fill="rgb(249,96,18)" fg:x="977" fg:w="1"/><text x="78.5980%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.3480%" y="645" width="0.0802%" height="15" fill="rgb(231,65,11)" fg:x="977" fg:w="1"/><text x="78.5980%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="78.3480%" y="629" width="0.0802%" height="15" fill="rgb(240,187,2)" fg:x="977" fg:w="1"/><text x="78.5980%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.3480%" y="613" width="0.0802%" height="15" fill="rgb(242,121,39)" fg:x="977" fg:w="1"/><text x="78.5980%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="78.1075%" y="677" width="0.4010%" height="15" fill="rgb(233,205,18)" fg:x="974" fg:w="5"/><text x="78.3575%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (1 samples, 0.08%)</title><rect x="78.4282%" y="661" width="0.0802%" height="15" fill="rgb(219,67,33)" fg:x="978" fg:w="1"/><text x="78.6782%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="78.4282%" y="645" width="0.0802%" height="15" fill="rgb(227,84,12)" fg:x="978" fg:w="1"/><text x="78.6782%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.4282%" y="629" width="0.0802%" height="15" fill="rgb(227,42,52)" fg:x="978" fg:w="1"/><text x="78.6782%" y="639.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.4282%" y="613" width="0.0802%" height="15" fill="rgb(231,27,28)" fg:x="978" fg:w="1"/><text x="78.6782%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4282%" y="597" width="0.0802%" height="15" fill="rgb(238,42,2)" fg:x="978" fg:w="1"/><text x="78.6782%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4282%" y="581" width="0.0802%" height="15" fill="rgb(215,15,9)" fg:x="978" fg:w="1"/><text x="78.6782%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.4282%" y="565" width="0.0802%" height="15" fill="rgb(205,195,15)" fg:x="978" fg:w="1"/><text x="78.6782%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4282%" y="549" width="0.0802%" height="15" fill="rgb(233,143,2)" fg:x="978" fg:w="1"/><text x="78.6782%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.4282%" y="533" width="0.0802%" height="15" fill="rgb(207,108,8)" fg:x="978" fg:w="1"/><text x="78.6782%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.4282%" y="517" width="0.0802%" height="15" fill="rgb(214,53,21)" fg:x="978" fg:w="1"/><text x="78.6782%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.5084%" y="661" width="0.0802%" height="15" fill="rgb(238,212,36)" fg:x="979" fg:w="1"/><text x="78.7584%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (7 samples, 0.56%)</title><rect x="78.1075%" y="693" width="0.5613%" height="15" fill="rgb(218,151,47)" fg:x="974" fg:w="7"/><text x="78.3575%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="78.5084%" y="677" width="0.1604%" height="15" fill="rgb(245,160,3)" fg:x="979" fg:w="2"/><text x="78.7584%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="78.5886%" y="661" width="0.0802%" height="15" fill="rgb(238,106,19)" fg:x="980" fg:w="1"/><text x="78.8386%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.5886%" y="645" width="0.0802%" height="15" fill="rgb(207,206,9)" fg:x="980" fg:w="1"/><text x="78.8386%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5886%" y="629" width="0.0802%" height="15" fill="rgb(254,40,10)" fg:x="980" fg:w="1"/><text x="78.8386%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.5886%" y="613" width="0.0802%" height="15" fill="rgb(245,81,8)" fg:x="980" fg:w="1"/><text x="78.8386%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.5886%" y="597" width="0.0802%" height="15" fill="rgb(214,119,17)" fg:x="980" fg:w="1"/><text x="78.8386%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5886%" y="581" width="0.0802%" height="15" fill="rgb(245,100,39)" fg:x="980" fg:w="1"/><text x="78.8386%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.5886%" y="565" width="0.0802%" height="15" fill="rgb(243,105,16)" fg:x="980" fg:w="1"/><text x="78.8386%" y="575.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (9 samples, 0.72%)</title><rect x="78.0273%" y="725" width="0.7217%" height="15" fill="rgb(214,53,2)" fg:x="973" fg:w="9"/><text x="78.2773%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="78.0273%" y="709" width="0.7217%" height="15" fill="rgb(251,54,50)" fg:x="973" fg:w="9"/><text x="78.2773%" y="719.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="78.6688%" y="693" width="0.0802%" height="15" fill="rgb(244,121,37)" fg:x="981" fg:w="1"/><text x="78.9188%" y="703.50"></text></g><g><title>&lt;kernel::model::builder::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="78.6688%" y="677" width="0.0802%" height="15" fill="rgb(236,158,39)" fg:x="981" fg:w="1"/><text x="78.9188%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="78.7490%" y="709" width="0.1604%" height="15" fill="rgb(226,25,37)" fg:x="982" fg:w="2"/><text x="78.9990%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="78.7490%" y="693" width="0.1604%" height="15" fill="rgb(222,71,46)" fg:x="982" fg:w="2"/><text x="78.9990%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="78.7490%" y="677" width="0.1604%" height="15" fill="rgb(209,27,29)" fg:x="982" fg:w="2"/><text x="78.9990%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="78.7490%" y="661" width="0.1604%" height="15" fill="rgb(210,196,17)" fg:x="982" fg:w="2"/><text x="78.9990%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="78.7490%" y="645" width="0.1604%" height="15" fill="rgb(236,76,23)" fg:x="982" fg:w="2"/><text x="78.9990%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="78.7490%" y="629" width="0.1604%" height="15" fill="rgb(214,33,32)" fg:x="982" fg:w="2"/><text x="78.9990%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="78.8292%" y="613" width="0.0802%" height="15" fill="rgb(243,16,26)" fg:x="983" fg:w="1"/><text x="79.0792%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="78.8292%" y="597" width="0.0802%" height="15" fill="rgb(241,30,48)" fg:x="983" fg:w="1"/><text x="79.0792%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8292%" y="581" width="0.0802%" height="15" fill="rgb(241,106,1)" fg:x="983" fg:w="1"/><text x="79.0792%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.8292%" y="565" width="0.0802%" height="15" fill="rgb(230,62,29)" fg:x="983" fg:w="1"/><text x="79.0792%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9094%" y="709" width="0.0802%" height="15" fill="rgb(207,166,53)" fg:x="984" fg:w="1"/><text x="79.1594%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="78.9896%" y="661" width="0.0802%" height="15" fill="rgb(244,54,13)" fg:x="985" fg:w="1"/><text x="79.2396%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="78.9896%" y="645" width="0.0802%" height="15" fill="rgb(205,144,19)" fg:x="985" fg:w="1"/><text x="79.2396%" y="655.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="78.9896%" y="629" width="0.0802%" height="15" fill="rgb(225,165,45)" fg:x="985" fg:w="1"/><text x="79.2396%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="78.9896%" y="613" width="0.0802%" height="15" fill="rgb(220,140,6)" fg:x="985" fg:w="1"/><text x="79.2396%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.9896%" y="597" width="0.0802%" height="15" fill="rgb(234,69,14)" fg:x="985" fg:w="1"/><text x="79.2396%" y="607.50"></text></g><g><title>engine::session::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="78.9896%" y="677" width="0.1604%" height="15" fill="rgb(243,24,33)" fg:x="985" fg:w="2"/><text x="79.2396%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0698%" y="661" width="0.0802%" height="15" fill="rgb(253,100,43)" fg:x="986" fg:w="1"/><text x="79.3198%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.0698%" y="645" width="0.0802%" height="15" fill="rgb(221,168,15)" fg:x="986" fg:w="1"/><text x="79.3198%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.0698%" y="629" width="0.0802%" height="15" fill="rgb(237,15,11)" fg:x="986" fg:w="1"/><text x="79.3198%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (1 samples, 0.08%)</title><rect x="79.0698%" y="613" width="0.0802%" height="15" fill="rgb(229,207,40)" fg:x="986" fg:w="1"/><text x="79.3198%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.0698%" y="597" width="0.0802%" height="15" fill="rgb(246,125,48)" fg:x="986" fg:w="1"/><text x="79.3198%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0698%" y="581" width="0.0802%" height="15" fill="rgb(231,65,10)" fg:x="986" fg:w="1"/><text x="79.3198%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.0698%" y="565" width="0.0802%" height="15" fill="rgb(222,152,40)" fg:x="986" fg:w="1"/><text x="79.3198%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0698%" y="549" width="0.0802%" height="15" fill="rgb(214,12,30)" fg:x="986" fg:w="1"/><text x="79.3198%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="79.0698%" y="533" width="0.0802%" height="15" fill="rgb(239,80,41)" fg:x="986" fg:w="1"/><text x="79.3198%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.0698%" y="517" width="0.0802%" height="15" fill="rgb(206,175,27)" fg:x="986" fg:w="1"/><text x="79.3198%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="78.9896%" y="693" width="0.2406%" height="15" fill="rgb(222,43,39)" fg:x="985" fg:w="3"/><text x="79.2396%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="79.1500%" y="677" width="0.0802%" height="15" fill="rgb(243,47,50)" fg:x="987" fg:w="1"/><text x="79.4000%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.1500%" y="661" width="0.0802%" height="15" fill="rgb(243,61,21)" fg:x="987" fg:w="1"/><text x="79.4000%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.1500%" y="645" width="0.0802%" height="15" fill="rgb(208,172,5)" fg:x="987" fg:w="1"/><text x="79.4000%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.1500%" y="629" width="0.0802%" height="15" fill="rgb(219,24,25)" fg:x="987" fg:w="1"/><text x="79.4000%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.1500%" y="613" width="0.0802%" height="15" fill="rgb(235,42,41)" fg:x="987" fg:w="1"/><text x="79.4000%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1500%" y="597" width="0.0802%" height="15" fill="rgb(226,190,24)" fg:x="987" fg:w="1"/><text x="79.4000%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.1500%" y="581" width="0.0802%" height="15" fill="rgb(216,55,27)" fg:x="987" fg:w="1"/><text x="79.4000%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.1500%" y="565" width="0.0802%" height="15" fill="rgb(231,77,14)" fg:x="987" fg:w="1"/><text x="79.4000%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.1500%" y="549" width="0.0802%" height="15" fill="rgb(208,108,34)" fg:x="987" fg:w="1"/><text x="79.4000%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.1500%" y="533" width="0.0802%" height="15" fill="rgb(228,183,52)" fg:x="987" fg:w="1"/><text x="79.4000%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.1500%" y="517" width="0.0802%" height="15" fill="rgb(224,152,1)" fg:x="987" fg:w="1"/><text x="79.4000%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.1500%" y="501" width="0.0802%" height="15" fill="rgb(246,115,8)" fg:x="987" fg:w="1"/><text x="79.4000%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2302%" y="661" width="0.0802%" height="15" fill="rgb(211,76,13)" fg:x="988" fg:w="1"/><text x="79.4802%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2302%" y="645" width="0.0802%" height="15" fill="rgb(233,214,49)" fg:x="988" fg:w="1"/><text x="79.4802%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (139 samples, 11.15%)</title><rect x="68.2438%" y="741" width="11.1468%" height="15" fill="rgb(223,44,51)" fg:x="851" fg:w="139"/><text x="68.4938%" y="751.50">&lt;tests::HoldingK..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (8 samples, 0.64%)</title><rect x="78.7490%" y="725" width="0.6415%" height="15" fill="rgb(225,111,51)" fg:x="982" fg:w="8"/><text x="78.9990%" y="735.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="78.9896%" y="709" width="0.4010%" height="15" fill="rgb(231,185,26)" fg:x="985" fg:w="5"/><text x="79.2396%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="79.2302%" y="693" width="0.1604%" height="15" fill="rgb(233,111,30)" fg:x="988" fg:w="2"/><text x="79.4802%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="79.2302%" y="677" width="0.1604%" height="15" fill="rgb(250,1,47)" fg:x="988" fg:w="2"/><text x="79.4802%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="79.3103%" y="661" width="0.0802%" height="15" fill="rgb(254,210,3)" fg:x="989" fg:w="1"/><text x="79.5603%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="79.3103%" y="645" width="0.0802%" height="15" fill="rgb(234,14,22)" fg:x="989" fg:w="1"/><text x="79.5603%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.3103%" y="629" width="0.0802%" height="15" fill="rgb(221,117,4)" fg:x="989" fg:w="1"/><text x="79.5603%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="79.3905%" y="725" width="0.0802%" height="15" fill="rgb(251,147,27)" fg:x="990" fg:w="1"/><text x="79.6405%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.3905%" y="709" width="0.0802%" height="15" fill="rgb(226,52,11)" fg:x="990" fg:w="1"/><text x="79.6405%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.4707%" y="725" width="0.0802%" height="15" fill="rgb(229,222,5)" fg:x="991" fg:w="1"/><text x="79.7207%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.4707%" y="709" width="0.0802%" height="15" fill="rgb(232,76,2)" fg:x="991" fg:w="1"/><text x="79.7207%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.4707%" y="693" width="0.0802%" height="15" fill="rgb(242,108,2)" fg:x="991" fg:w="1"/><text x="79.7207%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.4707%" y="677" width="0.0802%" height="15" fill="rgb(213,165,6)" fg:x="991" fg:w="1"/><text x="79.7207%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="79.4707%" y="661" width="0.0802%" height="15" fill="rgb(222,24,42)" fg:x="991" fg:w="1"/><text x="79.7207%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="79.4707%" y="645" width="0.0802%" height="15" fill="rgb(242,170,24)" fg:x="991" fg:w="1"/><text x="79.7207%" y="655.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="79.4707%" y="629" width="0.0802%" height="15" fill="rgb(209,110,40)" fg:x="991" fg:w="1"/><text x="79.7207%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.4707%" y="613" width="0.0802%" height="15" fill="rgb(233,146,36)" fg:x="991" fg:w="1"/><text x="79.7207%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.4707%" y="597" width="0.0802%" height="15" fill="rgb(229,33,32)" fg:x="991" fg:w="1"/><text x="79.7207%" y="607.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="79.4707%" y="581" width="0.0802%" height="15" fill="rgb(225,55,34)" fg:x="991" fg:w="1"/><text x="79.7207%" y="591.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="79.4707%" y="565" width="0.0802%" height="15" fill="rgb(217,32,50)" fg:x="991" fg:w="1"/><text x="79.7207%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="79.4707%" y="549" width="0.0802%" height="15" fill="rgb(206,110,53)" fg:x="991" fg:w="1"/><text x="79.7207%" y="559.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="79.5509%" y="725" width="0.0802%" height="15" fill="rgb(247,25,10)" fg:x="992" fg:w="1"/><text x="79.8009%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.7915%" y="677" width="0.0802%" height="15" fill="rgb(226,67,48)" fg:x="995" fg:w="1"/><text x="80.0415%" y="687.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.9519%" y="661" width="0.1604%" height="15" fill="rgb(239,73,28)" fg:x="997" fg:w="2"/><text x="80.2019%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.7113%" y="709" width="0.4812%" height="15" fill="rgb(234,200,41)" fg:x="994" fg:w="6"/><text x="79.9613%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="79.7113%" y="693" width="0.4812%" height="15" fill="rgb(233,76,35)" fg:x="994" fg:w="6"/><text x="79.9613%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="79.8717%" y="677" width="0.3208%" height="15" fill="rgb(238,166,31)" fg:x="996" fg:w="4"/><text x="80.1217%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1123%" y="661" width="0.0802%" height="15" fill="rgb(219,218,51)" fg:x="999" fg:w="1"/><text x="80.3623%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1123%" y="645" width="0.0802%" height="15" fill="rgb(221,82,53)" fg:x="999" fg:w="1"/><text x="80.3623%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1925%" y="629" width="0.1604%" height="15" fill="rgb(218,179,13)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1925%" y="613" width="0.1604%" height="15" fill="rgb(210,53,38)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="80.1925%" y="597" width="0.1604%" height="15" fill="rgb(214,167,31)" fg:x="1000" fg:w="2"/><text x="80.4425%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.2727%" y="581" width="0.0802%" height="15" fill="rgb(223,26,5)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.2727%" y="565" width="0.0802%" height="15" fill="rgb(218,95,23)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="80.2727%" y="549" width="0.0802%" height="15" fill="rgb(248,205,45)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="80.2727%" y="533" width="0.0802%" height="15" fill="rgb(211,76,6)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="80.2727%" y="517" width="0.0802%" height="15" fill="rgb(250,176,29)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2727%" y="501" width="0.0802%" height="15" fill="rgb(240,107,31)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="80.2727%" y="485" width="0.0802%" height="15" fill="rgb(229,215,17)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="80.2727%" y="469" width="0.0802%" height="15" fill="rgb(240,79,8)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="80.2727%" y="453" width="0.0802%" height="15" fill="rgb(243,110,48)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="80.2727%" y="437" width="0.0802%" height="15" fill="rgb(236,201,9)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="80.2727%" y="421" width="0.0802%" height="15" fill="rgb(220,87,26)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2727%" y="405" width="0.0802%" height="15" fill="rgb(212,118,27)" fg:x="1001" fg:w="1"/><text x="80.5227%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="80.1925%" y="661" width="0.3208%" height="15" fill="rgb(244,178,50)" fg:x="1000" fg:w="4"/><text x="80.4425%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="80.1925%" y="645" width="0.3208%" height="15" fill="rgb(215,204,7)" fg:x="1000" fg:w="4"/><text x="80.4425%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.3528%" y="629" width="0.1604%" height="15" fill="rgb(214,122,43)" fg:x="1002" fg:w="2"/><text x="80.6028%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.3528%" y="613" width="0.1604%" height="15" fill="rgb(251,178,26)" fg:x="1002" fg:w="2"/><text x="80.6028%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="80.3528%" y="597" width="0.1604%" height="15" fill="rgb(210,7,35)" fg:x="1002" fg:w="2"/><text x="80.6028%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.3528%" y="581" width="0.1604%" height="15" fill="rgb(227,164,54)" fg:x="1002" fg:w="2"/><text x="80.6028%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.4330%" y="565" width="0.0802%" height="15" fill="rgb(205,18,34)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.4330%" y="549" width="0.0802%" height="15" fill="rgb(239,50,19)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="80.4330%" y="533" width="0.0802%" height="15" fill="rgb(224,85,6)" fg:x="1003" fg:w="1"/><text x="80.6830%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="80.5132%" y="661" width="0.0802%" height="15" fill="rgb(252,167,34)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="80.5132%" y="645" width="0.0802%" height="15" fill="rgb(243,180,35)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.5132%" y="629" width="0.0802%" height="15" fill="rgb(213,214,53)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.5132%" y="613" width="0.0802%" height="15" fill="rgb(244,39,37)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="80.5132%" y="597" width="0.0802%" height="15" fill="rgb(215,141,14)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.5132%" y="581" width="0.0802%" height="15" fill="rgb(210,2,42)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="80.5132%" y="565" width="0.0802%" height="15" fill="rgb(252,189,47)" fg:x="1004" fg:w="1"/><text x="80.7632%" y="575.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (6 samples, 0.48%)</title><rect x="80.1925%" y="693" width="0.4812%" height="15" fill="rgb(222,154,47)" fg:x="1000" fg:w="6"/><text x="80.4425%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (6 samples, 0.48%)</title><rect x="80.1925%" y="677" width="0.4812%" height="15" fill="rgb(228,20,37)" fg:x="1000" fg:w="6"/><text x="80.4425%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="80.5934%" y="661" width="0.0802%" height="15" fill="rgb(236,17,4)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="80.5934%" y="645" width="0.0802%" height="15" fill="rgb(222,211,31)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="80.5934%" y="629" width="0.0802%" height="15" fill="rgb(218,134,25)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="80.5934%" y="613" width="0.0802%" height="15" fill="rgb(218,97,43)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5934%" y="597" width="0.0802%" height="15" fill="rgb(234,163,32)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.5934%" y="581" width="0.0802%" height="15" fill="rgb(251,171,42)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="80.5934%" y="565" width="0.0802%" height="15" fill="rgb(223,104,12)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="80.5934%" y="549" width="0.0802%" height="15" fill="rgb(225,29,49)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="80.5934%" y="533" width="0.0802%" height="15" fill="rgb(253,77,7)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="80.5934%" y="517" width="0.0802%" height="15" fill="rgb(213,81,26)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.5934%" y="501" width="0.0802%" height="15" fill="rgb(246,126,6)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="80.5934%" y="485" width="0.0802%" height="15" fill="rgb(232,186,21)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.5934%" y="469" width="0.0802%" height="15" fill="rgb(215,126,18)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="80.5934%" y="453" width="0.0802%" height="15" fill="rgb(210,47,5)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="80.5934%" y="437" width="0.0802%" height="15" fill="rgb(240,70,6)" fg:x="1005" fg:w="1"/><text x="80.8434%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.6736%" y="677" width="0.0802%" height="15" fill="rgb(230,99,49)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.6736%" y="661" width="0.0802%" height="15" fill="rgb(212,57,36)" fg:x="1006" fg:w="1"/><text x="80.9236%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_audience (9 samples, 0.72%)</title><rect x="80.1925%" y="709" width="0.7217%" height="15" fill="rgb(243,14,50)" fg:x="1000" fg:w="9"/><text x="80.4425%" y="719.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.24%)</title><rect x="80.6736%" y="693" width="0.2406%" height="15" fill="rgb(240,2,53)" fg:x="1006" fg:w="3"/><text x="80.9236%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="80.7538%" y="677" width="0.1604%" height="15" fill="rgb(208,47,53)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="80.7538%" y="661" width="0.1604%" height="15" fill="rgb(235,186,39)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="80.7538%" y="645" width="0.1604%" height="15" fill="rgb(212,35,47)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="80.7538%" y="629" width="0.1604%" height="15" fill="rgb(248,59,37)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="80.7538%" y="613" width="0.1604%" height="15" fill="rgb(223,186,16)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="80.7538%" y="597" width="0.1604%" height="15" fill="rgb(215,106,35)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="607.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="80.7538%" y="581" width="0.1604%" height="15" fill="rgb(217,141,29)" fg:x="1007" fg:w="2"/><text x="81.0038%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="80.8340%" y="565" width="0.0802%" height="15" fill="rgb(221,227,46)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="80.8340%" y="549" width="0.0802%" height="15" fill="rgb(212,36,41)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.8340%" y="533" width="0.0802%" height="15" fill="rgb(222,35,11)" fg:x="1008" fg:w="1"/><text x="81.0840%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0746%" y="613" width="0.0802%" height="15" fill="rgb(232,165,33)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0746%" y="597" width="0.0802%" height="15" fill="rgb(211,38,20)" fg:x="1011" fg:w="1"/><text x="81.3246%" y="607.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="81.0746%" y="629" width="0.2406%" height="15" fill="rgb(230,7,36)" fg:x="1011" fg:w="3"/><text x="81.3246%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.1548%" y="613" width="0.1604%" height="15" fill="rgb(213,128,35)" fg:x="1012" fg:w="2"/><text x="81.4048%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2350%" y="597" width="0.0802%" height="15" fill="rgb(218,11,14)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.2350%" y="581" width="0.0802%" height="15" fill="rgb(249,105,7)" fg:x="1013" fg:w="1"/><text x="81.4850%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.3152%" y="613" width="0.0802%" height="15" fill="rgb(226,125,21)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3152%" y="597" width="0.0802%" height="15" fill="rgb(239,90,47)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.3152%" y="581" width="0.0802%" height="15" fill="rgb(226,19,1)" fg:x="1014" fg:w="1"/><text x="81.5652%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.3953%" y="597" width="0.0802%" height="15" fill="rgb(205,117,40)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3953%" y="581" width="0.0802%" height="15" fill="rgb(234,6,54)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.3953%" y="565" width="0.0802%" height="15" fill="rgb(239,73,32)" fg:x="1015" fg:w="1"/><text x="81.6453%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.4755%" y="597" width="0.0802%" height="15" fill="rgb(226,197,12)" fg:x="1016" fg:w="1"/><text x="81.7255%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.5557%" y="565" width="0.1604%" height="15" fill="rgb(226,53,42)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.5557%" y="549" width="0.1604%" height="15" fill="rgb(234,99,30)" fg:x="1017" fg:w="2"/><text x="81.8057%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.5557%" y="581" width="0.2406%" height="15" fill="rgb(237,175,49)" fg:x="1017" fg:w="3"/><text x="81.8057%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.7161%" y="565" width="0.0802%" height="15" fill="rgb(228,75,42)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.7161%" y="549" width="0.0802%" height="15" fill="rgb(223,162,48)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.7161%" y="533" width="0.0802%" height="15" fill="rgb(221,192,29)" fg:x="1019" fg:w="1"/><text x="81.9661%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="81.3953%" y="613" width="0.5613%" height="15" fill="rgb(249,150,41)" fg:x="1015" fg:w="7"/><text x="81.6453%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.5557%" y="597" width="0.4010%" height="15" fill="rgb(243,107,34)" fg:x="1017" fg:w="5"/><text x="81.8057%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.7963%" y="581" width="0.1604%" height="15" fill="rgb(214,227,11)" fg:x="1020" fg:w="2"/><text x="82.0463%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8765%" y="565" width="0.0802%" height="15" fill="rgb(209,37,13)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.8765%" y="549" width="0.0802%" height="15" fill="rgb(249,124,20)" fg:x="1021" fg:w="1"/><text x="82.1265%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.96%)</title><rect x="81.0746%" y="645" width="0.9623%" height="15" fill="rgb(228,28,2)" fg:x="1011" fg:w="12"/><text x="81.3246%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="81.3152%" y="629" width="0.7217%" height="15" fill="rgb(244,55,1)" fg:x="1014" fg:w="9"/><text x="81.5652%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.9567%" y="613" width="0.0802%" height="15" fill="rgb(216,26,19)" fg:x="1022" fg:w="1"/><text x="82.2067%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="82.0369%" y="613" width="0.1604%" height="15" fill="rgb(209,162,10)" fg:x="1023" fg:w="2"/><text x="82.2869%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.1973%" y="597" width="0.0802%" height="15" fill="rgb(235,168,42)" fg:x="1025" fg:w="1"/><text x="82.4473%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.0369%" y="645" width="0.3208%" height="15" fill="rgb(240,24,14)" fg:x="1023" fg:w="4"/><text x="82.2869%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="82.0369%" y="629" width="0.3208%" height="15" fill="rgb(224,107,11)" fg:x="1023" fg:w="4"/><text x="82.2869%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.1973%" y="613" width="0.1604%" height="15" fill="rgb(226,48,4)" fg:x="1025" fg:w="2"/><text x="82.4473%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2775%" y="597" width="0.0802%" height="15" fill="rgb(254,31,21)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2775%" y="581" width="0.0802%" height="15" fill="rgb(205,156,19)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.2775%" y="565" width="0.0802%" height="15" fill="rgb(216,73,31)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.2775%" y="549" width="0.0802%" height="15" fill="rgb(237,88,35)" fg:x="1026" fg:w="1"/><text x="82.5275%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3577%" y="565" width="0.0802%" height="15" fill="rgb(254,79,48)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3577%" y="549" width="0.0802%" height="15" fill="rgb(211,66,36)" fg:x="1027" fg:w="1"/><text x="82.6077%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4379%" y="517" width="0.0802%" height="15" fill="rgb(222,13,1)" fg:x="1028" fg:w="1"/><text x="82.6879%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5180%" y="517" width="0.0802%" height="15" fill="rgb(221,216,41)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5180%" y="501" width="0.0802%" height="15" fill="rgb(220,10,17)" fg:x="1029" fg:w="1"/><text x="82.7680%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.3577%" y="613" width="0.3208%" height="15" fill="rgb(242,43,35)" fg:x="1027" fg:w="4"/><text x="82.6077%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="82.3577%" y="597" width="0.3208%" height="15" fill="rgb(216,182,18)" fg:x="1027" fg:w="4"/><text x="82.6077%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.3577%" y="581" width="0.3208%" height="15" fill="rgb(246,217,36)" fg:x="1027" fg:w="4"/><text x="82.6077%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.4379%" y="565" width="0.2406%" height="15" fill="rgb(208,107,8)" fg:x="1028" fg:w="3"/><text x="82.6879%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.4379%" y="549" width="0.2406%" height="15" fill="rgb(208,189,15)" fg:x="1028" fg:w="3"/><text x="82.6879%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.4379%" y="533" width="0.2406%" height="15" fill="rgb(211,70,9)" fg:x="1028" fg:w="3"/><text x="82.6879%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5982%" y="517" width="0.0802%" height="15" fill="rgb(217,95,34)" fg:x="1030" fg:w="1"/><text x="82.8482%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="82.6784%" y="597" width="0.3208%" height="15" fill="rgb(240,223,2)" fg:x="1031" fg:w="4"/><text x="82.9284%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="82.6784%" y="581" width="0.3208%" height="15" fill="rgb(231,18,6)" fg:x="1031" fg:w="4"/><text x="82.9284%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="82.6784%" y="565" width="0.3208%" height="15" fill="rgb(254,44,46)" fg:x="1031" fg:w="4"/><text x="82.9284%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="82.8388%" y="549" width="0.1604%" height="15" fill="rgb(223,222,46)" fg:x="1033" fg:w="2"/><text x="83.0888%" y="559.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (9 samples, 0.72%)</title><rect x="82.3577%" y="629" width="0.7217%" height="15" fill="rgb(229,163,13)" fg:x="1027" fg:w="9"/><text x="82.6077%" y="639.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.40%)</title><rect x="82.6784%" y="613" width="0.4010%" height="15" fill="rgb(220,208,13)" fg:x="1031" fg:w="5"/><text x="82.9284%" y="623.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="82.9992%" y="597" width="0.0802%" height="15" fill="rgb(244,28,53)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9992%" y="581" width="0.0802%" height="15" fill="rgb(243,138,0)" fg:x="1035" fg:w="1"/><text x="83.2492%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="83.0794%" y="597" width="0.3208%" height="15" fill="rgb(209,90,49)" fg:x="1036" fg:w="4"/><text x="83.3294%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="83.1596%" y="581" width="0.2406%" height="15" fill="rgb(247,114,18)" fg:x="1037" fg:w="3"/><text x="83.4096%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="83.2398%" y="565" width="0.1604%" height="15" fill="rgb(221,14,46)" fg:x="1038" fg:w="2"/><text x="83.4898%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4002%" y="597" width="0.0802%" height="15" fill="rgb(215,29,23)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="83.4002%" y="581" width="0.0802%" height="15" fill="rgb(241,37,25)" fg:x="1040" fg:w="1"/><text x="83.6502%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="83.5605%" y="565" width="0.0802%" height="15" fill="rgb(225,17,22)" fg:x="1042" fg:w="1"/><text x="83.8105%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="83.6407%" y="549" width="0.1604%" height="15" fill="rgb(241,182,7)" fg:x="1043" fg:w="2"/><text x="83.8907%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="83.6407%" y="533" width="0.1604%" height="15" fill="rgb(248,125,10)" fg:x="1043" fg:w="2"/><text x="83.8907%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="83.6407%" y="517" width="0.1604%" height="15" fill="rgb(250,3,37)" fg:x="1043" fg:w="2"/><text x="83.8907%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (2 samples, 0.16%)</title><rect x="83.8011%" y="533" width="0.1604%" height="15" fill="rgb(237,102,7)" fg:x="1045" fg:w="2"/><text x="84.0511%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="84.1219%" y="501" width="0.0802%" height="15" fill="rgb(235,5,5)" fg:x="1049" fg:w="1"/><text x="84.3719%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.72%)</title><rect x="83.5605%" y="581" width="0.7217%" height="15" fill="rgb(249,147,38)" fg:x="1042" fg:w="9"/><text x="83.8105%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="83.6407%" y="565" width="0.6415%" height="15" fill="rgb(221,25,18)" fg:x="1043" fg:w="8"/><text x="83.8907%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="83.8011%" y="549" width="0.4812%" height="15" fill="rgb(211,88,9)" fg:x="1045" fg:w="6"/><text x="84.0511%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="83.9615%" y="533" width="0.3208%" height="15" fill="rgb(219,62,54)" fg:x="1047" fg:w="4"/><text x="84.2115%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="84.0417%" y="517" width="0.2406%" height="15" fill="rgb(243,133,46)" fg:x="1048" fg:w="3"/><text x="84.2917%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.2021%" y="501" width="0.0802%" height="15" fill="rgb(214,168,53)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2021%" y="485" width="0.0802%" height="15" fill="rgb(250,58,7)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.2021%" y="469" width="0.0802%" height="15" fill="rgb(249,131,5)" fg:x="1050" fg:w="1"/><text x="84.4521%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.2823%" y="581" width="0.0802%" height="15" fill="rgb(234,40,44)" fg:x="1051" fg:w="1"/><text x="84.5323%" y="591.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (18 samples, 1.44%)</title><rect x="83.0794%" y="629" width="1.4435%" height="15" fill="rgb(225,188,42)" fg:x="1036" fg:w="18"/><text x="83.3294%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 1.44%)</title><rect x="83.0794%" y="613" width="1.4435%" height="15" fill="rgb(218,201,51)" fg:x="1036" fg:w="18"/><text x="83.3294%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.04%)</title><rect x="83.4804%" y="597" width="1.0425%" height="15" fill="rgb(214,209,38)" fg:x="1041" fg:w="13"/><text x="83.7304%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.3625%" y="581" width="0.1604%" height="15" fill="rgb(217,0,20)" fg:x="1052" fg:w="2"/><text x="84.6125%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.3625%" y="565" width="0.1604%" height="15" fill="rgb(248,183,46)" fg:x="1052" fg:w="2"/><text x="84.6125%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4427%" y="549" width="0.0802%" height="15" fill="rgb(208,99,41)" fg:x="1053" fg:w="1"/><text x="84.6927%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.5229%" y="517" width="0.0802%" height="15" fill="rgb(210,189,49)" fg:x="1054" fg:w="1"/><text x="84.7729%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="84.6832%" y="469" width="0.0802%" height="15" fill="rgb(239,191,42)" fg:x="1056" fg:w="1"/><text x="84.9332%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="84.7634%" y="469" width="0.0802%" height="15" fill="rgb(240,138,26)" fg:x="1057" fg:w="1"/><text x="85.0134%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="84.6030%" y="501" width="0.3208%" height="15" fill="rgb(234,45,22)" fg:x="1055" fg:w="4"/><text x="84.8530%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="84.6832%" y="485" width="0.2406%" height="15" fill="rgb(228,43,35)" fg:x="1056" fg:w="3"/><text x="84.9332%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8436%" y="469" width="0.0802%" height="15" fill="rgb(215,201,54)" fg:x="1058" fg:w="1"/><text x="85.0936%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="84.9238%" y="485" width="0.0802%" height="15" fill="rgb(209,60,31)" fg:x="1059" fg:w="1"/><text x="85.1738%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="84.9238%" y="501" width="0.1604%" height="15" fill="rgb(232,66,12)" fg:x="1059" fg:w="2"/><text x="85.1738%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0040%" y="485" width="0.0802%" height="15" fill="rgb(244,78,24)" fg:x="1060" fg:w="1"/><text x="85.2540%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (9 samples, 0.72%)</title><rect x="84.5229%" y="533" width="0.7217%" height="15" fill="rgb(249,65,27)" fg:x="1054" fg:w="9"/><text x="84.7729%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="84.6030%" y="517" width="0.6415%" height="15" fill="rgb(208,218,19)" fg:x="1055" fg:w="8"/><text x="84.8530%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.0842%" y="501" width="0.1604%" height="15" fill="rgb(212,181,38)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="85.0842%" y="485" width="0.1604%" height="15" fill="rgb(207,118,40)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="85.0842%" y="469" width="0.1604%" height="15" fill="rgb(207,126,20)" fg:x="1061" fg:w="2"/><text x="85.3342%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.2446%" y="533" width="0.0802%" height="15" fill="rgb(232,15,46)" fg:x="1063" fg:w="1"/><text x="85.4946%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="84.5229%" y="565" width="0.8821%" height="15" fill="rgb(254,33,30)" fg:x="1054" fg:w="11"/><text x="84.7729%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="84.5229%" y="549" width="0.8821%" height="15" fill="rgb(233,92,20)" fg:x="1054" fg:w="11"/><text x="84.7729%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3248%" y="533" width="0.0802%" height="15" fill="rgb(225,195,54)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3248%" y="517" width="0.0802%" height="15" fill="rgb(208,196,7)" fg:x="1064" fg:w="1"/><text x="85.5748%" y="527.50"></text></g><g><title>engine::session::Session::close (76 samples, 6.09%)</title><rect x="79.3905%" y="741" width="6.0946%" height="15" fill="rgb(253,19,35)" fg:x="990" fg:w="76"/><text x="79.6405%" y="751.50">engine::..</text></g><g><title>engine::session::state::State::close (73 samples, 5.85%)</title><rect x="79.6311%" y="725" width="5.8540%" height="15" fill="rgb(228,180,1)" fg:x="993" fg:w="73"/><text x="79.8811%" y="735.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (57 samples, 4.57%)</title><rect x="80.9142%" y="709" width="4.5710%" height="15" fill="rgb(248,35,18)" fg:x="1009" fg:w="57"/><text x="81.1642%" y="719.50">engin..</text></g><g><title>core::iter::adapters::try_process (57 samples, 4.57%)</title><rect x="80.9142%" y="693" width="4.5710%" height="15" fill="rgb(220,34,8)" fg:x="1009" fg:w="57"/><text x="81.1642%" y="703.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (57 samples, 4.57%)</title><rect x="80.9142%" y="677" width="4.5710%" height="15" fill="rgb(219,223,17)" fg:x="1009" fg:w="57"/><text x="81.1642%" y="687.50">&lt;allo..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (55 samples, 4.41%)</title><rect x="81.0746%" y="661" width="4.4106%" height="15" fill="rgb(223,183,15)" fg:x="1011" fg:w="55"/><text x="81.3246%" y="671.50">engin..</text></g><g><title>kernel::model::any_entity_changes (39 samples, 3.13%)</title><rect x="82.3577%" y="645" width="3.1275%" height="15" fill="rgb(253,184,45)" fg:x="1027" fg:w="39"/><text x="82.6077%" y="655.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.96%)</title><rect x="84.5229%" y="629" width="0.9623%" height="15" fill="rgb(207,97,29)" fg:x="1054" fg:w="12"/><text x="84.7729%" y="639.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.96%)</title><rect x="84.5229%" y="613" width="0.9623%" height="15" fill="rgb(250,170,27)" fg:x="1054" fg:w="12"/><text x="84.7729%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.96%)</title><rect x="84.5229%" y="597" width="0.9623%" height="15" fill="rgb(206,178,17)" fg:x="1054" fg:w="12"/><text x="84.7729%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.96%)</title><rect x="84.5229%" y="581" width="0.9623%" height="15" fill="rgb(213,92,46)" fg:x="1054" fg:w="12"/><text x="84.7729%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.4050%" y="565" width="0.0802%" height="15" fill="rgb(223,114,30)" fg:x="1065" fg:w="1"/><text x="85.6550%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.5654%" y="565" width="0.0802%" height="15" fill="rgb(207,228,9)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="575.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="85.5654%" y="549" width="0.0802%" height="15" fill="rgb(205,70,25)" fg:x="1067" fg:w="1"/><text x="85.8154%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6455%" y="533" width="0.0802%" height="15" fill="rgb(252,45,30)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6455%" y="517" width="0.0802%" height="15" fill="rgb(219,185,54)" fg:x="1068" fg:w="1"/><text x="85.8955%" y="527.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.32%)</title><rect x="85.5654%" y="613" width="0.3208%" height="15" fill="rgb(219,208,54)" fg:x="1067" fg:w="4"/><text x="85.8154%" y="623.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (4 samples, 0.32%)</title><rect x="85.5654%" y="597" width="0.3208%" height="15" fill="rgb(207,164,54)" fg:x="1067" fg:w="4"/><text x="85.8154%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.32%)</title><rect x="85.5654%" y="581" width="0.3208%" height="15" fill="rgb(240,155,22)" fg:x="1067" fg:w="4"/><text x="85.8154%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="85.6455%" y="565" width="0.2406%" height="15" fill="rgb(217,127,14)" fg:x="1068" fg:w="3"/><text x="85.8955%" y="575.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.6455%" y="549" width="0.2406%" height="15" fill="rgb(232,179,42)" fg:x="1068" fg:w="3"/><text x="85.8955%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="85.7257%" y="533" width="0.1604%" height="15" fill="rgb(247,55,45)" fg:x="1069" fg:w="2"/><text x="85.9757%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="85.7257%" y="517" width="0.1604%" height="15" fill="rgb(217,11,18)" fg:x="1069" fg:w="2"/><text x="85.9757%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.8059%" y="501" width="0.0802%" height="15" fill="rgb(227,127,4)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8059%" y="485" width="0.0802%" height="15" fill="rgb(217,97,45)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8059%" y="469" width="0.0802%" height="15" fill="rgb(250,135,20)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8059%" y="453" width="0.0802%" height="15" fill="rgb(224,213,26)" fg:x="1070" fg:w="1"/><text x="86.0559%" y="463.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_location (6 samples, 0.48%)</title><rect x="85.5654%" y="629" width="0.4812%" height="15" fill="rgb(237,86,25)" fg:x="1067" fg:w="6"/><text x="85.8154%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="85.8861%" y="613" width="0.1604%" height="15" fill="rgb(251,105,18)" fg:x="1071" fg:w="2"/><text x="86.1361%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="85.8861%" y="597" width="0.1604%" height="15" fill="rgb(246,124,25)" fg:x="1071" fg:w="2"/><text x="86.1361%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9663%" y="581" width="0.0802%" height="15" fill="rgb(210,90,3)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9663%" y="565" width="0.0802%" height="15" fill="rgb(249,40,31)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.9663%" y="549" width="0.0802%" height="15" fill="rgb(231,228,1)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.9663%" y="533" width="0.0802%" height="15" fill="rgb(242,25,49)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="85.9663%" y="517" width="0.0802%" height="15" fill="rgb(224,142,22)" fg:x="1072" fg:w="1"/><text x="86.2163%" y="527.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.0465%" y="565" width="0.0802%" height="15" fill="rgb(228,106,29)" fg:x="1073" fg:w="1"/><text x="86.2965%" y="575.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (8 samples, 0.64%)</title><rect x="85.5654%" y="645" width="0.6415%" height="15" fill="rgb(207,2,15)" fg:x="1067" fg:w="8"/><text x="85.8154%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="86.0465%" y="629" width="0.1604%" height="15" fill="rgb(231,43,37)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="639.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="86.0465%" y="613" width="0.1604%" height="15" fill="rgb(245,193,12)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.0465%" y="597" width="0.1604%" height="15" fill="rgb(246,9,49)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.0465%" y="581" width="0.1604%" height="15" fill="rgb(218,50,36)" fg:x="1073" fg:w="2"/><text x="86.2965%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.1267%" y="565" width="0.0802%" height="15" fill="rgb(225,206,16)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1267%" y="549" width="0.0802%" height="15" fill="rgb(242,52,5)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.1267%" y="533" width="0.0802%" height="15" fill="rgb(217,158,11)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1267%" y="517" width="0.0802%" height="15" fill="rgb(242,144,22)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.1267%" y="501" width="0.0802%" height="15" fill="rgb(236,191,3)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.1267%" y="485" width="0.0802%" height="15" fill="rgb(241,22,19)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.1267%" y="469" width="0.0802%" height="15" fill="rgb(205,217,44)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.1267%" y="453" width="0.0802%" height="15" fill="rgb(231,53,3)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1267%" y="437" width="0.0802%" height="15" fill="rgb(207,13,22)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.1267%" y="421" width="0.0802%" height="15" fill="rgb(234,62,29)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.1267%" y="405" width="0.0802%" height="15" fill="rgb(226,175,44)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.1267%" y="389" width="0.0802%" height="15" fill="rgb(239,177,6)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.1267%" y="373" width="0.0802%" height="15" fill="rgb(249,125,15)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.1267%" y="357" width="0.0802%" height="15" fill="rgb(210,201,5)" fg:x="1074" fg:w="1"/><text x="86.3767%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (3 samples, 0.24%)</title><rect x="86.2871%" y="485" width="0.2406%" height="15" fill="rgb(210,14,6)" fg:x="1076" fg:w="3"/><text x="86.5371%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.2871%" y="469" width="0.2406%" height="15" fill="rgb(239,141,15)" fg:x="1076" fg:w="3"/><text x="86.5371%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.3673%" y="453" width="0.1604%" height="15" fill="rgb(235,75,9)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.3673%" y="437" width="0.1604%" height="15" fill="rgb(246,122,37)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="86.3673%" y="421" width="0.1604%" height="15" fill="rgb(235,75,52)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.3673%" y="405" width="0.1604%" height="15" fill="rgb(235,179,12)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="86.3673%" y="389" width="0.1604%" height="15" fill="rgb(223,20,9)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="86.3673%" y="373" width="0.1604%" height="15" fill="rgb(223,75,22)" fg:x="1077" fg:w="2"/><text x="86.6173%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5277%" y="469" width="0.0802%" height="15" fill="rgb(248,148,18)" fg:x="1079" fg:w="1"/><text x="86.7777%" y="479.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.6079%" y="469" width="0.0802%" height="15" fill="rgb(225,103,8)" fg:x="1080" fg:w="1"/><text x="86.8579%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6881%" y="453" width="0.0802%" height="15" fill="rgb(237,168,17)" fg:x="1081" fg:w="1"/><text x="86.9381%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (7 samples, 0.56%)</title><rect x="86.2871%" y="501" width="0.5613%" height="15" fill="rgb(215,192,38)" fg:x="1076" fg:w="7"/><text x="86.5371%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="86.5277%" y="485" width="0.3208%" height="15" fill="rgb(237,69,28)" fg:x="1079" fg:w="4"/><text x="86.7777%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.6881%" y="469" width="0.1604%" height="15" fill="rgb(254,167,32)" fg:x="1081" fg:w="2"/><text x="86.9381%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.7682%" y="453" width="0.0802%" height="15" fill="rgb(250,81,30)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="437" width="0.0802%" height="15" fill="rgb(240,68,52)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="86.7682%" y="421" width="0.0802%" height="15" fill="rgb(205,97,42)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.7682%" y="405" width="0.0802%" height="15" fill="rgb(217,10,22)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.7682%" y="389" width="0.0802%" height="15" fill="rgb(216,21,26)" fg:x="1082" fg:w="1"/><text x="87.0182%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8484%" y="453" width="0.0802%" height="15" fill="rgb(239,0,36)" fg:x="1083" fg:w="1"/><text x="87.0984%" y="463.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="86.9286%" y="437" width="0.1604%" height="15" fill="rgb(216,162,28)" fg:x="1084" fg:w="2"/><text x="87.1786%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (2 samples, 0.16%)</title><rect x="86.9286%" y="421" width="0.1604%" height="15" fill="rgb(246,22,39)" fg:x="1084" fg:w="2"/><text x="87.1786%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="86.9286%" y="405" width="0.1604%" height="15" fill="rgb(222,84,49)" fg:x="1084" fg:w="2"/><text x="87.1786%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="86.9286%" y="389" width="0.1604%" height="15" fill="rgb(250,38,34)" fg:x="1084" fg:w="2"/><text x="87.1786%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0088%" y="373" width="0.0802%" height="15" fill="rgb(236,0,38)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0088%" y="357" width="0.0802%" height="15" fill="rgb(237,205,54)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0088%" y="341" width="0.0802%" height="15" fill="rgb(221,80,35)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.0088%" y="325" width="0.0802%" height="15" fill="rgb(237,204,22)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0088%" y="309" width="0.0802%" height="15" fill="rgb(213,108,15)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.0088%" y="293" width="0.0802%" height="15" fill="rgb(251,187,9)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.0088%" y="277" width="0.0802%" height="15" fill="rgb(250,61,9)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.0088%" y="261" width="0.0802%" height="15" fill="rgb(230,131,33)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.0088%" y="245" width="0.0802%" height="15" fill="rgb(239,117,11)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0088%" y="229" width="0.0802%" height="15" fill="rgb(222,112,44)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.0088%" y="213" width="0.0802%" height="15" fill="rgb(251,33,25)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.0088%" y="197" width="0.0802%" height="15" fill="rgb(208,171,34)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.0088%" y="181" width="0.0802%" height="15" fill="rgb(250,166,54)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.0088%" y="165" width="0.0802%" height="15" fill="rgb(212,148,2)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.0088%" y="149" width="0.0802%" height="15" fill="rgb(224,92,39)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="159.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0088%" y="133" width="0.0802%" height="15" fill="rgb(250,28,16)" fg:x="1085" fg:w="1"/><text x="87.2588%" y="143.50"></text></g><g><title>plugins_core::tools::contained_by (3 samples, 0.24%)</title><rect x="86.9286%" y="453" width="0.2406%" height="15" fill="rgb(227,128,26)" fg:x="1084" fg:w="3"/><text x="87.1786%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.0890%" y="437" width="0.0802%" height="15" fill="rgb(248,66,7)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.0890%" y="421" width="0.0802%" height="15" fill="rgb(215,124,51)" fg:x="1086" fg:w="1"/><text x="87.3390%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="87.1692%" y="437" width="0.0802%" height="15" fill="rgb(207,91,1)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.1692%" y="421" width="0.0802%" height="15" fill="rgb(217,207,38)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.1692%" y="405" width="0.0802%" height="15" fill="rgb(240,118,9)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="87.1692%" y="389" width="0.0802%" height="15" fill="rgb(224,147,4)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="87.1692%" y="373" width="0.0802%" height="15" fill="rgb(205,105,13)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.1692%" y="357" width="0.0802%" height="15" fill="rgb(251,78,39)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.1692%" y="341" width="0.0802%" height="15" fill="rgb(225,60,44)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1692%" y="325" width="0.0802%" height="15" fill="rgb(221,228,40)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.1692%" y="309" width="0.0802%" height="15" fill="rgb(215,104,30)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1692%" y="293" width="0.0802%" height="15" fill="rgb(206,183,3)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.1692%" y="277" width="0.0802%" height="15" fill="rgb(236,199,25)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.1692%" y="261" width="0.0802%" height="15" fill="rgb(230,107,29)" fg:x="1087" fg:w="1"/><text x="87.4192%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="87.2494%" y="437" width="0.0802%" height="15" fill="rgb(216,12,37)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity_ref::EntityRef&gt; (1 samples, 0.08%)</title><rect x="87.2494%" y="421" width="0.0802%" height="15" fill="rgb(238,165,28)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2494%" y="405" width="0.0802%" height="15" fill="rgb(226,173,5)" fg:x="1088" fg:w="1"/><text x="87.4994%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (8 samples, 0.64%)</title><rect x="86.8484%" y="469" width="0.6415%" height="15" fill="rgb(229,9,37)" fg:x="1083" fg:w="8"/><text x="87.0984%" y="479.50"></text></g><g><title>plugins_core::tools::occupied_by (4 samples, 0.32%)</title><rect x="87.1692%" y="453" width="0.3208%" height="15" fill="rgb(252,194,43)" fg:x="1087" fg:w="4"/><text x="87.4192%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="87.3296%" y="437" width="0.1604%" height="15" fill="rgb(215,58,45)" fg:x="1089" fg:w="2"/><text x="87.5796%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4098%" y="421" width="0.0802%" height="15" fill="rgb(218,34,51)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="405" width="0.0802%" height="15" fill="rgb(230,104,27)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.4098%" y="389" width="0.0802%" height="15" fill="rgb(250,9,6)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="373" width="0.0802%" height="15" fill="rgb(245,10,16)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.4098%" y="357" width="0.0802%" height="15" fill="rgb(227,182,27)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="341" width="0.0802%" height="15" fill="rgb(225,91,37)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4098%" y="325" width="0.0802%" height="15" fill="rgb(240,16,41)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.4098%" y="309" width="0.0802%" height="15" fill="rgb(214,108,54)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.4098%" y="293" width="0.0802%" height="15" fill="rgb(253,65,28)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.4098%" y="277" width="0.0802%" height="15" fill="rgb(246,105,4)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.4098%" y="261" width="0.0802%" height="15" fill="rgb(223,163,37)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.4098%" y="245" width="0.0802%" height="15" fill="rgb(206,202,31)" fg:x="1090" fg:w="1"/><text x="87.6598%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.4900%" y="453" width="0.0802%" height="15" fill="rgb(241,202,54)" fg:x="1091" fg:w="1"/><text x="87.7400%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.80%)</title><rect x="86.8484%" y="501" width="0.8019%" height="15" fill="rgb(220,22,45)" fg:x="1083" fg:w="10"/><text x="87.0984%" y="511.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (10 samples, 0.80%)</title><rect x="86.8484%" y="485" width="0.8019%" height="15" fill="rgb(234,215,40)" fg:x="1083" fg:w="10"/><text x="87.0984%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="87.4900%" y="469" width="0.1604%" height="15" fill="rgb(220,3,5)" fg:x="1091" fg:w="2"/><text x="87.7400%" y="479.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="87.5702%" y="453" width="0.0802%" height="15" fill="rgb(210,8,15)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="463.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="87.5702%" y="437" width="0.0802%" height="15" fill="rgb(218,113,45)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="87.5702%" y="421" width="0.0802%" height="15" fill="rgb(249,208,10)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.5702%" y="405" width="0.0802%" height="15" fill="rgb(250,145,17)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="415.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.5702%" y="389" width="0.0802%" height="15" fill="rgb(254,24,13)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5702%" y="373" width="0.0802%" height="15" fill="rgb(244,36,15)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5702%" y="357" width="0.0802%" height="15" fill="rgb(228,168,26)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.5702%" y="341" width="0.0802%" height="15" fill="rgb(214,145,10)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5702%" y="325" width="0.0802%" height="15" fill="rgb(232,59,25)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5702%" y="309" width="0.0802%" height="15" fill="rgb(254,181,2)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.5702%" y="293" width="0.0802%" height="15" fill="rgb(221,139,49)" fg:x="1092" fg:w="1"/><text x="87.8202%" y="303.50"></text></g><g><title>plugins_core::library::actions::reply_ok (1 samples, 0.08%)</title><rect x="87.6504%" y="501" width="0.0802%" height="15" fill="rgb(235,84,36)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="511.50"></text></g><g><title>&lt;replies::CarryingEvent as replies::ToTaggedJson&gt;::to_tagged_json (1 samples, 0.08%)</title><rect x="87.6504%" y="485" width="0.0802%" height="15" fill="rgb(254,32,49)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="495.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::CarryingEvent&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6504%" y="469" width="0.0802%" height="15" fill="rgb(214,136,49)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeStructVariant as serde::ser::SerializeStructVariant&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6504%" y="453" width="0.0802%" height="15" fill="rgb(206,113,54)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="463.50"></text></g><g><title>replies::_::&lt;impl serde::ser::Serialize for replies::ObservedEntity&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6504%" y="437" width="0.0802%" height="15" fill="rgb(226,78,17)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6504%" y="421" width="0.0802%" height="15" fill="rgb(249,189,19)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="87.6504%" y="405" width="0.0802%" height="15" fill="rgb(211,82,26)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="87.6504%" y="389" width="0.0802%" height="15" fill="rgb(206,131,52)" fg:x="1093" fg:w="1"/><text x="87.9004%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.7306%" y="453" width="0.0802%" height="15" fill="rgb(223,51,24)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7306%" y="437" width="0.0802%" height="15" fill="rgb(235,93,36)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="421" width="0.0802%" height="15" fill="rgb(219,118,14)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="405" width="0.0802%" height="15" fill="rgb(240,145,10)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.7306%" y="389" width="0.0802%" height="15" fill="rgb(241,104,15)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.7306%" y="373" width="0.0802%" height="15" fill="rgb(248,117,21)" fg:x="1094" fg:w="1"/><text x="87.9806%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.8107%" y="421" width="0.0802%" height="15" fill="rgb(250,184,34)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8107%" y="405" width="0.0802%" height="15" fill="rgb(218,169,23)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.8107%" y="389" width="0.0802%" height="15" fill="rgb(214,33,53)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.8107%" y="373" width="0.0802%" height="15" fill="rgb(239,78,4)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.8107%" y="357" width="0.0802%" height="15" fill="rgb(250,25,23)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.8107%" y="341" width="0.0802%" height="15" fill="rgb(220,205,51)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="87.8107%" y="325" width="0.0802%" height="15" fill="rgb(252,115,2)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.8107%" y="309" width="0.0802%" height="15" fill="rgb(222,106,48)" fg:x="1095" fg:w="1"/><text x="88.0607%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.7306%" y="485" width="0.2406%" height="15" fill="rgb(225,77,33)" fg:x="1094" fg:w="3"/><text x="87.9806%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.7306%" y="469" width="0.2406%" height="15" fill="rgb(250,135,2)" fg:x="1094" fg:w="3"/><text x="87.9806%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.8107%" y="453" width="0.1604%" height="15" fill="rgb(221,217,54)" fg:x="1095" fg:w="2"/><text x="88.0607%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.8107%" y="437" width="0.1604%" height="15" fill="rgb(233,12,6)" fg:x="1095" fg:w="2"/><text x="88.0607%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.8909%" y="421" width="0.0802%" height="15" fill="rgb(251,10,27)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8909%" y="405" width="0.0802%" height="15" fill="rgb(214,20,35)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.8909%" y="389" width="0.0802%" height="15" fill="rgb(249,13,18)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.8909%" y="373" width="0.0802%" height="15" fill="rgb(251,115,18)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="87.8909%" y="357" width="0.0802%" height="15" fill="rgb(219,91,11)" fg:x="1096" fg:w="1"/><text x="88.1409%" y="367.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="87.9711%" y="453" width="0.2406%" height="15" fill="rgb(238,130,14)" fg:x="1097" fg:w="3"/><text x="88.2211%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.9711%" y="437" width="0.2406%" height="15" fill="rgb(216,197,46)" fg:x="1097" fg:w="3"/><text x="88.2211%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="87.9711%" y="421" width="0.2406%" height="15" fill="rgb(239,113,46)" fg:x="1097" fg:w="3"/><text x="88.2211%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="87.9711%" y="405" width="0.2406%" height="15" fill="rgb(220,76,52)" fg:x="1097" fg:w="3"/><text x="88.2211%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1315%" y="389" width="0.0802%" height="15" fill="rgb(247,167,28)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1315%" y="373" width="0.0802%" height="15" fill="rgb(228,6,44)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1315%" y="357" width="0.0802%" height="15" fill="rgb(214,75,23)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1315%" y="341" width="0.0802%" height="15" fill="rgb(241,211,28)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1315%" y="325" width="0.0802%" height="15" fill="rgb(216,147,39)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1315%" y="309" width="0.0802%" height="15" fill="rgb(237,121,45)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.1315%" y="293" width="0.0802%" height="15" fill="rgb(214,115,15)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.1315%" y="277" width="0.0802%" height="15" fill="rgb(253,132,27)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.1315%" y="261" width="0.0802%" height="15" fill="rgb(222,56,1)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.1315%" y="245" width="0.0802%" height="15" fill="rgb(216,99,46)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.1315%" y="229" width="0.0802%" height="15" fill="rgb(232,1,9)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1315%" y="213" width="0.0802%" height="15" fill="rgb(215,41,52)" fg:x="1099" fg:w="1"/><text x="88.3815%" y="223.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="87.9711%" y="485" width="0.4010%" height="15" fill="rgb(223,107,41)" fg:x="1097" fg:w="5"/><text x="88.2211%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="87.9711%" y="469" width="0.4010%" height="15" fill="rgb(208,151,32)" fg:x="1097" fg:w="5"/><text x="88.2211%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.2117%" y="453" width="0.1604%" height="15" fill="rgb(229,32,3)" fg:x="1100" fg:w="2"/><text x="88.4617%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.2117%" y="437" width="0.1604%" height="15" fill="rgb(234,186,36)" fg:x="1100" fg:w="2"/><text x="88.4617%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="88.2919%" y="421" width="0.0802%" height="15" fill="rgb(216,9,5)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="88.2919%" y="405" width="0.0802%" height="15" fill="rgb(226,151,21)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="88.2919%" y="389" width="0.0802%" height="15" fill="rgb(210,130,28)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.2919%" y="373" width="0.0802%" height="15" fill="rgb(239,58,31)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.2919%" y="357" width="0.0802%" height="15" fill="rgb(213,14,0)" fg:x="1101" fg:w="1"/><text x="88.5419%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.3721%" y="453" width="0.1604%" height="15" fill="rgb(228,97,38)" fg:x="1102" fg:w="2"/><text x="88.6221%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="437" width="0.0802%" height="15" fill="rgb(248,9,13)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4523%" y="421" width="0.0802%" height="15" fill="rgb(233,149,17)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="405" width="0.0802%" height="15" fill="rgb(233,127,53)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4523%" y="389" width="0.0802%" height="15" fill="rgb(207,120,37)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.4523%" y="373" width="0.0802%" height="15" fill="rgb(210,65,38)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.4523%" y="357" width="0.0802%" height="15" fill="rgb(229,206,39)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.4523%" y="341" width="0.0802%" height="15" fill="rgb(237,11,35)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.4523%" y="325" width="0.0802%" height="15" fill="rgb(237,159,38)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.4523%" y="309" width="0.0802%" height="15" fill="rgb(239,79,36)" fg:x="1103" fg:w="1"/><text x="88.7023%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="88.5325%" y="453" width="0.0802%" height="15" fill="rgb(231,163,51)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.5325%" y="437" width="0.0802%" height="15" fill="rgb(226,68,29)" fg:x="1104" fg:w="1"/><text x="88.7825%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6127%" y="421" width="0.0802%" height="15" fill="rgb(250,192,3)" fg:x="1105" fg:w="1"/><text x="88.8627%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6929%" y="421" width="0.0802%" height="15" fill="rgb(206,11,13)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.6929%" y="405" width="0.0802%" height="15" fill="rgb(234,128,26)" fg:x="1106" fg:w="1"/><text x="88.9429%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.7731%" y="373" width="0.0802%" height="15" fill="rgb(226,134,12)" fg:x="1107" fg:w="1"/><text x="89.0231%" y="383.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="88.3721%" y="485" width="0.5613%" height="15" fill="rgb(240,60,15)" fg:x="1102" fg:w="7"/><text x="88.6221%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="88.3721%" y="469" width="0.5613%" height="15" fill="rgb(222,112,11)" fg:x="1102" fg:w="7"/><text x="88.6221%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="88.6127%" y="453" width="0.3208%" height="15" fill="rgb(231,207,44)" fg:x="1105" fg:w="4"/><text x="88.8627%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="88.6127%" y="437" width="0.3208%" height="15" fill="rgb(250,222,54)" fg:x="1105" fg:w="4"/><text x="88.8627%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="88.7731%" y="421" width="0.1604%" height="15" fill="rgb(243,223,15)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="431.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="88.7731%" y="405" width="0.1604%" height="15" fill="rgb(239,2,5)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="415.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="88.7731%" y="389" width="0.1604%" height="15" fill="rgb(241,83,27)" fg:x="1107" fg:w="2"/><text x="89.0231%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8532%" y="373" width="0.0802%" height="15" fill="rgb(223,175,51)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8532%" y="357" width="0.0802%" height="15" fill="rgb(209,11,47)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="88.8532%" y="341" width="0.0802%" height="15" fill="rgb(249,60,43)" fg:x="1108" fg:w="1"/><text x="89.1032%" y="351.50"></text></g><g><title>engine::session::Session::load_entity (1 samples, 0.08%)</title><rect x="88.9334%" y="389" width="0.0802%" height="15" fill="rgb(244,84,47)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.9334%" y="373" width="0.0802%" height="15" fill="rgb(241,110,24)" fg:x="1109" fg:w="1"/><text x="89.1834%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0136%" y="341" width="0.0802%" height="15" fill="rgb(236,79,1)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0136%" y="325" width="0.0802%" height="15" fill="rgb(210,152,4)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.0136%" y="309" width="0.0802%" height="15" fill="rgb(218,71,19)" fg:x="1110" fg:w="1"/><text x="89.2636%" y="319.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="88.9334%" y="469" width="0.2406%" height="15" fill="rgb(207,161,51)" fg:x="1109" fg:w="3"/><text x="89.1834%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="88.9334%" y="453" width="0.2406%" height="15" fill="rgb(219,84,54)" fg:x="1109" fg:w="3"/><text x="89.1834%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="88.9334%" y="437" width="0.2406%" height="15" fill="rgb(243,172,34)" fg:x="1109" fg:w="3"/><text x="89.1834%" y="447.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (3 samples, 0.24%)</title><rect x="88.9334%" y="421" width="0.2406%" height="15" fill="rgb(233,181,1)" fg:x="1109" fg:w="3"/><text x="89.1834%" y="431.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (3 samples, 0.24%)</title><rect x="88.9334%" y="405" width="0.2406%" height="15" fill="rgb(236,21,18)" fg:x="1109" fg:w="3"/><text x="89.1834%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="89.0136%" y="389" width="0.1604%" height="15" fill="rgb(244,165,15)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="89.0136%" y="373" width="0.1604%" height="15" fill="rgb(235,75,19)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="383.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.0136%" y="357" width="0.1604%" height="15" fill="rgb(217,229,29)" fg:x="1110" fg:w="2"/><text x="89.2636%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0938%" y="341" width="0.0802%" height="15" fill="rgb(250,200,19)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="89.0938%" y="325" width="0.0802%" height="15" fill="rgb(218,195,36)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.0938%" y="309" width="0.0802%" height="15" fill="rgb(206,183,32)" fg:x="1111" fg:w="1"/><text x="89.3438%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.1740%" y="277" width="0.0802%" height="15" fill="rgb(235,151,53)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.1740%" y="261" width="0.0802%" height="15" fill="rgb(244,120,37)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.1740%" y="245" width="0.0802%" height="15" fill="rgb(209,96,41)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.1740%" y="229" width="0.0802%" height="15" fill="rgb(208,229,20)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.1740%" y="213" width="0.0802%" height="15" fill="rgb(208,153,33)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.1740%" y="197" width="0.0802%" height="15" fill="rgb(223,196,8)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1740%" y="181" width="0.0802%" height="15" fill="rgb(241,75,49)" fg:x="1112" fg:w="1"/><text x="89.4240%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1740%" y="405" width="0.1604%" height="15" fill="rgb(212,52,42)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1740%" y="389" width="0.1604%" height="15" fill="rgb(220,148,43)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.1740%" y="373" width="0.1604%" height="15" fill="rgb(228,88,15)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.1740%" y="357" width="0.1604%" height="15" fill="rgb(213,87,14)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.1740%" y="341" width="0.1604%" height="15" fill="rgb(220,198,31)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.1740%" y="325" width="0.1604%" height="15" fill="rgb(223,165,38)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.1740%" y="309" width="0.1604%" height="15" fill="rgb(247,56,48)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.1740%" y="293" width="0.1604%" height="15" fill="rgb(222,150,13)" fg:x="1112" fg:w="2"/><text x="89.4240%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.2542%" y="277" width="0.0802%" height="15" fill="rgb(218,214,11)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.2542%" y="261" width="0.0802%" height="15" fill="rgb(246,111,16)" fg:x="1113" fg:w="1"/><text x="89.5042%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3344%" y="341" width="0.0802%" height="15" fill="rgb(250,127,26)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="89.3344%" y="325" width="0.0802%" height="15" fill="rgb(237,156,23)" fg:x="1114" fg:w="1"/><text x="89.5844%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.56%)</title><rect x="88.9334%" y="485" width="0.5613%" height="15" fill="rgb(215,143,51)" fg:x="1109" fg:w="7"/><text x="89.1834%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (4 samples, 0.32%)</title><rect x="89.1740%" y="469" width="0.3208%" height="15" fill="rgb(209,119,39)" fg:x="1112" fg:w="4"/><text x="89.4240%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="89.1740%" y="453" width="0.3208%" height="15" fill="rgb(228,181,16)" fg:x="1112" fg:w="4"/><text x="89.4240%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="89.1740%" y="437" width="0.3208%" height="15" fill="rgb(236,113,51)" fg:x="1112" fg:w="4"/><text x="89.4240%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.1740%" y="421" width="0.3208%" height="15" fill="rgb(223,132,1)" fg:x="1112" fg:w="4"/><text x="89.4240%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.3344%" y="405" width="0.1604%" height="15" fill="rgb(227,4,54)" fg:x="1114" fg:w="2"/><text x="89.5844%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.3344%" y="389" width="0.1604%" height="15" fill="rgb(254,72,52)" fg:x="1114" fg:w="2"/><text x="89.5844%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="89.3344%" y="373" width="0.1604%" height="15" fill="rgb(252,104,52)" fg:x="1114" fg:w="2"/><text x="89.5844%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.3344%" y="357" width="0.1604%" height="15" fill="rgb(251,146,26)" fg:x="1114" fg:w="2"/><text x="89.5844%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.4146%" y="341" width="0.0802%" height="15" fill="rgb(214,146,19)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.4146%" y="325" width="0.0802%" height="15" fill="rgb(242,222,1)" fg:x="1115" fg:w="1"/><text x="89.6646%" y="335.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.4948%" y="437" width="0.0802%" height="15" fill="rgb(220,178,32)" fg:x="1116" fg:w="1"/><text x="89.7448%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.5750%" y="405" width="0.0802%" height="15" fill="rgb(220,50,48)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.5750%" y="389" width="0.0802%" height="15" fill="rgb(207,117,22)" fg:x="1117" fg:w="1"/><text x="89.8250%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (1 samples, 0.08%)</title><rect x="89.6552%" y="405" width="0.0802%" height="15" fill="rgb(247,195,50)" fg:x="1118" fg:w="1"/><text x="89.9052%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.32%)</title><rect x="89.4948%" y="469" width="0.3208%" height="15" fill="rgb(206,50,39)" fg:x="1116" fg:w="4"/><text x="89.7448%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.4948%" y="453" width="0.3208%" height="15" fill="rgb(236,141,29)" fg:x="1116" fg:w="4"/><text x="89.7448%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="89.5750%" y="437" width="0.2406%" height="15" fill="rgb(247,18,44)" fg:x="1117" fg:w="3"/><text x="89.8250%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="89.5750%" y="421" width="0.2406%" height="15" fill="rgb(243,179,46)" fg:x="1117" fg:w="3"/><text x="89.8250%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.7354%" y="405" width="0.0802%" height="15" fill="rgb(241,178,53)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.7354%" y="389" width="0.0802%" height="15" fill="rgb(236,100,9)" fg:x="1119" fg:w="1"/><text x="89.9854%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (45 samples, 3.61%)</title><rect x="86.2871%" y="517" width="3.6087%" height="15" fill="rgb(208,180,29)" fg:x="1076" fg:w="45"/><text x="86.5371%" y="527.50">&lt;plu..</text></g><g><title>plugins_core::location::change_location (27 samples, 2.17%)</title><rect x="87.7306%" y="501" width="2.1652%" height="15" fill="rgb(241,204,36)" fg:x="1094" fg:w="27"/><text x="87.9806%" y="511.50">p..</text></g><g><title>plugins_core::location::Location::set (5 samples, 0.40%)</title><rect x="89.4948%" y="485" width="0.4010%" height="15" fill="rgb(248,106,5)" fg:x="1116" fg:w="5"/><text x="89.7448%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="89.8156%" y="469" width="0.0802%" height="15" fill="rgb(245,13,49)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8156%" y="453" width="0.0802%" height="15" fill="rgb(221,209,34)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.8156%" y="437" width="0.0802%" height="15" fill="rgb(224,83,31)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="89.8156%" y="421" width="0.0802%" height="15" fill="rgb(218,63,22)" fg:x="1120" fg:w="1"/><text x="90.0656%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.9759%" y="437" width="0.0802%" height="15" fill="rgb(214,167,5)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9759%" y="421" width="0.0802%" height="15" fill="rgb(243,13,0)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.9759%" y="405" width="0.0802%" height="15" fill="rgb(237,20,46)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.9759%" y="389" width="0.0802%" height="15" fill="rgb(240,94,48)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.9759%" y="373" width="0.0802%" height="15" fill="rgb(205,160,17)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.9759%" y="357" width="0.0802%" height="15" fill="rgb(234,42,33)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9759%" y="341" width="0.0802%" height="15" fill="rgb(215,166,5)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.9759%" y="325" width="0.0802%" height="15" fill="rgb(215,9,6)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.9759%" y="309" width="0.0802%" height="15" fill="rgb(212,53,6)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.9759%" y="293" width="0.0802%" height="15" fill="rgb(249,157,19)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.9759%" y="277" width="0.0802%" height="15" fill="rgb(222,212,45)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.9759%" y="261" width="0.0802%" height="15" fill="rgb(232,155,17)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.9759%" y="245" width="0.0802%" height="15" fill="rgb(212,159,50)" fg:x="1122" fg:w="1"/><text x="90.2259%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.9759%" y="453" width="0.1604%" height="15" fill="rgb(247,71,8)" fg:x="1122" fg:w="2"/><text x="90.2259%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.0561%" y="437" width="0.0802%" height="15" fill="rgb(239,128,29)" fg:x="1123" fg:w="1"/><text x="90.3061%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (4 samples, 0.32%)</title><rect x="89.8957%" y="485" width="0.3208%" height="15" fill="rgb(227,117,11)" fg:x="1121" fg:w="4"/><text x="90.1457%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="89.8957%" y="469" width="0.3208%" height="15" fill="rgb(247,183,4)" fg:x="1121" fg:w="4"/><text x="90.1457%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.1363%" y="453" width="0.0802%" height="15" fill="rgb(211,161,41)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.1363%" y="437" width="0.0802%" height="15" fill="rgb(250,157,52)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.1363%" y="421" width="0.0802%" height="15" fill="rgb(249,118,26)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1363%" y="405" width="0.0802%" height="15" fill="rgb(234,52,37)" fg:x="1124" fg:w="1"/><text x="90.3863%" y="415.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="90.2165%" y="469" width="0.0802%" height="15" fill="rgb(237,188,45)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.2165%" y="453" width="0.0802%" height="15" fill="rgb(241,3,40)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="90.2165%" y="437" width="0.0802%" height="15" fill="rgb(246,192,7)" fg:x="1125" fg:w="1"/><text x="90.4665%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.2967%" y="453" width="0.1604%" height="15" fill="rgb(206,168,17)" fg:x="1126" fg:w="2"/><text x="90.5467%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.2967%" y="437" width="0.1604%" height="15" fill="rgb(208,124,33)" fg:x="1126" fg:w="2"/><text x="90.5467%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.2967%" y="421" width="0.1604%" height="15" fill="rgb(226,186,11)" fg:x="1126" fg:w="2"/><text x="90.5467%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3769%" y="405" width="0.0802%" height="15" fill="rgb(218,223,1)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.3769%" y="389" width="0.0802%" height="15" fill="rgb(254,65,21)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.3769%" y="373" width="0.0802%" height="15" fill="rgb(239,63,32)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.3769%" y="357" width="0.0802%" height="15" fill="rgb(219,85,29)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.3769%" y="341" width="0.0802%" height="15" fill="rgb(246,74,32)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.3769%" y="325" width="0.0802%" height="15" fill="rgb(251,20,52)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.3769%" y="309" width="0.0802%" height="15" fill="rgb(222,160,46)" fg:x="1127" fg:w="1"/><text x="90.6269%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="90.2165%" y="485" width="0.3208%" height="15" fill="rgb(230,68,24)" fg:x="1125" fg:w="4"/><text x="90.4665%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.2967%" y="469" width="0.2406%" height="15" fill="rgb(233,83,32)" fg:x="1126" fg:w="3"/><text x="90.5467%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.4571%" y="453" width="0.0802%" height="15" fill="rgb(253,79,36)" fg:x="1128" fg:w="1"/><text x="90.7071%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.4571%" y="437" width="0.0802%" height="15" fill="rgb(224,125,51)" fg:x="1128" fg:w="1"/><text x="90.7071%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (9 samples, 0.72%)</title><rect x="89.8957%" y="501" width="0.7217%" height="15" fill="rgb(254,158,3)" fg:x="1121" fg:w="9"/><text x="90.1457%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::has_scope (1 samples, 0.08%)</title><rect x="90.5373%" y="485" width="0.0802%" height="15" fill="rgb(243,226,3)" fg:x="1129" fg:w="1"/><text x="90.7873%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::finding::EntityRelationship&gt; (1 samples, 0.08%)</title><rect x="90.6175%" y="469" width="0.0802%" height="15" fill="rgb(208,37,10)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.6175%" y="453" width="0.0802%" height="15" fill="rgb(227,35,6)" fg:x="1130" fg:w="1"/><text x="90.8675%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8581%" y="453" width="0.0802%" height="15" fill="rgb(236,35,38)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8581%" y="437" width="0.0802%" height="15" fill="rgb(247,165,26)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8581%" y="421" width="0.0802%" height="15" fill="rgb(251,131,20)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.8581%" y="405" width="0.0802%" height="15" fill="rgb(248,168,52)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.8581%" y="389" width="0.0802%" height="15" fill="rgb(241,220,45)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.8581%" y="373" width="0.0802%" height="15" fill="rgb(240,85,44)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.8581%" y="357" width="0.0802%" height="15" fill="rgb(223,69,47)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.8581%" y="341" width="0.0802%" height="15" fill="rgb(221,209,17)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.8581%" y="325" width="0.0802%" height="15" fill="rgb(224,194,24)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.8581%" y="309" width="0.0802%" height="15" fill="rgb(249,43,24)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.8581%" y="293" width="0.0802%" height="15" fill="rgb(245,78,29)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.8581%" y="277" width="0.0802%" height="15" fill="rgb(241,167,34)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8581%" y="261" width="0.0802%" height="15" fill="rgb(225,91,27)" fg:x="1133" fg:w="1"/><text x="91.1081%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="357" width="0.0802%" height="15" fill="rgb(249,82,49)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="341" width="0.0802%" height="15" fill="rgb(215,90,36)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.9383%" y="325" width="0.0802%" height="15" fill="rgb(209,128,1)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9383%" y="309" width="0.0802%" height="15" fill="rgb(233,184,1)" fg:x="1134" fg:w="1"/><text x="91.1883%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="90.9383%" y="389" width="0.2406%" height="15" fill="rgb(240,59,32)" fg:x="1134" fg:w="3"/><text x="91.1883%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="90.9383%" y="373" width="0.2406%" height="15" fill="rgb(249,163,0)" fg:x="1134" fg:w="3"/><text x="91.1883%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.0184%" y="357" width="0.1604%" height="15" fill="rgb(249,220,13)" fg:x="1135" fg:w="2"/><text x="91.2684%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.0184%" y="341" width="0.1604%" height="15" fill="rgb(235,127,52)" fg:x="1135" fg:w="2"/><text x="91.2684%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.0986%" y="325" width="0.0802%" height="15" fill="rgb(229,172,26)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0986%" y="309" width="0.0802%" height="15" fill="rgb(217,37,29)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.0986%" y="293" width="0.0802%" height="15" fill="rgb(208,66,47)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.0986%" y="277" width="0.0802%" height="15" fill="rgb(221,99,19)" fg:x="1136" fg:w="1"/><text x="91.3486%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.1788%" y="293" width="0.0802%" height="15" fill="rgb(214,149,49)" fg:x="1137" fg:w="1"/><text x="91.4288%" y="303.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.40%)</title><rect x="90.9383%" y="437" width="0.4010%" height="15" fill="rgb(229,91,37)" fg:x="1134" fg:w="5"/><text x="91.1883%" y="447.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (5 samples, 0.40%)</title><rect x="90.9383%" y="421" width="0.4010%" height="15" fill="rgb(207,159,48)" fg:x="1134" fg:w="5"/><text x="91.1883%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="90.9383%" y="405" width="0.4010%" height="15" fill="rgb(209,125,46)" fg:x="1134" fg:w="5"/><text x="91.1883%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="91.1788%" y="389" width="0.1604%" height="15" fill="rgb(211,188,18)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="399.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="91.1788%" y="373" width="0.1604%" height="15" fill="rgb(207,203,34)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.1788%" y="357" width="0.1604%" height="15" fill="rgb(245,182,16)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1788%" y="341" width="0.1604%" height="15" fill="rgb(210,66,30)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="91.1788%" y="325" width="0.1604%" height="15" fill="rgb(230,110,14)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.1788%" y="309" width="0.1604%" height="15" fill="rgb(242,198,32)" fg:x="1137" fg:w="2"/><text x="91.4288%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="91.2590%" y="293" width="0.0802%" height="15" fill="rgb(213,45,23)" fg:x="1138" fg:w="1"/><text x="91.5090%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.2590%" y="277" width="0.0802%" height="15" fill="rgb(205,76,9)" fg:x="1138" fg:w="1"/><text x="91.5090%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="91.3392%" y="405" width="0.2406%" height="15" fill="rgb(250,200,25)" fg:x="1139" fg:w="3"/><text x="91.5892%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="91.3392%" y="389" width="0.2406%" height="15" fill="rgb(221,161,23)" fg:x="1139" fg:w="3"/><text x="91.5892%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="91.4194%" y="373" width="0.1604%" height="15" fill="rgb(226,135,48)" fg:x="1140" fg:w="2"/><text x="91.6694%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="91.4194%" y="357" width="0.1604%" height="15" fill="rgb(228,33,6)" fg:x="1140" fg:w="2"/><text x="91.6694%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4996%" y="341" width="0.0802%" height="15" fill="rgb(237,224,9)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.4996%" y="325" width="0.0802%" height="15" fill="rgb(251,61,40)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.4996%" y="309" width="0.0802%" height="15" fill="rgb(220,222,2)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.4996%" y="293" width="0.0802%" height="15" fill="rgb(238,4,8)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.4996%" y="277" width="0.0802%" height="15" fill="rgb(240,153,3)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.4996%" y="261" width="0.0802%" height="15" fill="rgb(245,29,24)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.4996%" y="245" width="0.0802%" height="15" fill="rgb(231,220,37)" fg:x="1141" fg:w="1"/><text x="91.7496%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="91.5798%" y="373" width="0.0802%" height="15" fill="rgb(245,33,10)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5798%" y="357" width="0.0802%" height="15" fill="rgb(220,227,43)" fg:x="1142" fg:w="1"/><text x="91.8298%" y="367.50"></text></g><g><title>plugins_core::tools::contained_by (11 samples, 0.88%)</title><rect x="90.9383%" y="453" width="0.8821%" height="15" fill="rgb(215,183,54)" fg:x="1134" fg:w="11"/><text x="91.1883%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="91.3392%" y="437" width="0.4812%" height="15" fill="rgb(242,80,26)" fg:x="1139" fg:w="6"/><text x="91.5892%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="91.3392%" y="421" width="0.4812%" height="15" fill="rgb(206,172,49)" fg:x="1139" fg:w="6"/><text x="91.5892%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.5798%" y="405" width="0.2406%" height="15" fill="rgb(249,0,10)" fg:x="1142" fg:w="3"/><text x="91.8298%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.5798%" y="389" width="0.2406%" height="15" fill="rgb(246,171,19)" fg:x="1142" fg:w="3"/><text x="91.8298%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="91.6600%" y="373" width="0.1604%" height="15" fill="rgb(236,25,43)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="91.6600%" y="357" width="0.1604%" height="15" fill="rgb(225,146,20)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="91.6600%" y="341" width="0.1604%" height="15" fill="rgb(243,50,39)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.6600%" y="325" width="0.1604%" height="15" fill="rgb(239,153,27)" fg:x="1143" fg:w="2"/><text x="91.9100%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.7402%" y="309" width="0.0802%" height="15" fill="rgb(208,164,31)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7402%" y="293" width="0.0802%" height="15" fill="rgb(231,32,38)" fg:x="1144" fg:w="1"/><text x="91.9902%" y="303.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="91.8204%" y="437" width="0.0802%" height="15" fill="rgb(247,158,12)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.8204%" y="421" width="0.0802%" height="15" fill="rgb(254,126,16)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.8204%" y="405" width="0.0802%" height="15" fill="rgb(246,12,32)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="415.50"></text></g><g><title>&lt;kernel::model::entity_ref::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="91.8204%" y="389" width="0.0802%" height="15" fill="rgb(245,190,44)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="399.50"></text></g><g><title>kernel::model::entry::EntryResolver::entry (1 samples, 0.08%)</title><rect x="91.8204%" y="373" width="0.0802%" height="15" fill="rgb(253,148,49)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.8204%" y="357" width="0.0802%" height="15" fill="rgb(232,193,44)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="91.8204%" y="341" width="0.0802%" height="15" fill="rgb(212,67,50)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="91.8204%" y="325" width="0.0802%" height="15" fill="rgb(235,109,24)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8204%" y="309" width="0.0802%" height="15" fill="rgb(242,228,23)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.8204%" y="293" width="0.0802%" height="15" fill="rgb(232,48,19)" fg:x="1145" fg:w="1"/><text x="92.0704%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.9006%" y="405" width="0.0802%" height="15" fill="rgb(221,167,25)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.9006%" y="389" width="0.0802%" height="15" fill="rgb(220,29,38)" fg:x="1146" fg:w="1"/><text x="92.1506%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.0609%" y="373" width="0.0802%" height="15" fill="rgb(245,95,26)" fg:x="1148" fg:w="1"/><text x="92.3109%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1411%" y="293" width="0.0802%" height="15" fill="rgb(227,189,38)" fg:x="1149" fg:w="1"/><text x="92.3911%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (20 samples, 1.60%)</title><rect x="90.6977%" y="469" width="1.6038%" height="15" fill="rgb(231,212,22)" fg:x="1131" fg:w="20"/><text x="90.9477%" y="479.50"></text></g><g><title>plugins_core::tools::occupied_by (6 samples, 0.48%)</title><rect x="91.8204%" y="453" width="0.4812%" height="15" fill="rgb(246,25,46)" fg:x="1145" fg:w="6"/><text x="92.0704%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="91.9006%" y="437" width="0.4010%" height="15" fill="rgb(218,90,32)" fg:x="1146" fg:w="5"/><text x="92.1506%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="91.9006%" y="421" width="0.4010%" height="15" fill="rgb(207,89,34)" fg:x="1146" fg:w="5"/><text x="92.1506%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="91.9808%" y="405" width="0.3208%" height="15" fill="rgb(222,30,54)" fg:x="1147" fg:w="4"/><text x="92.2308%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="91.9808%" y="389" width="0.3208%" height="15" fill="rgb(224,229,32)" fg:x="1147" fg:w="4"/><text x="92.2308%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="92.1411%" y="373" width="0.1604%" height="15" fill="rgb(209,188,44)" fg:x="1149" fg:w="2"/><text x="92.3911%" y="383.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="92.1411%" y="357" width="0.1604%" height="15" fill="rgb(215,174,23)" fg:x="1149" fg:w="2"/><text x="92.3911%" y="367.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="92.1411%" y="341" width="0.1604%" height="15" fill="rgb(242,104,18)" fg:x="1149" fg:w="2"/><text x="92.3911%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.1411%" y="325" width="0.1604%" height="15" fill="rgb(240,173,53)" fg:x="1149" fg:w="2"/><text x="92.3911%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.1411%" y="309" width="0.1604%" height="15" fill="rgb(240,105,45)" fg:x="1149" fg:w="2"/><text x="92.3911%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="92.2213%" y="293" width="0.0802%" height="15" fill="rgb(252,164,29)" fg:x="1150" fg:w="1"/><text x="92.4713%" y="303.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="92.3015%" y="437" width="0.0802%" height="15" fill="rgb(217,17,6)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.3015%" y="421" width="0.0802%" height="15" fill="rgb(245,27,23)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="431.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.3015%" y="405" width="0.0802%" height="15" fill="rgb(239,73,33)" fg:x="1151" fg:w="1"/><text x="92.5515%" y="415.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="92.4619%" y="405" width="0.0802%" height="15" fill="rgb(209,140,21)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="92.4619%" y="389" width="0.0802%" height="15" fill="rgb(206,36,53)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4619%" y="373" width="0.0802%" height="15" fill="rgb(238,134,8)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4619%" y="357" width="0.0802%" height="15" fill="rgb(209,3,20)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4619%" y="341" width="0.0802%" height="15" fill="rgb(208,101,32)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4619%" y="325" width="0.0802%" height="15" fill="rgb(253,56,38)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4619%" y="309" width="0.0802%" height="15" fill="rgb(209,85,49)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4619%" y="293" width="0.0802%" height="15" fill="rgb(234,177,21)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4619%" y="277" width="0.0802%" height="15" fill="rgb(250,4,6)" fg:x="1153" fg:w="1"/><text x="92.7119%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 2.00%)</title><rect x="90.6175%" y="501" width="2.0048%" height="15" fill="rgb(240,153,10)" fg:x="1130" fg:w="25"/><text x="90.8675%" y="511.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::finder::Finder&gt;::find_item (25 samples, 2.00%)</title><rect x="90.6175%" y="485" width="2.0048%" height="15" fill="rgb(205,136,51)" fg:x="1130" fg:w="25"/><text x="90.8675%" y="495.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="92.3015%" y="469" width="0.3208%" height="15" fill="rgb(245,165,50)" fg:x="1151" fg:w="4"/><text x="92.5515%" y="479.50"></text></g><g><title>plugins_core::finding::matches_description (4 samples, 0.32%)</title><rect x="92.3015%" y="453" width="0.3208%" height="15" fill="rgb(211,28,10)" fg:x="1151" fg:w="4"/><text x="92.5515%" y="463.50"></text></g><g><title>plugins_core::finding::matches_string (3 samples, 0.24%)</title><rect x="92.3817%" y="437" width="0.2406%" height="15" fill="rgb(218,155,54)" fg:x="1152" fg:w="3"/><text x="92.6317%" y="447.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (3 samples, 0.24%)</title><rect x="92.3817%" y="421" width="0.2406%" height="15" fill="rgb(254,214,30)" fg:x="1152" fg:w="3"/><text x="92.6317%" y="431.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="92.5421%" y="405" width="0.0802%" height="15" fill="rgb(248,200,10)" fg:x="1154" fg:w="1"/><text x="92.7921%" y="415.50"></text></g><g><title>plugins_core::library::actions::reply_ok (2 samples, 0.16%)</title><rect x="92.6223%" y="501" width="0.1604%" height="15" fill="rgb(238,219,45)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (2 samples, 0.16%)</title><rect x="92.6223%" y="485" width="0.1604%" height="15" fill="rgb(227,35,34)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (2 samples, 0.16%)</title><rect x="92.6223%" y="469" width="0.1604%" height="15" fill="rgb(214,187,37)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="479.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="92.6223%" y="453" width="0.1604%" height="15" fill="rgb(247,164,44)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="92.6223%" y="437" width="0.1604%" height="15" fill="rgb(238,198,10)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="447.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (2 samples, 0.16%)</title><rect x="92.6223%" y="421" width="0.1604%" height="15" fill="rgb(213,69,8)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="92.6223%" y="405" width="0.1604%" height="15" fill="rgb(222,82,16)" fg:x="1155" fg:w="2"/><text x="92.8723%" y="415.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="92.7025%" y="389" width="0.0802%" height="15" fill="rgb(205,172,30)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="399.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="92.7025%" y="373" width="0.0802%" height="15" fill="rgb(227,39,8)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="92.7025%" y="357" width="0.0802%" height="15" fill="rgb(249,10,19)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.7025%" y="341" width="0.0802%" height="15" fill="rgb(205,158,53)" fg:x="1156" fg:w="1"/><text x="92.9525%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.7827%" y="421" width="0.0802%" height="15" fill="rgb(237,229,35)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.7827%" y="405" width="0.0802%" height="15" fill="rgb(238,129,14)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.7827%" y="389" width="0.0802%" height="15" fill="rgb(218,217,40)" fg:x="1157" fg:w="1"/><text x="93.0327%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="92.7827%" y="485" width="0.1604%" height="15" fill="rgb(221,187,9)" fg:x="1157" fg:w="2"/><text x="93.0327%" y="495.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="92.7827%" y="469" width="0.1604%" height="15" fill="rgb(214,108,19)" fg:x="1157" fg:w="2"/><text x="93.0327%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="92.7827%" y="453" width="0.1604%" height="15" fill="rgb(216,86,23)" fg:x="1157" fg:w="2"/><text x="93.0327%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="92.7827%" y="437" width="0.1604%" height="15" fill="rgb(209,116,23)" fg:x="1157" fg:w="2"/><text x="93.0327%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8629%" y="421" width="0.0802%" height="15" fill="rgb(222,185,40)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8629%" y="405" width="0.0802%" height="15" fill="rgb(238,150,2)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.8629%" y="389" width="0.0802%" height="15" fill="rgb(229,132,47)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8629%" y="373" width="0.0802%" height="15" fill="rgb(231,7,23)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.8629%" y="357" width="0.0802%" height="15" fill="rgb(235,12,37)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.8629%" y="341" width="0.0802%" height="15" fill="rgb(247,170,51)" fg:x="1158" fg:w="1"/><text x="93.1129%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9431%" y="453" width="0.0802%" height="15" fill="rgb(210,62,49)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9431%" y="437" width="0.0802%" height="15" fill="rgb(248,30,8)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.9431%" y="421" width="0.0802%" height="15" fill="rgb(252,11,2)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.9431%" y="405" width="0.0802%" height="15" fill="rgb(249,65,4)" fg:x="1159" fg:w="1"/><text x="93.1931%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="93.0233%" y="453" width="0.0802%" height="15" fill="rgb(217,219,7)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.0233%" y="437" width="0.0802%" height="15" fill="rgb(222,186,36)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.0233%" y="421" width="0.0802%" height="15" fill="rgb(247,184,5)" fg:x="1160" fg:w="1"/><text x="93.2733%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="92.9431%" y="485" width="0.2406%" height="15" fill="rgb(221,108,7)" fg:x="1159" fg:w="3"/><text x="93.1931%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="92.9431%" y="469" width="0.2406%" height="15" fill="rgb(209,208,22)" fg:x="1159" fg:w="3"/><text x="93.1931%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1034%" y="453" width="0.0802%" height="15" fill="rgb(247,106,21)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1034%" y="437" width="0.0802%" height="15" fill="rgb(223,2,44)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.1034%" y="421" width="0.0802%" height="15" fill="rgb(208,190,12)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.1034%" y="405" width="0.0802%" height="15" fill="rgb(250,221,0)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.1034%" y="389" width="0.0802%" height="15" fill="rgb(212,210,16)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.1034%" y="373" width="0.0802%" height="15" fill="rgb(212,224,21)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1034%" y="357" width="0.0802%" height="15" fill="rgb(206,186,54)" fg:x="1161" fg:w="1"/><text x="93.3534%" y="367.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="93.1836%" y="485" width="0.0802%" height="15" fill="rgb(213,211,25)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="93.1836%" y="469" width="0.0802%" height="15" fill="rgb(243,78,36)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;replies::Json&gt; (1 samples, 0.08%)</title><rect x="93.1836%" y="453" width="0.0802%" height="15" fill="rgb(236,105,24)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.1836%" y="437" width="0.0802%" height="15" fill="rgb(223,46,45)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="93.1836%" y="421" width="0.0802%" height="15" fill="rgb(249,65,35)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="93.1836%" y="405" width="0.0802%" height="15" fill="rgb(226,122,19)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="93.1836%" y="389" width="0.0802%" height="15" fill="rgb(253,17,37)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1836%" y="373" width="0.0802%" height="15" fill="rgb(223,138,24)" fg:x="1162" fg:w="1"/><text x="93.4336%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="93.2638%" y="437" width="0.1604%" height="15" fill="rgb(227,89,20)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.2638%" y="421" width="0.1604%" height="15" fill="rgb(239,140,41)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.2638%" y="405" width="0.1604%" height="15" fill="rgb(237,29,24)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.2638%" y="389" width="0.1604%" height="15" fill="rgb(212,123,27)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.2638%" y="373" width="0.1604%" height="15" fill="rgb(236,173,10)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.2638%" y="357" width="0.1604%" height="15" fill="rgb(244,17,3)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.2638%" y="341" width="0.1604%" height="15" fill="rgb(220,73,21)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="93.2638%" y="325" width="0.1604%" height="15" fill="rgb(220,187,17)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="93.2638%" y="309" width="0.1604%" height="15" fill="rgb(236,64,13)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="93.2638%" y="293" width="0.1604%" height="15" fill="rgb(214,111,25)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.2638%" y="277" width="0.1604%" height="15" fill="rgb(251,123,0)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="93.2638%" y="261" width="0.1604%" height="15" fill="rgb(210,8,32)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="93.2638%" y="245" width="0.1604%" height="15" fill="rgb(221,27,44)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="93.2638%" y="229" width="0.1604%" height="15" fill="rgb(233,207,54)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="93.2638%" y="213" width="0.1604%" height="15" fill="rgb(219,217,1)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="93.2638%" y="197" width="0.1604%" height="15" fill="rgb(236,150,15)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="207.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="93.2638%" y="181" width="0.1604%" height="15" fill="rgb(244,119,54)" fg:x="1163" fg:w="2"/><text x="93.5138%" y="191.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="93.4242%" y="421" width="0.0802%" height="15" fill="rgb(218,116,36)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="93.4242%" y="405" width="0.0802%" height="15" fill="rgb(215,42,32)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="93.4242%" y="389" width="0.0802%" height="15" fill="rgb(254,87,2)" fg:x="1165" fg:w="1"/><text x="93.6742%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5044%" y="405" width="0.0802%" height="15" fill="rgb(241,195,45)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5044%" y="389" width="0.0802%" height="15" fill="rgb(252,11,14)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5044%" y="373" width="0.0802%" height="15" fill="rgb(233,199,43)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5044%" y="357" width="0.0802%" height="15" fill="rgb(243,170,27)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5044%" y="341" width="0.0802%" height="15" fill="rgb(236,178,54)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.5044%" y="325" width="0.0802%" height="15" fill="rgb(230,38,12)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.5044%" y="309" width="0.0802%" height="15" fill="rgb(241,44,47)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.5044%" y="293" width="0.0802%" height="15" fill="rgb(218,99,12)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5044%" y="277" width="0.0802%" height="15" fill="rgb(211,48,36)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.5044%" y="261" width="0.0802%" height="15" fill="rgb(220,81,29)" fg:x="1166" fg:w="1"/><text x="93.7544%" y="271.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (5 samples, 0.40%)</title><rect x="93.2638%" y="485" width="0.4010%" height="15" fill="rgb(232,121,54)" fg:x="1163" fg:w="5"/><text x="93.5138%" y="495.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity_ref::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="93.2638%" y="469" width="0.4010%" height="15" fill="rgb(236,227,37)" fg:x="1163" fg:w="5"/><text x="93.5138%" y="479.50"></text></g><g><title>kernel::model::entity_ref::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="93.2638%" y="453" width="0.4010%" height="15" fill="rgb(207,43,26)" fg:x="1163" fg:w="5"/><text x="93.5138%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="93.4242%" y="437" width="0.2406%" height="15" fill="rgb(224,163,34)" fg:x="1165" fg:w="3"/><text x="93.6742%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.5044%" y="421" width="0.1604%" height="15" fill="rgb(228,127,11)" fg:x="1166" fg:w="2"/><text x="93.7544%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5846%" y="405" width="0.0802%" height="15" fill="rgb(215,32,51)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5846%" y="389" width="0.0802%" height="15" fill="rgb(206,180,37)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.5846%" y="373" width="0.0802%" height="15" fill="rgb(245,217,39)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5846%" y="357" width="0.0802%" height="15" fill="rgb(237,179,18)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.5846%" y="341" width="0.0802%" height="15" fill="rgb(248,177,3)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.5846%" y="325" width="0.0802%" height="15" fill="rgb(208,31,45)" fg:x="1167" fg:w="1"/><text x="93.8346%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6648%" y="469" width="0.0802%" height="15" fill="rgb(231,16,43)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6648%" y="453" width="0.0802%" height="15" fill="rgb(246,12,20)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6648%" y="437" width="0.0802%" height="15" fill="rgb(214,40,41)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6648%" y="421" width="0.0802%" height="15" fill="rgb(225,183,42)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6648%" y="405" width="0.0802%" height="15" fill="rgb(229,88,50)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6648%" y="389" width="0.0802%" height="15" fill="rgb(247,34,33)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6648%" y="373" width="0.0802%" height="15" fill="rgb(246,163,52)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6648%" y="357" width="0.0802%" height="15" fill="rgb(251,13,27)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6648%" y="341" width="0.0802%" height="15" fill="rgb(218,127,46)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6648%" y="325" width="0.0802%" height="15" fill="rgb(215,155,29)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6648%" y="309" width="0.0802%" height="15" fill="rgb(251,180,13)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6648%" y="293" width="0.0802%" height="15" fill="rgb(246,215,19)" fg:x="1168" fg:w="1"/><text x="93.9148%" y="303.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="93.6648%" y="485" width="0.1604%" height="15" fill="rgb(210,47,28)" fg:x="1168" fg:w="2"/><text x="93.9148%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="93.7450%" y="469" width="0.0802%" height="15" fill="rgb(231,175,40)" fg:x="1169" fg:w="1"/><text x="93.9950%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="93.8252%" y="469" width="0.0802%" height="15" fill="rgb(207,138,24)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.8252%" y="453" width="0.0802%" height="15" fill="rgb(216,44,38)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="463.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8252%" y="437" width="0.0802%" height="15" fill="rgb(206,81,53)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8252%" y="421" width="0.0802%" height="15" fill="rgb(246,139,21)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.8252%" y="405" width="0.0802%" height="15" fill="rgb(212,163,26)" fg:x="1170" fg:w="1"/><text x="94.0752%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (106 samples, 8.50%)</title><rect x="85.4852%" y="709" width="8.5004%" height="15" fill="rgb(223,82,35)" fg:x="1066" fg:w="106"/><text x="85.7352%" y="719.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::apply_middleware (106 samples, 8.50%)</title><rect x="85.4852%" y="693" width="8.5004%" height="15" fill="rgb(224,76,13)" fg:x="1066" fg:w="106"/><text x="85.7352%" y="703.50">kernel::plug..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (106 samples, 8.50%)</title><rect x="85.4852%" y="677" width="8.5004%" height="15" fill="rgb(240,2,40)" fg:x="1066" fg:w="106"/><text x="85.7352%" y="687.50">kernel::plug..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (106 samples, 8.50%)</title><rect x="85.4852%" y="661" width="8.5004%" height="15" fill="rgb(232,188,36)" fg:x="1066" fg:w="106"/><text x="85.7352%" y="671.50">&lt;engine::ses..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (97 samples, 7.78%)</title><rect x="86.2069%" y="645" width="7.7787%" height="15" fill="rgb(249,34,46)" fg:x="1075" fg:w="97"/><text x="86.4569%" y="655.50">kernel::plu..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (96 samples, 7.70%)</title><rect x="86.2871%" y="629" width="7.6985%" height="15" fill="rgb(226,99,19)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="639.50">&lt;plugins_dy..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (96 samples, 7.70%)</title><rect x="86.2871%" y="613" width="7.6985%" height="15" fill="rgb(207,78,52)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="623.50">kernel::plu..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (96 samples, 7.70%)</title><rect x="86.2871%" y="597" width="7.6985%" height="15" fill="rgb(241,119,8)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="607.50">core::ops::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (96 samples, 7.70%)</title><rect x="86.2871%" y="581" width="7.6985%" height="15" fill="rgb(238,31,9)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="591.50">kernel::plu..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (96 samples, 7.70%)</title><rect x="86.2871%" y="565" width="7.6985%" height="15" fill="rgb(223,165,6)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="575.50">core::ops::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (96 samples, 7.70%)</title><rect x="86.2871%" y="549" width="7.6985%" height="15" fill="rgb(227,228,21)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="559.50">&lt;alloc::box..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (96 samples, 7.70%)</title><rect x="86.2871%" y="533" width="7.6985%" height="15" fill="rgb(206,188,51)" fg:x="1076" fg:w="96"/><text x="86.5371%" y="543.50">&lt;engine::se..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (51 samples, 4.09%)</title><rect x="89.8957%" y="517" width="4.0898%" height="15" fill="rgb(225,207,23)" fg:x="1121" fg:w="51"/><text x="90.1457%" y="527.50">&lt;plu..</text></g><g><title>plugins_core::location::change_location (15 samples, 1.20%)</title><rect x="92.7827%" y="501" width="1.2029%" height="15" fill="rgb(232,197,54)" fg:x="1157" fg:w="15"/><text x="93.0327%" y="511.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="93.8252%" y="485" width="0.1604%" height="15" fill="rgb(229,149,21)" fg:x="1170" fg:w="2"/><text x="94.0752%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="93.9054%" y="469" width="0.0802%" height="15" fill="rgb(209,197,1)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="479.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="93.9054%" y="453" width="0.0802%" height="15" fill="rgb(227,82,17)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.9054%" y="437" width="0.0802%" height="15" fill="rgb(237,201,43)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="447.50"></text></g><g><title>kernel::model::entity_ref::_::&lt;impl serde::ser::Serialize for kernel::model::entity_ref::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="93.9054%" y="421" width="0.0802%" height="15" fill="rgb(221,91,37)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="93.9054%" y="405" width="0.0802%" height="15" fill="rgb(239,35,7)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.9054%" y="389" width="0.0802%" height="15" fill="rgb(234,145,45)" fg:x="1171" fg:w="1"/><text x="94.1554%" y="399.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="93.9856%" y="709" width="0.0802%" height="15" fill="rgb(214,151,47)" fg:x="1172" fg:w="1"/><text x="94.2356%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1460%" y="645" width="0.1604%" height="15" fill="rgb(248,62,54)" fg:x="1174" fg:w="2"/><text x="94.3960%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2261%" y="629" width="0.0802%" height="15" fill="rgb(236,99,21)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2261%" y="613" width="0.0802%" height="15" fill="rgb(223,94,43)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2261%" y="597" width="0.0802%" height="15" fill="rgb(214,66,6)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.2261%" y="581" width="0.0802%" height="15" fill="rgb(231,152,46)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2261%" y="565" width="0.0802%" height="15" fill="rgb(254,0,48)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2261%" y="549" width="0.0802%" height="15" fill="rgb(225,136,42)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.2261%" y="533" width="0.0802%" height="15" fill="rgb(231,194,28)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.2261%" y="517" width="0.0802%" height="15" fill="rgb(248,141,22)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.2261%" y="501" width="0.0802%" height="15" fill="rgb(222,133,1)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2261%" y="485" width="0.0802%" height="15" fill="rgb(222,50,8)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.2261%" y="469" width="0.0802%" height="15" fill="rgb(215,67,27)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.2261%" y="453" width="0.0802%" height="15" fill="rgb(220,102,37)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.2261%" y="437" width="0.0802%" height="15" fill="rgb(222,64,25)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.2261%" y="421" width="0.0802%" height="15" fill="rgb(215,40,16)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.2261%" y="405" width="0.0802%" height="15" fill="rgb(252,171,3)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.2261%" y="389" width="0.0802%" height="15" fill="rgb(252,199,51)" fg:x="1175" fg:w="1"/><text x="94.4761%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3063%" y="549" width="0.0802%" height="15" fill="rgb(244,42,10)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3063%" y="533" width="0.0802%" height="15" fill="rgb(243,169,37)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3063%" y="517" width="0.0802%" height="15" fill="rgb(241,140,9)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3063%" y="501" width="0.0802%" height="15" fill="rgb(241,66,40)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3063%" y="485" width="0.0802%" height="15" fill="rgb(220,50,41)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3063%" y="469" width="0.0802%" height="15" fill="rgb(214,104,9)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3063%" y="453" width="0.0802%" height="15" fill="rgb(241,227,25)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3063%" y="437" width="0.0802%" height="15" fill="rgb(248,37,46)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3063%" y="421" width="0.0802%" height="15" fill="rgb(243,52,43)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3063%" y="405" width="0.0802%" height="15" fill="rgb(232,122,17)" fg:x="1176" fg:w="1"/><text x="94.5563%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.3865%" y="549" width="0.0802%" height="15" fill="rgb(242,15,36)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.3865%" y="533" width="0.0802%" height="15" fill="rgb(232,63,30)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="94.3865%" y="517" width="0.0802%" height="15" fill="rgb(237,86,45)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.3865%" y="501" width="0.0802%" height="15" fill="rgb(245,123,47)" fg:x="1177" fg:w="1"/><text x="94.6365%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (3 samples, 0.24%)</title><rect x="94.3063%" y="645" width="0.2406%" height="15" fill="rgb(252,85,3)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.3063%" y="629" width="0.2406%" height="15" fill="rgb(249,171,16)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.3063%" y="613" width="0.2406%" height="15" fill="rgb(225,146,54)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="623.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.3063%" y="597" width="0.2406%" height="15" fill="rgb(213,216,54)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.3063%" y="581" width="0.2406%" height="15" fill="rgb(236,60,6)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="591.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="94.3063%" y="565" width="0.2406%" height="15" fill="rgb(227,93,24)" fg:x="1176" fg:w="3"/><text x="94.5563%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4667%" y="549" width="0.0802%" height="15" fill="rgb(219,41,42)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4667%" y="533" width="0.0802%" height="15" fill="rgb(229,52,32)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4667%" y="517" width="0.0802%" height="15" fill="rgb(221,33,40)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4667%" y="501" width="0.0802%" height="15" fill="rgb(216,109,23)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4667%" y="485" width="0.0802%" height="15" fill="rgb(214,39,24)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4667%" y="469" width="0.0802%" height="15" fill="rgb(205,36,6)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4667%" y="453" width="0.0802%" height="15" fill="rgb(222,146,34)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4667%" y="437" width="0.0802%" height="15" fill="rgb(214,72,53)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.4667%" y="421" width="0.0802%" height="15" fill="rgb(250,157,2)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.4667%" y="405" width="0.0802%" height="15" fill="rgb(248,5,23)" fg:x="1178" fg:w="1"/><text x="94.7167%" y="415.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.6271%" y="485" width="0.0802%" height="15" fill="rgb(207,146,36)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.6271%" y="469" width="0.0802%" height="15" fill="rgb(205,184,43)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6271%" y="453" width="0.0802%" height="15" fill="rgb(251,150,46)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6271%" y="437" width="0.0802%" height="15" fill="rgb(227,224,12)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="94.6271%" y="421" width="0.0802%" height="15" fill="rgb(215,26,26)" fg:x="1180" fg:w="1"/><text x="94.8771%" y="431.50"></text></g><g><title>engine::session::Session::load_entity (8 samples, 0.64%)</title><rect x="94.1460%" y="677" width="0.6415%" height="15" fill="rgb(238,180,42)" fg:x="1174" fg:w="8"/><text x="94.3960%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="94.1460%" y="661" width="0.6415%" height="15" fill="rgb(218,148,48)" fg:x="1174" fg:w="8"/><text x="94.3960%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="94.5469%" y="645" width="0.2406%" height="15" fill="rgb(252,14,36)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="655.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="94.5469%" y="629" width="0.2406%" height="15" fill="rgb(224,35,37)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.5469%" y="613" width="0.2406%" height="15" fill="rgb(245,177,29)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.5469%" y="597" width="0.2406%" height="15" fill="rgb(221,149,34)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="94.5469%" y="581" width="0.2406%" height="15" fill="rgb(239,115,36)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="94.5469%" y="565" width="0.2406%" height="15" fill="rgb(226,196,40)" fg:x="1179" fg:w="3"/><text x="94.7969%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.6271%" y="549" width="0.1604%" height="15" fill="rgb(209,206,26)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.6271%" y="533" width="0.1604%" height="15" fill="rgb(225,13,33)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="94.6271%" y="517" width="0.1604%" height="15" fill="rgb(244,126,22)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.6271%" y="501" width="0.1604%" height="15" fill="rgb(248,213,25)" fg:x="1180" fg:w="2"/><text x="94.8771%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7073%" y="485" width="0.0802%" height="15" fill="rgb(222,94,36)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.7073%" y="469" width="0.0802%" height="15" fill="rgb(212,114,20)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.7073%" y="453" width="0.0802%" height="15" fill="rgb(213,157,26)" fg:x="1181" fg:w="1"/><text x="94.9573%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7875%" y="629" width="0.0802%" height="15" fill="rgb(211,130,1)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.7875%" y="613" width="0.0802%" height="15" fill="rgb(212,83,53)" fg:x="1182" fg:w="1"/><text x="95.0375%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.7875%" y="645" width="0.1604%" height="15" fill="rgb(238,129,10)" fg:x="1182" fg:w="2"/><text x="95.0375%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8677%" y="629" width="0.0802%" height="15" fill="rgb(213,76,2)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8677%" y="613" width="0.0802%" height="15" fill="rgb(220,189,22)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8677%" y="597" width="0.0802%" height="15" fill="rgb(250,155,31)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8677%" y="581" width="0.0802%" height="15" fill="rgb(218,184,22)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8677%" y="565" width="0.0802%" height="15" fill="rgb(247,117,4)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8677%" y="549" width="0.0802%" height="15" fill="rgb(253,185,37)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8677%" y="533" width="0.0802%" height="15" fill="rgb(226,36,44)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8677%" y="517" width="0.0802%" height="15" fill="rgb(224,7,24)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8677%" y="501" width="0.0802%" height="15" fill="rgb(239,201,0)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8677%" y="485" width="0.0802%" height="15" fill="rgb(218,56,33)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8677%" y="469" width="0.0802%" height="15" fill="rgb(210,187,29)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8677%" y="453" width="0.0802%" height="15" fill="rgb(206,158,49)" fg:x="1183" fg:w="1"/><text x="95.1177%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.9479%" y="597" width="0.1604%" height="15" fill="rgb(234,36,5)" fg:x="1184" fg:w="2"/><text x="95.1979%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0281%" y="581" width="0.0802%" height="15" fill="rgb(239,79,15)" fg:x="1185" fg:w="1"/><text x="95.2781%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.1083%" y="501" width="0.0802%" height="15" fill="rgb(240,136,17)" fg:x="1186" fg:w="1"/><text x="95.3583%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="95.1083%" y="549" width="0.2406%" height="15" fill="rgb(227,83,12)" fg:x="1186" fg:w="3"/><text x="95.3583%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="95.1083%" y="533" width="0.2406%" height="15" fill="rgb(212,2,8)" fg:x="1186" fg:w="3"/><text x="95.3583%" y="543.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="95.1083%" y="517" width="0.2406%" height="15" fill="rgb(219,144,5)" fg:x="1186" fg:w="3"/><text x="95.3583%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.1885%" y="501" width="0.1604%" height="15" fill="rgb(253,204,27)" fg:x="1187" fg:w="2"/><text x="95.4385%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="95.2686%" y="485" width="0.0802%" height="15" fill="rgb(228,188,17)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="495.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (1 samples, 0.08%)</title><rect x="95.2686%" y="469" width="0.0802%" height="15" fill="rgb(208,198,33)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.2686%" y="453" width="0.0802%" height="15" fill="rgb(249,153,19)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.2686%" y="437" width="0.0802%" height="15" fill="rgb(222,193,37)" fg:x="1188" fg:w="1"/><text x="95.5186%" y="447.50"></text></g><g><title>engine::session::internal::Added::find_refs (8 samples, 0.64%)</title><rect x="94.7875%" y="677" width="0.6415%" height="15" fill="rgb(215,168,16)" fg:x="1182" fg:w="8"/><text x="95.0375%" y="687.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (8 samples, 0.64%)</title><rect x="94.7875%" y="661" width="0.6415%" height="15" fill="rgb(238,69,36)" fg:x="1182" fg:w="8"/><text x="95.0375%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="94.9479%" y="645" width="0.4812%" height="15" fill="rgb(227,11,51)" fg:x="1184" fg:w="6"/><text x="95.1979%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.48%)</title><rect x="94.9479%" y="629" width="0.4812%" height="15" fill="rgb(214,204,5)" fg:x="1184" fg:w="6"/><text x="95.1979%" y="639.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (6 samples, 0.48%)</title><rect x="94.9479%" y="613" width="0.4812%" height="15" fill="rgb(242,182,42)" fg:x="1184" fg:w="6"/><text x="95.1979%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="95.1083%" y="597" width="0.3208%" height="15" fill="rgb(212,208,46)" fg:x="1186" fg:w="4"/><text x="95.3583%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="95.1083%" y="581" width="0.3208%" height="15" fill="rgb(249,22,49)" fg:x="1186" fg:w="4"/><text x="95.3583%" y="591.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (4 samples, 0.32%)</title><rect x="95.1083%" y="565" width="0.3208%" height="15" fill="rgb(226,130,52)" fg:x="1186" fg:w="4"/><text x="95.3583%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.3488%" y="549" width="0.0802%" height="15" fill="rgb(209,156,10)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.3488%" y="533" width="0.0802%" height="15" fill="rgb(207,125,47)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.3488%" y="517" width="0.0802%" height="15" fill="rgb(221,117,28)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.3488%" y="501" width="0.0802%" height="15" fill="rgb(221,170,12)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.3488%" y="485" width="0.0802%" height="15" fill="rgb(241,222,52)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3488%" y="469" width="0.0802%" height="15" fill="rgb(219,52,6)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.3488%" y="453" width="0.0802%" height="15" fill="rgb(226,144,34)" fg:x="1189" fg:w="1"/><text x="95.5988%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.4290%" y="661" width="0.2406%" height="15" fill="rgb(231,179,27)" fg:x="1190" fg:w="3"/><text x="95.6790%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.4290%" y="645" width="0.2406%" height="15" fill="rgb(211,178,51)" fg:x="1190" fg:w="3"/><text x="95.6790%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="95.4290%" y="629" width="0.2406%" height="15" fill="rgb(233,141,5)" fg:x="1190" fg:w="3"/><text x="95.6790%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5894%" y="613" width="0.0802%" height="15" fill="rgb(214,10,9)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.5894%" y="597" width="0.0802%" height="15" fill="rgb(209,0,1)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.5894%" y="581" width="0.0802%" height="15" fill="rgb(207,82,30)" fg:x="1192" fg:w="1"/><text x="95.8394%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.6696%" y="581" width="0.0802%" height="15" fill="rgb(224,214,13)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.6696%" y="565" width="0.0802%" height="15" fill="rgb(237,84,33)" fg:x="1193" fg:w="1"/><text x="95.9196%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7498%" y="565" width="0.0802%" height="15" fill="rgb(231,25,9)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7498%" y="549" width="0.0802%" height="15" fill="rgb(207,51,8)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="95.7498%" y="533" width="0.0802%" height="15" fill="rgb(234,189,54)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.7498%" y="517" width="0.0802%" height="15" fill="rgb(214,188,52)" fg:x="1194" fg:w="1"/><text x="95.9998%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.24%)</title><rect x="95.6696%" y="613" width="0.2406%" height="15" fill="rgb(214,17,11)" fg:x="1193" fg:w="3"/><text x="95.9196%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.6696%" y="597" width="0.2406%" height="15" fill="rgb(250,31,36)" fg:x="1193" fg:w="3"/><text x="95.9196%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.7498%" y="581" width="0.1604%" height="15" fill="rgb(244,57,44)" fg:x="1194" fg:w="2"/><text x="95.9998%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.8300%" y="565" width="0.0802%" height="15" fill="rgb(209,209,31)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.8300%" y="549" width="0.0802%" height="15" fill="rgb(217,47,5)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.8300%" y="533" width="0.0802%" height="15" fill="rgb(214,78,42)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.8300%" y="517" width="0.0802%" height="15" fill="rgb(226,15,23)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8300%" y="501" width="0.0802%" height="15" fill="rgb(230,171,7)" fg:x="1195" fg:w="1"/><text x="96.0800%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="95.6696%" y="661" width="0.3208%" height="15" fill="rgb(229,71,9)" fg:x="1193" fg:w="4"/><text x="95.9196%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="95.6696%" y="645" width="0.3208%" height="15" fill="rgb(221,111,31)" fg:x="1193" fg:w="4"/><text x="95.9196%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="95.6696%" y="629" width="0.3208%" height="15" fill="rgb(237,86,50)" fg:x="1193" fg:w="4"/><text x="95.9196%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9102%" y="613" width="0.0802%" height="15" fill="rgb(234,49,32)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9102%" y="597" width="0.0802%" height="15" fill="rgb(225,144,27)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.9102%" y="581" width="0.0802%" height="15" fill="rgb(225,209,36)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9102%" y="565" width="0.0802%" height="15" fill="rgb(218,109,14)" fg:x="1196" fg:w="1"/><text x="96.1602%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="96.2310%" y="533" width="0.0802%" height="15" fill="rgb(238,186,42)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="96.2310%" y="517" width="0.0802%" height="15" fill="rgb(236,143,10)" fg:x="1200" fg:w="1"/><text x="96.4810%" y="527.50"></text></g><g><title>engine::session::Session::load_entity (30 samples, 2.41%)</title><rect x="94.0658%" y="693" width="2.4058%" height="15" fill="rgb(205,147,7)" fg:x="1173" fg:w="30"/><text x="94.3158%" y="703.50">en..</text></g><g><title>engine::session::internal::Entities::add_persisted (13 samples, 1.04%)</title><rect x="95.4290%" y="677" width="1.0425%" height="15" fill="rgb(245,224,0)" fg:x="1190" fg:w="13"/><text x="95.6790%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="95.9904%" y="661" width="0.4812%" height="15" fill="rgb(213,208,32)" fg:x="1197" fg:w="6"/><text x="96.2404%" y="671.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="95.9904%" y="645" width="0.4812%" height="15" fill="rgb(208,212,4)" fg:x="1197" fg:w="6"/><text x="96.2404%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.0706%" y="629" width="0.4010%" height="15" fill="rgb(236,143,49)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="96.0706%" y="613" width="0.4010%" height="15" fill="rgb(228,152,33)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="623.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="96.0706%" y="597" width="0.4010%" height="15" fill="rgb(236,132,39)" fg:x="1198" fg:w="5"/><text x="96.3206%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="96.1508%" y="581" width="0.3208%" height="15" fill="rgb(228,176,23)" fg:x="1199" fg:w="4"/><text x="96.4008%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="96.1508%" y="565" width="0.3208%" height="15" fill="rgb(229,34,18)" fg:x="1199" fg:w="4"/><text x="96.4008%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="96.2310%" y="549" width="0.2406%" height="15" fill="rgb(244,81,37)" fg:x="1200" fg:w="3"/><text x="96.4810%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.3111%" y="533" width="0.1604%" height="15" fill="rgb(242,79,32)" fg:x="1201" fg:w="2"/><text x="96.5611%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.3111%" y="517" width="0.1604%" height="15" fill="rgb(245,15,51)" fg:x="1201" fg:w="2"/><text x="96.5611%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3913%" y="501" width="0.0802%" height="15" fill="rgb(209,82,8)" fg:x="1202" fg:w="1"/><text x="96.6413%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4715%" y="645" width="0.0802%" height="15" fill="rgb(248,65,42)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4715%" y="629" width="0.0802%" height="15" fill="rgb(216,132,33)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.4715%" y="613" width="0.0802%" height="15" fill="rgb(207,21,32)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4715%" y="597" width="0.0802%" height="15" fill="rgb(247,27,22)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4715%" y="581" width="0.0802%" height="15" fill="rgb(254,72,41)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4715%" y="565" width="0.0802%" height="15" fill="rgb(250,6,31)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4715%" y="549" width="0.0802%" height="15" fill="rgb(224,124,0)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4715%" y="533" width="0.0802%" height="15" fill="rgb(228,7,24)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4715%" y="517" width="0.0802%" height="15" fill="rgb(250,202,22)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4715%" y="501" width="0.0802%" height="15" fill="rgb(214,89,5)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4715%" y="485" width="0.0802%" height="15" fill="rgb(228,82,34)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4715%" y="469" width="0.0802%" height="15" fill="rgb(212,164,18)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4715%" y="453" width="0.0802%" height="15" fill="rgb(210,75,6)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4715%" y="437" width="0.0802%" height="15" fill="rgb(251,11,45)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4715%" y="421" width="0.0802%" height="15" fill="rgb(234,105,14)" fg:x="1203" fg:w="1"/><text x="96.7215%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.4715%" y="661" width="0.1604%" height="15" fill="rgb(220,123,16)" fg:x="1203" fg:w="2"/><text x="96.7215%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5517%" y="645" width="0.0802%" height="15" fill="rgb(238,16,42)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5517%" y="629" width="0.0802%" height="15" fill="rgb(239,101,26)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.5517%" y="613" width="0.0802%" height="15" fill="rgb(228,12,27)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.5517%" y="597" width="0.0802%" height="15" fill="rgb(218,165,53)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.5517%" y="581" width="0.0802%" height="15" fill="rgb(250,44,27)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5517%" y="565" width="0.0802%" height="15" fill="rgb(229,69,35)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5517%" y="549" width="0.0802%" height="15" fill="rgb(241,38,31)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.5517%" y="533" width="0.0802%" height="15" fill="rgb(224,152,13)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.5517%" y="517" width="0.0802%" height="15" fill="rgb(207,225,8)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.5517%" y="501" width="0.0802%" height="15" fill="rgb(222,135,50)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.5517%" y="485" width="0.0802%" height="15" fill="rgb(245,39,15)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5517%" y="469" width="0.0802%" height="15" fill="rgb(233,22,17)" fg:x="1204" fg:w="1"/><text x="96.8017%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.6319%" y="565" width="0.0802%" height="15" fill="rgb(227,152,49)" fg:x="1205" fg:w="1"/><text x="96.8819%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7923%" y="517" width="0.0802%" height="15" fill="rgb(233,162,45)" fg:x="1207" fg:w="1"/><text x="97.0423%" y="527.50"></text></g><g><title>engine::session::internal::Added::find_refs (7 samples, 0.56%)</title><rect x="96.4715%" y="693" width="0.5613%" height="15" fill="rgb(217,44,48)" fg:x="1203" fg:w="7"/><text x="96.7215%" y="703.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (7 samples, 0.56%)</title><rect x="96.4715%" y="677" width="0.5613%" height="15" fill="rgb(253,41,35)" fg:x="1203" fg:w="7"/><text x="96.7215%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="96.6319%" y="661" width="0.4010%" height="15" fill="rgb(254,32,37)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="96.6319%" y="645" width="0.4010%" height="15" fill="rgb(250,9,9)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="655.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="96.6319%" y="629" width="0.4010%" height="15" fill="rgb(212,37,16)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.40%)</title><rect x="96.6319%" y="613" width="0.4010%" height="15" fill="rgb(235,142,51)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.40%)</title><rect x="96.6319%" y="597" width="0.4010%" height="15" fill="rgb(250,225,53)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="607.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (5 samples, 0.40%)</title><rect x="96.6319%" y="581" width="0.4010%" height="15" fill="rgb(207,188,48)" fg:x="1205" fg:w="5"/><text x="96.8819%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="96.7121%" y="565" width="0.3208%" height="15" fill="rgb(222,25,21)" fg:x="1206" fg:w="4"/><text x="96.9621%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.32%)</title><rect x="96.7121%" y="549" width="0.3208%" height="15" fill="rgb(249,112,5)" fg:x="1206" fg:w="4"/><text x="96.9621%" y="559.50"></text></g><g><title>kernel::model::entity_ref::find_entity_refs (3 samples, 0.24%)</title><rect x="96.7923%" y="533" width="0.2406%" height="15" fill="rgb(242,11,22)" fg:x="1207" fg:w="3"/><text x="97.0423%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.8725%" y="517" width="0.1604%" height="15" fill="rgb(217,125,14)" fg:x="1208" fg:w="2"/><text x="97.1225%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.8725%" y="501" width="0.1604%" height="15" fill="rgb(239,92,14)" fg:x="1208" fg:w="2"/><text x="97.1225%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="96.9527%" y="485" width="0.0802%" height="15" fill="rgb(232,145,17)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde_json::value::Value&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.9527%" y="469" width="0.0802%" height="15" fill="rgb(250,158,16)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="479.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::invalid_type (1 samples, 0.08%)</title><rect x="96.9527%" y="453" width="0.0802%" height="15" fill="rgb(247,30,22)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="463.50"></text></g><g><title>&lt;serde_json::error::Error as serde::de::Error&gt;::custom (1 samples, 0.08%)</title><rect x="96.9527%" y="437" width="0.0802%" height="15" fill="rgb(219,215,46)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="447.50"></text></g><g><title>serde_json::error::make_error (1 samples, 0.08%)</title><rect x="96.9527%" y="421" width="0.0802%" height="15" fill="rgb(237,40,53)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="431.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.08%)</title><rect x="96.9527%" y="405" width="0.0802%" height="15" fill="rgb(253,207,11)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="415.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.08%)</title><rect x="96.9527%" y="389" width="0.0802%" height="15" fill="rgb(242,16,9)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="399.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.08%)</title><rect x="96.9527%" y="373" width="0.0802%" height="15" fill="rgb(237,94,35)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="96.9527%" y="357" width="0.0802%" height="15" fill="rgb(244,145,23)" fg:x="1209" fg:w="1"/><text x="97.2027%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0329%" y="677" width="0.0802%" height="15" fill="rgb(209,93,17)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0329%" y="661" width="0.0802%" height="15" fill="rgb(205,201,0)" fg:x="1210" fg:w="1"/><text x="97.2829%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.1131%" y="677" width="0.0802%" height="15" fill="rgb(225,198,48)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.1131%" y="661" width="0.0802%" height="15" fill="rgb(211,131,51)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.1131%" y="645" width="0.0802%" height="15" fill="rgb(237,196,37)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1131%" y="629" width="0.0802%" height="15" fill="rgb(218,204,52)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.1131%" y="613" width="0.0802%" height="15" fill="rgb(251,67,25)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.1131%" y="597" width="0.0802%" height="15" fill="rgb(219,87,2)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.1131%" y="581" width="0.0802%" height="15" fill="rgb(224,171,9)" fg:x="1211" fg:w="1"/><text x="97.3631%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.1933%" y="597" width="0.0802%" height="15" fill="rgb(215,98,45)" fg:x="1212" fg:w="1"/><text x="97.4433%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.1933%" y="581" width="0.0802%" height="15" fill="rgb(231,48,23)" fg:x="1212" fg:w="1"/><text x="97.4433%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2735%" y="581" width="0.0802%" height="15" fill="rgb(233,138,42)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2735%" y="565" width="0.0802%" height="15" fill="rgb(244,107,0)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="575.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.2735%" y="549" width="0.0802%" height="15" fill="rgb(224,15,0)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2735%" y="533" width="0.0802%" height="15" fill="rgb(218,71,35)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="97.2735%" y="517" width="0.0802%" height="15" fill="rgb(244,32,22)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.2735%" y="501" width="0.0802%" height="15" fill="rgb(232,209,34)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="511.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="97.2735%" y="485" width="0.0802%" height="15" fill="rgb(232,54,38)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="97.2735%" y="469" width="0.0802%" height="15" fill="rgb(208,83,16)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2735%" y="453" width="0.0802%" height="15" fill="rgb(208,70,33)" fg:x="1213" fg:w="1"/><text x="97.5235%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="97.3536%" y="533" width="0.0802%" height="15" fill="rgb(247,38,12)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3536%" y="517" width="0.0802%" height="15" fill="rgb(206,34,42)" fg:x="1214" fg:w="1"/><text x="97.6036%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::from_value (4 samples, 0.32%)</title><rect x="97.1933%" y="677" width="0.3208%" height="15" fill="rgb(226,75,43)" fg:x="1212" fg:w="4"/><text x="97.4433%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="97.1933%" y="661" width="0.3208%" height="15" fill="rgb(223,109,12)" fg:x="1212" fg:w="4"/><text x="97.4433%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.1933%" y="645" width="0.3208%" height="15" fill="rgb(218,53,16)" fg:x="1212" fg:w="4"/><text x="97.4433%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.32%)</title><rect x="97.1933%" y="629" width="0.3208%" height="15" fill="rgb(236,44,50)" fg:x="1212" fg:w="4"/><text x="97.4433%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="97.1933%" y="613" width="0.3208%" height="15" fill="rgb(211,163,12)" fg:x="1212" fg:w="4"/><text x="97.4433%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="97.2735%" y="597" width="0.2406%" height="15" fill="rgb(230,67,52)" fg:x="1213" fg:w="3"/><text x="97.5235%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.3536%" y="581" width="0.1604%" height="15" fill="rgb(224,204,24)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.3536%" y="565" width="0.1604%" height="15" fill="rgb(210,50,27)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="97.3536%" y="549" width="0.1604%" height="15" fill="rgb(251,202,23)" fg:x="1214" fg:w="2"/><text x="97.6036%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.4338%" y="533" width="0.0802%" height="15" fill="rgb(230,210,21)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="97.4338%" y="517" width="0.0802%" height="15" fill="rgb(222,72,44)" fg:x="1215" fg:w="1"/><text x="97.6838%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5942%" y="581" width="0.0802%" height="15" fill="rgb(223,182,13)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5942%" y="565" width="0.0802%" height="15" fill="rgb(228,61,15)" fg:x="1217" fg:w="1"/><text x="97.8442%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="97.5140%" y="613" width="0.2406%" height="15" fill="rgb(253,207,22)" fg:x="1216" fg:w="3"/><text x="97.7640%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="97.5942%" y="597" width="0.1604%" height="15" fill="rgb(232,10,15)" fg:x="1217" fg:w="2"/><text x="97.8442%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6744%" y="581" width="0.0802%" height="15" fill="rgb(227,207,39)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6744%" y="565" width="0.0802%" height="15" fill="rgb(228,187,3)" fg:x="1218" fg:w="1"/><text x="97.9244%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (47 samples, 3.77%)</title><rect x="94.0658%" y="709" width="3.7690%" height="15" fill="rgb(246,45,9)" fg:x="1173" fg:w="47"/><text x="94.3158%" y="719.50">engi..</text></g><g><title>engine::session::internal::Entities::add_persisted (10 samples, 0.80%)</title><rect x="97.0329%" y="693" width="0.8019%" height="15" fill="rgb(249,10,17)" fg:x="1210" fg:w="10"/><text x="97.2829%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (4 samples, 0.32%)</title><rect x="97.5140%" y="677" width="0.3208%" height="15" fill="rgb(251,56,51)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="687.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="97.5140%" y="661" width="0.3208%" height="15" fill="rgb(232,51,36)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="97.5140%" y="645" width="0.3208%" height="15" fill="rgb(215,38,28)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="97.5140%" y="629" width="0.3208%" height="15" fill="rgb(218,5,35)" fg:x="1216" fg:w="4"/><text x="97.7640%" y="639.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.7546%" y="613" width="0.0802%" height="15" fill="rgb(232,219,8)" fg:x="1219" fg:w="1"/><text x="98.0046%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.8348%" y="693" width="0.0802%" height="15" fill="rgb(243,162,8)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.8348%" y="677" width="0.0802%" height="15" fill="rgb(218,86,32)" fg:x="1220" fg:w="1"/><text x="98.0848%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9150%" y="661" width="0.0802%" height="15" fill="rgb(218,179,51)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9150%" y="645" width="0.0802%" height="15" fill="rgb(237,42,52)" fg:x="1221" fg:w="1"/><text x="98.1650%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.0754%" y="629" width="0.0802%" height="15" fill="rgb(229,12,4)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0754%" y="613" width="0.0802%" height="15" fill="rgb(214,203,2)" fg:x="1223" fg:w="1"/><text x="98.3254%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.1556%" y="597" width="0.1604%" height="15" fill="rgb(241,11,44)" fg:x="1224" fg:w="2"/><text x="98.4056%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="98.1556%" y="581" width="0.1604%" height="15" fill="rgb(221,106,48)" fg:x="1224" fg:w="2"/><text x="98.4056%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.2358%" y="565" width="0.0802%" height="15" fill="rgb(220,220,10)" fg:x="1225" fg:w="1"/><text x="98.4858%" y="575.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="97.8348%" y="709" width="0.5613%" height="15" fill="rgb(228,220,44)" fg:x="1220" fg:w="7"/><text x="98.0848%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="97.9150%" y="693" width="0.4812%" height="15" fill="rgb(214,144,45)" fg:x="1221" fg:w="6"/><text x="98.1650%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="97.9150%" y="677" width="0.4812%" height="15" fill="rgb(224,142,28)" fg:x="1221" fg:w="6"/><text x="98.1650%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="97.9952%" y="661" width="0.4010%" height="15" fill="rgb(214,79,27)" fg:x="1222" fg:w="5"/><text x="98.2452%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="97.9952%" y="645" width="0.4010%" height="15" fill="rgb(208,173,30)" fg:x="1222" fg:w="5"/><text x="98.2452%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="98.1556%" y="629" width="0.2406%" height="15" fill="rgb(222,81,9)" fg:x="1224" fg:w="3"/><text x="98.4056%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.1556%" y="613" width="0.2406%" height="15" fill="rgb(217,152,25)" fg:x="1224" fg:w="3"/><text x="98.4056%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="98.3160%" y="597" width="0.0802%" height="15" fill="rgb(248,170,26)" fg:x="1226" fg:w="1"/><text x="98.5660%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3962%" y="661" width="0.0802%" height="15" fill="rgb(206,151,5)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3962%" y="645" width="0.0802%" height="15" fill="rgb(216,7,52)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.3962%" y="629" width="0.0802%" height="15" fill="rgb(228,27,44)" fg:x="1227" fg:w="1"/><text x="98.6462%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.3962%" y="693" width="0.1604%" height="15" fill="rgb(208,221,38)" fg:x="1227" fg:w="2"/><text x="98.6462%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.3962%" y="677" width="0.1604%" height="15" fill="rgb(240,59,23)" fg:x="1227" fg:w="2"/><text x="98.6462%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4763%" y="661" width="0.0802%" height="15" fill="rgb(210,127,41)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4763%" y="645" width="0.0802%" height="15" fill="rgb(224,160,3)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.4763%" y="629" width="0.0802%" height="15" fill="rgb(215,228,26)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4763%" y="613" width="0.0802%" height="15" fill="rgb(218,107,38)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4763%" y="597" width="0.0802%" height="15" fill="rgb(246,159,42)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4763%" y="581" width="0.0802%" height="15" fill="rgb(251,23,41)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4763%" y="565" width="0.0802%" height="15" fill="rgb(246,94,53)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4763%" y="549" width="0.0802%" height="15" fill="rgb(241,212,46)" fg:x="1228" fg:w="1"/><text x="98.7263%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.5565%" y="661" width="0.0802%" height="15" fill="rgb(231,79,30)" fg:x="1229" fg:w="1"/><text x="98.8065%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7169%" y="597" width="0.0802%" height="15" fill="rgb(208,202,21)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7169%" y="581" width="0.0802%" height="15" fill="rgb(226,136,22)" fg:x="1231" fg:w="1"/><text x="98.9669%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="98.5565%" y="693" width="0.3208%" height="15" fill="rgb(214,87,0)" fg:x="1229" fg:w="4"/><text x="98.8065%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="98.5565%" y="677" width="0.3208%" height="15" fill="rgb(239,176,44)" fg:x="1229" fg:w="4"/><text x="98.8065%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.6367%" y="661" width="0.2406%" height="15" fill="rgb(230,102,31)" fg:x="1230" fg:w="3"/><text x="98.8867%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.6367%" y="645" width="0.2406%" height="15" fill="rgb(219,40,19)" fg:x="1230" fg:w="3"/><text x="98.8867%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.7169%" y="629" width="0.1604%" height="15" fill="rgb(228,55,4)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.7169%" y="613" width="0.1604%" height="15" fill="rgb(239,120,21)" fg:x="1231" fg:w="2"/><text x="98.9669%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.7971%" y="597" width="0.0802%" height="15" fill="rgb(243,136,1)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.7971%" y="581" width="0.0802%" height="15" fill="rgb(237,12,45)" fg:x="1232" fg:w="1"/><text x="99.0471%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="98.3962%" y="709" width="0.5613%" height="15" fill="rgb(245,142,47)" fg:x="1227" fg:w="7"/><text x="98.6462%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="98.8773%" y="693" width="0.0802%" height="15" fill="rgb(237,24,54)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="98.8773%" y="677" width="0.0802%" height="15" fill="rgb(234,164,40)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="98.8773%" y="661" width="0.0802%" height="15" fill="rgb(242,95,12)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="98.8773%" y="645" width="0.0802%" height="15" fill="rgb(238,75,28)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.8773%" y="629" width="0.0802%" height="15" fill="rgb(236,4,26)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="98.8773%" y="613" width="0.0802%" height="15" fill="rgb(252,158,20)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="98.8773%" y="597" width="0.0802%" height="15" fill="rgb(231,67,31)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="98.8773%" y="581" width="0.0802%" height="15" fill="rgb(241,151,13)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="98.8773%" y="565" width="0.0802%" height="15" fill="rgb(242,25,36)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="98.8773%" y="549" width="0.0802%" height="15" fill="rgb(205,222,34)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.8773%" y="533" width="0.0802%" height="15" fill="rgb(235,154,26)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="98.8773%" y="517" width="0.0802%" height="15" fill="rgb(233,17,9)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="98.8773%" y="501" width="0.0802%" height="15" fill="rgb(245,113,50)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="98.8773%" y="485" width="0.0802%" height="15" fill="rgb(247,105,34)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="98.8773%" y="469" width="0.0802%" height="15" fill="rgb(225,50,23)" fg:x="1233" fg:w="1"/><text x="99.1273%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.9575%" y="677" width="0.0802%" height="15" fill="rgb(253,189,32)" fg:x="1234" fg:w="1"/><text x="99.2075%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::from_value (1 samples, 0.08%)</title><rect x="99.0377%" y="661" width="0.0802%" height="15" fill="rgb(208,159,41)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0377%" y="645" width="0.0802%" height="15" fill="rgb(222,135,10)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0377%" y="629" width="0.0802%" height="15" fill="rgb(214,75,20)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0377%" y="613" width="0.0802%" height="15" fill="rgb(231,65,33)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0377%" y="597" width="0.0802%" height="15" fill="rgb(251,139,6)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="607.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.0377%" y="581" width="0.0802%" height="15" fill="rgb(225,220,53)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0377%" y="565" width="0.0802%" height="15" fill="rgb(244,73,26)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0377%" y="549" width="0.0802%" height="15" fill="rgb(244,98,34)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.0377%" y="533" width="0.0802%" height="15" fill="rgb(211,131,5)" fg:x="1235" fg:w="1"/><text x="99.2877%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1179%" y="565" width="0.0802%" height="15" fill="rgb(238,14,50)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1179%" y="549" width="0.0802%" height="15" fill="rgb(206,132,52)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1179%" y="533" width="0.0802%" height="15" fill="rgb(228,200,17)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1179%" y="517" width="0.0802%" height="15" fill="rgb(209,53,28)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.1179%" y="501" width="0.0802%" height="15" fill="rgb(240,214,22)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1179%" y="485" width="0.0802%" height="15" fill="rgb(213,217,46)" fg:x="1236" fg:w="1"/><text x="99.3679%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="99.1179%" y="597" width="0.1604%" height="15" fill="rgb(241,159,53)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1179%" y="581" width="0.1604%" height="15" fill="rgb(241,70,32)" fg:x="1236" fg:w="2"/><text x="99.3679%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.1981%" y="565" width="0.0802%" height="15" fill="rgb(233,117,50)" fg:x="1237" fg:w="1"/><text x="99.4481%" y="575.50"></text></g><g><title>engine::session::Session::load_entity (5 samples, 0.40%)</title><rect x="98.9575%" y="693" width="0.4010%" height="15" fill="rgb(211,114,15)" fg:x="1234" fg:w="5"/><text x="99.2075%" y="703.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="99.0377%" y="677" width="0.3208%" height="15" fill="rgb(254,0,36)" fg:x="1235" fg:w="4"/><text x="99.2877%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="99.1179%" y="661" width="0.2406%" height="15" fill="rgb(221,74,12)" fg:x="1236" fg:w="3"/><text x="99.3679%" y="671.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="99.1179%" y="645" width="0.2406%" height="15" fill="rgb(241,221,3)" fg:x="1236" fg:w="3"/><text x="99.3679%" y="655.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="99.1179%" y="629" width="0.2406%" height="15" fill="rgb(252,91,23)" fg:x="1236" fg:w="3"/><text x="99.3679%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="99.1179%" y="613" width="0.2406%" height="15" fill="rgb(232,1,25)" fg:x="1236" fg:w="3"/><text x="99.3679%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2783%" y="597" width="0.0802%" height="15" fill="rgb(253,145,25)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.2783%" y="581" width="0.0802%" height="15" fill="rgb(226,43,53)" fg:x="1238" fg:w="1"/><text x="99.5283%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.3585%" y="677" width="0.1604%" height="15" fill="rgb(245,116,39)" fg:x="1239" fg:w="2"/><text x="99.6085%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.3585%" y="661" width="0.1604%" height="15" fill="rgb(231,205,33)" fg:x="1239" fg:w="2"/><text x="99.6085%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4387%" y="645" width="0.0802%" height="15" fill="rgb(238,96,15)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="629" width="0.0802%" height="15" fill="rgb(212,80,14)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.4387%" y="613" width="0.0802%" height="15" fill="rgb(209,118,24)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="597" width="0.0802%" height="15" fill="rgb(234,176,14)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4387%" y="581" width="0.0802%" height="15" fill="rgb(207,145,21)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4387%" y="565" width="0.0802%" height="15" fill="rgb(218,58,54)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4387%" y="549" width="0.0802%" height="15" fill="rgb(229,11,50)" fg:x="1240" fg:w="1"/><text x="99.6887%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="99.5188%" y="661" width="0.1604%" height="15" fill="rgb(221,170,33)" fg:x="1241" fg:w="2"/><text x="99.7688%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.5990%" y="645" width="0.0802%" height="15" fill="rgb(221,121,40)" fg:x="1242" fg:w="1"/><text x="99.8490%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="99.5188%" y="677" width="0.3208%" height="15" fill="rgb(214,165,32)" fg:x="1241" fg:w="4"/><text x="99.7688%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6792%" y="661" width="0.1604%" height="15" fill="rgb(243,195,30)" fg:x="1243" fg:w="2"/><text x="99.9292%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.7594%" y="645" width="0.0802%" height="15" fill="rgb(238,0,27)" fg:x="1244" fg:w="1"/><text x="100.0094%" y="655.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (180 samples, 14.43%)</title><rect x="85.4852%" y="741" width="14.4346%" height="15" fill="rgb(226,0,50)" fg:x="1066" fg:w="180"/><text x="85.7352%" y="751.50">engine::session::Sessi..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (180 samples, 14.43%)</title><rect x="85.4852%" y="725" width="14.4346%" height="15" fill="rgb(222,93,46)" fg:x="1066" fg:w="180"/><text x="85.7352%" y="735.50">engine::session::Sessi..</text></g><g><title>kernel::model::entry::EntryResolver::world (12 samples, 0.96%)</title><rect x="98.9575%" y="709" width="0.9623%" height="15" fill="rgb(210,34,24)" fg:x="1234" fg:w="12"/><text x="99.2075%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.56%)</title><rect x="99.3585%" y="693" width="0.5613%" height="15" fill="rgb(217,47,8)" fg:x="1239" fg:w="7"/><text x="99.6085%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8396%" y="677" width="0.0802%" height="15" fill="rgb(217,0,26)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8396%" y="661" width="0.0802%" height="15" fill="rgb(218,228,31)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8396%" y="645" width="0.0802%" height="15" fill="rgb(208,101,40)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8396%" y="629" width="0.0802%" height="15" fill="rgb(225,134,0)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8396%" y="613" width="0.0802%" height="15" fill="rgb(241,37,25)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8396%" y="597" width="0.0802%" height="15" fill="rgb(251,149,9)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.8396%" y="581" width="0.0802%" height="15" fill="rgb(225,196,54)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.8396%" y="565" width="0.0802%" height="15" fill="rgb(240,46,24)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.8396%" y="549" width="0.0802%" height="15" fill="rgb(214,189,4)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.8396%" y="533" width="0.0802%" height="15" fill="rgb(222,3,8)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.8396%" y="517" width="0.0802%" height="15" fill="rgb(250,163,6)" fg:x="1245" fg:w="1"/><text x="100.0896%" y="527.50"></text></g><g><title>all (1,247 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(225,23,45)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1103.50"></text></g><g><title>simple-f9bc7d3f (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(225,177,23)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1087.50">simple-f9bc7d3f</text></g><g><title>_start (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(253,75,3)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1071.50">_start</text></g><g><title>__libc_start_main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(237,85,4)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1055.50">__libc_start_main</text></g><g><title>main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(212,23,3)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1039.50">main</text></g><g><title>std::rt::lang_start_internal (1,247 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(250,127,19)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(222,82,14)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(213,63,47)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(219,132,41)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(251,205,16)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,247 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,102,23)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,247 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(222,218,4)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,247 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(232,91,40)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,247 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(238,170,50)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="895.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,247 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(243,52,25)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="879.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,247 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(236,151,10)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="863.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,247 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(216,123,7)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="847.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,247 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(247,115,15)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="831.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,247 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(249,65,46)" fg:x="0" fg:w="1247"/><text x="0.2500%" y="815.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (422 samples, 33.84%)</title><rect x="66.1588%" y="789" width="33.8412%" height="15" fill="rgb(230,132,24)" fg:x="825" fg:w="422"/><text x="66.4088%" y="799.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rout..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (422 samples, 33.84%)</title><rect x="66.1588%" y="773" width="33.8412%" height="15" fill="rgb(253,115,7)" fg:x="825" fg:w="422"/><text x="66.4088%" y="783.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (422 samples, 33.84%)</title><rect x="66.1588%" y="757" width="33.8412%" height="15" fill="rgb(233,23,21)" fg:x="825" fg:w="422"/><text x="66.4088%" y="767.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9198%" y="741" width="0.0802%" height="15" fill="rgb(231,203,18)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9198%" y="725" width="0.0802%" height="15" fill="rgb(233,19,15)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.9198%" y="709" width="0.0802%" height="15" fill="rgb(213,12,4)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.9198%" y="693" width="0.0802%" height="15" fill="rgb(221,198,54)" fg:x="1246" fg:w="1"/><text x="100.1698%" y="703.50"></text></g></svg></svg>