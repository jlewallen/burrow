<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1078" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1061.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1061.00"> </text><svg id="frames" x="10" width="1180" total_samples="1243"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0000%" y="629" width="0.0805%" height="15" fill="rgb(212,105,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.1609%" y="581" width="0.0805%" height="15" fill="rgb(243,216,30)" fg:x="2" fg:w="1"/><text x="0.4109%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2414%" y="549" width="0.0805%" height="15" fill="rgb(207,121,3)" fg:x="3" fg:w="1"/><text x="0.4914%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.3218%" y="549" width="0.1609%" height="15" fill="rgb(249,78,0)" fg:x="4" fg:w="2"/><text x="0.5718%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4023%" y="533" width="0.0805%" height="15" fill="rgb(244,151,32)" fg:x="5" fg:w="1"/><text x="0.6523%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5632%" y="501" width="0.0805%" height="15" fill="rgb(228,63,25)" fg:x="7" fg:w="1"/><text x="0.8132%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="0.5632%" y="533" width="0.2414%" height="15" fill="rgb(231,158,23)" fg:x="7" fg:w="3"/><text x="0.8132%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="0.5632%" y="517" width="0.2414%" height="15" fill="rgb(248,107,23)" fg:x="7" fg:w="3"/><text x="0.8132%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.6436%" y="501" width="0.1609%" height="15" fill="rgb(215,168,21)" fg:x="8" fg:w="2"/><text x="0.8936%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7241%" y="485" width="0.0805%" height="15" fill="rgb(227,83,22)" fg:x="9" fg:w="1"/><text x="0.9741%" y="495.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.8045%" y="533" width="0.2414%" height="15" fill="rgb(217,118,43)" fg:x="10" fg:w="3"/><text x="1.0545%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.21%)</title><rect x="0.0000%" y="645" width="1.2068%" height="15" fill="rgb(229,220,41)" fg:x="0" fg:w="15"/><text x="0.2500%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (14 samples, 1.13%)</title><rect x="0.0805%" y="629" width="1.1263%" height="15" fill="rgb(254,146,46)" fg:x="1" fg:w="14"/><text x="0.3305%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="0.0805%" y="613" width="1.1263%" height="15" fill="rgb(233,208,31)" fg:x="1" fg:w="14"/><text x="0.3305%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="0.0805%" y="597" width="1.1263%" height="15" fill="rgb(222,162,7)" fg:x="1" fg:w="14"/><text x="0.3305%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="0.2414%" y="581" width="0.9654%" height="15" fill="rgb(230,117,45)" fg:x="3" fg:w="12"/><text x="0.4914%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="0.2414%" y="565" width="0.9654%" height="15" fill="rgb(239,163,6)" fg:x="3" fg:w="12"/><text x="0.4914%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="0.4827%" y="549" width="0.7241%" height="15" fill="rgb(246,130,17)" fg:x="6" fg:w="9"/><text x="0.7327%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.0459%" y="533" width="0.1609%" height="15" fill="rgb(216,84,5)" fg:x="13" fg:w="2"/><text x="1.2959%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.1263%" y="517" width="0.0805%" height="15" fill="rgb(230,200,21)" fg:x="14" fg:w="1"/><text x="1.3763%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 1.29%)</title><rect x="0.0000%" y="677" width="1.2872%" height="15" fill="rgb(224,2,8)" fg:x="0" fg:w="16"/><text x="0.2500%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (16 samples, 1.29%)</title><rect x="0.0000%" y="661" width="1.2872%" height="15" fill="rgb(238,178,10)" fg:x="0" fg:w="16"/><text x="0.2500%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2068%" y="645" width="0.0805%" height="15" fill="rgb(242,153,24)" fg:x="15" fg:w="1"/><text x="1.4568%" y="655.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="1.2872%" y="613" width="0.0805%" height="15" fill="rgb(242,32,48)" fg:x="16" fg:w="1"/><text x="1.5372%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.2872%" y="597" width="0.0805%" height="15" fill="rgb(227,36,0)" fg:x="16" fg:w="1"/><text x="1.5372%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.2872%" y="581" width="0.0805%" height="15" fill="rgb(251,33,35)" fg:x="16" fg:w="1"/><text x="1.5372%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.2872%" y="565" width="0.0805%" height="15" fill="rgb(232,168,51)" fg:x="16" fg:w="1"/><text x="1.5372%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.2872%" y="549" width="0.0805%" height="15" fill="rgb(228,56,10)" fg:x="16" fg:w="1"/><text x="1.5372%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.2872%" y="533" width="0.0805%" height="15" fill="rgb(231,10,26)" fg:x="16" fg:w="1"/><text x="1.5372%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.2872%" y="517" width="0.0805%" height="15" fill="rgb(226,202,12)" fg:x="16" fg:w="1"/><text x="1.5372%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.2872%" y="501" width="0.0805%" height="15" fill="rgb(251,49,21)" fg:x="16" fg:w="1"/><text x="1.5372%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="1.2872%" y="485" width="0.0805%" height="15" fill="rgb(206,228,28)" fg:x="16" fg:w="1"/><text x="1.5372%" y="495.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="1.3677%" y="533" width="0.0805%" height="15" fill="rgb(205,198,31)" fg:x="17" fg:w="1"/><text x="1.6177%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.4481%" y="533" width="0.0805%" height="15" fill="rgb(213,69,1)" fg:x="18" fg:w="1"/><text x="1.6981%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="1.5286%" y="453" width="0.0805%" height="15" fill="rgb(209,177,9)" fg:x="19" fg:w="1"/><text x="1.7786%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.5286%" y="437" width="0.0805%" height="15" fill="rgb(227,119,30)" fg:x="19" fg:w="1"/><text x="1.7786%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.5286%" y="421" width="0.0805%" height="15" fill="rgb(234,106,41)" fg:x="19" fg:w="1"/><text x="1.7786%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="1.5286%" y="485" width="0.1609%" height="15" fill="rgb(244,103,47)" fg:x="19" fg:w="2"/><text x="1.7786%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="1.5286%" y="469" width="0.1609%" height="15" fill="rgb(212,211,25)" fg:x="19" fg:w="2"/><text x="1.7786%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6090%" y="453" width="0.0805%" height="15" fill="rgb(208,63,53)" fg:x="20" fg:w="1"/><text x="1.8590%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.6090%" y="437" width="0.0805%" height="15" fill="rgb(213,176,21)" fg:x="20" fg:w="1"/><text x="1.8590%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.6090%" y="421" width="0.0805%" height="15" fill="rgb(243,124,12)" fg:x="20" fg:w="1"/><text x="1.8590%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="1.5286%" y="533" width="0.2414%" height="15" fill="rgb(239,2,35)" fg:x="19" fg:w="3"/><text x="1.7786%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="1.5286%" y="517" width="0.2414%" height="15" fill="rgb(253,169,22)" fg:x="19" fg:w="3"/><text x="1.7786%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="1.5286%" y="501" width="0.2414%" height="15" fill="rgb(254,51,12)" fg:x="19" fg:w="3"/><text x="1.7786%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6895%" y="485" width="0.0805%" height="15" fill="rgb(244,17,47)" fg:x="21" fg:w="1"/><text x="1.9395%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6895%" y="469" width="0.0805%" height="15" fill="rgb(251,45,46)" fg:x="21" fg:w="1"/><text x="1.9395%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6895%" y="453" width="0.0805%" height="15" fill="rgb(223,87,43)" fg:x="21" fg:w="1"/><text x="1.9395%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="1.6895%" y="437" width="0.0805%" height="15" fill="rgb(230,132,31)" fg:x="21" fg:w="1"/><text x="1.9395%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.6895%" y="421" width="0.0805%" height="15" fill="rgb(206,99,1)" fg:x="21" fg:w="1"/><text x="1.9395%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6895%" y="405" width="0.0805%" height="15" fill="rgb(227,110,25)" fg:x="21" fg:w="1"/><text x="1.9395%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="1.3677%" y="597" width="0.4827%" height="15" fill="rgb(217,182,7)" fg:x="17" fg:w="6"/><text x="1.6177%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="1.3677%" y="581" width="0.4827%" height="15" fill="rgb(250,176,4)" fg:x="17" fg:w="6"/><text x="1.6177%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="1.3677%" y="565" width="0.4827%" height="15" fill="rgb(244,98,30)" fg:x="17" fg:w="6"/><text x="1.6177%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="1.3677%" y="549" width="0.4827%" height="15" fill="rgb(228,150,42)" fg:x="17" fg:w="6"/><text x="1.6177%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.7699%" y="533" width="0.0805%" height="15" fill="rgb(231,91,46)" fg:x="22" fg:w="1"/><text x="2.0199%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7699%" y="517" width="0.0805%" height="15" fill="rgb(252,161,32)" fg:x="22" fg:w="1"/><text x="2.0199%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="1.8504%" y="517" width="0.0805%" height="15" fill="rgb(236,69,41)" fg:x="23" fg:w="1"/><text x="2.1004%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.8504%" y="501" width="0.0805%" height="15" fill="rgb(212,160,3)" fg:x="23" fg:w="1"/><text x="2.1004%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="1.9308%" y="517" width="0.0805%" height="15" fill="rgb(216,5,50)" fg:x="24" fg:w="1"/><text x="2.1808%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.0113%" y="485" width="0.0805%" height="15" fill="rgb(241,138,25)" fg:x="25" fg:w="1"/><text x="2.2613%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.0113%" y="469" width="0.0805%" height="15" fill="rgb(239,42,18)" fg:x="25" fg:w="1"/><text x="2.2613%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (11 samples, 0.88%)</title><rect x="1.2872%" y="629" width="0.8850%" height="15" fill="rgb(239,40,7)" fg:x="16" fg:w="11"/><text x="1.5372%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.80%)</title><rect x="1.3677%" y="613" width="0.8045%" height="15" fill="rgb(239,11,31)" fg:x="17" fg:w="10"/><text x="1.6177%" y="623.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="1.8504%" y="597" width="0.3218%" height="15" fill="rgb(224,77,40)" fg:x="23" fg:w="4"/><text x="2.1004%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.8504%" y="581" width="0.3218%" height="15" fill="rgb(226,15,5)" fg:x="23" fg:w="4"/><text x="2.1004%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.8504%" y="565" width="0.3218%" height="15" fill="rgb(254,188,5)" fg:x="23" fg:w="4"/><text x="2.1004%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="1.8504%" y="549" width="0.3218%" height="15" fill="rgb(241,148,52)" fg:x="23" fg:w="4"/><text x="2.1004%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="1.8504%" y="533" width="0.3218%" height="15" fill="rgb(251,48,36)" fg:x="23" fg:w="4"/><text x="2.1004%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.0113%" y="517" width="0.1609%" height="15" fill="rgb(243,83,13)" fg:x="25" fg:w="2"/><text x="2.2613%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="2.0113%" y="501" width="0.1609%" height="15" fill="rgb(210,105,0)" fg:x="25" fg:w="2"/><text x="2.2613%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.0917%" y="485" width="0.0805%" height="15" fill="rgb(239,60,36)" fg:x="26" fg:w="1"/><text x="2.3417%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (12 samples, 0.97%)</title><rect x="1.2872%" y="645" width="0.9654%" height="15" fill="rgb(210,20,0)" fg:x="16" fg:w="12"/><text x="1.5372%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="2.1722%" y="629" width="0.0805%" height="15" fill="rgb(244,26,53)" fg:x="27" fg:w="1"/><text x="2.4222%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="2.1722%" y="613" width="0.0805%" height="15" fill="rgb(240,100,49)" fg:x="27" fg:w="1"/><text x="2.4222%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.1722%" y="597" width="0.0805%" height="15" fill="rgb(250,46,45)" fg:x="27" fg:w="1"/><text x="2.4222%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.1722%" y="581" width="0.0805%" height="15" fill="rgb(220,181,29)" fg:x="27" fg:w="1"/><text x="2.4222%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.1722%" y="565" width="0.0805%" height="15" fill="rgb(213,137,33)" fg:x="27" fg:w="1"/><text x="2.4222%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="2.1722%" y="549" width="0.0805%" height="15" fill="rgb(213,27,48)" fg:x="27" fg:w="1"/><text x="2.4222%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="2.1722%" y="533" width="0.0805%" height="15" fill="rgb(245,180,39)" fg:x="27" fg:w="1"/><text x="2.4222%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="2.1722%" y="517" width="0.0805%" height="15" fill="rgb(212,158,42)" fg:x="27" fg:w="1"/><text x="2.4222%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="2.1722%" y="501" width="0.0805%" height="15" fill="rgb(228,193,18)" fg:x="27" fg:w="1"/><text x="2.4222%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.1722%" y="485" width="0.0805%" height="15" fill="rgb(245,172,29)" fg:x="27" fg:w="1"/><text x="2.4222%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="2.1722%" y="469" width="0.0805%" height="15" fill="rgb(207,98,24)" fg:x="27" fg:w="1"/><text x="2.4222%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="2.1722%" y="453" width="0.0805%" height="15" fill="rgb(249,92,26)" fg:x="27" fg:w="1"/><text x="2.4222%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="2.1722%" y="437" width="0.0805%" height="15" fill="rgb(217,176,26)" fg:x="27" fg:w="1"/><text x="2.4222%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="2.1722%" y="421" width="0.0805%" height="15" fill="rgb(221,8,39)" fg:x="27" fg:w="1"/><text x="2.4222%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="2.1722%" y="405" width="0.0805%" height="15" fill="rgb(208,90,18)" fg:x="27" fg:w="1"/><text x="2.4222%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.1722%" y="389" width="0.0805%" height="15" fill="rgb(207,202,30)" fg:x="27" fg:w="1"/><text x="2.4222%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="2.1722%" y="373" width="0.0805%" height="15" fill="rgb(231,124,22)" fg:x="27" fg:w="1"/><text x="2.4222%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.1722%" y="357" width="0.0805%" height="15" fill="rgb(206,15,5)" fg:x="27" fg:w="1"/><text x="2.4222%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="2.1722%" y="341" width="0.0805%" height="15" fill="rgb(239,16,52)" fg:x="27" fg:w="1"/><text x="2.4222%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.1722%" y="325" width="0.0805%" height="15" fill="rgb(245,213,29)" fg:x="27" fg:w="1"/><text x="2.4222%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="2.1722%" y="309" width="0.0805%" height="15" fill="rgb(213,203,36)" fg:x="27" fg:w="1"/><text x="2.4222%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="2.1722%" y="293" width="0.0805%" height="15" fill="rgb(209,55,18)" fg:x="27" fg:w="1"/><text x="2.4222%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="2.1722%" y="277" width="0.0805%" height="15" fill="rgb(207,133,49)" fg:x="27" fg:w="1"/><text x="2.4222%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.1722%" y="261" width="0.0805%" height="15" fill="rgb(240,33,46)" fg:x="27" fg:w="1"/><text x="2.4222%" y="271.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="2.2526%" y="645" width="0.0805%" height="15" fill="rgb(212,35,2)" fg:x="28" fg:w="1"/><text x="2.5026%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.2526%" y="629" width="0.0805%" height="15" fill="rgb(231,119,28)" fg:x="28" fg:w="1"/><text x="2.5026%" y="639.50"></text></g><g><title>anyhow::error::object_drop (2 samples, 0.16%)</title><rect x="2.4135%" y="597" width="0.1609%" height="15" fill="rgb(252,178,7)" fg:x="30" fg:w="2"/><text x="2.6635%" y="607.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="2.5744%" y="581" width="0.1609%" height="15" fill="rgb(251,91,4)" fg:x="32" fg:w="2"/><text x="2.8244%" y="591.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="2.6549%" y="565" width="0.0805%" height="15" fill="rgb(233,122,19)" fg:x="33" fg:w="1"/><text x="2.9049%" y="575.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (12 samples, 0.97%)</title><rect x="2.3331%" y="613" width="0.9654%" height="15" fill="rgb(231,208,46)" fg:x="29" fg:w="12"/><text x="2.5831%" y="623.50"></text></g><g><title>libloading::os::unix::Library::open (9 samples, 0.72%)</title><rect x="2.5744%" y="597" width="0.7241%" height="15" fill="rgb(243,15,41)" fg:x="32" fg:w="9"/><text x="2.8244%" y="607.50"></text></g><g><title>dlopen (7 samples, 0.56%)</title><rect x="2.7353%" y="581" width="0.5632%" height="15" fill="rgb(210,32,43)" fg:x="34" fg:w="7"/><text x="2.9853%" y="591.50"></text></g><g><title>_dl_catch_error (7 samples, 0.56%)</title><rect x="2.7353%" y="565" width="0.5632%" height="15" fill="rgb(222,177,15)" fg:x="34" fg:w="7"/><text x="2.9853%" y="575.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.8158%" y="549" width="0.4827%" height="15" fill="rgb(244,121,34)" fg:x="35" fg:w="6"/><text x="3.0658%" y="559.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.8158%" y="533" width="0.4827%" height="15" fill="rgb(234,138,4)" fg:x="35" fg:w="6"/><text x="3.0658%" y="543.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.48%)</title><rect x="2.8158%" y="517" width="0.4827%" height="15" fill="rgb(240,97,48)" fg:x="35" fg:w="6"/><text x="3.0658%" y="527.50"></text></g><g><title>_dl_signal_error (1 samples, 0.08%)</title><rect x="3.2180%" y="501" width="0.0805%" height="15" fill="rgb(237,65,54)" fg:x="40" fg:w="1"/><text x="3.4680%" y="511.50"></text></g><g><title>_dl_exception_create (1 samples, 0.08%)</title><rect x="3.2180%" y="485" width="0.0805%" height="15" fill="rgb(214,25,24)" fg:x="40" fg:w="1"/><text x="3.4680%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.2180%" y="469" width="0.0805%" height="15" fill="rgb(213,5,3)" fg:x="40" fg:w="1"/><text x="3.4680%" y="479.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (31 samples, 2.49%)</title><rect x="1.2872%" y="677" width="2.4940%" height="15" fill="rgb(219,81,29)" fg:x="16" fg:w="31"/><text x="1.5372%" y="687.50">&lt;e..</text></g><g><title>engine::session::Session::new (31 samples, 2.49%)</title><rect x="1.2872%" y="661" width="2.4940%" height="15" fill="rgb(220,43,48)" fg:x="16" fg:w="31"/><text x="1.5372%" y="671.50">en..</text></g><g><title>engine::session::Session::initialize (18 samples, 1.45%)</title><rect x="2.3331%" y="645" width="1.4481%" height="15" fill="rgb(239,157,2)" fg:x="29" fg:w="18"/><text x="2.5831%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (18 samples, 1.45%)</title><rect x="2.3331%" y="629" width="1.4481%" height="15" fill="rgb(213,104,43)" fg:x="29" fg:w="18"/><text x="2.5831%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (6 samples, 0.48%)</title><rect x="3.2985%" y="613" width="0.4827%" height="15" fill="rgb(237,84,9)" fg:x="41" fg:w="6"/><text x="3.5485%" y="623.50"></text></g><g><title>clock_gettime (6 samples, 0.48%)</title><rect x="3.2985%" y="597" width="0.4827%" height="15" fill="rgb(252,6,33)" fg:x="41" fg:w="6"/><text x="3.5485%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::begin (1 samples, 0.08%)</title><rect x="3.8616%" y="661" width="0.0805%" height="15" fill="rgb(251,172,22)" fg:x="48" fg:w="1"/><text x="4.1116%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (2 samples, 0.16%)</title><rect x="3.9421%" y="661" width="0.1609%" height="15" fill="rgb(244,91,53)" fg:x="49" fg:w="2"/><text x="4.1921%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (2 samples, 0.16%)</title><rect x="3.9421%" y="645" width="0.1609%" height="15" fill="rgb(219,29,30)" fg:x="49" fg:w="2"/><text x="4.1921%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="4.0225%" y="629" width="0.0805%" height="15" fill="rgb(213,3,15)" fg:x="50" fg:w="1"/><text x="4.2725%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.0225%" y="613" width="0.0805%" height="15" fill="rgb(208,25,28)" fg:x="50" fg:w="1"/><text x="4.2725%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.1030%" y="629" width="0.0805%" height="15" fill="rgb(252,144,25)" fg:x="51" fg:w="1"/><text x="4.3530%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.1834%" y="629" width="0.0805%" height="15" fill="rgb(226,220,25)" fg:x="52" fg:w="1"/><text x="4.4334%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="4.1834%" y="613" width="0.0805%" height="15" fill="rgb(212,131,28)" fg:x="52" fg:w="1"/><text x="4.4334%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="4.1834%" y="597" width="0.0805%" height="15" fill="rgb(219,143,52)" fg:x="52" fg:w="1"/><text x="4.4334%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.6661%" y="517" width="0.0805%" height="15" fill="rgb(215,56,7)" fg:x="58" fg:w="1"/><text x="4.9161%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.6661%" y="501" width="0.0805%" height="15" fill="rgb(239,59,51)" fg:x="58" fg:w="1"/><text x="4.9161%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.6661%" y="485" width="0.0805%" height="15" fill="rgb(209,215,4)" fg:x="58" fg:w="1"/><text x="4.9161%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.6661%" y="469" width="0.0805%" height="15" fill="rgb(221,118,39)" fg:x="58" fg:w="1"/><text x="4.9161%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="4.5857%" y="565" width="0.2414%" height="15" fill="rgb(236,6,44)" fg:x="57" fg:w="3"/><text x="4.8357%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="4.5857%" y="549" width="0.2414%" height="15" fill="rgb(216,122,9)" fg:x="57" fg:w="3"/><text x="4.8357%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.6661%" y="533" width="0.1609%" height="15" fill="rgb(244,134,42)" fg:x="58" fg:w="2"/><text x="4.9161%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="4.7466%" y="517" width="0.0805%" height="15" fill="rgb(209,189,35)" fg:x="59" fg:w="1"/><text x="4.9966%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="4.5052%" y="581" width="0.4023%" height="15" fill="rgb(250,47,36)" fg:x="56" fg:w="5"/><text x="4.7552%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.8270%" y="565" width="0.0805%" height="15" fill="rgb(252,112,4)" fg:x="60" fg:w="1"/><text x="5.0770%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.9075%" y="565" width="0.1609%" height="15" fill="rgb(221,79,51)" fg:x="61" fg:w="2"/><text x="5.1575%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.9879%" y="549" width="0.0805%" height="15" fill="rgb(232,65,53)" fg:x="62" fg:w="1"/><text x="5.2379%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.9879%" y="533" width="0.0805%" height="15" fill="rgb(211,37,7)" fg:x="62" fg:w="1"/><text x="5.2379%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9879%" y="517" width="0.0805%" height="15" fill="rgb(234,221,18)" fg:x="62" fg:w="1"/><text x="5.2379%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.9879%" y="501" width="0.0805%" height="15" fill="rgb(220,158,26)" fg:x="62" fg:w="1"/><text x="5.2379%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.9879%" y="485" width="0.0805%" height="15" fill="rgb(220,70,6)" fg:x="62" fg:w="1"/><text x="5.2379%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.9879%" y="469" width="0.0805%" height="15" fill="rgb(250,39,48)" fg:x="62" fg:w="1"/><text x="5.2379%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="5.0684%" y="549" width="0.0805%" height="15" fill="rgb(206,40,27)" fg:x="63" fg:w="1"/><text x="5.3184%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.1488%" y="517" width="0.0805%" height="15" fill="rgb(247,80,36)" fg:x="64" fg:w="1"/><text x="5.3988%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.1488%" y="501" width="0.0805%" height="15" fill="rgb(222,9,20)" fg:x="64" fg:w="1"/><text x="5.3988%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1488%" y="485" width="0.0805%" height="15" fill="rgb(217,26,45)" fg:x="64" fg:w="1"/><text x="5.3988%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.1488%" y="549" width="0.1609%" height="15" fill="rgb(221,67,14)" fg:x="64" fg:w="2"/><text x="5.3988%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.1488%" y="533" width="0.1609%" height="15" fill="rgb(248,100,24)" fg:x="64" fg:w="2"/><text x="5.3988%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2293%" y="517" width="0.0805%" height="15" fill="rgb(230,187,16)" fg:x="65" fg:w="1"/><text x="5.4793%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.2293%" y="501" width="0.0805%" height="15" fill="rgb(205,108,13)" fg:x="65" fg:w="1"/><text x="5.4793%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.3097%" y="549" width="0.0805%" height="15" fill="rgb(235,71,51)" fg:x="66" fg:w="1"/><text x="5.5597%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="5.3902%" y="549" width="0.2414%" height="15" fill="rgb(251,172,48)" fg:x="67" fg:w="3"/><text x="5.6402%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="5.0684%" y="565" width="0.6436%" height="15" fill="rgb(240,96,49)" fg:x="63" fg:w="8"/><text x="5.3184%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6315%" y="549" width="0.0805%" height="15" fill="rgb(235,46,36)" fg:x="70" fg:w="1"/><text x="5.8815%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6315%" y="533" width="0.0805%" height="15" fill="rgb(244,3,49)" fg:x="70" fg:w="1"/><text x="5.8815%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.6315%" y="517" width="0.0805%" height="15" fill="rgb(206,78,54)" fg:x="70" fg:w="1"/><text x="5.8815%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.29%)</title><rect x="4.5052%" y="597" width="1.2872%" height="15" fill="rgb(208,85,42)" fg:x="56" fg:w="16"/><text x="4.7552%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="4.9075%" y="581" width="0.8850%" height="15" fill="rgb(219,196,21)" fg:x="61" fg:w="11"/><text x="5.1575%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.7120%" y="565" width="0.0805%" height="15" fill="rgb(238,19,9)" fg:x="71" fg:w="1"/><text x="5.9620%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.7120%" y="549" width="0.0805%" height="15" fill="rgb(206,86,13)" fg:x="71" fg:w="1"/><text x="5.9620%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.7120%" y="533" width="0.0805%" height="15" fill="rgb(214,123,40)" fg:x="71" fg:w="1"/><text x="5.9620%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="5.7120%" y="517" width="0.0805%" height="15" fill="rgb(243,53,5)" fg:x="71" fg:w="1"/><text x="5.9620%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.7924%" y="597" width="0.2414%" height="15" fill="rgb(254,186,31)" fg:x="72" fg:w="3"/><text x="6.0424%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="5.7924%" y="581" width="0.2414%" height="15" fill="rgb(221,216,25)" fg:x="72" fg:w="3"/><text x="6.0424%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="5.7924%" y="565" width="0.2414%" height="15" fill="rgb(248,107,42)" fg:x="72" fg:w="3"/><text x="6.0424%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="5.8729%" y="549" width="0.1609%" height="15" fill="rgb(221,85,43)" fg:x="73" fg:w="2"/><text x="6.1229%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="5.9533%" y="533" width="0.0805%" height="15" fill="rgb(225,34,24)" fg:x="74" fg:w="1"/><text x="6.2033%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="5.9533%" y="517" width="0.0805%" height="15" fill="rgb(211,119,1)" fg:x="74" fg:w="1"/><text x="6.2033%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="5.9533%" y="501" width="0.0805%" height="15" fill="rgb(254,216,46)" fg:x="74" fg:w="1"/><text x="6.2033%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1947%" y="549" width="0.0805%" height="15" fill="rgb(238,11,38)" fg:x="77" fg:w="1"/><text x="6.4447%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="6.2751%" y="549" width="0.1609%" height="15" fill="rgb(233,50,15)" fg:x="78" fg:w="2"/><text x="6.5251%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="6.2751%" y="533" width="0.1609%" height="15" fill="rgb(217,181,29)" fg:x="78" fg:w="2"/><text x="6.5251%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="6.3556%" y="517" width="0.0805%" height="15" fill="rgb(214,56,3)" fg:x="79" fg:w="1"/><text x="6.6056%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="6.3556%" y="501" width="0.0805%" height="15" fill="rgb(230,69,45)" fg:x="79" fg:w="1"/><text x="6.6056%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5165%" y="501" width="0.0805%" height="15" fill="rgb(224,201,50)" fg:x="81" fg:w="1"/><text x="6.7665%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5165%" y="485" width="0.0805%" height="15" fill="rgb(217,228,18)" fg:x="81" fg:w="1"/><text x="6.7665%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5165%" y="469" width="0.0805%" height="15" fill="rgb(239,33,44)" fg:x="81" fg:w="1"/><text x="6.7665%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="6.4360%" y="549" width="0.2414%" height="15" fill="rgb(248,210,23)" fg:x="80" fg:w="3"/><text x="6.6860%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="6.4360%" y="533" width="0.2414%" height="15" fill="rgb(253,135,8)" fg:x="80" fg:w="3"/><text x="6.6860%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="6.4360%" y="517" width="0.2414%" height="15" fill="rgb(217,98,21)" fg:x="80" fg:w="3"/><text x="6.6860%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5969%" y="501" width="0.0805%" height="15" fill="rgb(253,130,21)" fg:x="82" fg:w="1"/><text x="6.8469%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.5969%" y="485" width="0.0805%" height="15" fill="rgb(207,81,54)" fg:x="82" fg:w="1"/><text x="6.8469%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5969%" y="469" width="0.0805%" height="15" fill="rgb(232,48,33)" fg:x="82" fg:w="1"/><text x="6.8469%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.5969%" y="453" width="0.0805%" height="15" fill="rgb(211,9,35)" fg:x="82" fg:w="1"/><text x="6.8469%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.5969%" y="437" width="0.0805%" height="15" fill="rgb(205,152,21)" fg:x="82" fg:w="1"/><text x="6.8469%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="6.7578%" y="533" width="0.1609%" height="15" fill="rgb(249,21,27)" fg:x="84" fg:w="2"/><text x="7.0078%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="6.0338%" y="581" width="1.0459%" height="15" fill="rgb(252,29,24)" fg:x="75" fg:w="13"/><text x="6.2838%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.97%)</title><rect x="6.1142%" y="565" width="0.9654%" height="15" fill="rgb(230,130,50)" fg:x="76" fg:w="12"/><text x="6.3642%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="6.6774%" y="549" width="0.4023%" height="15" fill="rgb(239,144,14)" fg:x="83" fg:w="5"/><text x="6.9274%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9187%" y="533" width="0.1609%" height="15" fill="rgb(227,111,50)" fg:x="86" fg:w="2"/><text x="7.1687%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="6.9187%" y="517" width="0.1609%" height="15" fill="rgb(254,84,20)" fg:x="86" fg:w="2"/><text x="7.1687%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9187%" y="501" width="0.1609%" height="15" fill="rgb(232,90,48)" fg:x="86" fg:w="2"/><text x="7.1687%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="6.9187%" y="485" width="0.1609%" height="15" fill="rgb(253,63,47)" fg:x="86" fg:w="2"/><text x="7.1687%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.9992%" y="469" width="0.0805%" height="15" fill="rgb(251,146,35)" fg:x="87" fg:w="1"/><text x="7.2492%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.9992%" y="453" width="0.0805%" height="15" fill="rgb(229,192,35)" fg:x="87" fg:w="1"/><text x="7.2492%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.9992%" y="437" width="0.0805%" height="15" fill="rgb(225,68,9)" fg:x="87" fg:w="1"/><text x="7.2492%" y="447.50"></text></g><g><title>engine::session::Session::flush (38 samples, 3.06%)</title><rect x="4.1030%" y="661" width="3.0571%" height="15" fill="rgb(214,97,34)" fg:x="51" fg:w="38"/><text x="4.3530%" y="671.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (38 samples, 3.06%)</title><rect x="4.1030%" y="645" width="3.0571%" height="15" fill="rgb(253,31,26)" fg:x="51" fg:w="38"/><text x="4.3530%" y="655.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (36 samples, 2.90%)</title><rect x="4.2639%" y="629" width="2.8962%" height="15" fill="rgb(225,151,47)" fg:x="53" fg:w="36"/><text x="4.5139%" y="639.50">en..</text></g><g><title>engine::session::Session::check_for_changes (34 samples, 2.74%)</title><rect x="4.4248%" y="613" width="2.7353%" height="15" fill="rgb(206,185,9)" fg:x="55" fg:w="34"/><text x="4.6748%" y="623.50">en..</text></g><g><title>kernel::compare::any_entity_changes (14 samples, 1.13%)</title><rect x="6.0338%" y="597" width="1.1263%" height="15" fill="rgb(249,65,17)" fg:x="75" fg:w="14"/><text x="6.2838%" y="607.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="7.0796%" y="581" width="0.0805%" height="15" fill="rgb(220,110,10)" fg:x="88" fg:w="1"/><text x="7.3296%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="7.1601%" y="629" width="0.0805%" height="15" fill="rgb(222,198,49)" fg:x="89" fg:w="1"/><text x="7.4101%" y="639.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1601%" y="613" width="0.0805%" height="15" fill="rgb(239,81,13)" fg:x="89" fg:w="1"/><text x="7.4101%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1601%" y="597" width="0.0805%" height="15" fill="rgb(216,128,11)" fg:x="89" fg:w="1"/><text x="7.4101%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.1601%" y="581" width="0.0805%" height="15" fill="rgb(247,156,8)" fg:x="89" fg:w="1"/><text x="7.4101%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.1601%" y="565" width="0.0805%" height="15" fill="rgb(219,173,1)" fg:x="89" fg:w="1"/><text x="7.4101%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.1601%" y="549" width="0.0805%" height="15" fill="rgb(227,42,24)" fg:x="89" fg:w="1"/><text x="7.4101%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.1601%" y="533" width="0.0805%" height="15" fill="rgb(253,219,50)" fg:x="89" fg:w="1"/><text x="7.4101%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.1601%" y="517" width="0.0805%" height="15" fill="rgb(215,191,54)" fg:x="89" fg:w="1"/><text x="7.4101%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.1601%" y="501" width="0.0805%" height="15" fill="rgb(238,83,12)" fg:x="89" fg:w="1"/><text x="7.4101%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.1601%" y="485" width="0.0805%" height="15" fill="rgb(205,124,9)" fg:x="89" fg:w="1"/><text x="7.4101%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.1601%" y="469" width="0.0805%" height="15" fill="rgb(253,174,7)" fg:x="89" fg:w="1"/><text x="7.4101%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.1601%" y="453" width="0.0805%" height="15" fill="rgb(206,134,49)" fg:x="89" fg:w="1"/><text x="7.4101%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.1601%" y="437" width="0.0805%" height="15" fill="rgb(221,89,20)" fg:x="89" fg:w="1"/><text x="7.4101%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1601%" y="421" width="0.0805%" height="15" fill="rgb(240,205,13)" fg:x="89" fg:w="1"/><text x="7.4101%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2405%" y="597" width="0.0805%" height="15" fill="rgb(237,174,32)" fg:x="90" fg:w="1"/><text x="7.4905%" y="607.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="7.2405%" y="629" width="0.1609%" height="15" fill="rgb(226,12,15)" fg:x="90" fg:w="2"/><text x="7.4905%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="7.2405%" y="613" width="0.1609%" height="15" fill="rgb(245,160,52)" fg:x="90" fg:w="2"/><text x="7.4905%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3210%" y="597" width="0.0805%" height="15" fill="rgb(253,80,21)" fg:x="91" fg:w="1"/><text x="7.5710%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3210%" y="581" width="0.0805%" height="15" fill="rgb(231,225,22)" fg:x="91" fg:w="1"/><text x="7.5710%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="7.3210%" y="565" width="0.0805%" height="15" fill="rgb(253,185,12)" fg:x="91" fg:w="1"/><text x="7.5710%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="7.3210%" y="549" width="0.0805%" height="15" fill="rgb(234,197,21)" fg:x="91" fg:w="1"/><text x="7.5710%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.3210%" y="533" width="0.0805%" height="15" fill="rgb(210,47,30)" fg:x="91" fg:w="1"/><text x="7.5710%" y="543.50"></text></g><g><title>plugins_core::build::Build::holding (4 samples, 0.32%)</title><rect x="7.1601%" y="661" width="0.3218%" height="15" fill="rgb(246,139,27)" fg:x="89" fg:w="4"/><text x="7.4101%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (4 samples, 0.32%)</title><rect x="7.1601%" y="645" width="0.3218%" height="15" fill="rgb(226,130,16)" fg:x="89" fg:w="4"/><text x="7.4101%" y="655.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="7.4014%" y="629" width="0.0805%" height="15" fill="rgb(237,208,20)" fg:x="92" fg:w="1"/><text x="7.6514%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="7.4014%" y="613" width="0.0805%" height="15" fill="rgb(245,186,28)" fg:x="92" fg:w="1"/><text x="7.6514%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="7.4014%" y="597" width="0.0805%" height="15" fill="rgb(238,105,39)" fg:x="92" fg:w="1"/><text x="7.6514%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="7.4819%" y="613" width="0.0805%" height="15" fill="rgb(253,228,11)" fg:x="93" fg:w="1"/><text x="7.7319%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4819%" y="597" width="0.0805%" height="15" fill="rgb(224,136,38)" fg:x="93" fg:w="1"/><text x="7.7319%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.4819%" y="581" width="0.0805%" height="15" fill="rgb(211,3,25)" fg:x="93" fg:w="1"/><text x="7.7319%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.4819%" y="565" width="0.0805%" height="15" fill="rgb(238,66,34)" fg:x="93" fg:w="1"/><text x="7.7319%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.4819%" y="549" width="0.0805%" height="15" fill="rgb(223,188,11)" fg:x="93" fg:w="1"/><text x="7.7319%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.4819%" y="533" width="0.0805%" height="15" fill="rgb(221,10,35)" fg:x="93" fg:w="1"/><text x="7.7319%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.4819%" y="517" width="0.0805%" height="15" fill="rgb(223,18,44)" fg:x="93" fg:w="1"/><text x="7.7319%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.4819%" y="501" width="0.0805%" height="15" fill="rgb(220,97,41)" fg:x="93" fg:w="1"/><text x="7.7319%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.4819%" y="485" width="0.0805%" height="15" fill="rgb(206,95,45)" fg:x="93" fg:w="1"/><text x="7.7319%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.4819%" y="469" width="0.0805%" height="15" fill="rgb(209,96,13)" fg:x="93" fg:w="1"/><text x="7.7319%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.4819%" y="453" width="0.0805%" height="15" fill="rgb(237,39,34)" fg:x="93" fg:w="1"/><text x="7.7319%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.4819%" y="437" width="0.0805%" height="15" fill="rgb(213,49,47)" fg:x="93" fg:w="1"/><text x="7.7319%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.4819%" y="421" width="0.0805%" height="15" fill="rgb(205,107,27)" fg:x="93" fg:w="1"/><text x="7.7319%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="7.4819%" y="629" width="0.1609%" height="15" fill="rgb(212,142,9)" fg:x="93" fg:w="2"/><text x="7.7319%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="7.5623%" y="613" width="0.0805%" height="15" fill="rgb(226,182,0)" fg:x="94" fg:w="1"/><text x="7.8123%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="7.5623%" y="597" width="0.0805%" height="15" fill="rgb(231,3,53)" fg:x="94" fg:w="1"/><text x="7.8123%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="7.5623%" y="581" width="0.0805%" height="15" fill="rgb(246,111,28)" fg:x="94" fg:w="1"/><text x="7.8123%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.5623%" y="565" width="0.0805%" height="15" fill="rgb(254,183,7)" fg:x="94" fg:w="1"/><text x="7.8123%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.5623%" y="549" width="0.0805%" height="15" fill="rgb(247,177,28)" fg:x="94" fg:w="1"/><text x="7.8123%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="7.5623%" y="533" width="0.0805%" height="15" fill="rgb(244,43,1)" fg:x="94" fg:w="1"/><text x="7.8123%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.5623%" y="517" width="0.0805%" height="15" fill="rgb(207,2,35)" fg:x="94" fg:w="1"/><text x="7.8123%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.5623%" y="501" width="0.0805%" height="15" fill="rgb(213,83,22)" fg:x="94" fg:w="1"/><text x="7.8123%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.5623%" y="485" width="0.0805%" height="15" fill="rgb(246,212,13)" fg:x="94" fg:w="1"/><text x="7.8123%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5623%" y="469" width="0.0805%" height="15" fill="rgb(213,127,46)" fg:x="94" fg:w="1"/><text x="7.8123%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.5623%" y="453" width="0.0805%" height="15" fill="rgb(219,215,39)" fg:x="94" fg:w="1"/><text x="7.8123%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="7.5623%" y="437" width="0.0805%" height="15" fill="rgb(227,99,17)" fg:x="94" fg:w="1"/><text x="7.8123%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="7.5623%" y="421" width="0.0805%" height="15" fill="rgb(208,155,18)" fg:x="94" fg:w="1"/><text x="7.8123%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="7.5623%" y="405" width="0.0805%" height="15" fill="rgb(223,204,38)" fg:x="94" fg:w="1"/><text x="7.8123%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="7.5623%" y="389" width="0.0805%" height="15" fill="rgb(212,114,21)" fg:x="94" fg:w="1"/><text x="7.8123%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="7.5623%" y="373" width="0.0805%" height="15" fill="rgb(250,74,13)" fg:x="94" fg:w="1"/><text x="7.8123%" y="383.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="7.4819%" y="661" width="0.2414%" height="15" fill="rgb(234,7,1)" fg:x="93" fg:w="3"/><text x="7.7319%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="7.4819%" y="645" width="0.2414%" height="15" fill="rgb(207,138,31)" fg:x="93" fg:w="3"/><text x="7.7319%" y="655.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="7.6428%" y="629" width="0.0805%" height="15" fill="rgb(215,186,42)" fg:x="95" fg:w="1"/><text x="7.8928%" y="639.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="7.6428%" y="613" width="0.0805%" height="15" fill="rgb(229,205,49)" fg:x="95" fg:w="1"/><text x="7.8928%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.6428%" y="597" width="0.0805%" height="15" fill="rgb(216,156,32)" fg:x="95" fg:w="1"/><text x="7.8928%" y="607.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="7.8842%" y="565" width="0.0805%" height="15" fill="rgb(238,7,21)" fg:x="98" fg:w="1"/><text x="8.1342%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="7.8842%" y="581" width="0.1609%" height="15" fill="rgb(249,190,22)" fg:x="98" fg:w="2"/><text x="8.1342%" y="591.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="7.9646%" y="565" width="0.0805%" height="15" fill="rgb(253,51,31)" fg:x="99" fg:w="1"/><text x="8.2146%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9646%" y="549" width="0.0805%" height="15" fill="rgb(237,90,54)" fg:x="99" fg:w="1"/><text x="8.2146%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.9646%" y="533" width="0.0805%" height="15" fill="rgb(250,214,33)" fg:x="99" fg:w="1"/><text x="8.2146%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="7.9646%" y="517" width="0.0805%" height="15" fill="rgb(237,10,49)" fg:x="99" fg:w="1"/><text x="8.2146%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="7.9646%" y="501" width="0.0805%" height="15" fill="rgb(241,56,36)" fg:x="99" fg:w="1"/><text x="8.2146%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="7.9646%" y="485" width="0.0805%" height="15" fill="rgb(227,164,12)" fg:x="99" fg:w="1"/><text x="8.2146%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.9646%" y="469" width="0.0805%" height="15" fill="rgb(249,149,35)" fg:x="99" fg:w="1"/><text x="8.2146%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="7.9646%" y="453" width="0.0805%" height="15" fill="rgb(238,227,50)" fg:x="99" fg:w="1"/><text x="8.2146%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="7.9646%" y="437" width="0.0805%" height="15" fill="rgb(235,102,45)" fg:x="99" fg:w="1"/><text x="8.2146%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="7.9646%" y="421" width="0.0805%" height="15" fill="rgb(211,10,38)" fg:x="99" fg:w="1"/><text x="8.2146%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="7.9646%" y="405" width="0.0805%" height="15" fill="rgb(219,77,48)" fg:x="99" fg:w="1"/><text x="8.2146%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="7.9646%" y="389" width="0.0805%" height="15" fill="rgb(246,6,15)" fg:x="99" fg:w="1"/><text x="8.2146%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.9646%" y="373" width="0.0805%" height="15" fill="rgb(207,220,2)" fg:x="99" fg:w="1"/><text x="8.2146%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.0451%" y="533" width="0.0805%" height="15" fill="rgb(242,48,14)" fg:x="100" fg:w="1"/><text x="8.2951%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (2 samples, 0.16%)</title><rect x="8.0451%" y="565" width="0.1609%" height="15" fill="rgb(218,19,27)" fg:x="100" fg:w="2"/><text x="8.2951%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="8.0451%" y="549" width="0.1609%" height="15" fill="rgb(228,0,35)" fg:x="100" fg:w="2"/><text x="8.2951%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.1255%" y="533" width="0.0805%" height="15" fill="rgb(244,142,54)" fg:x="101" fg:w="1"/><text x="8.3755%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1255%" y="517" width="0.0805%" height="15" fill="rgb(243,217,40)" fg:x="101" fg:w="1"/><text x="8.3755%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="8.2060%" y="565" width="0.0805%" height="15" fill="rgb(207,114,16)" fg:x="102" fg:w="1"/><text x="8.4560%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (7 samples, 0.56%)</title><rect x="7.8037%" y="597" width="0.5632%" height="15" fill="rgb(224,33,25)" fg:x="97" fg:w="7"/><text x="8.0537%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (4 samples, 0.32%)</title><rect x="8.0451%" y="581" width="0.3218%" height="15" fill="rgb(230,93,54)" fg:x="100" fg:w="4"/><text x="8.2951%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="8.2864%" y="565" width="0.0805%" height="15" fill="rgb(224,56,24)" fg:x="103" fg:w="1"/><text x="8.5364%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="8.2864%" y="549" width="0.0805%" height="15" fill="rgb(235,189,50)" fg:x="103" fg:w="1"/><text x="8.5364%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="8.2864%" y="533" width="0.0805%" height="15" fill="rgb(242,173,8)" fg:x="103" fg:w="1"/><text x="8.5364%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="8.2864%" y="517" width="0.0805%" height="15" fill="rgb(209,206,10)" fg:x="103" fg:w="1"/><text x="8.5364%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="7.7233%" y="645" width="0.7241%" height="15" fill="rgb(213,182,44)" fg:x="96" fg:w="9"/><text x="7.9733%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="7.7233%" y="629" width="0.7241%" height="15" fill="rgb(243,51,15)" fg:x="96" fg:w="9"/><text x="7.9733%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="7.7233%" y="613" width="0.7241%" height="15" fill="rgb(241,13,14)" fg:x="96" fg:w="9"/><text x="7.9733%" y="623.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="8.3669%" y="597" width="0.0805%" height="15" fill="rgb(239,147,24)" fg:x="104" fg:w="1"/><text x="8.6169%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3669%" y="581" width="0.0805%" height="15" fill="rgb(223,129,16)" fg:x="104" fg:w="1"/><text x="8.6169%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3669%" y="565" width="0.0805%" height="15" fill="rgb(209,169,13)" fg:x="104" fg:w="1"/><text x="8.6169%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.3669%" y="549" width="0.0805%" height="15" fill="rgb(235,159,41)" fg:x="104" fg:w="1"/><text x="8.6169%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.3669%" y="533" width="0.0805%" height="15" fill="rgb(223,219,48)" fg:x="104" fg:w="1"/><text x="8.6169%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.3669%" y="517" width="0.0805%" height="15" fill="rgb(236,80,13)" fg:x="104" fg:w="1"/><text x="8.6169%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.3669%" y="501" width="0.0805%" height="15" fill="rgb(213,5,6)" fg:x="104" fg:w="1"/><text x="8.6169%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.3669%" y="485" width="0.0805%" height="15" fill="rgb(205,59,21)" fg:x="104" fg:w="1"/><text x="8.6169%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.3669%" y="469" width="0.0805%" height="15" fill="rgb(247,137,35)" fg:x="104" fg:w="1"/><text x="8.6169%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.3669%" y="453" width="0.0805%" height="15" fill="rgb(242,208,28)" fg:x="104" fg:w="1"/><text x="8.6169%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.3669%" y="437" width="0.0805%" height="15" fill="rgb(245,62,25)" fg:x="104" fg:w="1"/><text x="8.6169%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.3669%" y="421" width="0.0805%" height="15" fill="rgb(233,99,54)" fg:x="104" fg:w="1"/><text x="8.6169%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.3669%" y="405" width="0.0805%" height="15" fill="rgb(213,10,37)" fg:x="104" fg:w="1"/><text x="8.6169%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.3669%" y="389" width="0.0805%" height="15" fill="rgb(235,143,30)" fg:x="104" fg:w="1"/><text x="8.6169%" y="399.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="8.4473%" y="613" width="0.1609%" height="15" fill="rgb(250,146,33)" fg:x="105" fg:w="2"/><text x="8.6973%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.5278%" y="597" width="0.0805%" height="15" fill="rgb(226,198,42)" fg:x="106" fg:w="1"/><text x="8.7778%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.5278%" y="581" width="0.0805%" height="15" fill="rgb(222,55,6)" fg:x="106" fg:w="1"/><text x="8.7778%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.5278%" y="565" width="0.0805%" height="15" fill="rgb(213,224,31)" fg:x="106" fg:w="1"/><text x="8.7778%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.5278%" y="549" width="0.0805%" height="15" fill="rgb(226,103,35)" fg:x="106" fg:w="1"/><text x="8.7778%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.5278%" y="533" width="0.0805%" height="15" fill="rgb(205,66,45)" fg:x="106" fg:w="1"/><text x="8.7778%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.5278%" y="517" width="0.0805%" height="15" fill="rgb(226,51,42)" fg:x="106" fg:w="1"/><text x="8.7778%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.5278%" y="501" width="0.0805%" height="15" fill="rgb(206,69,1)" fg:x="106" fg:w="1"/><text x="8.7778%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.5278%" y="485" width="0.0805%" height="15" fill="rgb(213,228,47)" fg:x="106" fg:w="1"/><text x="8.7778%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.5278%" y="469" width="0.0805%" height="15" fill="rgb(224,204,18)" fg:x="106" fg:w="1"/><text x="8.7778%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.5278%" y="453" width="0.0805%" height="15" fill="rgb(253,187,47)" fg:x="106" fg:w="1"/><text x="8.7778%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.5278%" y="437" width="0.0805%" height="15" fill="rgb(232,61,2)" fg:x="106" fg:w="1"/><text x="8.7778%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5278%" y="421" width="0.0805%" height="15" fill="rgb(213,132,35)" fg:x="106" fg:w="1"/><text x="8.7778%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="8.6082%" y="613" width="0.0805%" height="15" fill="rgb(247,33,21)" fg:x="107" fg:w="1"/><text x="8.8582%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="8.6082%" y="597" width="0.0805%" height="15" fill="rgb(233,71,46)" fg:x="107" fg:w="1"/><text x="8.8582%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="8.6082%" y="581" width="0.0805%" height="15" fill="rgb(222,173,43)" fg:x="107" fg:w="1"/><text x="8.8582%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6082%" y="565" width="0.0805%" height="15" fill="rgb(249,218,47)" fg:x="107" fg:w="1"/><text x="8.8582%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6082%" y="549" width="0.0805%" height="15" fill="rgb(254,185,48)" fg:x="107" fg:w="1"/><text x="8.8582%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.6082%" y="533" width="0.0805%" height="15" fill="rgb(252,165,50)" fg:x="107" fg:w="1"/><text x="8.8582%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.6082%" y="517" width="0.0805%" height="15" fill="rgb(206,219,6)" fg:x="107" fg:w="1"/><text x="8.8582%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.6082%" y="501" width="0.0805%" height="15" fill="rgb(212,212,45)" fg:x="107" fg:w="1"/><text x="8.8582%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6082%" y="485" width="0.0805%" height="15" fill="rgb(221,31,9)" fg:x="107" fg:w="1"/><text x="8.8582%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6082%" y="469" width="0.0805%" height="15" fill="rgb(234,198,39)" fg:x="107" fg:w="1"/><text x="8.8582%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.6082%" y="453" width="0.0805%" height="15" fill="rgb(252,145,46)" fg:x="107" fg:w="1"/><text x="8.8582%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.6082%" y="437" width="0.0805%" height="15" fill="rgb(237,149,0)" fg:x="107" fg:w="1"/><text x="8.8582%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.6082%" y="421" width="0.0805%" height="15" fill="rgb(229,65,5)" fg:x="107" fg:w="1"/><text x="8.8582%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.6082%" y="405" width="0.0805%" height="15" fill="rgb(235,60,36)" fg:x="107" fg:w="1"/><text x="8.8582%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6082%" y="389" width="0.0805%" height="15" fill="rgb(222,47,18)" fg:x="107" fg:w="1"/><text x="8.8582%" y="399.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="8.6887%" y="613" width="0.0805%" height="15" fill="rgb(235,114,22)" fg:x="108" fg:w="1"/><text x="8.9387%" y="623.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="8.7691%" y="613" width="0.0805%" height="15" fill="rgb(209,167,11)" fg:x="109" fg:w="1"/><text x="9.0191%" y="623.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="8.7691%" y="597" width="0.0805%" height="15" fill="rgb(251,73,18)" fg:x="109" fg:w="1"/><text x="9.0191%" y="607.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="8.7691%" y="581" width="0.0805%" height="15" fill="rgb(217,60,17)" fg:x="109" fg:w="1"/><text x="9.0191%" y="591.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7691%" y="565" width="0.0805%" height="15" fill="rgb(224,36,37)" fg:x="109" fg:w="1"/><text x="9.0191%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.7691%" y="549" width="0.0805%" height="15" fill="rgb(211,21,32)" fg:x="109" fg:w="1"/><text x="9.0191%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7691%" y="533" width="0.0805%" height="15" fill="rgb(231,55,48)" fg:x="109" fg:w="1"/><text x="9.0191%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="8.7691%" y="517" width="0.0805%" height="15" fill="rgb(227,42,18)" fg:x="109" fg:w="1"/><text x="9.0191%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.7691%" y="501" width="0.0805%" height="15" fill="rgb(217,2,27)" fg:x="109" fg:w="1"/><text x="9.0191%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="8.8496%" y="581" width="0.0805%" height="15" fill="rgb(251,138,23)" fg:x="110" fg:w="1"/><text x="9.0996%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="8.8496%" y="565" width="0.0805%" height="15" fill="rgb(226,184,11)" fg:x="110" fg:w="1"/><text x="9.0996%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="8.8496%" y="549" width="0.0805%" height="15" fill="rgb(242,142,12)" fg:x="110" fg:w="1"/><text x="9.0996%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="8.8496%" y="533" width="0.0805%" height="15" fill="rgb(234,187,18)" fg:x="110" fg:w="1"/><text x="9.0996%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8496%" y="517" width="0.0805%" height="15" fill="rgb(237,44,42)" fg:x="110" fg:w="1"/><text x="9.0996%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="8.8496%" y="501" width="0.0805%" height="15" fill="rgb(211,90,23)" fg:x="110" fg:w="1"/><text x="9.0996%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="8.8496%" y="485" width="0.0805%" height="15" fill="rgb(207,81,18)" fg:x="110" fg:w="1"/><text x="9.0996%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="8.9300%" y="565" width="0.1609%" height="15" fill="rgb(222,107,28)" fg:x="111" fg:w="2"/><text x="9.1800%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="9.0909%" y="549" width="0.5632%" height="15" fill="rgb(237,83,52)" fg:x="113" fg:w="7"/><text x="9.3409%" y="559.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="9.1714%" y="533" width="0.4827%" height="15" fill="rgb(208,67,11)" fg:x="114" fg:w="6"/><text x="9.4214%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="9.2518%" y="517" width="0.4023%" height="15" fill="rgb(249,157,49)" fg:x="115" fg:w="5"/><text x="9.5018%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="9.2518%" y="501" width="0.4023%" height="15" fill="rgb(243,200,1)" fg:x="115" fg:w="5"/><text x="9.5018%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="9.4127%" y="485" width="0.2414%" height="15" fill="rgb(225,162,37)" fg:x="117" fg:w="3"/><text x="9.6627%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="9.4127%" y="469" width="0.2414%" height="15" fill="rgb(242,92,13)" fg:x="117" fg:w="3"/><text x="9.6627%" y="479.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="9.4127%" y="453" width="0.2414%" height="15" fill="rgb(220,43,36)" fg:x="117" fg:w="3"/><text x="9.6627%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (8 samples, 0.64%)</title><rect x="9.0909%" y="565" width="0.6436%" height="15" fill="rgb(213,165,48)" fg:x="113" fg:w="8"/><text x="9.3409%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.6541%" y="549" width="0.0805%" height="15" fill="rgb(227,200,9)" fg:x="120" fg:w="1"/><text x="9.9041%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.6541%" y="533" width="0.0805%" height="15" fill="rgb(221,222,28)" fg:x="120" fg:w="1"/><text x="9.9041%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="9.8954%" y="549" width="0.5632%" height="15" fill="rgb(223,142,26)" fg:x="123" fg:w="7"/><text x="10.1454%" y="559.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.56%)</title><rect x="9.8954%" y="533" width="0.5632%" height="15" fill="rgb(243,46,9)" fg:x="123" fg:w="7"/><text x="10.1454%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="10.2172%" y="517" width="0.2414%" height="15" fill="rgb(250,56,11)" fg:x="127" fg:w="3"/><text x="10.4672%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="10.2172%" y="501" width="0.2414%" height="15" fill="rgb(229,113,5)" fg:x="127" fg:w="3"/><text x="10.4672%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="10.2172%" y="485" width="0.2414%" height="15" fill="rgb(244,108,28)" fg:x="127" fg:w="3"/><text x="10.4672%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="10.2172%" y="469" width="0.2414%" height="15" fill="rgb(242,119,50)" fg:x="127" fg:w="3"/><text x="10.4672%" y="479.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="10.2172%" y="453" width="0.2414%" height="15" fill="rgb(224,164,23)" fg:x="127" fg:w="3"/><text x="10.4672%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.4586%" y="501" width="0.0805%" height="15" fill="rgb(214,227,44)" fg:x="130" fg:w="1"/><text x="10.7086%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.4586%" y="533" width="0.1609%" height="15" fill="rgb(238,202,4)" fg:x="130" fg:w="2"/><text x="10.7086%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="10.4586%" y="517" width="0.1609%" height="15" fill="rgb(213,190,30)" fg:x="130" fg:w="2"/><text x="10.7086%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.5390%" y="501" width="0.0805%" height="15" fill="rgb(239,15,2)" fg:x="131" fg:w="1"/><text x="10.7890%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="10.6195%" y="533" width="0.2414%" height="15" fill="rgb(249,229,4)" fg:x="132" fg:w="3"/><text x="10.8695%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="10.6195%" y="517" width="0.2414%" height="15" fill="rgb(239,75,44)" fg:x="132" fg:w="3"/><text x="10.8695%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.7804%" y="501" width="0.0805%" height="15" fill="rgb(251,206,23)" fg:x="134" fg:w="1"/><text x="11.0304%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.8608%" y="517" width="0.0805%" height="15" fill="rgb(215,208,0)" fg:x="135" fg:w="1"/><text x="11.1108%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.8608%" y="501" width="0.0805%" height="15" fill="rgb(230,75,50)" fg:x="135" fg:w="1"/><text x="11.1108%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.0217%" y="501" width="0.0805%" height="15" fill="rgb(246,180,39)" fg:x="137" fg:w="1"/><text x="11.2717%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="11.0217%" y="485" width="0.0805%" height="15" fill="rgb(249,175,24)" fg:x="137" fg:w="1"/><text x="11.2717%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="11.0217%" y="469" width="0.0805%" height="15" fill="rgb(247,176,22)" fg:x="137" fg:w="1"/><text x="11.2717%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="11.1022%" y="501" width="0.1609%" height="15" fill="rgb(241,100,24)" fg:x="138" fg:w="2"/><text x="11.3522%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="11.1022%" y="485" width="0.1609%" height="15" fill="rgb(233,4,35)" fg:x="138" fg:w="2"/><text x="11.3522%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="11.1022%" y="469" width="0.1609%" height="15" fill="rgb(211,164,46)" fg:x="138" fg:w="2"/><text x="11.3522%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="11.1826%" y="453" width="0.0805%" height="15" fill="rgb(242,99,53)" fg:x="139" fg:w="1"/><text x="11.4326%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="10.9413%" y="517" width="0.4023%" height="15" fill="rgb(243,45,33)" fg:x="136" fg:w="5"/><text x="11.1913%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="11.2631%" y="501" width="0.0805%" height="15" fill="rgb(217,55,21)" fg:x="140" fg:w="1"/><text x="11.5131%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="10.4586%" y="549" width="1.1263%" height="15" fill="rgb(245,145,46)" fg:x="130" fg:w="14"/><text x="10.7086%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="10.8608%" y="533" width="0.7241%" height="15" fill="rgb(215,112,45)" fg:x="135" fg:w="9"/><text x="11.1108%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="11.3435%" y="517" width="0.2414%" height="15" fill="rgb(228,104,16)" fg:x="141" fg:w="3"/><text x="11.5935%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (38 samples, 3.06%)</title><rect x="8.9300%" y="581" width="3.0571%" height="15" fill="rgb(239,186,38)" fg:x="111" fg:w="38"/><text x="9.1800%" y="591.50">&lt;se..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (28 samples, 2.25%)</title><rect x="9.7345%" y="565" width="2.2526%" height="15" fill="rgb(228,38,35)" fg:x="121" fg:w="28"/><text x="9.9845%" y="575.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="11.5849%" y="549" width="0.4023%" height="15" fill="rgb(251,42,40)" fg:x="144" fg:w="5"/><text x="11.8349%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="11.6653%" y="533" width="0.3218%" height="15" fill="rgb(210,51,19)" fg:x="145" fg:w="4"/><text x="11.9153%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="11.6653%" y="517" width="0.3218%" height="15" fill="rgb(236,94,42)" fg:x="145" fg:w="4"/><text x="11.9153%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="11.7458%" y="501" width="0.2414%" height="15" fill="rgb(239,167,16)" fg:x="146" fg:w="3"/><text x="11.9958%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="11.7458%" y="485" width="0.2414%" height="15" fill="rgb(252,175,31)" fg:x="146" fg:w="3"/><text x="11.9958%" y="495.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="11.7458%" y="469" width="0.2414%" height="15" fill="rgb(206,166,30)" fg:x="146" fg:w="3"/><text x="11.9958%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.9871%" y="549" width="0.0805%" height="15" fill="rgb(206,209,37)" fg:x="149" fg:w="1"/><text x="12.2371%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="12.0676%" y="549" width="0.1609%" height="15" fill="rgb(226,91,4)" fg:x="150" fg:w="2"/><text x="12.3176%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1480%" y="533" width="0.0805%" height="15" fill="rgb(222,167,0)" fg:x="151" fg:w="1"/><text x="12.3980%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.2285%" y="533" width="0.0805%" height="15" fill="rgb(211,70,14)" fg:x="152" fg:w="1"/><text x="12.4785%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.3089%" y="533" width="0.0805%" height="15" fill="rgb(214,84,42)" fg:x="153" fg:w="1"/><text x="12.5589%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.4698%" y="517" width="0.0805%" height="15" fill="rgb(235,157,37)" fg:x="155" fg:w="1"/><text x="12.7198%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.5503%" y="517" width="0.0805%" height="15" fill="rgb(225,13,6)" fg:x="156" fg:w="1"/><text x="12.8003%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.6307%" y="501" width="0.0805%" height="15" fill="rgb(205,202,1)" fg:x="157" fg:w="1"/><text x="12.8807%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.7112%" y="501" width="0.0805%" height="15" fill="rgb(232,195,26)" fg:x="158" fg:w="1"/><text x="12.9612%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7916%" y="469" width="0.0805%" height="15" fill="rgb(208,102,26)" fg:x="159" fg:w="1"/><text x="13.0416%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="11.9871%" y="581" width="0.9654%" height="15" fill="rgb(215,41,39)" fg:x="149" fg:w="12"/><text x="12.2371%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="11.9871%" y="565" width="0.9654%" height="15" fill="rgb(247,139,11)" fg:x="149" fg:w="12"/><text x="12.2371%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="12.2285%" y="549" width="0.7241%" height="15" fill="rgb(243,99,6)" fg:x="152" fg:w="9"/><text x="12.4785%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="12.3894%" y="533" width="0.5632%" height="15" fill="rgb(230,168,48)" fg:x="154" fg:w="7"/><text x="12.6394%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="12.6307%" y="517" width="0.3218%" height="15" fill="rgb(238,227,13)" fg:x="157" fg:w="4"/><text x="12.8807%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="12.7916%" y="501" width="0.1609%" height="15" fill="rgb(209,109,13)" fg:x="159" fg:w="2"/><text x="13.0416%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="12.7916%" y="485" width="0.1609%" height="15" fill="rgb(228,195,1)" fg:x="159" fg:w="2"/><text x="13.0416%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.8721%" y="469" width="0.0805%" height="15" fill="rgb(230,218,0)" fg:x="160" fg:w="1"/><text x="13.1221%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="13.1939%" y="533" width="0.3218%" height="15" fill="rgb(206,1,45)" fg:x="164" fg:w="4"/><text x="13.4439%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (7 samples, 0.56%)</title><rect x="13.5157%" y="533" width="0.5632%" height="15" fill="rgb(209,124,26)" fg:x="168" fg:w="7"/><text x="13.7657%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="13.8375%" y="517" width="0.2414%" height="15" fill="rgb(220,59,8)" fg:x="172" fg:w="3"/><text x="14.0875%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="14.0788%" y="533" width="0.2414%" height="15" fill="rgb(251,41,37)" fg:x="175" fg:w="3"/><text x="14.3288%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.0788%" y="517" width="0.2414%" height="15" fill="rgb(239,152,21)" fg:x="175" fg:w="3"/><text x="14.3288%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="14.1593%" y="501" width="0.1609%" height="15" fill="rgb(226,32,1)" fg:x="176" fg:w="2"/><text x="14.4093%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.2397%" y="485" width="0.0805%" height="15" fill="rgb(230,154,36)" fg:x="177" fg:w="1"/><text x="14.4897%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.2397%" y="469" width="0.0805%" height="15" fill="rgb(208,228,43)" fg:x="177" fg:w="1"/><text x="14.4897%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="14.4006%" y="485" width="0.0805%" height="15" fill="rgb(214,203,3)" fg:x="179" fg:w="1"/><text x="14.6506%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="14.3202%" y="533" width="0.2414%" height="15" fill="rgb(207,149,29)" fg:x="178" fg:w="3"/><text x="14.5702%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="14.3202%" y="517" width="0.2414%" height="15" fill="rgb(250,105,7)" fg:x="178" fg:w="3"/><text x="14.5702%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="14.3202%" y="501" width="0.2414%" height="15" fill="rgb(232,222,16)" fg:x="178" fg:w="3"/><text x="14.5702%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4811%" y="485" width="0.0805%" height="15" fill="rgb(209,32,24)" fg:x="180" fg:w="1"/><text x="14.7311%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7224%" y="517" width="0.0805%" height="15" fill="rgb(225,13,6)" fg:x="183" fg:w="1"/><text x="14.9724%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.7224%" y="501" width="0.0805%" height="15" fill="rgb(245,226,26)" fg:x="183" fg:w="1"/><text x="14.9724%" y="511.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="14.7224%" y="485" width="0.0805%" height="15" fill="rgb(229,178,27)" fg:x="183" fg:w="1"/><text x="14.9724%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8833%" y="485" width="0.0805%" height="15" fill="rgb(205,227,28)" fg:x="185" fg:w="1"/><text x="15.1333%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="14.9638%" y="485" width="0.0805%" height="15" fill="rgb(210,191,45)" fg:x="186" fg:w="1"/><text x="15.2138%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9638%" y="469" width="0.0805%" height="15" fill="rgb(206,124,16)" fg:x="186" fg:w="1"/><text x="15.2138%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="14.9638%" y="453" width="0.0805%" height="15" fill="rgb(210,162,0)" fg:x="186" fg:w="1"/><text x="15.2138%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="14.8833%" y="501" width="0.3218%" height="15" fill="rgb(211,54,38)" fg:x="185" fg:w="4"/><text x="15.1333%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="15.0442%" y="485" width="0.1609%" height="15" fill="rgb(248,192,3)" fg:x="187" fg:w="2"/><text x="15.2942%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="15.0442%" y="469" width="0.1609%" height="15" fill="rgb(233,187,18)" fg:x="187" fg:w="2"/><text x="15.2942%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="15.0442%" y="453" width="0.1609%" height="15" fill="rgb(237,208,14)" fg:x="187" fg:w="2"/><text x="15.2942%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.1247%" y="437" width="0.0805%" height="15" fill="rgb(212,77,1)" fg:x="188" fg:w="1"/><text x="15.3747%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.1247%" y="421" width="0.0805%" height="15" fill="rgb(210,163,22)" fg:x="188" fg:w="1"/><text x="15.3747%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (28 samples, 2.25%)</title><rect x="13.0330%" y="565" width="2.2526%" height="15" fill="rgb(250,58,28)" fg:x="162" fg:w="28"/><text x="13.2830%" y="575.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.25%)</title><rect x="13.0330%" y="549" width="2.2526%" height="15" fill="rgb(254,28,41)" fg:x="162" fg:w="28"/><text x="13.2830%" y="559.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="14.5615%" y="533" width="0.7241%" height="15" fill="rgb(237,162,36)" fg:x="181" fg:w="9"/><text x="14.8115%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (6 samples, 0.48%)</title><rect x="14.8029%" y="517" width="0.4827%" height="15" fill="rgb(232,56,6)" fg:x="184" fg:w="6"/><text x="15.0529%" y="527.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="15.2051%" y="501" width="0.0805%" height="15" fill="rgb(216,127,42)" fg:x="189" fg:w="1"/><text x="15.4551%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2051%" y="485" width="0.0805%" height="15" fill="rgb(241,69,15)" fg:x="189" fg:w="1"/><text x="15.4551%" y="495.50"></text></g><g><title>engine::session::Session::flush (86 samples, 6.92%)</title><rect x="8.4473%" y="645" width="6.9187%" height="15" fill="rgb(227,180,19)" fg:x="105" fg:w="86"/><text x="8.6973%" y="655.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (86 samples, 6.92%)</title><rect x="8.4473%" y="629" width="6.9187%" height="15" fill="rgb(231,188,29)" fg:x="105" fg:w="86"/><text x="8.6973%" y="639.50">engine::s..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (81 samples, 6.52%)</title><rect x="8.8496%" y="613" width="6.5165%" height="15" fill="rgb(224,176,27)" fg:x="110" fg:w="81"/><text x="9.0996%" y="623.50">engine::i..</text></g><g><title>engine::session::Session::check_for_changes (81 samples, 6.52%)</title><rect x="8.8496%" y="597" width="6.5165%" height="15" fill="rgb(249,214,19)" fg:x="110" fg:w="81"/><text x="9.0996%" y="607.50">engine::s..</text></g><g><title>kernel::compare::any_entity_changes (30 samples, 2.41%)</title><rect x="12.9525%" y="581" width="2.4135%" height="15" fill="rgb(240,0,4)" fg:x="161" fg:w="30"/><text x="13.2025%" y="591.50">ke..</text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="15.2856%" y="565" width="0.0805%" height="15" fill="rgb(233,28,41)" fg:x="190" fg:w="1"/><text x="15.5356%" y="575.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="15.2856%" y="549" width="0.0805%" height="15" fill="rgb(220,90,51)" fg:x="190" fg:w="1"/><text x="15.5356%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.2856%" y="533" width="0.0805%" height="15" fill="rgb(250,52,22)" fg:x="190" fg:w="1"/><text x="15.5356%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.3660%" y="645" width="0.0805%" height="15" fill="rgb(231,152,36)" fg:x="191" fg:w="1"/><text x="15.6160%" y="655.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="15.3660%" y="629" width="0.0805%" height="15" fill="rgb(250,218,4)" fg:x="191" fg:w="1"/><text x="15.6160%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.3660%" y="613" width="0.0805%" height="15" fill="rgb(210,38,21)" fg:x="191" fg:w="1"/><text x="15.6160%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::set_name (1 samples, 0.08%)</title><rect x="15.4465%" y="645" width="0.0805%" height="15" fill="rgb(230,75,13)" fg:x="192" fg:w="1"/><text x="15.6965%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="15.4465%" y="629" width="0.0805%" height="15" fill="rgb(250,68,53)" fg:x="192" fg:w="1"/><text x="15.6965%" y="639.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="15.4465%" y="613" width="0.0805%" height="15" fill="rgb(250,210,16)" fg:x="192" fg:w="1"/><text x="15.6965%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="15.5270%" y="629" width="0.4827%" height="15" fill="rgb(240,132,5)" fg:x="193" fg:w="6"/><text x="15.7770%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="15.5270%" y="613" width="0.4827%" height="15" fill="rgb(222,148,48)" fg:x="193" fg:w="6"/><text x="15.7770%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (6 samples, 0.48%)</title><rect x="15.5270%" y="597" width="0.4827%" height="15" fill="rgb(247,181,24)" fg:x="193" fg:w="6"/><text x="15.7770%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.48%)</title><rect x="15.5270%" y="581" width="0.4827%" height="15" fill="rgb(239,5,31)" fg:x="193" fg:w="6"/><text x="15.7770%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="15.6074%" y="565" width="0.4023%" height="15" fill="rgb(241,152,38)" fg:x="194" fg:w="5"/><text x="15.8574%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="15.6074%" y="549" width="0.4023%" height="15" fill="rgb(246,200,37)" fg:x="194" fg:w="5"/><text x="15.8574%" y="559.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="15.6074%" y="533" width="0.4023%" height="15" fill="rgb(243,210,26)" fg:x="194" fg:w="5"/><text x="15.8574%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="16.0097%" y="613" width="0.0805%" height="15" fill="rgb(222,22,22)" fg:x="199" fg:w="1"/><text x="16.2597%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.0097%" y="597" width="0.0805%" height="15" fill="rgb(208,129,28)" fg:x="199" fg:w="1"/><text x="16.2597%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0097%" y="581" width="0.0805%" height="15" fill="rgb(254,169,28)" fg:x="199" fg:w="1"/><text x="16.2597%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0901%" y="501" width="0.0805%" height="15" fill="rgb(225,45,17)" fg:x="200" fg:w="1"/><text x="16.3401%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.0901%" y="485" width="0.0805%" height="15" fill="rgb(232,199,2)" fg:x="200" fg:w="1"/><text x="16.3401%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.0901%" y="469" width="0.0805%" height="15" fill="rgb(235,33,40)" fg:x="200" fg:w="1"/><text x="16.3401%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.0901%" y="453" width="0.0805%" height="15" fill="rgb(237,89,50)" fg:x="200" fg:w="1"/><text x="16.3401%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.0901%" y="437" width="0.0805%" height="15" fill="rgb(238,126,5)" fg:x="200" fg:w="1"/><text x="16.3401%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.0901%" y="421" width="0.0805%" height="15" fill="rgb(247,214,42)" fg:x="200" fg:w="1"/><text x="16.3401%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.0901%" y="405" width="0.0805%" height="15" fill="rgb(238,60,45)" fg:x="200" fg:w="1"/><text x="16.3401%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="16.0901%" y="613" width="0.1609%" height="15" fill="rgb(225,69,44)" fg:x="200" fg:w="2"/><text x="16.3401%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.0901%" y="597" width="0.1609%" height="15" fill="rgb(241,13,44)" fg:x="200" fg:w="2"/><text x="16.3401%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.0901%" y="581" width="0.1609%" height="15" fill="rgb(227,121,22)" fg:x="200" fg:w="2"/><text x="16.3401%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="16.0901%" y="565" width="0.1609%" height="15" fill="rgb(231,160,23)" fg:x="200" fg:w="2"/><text x="16.3401%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="16.0901%" y="549" width="0.1609%" height="15" fill="rgb(250,179,43)" fg:x="200" fg:w="2"/><text x="16.3401%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="16.0901%" y="533" width="0.1609%" height="15" fill="rgb(233,54,46)" fg:x="200" fg:w="2"/><text x="16.3401%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="16.0901%" y="517" width="0.1609%" height="15" fill="rgb(247,120,42)" fg:x="200" fg:w="2"/><text x="16.3401%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.1706%" y="501" width="0.0805%" height="15" fill="rgb(221,219,12)" fg:x="201" fg:w="1"/><text x="16.4206%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.1706%" y="485" width="0.0805%" height="15" fill="rgb(211,126,8)" fg:x="201" fg:w="1"/><text x="16.4206%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="16.2510%" y="533" width="0.0805%" height="15" fill="rgb(218,154,33)" fg:x="202" fg:w="1"/><text x="16.5010%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.2510%" y="517" width="0.0805%" height="15" fill="rgb(212,199,16)" fg:x="202" fg:w="1"/><text x="16.5010%" y="527.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.88%)</title><rect x="15.5270%" y="645" width="0.8850%" height="15" fill="rgb(236,215,46)" fg:x="193" fg:w="11"/><text x="15.7770%" y="655.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="16.0097%" y="629" width="0.4023%" height="15" fill="rgb(232,32,22)" fg:x="199" fg:w="5"/><text x="16.2597%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="16.2510%" y="613" width="0.1609%" height="15" fill="rgb(234,79,15)" fg:x="202" fg:w="2"/><text x="16.5010%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="16.2510%" y="597" width="0.1609%" height="15" fill="rgb(235,187,47)" fg:x="202" fg:w="2"/><text x="16.5010%" y="607.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="16.2510%" y="581" width="0.1609%" height="15" fill="rgb(244,69,37)" fg:x="202" fg:w="2"/><text x="16.5010%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="16.2510%" y="565" width="0.1609%" height="15" fill="rgb(249,140,25)" fg:x="202" fg:w="2"/><text x="16.5010%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="16.2510%" y="549" width="0.1609%" height="15" fill="rgb(213,69,8)" fg:x="202" fg:w="2"/><text x="16.5010%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.3315%" y="533" width="0.0805%" height="15" fill="rgb(220,136,2)" fg:x="203" fg:w="1"/><text x="16.5815%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.3315%" y="517" width="0.0805%" height="15" fill="rgb(237,50,36)" fg:x="203" fg:w="1"/><text x="16.5815%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3315%" y="501" width="0.0805%" height="15" fill="rgb(226,18,11)" fg:x="203" fg:w="1"/><text x="16.5815%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.3315%" y="485" width="0.0805%" height="15" fill="rgb(243,156,2)" fg:x="203" fg:w="1"/><text x="16.5815%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="16.3315%" y="469" width="0.0805%" height="15" fill="rgb(218,8,34)" fg:x="203" fg:w="1"/><text x="16.5815%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="16.4119%" y="613" width="0.0805%" height="15" fill="rgb(250,94,35)" fg:x="204" fg:w="1"/><text x="16.6619%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="16.4119%" y="597" width="0.0805%" height="15" fill="rgb(229,127,21)" fg:x="204" fg:w="1"/><text x="16.6619%" y="607.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="16.4119%" y="581" width="0.0805%" height="15" fill="rgb(234,49,5)" fg:x="204" fg:w="1"/><text x="16.6619%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (1 samples, 0.08%)</title><rect x="16.4924%" y="581" width="0.0805%" height="15" fill="rgb(248,12,16)" fg:x="205" fg:w="1"/><text x="16.7424%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.4924%" y="565" width="0.0805%" height="15" fill="rgb(208,220,31)" fg:x="205" fg:w="1"/><text x="16.7424%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.4924%" y="549" width="0.0805%" height="15" fill="rgb(243,184,0)" fg:x="205" fg:w="1"/><text x="16.7424%" y="559.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="16.4924%" y="597" width="0.1609%" height="15" fill="rgb(217,38,21)" fg:x="205" fg:w="2"/><text x="16.7424%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5728%" y="581" width="0.0805%" height="15" fill="rgb(239,120,45)" fg:x="206" fg:w="1"/><text x="16.8228%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.5728%" y="565" width="0.0805%" height="15" fill="rgb(235,33,2)" fg:x="206" fg:w="1"/><text x="16.8228%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.5728%" y="549" width="0.0805%" height="15" fill="rgb(249,161,5)" fg:x="206" fg:w="1"/><text x="16.8228%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="16.4119%" y="645" width="0.3218%" height="15" fill="rgb(250,165,48)" fg:x="204" fg:w="4"/><text x="16.6619%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="16.4119%" y="629" width="0.3218%" height="15" fill="rgb(221,23,45)" fg:x="204" fg:w="4"/><text x="16.6619%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="16.4924%" y="613" width="0.2414%" height="15" fill="rgb(217,108,46)" fg:x="205" fg:w="3"/><text x="16.7424%" y="623.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="16.6533%" y="597" width="0.0805%" height="15" fill="rgb(254,26,35)" fg:x="207" fg:w="1"/><text x="16.9033%" y="607.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="16.6533%" y="581" width="0.0805%" height="15" fill="rgb(218,223,28)" fg:x="207" fg:w="1"/><text x="16.9033%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.7337%" y="629" width="0.0805%" height="15" fill="rgb(242,27,47)" fg:x="208" fg:w="1"/><text x="16.9837%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.7337%" y="613" width="0.0805%" height="15" fill="rgb(218,39,35)" fg:x="208" fg:w="1"/><text x="16.9837%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.8142%" y="613" width="0.0805%" height="15" fill="rgb(232,127,16)" fg:x="209" fg:w="1"/><text x="17.0642%" y="623.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8142%" y="597" width="0.0805%" height="15" fill="rgb(231,219,51)" fg:x="209" fg:w="1"/><text x="17.0642%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8946%" y="581" width="0.0805%" height="15" fill="rgb(217,220,46)" fg:x="210" fg:w="1"/><text x="17.1446%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="16.8946%" y="565" width="0.0805%" height="15" fill="rgb(230,75,1)" fg:x="210" fg:w="1"/><text x="17.1446%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.8946%" y="549" width="0.0805%" height="15" fill="rgb(218,2,8)" fg:x="210" fg:w="1"/><text x="17.1446%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="16.8946%" y="533" width="0.0805%" height="15" fill="rgb(206,111,30)" fg:x="210" fg:w="1"/><text x="17.1446%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="16.8946%" y="517" width="0.0805%" height="15" fill="rgb(209,135,6)" fg:x="210" fg:w="1"/><text x="17.1446%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (4 samples, 0.32%)</title><rect x="16.7337%" y="645" width="0.3218%" height="15" fill="rgb(205,169,10)" fg:x="208" fg:w="4"/><text x="16.9837%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="16.8142%" y="629" width="0.2414%" height="15" fill="rgb(212,204,38)" fg:x="209" fg:w="3"/><text x="17.0642%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="16.8946%" y="613" width="0.1609%" height="15" fill="rgb(205,199,14)" fg:x="210" fg:w="2"/><text x="17.1446%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="16.8946%" y="597" width="0.1609%" height="15" fill="rgb(212,4,6)" fg:x="210" fg:w="2"/><text x="17.1446%" y="607.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9751%" y="581" width="0.0805%" height="15" fill="rgb(250,15,10)" fg:x="211" fg:w="1"/><text x="17.2251%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9751%" y="565" width="0.0805%" height="15" fill="rgb(212,49,51)" fg:x="211" fg:w="1"/><text x="17.2251%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="16.9751%" y="549" width="0.0805%" height="15" fill="rgb(235,21,9)" fg:x="211" fg:w="1"/><text x="17.2251%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.9751%" y="533" width="0.0805%" height="15" fill="rgb(251,31,32)" fg:x="211" fg:w="1"/><text x="17.2251%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9751%" y="517" width="0.0805%" height="15" fill="rgb(246,23,9)" fg:x="211" fg:w="1"/><text x="17.2251%" y="527.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (117 samples, 9.41%)</title><rect x="7.7233%" y="661" width="9.4127%" height="15" fill="rgb(225,216,14)" fg:x="96" fg:w="117"/><text x="7.9733%" y="671.50">plugins_core:..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="17.0555%" y="645" width="0.0805%" height="15" fill="rgb(215,200,26)" fg:x="212" fg:w="1"/><text x="17.3055%" y="655.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="17.0555%" y="629" width="0.0805%" height="15" fill="rgb(237,130,47)" fg:x="212" fg:w="1"/><text x="17.3055%" y="639.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="17.0555%" y="613" width="0.0805%" height="15" fill="rgb(247,74,14)" fg:x="212" fg:w="1"/><text x="17.3055%" y="623.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="17.0555%" y="597" width="0.0805%" height="15" fill="rgb(254,97,46)" fg:x="212" fg:w="1"/><text x="17.3055%" y="607.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="17.0555%" y="581" width="0.0805%" height="15" fill="rgb(234,191,1)" fg:x="212" fg:w="1"/><text x="17.3055%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.0555%" y="565" width="0.0805%" height="15" fill="rgb(215,165,14)" fg:x="212" fg:w="1"/><text x="17.3055%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0555%" y="549" width="0.0805%" height="15" fill="rgb(230,182,6)" fg:x="212" fg:w="1"/><text x="17.3055%" y="559.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="17.1360%" y="661" width="0.0805%" height="15" fill="rgb(210,127,39)" fg:x="213" fg:w="1"/><text x="17.3860%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="17.1360%" y="645" width="0.0805%" height="15" fill="rgb(223,212,51)" fg:x="213" fg:w="1"/><text x="17.3860%" y="655.50"></text></g><g><title>kernel::model::Entity::new_blank (1 samples, 0.08%)</title><rect x="17.1360%" y="629" width="0.0805%" height="15" fill="rgb(226,176,43)" fg:x="213" fg:w="1"/><text x="17.3860%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="17.1360%" y="613" width="0.0805%" height="15" fill="rgb(222,155,4)" fg:x="213" fg:w="1"/><text x="17.3860%" y="623.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="17.1360%" y="597" width="0.0805%" height="15" fill="rgb(215,149,7)" fg:x="213" fg:w="1"/><text x="17.3860%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="17.2164%" y="661" width="0.0805%" height="15" fill="rgb(252,199,23)" fg:x="214" fg:w="1"/><text x="17.4664%" y="671.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="17.2164%" y="645" width="0.0805%" height="15" fill="rgb(245,52,29)" fg:x="214" fg:w="1"/><text x="17.4664%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="17.2164%" y="629" width="0.0805%" height="15" fill="rgb(221,228,19)" fg:x="214" fg:w="1"/><text x="17.4664%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="17.2164%" y="613" width="0.0805%" height="15" fill="rgb(253,101,6)" fg:x="214" fg:w="1"/><text x="17.4664%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="17.2164%" y="597" width="0.0805%" height="15" fill="rgb(211,130,8)" fg:x="214" fg:w="1"/><text x="17.4664%" y="607.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (169 samples, 13.60%)</title><rect x="3.7812%" y="677" width="13.5961%" height="15" fill="rgb(238,37,53)" fg:x="47" fg:w="169"/><text x="4.0312%" y="687.50">&lt;tests::HoldingKeyInV..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="17.2969%" y="661" width="0.0805%" height="15" fill="rgb(235,145,5)" fg:x="215" fg:w="1"/><text x="17.5469%" y="671.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.2969%" y="645" width="0.0805%" height="15" fill="rgb(244,12,43)" fg:x="215" fg:w="1"/><text x="17.5469%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.3773%" y="645" width="0.0805%" height="15" fill="rgb(246,195,24)" fg:x="216" fg:w="1"/><text x="17.6273%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.3773%" y="629" width="0.0805%" height="15" fill="rgb(235,163,6)" fg:x="216" fg:w="1"/><text x="17.6273%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3773%" y="613" width="0.0805%" height="15" fill="rgb(236,218,17)" fg:x="216" fg:w="1"/><text x="17.6273%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="17.4578%" y="629" width="0.1609%" height="15" fill="rgb(235,12,38)" fg:x="217" fg:w="2"/><text x="17.7078%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (2 samples, 0.16%)</title><rect x="17.4578%" y="613" width="0.1609%" height="15" fill="rgb(225,195,33)" fg:x="217" fg:w="2"/><text x="17.7078%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5382%" y="597" width="0.0805%" height="15" fill="rgb(238,54,35)" fg:x="218" fg:w="1"/><text x="17.7882%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.6187%" y="581" width="0.0805%" height="15" fill="rgb(238,33,7)" fg:x="219" fg:w="1"/><text x="17.8687%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6187%" y="565" width="0.0805%" height="15" fill="rgb(245,5,14)" fg:x="219" fg:w="1"/><text x="17.8687%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6187%" y="549" width="0.0805%" height="15" fill="rgb(251,95,31)" fg:x="219" fg:w="1"/><text x="17.8687%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6187%" y="533" width="0.0805%" height="15" fill="rgb(222,15,46)" fg:x="219" fg:w="1"/><text x="17.8687%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6187%" y="517" width="0.0805%" height="15" fill="rgb(226,182,24)" fg:x="219" fg:w="1"/><text x="17.8687%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6187%" y="501" width="0.0805%" height="15" fill="rgb(229,105,41)" fg:x="219" fg:w="1"/><text x="17.8687%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6187%" y="485" width="0.0805%" height="15" fill="rgb(216,99,53)" fg:x="219" fg:w="1"/><text x="17.8687%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6187%" y="469" width="0.0805%" height="15" fill="rgb(253,26,20)" fg:x="219" fg:w="1"/><text x="17.8687%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.6187%" y="453" width="0.0805%" height="15" fill="rgb(249,155,28)" fg:x="219" fg:w="1"/><text x="17.8687%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.6187%" y="437" width="0.0805%" height="15" fill="rgb(241,221,2)" fg:x="219" fg:w="1"/><text x="17.8687%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.6187%" y="421" width="0.0805%" height="15" fill="rgb(219,124,6)" fg:x="219" fg:w="1"/><text x="17.8687%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.6187%" y="405" width="0.0805%" height="15" fill="rgb(233,37,6)" fg:x="219" fg:w="1"/><text x="17.8687%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6187%" y="389" width="0.0805%" height="15" fill="rgb(238,20,14)" fg:x="219" fg:w="1"/><text x="17.8687%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.6187%" y="597" width="0.1609%" height="15" fill="rgb(232,106,27)" fg:x="219" fg:w="2"/><text x="17.8687%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6991%" y="581" width="0.0805%" height="15" fill="rgb(246,157,24)" fg:x="220" fg:w="1"/><text x="17.9491%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6991%" y="565" width="0.0805%" height="15" fill="rgb(214,153,10)" fg:x="220" fg:w="1"/><text x="17.9491%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6991%" y="549" width="0.0805%" height="15" fill="rgb(212,94,6)" fg:x="220" fg:w="1"/><text x="17.9491%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6991%" y="533" width="0.0805%" height="15" fill="rgb(254,25,27)" fg:x="220" fg:w="1"/><text x="17.9491%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6991%" y="517" width="0.0805%" height="15" fill="rgb(250,43,52)" fg:x="220" fg:w="1"/><text x="17.9491%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.8600%" y="485" width="0.0805%" height="15" fill="rgb(221,226,40)" fg:x="222" fg:w="1"/><text x="18.1100%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="17.7796%" y="565" width="0.2414%" height="15" fill="rgb(235,162,34)" fg:x="221" fg:w="3"/><text x="18.0296%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="17.7796%" y="549" width="0.2414%" height="15" fill="rgb(239,24,26)" fg:x="221" fg:w="3"/><text x="18.0296%" y="559.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="17.7796%" y="533" width="0.2414%" height="15" fill="rgb(244,226,11)" fg:x="221" fg:w="3"/><text x="18.0296%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="17.7796%" y="517" width="0.2414%" height="15" fill="rgb(225,23,10)" fg:x="221" fg:w="3"/><text x="18.0296%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.7796%" y="501" width="0.2414%" height="15" fill="rgb(249,125,6)" fg:x="221" fg:w="3"/><text x="18.0296%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.9405%" y="485" width="0.0805%" height="15" fill="rgb(246,212,12)" fg:x="223" fg:w="1"/><text x="18.1905%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.9405%" y="469" width="0.0805%" height="15" fill="rgb(230,43,32)" fg:x="223" fg:w="1"/><text x="18.1905%" y="479.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (9 samples, 0.72%)</title><rect x="17.3773%" y="661" width="0.7241%" height="15" fill="rgb(210,95,23)" fg:x="216" fg:w="9"/><text x="17.6273%" y="671.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="17.4578%" y="645" width="0.6436%" height="15" fill="rgb(229,103,33)" fg:x="217" fg:w="8"/><text x="17.7078%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="17.6187%" y="629" width="0.4827%" height="15" fill="rgb(222,104,27)" fg:x="219" fg:w="6"/><text x="17.8687%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="17.6187%" y="613" width="0.4827%" height="15" fill="rgb(239,221,23)" fg:x="219" fg:w="6"/><text x="17.8687%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="17.7796%" y="597" width="0.3218%" height="15" fill="rgb(222,98,21)" fg:x="221" fg:w="4"/><text x="18.0296%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="17.7796%" y="581" width="0.3218%" height="15" fill="rgb(231,101,20)" fg:x="221" fg:w="4"/><text x="18.0296%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0209%" y="565" width="0.0805%" height="15" fill="rgb(215,150,22)" fg:x="224" fg:w="1"/><text x="18.2709%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0209%" y="549" width="0.0805%" height="15" fill="rgb(248,3,34)" fg:x="224" fg:w="1"/><text x="18.2709%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.0209%" y="533" width="0.0805%" height="15" fill="rgb(220,141,21)" fg:x="224" fg:w="1"/><text x="18.2709%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.0209%" y="517" width="0.0805%" height="15" fill="rgb(223,41,48)" fg:x="224" fg:w="1"/><text x="18.2709%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="18.0209%" y="501" width="0.0805%" height="15" fill="rgb(247,12,5)" fg:x="224" fg:w="1"/><text x="18.2709%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1014%" y="661" width="0.0805%" height="15" fill="rgb(206,173,10)" fg:x="225" fg:w="1"/><text x="18.3514%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (2 samples, 0.16%)</title><rect x="18.1818%" y="661" width="0.1609%" height="15" fill="rgb(233,214,37)" fg:x="226" fg:w="2"/><text x="18.4318%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="18.2623%" y="645" width="0.0805%" height="15" fill="rgb(238,86,43)" fg:x="227" fg:w="1"/><text x="18.5123%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.2623%" y="629" width="0.0805%" height="15" fill="rgb(212,182,8)" fg:x="227" fg:w="1"/><text x="18.5123%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.2623%" y="613" width="0.0805%" height="15" fill="rgb(240,91,47)" fg:x="227" fg:w="1"/><text x="18.5123%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.3427%" y="645" width="0.0805%" height="15" fill="rgb(209,138,26)" fg:x="228" fg:w="1"/><text x="18.5927%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="18.3427%" y="629" width="0.0805%" height="15" fill="rgb(231,163,20)" fg:x="228" fg:w="1"/><text x="18.5927%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.3427%" y="613" width="0.0805%" height="15" fill="rgb(214,91,54)" fg:x="228" fg:w="1"/><text x="18.5927%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.3427%" y="597" width="0.0805%" height="15" fill="rgb(230,32,17)" fg:x="228" fg:w="1"/><text x="18.5927%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4232%" y="629" width="0.0805%" height="15" fill="rgb(231,34,34)" fg:x="229" fg:w="1"/><text x="18.6732%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.4232%" y="613" width="0.0805%" height="15" fill="rgb(224,228,27)" fg:x="229" fg:w="1"/><text x="18.6732%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.4232%" y="597" width="0.0805%" height="15" fill="rgb(219,35,40)" fg:x="229" fg:w="1"/><text x="18.6732%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.4232%" y="581" width="0.0805%" height="15" fill="rgb(234,42,8)" fg:x="229" fg:w="1"/><text x="18.6732%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.4232%" y="565" width="0.0805%" height="15" fill="rgb(226,75,22)" fg:x="229" fg:w="1"/><text x="18.6732%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.4232%" y="645" width="0.1609%" height="15" fill="rgb(242,203,28)" fg:x="229" fg:w="2"/><text x="18.6732%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5036%" y="629" width="0.0805%" height="15" fill="rgb(221,3,9)" fg:x="230" fg:w="1"/><text x="18.7536%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.5841%" y="645" width="0.0805%" height="15" fill="rgb(214,34,31)" fg:x="231" fg:w="1"/><text x="18.8341%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="18.5841%" y="629" width="0.0805%" height="15" fill="rgb(252,119,15)" fg:x="231" fg:w="1"/><text x="18.8341%" y="639.50"></text></g><g><title>engine::session::Session::save_entity (1 samples, 0.08%)</title><rect x="18.5841%" y="613" width="0.0805%" height="15" fill="rgb(244,224,31)" fg:x="231" fg:w="1"/><text x="18.8341%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5841%" y="597" width="0.0805%" height="15" fill="rgb(215,8,51)" fg:x="231" fg:w="1"/><text x="18.8341%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.6645%" y="613" width="0.0805%" height="15" fill="rgb(207,24,1)" fg:x="232" fg:w="1"/><text x="18.9145%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.6645%" y="597" width="0.0805%" height="15" fill="rgb(245,90,0)" fg:x="232" fg:w="1"/><text x="18.9145%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.6645%" y="581" width="0.0805%" height="15" fill="rgb(246,43,48)" fg:x="232" fg:w="1"/><text x="18.9145%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.6645%" y="565" width="0.0805%" height="15" fill="rgb(252,218,10)" fg:x="232" fg:w="1"/><text x="18.9145%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.6645%" y="549" width="0.0805%" height="15" fill="rgb(231,24,35)" fg:x="232" fg:w="1"/><text x="18.9145%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.7450%" y="597" width="0.0805%" height="15" fill="rgb(225,66,19)" fg:x="233" fg:w="1"/><text x="18.9950%" y="607.50"></text></g><g><title>core::fmt::Formatter::alternate (1 samples, 0.08%)</title><rect x="18.8254%" y="597" width="0.0805%" height="15" fill="rgb(214,96,51)" fg:x="234" fg:w="1"/><text x="19.0754%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="18.9863%" y="581" width="0.4023%" height="15" fill="rgb(251,151,47)" fg:x="236" fg:w="5"/><text x="19.2363%" y="591.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="18.9863%" y="565" width="0.4023%" height="15" fill="rgb(236,79,14)" fg:x="236" fg:w="5"/><text x="19.2363%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="18.9863%" y="549" width="0.4023%" height="15" fill="rgb(210,205,11)" fg:x="236" fg:w="5"/><text x="19.2363%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="18.9863%" y="533" width="0.4023%" height="15" fill="rgb(233,142,53)" fg:x="236" fg:w="5"/><text x="19.2363%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="19.1472%" y="517" width="0.2414%" height="15" fill="rgb(212,116,48)" fg:x="238" fg:w="3"/><text x="19.3972%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="19.1472%" y="501" width="0.2414%" height="15" fill="rgb(234,55,33)" fg:x="238" fg:w="3"/><text x="19.3972%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="19.1472%" y="485" width="0.2414%" height="15" fill="rgb(253,92,27)" fg:x="238" fg:w="3"/><text x="19.3972%" y="495.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.56%)</title><rect x="18.9059%" y="597" width="0.5632%" height="15" fill="rgb(220,7,35)" fg:x="235" fg:w="7"/><text x="19.1559%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.3886%" y="581" width="0.0805%" height="15" fill="rgb(246,124,6)" fg:x="241" fg:w="1"/><text x="19.6386%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.3886%" y="565" width="0.0805%" height="15" fill="rgb(212,111,51)" fg:x="241" fg:w="1"/><text x="19.6386%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.3886%" y="549" width="0.0805%" height="15" fill="rgb(253,116,7)" fg:x="241" fg:w="1"/><text x="19.6386%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.3886%" y="533" width="0.0805%" height="15" fill="rgb(213,145,18)" fg:x="241" fg:w="1"/><text x="19.6386%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.3886%" y="517" width="0.0805%" height="15" fill="rgb(219,149,7)" fg:x="241" fg:w="1"/><text x="19.6386%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.3886%" y="501" width="0.0805%" height="15" fill="rgb(225,156,20)" fg:x="241" fg:w="1"/><text x="19.6386%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="19.4690%" y="581" width="0.5632%" height="15" fill="rgb(211,98,19)" fg:x="242" fg:w="7"/><text x="19.7190%" y="591.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="19.5495%" y="565" width="0.4827%" height="15" fill="rgb(231,192,31)" fg:x="243" fg:w="6"/><text x="19.7995%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.8713%" y="549" width="0.1609%" height="15" fill="rgb(249,95,19)" fg:x="247" fg:w="2"/><text x="20.1213%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.9517%" y="533" width="0.0805%" height="15" fill="rgb(247,101,36)" fg:x="248" fg:w="1"/><text x="20.2017%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.9517%" y="517" width="0.0805%" height="15" fill="rgb(221,45,43)" fg:x="248" fg:w="1"/><text x="20.2017%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.9517%" y="501" width="0.0805%" height="15" fill="rgb(220,42,1)" fg:x="248" fg:w="1"/><text x="20.2017%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.9517%" y="485" width="0.0805%" height="15" fill="rgb(236,19,24)" fg:x="248" fg:w="1"/><text x="20.2017%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.1126%" y="565" width="0.0805%" height="15" fill="rgb(225,192,6)" fg:x="250" fg:w="1"/><text x="20.3626%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1126%" y="549" width="0.0805%" height="15" fill="rgb(242,30,19)" fg:x="250" fg:w="1"/><text x="20.3626%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="20.1126%" y="533" width="0.0805%" height="15" fill="rgb(240,36,6)" fg:x="250" fg:w="1"/><text x="20.3626%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.1126%" y="517" width="0.0805%" height="15" fill="rgb(246,40,28)" fg:x="250" fg:w="1"/><text x="20.3626%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1126%" y="501" width="0.0805%" height="15" fill="rgb(225,155,33)" fg:x="250" fg:w="1"/><text x="20.3626%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.1126%" y="485" width="0.0805%" height="15" fill="rgb(240,65,18)" fg:x="250" fg:w="1"/><text x="20.3626%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.1126%" y="469" width="0.0805%" height="15" fill="rgb(217,0,48)" fg:x="250" fg:w="1"/><text x="20.3626%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.1931%" y="565" width="0.0805%" height="15" fill="rgb(217,80,15)" fg:x="251" fg:w="1"/><text x="20.4431%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.1931%" y="549" width="0.0805%" height="15" fill="rgb(253,43,51)" fg:x="251" fg:w="1"/><text x="20.4431%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.2735%" y="549" width="0.0805%" height="15" fill="rgb(246,60,4)" fg:x="252" fg:w="1"/><text x="20.5235%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.2735%" y="533" width="0.0805%" height="15" fill="rgb(230,40,54)" fg:x="252" fg:w="1"/><text x="20.5235%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.2735%" y="517" width="0.0805%" height="15" fill="rgb(208,20,44)" fg:x="252" fg:w="1"/><text x="20.5235%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="20.3540%" y="549" width="0.1609%" height="15" fill="rgb(230,22,22)" fg:x="253" fg:w="2"/><text x="20.6040%" y="559.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.3540%" y="533" width="0.1609%" height="15" fill="rgb(207,57,4)" fg:x="253" fg:w="2"/><text x="20.6040%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4344%" y="517" width="0.0805%" height="15" fill="rgb(242,130,33)" fg:x="254" fg:w="1"/><text x="20.6844%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4344%" y="501" width="0.0805%" height="15" fill="rgb(218,66,43)" fg:x="254" fg:w="1"/><text x="20.6844%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.64%)</title><rect x="20.0322%" y="581" width="0.6436%" height="15" fill="rgb(236,105,16)" fg:x="249" fg:w="8"/><text x="20.2822%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="20.2735%" y="565" width="0.4023%" height="15" fill="rgb(230,46,15)" fg:x="252" fg:w="5"/><text x="20.5235%" y="575.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.5149%" y="549" width="0.1609%" height="15" fill="rgb(251,172,40)" fg:x="255" fg:w="2"/><text x="20.7649%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.5149%" y="533" width="0.1609%" height="15" fill="rgb(225,217,32)" fg:x="255" fg:w="2"/><text x="20.7649%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.5149%" y="517" width="0.1609%" height="15" fill="rgb(243,10,29)" fg:x="255" fg:w="2"/><text x="20.7649%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="19.4690%" y="597" width="1.5286%" height="15" fill="rgb(207,102,10)" fg:x="242" fg:w="19"/><text x="19.7190%" y="607.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.6758%" y="581" width="0.3218%" height="15" fill="rgb(241,125,5)" fg:x="257" fg:w="4"/><text x="20.9258%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="20.6758%" y="565" width="0.3218%" height="15" fill="rgb(230,125,29)" fg:x="257" fg:w="4"/><text x="20.9258%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="20.7562%" y="549" width="0.2414%" height="15" fill="rgb(223,65,44)" fg:x="258" fg:w="3"/><text x="21.0062%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="20.8367%" y="533" width="0.1609%" height="15" fill="rgb(224,188,28)" fg:x="259" fg:w="2"/><text x="21.0867%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="20.8367%" y="517" width="0.1609%" height="15" fill="rgb(254,197,27)" fg:x="259" fg:w="2"/><text x="21.0867%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="20.8367%" y="501" width="0.1609%" height="15" fill="rgb(220,200,25)" fg:x="259" fg:w="2"/><text x="21.0867%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.33%)</title><rect x="18.7450%" y="613" width="2.3331%" height="15" fill="rgb(239,225,54)" fg:x="233" fg:w="29"/><text x="18.9950%" y="623.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.9976%" y="597" width="0.0805%" height="15" fill="rgb(211,59,40)" fg:x="261" fg:w="1"/><text x="21.2476%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.9976%" y="581" width="0.0805%" height="15" fill="rgb(213,176,46)" fg:x="261" fg:w="1"/><text x="21.2476%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9976%" y="565" width="0.0805%" height="15" fill="rgb(226,99,4)" fg:x="261" fg:w="1"/><text x="21.2476%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="20.9976%" y="549" width="0.0805%" height="15" fill="rgb(239,203,43)" fg:x="261" fg:w="1"/><text x="21.2476%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="20.9976%" y="533" width="0.0805%" height="15" fill="rgb(246,1,45)" fg:x="261" fg:w="1"/><text x="21.2476%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="20.9976%" y="517" width="0.0805%" height="15" fill="rgb(231,42,52)" fg:x="261" fg:w="1"/><text x="21.2476%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.0780%" y="565" width="0.1609%" height="15" fill="rgb(240,13,50)" fg:x="262" fg:w="2"/><text x="21.3280%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.2389%" y="565" width="0.1609%" height="15" fill="rgb(225,81,14)" fg:x="264" fg:w="2"/><text x="21.4889%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3998%" y="533" width="0.0805%" height="15" fill="rgb(216,182,23)" fg:x="266" fg:w="1"/><text x="21.6498%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="21.4803%" y="533" width="0.0805%" height="15" fill="rgb(233,137,19)" fg:x="267" fg:w="1"/><text x="21.7303%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.4803%" y="517" width="0.0805%" height="15" fill="rgb(242,61,46)" fg:x="267" fg:w="1"/><text x="21.7303%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.4803%" y="501" width="0.0805%" height="15" fill="rgb(221,168,51)" fg:x="267" fg:w="1"/><text x="21.7303%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="21.0780%" y="613" width="0.5632%" height="15" fill="rgb(238,48,15)" fg:x="262" fg:w="7"/><text x="21.3280%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="21.0780%" y="597" width="0.5632%" height="15" fill="rgb(216,13,16)" fg:x="262" fg:w="7"/><text x="21.3280%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="21.0780%" y="581" width="0.5632%" height="15" fill="rgb(223,185,34)" fg:x="262" fg:w="7"/><text x="21.3280%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="21.3998%" y="565" width="0.2414%" height="15" fill="rgb(228,94,42)" fg:x="266" fg:w="3"/><text x="21.6498%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="21.3998%" y="549" width="0.2414%" height="15" fill="rgb(218,166,43)" fg:x="266" fg:w="3"/><text x="21.6498%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5607%" y="533" width="0.0805%" height="15" fill="rgb(232,30,50)" fg:x="268" fg:w="1"/><text x="21.8107%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="21.6412%" y="613" width="0.0805%" height="15" fill="rgb(245,206,45)" fg:x="269" fg:w="1"/><text x="21.8912%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9630%" y="565" width="0.0805%" height="15" fill="rgb(220,56,22)" fg:x="273" fg:w="1"/><text x="22.2130%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.0434%" y="565" width="0.0805%" height="15" fill="rgb(239,129,38)" fg:x="274" fg:w="1"/><text x="22.2934%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.0434%" y="549" width="0.0805%" height="15" fill="rgb(207,68,41)" fg:x="274" fg:w="1"/><text x="22.2934%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2848%" y="549" width="0.0805%" height="15" fill="rgb(221,21,7)" fg:x="277" fg:w="1"/><text x="22.5348%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="22.3652%" y="549" width="0.2414%" height="15" fill="rgb(240,33,25)" fg:x="278" fg:w="3"/><text x="22.6152%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6870%" y="533" width="0.0805%" height="15" fill="rgb(242,119,10)" fg:x="282" fg:w="1"/><text x="22.9370%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.7675%" y="533" width="0.1609%" height="15" fill="rgb(214,149,40)" fg:x="283" fg:w="2"/><text x="23.0175%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.7675%" y="517" width="0.1609%" height="15" fill="rgb(228,25,36)" fg:x="283" fg:w="2"/><text x="23.0175%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.0088%" y="517" width="0.0805%" height="15" fill="rgb(222,59,15)" fg:x="286" fg:w="1"/><text x="23.2588%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="23.0893%" y="517" width="0.1609%" height="15" fill="rgb(218,170,0)" fg:x="287" fg:w="2"/><text x="23.3393%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.1698%" y="501" width="0.0805%" height="15" fill="rgb(232,173,23)" fg:x="288" fg:w="1"/><text x="23.4198%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="23.2502%" y="517" width="0.1609%" height="15" fill="rgb(218,116,1)" fg:x="289" fg:w="2"/><text x="23.5002%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="23.2502%" y="501" width="0.1609%" height="15" fill="rgb(207,34,4)" fg:x="289" fg:w="2"/><text x="23.5002%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.3307%" y="485" width="0.0805%" height="15" fill="rgb(229,54,52)" fg:x="290" fg:w="1"/><text x="23.5807%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (20 samples, 1.61%)</title><rect x="21.8825%" y="597" width="1.6090%" height="15" fill="rgb(211,86,23)" fg:x="272" fg:w="20"/><text x="22.1325%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (20 samples, 1.61%)</title><rect x="21.8825%" y="581" width="1.6090%" height="15" fill="rgb(254,153,34)" fg:x="272" fg:w="20"/><text x="22.1325%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.37%)</title><rect x="22.1239%" y="565" width="1.3677%" height="15" fill="rgb(219,220,14)" fg:x="275" fg:w="17"/><text x="22.3739%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="22.6066%" y="549" width="0.8850%" height="15" fill="rgb(247,8,26)" fg:x="281" fg:w="11"/><text x="22.8566%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="22.9284%" y="533" width="0.5632%" height="15" fill="rgb(213,129,42)" fg:x="285" fg:w="7"/><text x="23.1784%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="23.4111%" y="517" width="0.0805%" height="15" fill="rgb(225,95,41)" fg:x="291" fg:w="1"/><text x="23.6611%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="23.4111%" y="501" width="0.0805%" height="15" fill="rgb(215,134,24)" fg:x="291" fg:w="1"/><text x="23.6611%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="23.4111%" y="485" width="0.0805%" height="15" fill="rgb(235,23,54)" fg:x="291" fg:w="1"/><text x="23.6611%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="23.4916%" y="597" width="0.0805%" height="15" fill="rgb(229,96,31)" fg:x="292" fg:w="1"/><text x="23.7416%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6525%" y="565" width="0.0805%" height="15" fill="rgb(206,111,12)" fg:x="294" fg:w="1"/><text x="23.9025%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="23.7329%" y="565" width="0.3218%" height="15" fill="rgb(222,177,8)" fg:x="295" fg:w="4"/><text x="23.9829%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.8134%" y="549" width="0.2414%" height="15" fill="rgb(251,36,52)" fg:x="296" fg:w="3"/><text x="24.0634%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="23.8938%" y="533" width="0.1609%" height="15" fill="rgb(216,182,29)" fg:x="297" fg:w="2"/><text x="24.1438%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0547%" y="533" width="0.0805%" height="15" fill="rgb(241,145,50)" fg:x="299" fg:w="1"/><text x="24.3047%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0547%" y="517" width="0.0805%" height="15" fill="rgb(231,71,35)" fg:x="299" fg:w="1"/><text x="24.3047%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.0547%" y="501" width="0.0805%" height="15" fill="rgb(218,22,17)" fg:x="299" fg:w="1"/><text x="24.3047%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.2156%" y="517" width="0.0805%" height="15" fill="rgb(225,227,6)" fg:x="301" fg:w="1"/><text x="24.4656%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="24.2961%" y="517" width="0.3218%" height="15" fill="rgb(224,204,17)" fg:x="302" fg:w="4"/><text x="24.5461%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="24.2961%" y="501" width="0.3218%" height="15" fill="rgb(227,61,28)" fg:x="302" fg:w="4"/><text x="24.5461%" y="511.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="24.2961%" y="485" width="0.3218%" height="15" fill="rgb(242,148,23)" fg:x="302" fg:w="4"/><text x="24.5461%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.6179%" y="501" width="0.0805%" height="15" fill="rgb(237,105,33)" fg:x="306" fg:w="1"/><text x="24.8679%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="24.7788%" y="469" width="0.0805%" height="15" fill="rgb(238,218,40)" fg:x="308" fg:w="1"/><text x="25.0288%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="24.6983%" y="501" width="0.3218%" height="15" fill="rgb(209,126,11)" fg:x="307" fg:w="4"/><text x="24.9483%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="24.6983%" y="485" width="0.3218%" height="15" fill="rgb(245,90,11)" fg:x="307" fg:w="4"/><text x="24.9483%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="24.8592%" y="469" width="0.1609%" height="15" fill="rgb(211,195,10)" fg:x="309" fg:w="2"/><text x="25.1092%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.8592%" y="453" width="0.1609%" height="15" fill="rgb(231,45,45)" fg:x="309" fg:w="2"/><text x="25.1092%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="24.9397%" y="437" width="0.0805%" height="15" fill="rgb(246,100,43)" fg:x="310" fg:w="1"/><text x="25.1897%" y="447.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (13 samples, 1.05%)</title><rect x="24.0547%" y="565" width="1.0459%" height="15" fill="rgb(241,193,8)" fg:x="299" fg:w="13"/><text x="24.3047%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="24.0547%" y="549" width="1.0459%" height="15" fill="rgb(208,76,19)" fg:x="299" fg:w="13"/><text x="24.3047%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.97%)</title><rect x="24.1352%" y="533" width="0.9654%" height="15" fill="rgb(223,69,40)" fg:x="300" fg:w="12"/><text x="24.3852%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (6 samples, 0.48%)</title><rect x="24.6179%" y="517" width="0.4827%" height="15" fill="rgb(207,120,39)" fg:x="306" fg:w="6"/><text x="24.8679%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0201%" y="501" width="0.0805%" height="15" fill="rgb(212,209,28)" fg:x="311" fg:w="1"/><text x="25.2701%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (1 samples, 0.08%)</title><rect x="25.1006%" y="565" width="0.0805%" height="15" fill="rgb(246,82,29)" fg:x="312" fg:w="1"/><text x="25.3506%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.1006%" y="549" width="0.0805%" height="15" fill="rgb(239,6,40)" fg:x="312" fg:w="1"/><text x="25.3506%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.1006%" y="533" width="0.0805%" height="15" fill="rgb(228,181,35)" fg:x="312" fg:w="1"/><text x="25.3506%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2615%" y="549" width="0.0805%" height="15" fill="rgb(238,151,2)" fg:x="314" fg:w="1"/><text x="25.5115%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.2615%" y="533" width="0.0805%" height="15" fill="rgb(236,94,18)" fg:x="314" fg:w="1"/><text x="25.5115%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2615%" y="517" width="0.0805%" height="15" fill="rgb(208,38,14)" fg:x="314" fg:w="1"/><text x="25.5115%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4224%" y="517" width="0.0805%" height="15" fill="rgb(234,215,27)" fg:x="316" fg:w="1"/><text x="25.6724%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.4224%" y="501" width="0.0805%" height="15" fill="rgb(254,211,53)" fg:x="316" fg:w="1"/><text x="25.6724%" y="511.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="25.4224%" y="485" width="0.0805%" height="15" fill="rgb(216,175,11)" fg:x="316" fg:w="1"/><text x="25.6724%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="25.5833%" y="485" width="0.0805%" height="15" fill="rgb(246,179,26)" fg:x="318" fg:w="1"/><text x="25.8333%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="25.6637%" y="485" width="0.1609%" height="15" fill="rgb(249,19,52)" fg:x="319" fg:w="2"/><text x="25.9137%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.6637%" y="469" width="0.1609%" height="15" fill="rgb(230,42,52)" fg:x="319" fg:w="2"/><text x="25.9137%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.7442%" y="453" width="0.0805%" height="15" fill="rgb(221,171,0)" fg:x="320" fg:w="1"/><text x="25.9942%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="25.7442%" y="437" width="0.0805%" height="15" fill="rgb(222,177,40)" fg:x="320" fg:w="1"/><text x="25.9942%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="25.5028%" y="517" width="0.4023%" height="15" fill="rgb(247,34,16)" fg:x="317" fg:w="5"/><text x="25.7528%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="25.5028%" y="501" width="0.4023%" height="15" fill="rgb(213,217,37)" fg:x="317" fg:w="5"/><text x="25.7528%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="25.8246%" y="485" width="0.0805%" height="15" fill="rgb(231,189,24)" fg:x="321" fg:w="1"/><text x="26.0746%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="25.8246%" y="469" width="0.0805%" height="15" fill="rgb(214,22,9)" fg:x="321" fg:w="1"/><text x="26.0746%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (32 samples, 2.57%)</title><rect x="23.5720%" y="597" width="2.5744%" height="15" fill="rgb(212,70,22)" fg:x="293" fg:w="32"/><text x="23.8220%" y="607.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.57%)</title><rect x="23.5720%" y="581" width="2.5744%" height="15" fill="rgb(249,64,51)" fg:x="293" fg:w="32"/><text x="23.8220%" y="591.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.97%)</title><rect x="25.1810%" y="565" width="0.9654%" height="15" fill="rgb(249,148,20)" fg:x="313" fg:w="12"/><text x="25.4310%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (10 samples, 0.80%)</title><rect x="25.3419%" y="549" width="0.8045%" height="15" fill="rgb(246,46,48)" fg:x="315" fg:w="10"/><text x="25.5919%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.80%)</title><rect x="25.3419%" y="533" width="0.8045%" height="15" fill="rgb(217,34,48)" fg:x="315" fg:w="10"/><text x="25.5919%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="25.9051%" y="517" width="0.2414%" height="15" fill="rgb(222,45,26)" fg:x="322" fg:w="3"/><text x="26.1551%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="26.0660%" y="501" width="0.0805%" height="15" fill="rgb(230,201,36)" fg:x="324" fg:w="1"/><text x="26.3160%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0660%" y="485" width="0.0805%" height="15" fill="rgb(217,30,43)" fg:x="324" fg:w="1"/><text x="26.3160%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0660%" y="469" width="0.0805%" height="15" fill="rgb(230,197,40)" fg:x="324" fg:w="1"/><text x="26.3160%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="26.4682%" y="437" width="0.0805%" height="15" fill="rgb(239,181,18)" fg:x="329" fg:w="1"/><text x="26.7182%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="26.4682%" y="421" width="0.0805%" height="15" fill="rgb(222,60,39)" fg:x="329" fg:w="1"/><text x="26.7182%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4682%" y="405" width="0.0805%" height="15" fill="rgb(210,60,22)" fg:x="329" fg:w="1"/><text x="26.7182%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.4682%" y="389" width="0.0805%" height="15" fill="rgb(239,213,48)" fg:x="329" fg:w="1"/><text x="26.7182%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.4682%" y="373" width="0.0805%" height="15" fill="rgb(253,214,23)" fg:x="329" fg:w="1"/><text x="26.7182%" y="383.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="26.3073%" y="501" width="0.3218%" height="15" fill="rgb(211,98,45)" fg:x="327" fg:w="4"/><text x="26.5573%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="26.3878%" y="485" width="0.2414%" height="15" fill="rgb(239,130,44)" fg:x="328" fg:w="3"/><text x="26.6378%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="26.3878%" y="469" width="0.2414%" height="15" fill="rgb(222,181,35)" fg:x="328" fg:w="3"/><text x="26.6378%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="26.4682%" y="453" width="0.1609%" height="15" fill="rgb(219,219,49)" fg:x="329" fg:w="2"/><text x="26.7182%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="26.5487%" y="437" width="0.0805%" height="15" fill="rgb(227,161,51)" fg:x="330" fg:w="1"/><text x="26.7987%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="26.5487%" y="421" width="0.0805%" height="15" fill="rgb(239,112,27)" fg:x="330" fg:w="1"/><text x="26.7987%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7096%" y="485" width="0.0805%" height="15" fill="rgb(248,122,18)" fg:x="332" fg:w="1"/><text x="26.9596%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="26.6291%" y="501" width="0.2414%" height="15" fill="rgb(245,130,23)" fg:x="331" fg:w="3"/><text x="26.8791%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="26.7900%" y="485" width="0.0805%" height="15" fill="rgb(211,225,28)" fg:x="333" fg:w="1"/><text x="27.0400%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="26.7900%" y="469" width="0.0805%" height="15" fill="rgb(242,105,44)" fg:x="333" fg:w="1"/><text x="27.0400%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.88%)</title><rect x="26.1464%" y="533" width="0.8850%" height="15" fill="rgb(216,183,46)" fg:x="325" fg:w="11"/><text x="26.3964%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="26.3073%" y="517" width="0.7241%" height="15" fill="rgb(227,112,9)" fg:x="327" fg:w="9"/><text x="26.5573%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.8705%" y="501" width="0.1609%" height="15" fill="rgb(244,21,0)" fg:x="334" fg:w="2"/><text x="27.1205%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9509%" y="485" width="0.0805%" height="15" fill="rgb(236,185,14)" fg:x="335" fg:w="1"/><text x="27.2009%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="26.9509%" y="469" width="0.0805%" height="15" fill="rgb(236,170,30)" fg:x="335" fg:w="1"/><text x="27.2009%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="27.0314%" y="517" width="0.0805%" height="15" fill="rgb(209,198,51)" fg:x="336" fg:w="1"/><text x="27.2814%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="27.0314%" y="533" width="0.1609%" height="15" fill="rgb(205,171,26)" fg:x="336" fg:w="2"/><text x="27.2814%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.1118%" y="517" width="0.0805%" height="15" fill="rgb(246,41,49)" fg:x="337" fg:w="1"/><text x="27.3618%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (16 samples, 1.29%)</title><rect x="26.1464%" y="597" width="1.2872%" height="15" fill="rgb(240,229,12)" fg:x="325" fg:w="16"/><text x="26.3964%" y="607.50"></text></g><g><title>serde_json::de::from_trait (16 samples, 1.29%)</title><rect x="26.1464%" y="581" width="1.2872%" height="15" fill="rgb(212,8,54)" fg:x="325" fg:w="16"/><text x="26.3964%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.29%)</title><rect x="26.1464%" y="565" width="1.2872%" height="15" fill="rgb(230,114,13)" fg:x="325" fg:w="16"/><text x="26.3964%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="26.1464%" y="549" width="1.2872%" height="15" fill="rgb(229,130,28)" fg:x="325" fg:w="16"/><text x="26.3964%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="27.1923%" y="533" width="0.2414%" height="15" fill="rgb(206,139,15)" fg:x="338" fg:w="3"/><text x="27.4423%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="27.8359%" y="533" width="0.0805%" height="15" fill="rgb(241,188,35)" fg:x="346" fg:w="1"/><text x="28.0859%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="27.8359%" y="517" width="0.0805%" height="15" fill="rgb(208,224,26)" fg:x="346" fg:w="1"/><text x="28.0859%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.8359%" y="501" width="0.0805%" height="15" fill="rgb(251,131,28)" fg:x="346" fg:w="1"/><text x="28.0859%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="27.9163%" y="517" width="0.0805%" height="15" fill="rgb(208,153,1)" fg:x="347" fg:w="1"/><text x="28.1663%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="27.9163%" y="501" width="0.0805%" height="15" fill="rgb(234,33,36)" fg:x="347" fg:w="1"/><text x="28.1663%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.56%)</title><rect x="27.5945%" y="565" width="0.5632%" height="15" fill="rgb(246,42,29)" fg:x="343" fg:w="7"/><text x="27.8445%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.32%)</title><rect x="27.8359%" y="549" width="0.3218%" height="15" fill="rgb(251,114,16)" fg:x="346" fg:w="4"/><text x="28.0859%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="27.9163%" y="533" width="0.2414%" height="15" fill="rgb(233,13,38)" fg:x="347" fg:w="3"/><text x="28.1663%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="27.9968%" y="517" width="0.1609%" height="15" fill="rgb(247,120,19)" fg:x="348" fg:w="2"/><text x="28.2468%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="27.5945%" y="581" width="0.6436%" height="15" fill="rgb(205,11,16)" fg:x="343" fg:w="8"/><text x="27.8445%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.1577%" y="565" width="0.0805%" height="15" fill="rgb(228,185,19)" fg:x="350" fg:w="1"/><text x="28.4077%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="28.2381%" y="581" width="0.0805%" height="15" fill="rgb(239,88,52)" fg:x="351" fg:w="1"/><text x="28.4881%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.3186%" y="565" width="0.0805%" height="15" fill="rgb(219,23,1)" fg:x="352" fg:w="1"/><text x="28.5686%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3186%" y="549" width="0.0805%" height="15" fill="rgb(253,177,16)" fg:x="352" fg:w="1"/><text x="28.5686%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3186%" y="533" width="0.0805%" height="15" fill="rgb(225,150,40)" fg:x="352" fg:w="1"/><text x="28.5686%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.3186%" y="517" width="0.0805%" height="15" fill="rgb(208,108,30)" fg:x="352" fg:w="1"/><text x="28.5686%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.3186%" y="501" width="0.0805%" height="15" fill="rgb(214,122,4)" fg:x="352" fg:w="1"/><text x="28.5686%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.3186%" y="485" width="0.0805%" height="15" fill="rgb(229,74,37)" fg:x="352" fg:w="1"/><text x="28.5686%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3186%" y="469" width="0.0805%" height="15" fill="rgb(233,61,41)" fg:x="352" fg:w="1"/><text x="28.5686%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3186%" y="453" width="0.0805%" height="15" fill="rgb(238,191,5)" fg:x="352" fg:w="1"/><text x="28.5686%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.3186%" y="437" width="0.0805%" height="15" fill="rgb(233,78,24)" fg:x="352" fg:w="1"/><text x="28.5686%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.3186%" y="421" width="0.0805%" height="15" fill="rgb(211,142,8)" fg:x="352" fg:w="1"/><text x="28.5686%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.3186%" y="405" width="0.0805%" height="15" fill="rgb(253,38,53)" fg:x="352" fg:w="1"/><text x="28.5686%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.3186%" y="389" width="0.0805%" height="15" fill="rgb(234,63,51)" fg:x="352" fg:w="1"/><text x="28.5686%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3186%" y="373" width="0.0805%" height="15" fill="rgb(205,23,31)" fg:x="352" fg:w="1"/><text x="28.5686%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="28.3186%" y="581" width="0.1609%" height="15" fill="rgb(210,184,50)" fg:x="352" fg:w="2"/><text x="28.5686%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3990%" y="565" width="0.0805%" height="15" fill="rgb(222,112,26)" fg:x="353" fg:w="1"/><text x="28.6490%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3990%" y="549" width="0.0805%" height="15" fill="rgb(250,98,18)" fg:x="353" fg:w="1"/><text x="28.6490%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.3990%" y="533" width="0.0805%" height="15" fill="rgb(250,34,12)" fg:x="353" fg:w="1"/><text x="28.6490%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="28.4795%" y="581" width="0.1609%" height="15" fill="rgb(236,141,30)" fg:x="354" fg:w="2"/><text x="28.7295%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="28.7208%" y="565" width="0.0805%" height="15" fill="rgb(246,134,38)" fg:x="357" fg:w="1"/><text x="28.9708%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.8013%" y="565" width="0.0805%" height="15" fill="rgb(240,114,4)" fg:x="358" fg:w="1"/><text x="29.0513%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="28.8013%" y="549" width="0.0805%" height="15" fill="rgb(243,113,39)" fg:x="358" fg:w="1"/><text x="29.0513%" y="559.50"></text></g><g><title>&lt;treediff::tools::record::Recorder&lt;K,V&gt; as treediff::traitdef::Delegate&lt;K,V&gt;&gt;::unchanged (1 samples, 0.08%)</title><rect x="28.8817%" y="565" width="0.0805%" height="15" fill="rgb(239,215,4)" fg:x="359" fg:w="1"/><text x="29.1317%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.9622%" y="565" width="0.0805%" height="15" fill="rgb(236,229,45)" fg:x="360" fg:w="1"/><text x="29.2122%" y="575.50"></text></g><g><title>&lt;treediff::tools::record::Recorder&lt;K,V&gt; as treediff::traitdef::Delegate&lt;K,V&gt;&gt;::unchanged (1 samples, 0.08%)</title><rect x="29.0426%" y="549" width="0.0805%" height="15" fill="rgb(242,2,6)" fg:x="361" fg:w="1"/><text x="29.2926%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0426%" y="533" width="0.0805%" height="15" fill="rgb(239,108,21)" fg:x="361" fg:w="1"/><text x="29.2926%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0426%" y="517" width="0.0805%" height="15" fill="rgb(215,168,34)" fg:x="361" fg:w="1"/><text x="29.2926%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.0426%" y="501" width="0.0805%" height="15" fill="rgb(238,31,17)" fg:x="361" fg:w="1"/><text x="29.2926%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.0426%" y="485" width="0.0805%" height="15" fill="rgb(220,133,11)" fg:x="361" fg:w="1"/><text x="29.2926%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.0426%" y="469" width="0.0805%" height="15" fill="rgb(212,158,23)" fg:x="361" fg:w="1"/><text x="29.2926%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="29.0426%" y="453" width="0.0805%" height="15" fill="rgb(223,172,7)" fg:x="361" fg:w="1"/><text x="29.2926%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="29.0426%" y="437" width="0.0805%" height="15" fill="rgb(244,3,52)" fg:x="361" fg:w="1"/><text x="29.2926%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.1231%" y="533" width="0.0805%" height="15" fill="rgb(207,69,27)" fg:x="362" fg:w="1"/><text x="29.3731%" y="543.50"></text></g><g><title>engine::session::Session::close (148 samples, 11.91%)</title><rect x="17.3773%" y="677" width="11.9067%" height="15" fill="rgb(213,136,45)" fg:x="216" fg:w="148"/><text x="17.6273%" y="687.50">engine::session::S..</text></g><g><title>engine::session::Session::save_entity_changes (136 samples, 10.94%)</title><rect x="18.3427%" y="661" width="10.9413%" height="15" fill="rgb(218,79,17)" fg:x="228" fg:w="136"/><text x="18.5927%" y="671.50">engine::session:..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (132 samples, 10.62%)</title><rect x="18.6645%" y="645" width="10.6195%" height="15" fill="rgb(216,106,36)" fg:x="232" fg:w="132"/><text x="18.9145%" y="655.50">engine::interna..</text></g><g><title>engine::session::Session::check_for_changes (132 samples, 10.62%)</title><rect x="18.6645%" y="629" width="10.6195%" height="15" fill="rgb(251,27,45)" fg:x="232" fg:w="132"/><text x="18.9145%" y="639.50">engine::session..</text></g><g><title>kernel::compare::any_entity_changes (94 samples, 7.56%)</title><rect x="21.7216%" y="613" width="7.5623%" height="15" fill="rgb(232,21,34)" fg:x="270" fg:w="94"/><text x="21.9716%" y="623.50">kernel::co..</text></g><g><title>treediff::diff::diff (23 samples, 1.85%)</title><rect x="27.4336%" y="597" width="1.8504%" height="15" fill="rgb(249,191,16)" fg:x="341" fg:w="23"/><text x="27.6836%" y="607.50">t..</text></g><g><title>treediff::diff::diff (8 samples, 0.64%)</title><rect x="28.6404%" y="581" width="0.6436%" height="15" fill="rgb(224,88,20)" fg:x="356" fg:w="8"/><text x="28.8904%" y="591.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="29.0426%" y="565" width="0.2414%" height="15" fill="rgb(237,93,27)" fg:x="361" fg:w="3"/><text x="29.2926%" y="575.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="29.1231%" y="549" width="0.1609%" height="15" fill="rgb(226,198,48)" fg:x="362" fg:w="2"/><text x="29.3731%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="29.2035%" y="533" width="0.0805%" height="15" fill="rgb(207,162,53)" fg:x="363" fg:w="1"/><text x="29.4535%" y="543.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="29.2035%" y="517" width="0.0805%" height="15" fill="rgb(207,169,9)" fg:x="363" fg:w="1"/><text x="29.4535%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3644%" y="549" width="0.0805%" height="15" fill="rgb(224,166,46)" fg:x="365" fg:w="1"/><text x="29.6144%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="29.3644%" y="565" width="0.1609%" height="15" fill="rgb(233,26,6)" fg:x="365" fg:w="2"/><text x="29.6144%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="29.4449%" y="549" width="0.0805%" height="15" fill="rgb(218,106,45)" fg:x="366" fg:w="1"/><text x="29.6949%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="29.5253%" y="533" width="0.2414%" height="15" fill="rgb(240,217,4)" fg:x="367" fg:w="3"/><text x="29.7753%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="29.5253%" y="517" width="0.2414%" height="15" fill="rgb(246,171,10)" fg:x="367" fg:w="3"/><text x="29.7753%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6862%" y="501" width="0.0805%" height="15" fill="rgb(223,197,30)" fg:x="369" fg:w="1"/><text x="29.9362%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.6862%" y="485" width="0.0805%" height="15" fill="rgb(207,92,16)" fg:x="369" fg:w="1"/><text x="29.9362%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.6862%" y="469" width="0.0805%" height="15" fill="rgb(211,6,44)" fg:x="369" fg:w="1"/><text x="29.9362%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.6862%" y="453" width="0.0805%" height="15" fill="rgb(219,139,2)" fg:x="369" fg:w="1"/><text x="29.9362%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6862%" y="437" width="0.0805%" height="15" fill="rgb(224,103,21)" fg:x="369" fg:w="1"/><text x="29.9362%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.6862%" y="421" width="0.0805%" height="15" fill="rgb(254,110,48)" fg:x="369" fg:w="1"/><text x="29.9362%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.6862%" y="405" width="0.0805%" height="15" fill="rgb(212,88,19)" fg:x="369" fg:w="1"/><text x="29.9362%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.6862%" y="389" width="0.0805%" height="15" fill="rgb(248,103,6)" fg:x="369" fg:w="1"/><text x="29.9362%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.6862%" y="373" width="0.0805%" height="15" fill="rgb(214,53,46)" fg:x="369" fg:w="1"/><text x="29.9362%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.6862%" y="357" width="0.0805%" height="15" fill="rgb(236,190,24)" fg:x="369" fg:w="1"/><text x="29.9362%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6862%" y="341" width="0.0805%" height="15" fill="rgb(254,58,28)" fg:x="369" fg:w="1"/><text x="29.9362%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="29.5253%" y="549" width="0.3218%" height="15" fill="rgb(243,63,27)" fg:x="367" fg:w="4"/><text x="29.7753%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.7667%" y="533" width="0.0805%" height="15" fill="rgb(206,81,20)" fg:x="370" fg:w="1"/><text x="30.0167%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.88%)</title><rect x="29.8471%" y="549" width="0.8850%" height="15" fill="rgb(252,69,51)" fg:x="371" fg:w="11"/><text x="30.0971%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.88%)</title><rect x="29.8471%" y="533" width="0.8850%" height="15" fill="rgb(222,213,4)" fg:x="371" fg:w="11"/><text x="30.0971%" y="543.50"></text></g><g><title>realloc (11 samples, 0.88%)</title><rect x="29.8471%" y="517" width="0.8850%" height="15" fill="rgb(226,198,12)" fg:x="371" fg:w="11"/><text x="30.0971%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.7321%" y="549" width="0.0805%" height="15" fill="rgb(248,115,11)" fg:x="382" fg:w="1"/><text x="30.9821%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.7321%" y="533" width="0.0805%" height="15" fill="rgb(221,148,54)" fg:x="382" fg:w="1"/><text x="30.9821%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="30.8126%" y="533" width="0.0805%" height="15" fill="rgb(214,209,51)" fg:x="383" fg:w="1"/><text x="31.0626%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="30.8126%" y="517" width="0.0805%" height="15" fill="rgb(249,116,53)" fg:x="383" fg:w="1"/><text x="31.0626%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.8126%" y="501" width="0.0805%" height="15" fill="rgb(248,170,1)" fg:x="383" fg:w="1"/><text x="31.0626%" y="511.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="30.9735%" y="501" width="0.0805%" height="15" fill="rgb(244,105,10)" fg:x="385" fg:w="1"/><text x="31.2235%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.9735%" y="485" width="0.0805%" height="15" fill="rgb(229,100,5)" fg:x="385" fg:w="1"/><text x="31.2235%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.9735%" y="469" width="0.0805%" height="15" fill="rgb(233,221,39)" fg:x="385" fg:w="1"/><text x="31.2235%" y="479.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="30.8930%" y="533" width="0.2414%" height="15" fill="rgb(233,88,21)" fg:x="384" fg:w="3"/><text x="31.1430%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="30.8930%" y="517" width="0.2414%" height="15" fill="rgb(206,13,0)" fg:x="384" fg:w="3"/><text x="31.1430%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="31.0539%" y="501" width="0.0805%" height="15" fill="rgb(242,15,35)" fg:x="386" fg:w="1"/><text x="31.3039%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.0539%" y="485" width="0.0805%" height="15" fill="rgb(247,142,41)" fg:x="386" fg:w="1"/><text x="31.3039%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="469" width="0.0805%" height="15" fill="rgb(245,51,29)" fg:x="386" fg:w="1"/><text x="31.3039%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.0539%" y="453" width="0.0805%" height="15" fill="rgb(228,209,43)" fg:x="386" fg:w="1"/><text x="31.3039%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="437" width="0.0805%" height="15" fill="rgb(233,185,9)" fg:x="386" fg:w="1"/><text x="31.3039%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="421" width="0.0805%" height="15" fill="rgb(226,93,0)" fg:x="386" fg:w="1"/><text x="31.3039%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="405" width="0.0805%" height="15" fill="rgb(245,194,43)" fg:x="386" fg:w="1"/><text x="31.3039%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.0539%" y="389" width="0.0805%" height="15" fill="rgb(211,145,34)" fg:x="386" fg:w="1"/><text x="31.3039%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="373" width="0.0805%" height="15" fill="rgb(231,228,28)" fg:x="386" fg:w="1"/><text x="31.3039%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="357" width="0.0805%" height="15" fill="rgb(236,149,4)" fg:x="386" fg:w="1"/><text x="31.3039%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="341" width="0.0805%" height="15" fill="rgb(234,114,38)" fg:x="386" fg:w="1"/><text x="31.3039%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.0539%" y="325" width="0.0805%" height="15" fill="rgb(246,132,51)" fg:x="386" fg:w="1"/><text x="31.3039%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="309" width="0.0805%" height="15" fill="rgb(251,137,22)" fg:x="386" fg:w="1"/><text x="31.3039%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="31.0539%" y="293" width="0.0805%" height="15" fill="rgb(243,59,52)" fg:x="386" fg:w="1"/><text x="31.3039%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1344%" y="501" width="0.0805%" height="15" fill="rgb(239,56,28)" fg:x="387" fg:w="1"/><text x="31.3844%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1344%" y="485" width="0.0805%" height="15" fill="rgb(218,168,27)" fg:x="387" fg:w="1"/><text x="31.3844%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1344%" y="469" width="0.0805%" height="15" fill="rgb(232,165,11)" fg:x="387" fg:w="1"/><text x="31.3844%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1344%" y="453" width="0.0805%" height="15" fill="rgb(253,55,41)" fg:x="387" fg:w="1"/><text x="31.3844%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1344%" y="437" width="0.0805%" height="15" fill="rgb(233,206,24)" fg:x="387" fg:w="1"/><text x="31.3844%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1344%" y="421" width="0.0805%" height="15" fill="rgb(220,199,8)" fg:x="387" fg:w="1"/><text x="31.3844%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1344%" y="405" width="0.0805%" height="15" fill="rgb(254,65,26)" fg:x="387" fg:w="1"/><text x="31.3844%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1344%" y="389" width="0.0805%" height="15" fill="rgb(253,102,23)" fg:x="387" fg:w="1"/><text x="31.3844%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1344%" y="373" width="0.0805%" height="15" fill="rgb(231,103,35)" fg:x="387" fg:w="1"/><text x="31.3844%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.1344%" y="357" width="0.0805%" height="15" fill="rgb(238,26,10)" fg:x="387" fg:w="1"/><text x="31.3844%" y="367.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (23 samples, 1.85%)</title><rect x="29.5253%" y="565" width="1.8504%" height="15" fill="rgb(234,191,34)" fg:x="367" fg:w="23"/><text x="29.7753%" y="575.50">p..</text></g><g><title>plugins_core::tools::contained_by (7 samples, 0.56%)</title><rect x="30.8126%" y="549" width="0.5632%" height="15" fill="rgb(206,210,9)" fg:x="383" fg:w="7"/><text x="31.0626%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="31.1344%" y="533" width="0.2414%" height="15" fill="rgb(219,155,3)" fg:x="387" fg:w="3"/><text x="31.3844%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="31.1344%" y="517" width="0.2414%" height="15" fill="rgb(221,62,52)" fg:x="387" fg:w="3"/><text x="31.3844%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="31.2148%" y="501" width="0.1609%" height="15" fill="rgb(215,197,36)" fg:x="388" fg:w="2"/><text x="31.4648%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="31.2148%" y="485" width="0.1609%" height="15" fill="rgb(226,222,6)" fg:x="388" fg:w="2"/><text x="31.4648%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="31.2148%" y="469" width="0.1609%" height="15" fill="rgb(215,58,28)" fg:x="388" fg:w="2"/><text x="31.4648%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="31.2148%" y="453" width="0.1609%" height="15" fill="rgb(212,148,2)" fg:x="388" fg:w="2"/><text x="31.4648%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="31.2953%" y="437" width="0.0805%" height="15" fill="rgb(208,21,42)" fg:x="389" fg:w="1"/><text x="31.5453%" y="447.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="31.2953%" y="421" width="0.0805%" height="15" fill="rgb(209,107,26)" fg:x="389" fg:w="1"/><text x="31.5453%" y="431.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="31.2953%" y="405" width="0.0805%" height="15" fill="rgb(254,60,47)" fg:x="389" fg:w="1"/><text x="31.5453%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.3757%" y="437" width="0.1609%" height="15" fill="rgb(207,226,45)" fg:x="390" fg:w="2"/><text x="31.6257%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="31.3757%" y="421" width="0.1609%" height="15" fill="rgb(223,124,22)" fg:x="390" fg:w="2"/><text x="31.6257%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="31.3757%" y="405" width="0.1609%" height="15" fill="rgb(240,162,13)" fg:x="390" fg:w="2"/><text x="31.6257%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="31.3757%" y="389" width="0.1609%" height="15" fill="rgb(244,199,31)" fg:x="390" fg:w="2"/><text x="31.6257%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="31.3757%" y="373" width="0.1609%" height="15" fill="rgb(207,92,16)" fg:x="390" fg:w="2"/><text x="31.6257%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="31.3757%" y="357" width="0.1609%" height="15" fill="rgb(215,31,19)" fg:x="390" fg:w="2"/><text x="31.6257%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="31.3757%" y="341" width="0.1609%" height="15" fill="rgb(245,118,14)" fg:x="390" fg:w="2"/><text x="31.6257%" y="351.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.3757%" y="533" width="0.2414%" height="15" fill="rgb(248,12,46)" fg:x="390" fg:w="3"/><text x="31.6257%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.3757%" y="517" width="0.2414%" height="15" fill="rgb(209,119,0)" fg:x="390" fg:w="3"/><text x="31.6257%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="31.3757%" y="501" width="0.2414%" height="15" fill="rgb(254,51,44)" fg:x="390" fg:w="3"/><text x="31.6257%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="31.3757%" y="485" width="0.2414%" height="15" fill="rgb(253,182,35)" fg:x="390" fg:w="3"/><text x="31.6257%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="31.3757%" y="469" width="0.2414%" height="15" fill="rgb(205,198,39)" fg:x="390" fg:w="3"/><text x="31.6257%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="31.3757%" y="453" width="0.2414%" height="15" fill="rgb(251,175,48)" fg:x="390" fg:w="3"/><text x="31.6257%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="31.5366%" y="437" width="0.0805%" height="15" fill="rgb(239,38,17)" fg:x="392" fg:w="1"/><text x="31.7866%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="31.5366%" y="421" width="0.0805%" height="15" fill="rgb(212,101,8)" fg:x="392" fg:w="1"/><text x="31.7866%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="31.3757%" y="549" width="0.4827%" height="15" fill="rgb(228,35,17)" fg:x="390" fg:w="6"/><text x="31.6257%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="31.6171%" y="533" width="0.2414%" height="15" fill="rgb(214,95,8)" fg:x="393" fg:w="3"/><text x="31.8671%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.8584%" y="549" width="0.0805%" height="15" fill="rgb(210,176,35)" fg:x="396" fg:w="1"/><text x="32.1084%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="31.9389%" y="549" width="0.1609%" height="15" fill="rgb(226,4,3)" fg:x="397" fg:w="2"/><text x="32.1889%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="32.0193%" y="533" width="0.0805%" height="15" fill="rgb(232,133,14)" fg:x="398" fg:w="1"/><text x="32.2693%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="32.0998%" y="517" width="0.0805%" height="15" fill="rgb(250,191,8)" fg:x="399" fg:w="1"/><text x="32.3498%" y="527.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.1802%" y="485" width="0.0805%" height="15" fill="rgb(213,12,45)" fg:x="400" fg:w="1"/><text x="32.4302%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.1802%" y="469" width="0.0805%" height="15" fill="rgb(233,78,26)" fg:x="400" fg:w="1"/><text x="32.4302%" y="479.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="32.1802%" y="453" width="0.0805%" height="15" fill="rgb(245,222,11)" fg:x="400" fg:w="1"/><text x="32.4302%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.1802%" y="437" width="0.0805%" height="15" fill="rgb(216,174,12)" fg:x="400" fg:w="1"/><text x="32.4302%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.97%)</title><rect x="31.3757%" y="565" width="0.9654%" height="15" fill="rgb(213,15,9)" fg:x="390" fg:w="12"/><text x="31.6257%" y="575.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="32.0998%" y="549" width="0.2414%" height="15" fill="rgb(238,103,32)" fg:x="399" fg:w="3"/><text x="32.3498%" y="559.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="32.0998%" y="533" width="0.2414%" height="15" fill="rgb(245,85,15)" fg:x="399" fg:w="3"/><text x="32.3498%" y="543.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="32.1802%" y="517" width="0.1609%" height="15" fill="rgb(254,204,5)" fg:x="400" fg:w="2"/><text x="32.4302%" y="527.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="32.1802%" y="501" width="0.1609%" height="15" fill="rgb(231,178,15)" fg:x="400" fg:w="2"/><text x="32.4302%" y="511.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.08%)</title><rect x="32.2607%" y="485" width="0.0805%" height="15" fill="rgb(248,151,3)" fg:x="401" fg:w="1"/><text x="32.5107%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (38 samples, 3.06%)</title><rect x="29.3644%" y="597" width="3.0571%" height="15" fill="rgb(250,139,13)" fg:x="365" fg:w="38"/><text x="29.6144%" y="607.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (38 samples, 3.06%)</title><rect x="29.3644%" y="581" width="3.0571%" height="15" fill="rgb(243,107,53)" fg:x="365" fg:w="38"/><text x="29.6144%" y="591.50">&lt;pl..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="32.3411%" y="565" width="0.0805%" height="15" fill="rgb(232,81,15)" fg:x="402" fg:w="1"/><text x="32.5911%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3411%" y="549" width="0.0805%" height="15" fill="rgb(225,187,48)" fg:x="402" fg:w="1"/><text x="32.5911%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3411%" y="533" width="0.0805%" height="15" fill="rgb(205,116,12)" fg:x="402" fg:w="1"/><text x="32.5911%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3411%" y="517" width="0.0805%" height="15" fill="rgb(220,222,31)" fg:x="402" fg:w="1"/><text x="32.5911%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3411%" y="501" width="0.0805%" height="15" fill="rgb(233,187,49)" fg:x="402" fg:w="1"/><text x="32.5911%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3411%" y="485" width="0.0805%" height="15" fill="rgb(211,168,53)" fg:x="402" fg:w="1"/><text x="32.5911%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3411%" y="469" width="0.0805%" height="15" fill="rgb(206,160,16)" fg:x="402" fg:w="1"/><text x="32.5911%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.3411%" y="453" width="0.0805%" height="15" fill="rgb(254,164,13)" fg:x="402" fg:w="1"/><text x="32.5911%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.3411%" y="437" width="0.0805%" height="15" fill="rgb(229,45,30)" fg:x="402" fg:w="1"/><text x="32.5911%" y="447.50"></text></g><g><title>&lt;kernel::scopes::Effect as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.08%)</title><rect x="32.4216%" y="597" width="0.0805%" height="15" fill="rgb(237,32,10)" fg:x="403" fg:w="1"/><text x="32.6716%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.4216%" y="581" width="0.0805%" height="15" fill="rgb(251,20,47)" fg:x="403" fg:w="1"/><text x="32.6716%" y="591.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="32.5020%" y="597" width="0.1609%" height="15" fill="rgb(251,116,12)" fg:x="404" fg:w="2"/><text x="32.7520%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5020%" y="581" width="0.1609%" height="15" fill="rgb(214,227,27)" fg:x="404" fg:w="2"/><text x="32.7520%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.5020%" y="565" width="0.1609%" height="15" fill="rgb(248,10,53)" fg:x="404" fg:w="2"/><text x="32.7520%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.5825%" y="549" width="0.0805%" height="15" fill="rgb(221,176,25)" fg:x="405" fg:w="1"/><text x="32.8325%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.5825%" y="533" width="0.0805%" height="15" fill="rgb(205,70,46)" fg:x="405" fg:w="1"/><text x="32.8325%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.5825%" y="517" width="0.0805%" height="15" fill="rgb(217,45,38)" fg:x="405" fg:w="1"/><text x="32.8325%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.5825%" y="501" width="0.0805%" height="15" fill="rgb(243,6,54)" fg:x="405" fg:w="1"/><text x="32.8325%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.5825%" y="485" width="0.0805%" height="15" fill="rgb(242,76,23)" fg:x="405" fg:w="1"/><text x="32.8325%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.5825%" y="469" width="0.0805%" height="15" fill="rgb(239,166,0)" fg:x="405" fg:w="1"/><text x="32.8325%" y="479.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="32.6629%" y="597" width="0.0805%" height="15" fill="rgb(238,174,32)" fg:x="406" fg:w="1"/><text x="32.9129%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="32.6629%" y="581" width="0.0805%" height="15" fill="rgb(238,124,44)" fg:x="406" fg:w="1"/><text x="32.9129%" y="591.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="32.6629%" y="565" width="0.0805%" height="15" fill="rgb(206,185,9)" fg:x="406" fg:w="1"/><text x="32.9129%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.6629%" y="549" width="0.0805%" height="15" fill="rgb(215,157,17)" fg:x="406" fg:w="1"/><text x="32.9129%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="32.8238%" y="581" width="0.1609%" height="15" fill="rgb(251,17,29)" fg:x="408" fg:w="2"/><text x="33.0738%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.9043%" y="565" width="0.0805%" height="15" fill="rgb(227,113,27)" fg:x="409" fg:w="1"/><text x="33.1543%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9043%" y="549" width="0.0805%" height="15" fill="rgb(217,226,24)" fg:x="409" fg:w="1"/><text x="33.1543%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="32.9847%" y="581" width="0.0805%" height="15" fill="rgb(251,99,38)" fg:x="410" fg:w="1"/><text x="33.2347%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="32.9847%" y="565" width="0.0805%" height="15" fill="rgb(231,147,19)" fg:x="410" fg:w="1"/><text x="33.2347%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="32.9847%" y="549" width="0.0805%" height="15" fill="rgb(230,86,8)" fg:x="410" fg:w="1"/><text x="33.2347%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2261%" y="565" width="0.0805%" height="15" fill="rgb(237,159,39)" fg:x="413" fg:w="1"/><text x="33.4761%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2261%" y="549" width="0.0805%" height="15" fill="rgb(247,179,47)" fg:x="413" fg:w="1"/><text x="33.4761%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2261%" y="533" width="0.0805%" height="15" fill="rgb(253,152,26)" fg:x="413" fg:w="1"/><text x="33.4761%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.2261%" y="517" width="0.0805%" height="15" fill="rgb(222,211,15)" fg:x="413" fg:w="1"/><text x="33.4761%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.2261%" y="501" width="0.0805%" height="15" fill="rgb(236,193,6)" fg:x="413" fg:w="1"/><text x="33.4761%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.2261%" y="485" width="0.0805%" height="15" fill="rgb(226,206,10)" fg:x="413" fg:w="1"/><text x="33.4761%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.2261%" y="469" width="0.0805%" height="15" fill="rgb(213,125,22)" fg:x="413" fg:w="1"/><text x="33.4761%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.2261%" y="453" width="0.0805%" height="15" fill="rgb(221,66,28)" fg:x="413" fg:w="1"/><text x="33.4761%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.2261%" y="437" width="0.0805%" height="15" fill="rgb(222,84,53)" fg:x="413" fg:w="1"/><text x="33.4761%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.2261%" y="421" width="0.0805%" height="15" fill="rgb(243,50,15)" fg:x="413" fg:w="1"/><text x="33.4761%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.2261%" y="405" width="0.0805%" height="15" fill="rgb(208,184,23)" fg:x="413" fg:w="1"/><text x="33.4761%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.2261%" y="389" width="0.0805%" height="15" fill="rgb(221,83,2)" fg:x="413" fg:w="1"/><text x="33.4761%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.2261%" y="373" width="0.0805%" height="15" fill="rgb(236,53,24)" fg:x="413" fg:w="1"/><text x="33.4761%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.3065%" y="549" width="0.0805%" height="15" fill="rgb(244,171,29)" fg:x="414" fg:w="1"/><text x="33.5565%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3065%" y="533" width="0.0805%" height="15" fill="rgb(205,19,11)" fg:x="414" fg:w="1"/><text x="33.5565%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="33.4674%" y="469" width="0.0805%" height="15" fill="rgb(207,108,29)" fg:x="416" fg:w="1"/><text x="33.7174%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4674%" y="453" width="0.0805%" height="15" fill="rgb(236,215,43)" fg:x="416" fg:w="1"/><text x="33.7174%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.4674%" y="437" width="0.0805%" height="15" fill="rgb(213,58,35)" fg:x="416" fg:w="1"/><text x="33.7174%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.4674%" y="421" width="0.0805%" height="15" fill="rgb(220,211,46)" fg:x="416" fg:w="1"/><text x="33.7174%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.4674%" y="405" width="0.0805%" height="15" fill="rgb(212,134,16)" fg:x="416" fg:w="1"/><text x="33.7174%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.4674%" y="389" width="0.0805%" height="15" fill="rgb(232,90,44)" fg:x="416" fg:w="1"/><text x="33.7174%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4674%" y="373" width="0.0805%" height="15" fill="rgb(212,18,36)" fg:x="416" fg:w="1"/><text x="33.7174%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.4674%" y="357" width="0.0805%" height="15" fill="rgb(206,112,24)" fg:x="416" fg:w="1"/><text x="33.7174%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.4674%" y="341" width="0.0805%" height="15" fill="rgb(238,223,40)" fg:x="416" fg:w="1"/><text x="33.7174%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.4674%" y="325" width="0.0805%" height="15" fill="rgb(226,169,20)" fg:x="416" fg:w="1"/><text x="33.7174%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.4674%" y="309" width="0.0805%" height="15" fill="rgb(241,64,52)" fg:x="416" fg:w="1"/><text x="33.7174%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.4674%" y="293" width="0.0805%" height="15" fill="rgb(228,120,25)" fg:x="416" fg:w="1"/><text x="33.7174%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="33.3870%" y="549" width="0.2414%" height="15" fill="rgb(234,108,19)" fg:x="415" fg:w="3"/><text x="33.6370%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="33.3870%" y="533" width="0.2414%" height="15" fill="rgb(236,133,29)" fg:x="415" fg:w="3"/><text x="33.6370%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="33.4674%" y="517" width="0.1609%" height="15" fill="rgb(246,174,53)" fg:x="416" fg:w="2"/><text x="33.7174%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="33.4674%" y="501" width="0.1609%" height="15" fill="rgb(210,105,35)" fg:x="416" fg:w="2"/><text x="33.7174%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="33.4674%" y="485" width="0.1609%" height="15" fill="rgb(225,27,26)" fg:x="416" fg:w="2"/><text x="33.7174%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="33.5479%" y="469" width="0.0805%" height="15" fill="rgb(233,2,39)" fg:x="417" fg:w="1"/><text x="33.7979%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="33.5479%" y="453" width="0.0805%" height="15" fill="rgb(219,164,26)" fg:x="417" fg:w="1"/><text x="33.7979%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5479%" y="437" width="0.0805%" height="15" fill="rgb(236,211,5)" fg:x="417" fg:w="1"/><text x="33.7979%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5479%" y="421" width="0.0805%" height="15" fill="rgb(244,227,23)" fg:x="417" fg:w="1"/><text x="33.7979%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.6283%" y="549" width="0.0805%" height="15" fill="rgb(230,184,8)" fg:x="418" fg:w="1"/><text x="33.8783%" y="559.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="33.7088%" y="549" width="0.0805%" height="15" fill="rgb(217,125,48)" fg:x="419" fg:w="1"/><text x="33.9588%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="33.7088%" y="533" width="0.0805%" height="15" fill="rgb(223,192,47)" fg:x="419" fg:w="1"/><text x="33.9588%" y="543.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="33.7088%" y="517" width="0.0805%" height="15" fill="rgb(226,119,10)" fg:x="419" fg:w="1"/><text x="33.9588%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.80%)</title><rect x="33.0652%" y="581" width="0.8045%" height="15" fill="rgb(221,49,29)" fg:x="411" fg:w="10"/><text x="33.3152%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.56%)</title><rect x="33.3065%" y="565" width="0.5632%" height="15" fill="rgb(217,205,19)" fg:x="414" fg:w="7"/><text x="33.5565%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7892%" y="549" width="0.0805%" height="15" fill="rgb(242,104,7)" fg:x="420" fg:w="1"/><text x="34.0392%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7892%" y="533" width="0.0805%" height="15" fill="rgb(209,154,48)" fg:x="420" fg:w="1"/><text x="34.0392%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="33.7892%" y="517" width="0.0805%" height="15" fill="rgb(219,213,46)" fg:x="420" fg:w="1"/><text x="34.0392%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="33.7892%" y="501" width="0.0805%" height="15" fill="rgb(229,105,38)" fg:x="420" fg:w="1"/><text x="34.0392%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="33.7892%" y="485" width="0.0805%" height="15" fill="rgb(205,151,5)" fg:x="420" fg:w="1"/><text x="34.0392%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7892%" y="469" width="0.0805%" height="15" fill="rgb(248,115,40)" fg:x="420" fg:w="1"/><text x="34.0392%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7892%" y="453" width="0.0805%" height="15" fill="rgb(206,179,2)" fg:x="420" fg:w="1"/><text x="34.0392%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;kernel::model::AclRule&gt;&gt; (1 samples, 0.08%)</title><rect x="33.7892%" y="437" width="0.0805%" height="15" fill="rgb(230,103,24)" fg:x="420" fg:w="1"/><text x="34.0392%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.8697%" y="549" width="0.1609%" height="15" fill="rgb(218,152,4)" fg:x="421" fg:w="2"/><text x="34.1197%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.8697%" y="533" width="0.1609%" height="15" fill="rgb(236,161,54)" fg:x="421" fg:w="2"/><text x="34.1197%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="33.8697%" y="517" width="0.1609%" height="15" fill="rgb(226,65,17)" fg:x="421" fg:w="2"/><text x="34.1197%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="33.8697%" y="501" width="0.1609%" height="15" fill="rgb(221,134,44)" fg:x="421" fg:w="2"/><text x="34.1197%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="33.8697%" y="485" width="0.1609%" height="15" fill="rgb(251,129,4)" fg:x="421" fg:w="2"/><text x="34.1197%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="33.8697%" y="469" width="0.1609%" height="15" fill="rgb(244,32,34)" fg:x="421" fg:w="2"/><text x="34.1197%" y="479.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="34.0306%" y="549" width="0.3218%" height="15" fill="rgb(251,224,37)" fg:x="423" fg:w="4"/><text x="34.2806%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="34.0306%" y="533" width="0.3218%" height="15" fill="rgb(248,117,31)" fg:x="423" fg:w="4"/><text x="34.2806%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="34.1110%" y="517" width="0.2414%" height="15" fill="rgb(222,208,37)" fg:x="424" fg:w="3"/><text x="34.3610%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="34.1110%" y="501" width="0.2414%" height="15" fill="rgb(234,211,25)" fg:x="424" fg:w="3"/><text x="34.3610%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="34.1110%" y="485" width="0.2414%" height="15" fill="rgb(211,72,6)" fg:x="424" fg:w="3"/><text x="34.3610%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.2719%" y="469" width="0.0805%" height="15" fill="rgb(249,198,38)" fg:x="426" fg:w="1"/><text x="34.5219%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="34.3524%" y="501" width="0.0805%" height="15" fill="rgb(221,86,51)" fg:x="427" fg:w="1"/><text x="34.6024%" y="511.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="33.8697%" y="581" width="0.6436%" height="15" fill="rgb(226,178,43)" fg:x="421" fg:w="8"/><text x="34.1197%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (8 samples, 0.64%)</title><rect x="33.8697%" y="565" width="0.6436%" height="15" fill="rgb(215,145,7)" fg:x="421" fg:w="8"/><text x="34.1197%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="34.3524%" y="549" width="0.1609%" height="15" fill="rgb(250,202,36)" fg:x="427" fg:w="2"/><text x="34.6024%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.3524%" y="533" width="0.1609%" height="15" fill="rgb(215,86,13)" fg:x="427" fg:w="2"/><text x="34.6024%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="34.3524%" y="517" width="0.1609%" height="15" fill="rgb(221,134,12)" fg:x="427" fg:w="2"/><text x="34.6024%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="34.4328%" y="501" width="0.0805%" height="15" fill="rgb(213,82,10)" fg:x="428" fg:w="1"/><text x="34.6828%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.4328%" y="485" width="0.0805%" height="15" fill="rgb(214,142,0)" fg:x="428" fg:w="1"/><text x="34.6828%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.5937%" y="565" width="0.0805%" height="15" fill="rgb(205,145,9)" fg:x="430" fg:w="1"/><text x="34.8437%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.6742%" y="565" width="0.0805%" height="15" fill="rgb(244,214,8)" fg:x="431" fg:w="1"/><text x="34.9242%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="34.5133%" y="581" width="0.3218%" height="15" fill="rgb(224,72,51)" fg:x="429" fg:w="4"/><text x="34.7633%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="34.7546%" y="565" width="0.0805%" height="15" fill="rgb(233,137,37)" fg:x="432" fg:w="1"/><text x="35.0046%" y="575.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="34.7546%" y="549" width="0.0805%" height="15" fill="rgb(208,71,28)" fg:x="432" fg:w="1"/><text x="35.0046%" y="559.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="34.7546%" y="533" width="0.0805%" height="15" fill="rgb(226,31,7)" fg:x="432" fg:w="1"/><text x="35.0046%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8351%" y="549" width="0.0805%" height="15" fill="rgb(229,62,18)" fg:x="433" fg:w="1"/><text x="35.0851%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8351%" y="533" width="0.0805%" height="15" fill="rgb(226,74,28)" fg:x="433" fg:w="1"/><text x="35.0851%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.8351%" y="517" width="0.0805%" height="15" fill="rgb(214,170,18)" fg:x="433" fg:w="1"/><text x="35.0851%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.8351%" y="501" width="0.0805%" height="15" fill="rgb(227,229,35)" fg:x="433" fg:w="1"/><text x="35.0851%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.8351%" y="485" width="0.0805%" height="15" fill="rgb(225,181,39)" fg:x="433" fg:w="1"/><text x="35.0851%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.8351%" y="469" width="0.0805%" height="15" fill="rgb(253,124,44)" fg:x="433" fg:w="1"/><text x="35.0851%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8351%" y="453" width="0.0805%" height="15" fill="rgb(220,75,18)" fg:x="433" fg:w="1"/><text x="35.0851%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.8351%" y="437" width="0.0805%" height="15" fill="rgb(239,175,43)" fg:x="433" fg:w="1"/><text x="35.0851%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.8351%" y="421" width="0.0805%" height="15" fill="rgb(228,112,50)" fg:x="433" fg:w="1"/><text x="35.0851%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.8351%" y="405" width="0.0805%" height="15" fill="rgb(232,105,36)" fg:x="433" fg:w="1"/><text x="35.0851%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.8351%" y="389" width="0.0805%" height="15" fill="rgb(227,137,47)" fg:x="433" fg:w="1"/><text x="35.0851%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.8351%" y="373" width="0.0805%" height="15" fill="rgb(217,51,9)" fg:x="433" fg:w="1"/><text x="35.0851%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.8351%" y="357" width="0.0805%" height="15" fill="rgb(245,117,0)" fg:x="433" fg:w="1"/><text x="35.0851%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (70 samples, 5.63%)</title><rect x="29.3644%" y="613" width="5.6315%" height="15" fill="rgb(252,52,30)" fg:x="365" fg:w="70"/><text x="29.6144%" y="623.50">&lt;plugin..</text></g><g><title>plugins_core::tools::move_between (28 samples, 2.25%)</title><rect x="32.7434%" y="597" width="2.2526%" height="15" fill="rgb(227,85,33)" fg:x="407" fg:w="28"/><text x="32.9934%" y="607.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="34.8351%" y="581" width="0.1609%" height="15" fill="rgb(220,157,20)" fg:x="433" fg:w="2"/><text x="35.0851%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="34.8351%" y="565" width="0.1609%" height="15" fill="rgb(254,14,34)" fg:x="433" fg:w="2"/><text x="35.0851%" y="575.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="34.9155%" y="549" width="0.0805%" height="15" fill="rgb(216,103,41)" fg:x="434" fg:w="1"/><text x="35.1655%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="34.9155%" y="533" width="0.0805%" height="15" fill="rgb(245,221,9)" fg:x="434" fg:w="1"/><text x="35.1655%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.9155%" y="517" width="0.0805%" height="15" fill="rgb(254,136,47)" fg:x="434" fg:w="1"/><text x="35.1655%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1569%" y="597" width="0.0805%" height="15" fill="rgb(235,71,46)" fg:x="437" fg:w="1"/><text x="35.4069%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.1569%" y="581" width="0.0805%" height="15" fill="rgb(242,154,29)" fg:x="437" fg:w="1"/><text x="35.4069%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.1569%" y="565" width="0.0805%" height="15" fill="rgb(210,65,31)" fg:x="437" fg:w="1"/><text x="35.4069%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.1569%" y="549" width="0.0805%" height="15" fill="rgb(244,9,50)" fg:x="437" fg:w="1"/><text x="35.4069%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.1569%" y="533" width="0.0805%" height="15" fill="rgb(215,141,38)" fg:x="437" fg:w="1"/><text x="35.4069%" y="543.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="35.2373%" y="565" width="0.2414%" height="15" fill="rgb(241,129,6)" fg:x="438" fg:w="3"/><text x="35.4873%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="35.4787%" y="565" width="0.0805%" height="15" fill="rgb(253,169,4)" fg:x="441" fg:w="1"/><text x="35.7287%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="35.4787%" y="549" width="0.0805%" height="15" fill="rgb(237,82,36)" fg:x="441" fg:w="1"/><text x="35.7287%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.4787%" y="533" width="0.0805%" height="15" fill="rgb(209,171,11)" fg:x="441" fg:w="1"/><text x="35.7287%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5591%" y="549" width="0.0805%" height="15" fill="rgb(242,19,22)" fg:x="442" fg:w="1"/><text x="35.8091%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5591%" y="533" width="0.0805%" height="15" fill="rgb(251,122,24)" fg:x="442" fg:w="1"/><text x="35.8091%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5591%" y="517" width="0.0805%" height="15" fill="rgb(226,166,42)" fg:x="442" fg:w="1"/><text x="35.8091%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5591%" y="501" width="0.0805%" height="15" fill="rgb(244,101,48)" fg:x="442" fg:w="1"/><text x="35.8091%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.5591%" y="485" width="0.0805%" height="15" fill="rgb(227,125,1)" fg:x="442" fg:w="1"/><text x="35.8091%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.5591%" y="469" width="0.0805%" height="15" fill="rgb(206,79,43)" fg:x="442" fg:w="1"/><text x="35.8091%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.5591%" y="453" width="0.0805%" height="15" fill="rgb(241,109,41)" fg:x="442" fg:w="1"/><text x="35.8091%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5591%" y="437" width="0.0805%" height="15" fill="rgb(219,73,4)" fg:x="442" fg:w="1"/><text x="35.8091%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5591%" y="421" width="0.0805%" height="15" fill="rgb(239,25,41)" fg:x="442" fg:w="1"/><text x="35.8091%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.5591%" y="405" width="0.0805%" height="15" fill="rgb(208,88,46)" fg:x="442" fg:w="1"/><text x="35.8091%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.5591%" y="389" width="0.0805%" height="15" fill="rgb(239,184,9)" fg:x="442" fg:w="1"/><text x="35.8091%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.5591%" y="373" width="0.0805%" height="15" fill="rgb(223,114,13)" fg:x="442" fg:w="1"/><text x="35.8091%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.5591%" y="357" width="0.0805%" height="15" fill="rgb(214,28,42)" fg:x="442" fg:w="1"/><text x="35.8091%" y="367.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="35.5591%" y="341" width="0.0805%" height="15" fill="rgb(252,32,44)" fg:x="442" fg:w="1"/><text x="35.8091%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 1.53%)</title><rect x="35.6396%" y="549" width="1.5286%" height="15" fill="rgb(231,159,4)" fg:x="443" fg:w="19"/><text x="35.8896%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 1.53%)</title><rect x="35.6396%" y="533" width="1.5286%" height="15" fill="rgb(210,35,26)" fg:x="443" fg:w="19"/><text x="35.8896%" y="543.50"></text></g><g><title>realloc (19 samples, 1.53%)</title><rect x="35.6396%" y="517" width="1.5286%" height="15" fill="rgb(208,190,37)" fg:x="443" fg:w="19"/><text x="35.8896%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="37.1681%" y="549" width="0.0805%" height="15" fill="rgb(226,148,22)" fg:x="462" fg:w="1"/><text x="37.4181%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="37.2486%" y="501" width="0.0805%" height="15" fill="rgb(242,153,24)" fg:x="463" fg:w="1"/><text x="37.4986%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="37.2486%" y="485" width="0.0805%" height="15" fill="rgb(213,133,7)" fg:x="463" fg:w="1"/><text x="37.4986%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="37.3290%" y="501" width="0.0805%" height="15" fill="rgb(248,206,18)" fg:x="464" fg:w="1"/><text x="37.5790%" y="511.50"></text></g><g><title>kernel::model::EntityRef::into_entry (3 samples, 0.24%)</title><rect x="37.2486%" y="533" width="0.2414%" height="15" fill="rgb(233,157,4)" fg:x="463" fg:w="3"/><text x="37.4986%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (3 samples, 0.24%)</title><rect x="37.2486%" y="517" width="0.2414%" height="15" fill="rgb(249,179,32)" fg:x="463" fg:w="3"/><text x="37.4986%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="37.4095%" y="501" width="0.0805%" height="15" fill="rgb(248,69,35)" fg:x="465" fg:w="1"/><text x="37.6595%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="37.4095%" y="485" width="0.0805%" height="15" fill="rgb(249,158,38)" fg:x="465" fg:w="1"/><text x="37.6595%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="37.4095%" y="469" width="0.0805%" height="15" fill="rgb(223,18,43)" fg:x="465" fg:w="1"/><text x="37.6595%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.4095%" y="453" width="0.0805%" height="15" fill="rgb(238,42,45)" fg:x="465" fg:w="1"/><text x="37.6595%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.4095%" y="437" width="0.0805%" height="15" fill="rgb(219,65,47)" fg:x="465" fg:w="1"/><text x="37.6595%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="37.4095%" y="421" width="0.0805%" height="15" fill="rgb(248,153,12)" fg:x="465" fg:w="1"/><text x="37.6595%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="37.4095%" y="405" width="0.0805%" height="15" fill="rgb(240,118,4)" fg:x="465" fg:w="1"/><text x="37.6595%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="37.4095%" y="389" width="0.0805%" height="15" fill="rgb(250,96,34)" fg:x="465" fg:w="1"/><text x="37.6595%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="37.4095%" y="373" width="0.0805%" height="15" fill="rgb(221,15,4)" fg:x="465" fg:w="1"/><text x="37.6595%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4095%" y="357" width="0.0805%" height="15" fill="rgb(217,149,33)" fg:x="465" fg:w="1"/><text x="37.6595%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.4095%" y="341" width="0.0805%" height="15" fill="rgb(213,58,29)" fg:x="465" fg:w="1"/><text x="37.6595%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="37.4095%" y="325" width="0.0805%" height="15" fill="rgb(236,218,9)" fg:x="465" fg:w="1"/><text x="37.6595%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="37.4095%" y="309" width="0.0805%" height="15" fill="rgb(248,40,19)" fg:x="465" fg:w="1"/><text x="37.6595%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="37.4095%" y="293" width="0.0805%" height="15" fill="rgb(212,17,6)" fg:x="465" fg:w="1"/><text x="37.6595%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="37.4095%" y="277" width="0.0805%" height="15" fill="rgb(206,212,20)" fg:x="465" fg:w="1"/><text x="37.6595%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4095%" y="261" width="0.0805%" height="15" fill="rgb(229,80,37)" fg:x="465" fg:w="1"/><text x="37.6595%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="37.4095%" y="245" width="0.0805%" height="15" fill="rgb(253,8,37)" fg:x="465" fg:w="1"/><text x="37.6595%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.4095%" y="229" width="0.0805%" height="15" fill="rgb(215,16,43)" fg:x="465" fg:w="1"/><text x="37.6595%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="37.4095%" y="213" width="0.0805%" height="15" fill="rgb(236,219,16)" fg:x="465" fg:w="1"/><text x="37.6595%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.4095%" y="197" width="0.0805%" height="15" fill="rgb(251,0,3)" fg:x="465" fg:w="1"/><text x="37.6595%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.4899%" y="501" width="0.1609%" height="15" fill="rgb(207,133,37)" fg:x="466" fg:w="2"/><text x="37.7399%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4899%" y="485" width="0.1609%" height="15" fill="rgb(250,143,20)" fg:x="466" fg:w="2"/><text x="37.7399%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="37.4899%" y="469" width="0.1609%" height="15" fill="rgb(242,19,50)" fg:x="466" fg:w="2"/><text x="37.7399%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4899%" y="453" width="0.1609%" height="15" fill="rgb(206,124,43)" fg:x="466" fg:w="2"/><text x="37.7399%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="37.4899%" y="437" width="0.1609%" height="15" fill="rgb(229,4,38)" fg:x="466" fg:w="2"/><text x="37.7399%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="37.4899%" y="421" width="0.1609%" height="15" fill="rgb(247,220,45)" fg:x="466" fg:w="2"/><text x="37.7399%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="37.4899%" y="405" width="0.1609%" height="15" fill="rgb(247,195,0)" fg:x="466" fg:w="2"/><text x="37.7399%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="37.4899%" y="389" width="0.1609%" height="15" fill="rgb(252,12,19)" fg:x="466" fg:w="2"/><text x="37.7399%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.4899%" y="373" width="0.1609%" height="15" fill="rgb(222,49,50)" fg:x="466" fg:w="2"/><text x="37.7399%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="37.4899%" y="357" width="0.1609%" height="15" fill="rgb(209,157,28)" fg:x="466" fg:w="2"/><text x="37.7399%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="37.4899%" y="341" width="0.1609%" height="15" fill="rgb(238,174,24)" fg:x="466" fg:w="2"/><text x="37.7399%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="37.4899%" y="325" width="0.1609%" height="15" fill="rgb(224,17,28)" fg:x="466" fg:w="2"/><text x="37.7399%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="37.4899%" y="309" width="0.1609%" height="15" fill="rgb(249,7,29)" fg:x="466" fg:w="2"/><text x="37.7399%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="37.4899%" y="293" width="0.1609%" height="15" fill="rgb(243,178,4)" fg:x="466" fg:w="2"/><text x="37.7399%" y="303.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="37.4899%" y="277" width="0.1609%" height="15" fill="rgb(246,138,35)" fg:x="466" fg:w="2"/><text x="37.7399%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="37.6508%" y="501" width="0.0805%" height="15" fill="rgb(251,85,18)" fg:x="468" fg:w="1"/><text x="37.9008%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="37.6508%" y="485" width="0.0805%" height="15" fill="rgb(254,55,9)" fg:x="468" fg:w="1"/><text x="37.9008%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="37.8117%" y="469" width="0.0805%" height="15" fill="rgb(248,4,50)" fg:x="470" fg:w="1"/><text x="38.0617%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (35 samples, 2.82%)</title><rect x="35.2373%" y="597" width="2.8158%" height="15" fill="rgb(215,208,14)" fg:x="438" fg:w="35"/><text x="35.4873%" y="607.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (35 samples, 2.82%)</title><rect x="35.2373%" y="581" width="2.8158%" height="15" fill="rgb(218,37,18)" fg:x="438" fg:w="35"/><text x="35.4873%" y="591.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (31 samples, 2.49%)</title><rect x="35.5591%" y="565" width="2.4940%" height="15" fill="rgb(206,104,13)" fg:x="442" fg:w="31"/><text x="35.8091%" y="575.50">pl..</text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.80%)</title><rect x="37.2486%" y="549" width="0.8045%" height="15" fill="rgb(248,94,22)" fg:x="463" fg:w="10"/><text x="37.4986%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="37.4899%" y="533" width="0.5632%" height="15" fill="rgb(235,42,46)" fg:x="466" fg:w="7"/><text x="37.7399%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (7 samples, 0.56%)</title><rect x="37.4899%" y="517" width="0.5632%" height="15" fill="rgb(220,228,48)" fg:x="466" fg:w="7"/><text x="37.7399%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="37.7313%" y="501" width="0.3218%" height="15" fill="rgb(216,58,12)" fg:x="469" fg:w="4"/><text x="37.9813%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="37.7313%" y="485" width="0.3218%" height="15" fill="rgb(223,97,52)" fg:x="469" fg:w="4"/><text x="37.9813%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="37.8922%" y="469" width="0.1609%" height="15" fill="rgb(208,159,17)" fg:x="471" fg:w="2"/><text x="38.1422%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="37.8922%" y="453" width="0.1609%" height="15" fill="rgb(215,172,9)" fg:x="471" fg:w="2"/><text x="38.1422%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="37.8922%" y="437" width="0.1609%" height="15" fill="rgb(252,175,30)" fg:x="471" fg:w="2"/><text x="38.1422%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="37.8922%" y="421" width="0.1609%" height="15" fill="rgb(209,159,10)" fg:x="471" fg:w="2"/><text x="38.1422%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="37.8922%" y="405" width="0.1609%" height="15" fill="rgb(229,73,51)" fg:x="471" fg:w="2"/><text x="38.1422%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9726%" y="389" width="0.0805%" height="15" fill="rgb(208,212,43)" fg:x="472" fg:w="1"/><text x="38.2226%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="38.0531%" y="597" width="0.0805%" height="15" fill="rgb(254,123,53)" fg:x="473" fg:w="1"/><text x="38.3031%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="38.0531%" y="581" width="0.0805%" height="15" fill="rgb(254,128,49)" fg:x="473" fg:w="1"/><text x="38.3031%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.0531%" y="565" width="0.0805%" height="15" fill="rgb(246,16,16)" fg:x="473" fg:w="1"/><text x="38.3031%" y="575.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="38.1335%" y="597" width="0.0805%" height="15" fill="rgb(209,200,1)" fg:x="474" fg:w="1"/><text x="38.3835%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1335%" y="581" width="0.0805%" height="15" fill="rgb(235,9,3)" fg:x="474" fg:w="1"/><text x="38.3835%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1335%" y="565" width="0.0805%" height="15" fill="rgb(233,121,54)" fg:x="474" fg:w="1"/><text x="38.3835%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="38.1335%" y="549" width="0.0805%" height="15" fill="rgb(236,80,25)" fg:x="474" fg:w="1"/><text x="38.3835%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="38.1335%" y="533" width="0.0805%" height="15" fill="rgb(220,44,24)" fg:x="474" fg:w="1"/><text x="38.3835%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="38.1335%" y="517" width="0.0805%" height="15" fill="rgb(236,225,16)" fg:x="474" fg:w="1"/><text x="38.3835%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="38.1335%" y="501" width="0.0805%" height="15" fill="rgb(237,140,0)" fg:x="474" fg:w="1"/><text x="38.3835%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1335%" y="485" width="0.0805%" height="15" fill="rgb(243,225,53)" fg:x="474" fg:w="1"/><text x="38.3835%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="38.1335%" y="469" width="0.0805%" height="15" fill="rgb(240,140,30)" fg:x="474" fg:w="1"/><text x="38.3835%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="38.1335%" y="453" width="0.0805%" height="15" fill="rgb(217,51,16)" fg:x="474" fg:w="1"/><text x="38.3835%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="38.1335%" y="437" width="0.0805%" height="15" fill="rgb(245,75,50)" fg:x="474" fg:w="1"/><text x="38.3835%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="38.1335%" y="421" width="0.0805%" height="15" fill="rgb(208,174,22)" fg:x="474" fg:w="1"/><text x="38.3835%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="38.1335%" y="405" width="0.0805%" height="15" fill="rgb(219,98,50)" fg:x="474" fg:w="1"/><text x="38.3835%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.1335%" y="389" width="0.0805%" height="15" fill="rgb(243,138,3)" fg:x="474" fg:w="1"/><text x="38.3835%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="38.2140%" y="565" width="0.0805%" height="15" fill="rgb(243,132,26)" fg:x="475" fg:w="1"/><text x="38.4640%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="38.2944%" y="549" width="0.0805%" height="15" fill="rgb(250,201,8)" fg:x="476" fg:w="1"/><text x="38.5444%" y="559.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="38.2944%" y="533" width="0.0805%" height="15" fill="rgb(213,91,26)" fg:x="476" fg:w="1"/><text x="38.5444%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="38.2944%" y="517" width="0.0805%" height="15" fill="rgb(229,117,1)" fg:x="476" fg:w="1"/><text x="38.5444%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="38.2944%" y="501" width="0.0805%" height="15" fill="rgb(229,24,6)" fg:x="476" fg:w="1"/><text x="38.5444%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="38.2944%" y="485" width="0.0805%" height="15" fill="rgb(206,69,11)" fg:x="476" fg:w="1"/><text x="38.5444%" y="495.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="38.2944%" y="469" width="0.0805%" height="15" fill="rgb(234,111,34)" fg:x="476" fg:w="1"/><text x="38.5444%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="38.2944%" y="453" width="0.0805%" height="15" fill="rgb(213,187,51)" fg:x="476" fg:w="1"/><text x="38.5444%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.2944%" y="437" width="0.0805%" height="15" fill="rgb(207,45,11)" fg:x="476" fg:w="1"/><text x="38.5444%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="38.3749%" y="549" width="0.0805%" height="15" fill="rgb(225,151,47)" fg:x="477" fg:w="1"/><text x="38.6249%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.4553%" y="517" width="0.0805%" height="15" fill="rgb(211,226,5)" fg:x="478" fg:w="1"/><text x="38.7053%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="38.2140%" y="581" width="0.4023%" height="15" fill="rgb(214,83,52)" fg:x="475" fg:w="5"/><text x="38.4640%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (4 samples, 0.32%)</title><rect x="38.2944%" y="565" width="0.3218%" height="15" fill="rgb(229,49,53)" fg:x="476" fg:w="4"/><text x="38.5444%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="38.4553%" y="549" width="0.1609%" height="15" fill="rgb(246,8,28)" fg:x="478" fg:w="2"/><text x="38.7053%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="38.4553%" y="533" width="0.1609%" height="15" fill="rgb(207,28,41)" fg:x="478" fg:w="2"/><text x="38.7053%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="38.5358%" y="517" width="0.0805%" height="15" fill="rgb(254,22,25)" fg:x="479" fg:w="1"/><text x="38.7858%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="38.5358%" y="501" width="0.0805%" height="15" fill="rgb(209,120,42)" fg:x="479" fg:w="1"/><text x="38.7858%" y="511.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="38.5358%" y="485" width="0.0805%" height="15" fill="rgb(216,194,18)" fg:x="479" fg:w="1"/><text x="38.7858%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="38.5358%" y="469" width="0.0805%" height="15" fill="rgb(213,70,17)" fg:x="479" fg:w="1"/><text x="38.7858%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="38.5358%" y="453" width="0.0805%" height="15" fill="rgb(228,66,19)" fg:x="479" fg:w="1"/><text x="38.7858%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5358%" y="437" width="0.0805%" height="15" fill="rgb(236,221,54)" fg:x="479" fg:w="1"/><text x="38.7858%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="38.6163%" y="549" width="0.0805%" height="15" fill="rgb(207,175,15)" fg:x="480" fg:w="1"/><text x="38.8663%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.6967%" y="517" width="0.0805%" height="15" fill="rgb(234,76,8)" fg:x="481" fg:w="1"/><text x="38.9467%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="38.6967%" y="549" width="0.1609%" height="15" fill="rgb(243,106,0)" fg:x="481" fg:w="2"/><text x="38.9467%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="38.6967%" y="533" width="0.1609%" height="15" fill="rgb(208,48,19)" fg:x="481" fg:w="2"/><text x="38.9467%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.7772%" y="517" width="0.0805%" height="15" fill="rgb(251,50,29)" fg:x="482" fg:w="1"/><text x="39.0272%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="38.7772%" y="501" width="0.0805%" height="15" fill="rgb(222,31,49)" fg:x="482" fg:w="1"/><text x="39.0272%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.7772%" y="485" width="0.0805%" height="15" fill="rgb(232,33,18)" fg:x="482" fg:w="1"/><text x="39.0272%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7772%" y="469" width="0.0805%" height="15" fill="rgb(209,1,44)" fg:x="482" fg:w="1"/><text x="39.0272%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="38.8576%" y="517" width="0.0805%" height="15" fill="rgb(211,7,1)" fg:x="483" fg:w="1"/><text x="39.1076%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="38.9381%" y="469" width="0.1609%" height="15" fill="rgb(224,111,27)" fg:x="484" fg:w="2"/><text x="39.1881%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="38.6163%" y="581" width="0.5632%" height="15" fill="rgb(252,195,39)" fg:x="480" fg:w="7"/><text x="38.8663%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (7 samples, 0.56%)</title><rect x="38.6163%" y="565" width="0.5632%" height="15" fill="rgb(237,198,5)" fg:x="480" fg:w="7"/><text x="38.8663%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.32%)</title><rect x="38.8576%" y="549" width="0.3218%" height="15" fill="rgb(232,148,1)" fg:x="483" fg:w="4"/><text x="39.1076%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="38.8576%" y="533" width="0.3218%" height="15" fill="rgb(249,41,3)" fg:x="483" fg:w="4"/><text x="39.1076%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="38.9381%" y="517" width="0.2414%" height="15" fill="rgb(215,14,33)" fg:x="484" fg:w="3"/><text x="39.1881%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (3 samples, 0.24%)</title><rect x="38.9381%" y="501" width="0.2414%" height="15" fill="rgb(209,146,24)" fg:x="484" fg:w="3"/><text x="39.1881%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="38.9381%" y="485" width="0.2414%" height="15" fill="rgb(219,51,47)" fg:x="484" fg:w="3"/><text x="39.1881%" y="495.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="39.0990%" y="469" width="0.0805%" height="15" fill="rgb(234,217,40)" fg:x="486" fg:w="1"/><text x="39.3490%" y="479.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="39.0990%" y="453" width="0.0805%" height="15" fill="rgb(228,34,26)" fg:x="486" fg:w="1"/><text x="39.3490%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.2599%" y="565" width="0.1609%" height="15" fill="rgb(224,50,29)" fg:x="488" fg:w="2"/><text x="39.5099%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="39.1794%" y="581" width="0.3218%" height="15" fill="rgb(205,79,51)" fg:x="487" fg:w="4"/><text x="39.4294%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="39.4208%" y="565" width="0.0805%" height="15" fill="rgb(218,136,28)" fg:x="490" fg:w="1"/><text x="39.6708%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="39.4208%" y="549" width="0.0805%" height="15" fill="rgb(220,150,10)" fg:x="490" fg:w="1"/><text x="39.6708%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="39.5012%" y="533" width="0.0805%" height="15" fill="rgb(242,158,47)" fg:x="491" fg:w="1"/><text x="39.7512%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="39.5012%" y="565" width="0.1609%" height="15" fill="rgb(209,68,0)" fg:x="491" fg:w="2"/><text x="39.7512%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="39.5012%" y="549" width="0.1609%" height="15" fill="rgb(208,13,41)" fg:x="491" fg:w="2"/><text x="39.7512%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.5817%" y="533" width="0.0805%" height="15" fill="rgb(226,201,7)" fg:x="492" fg:w="1"/><text x="39.8317%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (59 samples, 4.75%)</title><rect x="34.9960%" y="613" width="4.7466%" height="15" fill="rgb(236,103,26)" fg:x="435" fg:w="59"/><text x="35.2460%" y="623.50">&lt;plugi..</text></g><g><title>plugins_core::tools::move_between (19 samples, 1.53%)</title><rect x="38.2140%" y="597" width="1.5286%" height="15" fill="rgb(243,162,8)" fg:x="475" fg:w="19"/><text x="38.4640%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="39.5012%" y="581" width="0.2414%" height="15" fill="rgb(237,225,11)" fg:x="491" fg:w="3"/><text x="39.7512%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.6621%" y="565" width="0.0805%" height="15" fill="rgb(247,186,32)" fg:x="493" fg:w="1"/><text x="39.9121%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.7426%" y="613" width="0.1609%" height="15" fill="rgb(215,26,28)" fg:x="494" fg:w="2"/><text x="39.9926%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="39.9035%" y="613" width="0.1609%" height="15" fill="rgb(208,121,6)" fg:x="496" fg:w="2"/><text x="40.1535%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="39.9035%" y="597" width="0.1609%" height="15" fill="rgb(225,91,3)" fg:x="496" fg:w="2"/><text x="40.1535%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9839%" y="581" width="0.0805%" height="15" fill="rgb(246,119,36)" fg:x="497" fg:w="1"/><text x="40.2339%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="40.0644%" y="549" width="0.0805%" height="15" fill="rgb(254,173,2)" fg:x="498" fg:w="1"/><text x="40.3144%" y="559.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="40.0644%" y="533" width="0.0805%" height="15" fill="rgb(209,87,54)" fg:x="498" fg:w="1"/><text x="40.3144%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0644%" y="517" width="0.0805%" height="15" fill="rgb(223,216,20)" fg:x="498" fg:w="1"/><text x="40.3144%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0644%" y="501" width="0.0805%" height="15" fill="rgb(220,31,8)" fg:x="498" fg:w="1"/><text x="40.3144%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="40.0644%" y="485" width="0.0805%" height="15" fill="rgb(220,185,15)" fg:x="498" fg:w="1"/><text x="40.3144%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="40.0644%" y="469" width="0.0805%" height="15" fill="rgb(247,190,50)" fg:x="498" fg:w="1"/><text x="40.3144%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="40.0644%" y="453" width="0.0805%" height="15" fill="rgb(239,173,47)" fg:x="498" fg:w="1"/><text x="40.3144%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="40.0644%" y="437" width="0.0805%" height="15" fill="rgb(218,190,42)" fg:x="498" fg:w="1"/><text x="40.3144%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0644%" y="421" width="0.0805%" height="15" fill="rgb(251,207,16)" fg:x="498" fg:w="1"/><text x="40.3144%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="40.0644%" y="405" width="0.0805%" height="15" fill="rgb(222,199,47)" fg:x="498" fg:w="1"/><text x="40.3144%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="40.0644%" y="389" width="0.0805%" height="15" fill="rgb(245,190,7)" fg:x="498" fg:w="1"/><text x="40.3144%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="40.0644%" y="373" width="0.0805%" height="15" fill="rgb(239,85,38)" fg:x="498" fg:w="1"/><text x="40.3144%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="40.0644%" y="357" width="0.0805%" height="15" fill="rgb(229,69,51)" fg:x="498" fg:w="1"/><text x="40.3144%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="40.0644%" y="341" width="0.0805%" height="15" fill="rgb(231,104,51)" fg:x="498" fg:w="1"/><text x="40.3144%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.0644%" y="325" width="0.0805%" height="15" fill="rgb(235,49,4)" fg:x="498" fg:w="1"/><text x="40.3144%" y="335.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="40.1448%" y="549" width="0.0805%" height="15" fill="rgb(246,166,20)" fg:x="499" fg:w="1"/><text x="40.3948%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.2253%" y="405" width="0.0805%" height="15" fill="rgb(230,119,37)" fg:x="500" fg:w="1"/><text x="40.4753%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="40.2253%" y="389" width="0.0805%" height="15" fill="rgb(234,77,34)" fg:x="500" fg:w="1"/><text x="40.4753%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="40.2253%" y="373" width="0.0805%" height="15" fill="rgb(211,222,33)" fg:x="500" fg:w="1"/><text x="40.4753%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="40.2253%" y="357" width="0.0805%" height="15" fill="rgb(226,45,42)" fg:x="500" fg:w="1"/><text x="40.4753%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="40.2253%" y="341" width="0.0805%" height="15" fill="rgb(215,174,28)" fg:x="500" fg:w="1"/><text x="40.4753%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="40.2253%" y="325" width="0.0805%" height="15" fill="rgb(254,173,49)" fg:x="500" fg:w="1"/><text x="40.4753%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.2253%" y="309" width="0.0805%" height="15" fill="rgb(229,191,6)" fg:x="500" fg:w="1"/><text x="40.4753%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="40.2253%" y="293" width="0.0805%" height="15" fill="rgb(212,145,22)" fg:x="500" fg:w="1"/><text x="40.4753%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="40.2253%" y="277" width="0.0805%" height="15" fill="rgb(226,6,51)" fg:x="500" fg:w="1"/><text x="40.4753%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="40.2253%" y="261" width="0.0805%" height="15" fill="rgb(227,128,8)" fg:x="500" fg:w="1"/><text x="40.4753%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="40.2253%" y="245" width="0.0805%" height="15" fill="rgb(205,24,10)" fg:x="500" fg:w="1"/><text x="40.4753%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="40.2253%" y="229" width="0.0805%" height="15" fill="rgb(217,147,27)" fg:x="500" fg:w="1"/><text x="40.4753%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="40.2253%" y="213" width="0.0805%" height="15" fill="rgb(250,82,42)" fg:x="500" fg:w="1"/><text x="40.4753%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="40.2253%" y="197" width="0.0805%" height="15" fill="rgb(248,93,17)" fg:x="500" fg:w="1"/><text x="40.4753%" y="207.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="40.2253%" y="181" width="0.0805%" height="15" fill="rgb(254,212,40)" fg:x="500" fg:w="1"/><text x="40.4753%" y="191.50"></text></g><g><title>kernel::model::EntityRef::into_entry (4 samples, 0.32%)</title><rect x="40.0644%" y="581" width="0.3218%" height="15" fill="rgb(229,209,2)" fg:x="498" fg:w="4"/><text x="40.3144%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="40.0644%" y="565" width="0.3218%" height="15" fill="rgb(211,50,43)" fg:x="498" fg:w="4"/><text x="40.3144%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="40.2253%" y="549" width="0.1609%" height="15" fill="rgb(245,196,29)" fg:x="500" fg:w="2"/><text x="40.4753%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="40.2253%" y="533" width="0.1609%" height="15" fill="rgb(216,132,13)" fg:x="500" fg:w="2"/><text x="40.4753%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="40.2253%" y="517" width="0.1609%" height="15" fill="rgb(251,108,21)" fg:x="500" fg:w="2"/><text x="40.4753%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="40.2253%" y="501" width="0.1609%" height="15" fill="rgb(229,174,54)" fg:x="500" fg:w="2"/><text x="40.4753%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.2253%" y="485" width="0.1609%" height="15" fill="rgb(211,175,47)" fg:x="500" fg:w="2"/><text x="40.4753%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="40.2253%" y="469" width="0.1609%" height="15" fill="rgb(234,5,37)" fg:x="500" fg:w="2"/><text x="40.4753%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="40.2253%" y="453" width="0.1609%" height="15" fill="rgb(244,150,43)" fg:x="500" fg:w="2"/><text x="40.4753%" y="463.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="40.2253%" y="437" width="0.1609%" height="15" fill="rgb(242,172,38)" fg:x="500" fg:w="2"/><text x="40.4753%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="40.2253%" y="421" width="0.1609%" height="15" fill="rgb(205,27,8)" fg:x="500" fg:w="2"/><text x="40.4753%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="40.3057%" y="405" width="0.0805%" height="15" fill="rgb(217,57,3)" fg:x="501" fg:w="1"/><text x="40.5557%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="40.3862%" y="341" width="0.0805%" height="15" fill="rgb(242,21,38)" fg:x="502" fg:w="1"/><text x="40.6362%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.3862%" y="549" width="0.1609%" height="15" fill="rgb(209,64,43)" fg:x="502" fg:w="2"/><text x="40.6362%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="40.3862%" y="533" width="0.1609%" height="15" fill="rgb(222,2,46)" fg:x="502" fg:w="2"/><text x="40.6362%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.3862%" y="517" width="0.1609%" height="15" fill="rgb(218,19,44)" fg:x="502" fg:w="2"/><text x="40.6362%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="40.3862%" y="501" width="0.1609%" height="15" fill="rgb(240,203,42)" fg:x="502" fg:w="2"/><text x="40.6362%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="40.3862%" y="485" width="0.1609%" height="15" fill="rgb(229,23,45)" fg:x="502" fg:w="2"/><text x="40.6362%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="40.3862%" y="469" width="0.1609%" height="15" fill="rgb(205,228,51)" fg:x="502" fg:w="2"/><text x="40.6362%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="40.3862%" y="453" width="0.1609%" height="15" fill="rgb(239,36,20)" fg:x="502" fg:w="2"/><text x="40.6362%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.3862%" y="437" width="0.1609%" height="15" fill="rgb(248,172,27)" fg:x="502" fg:w="2"/><text x="40.6362%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="40.3862%" y="421" width="0.1609%" height="15" fill="rgb(244,55,32)" fg:x="502" fg:w="2"/><text x="40.6362%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="40.3862%" y="405" width="0.1609%" height="15" fill="rgb(215,97,16)" fg:x="502" fg:w="2"/><text x="40.6362%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="40.3862%" y="389" width="0.1609%" height="15" fill="rgb(224,80,29)" fg:x="502" fg:w="2"/><text x="40.6362%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="40.3862%" y="373" width="0.1609%" height="15" fill="rgb(216,93,47)" fg:x="502" fg:w="2"/><text x="40.6362%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="40.3862%" y="357" width="0.1609%" height="15" fill="rgb(238,159,10)" fg:x="502" fg:w="2"/><text x="40.6362%" y="367.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="40.4666%" y="341" width="0.0805%" height="15" fill="rgb(223,98,29)" fg:x="503" fg:w="1"/><text x="40.7166%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="40.6275%" y="357" width="0.0805%" height="15" fill="rgb(210,176,23)" fg:x="505" fg:w="1"/><text x="40.8775%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="40.6275%" y="341" width="0.0805%" height="15" fill="rgb(242,162,27)" fg:x="505" fg:w="1"/><text x="40.8775%" y="351.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.6275%" y="325" width="0.0805%" height="15" fill="rgb(245,109,32)" fg:x="505" fg:w="1"/><text x="40.8775%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="40.6275%" y="389" width="0.1609%" height="15" fill="rgb(248,87,8)" fg:x="505" fg:w="2"/><text x="40.8775%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="40.6275%" y="373" width="0.1609%" height="15" fill="rgb(250,160,50)" fg:x="505" fg:w="2"/><text x="40.8775%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="40.7080%" y="357" width="0.0805%" height="15" fill="rgb(246,165,25)" fg:x="506" fg:w="1"/><text x="40.9580%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="40.6275%" y="501" width="0.2414%" height="15" fill="rgb(249,219,3)" fg:x="505" fg:w="3"/><text x="40.8775%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="40.6275%" y="485" width="0.2414%" height="15" fill="rgb(226,66,5)" fg:x="505" fg:w="3"/><text x="40.8775%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="40.6275%" y="469" width="0.2414%" height="15" fill="rgb(250,220,43)" fg:x="505" fg:w="3"/><text x="40.8775%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.6275%" y="453" width="0.2414%" height="15" fill="rgb(225,111,31)" fg:x="505" fg:w="3"/><text x="40.8775%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="40.6275%" y="437" width="0.2414%" height="15" fill="rgb(248,106,18)" fg:x="505" fg:w="3"/><text x="40.8775%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="40.6275%" y="421" width="0.2414%" height="15" fill="rgb(220,226,45)" fg:x="505" fg:w="3"/><text x="40.8775%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.6275%" y="405" width="0.2414%" height="15" fill="rgb(208,58,53)" fg:x="505" fg:w="3"/><text x="40.8775%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7884%" y="389" width="0.0805%" height="15" fill="rgb(209,133,1)" fg:x="507" fg:w="1"/><text x="41.0384%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="40.7884%" y="373" width="0.0805%" height="15" fill="rgb(228,216,27)" fg:x="507" fg:w="1"/><text x="41.0384%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7884%" y="357" width="0.0805%" height="15" fill="rgb(238,155,2)" fg:x="507" fg:w="1"/><text x="41.0384%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="40.7884%" y="341" width="0.0805%" height="15" fill="rgb(244,99,37)" fg:x="507" fg:w="1"/><text x="41.0384%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="41.0298%" y="341" width="0.0805%" height="15" fill="rgb(254,32,3)" fg:x="510" fg:w="1"/><text x="41.2798%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0298%" y="325" width="0.0805%" height="15" fill="rgb(234,46,50)" fg:x="510" fg:w="1"/><text x="41.2798%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.0298%" y="309" width="0.0805%" height="15" fill="rgb(232,118,51)" fg:x="510" fg:w="1"/><text x="41.2798%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.0298%" y="293" width="0.0805%" height="15" fill="rgb(207,24,32)" fg:x="510" fg:w="1"/><text x="41.2798%" y="303.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="40.5471%" y="549" width="0.6436%" height="15" fill="rgb(208,107,43)" fg:x="504" fg:w="8"/><text x="40.7971%" y="559.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.64%)</title><rect x="40.5471%" y="533" width="0.6436%" height="15" fill="rgb(231,28,9)" fg:x="504" fg:w="8"/><text x="40.7971%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.56%)</title><rect x="40.6275%" y="517" width="0.5632%" height="15" fill="rgb(241,204,15)" fg:x="505" fg:w="7"/><text x="40.8775%" y="527.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="40.8689%" y="501" width="0.3218%" height="15" fill="rgb(214,54,15)" fg:x="508" fg:w="4"/><text x="41.1189%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.8689%" y="485" width="0.3218%" height="15" fill="rgb(230,12,28)" fg:x="508" fg:w="4"/><text x="41.1189%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="40.8689%" y="469" width="0.3218%" height="15" fill="rgb(221,171,5)" fg:x="508" fg:w="4"/><text x="41.1189%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="40.8689%" y="453" width="0.3218%" height="15" fill="rgb(207,72,25)" fg:x="508" fg:w="4"/><text x="41.1189%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="40.8689%" y="437" width="0.3218%" height="15" fill="rgb(249,79,37)" fg:x="508" fg:w="4"/><text x="41.1189%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="40.9493%" y="421" width="0.2414%" height="15" fill="rgb(209,98,49)" fg:x="509" fg:w="3"/><text x="41.1993%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="40.9493%" y="405" width="0.2414%" height="15" fill="rgb(221,62,13)" fg:x="509" fg:w="3"/><text x="41.1993%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.0298%" y="389" width="0.1609%" height="15" fill="rgb(223,39,6)" fg:x="510" fg:w="2"/><text x="41.2798%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="41.0298%" y="373" width="0.1609%" height="15" fill="rgb(246,163,20)" fg:x="510" fg:w="2"/><text x="41.2798%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="41.0298%" y="357" width="0.1609%" height="15" fill="rgb(211,111,29)" fg:x="510" fg:w="2"/><text x="41.2798%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1102%" y="341" width="0.0805%" height="15" fill="rgb(243,118,5)" fg:x="511" fg:w="1"/><text x="41.3602%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.1907%" y="517" width="0.0805%" height="15" fill="rgb(240,144,52)" fg:x="512" fg:w="1"/><text x="41.4407%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (16 samples, 1.29%)</title><rect x="40.0644%" y="597" width="1.2872%" height="15" fill="rgb(244,158,36)" fg:x="498" fg:w="16"/><text x="40.3144%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.97%)</title><rect x="40.3862%" y="581" width="0.9654%" height="15" fill="rgb(241,109,37)" fg:x="502" fg:w="12"/><text x="40.6362%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (12 samples, 0.97%)</title><rect x="40.3862%" y="565" width="0.9654%" height="15" fill="rgb(213,95,32)" fg:x="502" fg:w="12"/><text x="40.6362%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="41.1907%" y="549" width="0.1609%" height="15" fill="rgb(252,193,9)" fg:x="512" fg:w="2"/><text x="41.4407%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="41.1907%" y="533" width="0.1609%" height="15" fill="rgb(225,213,21)" fg:x="512" fg:w="2"/><text x="41.4407%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="41.2711%" y="517" width="0.0805%" height="15" fill="rgb(220,172,46)" fg:x="513" fg:w="1"/><text x="41.5211%" y="527.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="41.3516%" y="565" width="0.0805%" height="15" fill="rgb(235,75,41)" fg:x="514" fg:w="1"/><text x="41.6016%" y="575.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (18 samples, 1.45%)</title><rect x="40.0644%" y="613" width="1.4481%" height="15" fill="rgb(213,86,9)" fg:x="498" fg:w="18"/><text x="40.3144%" y="623.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="41.3516%" y="597" width="0.1609%" height="15" fill="rgb(238,127,51)" fg:x="514" fg:w="2"/><text x="41.6016%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="41.3516%" y="581" width="0.1609%" height="15" fill="rgb(215,2,54)" fg:x="514" fg:w="2"/><text x="41.6016%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="41.4320%" y="565" width="0.0805%" height="15" fill="rgb(245,80,6)" fg:x="515" fg:w="1"/><text x="41.6820%" y="575.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="41.4320%" y="549" width="0.0805%" height="15" fill="rgb(233,106,42)" fg:x="515" fg:w="1"/><text x="41.6820%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="41.4320%" y="533" width="0.0805%" height="15" fill="rgb(244,86,38)" fg:x="515" fg:w="1"/><text x="41.6820%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="41.4320%" y="517" width="0.0805%" height="15" fill="rgb(242,167,7)" fg:x="515" fg:w="1"/><text x="41.6820%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="41.4320%" y="501" width="0.0805%" height="15" fill="rgb(218,216,3)" fg:x="515" fg:w="1"/><text x="41.6820%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="41.4320%" y="485" width="0.0805%" height="15" fill="rgb(206,136,36)" fg:x="515" fg:w="1"/><text x="41.6820%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.5929%" y="581" width="0.1609%" height="15" fill="rgb(206,206,15)" fg:x="517" fg:w="2"/><text x="41.8429%" y="591.50"></text></g><g><title>__libc_free (9 samples, 0.72%)</title><rect x="42.5583%" y="501" width="0.7241%" height="15" fill="rgb(207,163,34)" fg:x="529" fg:w="9"/><text x="42.8083%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.05%)</title><rect x="42.3170%" y="517" width="1.0459%" height="15" fill="rgb(240,127,22)" fg:x="526" fg:w="13"/><text x="42.5670%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="43.2824%" y="501" width="0.0805%" height="15" fill="rgb(227,49,5)" fg:x="538" fg:w="1"/><text x="43.5324%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="43.3628%" y="517" width="0.2414%" height="15" fill="rgb(231,8,6)" fg:x="539" fg:w="3"/><text x="43.6128%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="43.6846%" y="485" width="0.1609%" height="15" fill="rgb(223,21,24)" fg:x="543" fg:w="2"/><text x="43.9346%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="43.6846%" y="501" width="0.2414%" height="15" fill="rgb(244,44,52)" fg:x="543" fg:w="3"/><text x="43.9346%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="43.8455%" y="485" width="0.0805%" height="15" fill="rgb(207,73,28)" fg:x="545" fg:w="1"/><text x="44.0955%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="42.2365%" y="533" width="1.7699%" height="15" fill="rgb(234,215,10)" fg:x="525" fg:w="22"/><text x="42.4865%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (5 samples, 0.40%)</title><rect x="43.6042%" y="517" width="0.4023%" height="15" fill="rgb(236,85,3)" fg:x="542" fg:w="5"/><text x="43.8542%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="43.9260%" y="501" width="0.0805%" height="15" fill="rgb(236,102,39)" fg:x="546" fg:w="1"/><text x="44.1760%" y="511.50"></text></g><g><title>__libc_free (8 samples, 0.64%)</title><rect x="44.0064%" y="533" width="0.6436%" height="15" fill="rgb(243,50,8)" fg:x="547" fg:w="8"/><text x="44.2564%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 2.74%)</title><rect x="41.9952%" y="549" width="2.7353%" height="15" fill="rgb(207,111,4)" fg:x="522" fg:w="34"/><text x="42.2452%" y="559.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="44.6500%" y="533" width="0.0805%" height="15" fill="rgb(230,52,42)" fg:x="555" fg:w="1"/><text x="44.9000%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 3.86%)</title><rect x="41.8343%" y="565" width="3.8616%" height="15" fill="rgb(252,178,50)" fg:x="520" fg:w="48"/><text x="42.0843%" y="575.50">&lt;has..</text></g><g><title>__libc_free (12 samples, 0.97%)</title><rect x="44.7305%" y="549" width="0.9654%" height="15" fill="rgb(234,46,35)" fg:x="556" fg:w="12"/><text x="44.9805%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (51 samples, 4.10%)</title><rect x="41.7538%" y="581" width="4.1030%" height="15" fill="rgb(228,69,37)" fg:x="519" fg:w="51"/><text x="42.0038%" y="591.50">core..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="45.6959%" y="565" width="0.1609%" height="15" fill="rgb(221,21,11)" fg:x="568" fg:w="2"/><text x="45.9459%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9372%" y="565" width="0.0805%" height="15" fill="rgb(223,56,9)" fg:x="571" fg:w="1"/><text x="46.1872%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9372%" y="549" width="0.0805%" height="15" fill="rgb(234,30,19)" fg:x="571" fg:w="1"/><text x="46.1872%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.9372%" y="533" width="0.0805%" height="15" fill="rgb(211,64,54)" fg:x="571" fg:w="1"/><text x="46.1872%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.9372%" y="517" width="0.0805%" height="15" fill="rgb(250,189,5)" fg:x="571" fg:w="1"/><text x="46.1872%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.9372%" y="501" width="0.0805%" height="15" fill="rgb(214,180,13)" fg:x="571" fg:w="1"/><text x="46.1872%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9372%" y="485" width="0.0805%" height="15" fill="rgb(238,40,40)" fg:x="571" fg:w="1"/><text x="46.1872%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9372%" y="469" width="0.0805%" height="15" fill="rgb(214,101,38)" fg:x="571" fg:w="1"/><text x="46.1872%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.9372%" y="453" width="0.0805%" height="15" fill="rgb(242,65,53)" fg:x="571" fg:w="1"/><text x="46.1872%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.9372%" y="437" width="0.0805%" height="15" fill="rgb(230,22,45)" fg:x="571" fg:w="1"/><text x="46.1872%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.9372%" y="421" width="0.0805%" height="15" fill="rgb(223,77,1)" fg:x="571" fg:w="1"/><text x="46.1872%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.9372%" y="405" width="0.0805%" height="15" fill="rgb(227,33,37)" fg:x="571" fg:w="1"/><text x="46.1872%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9372%" y="389" width="0.0805%" height="15" fill="rgb(224,148,39)" fg:x="571" fg:w="1"/><text x="46.1872%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0177%" y="549" width="0.0805%" height="15" fill="rgb(232,212,39)" fg:x="572" fg:w="1"/><text x="46.2677%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.0177%" y="533" width="0.0805%" height="15" fill="rgb(251,172,7)" fg:x="572" fg:w="1"/><text x="46.2677%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.0177%" y="517" width="0.0805%" height="15" fill="rgb(219,39,9)" fg:x="572" fg:w="1"/><text x="46.2677%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.0177%" y="501" width="0.0805%" height="15" fill="rgb(228,118,14)" fg:x="572" fg:w="1"/><text x="46.2677%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.0177%" y="485" width="0.0805%" height="15" fill="rgb(207,140,10)" fg:x="572" fg:w="1"/><text x="46.2677%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="46.0177%" y="469" width="0.0805%" height="15" fill="rgb(227,111,53)" fg:x="572" fg:w="1"/><text x="46.2677%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="46.0177%" y="453" width="0.0805%" height="15" fill="rgb(216,165,16)" fg:x="572" fg:w="1"/><text x="46.2677%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="46.0981%" y="533" width="0.0805%" height="15" fill="rgb(226,111,18)" fg:x="573" fg:w="1"/><text x="46.3481%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.1786%" y="533" width="0.0805%" height="15" fill="rgb(251,27,17)" fg:x="574" fg:w="1"/><text x="46.4286%" y="543.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.2591%" y="533" width="0.1609%" height="15" fill="rgb(254,69,9)" fg:x="575" fg:w="2"/><text x="46.5091%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="46.4200%" y="533" width="0.0805%" height="15" fill="rgb(234,140,37)" fg:x="577" fg:w="1"/><text x="46.6700%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.48%)</title><rect x="46.0981%" y="549" width="0.4827%" height="15" fill="rgb(220,93,8)" fg:x="573" fg:w="6"/><text x="46.3481%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="46.5004%" y="533" width="0.0805%" height="15" fill="rgb(236,113,3)" fg:x="578" fg:w="1"/><text x="46.7504%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.5004%" y="517" width="0.0805%" height="15" fill="rgb(234,108,23)" fg:x="578" fg:w="1"/><text x="46.7504%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="46.5004%" y="501" width="0.0805%" height="15" fill="rgb(205,114,34)" fg:x="578" fg:w="1"/><text x="46.7504%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="46.5004%" y="485" width="0.0805%" height="15" fill="rgb(236,200,45)" fg:x="578" fg:w="1"/><text x="46.7504%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="46.5004%" y="469" width="0.0805%" height="15" fill="rgb(227,194,29)" fg:x="578" fg:w="1"/><text x="46.7504%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="46.5004%" y="453" width="0.0805%" height="15" fill="rgb(250,76,42)" fg:x="578" fg:w="1"/><text x="46.7504%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3 samples, 0.24%)</title><rect x="46.5809%" y="549" width="0.2414%" height="15" fill="rgb(208,128,8)" fg:x="579" fg:w="3"/><text x="46.8309%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="46.5809%" y="533" width="0.2414%" height="15" fill="rgb(229,209,35)" fg:x="579" fg:w="3"/><text x="46.8309%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="46.5809%" y="517" width="0.2414%" height="15" fill="rgb(215,39,53)" fg:x="579" fg:w="3"/><text x="46.8309%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="46.5809%" y="501" width="0.2414%" height="15" fill="rgb(219,123,41)" fg:x="579" fg:w="3"/><text x="46.8309%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.7418%" y="485" width="0.0805%" height="15" fill="rgb(212,158,18)" fg:x="581" fg:w="1"/><text x="46.9918%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9027%" y="517" width="0.0805%" height="15" fill="rgb(234,196,53)" fg:x="583" fg:w="1"/><text x="47.1527%" y="527.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="46.8222%" y="549" width="0.2414%" height="15" fill="rgb(210,139,12)" fg:x="582" fg:w="3"/><text x="47.0722%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="46.8222%" y="533" width="0.2414%" height="15" fill="rgb(220,116,54)" fg:x="582" fg:w="3"/><text x="47.0722%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="46.9831%" y="517" width="0.0805%" height="15" fill="rgb(247,103,28)" fg:x="584" fg:w="1"/><text x="47.2331%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="46.9831%" y="501" width="0.0805%" height="15" fill="rgb(253,156,45)" fg:x="584" fg:w="1"/><text x="47.2331%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.5463%" y="469" width="0.0805%" height="15" fill="rgb(237,157,52)" fg:x="591" fg:w="1"/><text x="47.7963%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="47.3854%" y="485" width="0.3218%" height="15" fill="rgb(253,112,16)" fg:x="589" fg:w="4"/><text x="47.6354%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="47.6267%" y="469" width="0.0805%" height="15" fill="rgb(234,70,18)" fg:x="592" fg:w="1"/><text x="47.8767%" y="479.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="47.9485%" y="405" width="0.0805%" height="15" fill="rgb(247,138,19)" fg:x="596" fg:w="1"/><text x="48.1985%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.1094%" y="181" width="0.0805%" height="15" fill="rgb(207,171,1)" fg:x="598" fg:w="1"/><text x="48.3594%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="48.1094%" y="165" width="0.0805%" height="15" fill="rgb(239,213,3)" fg:x="598" fg:w="1"/><text x="48.3594%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="48.1094%" y="149" width="0.0805%" height="15" fill="rgb(226,112,4)" fg:x="598" fg:w="1"/><text x="48.3594%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="48.1094%" y="133" width="0.0805%" height="15" fill="rgb(252,170,12)" fg:x="598" fg:w="1"/><text x="48.3594%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="48.1094%" y="117" width="0.0805%" height="15" fill="rgb(241,106,13)" fg:x="598" fg:w="1"/><text x="48.3594%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.1094%" y="277" width="0.1609%" height="15" fill="rgb(225,73,23)" fg:x="598" fg:w="2"/><text x="48.3594%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="48.1094%" y="261" width="0.1609%" height="15" fill="rgb(251,227,29)" fg:x="598" fg:w="2"/><text x="48.3594%" y="271.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="48.1094%" y="245" width="0.1609%" height="15" fill="rgb(237,144,13)" fg:x="598" fg:w="2"/><text x="48.3594%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="48.1094%" y="229" width="0.1609%" height="15" fill="rgb(232,106,46)" fg:x="598" fg:w="2"/><text x="48.3594%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="48.1094%" y="213" width="0.1609%" height="15" fill="rgb(245,154,53)" fg:x="598" fg:w="2"/><text x="48.3594%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="48.1094%" y="197" width="0.1609%" height="15" fill="rgb(212,119,47)" fg:x="598" fg:w="2"/><text x="48.3594%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.1899%" y="181" width="0.0805%" height="15" fill="rgb(253,135,25)" fg:x="599" fg:w="1"/><text x="48.4399%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.56%)</title><rect x="47.8681%" y="469" width="0.5632%" height="15" fill="rgb(253,208,39)" fg:x="595" fg:w="7"/><text x="48.1181%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="47.9485%" y="453" width="0.4827%" height="15" fill="rgb(226,64,12)" fg:x="596" fg:w="6"/><text x="48.1985%" y="463.50"></text></g><g><title>kernel::model::EntityRef::into_entry (6 samples, 0.48%)</title><rect x="47.9485%" y="437" width="0.4827%" height="15" fill="rgb(214,162,37)" fg:x="596" fg:w="6"/><text x="48.1985%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (6 samples, 0.48%)</title><rect x="47.9485%" y="421" width="0.4827%" height="15" fill="rgb(250,104,5)" fg:x="596" fg:w="6"/><text x="48.1985%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="48.0290%" y="405" width="0.4023%" height="15" fill="rgb(220,202,50)" fg:x="597" fg:w="5"/><text x="48.2790%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.32%)</title><rect x="48.1094%" y="389" width="0.3218%" height="15" fill="rgb(248,67,38)" fg:x="598" fg:w="4"/><text x="48.3594%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.32%)</title><rect x="48.1094%" y="373" width="0.3218%" height="15" fill="rgb(242,94,35)" fg:x="598" fg:w="4"/><text x="48.3594%" y="383.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="48.1094%" y="357" width="0.3218%" height="15" fill="rgb(209,78,37)" fg:x="598" fg:w="4"/><text x="48.3594%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="48.1094%" y="341" width="0.3218%" height="15" fill="rgb(230,126,47)" fg:x="598" fg:w="4"/><text x="48.3594%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="48.1094%" y="325" width="0.3218%" height="15" fill="rgb(222,110,35)" fg:x="598" fg:w="4"/><text x="48.3594%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="48.1094%" y="309" width="0.3218%" height="15" fill="rgb(233,154,20)" fg:x="598" fg:w="4"/><text x="48.3594%" y="319.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="48.1094%" y="293" width="0.3218%" height="15" fill="rgb(223,53,50)" fg:x="598" fg:w="4"/><text x="48.3594%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="48.2703%" y="277" width="0.1609%" height="15" fill="rgb(251,27,26)" fg:x="600" fg:w="2"/><text x="48.5203%" y="287.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="48.2703%" y="261" width="0.1609%" height="15" fill="rgb(223,189,16)" fg:x="600" fg:w="2"/><text x="48.5203%" y="271.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="48.3508%" y="245" width="0.0805%" height="15" fill="rgb(207,5,54)" fg:x="601" fg:w="1"/><text x="48.6008%" y="255.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="48.3508%" y="229" width="0.0805%" height="15" fill="rgb(254,124,50)" fg:x="601" fg:w="1"/><text x="48.6008%" y="239.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="48.3508%" y="213" width="0.0805%" height="15" fill="rgb(253,193,24)" fg:x="601" fg:w="1"/><text x="48.6008%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.3508%" y="197" width="0.0805%" height="15" fill="rgb(235,170,24)" fg:x="601" fg:w="1"/><text x="48.6008%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="48.3508%" y="181" width="0.0805%" height="15" fill="rgb(222,212,52)" fg:x="601" fg:w="1"/><text x="48.6008%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="48.3508%" y="165" width="0.0805%" height="15" fill="rgb(223,17,45)" fg:x="601" fg:w="1"/><text x="48.6008%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="48.3508%" y="149" width="0.0805%" height="15" fill="rgb(227,103,26)" fg:x="601" fg:w="1"/><text x="48.6008%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="48.3508%" y="133" width="0.0805%" height="15" fill="rgb(251,151,25)" fg:x="601" fg:w="1"/><text x="48.6008%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="48.3508%" y="117" width="0.0805%" height="15" fill="rgb(248,144,29)" fg:x="601" fg:w="1"/><text x="48.6008%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="48.3508%" y="101" width="0.0805%" height="15" fill="rgb(245,97,16)" fg:x="601" fg:w="1"/><text x="48.6008%" y="111.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="48.5117%" y="437" width="0.0805%" height="15" fill="rgb(220,200,29)" fg:x="603" fg:w="1"/><text x="48.7617%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="48.5117%" y="453" width="0.1609%" height="15" fill="rgb(206,38,29)" fg:x="603" fg:w="2"/><text x="48.7617%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="48.5921%" y="437" width="0.0805%" height="15" fill="rgb(245,19,52)" fg:x="604" fg:w="1"/><text x="48.8421%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.6726%" y="437" width="0.0805%" height="15" fill="rgb(205,67,43)" fg:x="605" fg:w="1"/><text x="48.9226%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="48.8335%" y="421" width="0.0805%" height="15" fill="rgb(217,128,23)" fg:x="607" fg:w="1"/><text x="49.0835%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.9139%" y="405" width="0.0805%" height="15" fill="rgb(210,109,28)" fg:x="608" fg:w="1"/><text x="49.1639%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="48.9139%" y="389" width="0.0805%" height="15" fill="rgb(233,181,7)" fg:x="608" fg:w="1"/><text x="49.1639%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="48.9944%" y="389" width="0.0805%" height="15" fill="rgb(244,11,22)" fg:x="609" fg:w="1"/><text x="49.2444%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9944%" y="373" width="0.0805%" height="15" fill="rgb(205,124,54)" fg:x="609" fg:w="1"/><text x="49.2444%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="48.9944%" y="357" width="0.0805%" height="15" fill="rgb(218,21,27)" fg:x="609" fg:w="1"/><text x="49.2444%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="48.9944%" y="341" width="0.0805%" height="15" fill="rgb(224,153,33)" fg:x="609" fg:w="1"/><text x="49.2444%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="48.9944%" y="325" width="0.0805%" height="15" fill="rgb(240,219,28)" fg:x="609" fg:w="1"/><text x="49.2444%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="48.9944%" y="309" width="0.0805%" height="15" fill="rgb(214,80,29)" fg:x="609" fg:w="1"/><text x="49.2444%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9944%" y="293" width="0.0805%" height="15" fill="rgb(247,148,44)" fg:x="609" fg:w="1"/><text x="49.2444%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="48.9944%" y="277" width="0.0805%" height="15" fill="rgb(243,110,30)" fg:x="609" fg:w="1"/><text x="49.2444%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="48.9944%" y="261" width="0.0805%" height="15" fill="rgb(243,173,41)" fg:x="609" fg:w="1"/><text x="49.2444%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="48.9944%" y="245" width="0.0805%" height="15" fill="rgb(225,160,47)" fg:x="609" fg:w="1"/><text x="49.2444%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="48.9944%" y="229" width="0.0805%" height="15" fill="rgb(215,44,21)" fg:x="609" fg:w="1"/><text x="49.2444%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="48.9944%" y="213" width="0.0805%" height="15" fill="rgb(248,90,3)" fg:x="609" fg:w="1"/><text x="49.2444%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.9944%" y="197" width="0.0805%" height="15" fill="rgb(220,196,49)" fg:x="609" fg:w="1"/><text x="49.2444%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.0748%" y="373" width="0.0805%" height="15" fill="rgb(217,138,14)" fg:x="610" fg:w="1"/><text x="49.3248%" y="383.50"></text></g><g><title>kernel::model::Entity::gid (1 samples, 0.08%)</title><rect x="49.1553%" y="373" width="0.0805%" height="15" fill="rgb(219,111,20)" fg:x="611" fg:w="1"/><text x="49.4053%" y="383.50"></text></g><g><title>kernel::model::Props::property_named (1 samples, 0.08%)</title><rect x="49.1553%" y="357" width="0.0805%" height="15" fill="rgb(218,114,4)" fg:x="611" fg:w="1"/><text x="49.4053%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="49.1553%" y="341" width="0.0805%" height="15" fill="rgb(238,133,3)" fg:x="611" fg:w="1"/><text x="49.4053%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.2357%" y="309" width="0.0805%" height="15" fill="rgb(224,95,0)" fg:x="612" fg:w="1"/><text x="49.4857%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (7 samples, 0.56%)</title><rect x="48.9944%" y="405" width="0.5632%" height="15" fill="rgb(220,169,35)" fg:x="609" fg:w="7"/><text x="49.2444%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (6 samples, 0.48%)</title><rect x="49.0748%" y="389" width="0.4827%" height="15" fill="rgb(242,116,47)" fg:x="610" fg:w="6"/><text x="49.3248%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="49.2357%" y="373" width="0.3218%" height="15" fill="rgb(251,42,20)" fg:x="612" fg:w="4"/><text x="49.4857%" y="383.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="49.2357%" y="357" width="0.3218%" height="15" fill="rgb(234,7,34)" fg:x="612" fg:w="4"/><text x="49.4857%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="49.2357%" y="341" width="0.3218%" height="15" fill="rgb(243,208,13)" fg:x="612" fg:w="4"/><text x="49.4857%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="49.2357%" y="325" width="0.3218%" height="15" fill="rgb(227,33,28)" fg:x="612" fg:w="4"/><text x="49.4857%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="49.3162%" y="309" width="0.2414%" height="15" fill="rgb(250,47,37)" fg:x="613" fg:w="3"/><text x="49.5662%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.3162%" y="293" width="0.2414%" height="15" fill="rgb(235,111,52)" fg:x="613" fg:w="3"/><text x="49.5662%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="49.3162%" y="277" width="0.2414%" height="15" fill="rgb(223,64,28)" fg:x="613" fg:w="3"/><text x="49.5662%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="49.3162%" y="261" width="0.2414%" height="15" fill="rgb(236,67,22)" fg:x="613" fg:w="3"/><text x="49.5662%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.3966%" y="245" width="0.1609%" height="15" fill="rgb(243,79,24)" fg:x="614" fg:w="2"/><text x="49.6466%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.3966%" y="229" width="0.1609%" height="15" fill="rgb(241,225,22)" fg:x="614" fg:w="2"/><text x="49.6466%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.3966%" y="213" width="0.1609%" height="15" fill="rgb(228,214,26)" fg:x="614" fg:w="2"/><text x="49.6466%" y="223.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 1.93%)</title><rect x="47.7072%" y="485" width="1.9308%" height="15" fill="rgb(219,84,52)" fg:x="593" fg:w="24"/><text x="47.9572%" y="495.50">c..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (15 samples, 1.21%)</title><rect x="48.4312%" y="469" width="1.2068%" height="15" fill="rgb(220,12,22)" fg:x="602" fg:w="15"/><text x="48.6812%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (12 samples, 0.97%)</title><rect x="48.6726%" y="453" width="0.9654%" height="15" fill="rgb(219,9,49)" fg:x="605" fg:w="12"/><text x="48.9226%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 0.88%)</title><rect x="48.7530%" y="437" width="0.8850%" height="15" fill="rgb(237,40,43)" fg:x="606" fg:w="11"/><text x="49.0030%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (9 samples, 0.72%)</title><rect x="48.9139%" y="421" width="0.7241%" height="15" fill="rgb(212,189,32)" fg:x="608" fg:w="9"/><text x="49.1639%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5575%" y="405" width="0.0805%" height="15" fill="rgb(247,48,9)" fg:x="616" fg:w="1"/><text x="49.8075%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5575%" y="389" width="0.0805%" height="15" fill="rgb(247,112,3)" fg:x="616" fg:w="1"/><text x="49.8075%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.5575%" y="373" width="0.0805%" height="15" fill="rgb(243,110,18)" fg:x="616" fg:w="1"/><text x="49.8075%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.5575%" y="357" width="0.0805%" height="15" fill="rgb(233,223,44)" fg:x="616" fg:w="1"/><text x="49.8075%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.5575%" y="341" width="0.0805%" height="15" fill="rgb(245,160,20)" fg:x="616" fg:w="1"/><text x="49.8075%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="49.6380%" y="485" width="0.0805%" height="15" fill="rgb(225,37,1)" fg:x="617" fg:w="1"/><text x="49.8880%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="49.6380%" y="469" width="0.0805%" height="15" fill="rgb(253,227,39)" fg:x="617" fg:w="1"/><text x="49.8880%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.6380%" y="453" width="0.0805%" height="15" fill="rgb(240,179,26)" fg:x="617" fg:w="1"/><text x="49.8880%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.0402%" y="229" width="0.0805%" height="15" fill="rgb(237,212,23)" fg:x="622" fg:w="1"/><text x="50.2902%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0402%" y="325" width="0.1609%" height="15" fill="rgb(221,38,11)" fg:x="622" fg:w="2"/><text x="50.2902%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="50.0402%" y="309" width="0.1609%" height="15" fill="rgb(215,85,6)" fg:x="622" fg:w="2"/><text x="50.2902%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="50.0402%" y="293" width="0.1609%" height="15" fill="rgb(239,64,14)" fg:x="622" fg:w="2"/><text x="50.2902%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="50.0402%" y="277" width="0.1609%" height="15" fill="rgb(215,150,32)" fg:x="622" fg:w="2"/><text x="50.2902%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="50.0402%" y="261" width="0.1609%" height="15" fill="rgb(238,15,13)" fg:x="622" fg:w="2"/><text x="50.2902%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="50.0402%" y="245" width="0.1609%" height="15" fill="rgb(251,87,8)" fg:x="622" fg:w="2"/><text x="50.2902%" y="255.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="50.1207%" y="229" width="0.0805%" height="15" fill="rgb(206,86,1)" fg:x="623" fg:w="1"/><text x="50.3707%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="49.7989%" y="453" width="0.4827%" height="15" fill="rgb(208,151,45)" fg:x="619" fg:w="6"/><text x="50.0489%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.0402%" y="437" width="0.2414%" height="15" fill="rgb(231,181,24)" fg:x="622" fg:w="3"/><text x="50.2902%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="50.0402%" y="421" width="0.2414%" height="15" fill="rgb(240,106,29)" fg:x="622" fg:w="3"/><text x="50.2902%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.0402%" y="405" width="0.2414%" height="15" fill="rgb(227,166,11)" fg:x="622" fg:w="3"/><text x="50.2902%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="50.0402%" y="389" width="0.2414%" height="15" fill="rgb(254,14,34)" fg:x="622" fg:w="3"/><text x="50.2902%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="50.0402%" y="373" width="0.2414%" height="15" fill="rgb(223,222,6)" fg:x="622" fg:w="3"/><text x="50.2902%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="50.0402%" y="357" width="0.2414%" height="15" fill="rgb(245,69,24)" fg:x="622" fg:w="3"/><text x="50.2902%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="50.0402%" y="341" width="0.2414%" height="15" fill="rgb(213,193,7)" fg:x="622" fg:w="3"/><text x="50.2902%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="50.2011%" y="325" width="0.0805%" height="15" fill="rgb(237,92,51)" fg:x="624" fg:w="1"/><text x="50.4511%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="50.2011%" y="309" width="0.0805%" height="15" fill="rgb(225,194,6)" fg:x="624" fg:w="1"/><text x="50.4511%" y="319.50"></text></g><g><title>&lt;kernel::model::EntityRef as core::convert::From&lt;&amp;kernel::model::EntityPtr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="50.3620%" y="373" width="0.0805%" height="15" fill="rgb(205,159,49)" fg:x="626" fg:w="1"/><text x="50.6120%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3620%" y="357" width="0.0805%" height="15" fill="rgb(219,69,2)" fg:x="626" fg:w="1"/><text x="50.6120%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.3620%" y="341" width="0.0805%" height="15" fill="rgb(215,107,24)" fg:x="626" fg:w="1"/><text x="50.6120%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="50.3620%" y="325" width="0.0805%" height="15" fill="rgb(249,208,29)" fg:x="626" fg:w="1"/><text x="50.6120%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="50.3620%" y="309" width="0.0805%" height="15" fill="rgb(213,147,10)" fg:x="626" fg:w="1"/><text x="50.6120%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="50.3620%" y="293" width="0.0805%" height="15" fill="rgb(254,140,42)" fg:x="626" fg:w="1"/><text x="50.6120%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3620%" y="277" width="0.0805%" height="15" fill="rgb(249,9,15)" fg:x="626" fg:w="1"/><text x="50.6120%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="50.3620%" y="261" width="0.0805%" height="15" fill="rgb(210,19,33)" fg:x="626" fg:w="1"/><text x="50.6120%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="50.3620%" y="245" width="0.0805%" height="15" fill="rgb(241,121,22)" fg:x="626" fg:w="1"/><text x="50.6120%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="50.3620%" y="229" width="0.0805%" height="15" fill="rgb(244,69,52)" fg:x="626" fg:w="1"/><text x="50.6120%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="50.3620%" y="213" width="0.0805%" height="15" fill="rgb(244,191,54)" fg:x="626" fg:w="1"/><text x="50.6120%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="50.3620%" y="197" width="0.0805%" height="15" fill="rgb(250,3,53)" fg:x="626" fg:w="1"/><text x="50.6120%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="50.3620%" y="181" width="0.0805%" height="15" fill="rgb(205,77,3)" fg:x="626" fg:w="1"/><text x="50.6120%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="50.2816%" y="453" width="0.2414%" height="15" fill="rgb(207,155,3)" fg:x="625" fg:w="3"/><text x="50.5316%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="50.2816%" y="437" width="0.2414%" height="15" fill="rgb(224,79,2)" fg:x="625" fg:w="3"/><text x="50.5316%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="50.2816%" y="421" width="0.2414%" height="15" fill="rgb(243,172,5)" fg:x="625" fg:w="3"/><text x="50.5316%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="50.3620%" y="405" width="0.1609%" height="15" fill="rgb(217,23,43)" fg:x="626" fg:w="2"/><text x="50.6120%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="50.3620%" y="389" width="0.1609%" height="15" fill="rgb(223,109,20)" fg:x="626" fg:w="2"/><text x="50.6120%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="50.4425%" y="373" width="0.0805%" height="15" fill="rgb(232,159,21)" fg:x="627" fg:w="1"/><text x="50.6925%" y="383.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="50.4425%" y="357" width="0.0805%" height="15" fill="rgb(219,58,2)" fg:x="627" fg:w="1"/><text x="50.6925%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.4425%" y="341" width="0.0805%" height="15" fill="rgb(241,56,8)" fg:x="627" fg:w="1"/><text x="50.6925%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="50.5229%" y="453" width="0.0805%" height="15" fill="rgb(249,10,27)" fg:x="628" fg:w="1"/><text x="50.7729%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="50.5229%" y="437" width="0.0805%" height="15" fill="rgb(248,177,5)" fg:x="628" fg:w="1"/><text x="50.7729%" y="447.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (43 samples, 3.46%)</title><rect x="47.3049%" y="501" width="3.4594%" height="15" fill="rgb(239,12,30)" fg:x="588" fg:w="43"/><text x="47.5549%" y="511.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.05%)</title><rect x="49.7184%" y="485" width="1.0459%" height="15" fill="rgb(229,164,25)" fg:x="618" fg:w="13"/><text x="49.9684%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (13 samples, 1.05%)</title><rect x="49.7184%" y="469" width="1.0459%" height="15" fill="rgb(231,217,50)" fg:x="618" fg:w="13"/><text x="49.9684%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.6034%" y="453" width="0.1609%" height="15" fill="rgb(247,99,32)" fg:x="629" fg:w="2"/><text x="50.8534%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.6034%" y="437" width="0.1609%" height="15" fill="rgb(240,74,50)" fg:x="629" fg:w="2"/><text x="50.8534%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="50.6034%" y="421" width="0.1609%" height="15" fill="rgb(218,54,8)" fg:x="629" fg:w="2"/><text x="50.8534%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="50.6034%" y="405" width="0.1609%" height="15" fill="rgb(227,132,20)" fg:x="629" fg:w="2"/><text x="50.8534%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.6838%" y="389" width="0.0805%" height="15" fill="rgb(232,134,12)" fg:x="630" fg:w="1"/><text x="50.9338%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="50.6838%" y="373" width="0.0805%" height="15" fill="rgb(250,129,18)" fg:x="630" fg:w="1"/><text x="50.9338%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.6838%" y="357" width="0.0805%" height="15" fill="rgb(232,129,47)" fg:x="630" fg:w="1"/><text x="50.9338%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7643%" y="485" width="0.0805%" height="15" fill="rgb(230,31,40)" fg:x="631" fg:w="1"/><text x="51.0143%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8447%" y="469" width="0.0805%" height="15" fill="rgb(232,126,10)" fg:x="632" fg:w="1"/><text x="51.0947%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="50.8447%" y="485" width="0.1609%" height="15" fill="rgb(205,46,31)" fg:x="632" fg:w="2"/><text x="51.0947%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="50.9252%" y="469" width="0.0805%" height="15" fill="rgb(232,37,37)" fg:x="633" fg:w="1"/><text x="51.1752%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.9252%" y="453" width="0.0805%" height="15" fill="rgb(240,91,16)" fg:x="633" fg:w="1"/><text x="51.1752%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="51.1665%" y="421" width="0.4827%" height="15" fill="rgb(224,160,9)" fg:x="636" fg:w="6"/><text x="51.4165%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="51.1665%" y="405" width="0.4827%" height="15" fill="rgb(215,116,14)" fg:x="636" fg:w="6"/><text x="51.4165%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="51.1665%" y="389" width="0.4827%" height="15" fill="rgb(235,46,36)" fg:x="636" fg:w="6"/><text x="51.4165%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.48%)</title><rect x="51.1665%" y="373" width="0.4827%" height="15" fill="rgb(238,39,28)" fg:x="636" fg:w="6"/><text x="51.4165%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.48%)</title><rect x="51.1665%" y="357" width="0.4827%" height="15" fill="rgb(242,125,29)" fg:x="636" fg:w="6"/><text x="51.4165%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.48%)</title><rect x="51.1665%" y="341" width="0.4827%" height="15" fill="rgb(238,211,30)" fg:x="636" fg:w="6"/><text x="51.4165%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.48%)</title><rect x="51.1665%" y="325" width="0.4827%" height="15" fill="rgb(227,201,28)" fg:x="636" fg:w="6"/><text x="51.4165%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.48%)</title><rect x="51.1665%" y="309" width="0.4827%" height="15" fill="rgb(238,77,29)" fg:x="636" fg:w="6"/><text x="51.4165%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.48%)</title><rect x="51.1665%" y="293" width="0.4827%" height="15" fill="rgb(213,221,40)" fg:x="636" fg:w="6"/><text x="51.4165%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.48%)</title><rect x="51.1665%" y="277" width="0.4827%" height="15" fill="rgb(226,220,44)" fg:x="636" fg:w="6"/><text x="51.4165%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.48%)</title><rect x="51.1665%" y="261" width="0.4827%" height="15" fill="rgb(228,90,23)" fg:x="636" fg:w="6"/><text x="51.4165%" y="271.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.48%)</title><rect x="51.1665%" y="245" width="0.4827%" height="15" fill="rgb(235,72,29)" fg:x="636" fg:w="6"/><text x="51.4165%" y="255.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="51.2470%" y="229" width="0.4023%" height="15" fill="rgb(248,117,39)" fg:x="637" fg:w="5"/><text x="51.4970%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (8 samples, 0.64%)</title><rect x="51.0861%" y="453" width="0.6436%" height="15" fill="rgb(225,43,28)" fg:x="635" fg:w="8"/><text x="51.3361%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.56%)</title><rect x="51.1665%" y="437" width="0.5632%" height="15" fill="rgb(240,93,4)" fg:x="636" fg:w="7"/><text x="51.4165%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.6492%" y="421" width="0.0805%" height="15" fill="rgb(234,178,27)" fg:x="642" fg:w="1"/><text x="51.8992%" y="431.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="52.2124%" y="357" width="0.2414%" height="15" fill="rgb(254,88,22)" fg:x="649" fg:w="3"/><text x="52.4624%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.2124%" y="341" width="0.2414%" height="15" fill="rgb(240,206,50)" fg:x="649" fg:w="3"/><text x="52.4624%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="52.2124%" y="325" width="0.2414%" height="15" fill="rgb(249,103,8)" fg:x="649" fg:w="3"/><text x="52.4624%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="52.2928%" y="309" width="0.1609%" height="15" fill="rgb(241,178,36)" fg:x="650" fg:w="2"/><text x="52.5428%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.2928%" y="293" width="0.1609%" height="15" fill="rgb(246,110,15)" fg:x="650" fg:w="2"/><text x="52.5428%" y="303.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.4537%" y="357" width="0.0805%" height="15" fill="rgb(207,14,43)" fg:x="652" fg:w="1"/><text x="52.7037%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.4537%" y="341" width="0.0805%" height="15" fill="rgb(253,219,19)" fg:x="652" fg:w="1"/><text x="52.7037%" y="351.50"></text></g><g><title>&lt;kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (1 samples, 0.08%)</title><rect x="52.8560%" y="277" width="0.0805%" height="15" fill="rgb(216,126,5)" fg:x="657" fg:w="1"/><text x="53.1060%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9364%" y="277" width="0.0805%" height="15" fill="rgb(218,78,42)" fg:x="658" fg:w="1"/><text x="53.1864%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.0169%" y="277" width="0.0805%" height="15" fill="rgb(215,154,40)" fg:x="659" fg:w="1"/><text x="53.2669%" y="287.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="53.0973%" y="197" width="0.0805%" height="15" fill="rgb(235,129,32)" fg:x="660" fg:w="1"/><text x="53.3473%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0973%" y="181" width="0.0805%" height="15" fill="rgb(218,51,8)" fg:x="660" fg:w="1"/><text x="53.3473%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="53.0973%" y="165" width="0.0805%" height="15" fill="rgb(245,48,4)" fg:x="660" fg:w="1"/><text x="53.3473%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.0973%" y="149" width="0.0805%" height="15" fill="rgb(250,175,12)" fg:x="660" fg:w="1"/><text x="53.3473%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.0973%" y="133" width="0.0805%" height="15" fill="rgb(237,95,40)" fg:x="660" fg:w="1"/><text x="53.3473%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="53.0973%" y="229" width="0.1609%" height="15" fill="rgb(244,120,0)" fg:x="660" fg:w="2"/><text x="53.3473%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.0973%" y="213" width="0.1609%" height="15" fill="rgb(241,19,42)" fg:x="660" fg:w="2"/><text x="53.3473%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.1778%" y="197" width="0.0805%" height="15" fill="rgb(217,174,48)" fg:x="661" fg:w="1"/><text x="53.4278%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="53.2582%" y="229" width="0.1609%" height="15" fill="rgb(239,36,38)" fg:x="662" fg:w="2"/><text x="53.5082%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="53.2582%" y="213" width="0.1609%" height="15" fill="rgb(220,63,49)" fg:x="662" fg:w="2"/><text x="53.5082%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="53.2582%" y="197" width="0.1609%" height="15" fill="rgb(240,101,13)" fg:x="662" fg:w="2"/><text x="53.5082%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.3387%" y="181" width="0.0805%" height="15" fill="rgb(209,184,51)" fg:x="663" fg:w="1"/><text x="53.5887%" y="191.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="53.4191%" y="197" width="0.0805%" height="15" fill="rgb(206,136,39)" fg:x="664" fg:w="1"/><text x="53.6691%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="53.4191%" y="181" width="0.0805%" height="15" fill="rgb(254,47,45)" fg:x="664" fg:w="1"/><text x="53.6691%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4191%" y="165" width="0.0805%" height="15" fill="rgb(252,103,20)" fg:x="664" fg:w="1"/><text x="53.6691%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.48%)</title><rect x="53.0973%" y="277" width="0.4827%" height="15" fill="rgb(230,69,12)" fg:x="660" fg:w="6"/><text x="53.3473%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="53.0973%" y="261" width="0.4827%" height="15" fill="rgb(219,2,28)" fg:x="660" fg:w="6"/><text x="53.3473%" y="271.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (6 samples, 0.48%)</title><rect x="53.0973%" y="245" width="0.4827%" height="15" fill="rgb(210,9,12)" fg:x="660" fg:w="6"/><text x="53.3473%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.4191%" y="229" width="0.1609%" height="15" fill="rgb(235,99,33)" fg:x="664" fg:w="2"/><text x="53.6691%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="53.4191%" y="213" width="0.1609%" height="15" fill="rgb(230,11,38)" fg:x="664" fg:w="2"/><text x="53.6691%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4996%" y="197" width="0.0805%" height="15" fill="rgb(217,129,0)" fg:x="665" fg:w="1"/><text x="53.7496%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="53.4996%" y="181" width="0.0805%" height="15" fill="rgb(222,198,4)" fg:x="665" fg:w="1"/><text x="53.7496%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (15 samples, 1.21%)</title><rect x="52.5342%" y="341" width="1.2068%" height="15" fill="rgb(246,170,27)" fg:x="653" fg:w="15"/><text x="52.7842%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (15 samples, 1.21%)</title><rect x="52.5342%" y="325" width="1.2068%" height="15" fill="rgb(229,17,28)" fg:x="653" fg:w="15"/><text x="52.7842%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (14 samples, 1.13%)</title><rect x="52.6146%" y="309" width="1.1263%" height="15" fill="rgb(233,198,48)" fg:x="654" fg:w="14"/><text x="52.8646%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (14 samples, 1.13%)</title><rect x="52.6146%" y="293" width="1.1263%" height="15" fill="rgb(238,103,23)" fg:x="654" fg:w="14"/><text x="52.8646%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="53.5800%" y="277" width="0.1609%" height="15" fill="rgb(206,91,41)" fg:x="666" fg:w="2"/><text x="53.8300%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="53.5800%" y="261" width="0.1609%" height="15" fill="rgb(227,34,25)" fg:x="666" fg:w="2"/><text x="53.8300%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6605%" y="245" width="0.0805%" height="15" fill="rgb(210,110,44)" fg:x="667" fg:w="1"/><text x="53.9105%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="53.7409%" y="293" width="0.1609%" height="15" fill="rgb(216,189,8)" fg:x="668" fg:w="2"/><text x="53.9909%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="53.8214%" y="277" width="0.0805%" height="15" fill="rgb(234,9,46)" fg:x="669" fg:w="1"/><text x="54.0714%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="53.9019%" y="293" width="0.1609%" height="15" fill="rgb(251,200,5)" fg:x="670" fg:w="2"/><text x="54.1519%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.9823%" y="277" width="0.0805%" height="15" fill="rgb(238,165,37)" fg:x="671" fg:w="1"/><text x="54.2323%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="53.9823%" y="261" width="0.0805%" height="15" fill="rgb(232,77,38)" fg:x="671" fg:w="1"/><text x="54.2323%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.1432%" y="261" width="0.1609%" height="15" fill="rgb(253,179,33)" fg:x="673" fg:w="2"/><text x="54.3932%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.2237%" y="245" width="0.0805%" height="15" fill="rgb(240,13,35)" fg:x="674" fg:w="1"/><text x="54.4737%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3846%" y="229" width="0.0805%" height="15" fill="rgb(242,150,49)" fg:x="676" fg:w="1"/><text x="54.6346%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.3846%" y="213" width="0.0805%" height="15" fill="rgb(237,176,28)" fg:x="676" fg:w="1"/><text x="54.6346%" y="223.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="54.3846%" y="197" width="0.0805%" height="15" fill="rgb(214,176,33)" fg:x="676" fg:w="1"/><text x="54.6346%" y="207.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="54.4650%" y="197" width="0.1609%" height="15" fill="rgb(214,25,12)" fg:x="677" fg:w="2"/><text x="54.7150%" y="207.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.5455%" y="181" width="0.0805%" height="15" fill="rgb(238,190,20)" fg:x="678" fg:w="1"/><text x="54.7955%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6259%" y="197" width="0.0805%" height="15" fill="rgb(208,11,19)" fg:x="679" fg:w="1"/><text x="54.8759%" y="207.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6259%" y="181" width="0.0805%" height="15" fill="rgb(239,90,4)" fg:x="679" fg:w="1"/><text x="54.8759%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.6259%" y="165" width="0.0805%" height="15" fill="rgb(248,110,3)" fg:x="679" fg:w="1"/><text x="54.8759%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.7064%" y="181" width="0.0805%" height="15" fill="rgb(210,41,30)" fg:x="680" fg:w="1"/><text x="54.9564%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.7868%" y="165" width="0.0805%" height="15" fill="rgb(239,36,8)" fg:x="681" fg:w="1"/><text x="55.0368%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.7868%" y="149" width="0.0805%" height="15" fill="rgb(237,201,47)" fg:x="681" fg:w="1"/><text x="55.0368%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="54.7868%" y="181" width="0.1609%" height="15" fill="rgb(224,140,29)" fg:x="681" fg:w="2"/><text x="55.0368%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="54.8673%" y="165" width="0.0805%" height="15" fill="rgb(231,209,17)" fg:x="682" fg:w="1"/><text x="55.1173%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (41 samples, 3.30%)</title><rect x="51.7297%" y="453" width="3.2985%" height="15" fill="rgb(249,196,1)" fg:x="643" fg:w="41"/><text x="51.9797%" y="463.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (40 samples, 3.22%)</title><rect x="51.8101%" y="437" width="3.2180%" height="15" fill="rgb(223,207,51)" fg:x="644" fg:w="40"/><text x="52.0601%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 3.14%)</title><rect x="51.8906%" y="421" width="3.1376%" height="15" fill="rgb(210,14,40)" fg:x="645" fg:w="39"/><text x="52.1406%" y="431.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (38 samples, 3.06%)</title><rect x="51.9710%" y="405" width="3.0571%" height="15" fill="rgb(250,20,52)" fg:x="646" fg:w="38"/><text x="52.2210%" y="415.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (37 samples, 2.98%)</title><rect x="52.0515%" y="389" width="2.9767%" height="15" fill="rgb(241,46,11)" fg:x="647" fg:w="37"/><text x="52.3015%" y="399.50">&lt;en..</text></g><g><title>engine::internal::Entities::prepare_entity (36 samples, 2.90%)</title><rect x="52.1319%" y="373" width="2.8962%" height="15" fill="rgb(219,105,5)" fg:x="648" fg:w="36"/><text x="52.3819%" y="383.50">en..</text></g><g><title>kernel::model::deserialize_entity (31 samples, 2.49%)</title><rect x="52.5342%" y="357" width="2.4940%" height="15" fill="rgb(252,77,35)" fg:x="653" fg:w="31"/><text x="52.7842%" y="367.50">ke..</text></g><g><title>serde_json::de::from_trait (16 samples, 1.29%)</title><rect x="53.7409%" y="341" width="1.2872%" height="15" fill="rgb(243,119,2)" fg:x="668" fg:w="16"/><text x="53.9909%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (16 samples, 1.29%)</title><rect x="53.7409%" y="325" width="1.2872%" height="15" fill="rgb(206,82,28)" fg:x="668" fg:w="16"/><text x="53.9909%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (16 samples, 1.29%)</title><rect x="53.7409%" y="309" width="1.2872%" height="15" fill="rgb(227,120,12)" fg:x="668" fg:w="16"/><text x="53.9909%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (12 samples, 0.97%)</title><rect x="54.0628%" y="293" width="0.9654%" height="15" fill="rgb(229,134,41)" fg:x="672" fg:w="12"/><text x="54.3128%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.88%)</title><rect x="54.1432%" y="277" width="0.8850%" height="15" fill="rgb(239,96,32)" fg:x="673" fg:w="11"/><text x="54.3932%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.72%)</title><rect x="54.3041%" y="261" width="0.7241%" height="15" fill="rgb(225,46,27)" fg:x="675" fg:w="9"/><text x="54.5541%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.72%)</title><rect x="54.3041%" y="245" width="0.7241%" height="15" fill="rgb(215,168,2)" fg:x="675" fg:w="9"/><text x="54.5541%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="54.4650%" y="229" width="0.5632%" height="15" fill="rgb(207,170,52)" fg:x="677" fg:w="7"/><text x="54.7150%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="54.4650%" y="213" width="0.5632%" height="15" fill="rgb(237,198,36)" fg:x="677" fg:w="7"/><text x="54.7150%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="54.7064%" y="197" width="0.3218%" height="15" fill="rgb(213,27,14)" fg:x="680" fg:w="4"/><text x="54.9564%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9477%" y="181" width="0.0805%" height="15" fill="rgb(218,77,5)" fg:x="683" fg:w="1"/><text x="55.1977%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.0282%" y="453" width="0.0805%" height="15" fill="rgb(230,219,39)" fg:x="684" fg:w="1"/><text x="55.2782%" y="463.50"></text></g><g><title>kernel::session::get_my_session (2 samples, 0.16%)</title><rect x="55.1086%" y="453" width="0.1609%" height="15" fill="rgb(245,177,7)" fg:x="685" fg:w="2"/><text x="55.3586%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.4304%" y="421" width="0.0805%" height="15" fill="rgb(246,44,46)" fg:x="689" fg:w="1"/><text x="55.6804%" y="431.50"></text></g><g><title>plugins_core::tools::get_contained_keys (60 samples, 4.83%)</title><rect x="50.7643%" y="501" width="4.8270%" height="15" fill="rgb(207,173,15)" fg:x="631" fg:w="60"/><text x="51.0143%" y="511.50">plugin..</text></g><g><title>kernel::model::entry::Entry::scope (57 samples, 4.59%)</title><rect x="51.0056%" y="485" width="4.5857%" height="15" fill="rgb(245,170,50)" fg:x="634" fg:w="57"/><text x="51.2556%" y="495.50">kerne..</text></g><g><title>kernel::model::Entity::load_scope (56 samples, 4.51%)</title><rect x="51.0861%" y="469" width="4.5052%" height="15" fill="rgb(233,156,21)" fg:x="635" fg:w="56"/><text x="51.3361%" y="479.50">kerne..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="55.2695%" y="453" width="0.3218%" height="15" fill="rgb(253,146,27)" fg:x="687" fg:w="4"/><text x="55.5195%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="55.2695%" y="437" width="0.3218%" height="15" fill="rgb(247,66,29)" fg:x="687" fg:w="4"/><text x="55.5195%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.5109%" y="421" width="0.0805%" height="15" fill="rgb(218,207,26)" fg:x="690" fg:w="1"/><text x="55.7609%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="55.5109%" y="405" width="0.0805%" height="15" fill="rgb(234,93,26)" fg:x="690" fg:w="1"/><text x="55.7609%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="55.5109%" y="389" width="0.0805%" height="15" fill="rgb(214,75,48)" fg:x="690" fg:w="1"/><text x="55.7609%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.5109%" y="373" width="0.0805%" height="15" fill="rgb(229,119,22)" fg:x="690" fg:w="1"/><text x="55.7609%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.5109%" y="357" width="0.0805%" height="15" fill="rgb(226,153,19)" fg:x="690" fg:w="1"/><text x="55.7609%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (2 samples, 0.16%)</title><rect x="55.5913%" y="485" width="0.1609%" height="15" fill="rgb(220,204,36)" fg:x="691" fg:w="2"/><text x="55.8413%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="55.6718%" y="469" width="0.0805%" height="15" fill="rgb(253,181,43)" fg:x="692" fg:w="1"/><text x="55.9218%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8327%" y="437" width="0.0805%" height="15" fill="rgb(211,41,51)" fg:x="694" fg:w="1"/><text x="56.0827%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.8327%" y="421" width="0.0805%" height="15" fill="rgb(207,215,0)" fg:x="694" fg:w="1"/><text x="56.0827%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.8327%" y="405" width="0.0805%" height="15" fill="rgb(212,153,10)" fg:x="694" fg:w="1"/><text x="56.0827%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.8327%" y="389" width="0.0805%" height="15" fill="rgb(251,171,36)" fg:x="694" fg:w="1"/><text x="56.0827%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.8327%" y="373" width="0.0805%" height="15" fill="rgb(225,219,41)" fg:x="694" fg:w="1"/><text x="56.0827%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.8327%" y="357" width="0.0805%" height="15" fill="rgb(208,200,1)" fg:x="694" fg:w="1"/><text x="56.0827%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.8327%" y="341" width="0.0805%" height="15" fill="rgb(206,75,47)" fg:x="694" fg:w="1"/><text x="56.0827%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.8327%" y="325" width="0.0805%" height="15" fill="rgb(248,3,16)" fg:x="694" fg:w="1"/><text x="56.0827%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.8327%" y="309" width="0.0805%" height="15" fill="rgb(242,157,36)" fg:x="694" fg:w="1"/><text x="56.0827%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.8327%" y="293" width="0.0805%" height="15" fill="rgb(215,175,11)" fg:x="694" fg:w="1"/><text x="56.0827%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.8327%" y="277" width="0.0805%" height="15" fill="rgb(252,222,22)" fg:x="694" fg:w="1"/><text x="56.0827%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.8327%" y="261" width="0.0805%" height="15" fill="rgb(250,121,35)" fg:x="694" fg:w="1"/><text x="56.0827%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.8327%" y="453" width="0.1609%" height="15" fill="rgb(233,120,49)" fg:x="694" fg:w="2"/><text x="56.0827%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9131%" y="437" width="0.0805%" height="15" fill="rgb(205,201,14)" fg:x="695" fg:w="1"/><text x="56.1631%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.9131%" y="421" width="0.0805%" height="15" fill="rgb(219,58,45)" fg:x="695" fg:w="1"/><text x="56.1631%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9131%" y="405" width="0.0805%" height="15" fill="rgb(251,65,12)" fg:x="695" fg:w="1"/><text x="56.1631%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.9131%" y="389" width="0.0805%" height="15" fill="rgb(224,47,31)" fg:x="695" fg:w="1"/><text x="56.1631%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.9131%" y="373" width="0.0805%" height="15" fill="rgb(233,74,26)" fg:x="695" fg:w="1"/><text x="56.1631%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.9131%" y="357" width="0.0805%" height="15" fill="rgb(231,211,31)" fg:x="695" fg:w="1"/><text x="56.1631%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.9131%" y="341" width="0.0805%" height="15" fill="rgb(239,167,5)" fg:x="695" fg:w="1"/><text x="56.1631%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9131%" y="325" width="0.0805%" height="15" fill="rgb(241,85,0)" fg:x="695" fg:w="1"/><text x="56.1631%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.9131%" y="309" width="0.0805%" height="15" fill="rgb(229,130,21)" fg:x="695" fg:w="1"/><text x="56.1631%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.9131%" y="293" width="0.0805%" height="15" fill="rgb(254,84,49)" fg:x="695" fg:w="1"/><text x="56.1631%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.9131%" y="277" width="0.0805%" height="15" fill="rgb(235,85,21)" fg:x="695" fg:w="1"/><text x="56.1631%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.9131%" y="261" width="0.0805%" height="15" fill="rgb(246,128,52)" fg:x="695" fg:w="1"/><text x="56.1631%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.9131%" y="245" width="0.0805%" height="15" fill="rgb(243,114,49)" fg:x="695" fg:w="1"/><text x="56.1631%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.9131%" y="229" width="0.0805%" height="15" fill="rgb(240,224,22)" fg:x="695" fg:w="1"/><text x="56.1631%" y="239.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="55.9936%" y="453" width="0.0805%" height="15" fill="rgb(247,201,52)" fg:x="696" fg:w="1"/><text x="56.2436%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9936%" y="437" width="0.0805%" height="15" fill="rgb(231,70,45)" fg:x="696" fg:w="1"/><text x="56.2436%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (114 samples, 9.17%)</title><rect x="47.1440%" y="533" width="9.1714%" height="15" fill="rgb(217,215,20)" fg:x="586" fg:w="114"/><text x="47.3940%" y="543.50">&lt;alloc::vec::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (113 samples, 9.09%)</title><rect x="47.2245%" y="517" width="9.0909%" height="15" fill="rgb(226,170,30)" fg:x="587" fg:w="113"/><text x="47.4745%" y="527.50">&lt;core::iter::..</text></g><g><title>plugins_core::tools::get_occupant_keys (9 samples, 0.72%)</title><rect x="55.5913%" y="501" width="0.7241%" height="15" fill="rgb(220,190,43)" fg:x="691" fg:w="9"/><text x="55.8413%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="55.7522%" y="485" width="0.5632%" height="15" fill="rgb(218,20,18)" fg:x="693" fg:w="7"/><text x="56.0022%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (6 samples, 0.48%)</title><rect x="55.8327%" y="469" width="0.4827%" height="15" fill="rgb(245,37,26)" fg:x="694" fg:w="6"/><text x="56.0827%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="56.0740%" y="453" width="0.2414%" height="15" fill="rgb(241,127,29)" fg:x="697" fg:w="3"/><text x="56.3240%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.0740%" y="437" width="0.2414%" height="15" fill="rgb(241,33,26)" fg:x="697" fg:w="3"/><text x="56.3240%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="56.1545%" y="421" width="0.1609%" height="15" fill="rgb(220,106,21)" fg:x="698" fg:w="2"/><text x="56.4045%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="56.1545%" y="405" width="0.1609%" height="15" fill="rgb(225,125,35)" fg:x="698" fg:w="2"/><text x="56.4045%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="56.1545%" y="389" width="0.1609%" height="15" fill="rgb(248,80,22)" fg:x="698" fg:w="2"/><text x="56.4045%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.1545%" y="373" width="0.1609%" height="15" fill="rgb(231,117,39)" fg:x="698" fg:w="2"/><text x="56.4045%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.1545%" y="357" width="0.1609%" height="15" fill="rgb(239,183,16)" fg:x="698" fg:w="2"/><text x="56.4045%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="56.2349%" y="341" width="0.0805%" height="15" fill="rgb(221,61,19)" fg:x="699" fg:w="1"/><text x="56.4849%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="56.7981%" y="485" width="0.4023%" height="15" fill="rgb(239,196,44)" fg:x="706" fg:w="5"/><text x="57.0481%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="56.7981%" y="469" width="0.4023%" height="15" fill="rgb(206,113,19)" fg:x="706" fg:w="5"/><text x="57.0481%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="56.7981%" y="453" width="0.4023%" height="15" fill="rgb(245,114,12)" fg:x="706" fg:w="5"/><text x="57.0481%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="56.7981%" y="437" width="0.4023%" height="15" fill="rgb(247,89,39)" fg:x="706" fg:w="5"/><text x="57.0481%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="56.7981%" y="421" width="0.4023%" height="15" fill="rgb(213,85,14)" fg:x="706" fg:w="5"/><text x="57.0481%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="56.7981%" y="405" width="0.4023%" height="15" fill="rgb(249,206,33)" fg:x="706" fg:w="5"/><text x="57.0481%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.40%)</title><rect x="56.7981%" y="389" width="0.4023%" height="15" fill="rgb(235,167,47)" fg:x="706" fg:w="5"/><text x="57.0481%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.40%)</title><rect x="56.7981%" y="373" width="0.4023%" height="15" fill="rgb(217,177,16)" fg:x="706" fg:w="5"/><text x="57.0481%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.32%)</title><rect x="56.8785%" y="357" width="0.3218%" height="15" fill="rgb(250,228,29)" fg:x="707" fg:w="4"/><text x="57.1285%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.32%)</title><rect x="56.8785%" y="341" width="0.3218%" height="15" fill="rgb(216,195,42)" fg:x="707" fg:w="4"/><text x="57.1285%" y="351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.32%)</title><rect x="56.8785%" y="325" width="0.3218%" height="15" fill="rgb(232,192,32)" fg:x="707" fg:w="4"/><text x="57.1285%" y="335.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="56.8785%" y="309" width="0.3218%" height="15" fill="rgb(211,8,47)" fg:x="707" fg:w="4"/><text x="57.1285%" y="319.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="57.2003%" y="469" width="0.1609%" height="15" fill="rgb(251,201,9)" fg:x="711" fg:w="2"/><text x="57.4503%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="57.4417%" y="165" width="0.0805%" height="15" fill="rgb(206,185,47)" fg:x="714" fg:w="1"/><text x="57.6917%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="57.4417%" y="149" width="0.0805%" height="15" fill="rgb(245,54,32)" fg:x="714" fg:w="1"/><text x="57.6917%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="57.4417%" y="133" width="0.0805%" height="15" fill="rgb(208,1,8)" fg:x="714" fg:w="1"/><text x="57.6917%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.4417%" y="117" width="0.0805%" height="15" fill="rgb(228,57,24)" fg:x="714" fg:w="1"/><text x="57.6917%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="57.4417%" y="341" width="0.1609%" height="15" fill="rgb(251,24,8)" fg:x="714" fg:w="2"/><text x="57.6917%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="57.4417%" y="325" width="0.1609%" height="15" fill="rgb(236,196,50)" fg:x="714" fg:w="2"/><text x="57.6917%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="57.4417%" y="309" width="0.1609%" height="15" fill="rgb(246,222,29)" fg:x="714" fg:w="2"/><text x="57.6917%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="57.4417%" y="293" width="0.1609%" height="15" fill="rgb(211,34,40)" fg:x="714" fg:w="2"/><text x="57.6917%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="57.4417%" y="277" width="0.1609%" height="15" fill="rgb(210,66,51)" fg:x="714" fg:w="2"/><text x="57.6917%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="57.4417%" y="261" width="0.1609%" height="15" fill="rgb(250,56,43)" fg:x="714" fg:w="2"/><text x="57.6917%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="57.4417%" y="245" width="0.1609%" height="15" fill="rgb(240,111,50)" fg:x="714" fg:w="2"/><text x="57.6917%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="57.4417%" y="229" width="0.1609%" height="15" fill="rgb(209,117,13)" fg:x="714" fg:w="2"/><text x="57.6917%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="57.4417%" y="213" width="0.1609%" height="15" fill="rgb(232,164,45)" fg:x="714" fg:w="2"/><text x="57.6917%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="57.4417%" y="197" width="0.1609%" height="15" fill="rgb(205,69,32)" fg:x="714" fg:w="2"/><text x="57.6917%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="57.4417%" y="181" width="0.1609%" height="15" fill="rgb(240,147,45)" fg:x="714" fg:w="2"/><text x="57.6917%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5221%" y="165" width="0.0805%" height="15" fill="rgb(221,94,48)" fg:x="715" fg:w="1"/><text x="57.7721%" y="175.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="57.6026%" y="325" width="0.0805%" height="15" fill="rgb(249,209,17)" fg:x="716" fg:w="1"/><text x="57.8526%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="57.6026%" y="309" width="0.0805%" height="15" fill="rgb(228,57,28)" fg:x="716" fg:w="1"/><text x="57.8526%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="57.6026%" y="293" width="0.0805%" height="15" fill="rgb(250,133,26)" fg:x="716" fg:w="1"/><text x="57.8526%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="57.6026%" y="277" width="0.0805%" height="15" fill="rgb(254,15,16)" fg:x="716" fg:w="1"/><text x="57.8526%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.6026%" y="261" width="0.0805%" height="15" fill="rgb(209,147,42)" fg:x="716" fg:w="1"/><text x="57.8526%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.6026%" y="245" width="0.0805%" height="15" fill="rgb(208,5,29)" fg:x="716" fg:w="1"/><text x="57.8526%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.6026%" y="229" width="0.0805%" height="15" fill="rgb(250,73,31)" fg:x="716" fg:w="1"/><text x="57.8526%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.6026%" y="213" width="0.0805%" height="15" fill="rgb(238,45,10)" fg:x="716" fg:w="1"/><text x="57.8526%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.6026%" y="197" width="0.0805%" height="15" fill="rgb(214,104,5)" fg:x="716" fg:w="1"/><text x="57.8526%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.6026%" y="181" width="0.0805%" height="15" fill="rgb(242,217,19)" fg:x="716" fg:w="1"/><text x="57.8526%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.6026%" y="165" width="0.0805%" height="15" fill="rgb(246,113,27)" fg:x="716" fg:w="1"/><text x="57.8526%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.6026%" y="149" width="0.0805%" height="15" fill="rgb(221,34,27)" fg:x="716" fg:w="1"/><text x="57.8526%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.6026%" y="133" width="0.0805%" height="15" fill="rgb(246,109,6)" fg:x="716" fg:w="1"/><text x="57.8526%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="57.6026%" y="117" width="0.0805%" height="15" fill="rgb(217,12,25)" fg:x="716" fg:w="1"/><text x="57.8526%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.6026%" y="101" width="0.0805%" height="15" fill="rgb(250,195,5)" fg:x="716" fg:w="1"/><text x="57.8526%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="57.6026%" y="85" width="0.0805%" height="15" fill="rgb(244,140,45)" fg:x="716" fg:w="1"/><text x="57.8526%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="57.6026%" y="69" width="0.0805%" height="15" fill="rgb(230,64,14)" fg:x="716" fg:w="1"/><text x="57.8526%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="57.6026%" y="53" width="0.0805%" height="15" fill="rgb(206,27,27)" fg:x="716" fg:w="1"/><text x="57.8526%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.6026%" y="37" width="0.0805%" height="15" fill="rgb(230,14,50)" fg:x="716" fg:w="1"/><text x="57.8526%" y="47.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.56%)</title><rect x="57.2003%" y="485" width="0.5632%" height="15" fill="rgb(237,172,14)" fg:x="711" fg:w="7"/><text x="57.4503%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="57.3612%" y="469" width="0.4023%" height="15" fill="rgb(209,25,21)" fg:x="713" fg:w="5"/><text x="57.6112%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="57.3612%" y="453" width="0.4023%" height="15" fill="rgb(248,148,22)" fg:x="713" fg:w="5"/><text x="57.6112%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="57.3612%" y="437" width="0.4023%" height="15" fill="rgb(234,100,22)" fg:x="713" fg:w="5"/><text x="57.6112%" y="447.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="57.3612%" y="421" width="0.4023%" height="15" fill="rgb(210,20,30)" fg:x="713" fg:w="5"/><text x="57.6112%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="57.4417%" y="405" width="0.3218%" height="15" fill="rgb(232,58,0)" fg:x="714" fg:w="4"/><text x="57.6917%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.32%)</title><rect x="57.4417%" y="389" width="0.3218%" height="15" fill="rgb(221,68,13)" fg:x="714" fg:w="4"/><text x="57.6917%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.32%)</title><rect x="57.4417%" y="373" width="0.3218%" height="15" fill="rgb(231,194,11)" fg:x="714" fg:w="4"/><text x="57.6917%" y="383.50"></text></g><g><title>core::fmt::write (4 samples, 0.32%)</title><rect x="57.4417%" y="357" width="0.3218%" height="15" fill="rgb(235,51,41)" fg:x="714" fg:w="4"/><text x="57.6917%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="57.6026%" y="341" width="0.1609%" height="15" fill="rgb(240,50,32)" fg:x="716" fg:w="2"/><text x="57.8526%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.6830%" y="325" width="0.0805%" height="15" fill="rgb(240,185,36)" fg:x="717" fg:w="1"/><text x="57.9330%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="57.6830%" y="309" width="0.0805%" height="15" fill="rgb(211,168,15)" fg:x="717" fg:w="1"/><text x="57.9330%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="57.6830%" y="293" width="0.0805%" height="15" fill="rgb(221,70,0)" fg:x="717" fg:w="1"/><text x="57.9330%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="57.6830%" y="277" width="0.0805%" height="15" fill="rgb(205,21,33)" fg:x="717" fg:w="1"/><text x="57.9330%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="57.6830%" y="261" width="0.0805%" height="15" fill="rgb(225,106,10)" fg:x="717" fg:w="1"/><text x="57.9330%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="57.6830%" y="245" width="0.0805%" height="15" fill="rgb(236,200,50)" fg:x="717" fg:w="1"/><text x="57.9330%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.6830%" y="229" width="0.0805%" height="15" fill="rgb(249,93,23)" fg:x="717" fg:w="1"/><text x="57.9330%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="57.6830%" y="213" width="0.0805%" height="15" fill="rgb(244,115,35)" fg:x="717" fg:w="1"/><text x="57.9330%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="57.6830%" y="197" width="0.0805%" height="15" fill="rgb(231,129,47)" fg:x="717" fg:w="1"/><text x="57.9330%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="57.6830%" y="181" width="0.0805%" height="15" fill="rgb(225,160,50)" fg:x="717" fg:w="1"/><text x="57.9330%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="57.6830%" y="165" width="0.0805%" height="15" fill="rgb(218,135,23)" fg:x="717" fg:w="1"/><text x="57.9330%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="57.6830%" y="149" width="0.0805%" height="15" fill="rgb(227,119,14)" fg:x="717" fg:w="1"/><text x="57.9330%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="57.6830%" y="133" width="0.0805%" height="15" fill="rgb(242,138,13)" fg:x="717" fg:w="1"/><text x="57.9330%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="57.6830%" y="117" width="0.0805%" height="15" fill="rgb(215,11,16)" fg:x="717" fg:w="1"/><text x="57.9330%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="57.6830%" y="101" width="0.0805%" height="15" fill="rgb(234,170,50)" fg:x="717" fg:w="1"/><text x="57.9330%" y="111.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="58.9702%" y="373" width="0.2414%" height="15" fill="rgb(233,34,20)" fg:x="733" fg:w="3"/><text x="59.2202%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.1311%" y="357" width="0.0805%" height="15" fill="rgb(237,100,45)" fg:x="735" fg:w="1"/><text x="59.3811%" y="367.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (2 samples, 0.16%)</title><rect x="60.2574%" y="229" width="0.1609%" height="15" fill="rgb(231,184,36)" fg:x="749" fg:w="2"/><text x="60.5074%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.40%)</title><rect x="60.0965%" y="245" width="0.4023%" height="15" fill="rgb(252,93,2)" fg:x="747" fg:w="5"/><text x="60.3465%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.4183%" y="229" width="0.0805%" height="15" fill="rgb(248,176,47)" fg:x="751" fg:w="1"/><text x="60.6683%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.4183%" y="213" width="0.0805%" height="15" fill="rgb(249,125,23)" fg:x="751" fg:w="1"/><text x="60.6683%" y="223.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.72%)</title><rect x="60.0965%" y="277" width="0.7241%" height="15" fill="rgb(239,67,42)" fg:x="747" fg:w="9"/><text x="60.3465%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="60.0965%" y="261" width="0.7241%" height="15" fill="rgb(244,162,4)" fg:x="747" fg:w="9"/><text x="60.3465%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="60.4988%" y="245" width="0.3218%" height="15" fill="rgb(214,150,38)" fg:x="752" fg:w="4"/><text x="60.7488%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.5792%" y="229" width="0.2414%" height="15" fill="rgb(228,211,28)" fg:x="753" fg:w="3"/><text x="60.8292%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="60.8206%" y="277" width="0.4023%" height="15" fill="rgb(212,98,48)" fg:x="756" fg:w="5"/><text x="61.0706%" y="287.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="61.0619%" y="261" width="0.1609%" height="15" fill="rgb(213,45,13)" fg:x="759" fg:w="2"/><text x="61.3119%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.40%)</title><rect x="61.4642%" y="261" width="0.4023%" height="15" fill="rgb(218,35,29)" fg:x="764" fg:w="5"/><text x="61.7142%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.24%)</title><rect x="61.6251%" y="245" width="0.2414%" height="15" fill="rgb(244,13,3)" fg:x="766" fg:w="3"/><text x="61.8751%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 2.49%)</title><rect x="59.6943%" y="293" width="2.4940%" height="15" fill="rgb(235,170,19)" fg:x="742" fg:w="31"/><text x="59.9443%" y="303.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.97%)</title><rect x="61.2228%" y="277" width="0.9654%" height="15" fill="rgb(233,193,43)" fg:x="761" fg:w="12"/><text x="61.4728%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="61.8665%" y="261" width="0.3218%" height="15" fill="rgb(228,223,20)" fg:x="769" fg:w="4"/><text x="62.1165%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2687%" y="277" width="0.0805%" height="15" fill="rgb(208,85,54)" fg:x="774" fg:w="1"/><text x="62.5187%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (34 samples, 2.74%)</title><rect x="59.6943%" y="309" width="2.7353%" height="15" fill="rgb(254,14,45)" fg:x="742" fg:w="34"/><text x="59.9443%" y="319.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="62.1883%" y="293" width="0.2414%" height="15" fill="rgb(247,99,29)" fg:x="773" fg:w="3"/><text x="62.4383%" y="303.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="62.3492%" y="277" width="0.0805%" height="15" fill="rgb(225,180,54)" fg:x="775" fg:w="1"/><text x="62.5992%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 3.30%)</title><rect x="59.4529%" y="325" width="3.2985%" height="15" fill="rgb(239,88,43)" fg:x="739" fg:w="41"/><text x="59.7029%" y="335.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="62.4296%" y="309" width="0.3218%" height="15" fill="rgb(209,47,11)" fg:x="776" fg:w="4"/><text x="62.6796%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="62.4296%" y="293" width="0.3218%" height="15" fill="rgb(219,179,23)" fg:x="776" fg:w="4"/><text x="62.6796%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (4 samples, 0.32%)</title><rect x="62.4296%" y="277" width="0.3218%" height="15" fill="rgb(213,183,19)" fg:x="776" fg:w="4"/><text x="62.6796%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="62.4296%" y="261" width="0.3218%" height="15" fill="rgb(210,11,9)" fg:x="776" fg:w="4"/><text x="62.6796%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.32%)</title><rect x="62.4296%" y="245" width="0.3218%" height="15" fill="rgb(239,194,16)" fg:x="776" fg:w="4"/><text x="62.6796%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.5905%" y="229" width="0.1609%" height="15" fill="rgb(246,23,50)" fg:x="778" fg:w="2"/><text x="62.8405%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.6710%" y="213" width="0.0805%" height="15" fill="rgb(245,10,41)" fg:x="779" fg:w="1"/><text x="62.9210%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="62.7514%" y="325" width="0.1609%" height="15" fill="rgb(228,43,24)" fg:x="780" fg:w="2"/><text x="63.0014%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.8319%" y="309" width="0.0805%" height="15" fill="rgb(220,151,0)" fg:x="781" fg:w="1"/><text x="63.0819%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="62.9928%" y="309" width="0.3218%" height="15" fill="rgb(232,219,10)" fg:x="783" fg:w="4"/><text x="63.2428%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.16%)</title><rect x="63.1537%" y="293" width="0.1609%" height="15" fill="rgb(227,217,48)" fg:x="785" fg:w="2"/><text x="63.4037%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (53 samples, 4.26%)</title><rect x="59.2920%" y="341" width="4.2639%" height="15" fill="rgb(210,66,35)" fg:x="737" fg:w="53"/><text x="59.5420%" y="351.50">&lt;core..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="62.9123%" y="325" width="0.6436%" height="15" fill="rgb(254,6,7)" fg:x="782" fg:w="8"/><text x="63.1623%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="63.3146%" y="309" width="0.2414%" height="15" fill="rgb(235,222,42)" fg:x="787" fg:w="3"/><text x="63.5646%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (57 samples, 4.59%)</title><rect x="59.2116%" y="373" width="4.5857%" height="15" fill="rgb(245,126,5)" fg:x="736" fg:w="57"/><text x="59.4616%" y="383.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (57 samples, 4.59%)</title><rect x="59.2116%" y="357" width="4.5857%" height="15" fill="rgb(215,73,17)" fg:x="736" fg:w="57"/><text x="59.4616%" y="367.50">&lt;std:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="63.5559%" y="341" width="0.2414%" height="15" fill="rgb(219,198,52)" fg:x="790" fg:w="3"/><text x="63.8059%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="63.6364%" y="325" width="0.1609%" height="15" fill="rgb(217,159,18)" fg:x="791" fg:w="2"/><text x="63.8864%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="63.7973%" y="373" width="0.2414%" height="15" fill="rgb(212,177,18)" fg:x="793" fg:w="3"/><text x="64.0473%" y="383.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="63.7973%" y="357" width="0.2414%" height="15" fill="rgb(241,10,11)" fg:x="793" fg:w="3"/><text x="64.0473%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="64.3604%" y="357" width="0.2414%" height="15" fill="rgb(232,114,35)" fg:x="800" fg:w="3"/><text x="64.6104%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="64.5213%" y="341" width="0.0805%" height="15" fill="rgb(238,222,8)" fg:x="802" fg:w="1"/><text x="64.7713%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (77 samples, 6.19%)</title><rect x="58.4875%" y="389" width="6.1947%" height="15" fill="rgb(251,153,44)" fg:x="727" fg:w="77"/><text x="58.7375%" y="399.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="64.0386%" y="373" width="0.6436%" height="15" fill="rgb(210,140,51)" fg:x="796" fg:w="8"/><text x="64.2886%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6018%" y="357" width="0.0805%" height="15" fill="rgb(222,63,0)" fg:x="803" fg:w="1"/><text x="64.8518%" y="367.50"></text></g><g><title>__libc_malloc (10 samples, 0.80%)</title><rect x="64.7627%" y="373" width="0.8045%" height="15" fill="rgb(240,18,40)" fg:x="805" fg:w="10"/><text x="65.0127%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (92 samples, 7.40%)</title><rect x="58.2462%" y="421" width="7.4014%" height="15" fill="rgb(237,88,16)" fg:x="724" fg:w="92"/><text x="58.4962%" y="431.50">&lt;rpc_proto..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (90 samples, 7.24%)</title><rect x="58.4071%" y="405" width="7.2405%" height="15" fill="rgb(251,117,13)" fg:x="726" fg:w="90"/><text x="58.6571%" y="415.50">&lt;std::coll..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.97%)</title><rect x="64.6822%" y="389" width="0.9654%" height="15" fill="rgb(251,228,8)" fg:x="804" fg:w="12"/><text x="64.9322%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="65.5672%" y="373" width="0.0805%" height="15" fill="rgb(205,107,49)" fg:x="815" fg:w="1"/><text x="65.8172%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="65.6476%" y="421" width="0.1609%" height="15" fill="rgb(238,72,41)" fg:x="816" fg:w="2"/><text x="65.8976%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.7281%" y="405" width="0.0805%" height="15" fill="rgb(248,183,52)" fg:x="817" fg:w="1"/><text x="65.9781%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.32%)</title><rect x="65.9694%" y="405" width="0.3218%" height="15" fill="rgb(215,58,20)" fg:x="820" fg:w="4"/><text x="66.2194%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="66.2108%" y="389" width="0.0805%" height="15" fill="rgb(209,49,13)" fg:x="823" fg:w="1"/><text x="66.4608%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (107 samples, 8.61%)</title><rect x="57.8439%" y="437" width="8.6082%" height="15" fill="rgb(208,113,17)" fg:x="719" fg:w="107"/><text x="58.0939%" y="447.50">&lt;core::iter:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="65.8085%" y="421" width="0.6436%" height="15" fill="rgb(208,14,22)" fg:x="818" fg:w="8"/><text x="66.0585%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="66.2912%" y="405" width="0.1609%" height="15" fill="rgb(222,95,2)" fg:x="824" fg:w="2"/><text x="66.5412%" y="415.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (116 samples, 9.33%)</title><rect x="57.7635%" y="469" width="9.3323%" height="15" fill="rgb(253,180,37)" fg:x="718" fg:w="116"/><text x="58.0135%" y="479.50">&lt;rpc_proto::J..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (116 samples, 9.33%)</title><rect x="57.7635%" y="453" width="9.3323%" height="15" fill="rgb(250,81,33)" fg:x="718" fg:w="116"/><text x="58.0135%" y="463.50">&lt;std::collect..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="66.4521%" y="437" width="0.6436%" height="15" fill="rgb(251,151,41)" fg:x="826" fg:w="8"/><text x="66.7021%" y="447.50"></text></g><g><title>__libc_malloc (5 samples, 0.40%)</title><rect x="66.6935%" y="421" width="0.4023%" height="15" fill="rgb(210,135,17)" fg:x="829" fg:w="5"/><text x="66.9435%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="67.0957%" y="437" width="0.0805%" height="15" fill="rgb(239,21,29)" fg:x="834" fg:w="1"/><text x="67.3457%" y="447.50"></text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="67.4980%" y="421" width="0.4827%" height="15" fill="rgb(231,215,16)" fg:x="839" fg:w="6"/><text x="67.7480%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.80%)</title><rect x="67.9807%" y="421" width="0.8045%" height="15" fill="rgb(239,151,54)" fg:x="845" fg:w="10"/><text x="68.2307%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="68.6243%" y="405" width="0.1609%" height="15" fill="rgb(222,122,38)" fg:x="853" fg:w="2"/><text x="68.8743%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="68.6243%" y="389" width="0.1609%" height="15" fill="rgb(243,128,1)" fg:x="853" fg:w="2"/><text x="68.8743%" y="399.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="68.7852%" y="421" width="0.0805%" height="15" fill="rgb(225,74,21)" fg:x="855" fg:w="1"/><text x="69.0352%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.0265%" y="389" width="0.0805%" height="15" fill="rgb(216,210,10)" fg:x="858" fg:w="1"/><text x="69.2765%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (4 samples, 0.32%)</title><rect x="68.8656%" y="421" width="0.3218%" height="15" fill="rgb(228,76,19)" fg:x="856" fg:w="4"/><text x="69.1156%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="68.8656%" y="405" width="0.3218%" height="15" fill="rgb(236,80,34)" fg:x="856" fg:w="4"/><text x="69.1156%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="69.1070%" y="389" width="0.0805%" height="15" fill="rgb(225,173,23)" fg:x="859" fg:w="1"/><text x="69.3570%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="69.1874%" y="421" width="0.0805%" height="15" fill="rgb(253,38,1)" fg:x="860" fg:w="1"/><text x="69.4374%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="69.1874%" y="405" width="0.0805%" height="15" fill="rgb(206,155,35)" fg:x="860" fg:w="1"/><text x="69.4374%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="69.5093%" y="389" width="0.1609%" height="15" fill="rgb(254,27,53)" fg:x="864" fg:w="2"/><text x="69.7593%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="69.2679%" y="421" width="0.4827%" height="15" fill="rgb(225,52,41)" fg:x="861" fg:w="6"/><text x="69.5179%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="69.4288%" y="405" width="0.3218%" height="15" fill="rgb(244,53,18)" fg:x="863" fg:w="4"/><text x="69.6788%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6702%" y="389" width="0.0805%" height="15" fill="rgb(254,206,48)" fg:x="866" fg:w="1"/><text x="69.9202%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6702%" y="373" width="0.0805%" height="15" fill="rgb(236,182,23)" fg:x="866" fg:w="1"/><text x="69.9202%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="69.6702%" y="357" width="0.0805%" height="15" fill="rgb(236,191,37)" fg:x="866" fg:w="1"/><text x="69.9202%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.9115%" y="389" width="0.1609%" height="15" fill="rgb(245,53,8)" fg:x="869" fg:w="2"/><text x="70.1615%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="69.9115%" y="373" width="0.1609%" height="15" fill="rgb(245,147,9)" fg:x="869" fg:w="2"/><text x="70.1615%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9920%" y="357" width="0.0805%" height="15" fill="rgb(218,24,48)" fg:x="870" fg:w="1"/><text x="70.2420%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.1529%" y="373" width="0.1609%" height="15" fill="rgb(254,23,9)" fg:x="872" fg:w="2"/><text x="70.4029%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.3138%" y="373" width="0.0805%" height="15" fill="rgb(244,105,9)" fg:x="874" fg:w="1"/><text x="70.5638%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="70.3942%" y="357" width="0.2414%" height="15" fill="rgb(212,142,22)" fg:x="875" fg:w="3"/><text x="70.6442%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.3942%" y="341" width="0.2414%" height="15" fill="rgb(221,114,49)" fg:x="875" fg:w="3"/><text x="70.6442%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="70.3942%" y="325" width="0.2414%" height="15" fill="rgb(223,210,25)" fg:x="875" fg:w="3"/><text x="70.6442%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="70.4747%" y="309" width="0.1609%" height="15" fill="rgb(235,162,44)" fg:x="876" fg:w="2"/><text x="70.7247%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7160%" y="341" width="0.0805%" height="15" fill="rgb(237,65,45)" fg:x="879" fg:w="1"/><text x="70.9660%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.7160%" y="325" width="0.0805%" height="15" fill="rgb(208,79,9)" fg:x="879" fg:w="1"/><text x="70.9660%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7160%" y="309" width="0.0805%" height="15" fill="rgb(215,228,8)" fg:x="879" fg:w="1"/><text x="70.9660%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="70.6356%" y="357" width="0.2414%" height="15" fill="rgb(205,185,17)" fg:x="878" fg:w="3"/><text x="70.8856%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="70.7965%" y="341" width="0.0805%" height="15" fill="rgb(213,62,36)" fg:x="880" fg:w="1"/><text x="71.0465%" y="351.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (17 samples, 1.37%)</title><rect x="69.7506%" y="421" width="1.3677%" height="15" fill="rgb(209,34,9)" fg:x="867" fg:w="17"/><text x="70.0006%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.21%)</title><rect x="69.9115%" y="405" width="1.2068%" height="15" fill="rgb(246,151,27)" fg:x="869" fg:w="15"/><text x="70.1615%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (13 samples, 1.05%)</title><rect x="70.0724%" y="389" width="1.0459%" height="15" fill="rgb(218,206,3)" fg:x="871" fg:w="13"/><text x="70.3224%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (9 samples, 0.72%)</title><rect x="70.3942%" y="373" width="0.7241%" height="15" fill="rgb(242,202,1)" fg:x="875" fg:w="9"/><text x="70.6442%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="70.8769%" y="357" width="0.2414%" height="15" fill="rgb(227,185,16)" fg:x="881" fg:w="3"/><text x="71.1269%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.1987%" y="389" width="0.0805%" height="15" fill="rgb(241,1,14)" fg:x="885" fg:w="1"/><text x="71.4487%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Version&gt;::serialize (3 samples, 0.24%)</title><rect x="71.1183%" y="421" width="0.2414%" height="15" fill="rgb(212,113,25)" fg:x="884" fg:w="3"/><text x="71.3683%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="71.1987%" y="405" width="0.1609%" height="15" fill="rgb(247,37,43)" fg:x="885" fg:w="2"/><text x="71.4487%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.2792%" y="389" width="0.0805%" height="15" fill="rgb(226,54,8)" fg:x="886" fg:w="1"/><text x="71.5292%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="71.6814%" y="405" width="0.0805%" height="15" fill="rgb(251,205,25)" fg:x="891" fg:w="1"/><text x="71.9314%" y="415.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="71.7619%" y="405" width="0.2414%" height="15" fill="rgb(246,87,35)" fg:x="892" fg:w="3"/><text x="72.0119%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0032%" y="405" width="0.0805%" height="15" fill="rgb(251,145,46)" fg:x="895" fg:w="1"/><text x="72.2532%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.0032%" y="389" width="0.0805%" height="15" fill="rgb(210,210,33)" fg:x="895" fg:w="1"/><text x="72.2532%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0032%" y="373" width="0.0805%" height="15" fill="rgb(221,151,11)" fg:x="895" fg:w="1"/><text x="72.2532%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.24%)</title><rect x="72.1641%" y="389" width="0.2414%" height="15" fill="rgb(208,160,28)" fg:x="897" fg:w="3"/><text x="72.4141%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="72.4055%" y="389" width="0.0805%" height="15" fill="rgb(243,69,29)" fg:x="900" fg:w="1"/><text x="72.6555%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="72.4859%" y="373" width="0.1609%" height="15" fill="rgb(224,144,4)" fg:x="901" fg:w="2"/><text x="72.7359%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5664%" y="357" width="0.0805%" height="15" fill="rgb(211,140,38)" fg:x="902" fg:w="1"/><text x="72.8164%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="72.5664%" y="341" width="0.0805%" height="15" fill="rgb(252,189,15)" fg:x="902" fg:w="1"/><text x="72.8164%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.8077%" y="325" width="0.0805%" height="15" fill="rgb(251,175,23)" fg:x="905" fg:w="1"/><text x="73.0577%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="72.6468%" y="341" width="0.4827%" height="15" fill="rgb(212,184,11)" fg:x="903" fg:w="6"/><text x="72.8968%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="72.8882%" y="325" width="0.2414%" height="15" fill="rgb(217,205,6)" fg:x="906" fg:w="3"/><text x="73.1382%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.9686%" y="309" width="0.1609%" height="15" fill="rgb(235,45,45)" fg:x="907" fg:w="2"/><text x="73.2186%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (9 samples, 0.72%)</title><rect x="72.6468%" y="373" width="0.7241%" height="15" fill="rgb(211,157,53)" fg:x="903" fg:w="9"/><text x="72.8968%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="72.6468%" y="357" width="0.7241%" height="15" fill="rgb(212,13,8)" fg:x="903" fg:w="9"/><text x="72.8968%" y="367.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="73.1295%" y="341" width="0.2414%" height="15" fill="rgb(218,80,36)" fg:x="909" fg:w="3"/><text x="73.3795%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5318%" y="309" width="0.0805%" height="15" fill="rgb(211,123,43)" fg:x="914" fg:w="1"/><text x="73.7818%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="73.4513%" y="341" width="0.3218%" height="15" fill="rgb(206,165,2)" fg:x="913" fg:w="4"/><text x="73.7013%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="73.5318%" y="325" width="0.2414%" height="15" fill="rgb(248,63,35)" fg:x="914" fg:w="3"/><text x="73.7818%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="73.6122%" y="309" width="0.1609%" height="15" fill="rgb(219,133,41)" fg:x="915" fg:w="2"/><text x="73.8622%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="73.3709%" y="357" width="0.4827%" height="15" fill="rgb(206,175,46)" fg:x="912" fg:w="6"/><text x="73.6209%" y="367.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.7731%" y="341" width="0.0805%" height="15" fill="rgb(224,41,35)" fg:x="917" fg:w="1"/><text x="74.0231%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="73.7731%" y="325" width="0.0805%" height="15" fill="rgb(226,113,24)" fg:x="917" fg:w="1"/><text x="74.0231%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="72.4859%" y="389" width="1.6090%" height="15" fill="rgb(219,51,41)" fg:x="901" fg:w="20"/><text x="72.7359%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="73.3709%" y="373" width="0.7241%" height="15" fill="rgb(220,145,47)" fg:x="912" fg:w="9"/><text x="73.6209%" y="383.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="73.8536%" y="357" width="0.2414%" height="15" fill="rgb(239,121,47)" fg:x="918" fg:w="3"/><text x="74.1036%" y="367.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (209 samples, 16.81%)</title><rect x="57.7635%" y="485" width="16.8142%" height="15" fill="rgb(207,60,40)" fg:x="718" fg:w="209"/><text x="58.0135%" y="495.50">&lt;rpc_proto::Json as core::..</text></g><g><title>kernel::model::EntityPtr::to_json_value (93 samples, 7.48%)</title><rect x="67.0957%" y="469" width="7.4819%" height="15" fill="rgb(224,229,11)" fg:x="834" fg:w="93"/><text x="67.3457%" y="479.50">kernel::mo..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (93 samples, 7.48%)</title><rect x="67.0957%" y="453" width="7.4819%" height="15" fill="rgb(252,28,32)" fg:x="834" fg:w="93"/><text x="67.3457%" y="463.50">kernel::mo..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (92 samples, 7.40%)</title><rect x="67.1762%" y="437" width="7.4014%" height="15" fill="rgb(207,52,49)" fg:x="835" fg:w="92"/><text x="67.4262%" y="447.50">&lt;serde_jso..</text></g><g><title>serde::ser::Serializer::collect_map (40 samples, 3.22%)</title><rect x="71.3596%" y="421" width="3.2180%" height="15" fill="rgb(243,51,50)" fg:x="887" fg:w="40"/><text x="71.6096%" y="431.50">ser..</text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (31 samples, 2.49%)</title><rect x="72.0837%" y="405" width="2.4940%" height="15" fill="rgb(212,92,21)" fg:x="896" fg:w="31"/><text x="72.3337%" y="415.50">ke..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="74.0949%" y="389" width="0.4827%" height="15" fill="rgb(230,183,50)" fg:x="921" fg:w="6"/><text x="74.3449%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4972%" y="373" width="0.0805%" height="15" fill="rgb(225,48,9)" fg:x="926" fg:w="1"/><text x="74.7472%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (226 samples, 18.18%)</title><rect x="56.4763%" y="517" width="18.1818%" height="15" fill="rgb(254,44,4)" fg:x="702" fg:w="226"/><text x="56.7263%" y="527.50">&lt;core::iter::adapters::map::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (224 samples, 18.02%)</title><rect x="56.6372%" y="501" width="18.0209%" height="15" fill="rgb(252,128,37)" fg:x="704" fg:w="224"/><text x="56.8872%" y="511.50">plugins_rpc::sessions::Sessi..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="74.5776%" y="485" width="0.0805%" height="15" fill="rgb(227,178,8)" fg:x="927" fg:w="1"/><text x="74.8276%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5776%" y="469" width="0.0805%" height="15" fill="rgb(205,206,32)" fg:x="927" fg:w="1"/><text x="74.8276%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (344 samples, 27.67%)</title><rect x="47.0636%" y="549" width="27.6750%" height="15" fill="rgb(220,218,22)" fg:x="585" fg:w="344"/><text x="47.3136%" y="559.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (229 samples, 18.42%)</title><rect x="56.3154%" y="533" width="18.4232%" height="15" fill="rgb(236,41,28)" fg:x="700" fg:w="229"/><text x="56.5654%" y="543.50">alloc::vec::in_place_collect:..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6581%" y="517" width="0.0805%" height="15" fill="rgb(219,37,7)" fg:x="928" fg:w="1"/><text x="74.9081%" y="527.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (358 samples, 28.80%)</title><rect x="46.0177%" y="565" width="28.8013%" height="15" fill="rgb(206,160,15)" fg:x="572" fg:w="358"/><text x="46.2677%" y="575.50">&lt;plugins_rpc::sessions::SessionServices as plu..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7385%" y="549" width="0.0805%" height="15" fill="rgb(208,82,21)" fg:x="929" fg:w="1"/><text x="74.9885%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.7385%" y="533" width="0.0805%" height="15" fill="rgb(226,130,25)" fg:x="929" fg:w="1"/><text x="74.9885%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="74.7385%" y="517" width="0.0805%" height="15" fill="rgb(212,72,24)" fg:x="929" fg:w="1"/><text x="74.9885%" y="527.50"></text></g><g><title>&lt;rpc_proto::Surroundings as core::convert::TryFrom&lt;&amp;kernel::surround::Surroundings&gt;&gt;::try_from (1 samples, 0.08%)</title><rect x="74.8190%" y="565" width="0.0805%" height="15" fill="rgb(206,28,16)" fg:x="930" fg:w="1"/><text x="75.0690%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="74.8190%" y="549" width="0.0805%" height="15" fill="rgb(249,41,5)" fg:x="930" fg:w="1"/><text x="75.0690%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.8190%" y="533" width="0.0805%" height="15" fill="rgb(233,96,48)" fg:x="930" fg:w="1"/><text x="75.0690%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.8190%" y="517" width="0.0805%" height="15" fill="rgb(240,198,11)" fg:x="930" fg:w="1"/><text x="75.0690%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.8190%" y="501" width="0.0805%" height="15" fill="rgb(209,175,35)" fg:x="930" fg:w="1"/><text x="75.0690%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.8190%" y="485" width="0.0805%" height="15" fill="rgb(214,40,51)" fg:x="930" fg:w="1"/><text x="75.0690%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.8994%" y="565" width="0.0805%" height="15" fill="rgb(252,56,4)" fg:x="931" fg:w="1"/><text x="75.1494%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9799%" y="565" width="0.0805%" height="15" fill="rgb(219,131,5)" fg:x="932" fg:w="1"/><text x="75.2299%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.16%)</title><rect x="75.0603%" y="565" width="0.1609%" height="15" fill="rgb(223,67,53)" fg:x="933" fg:w="2"/><text x="75.3103%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.1408%" y="549" width="0.0805%" height="15" fill="rgb(227,154,8)" fg:x="934" fg:w="1"/><text x="75.3908%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="75.1408%" y="533" width="0.0805%" height="15" fill="rgb(216,174,51)" fg:x="934" fg:w="1"/><text x="75.3908%" y="543.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (572 samples, 46.02%)</title><rect x="29.2840%" y="629" width="46.0177%" height="15" fill="rgb(239,60,34)" fg:x="364" fg:w="572"/><text x="29.5340%" y="639.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (420 samples, 33.79%)</title><rect x="41.5125%" y="613" width="33.7892%" height="15" fill="rgb(236,165,48)" fg:x="516" fg:w="420"/><text x="41.7625%" y="623.50">kernel::plugins::SessionPlugins::have_surroundings</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (420 samples, 33.79%)</title><rect x="41.5125%" y="597" width="33.7892%" height="15" fill="rgb(210,37,26)" fg:x="516" fg:w="420"/><text x="41.7625%" y="607.50">&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plug..</text></g><g><title>plugins_rpc::querying::have_surroundings (366 samples, 29.44%)</title><rect x="45.8568%" y="581" width="29.4449%" height="15" fill="rgb(211,3,17)" fg:x="570" fg:w="366"/><text x="46.1068%" y="591.50">plugins_rpc::querying::have_surroundings</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="75.2212%" y="565" width="0.0805%" height="15" fill="rgb(234,88,49)" fg:x="935" fg:w="1"/><text x="75.4712%" y="575.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::EntityKey&gt;::into (1 samples, 0.08%)</title><rect x="75.2212%" y="549" width="0.0805%" height="15" fill="rgb(233,40,17)" fg:x="935" fg:w="1"/><text x="75.4712%" y="559.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;kernel::model::EntityKey&gt; for alloc::string::String&gt;::from (1 samples, 0.08%)</title><rect x="75.2212%" y="533" width="0.0805%" height="15" fill="rgb(235,127,31)" fg:x="935" fg:w="1"/><text x="75.4712%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="75.2212%" y="517" width="0.0805%" height="15" fill="rgb(248,167,17)" fg:x="935" fg:w="1"/><text x="75.4712%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="75.2212%" y="501" width="0.0805%" height="15" fill="rgb(218,179,8)" fg:x="935" fg:w="1"/><text x="75.4712%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="75.2212%" y="485" width="0.0805%" height="15" fill="rgb(216,92,14)" fg:x="935" fg:w="1"/><text x="75.4712%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="75.2212%" y="469" width="0.0805%" height="15" fill="rgb(221,198,46)" fg:x="935" fg:w="1"/><text x="75.4712%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="75.2212%" y="453" width="0.0805%" height="15" fill="rgb(244,7,25)" fg:x="935" fg:w="1"/><text x="75.4712%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="75.2212%" y="437" width="0.0805%" height="15" fill="rgb(233,75,6)" fg:x="935" fg:w="1"/><text x="75.4712%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2212%" y="421" width="0.0805%" height="15" fill="rgb(240,189,41)" fg:x="935" fg:w="1"/><text x="75.4712%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3017%" y="453" width="0.0805%" height="15" fill="rgb(237,157,21)" fg:x="936" fg:w="1"/><text x="75.5517%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3017%" y="437" width="0.0805%" height="15" fill="rgb(210,136,49)" fg:x="936" fg:w="1"/><text x="75.5517%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.3017%" y="421" width="0.0805%" height="15" fill="rgb(210,68,29)" fg:x="936" fg:w="1"/><text x="75.5517%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3017%" y="405" width="0.0805%" height="15" fill="rgb(247,207,20)" fg:x="936" fg:w="1"/><text x="75.5517%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3017%" y="389" width="0.0805%" height="15" fill="rgb(224,73,48)" fg:x="936" fg:w="1"/><text x="75.5517%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3017%" y="373" width="0.0805%" height="15" fill="rgb(215,136,47)" fg:x="936" fg:w="1"/><text x="75.5517%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3017%" y="357" width="0.0805%" height="15" fill="rgb(232,222,16)" fg:x="936" fg:w="1"/><text x="75.5517%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.3017%" y="501" width="0.2414%" height="15" fill="rgb(249,202,47)" fg:x="936" fg:w="3"/><text x="75.5517%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.3017%" y="485" width="0.2414%" height="15" fill="rgb(236,56,8)" fg:x="936" fg:w="3"/><text x="75.5517%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.3017%" y="469" width="0.2414%" height="15" fill="rgb(222,6,3)" fg:x="936" fg:w="3"/><text x="75.5517%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.3821%" y="453" width="0.1609%" height="15" fill="rgb(254,222,28)" fg:x="937" fg:w="2"/><text x="75.6321%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.3821%" y="437" width="0.1609%" height="15" fill="rgb(219,57,23)" fg:x="937" fg:w="2"/><text x="75.6321%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.4626%" y="421" width="0.0805%" height="15" fill="rgb(251,106,48)" fg:x="938" fg:w="1"/><text x="75.7126%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="75.4626%" y="405" width="0.0805%" height="15" fill="rgb(242,2,23)" fg:x="938" fg:w="1"/><text x="75.7126%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.4626%" y="389" width="0.0805%" height="15" fill="rgb(212,109,31)" fg:x="938" fg:w="1"/><text x="75.7126%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.4626%" y="373" width="0.0805%" height="15" fill="rgb(241,9,22)" fg:x="938" fg:w="1"/><text x="75.7126%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.4626%" y="357" width="0.0805%" height="15" fill="rgb(209,64,27)" fg:x="938" fg:w="1"/><text x="75.7126%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.32%)</title><rect x="75.3017%" y="565" width="0.3218%" height="15" fill="rgb(248,13,44)" fg:x="936" fg:w="4"/><text x="75.5517%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.32%)</title><rect x="75.3017%" y="549" width="0.3218%" height="15" fill="rgb(213,86,6)" fg:x="936" fg:w="4"/><text x="75.5517%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="75.3017%" y="533" width="0.3218%" height="15" fill="rgb(247,11,18)" fg:x="936" fg:w="4"/><text x="75.5517%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="75.3017%" y="517" width="0.3218%" height="15" fill="rgb(252,31,11)" fg:x="936" fg:w="4"/><text x="75.5517%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5430%" y="501" width="0.0805%" height="15" fill="rgb(215,63,51)" fg:x="939" fg:w="1"/><text x="75.7930%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5430%" y="485" width="0.0805%" height="15" fill="rgb(222,180,4)" fg:x="939" fg:w="1"/><text x="75.7930%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="75.5430%" y="469" width="0.0805%" height="15" fill="rgb(233,4,23)" fg:x="939" fg:w="1"/><text x="75.7930%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5430%" y="453" width="0.0805%" height="15" fill="rgb(230,116,22)" fg:x="939" fg:w="1"/><text x="75.7930%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.5430%" y="437" width="0.0805%" height="15" fill="rgb(222,20,14)" fg:x="939" fg:w="1"/><text x="75.7930%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5430%" y="421" width="0.0805%" height="15" fill="rgb(210,176,43)" fg:x="939" fg:w="1"/><text x="75.7930%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.5430%" y="405" width="0.0805%" height="15" fill="rgb(219,67,32)" fg:x="939" fg:w="1"/><text x="75.7930%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6235%" y="517" width="0.0805%" height="15" fill="rgb(228,91,39)" fg:x="940" fg:w="1"/><text x="75.8735%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7039%" y="485" width="0.0805%" height="15" fill="rgb(254,63,14)" fg:x="941" fg:w="1"/><text x="75.9539%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.7039%" y="469" width="0.0805%" height="15" fill="rgb(216,171,39)" fg:x="941" fg:w="1"/><text x="75.9539%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7844%" y="485" width="0.0805%" height="15" fill="rgb(248,68,25)" fg:x="942" fg:w="1"/><text x="76.0344%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.7844%" y="469" width="0.0805%" height="15" fill="rgb(239,63,16)" fg:x="942" fg:w="1"/><text x="76.0344%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7844%" y="453" width="0.0805%" height="15" fill="rgb(225,111,43)" fg:x="942" fg:w="1"/><text x="76.0344%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9453%" y="437" width="0.0805%" height="15" fill="rgb(246,165,17)" fg:x="944" fg:w="1"/><text x="76.1953%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9453%" y="421" width="0.0805%" height="15" fill="rgb(208,124,1)" fg:x="944" fg:w="1"/><text x="76.1953%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9453%" y="405" width="0.0805%" height="15" fill="rgb(234,147,33)" fg:x="944" fg:w="1"/><text x="76.1953%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (10 samples, 0.80%)</title><rect x="75.3017%" y="613" width="0.8045%" height="15" fill="rgb(240,86,30)" fg:x="936" fg:w="10"/><text x="75.5517%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (10 samples, 0.80%)</title><rect x="75.3017%" y="597" width="0.8045%" height="15" fill="rgb(237,34,51)" fg:x="936" fg:w="10"/><text x="75.5517%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (10 samples, 0.80%)</title><rect x="75.3017%" y="581" width="0.8045%" height="15" fill="rgb(232,131,41)" fg:x="936" fg:w="10"/><text x="75.5517%" y="591.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="75.6235%" y="565" width="0.4827%" height="15" fill="rgb(227,129,53)" fg:x="940" fg:w="6"/><text x="75.8735%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="75.6235%" y="549" width="0.4827%" height="15" fill="rgb(230,90,35)" fg:x="940" fg:w="6"/><text x="75.8735%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="75.6235%" y="533" width="0.4827%" height="15" fill="rgb(248,88,27)" fg:x="940" fg:w="6"/><text x="75.8735%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="75.7039%" y="517" width="0.4023%" height="15" fill="rgb(223,18,17)" fg:x="941" fg:w="5"/><text x="75.9539%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.7039%" y="501" width="0.4023%" height="15" fill="rgb(241,11,10)" fg:x="941" fg:w="5"/><text x="75.9539%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.8648%" y="485" width="0.2414%" height="15" fill="rgb(232,111,52)" fg:x="943" fg:w="3"/><text x="76.1148%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.8648%" y="469" width="0.2414%" height="15" fill="rgb(228,67,8)" fg:x="943" fg:w="3"/><text x="76.1148%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.9453%" y="453" width="0.1609%" height="15" fill="rgb(251,168,31)" fg:x="944" fg:w="2"/><text x="76.1953%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="76.0257%" y="437" width="0.0805%" height="15" fill="rgb(249,164,11)" fg:x="945" fg:w="1"/><text x="76.2757%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.0257%" y="421" width="0.0805%" height="15" fill="rgb(239,81,9)" fg:x="945" fg:w="1"/><text x="76.2757%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1062%" y="453" width="0.0805%" height="15" fill="rgb(222,145,38)" fg:x="946" fg:w="1"/><text x="76.3562%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1062%" y="437" width="0.0805%" height="15" fill="rgb(238,80,54)" fg:x="946" fg:w="1"/><text x="76.3562%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.1062%" y="421" width="0.0805%" height="15" fill="rgb(237,116,16)" fg:x="946" fg:w="1"/><text x="76.3562%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.1062%" y="405" width="0.0805%" height="15" fill="rgb(218,135,19)" fg:x="946" fg:w="1"/><text x="76.3562%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.1062%" y="389" width="0.0805%" height="15" fill="rgb(216,207,44)" fg:x="946" fg:w="1"/><text x="76.3562%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.1062%" y="373" width="0.0805%" height="15" fill="rgb(226,152,40)" fg:x="946" fg:w="1"/><text x="76.3562%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.1062%" y="357" width="0.0805%" height="15" fill="rgb(219,98,35)" fg:x="946" fg:w="1"/><text x="76.3562%" y="367.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="76.1062%" y="613" width="0.1609%" height="15" fill="rgb(222,136,46)" fg:x="946" fg:w="2"/><text x="76.3562%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="76.1062%" y="597" width="0.1609%" height="15" fill="rgb(222,71,8)" fg:x="946" fg:w="2"/><text x="76.3562%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="76.1062%" y="581" width="0.1609%" height="15" fill="rgb(209,89,53)" fg:x="946" fg:w="2"/><text x="76.3562%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="76.1062%" y="565" width="0.1609%" height="15" fill="rgb(210,97,51)" fg:x="946" fg:w="2"/><text x="76.3562%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="76.1062%" y="549" width="0.1609%" height="15" fill="rgb(248,65,21)" fg:x="946" fg:w="2"/><text x="76.3562%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1062%" y="533" width="0.1609%" height="15" fill="rgb(222,5,31)" fg:x="946" fg:w="2"/><text x="76.3562%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="76.1062%" y="517" width="0.1609%" height="15" fill="rgb(241,16,30)" fg:x="946" fg:w="2"/><text x="76.3562%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="76.1062%" y="501" width="0.1609%" height="15" fill="rgb(215,86,30)" fg:x="946" fg:w="2"/><text x="76.3562%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="76.1062%" y="485" width="0.1609%" height="15" fill="rgb(235,26,44)" fg:x="946" fg:w="2"/><text x="76.3562%" y="495.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="76.1062%" y="469" width="0.1609%" height="15" fill="rgb(228,147,14)" fg:x="946" fg:w="2"/><text x="76.3562%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.1866%" y="453" width="0.0805%" height="15" fill="rgb(253,38,50)" fg:x="947" fg:w="1"/><text x="76.4366%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="76.1866%" y="437" width="0.0805%" height="15" fill="rgb(251,151,16)" fg:x="947" fg:w="1"/><text x="76.4366%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="76.1866%" y="421" width="0.0805%" height="15" fill="rgb(224,64,19)" fg:x="947" fg:w="1"/><text x="76.4366%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="76.1866%" y="405" width="0.0805%" height="15" fill="rgb(235,214,47)" fg:x="947" fg:w="1"/><text x="76.4366%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="76.1866%" y="389" width="0.0805%" height="15" fill="rgb(218,15,19)" fg:x="947" fg:w="1"/><text x="76.4366%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="76.1866%" y="373" width="0.0805%" height="15" fill="rgb(247,209,3)" fg:x="947" fg:w="1"/><text x="76.4366%" y="383.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="76.1866%" y="357" width="0.0805%" height="15" fill="rgb(217,29,2)" fg:x="947" fg:w="1"/><text x="76.4366%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1866%" y="341" width="0.0805%" height="15" fill="rgb(234,9,9)" fg:x="947" fg:w="1"/><text x="76.4366%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.1866%" y="325" width="0.0805%" height="15" fill="rgb(207,43,14)" fg:x="947" fg:w="1"/><text x="76.4366%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="76.1866%" y="309" width="0.0805%" height="15" fill="rgb(216,219,36)" fg:x="947" fg:w="1"/><text x="76.4366%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="76.1866%" y="293" width="0.0805%" height="15" fill="rgb(238,12,26)" fg:x="947" fg:w="1"/><text x="76.4366%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="76.1866%" y="277" width="0.0805%" height="15" fill="rgb(226,67,30)" fg:x="947" fg:w="1"/><text x="76.4366%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="76.1866%" y="261" width="0.0805%" height="15" fill="rgb(229,154,7)" fg:x="947" fg:w="1"/><text x="76.4366%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="76.1866%" y="245" width="0.0805%" height="15" fill="rgb(249,90,18)" fg:x="947" fg:w="1"/><text x="76.4366%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="76.1866%" y="229" width="0.0805%" height="15" fill="rgb(223,53,15)" fg:x="947" fg:w="1"/><text x="76.4366%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="76.1866%" y="213" width="0.0805%" height="15" fill="rgb(253,86,38)" fg:x="947" fg:w="1"/><text x="76.4366%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="76.1866%" y="197" width="0.0805%" height="15" fill="rgb(222,198,9)" fg:x="947" fg:w="1"/><text x="76.4366%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.1866%" y="181" width="0.0805%" height="15" fill="rgb(240,146,25)" fg:x="947" fg:w="1"/><text x="76.4366%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="76.1866%" y="165" width="0.0805%" height="15" fill="rgb(225,38,10)" fg:x="947" fg:w="1"/><text x="76.4366%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="76.1866%" y="149" width="0.0805%" height="15" fill="rgb(246,93,4)" fg:x="947" fg:w="1"/><text x="76.4366%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="76.1866%" y="133" width="0.0805%" height="15" fill="rgb(222,55,18)" fg:x="947" fg:w="1"/><text x="76.4366%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.1866%" y="117" width="0.0805%" height="15" fill="rgb(233,137,48)" fg:x="947" fg:w="1"/><text x="76.4366%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2671%" y="565" width="0.0805%" height="15" fill="rgb(214,8,54)" fg:x="948" fg:w="1"/><text x="76.5171%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2671%" y="549" width="0.0805%" height="15" fill="rgb(206,75,4)" fg:x="948" fg:w="1"/><text x="76.5171%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.2671%" y="533" width="0.0805%" height="15" fill="rgb(238,171,14)" fg:x="948" fg:w="1"/><text x="76.5171%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.2671%" y="517" width="0.0805%" height="15" fill="rgb(233,70,41)" fg:x="948" fg:w="1"/><text x="76.5171%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.2671%" y="501" width="0.0805%" height="15" fill="rgb(214,68,36)" fg:x="948" fg:w="1"/><text x="76.5171%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.2671%" y="485" width="0.0805%" height="15" fill="rgb(223,29,5)" fg:x="948" fg:w="1"/><text x="76.5171%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.2671%" y="469" width="0.0805%" height="15" fill="rgb(251,22,40)" fg:x="948" fg:w="1"/><text x="76.5171%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.2671%" y="453" width="0.0805%" height="15" fill="rgb(210,67,41)" fg:x="948" fg:w="1"/><text x="76.5171%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.2671%" y="437" width="0.0805%" height="15" fill="rgb(225,177,31)" fg:x="948" fg:w="1"/><text x="76.5171%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.2671%" y="421" width="0.0805%" height="15" fill="rgb(221,229,11)" fg:x="948" fg:w="1"/><text x="76.5171%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.2671%" y="405" width="0.0805%" height="15" fill="rgb(247,172,52)" fg:x="948" fg:w="1"/><text x="76.5171%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.2671%" y="389" width="0.0805%" height="15" fill="rgb(212,73,19)" fg:x="948" fg:w="1"/><text x="76.5171%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.2671%" y="373" width="0.0805%" height="15" fill="rgb(244,7,46)" fg:x="948" fg:w="1"/><text x="76.5171%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.2671%" y="357" width="0.0805%" height="15" fill="rgb(230,113,20)" fg:x="948" fg:w="1"/><text x="76.5171%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="76.3475%" y="565" width="0.0805%" height="15" fill="rgb(209,97,30)" fg:x="949" fg:w="1"/><text x="76.5975%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.3475%" y="549" width="0.0805%" height="15" fill="rgb(243,89,12)" fg:x="949" fg:w="1"/><text x="76.5975%" y="559.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (589 samples, 47.39%)</title><rect x="29.2840%" y="645" width="47.3854%" height="15" fill="rgb(228,32,19)" fg:x="364" fg:w="589"/><text x="29.5340%" y="655.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (17 samples, 1.37%)</title><rect x="75.3017%" y="629" width="1.3677%" height="15" fill="rgb(248,25,17)" fg:x="936" fg:w="17"/><text x="75.5517%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (5 samples, 0.40%)</title><rect x="76.2671%" y="613" width="0.4023%" height="15" fill="rgb(232,161,29)" fg:x="948" fg:w="5"/><text x="76.5171%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="76.2671%" y="597" width="0.4023%" height="15" fill="rgb(251,192,11)" fg:x="948" fg:w="5"/><text x="76.5171%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="76.2671%" y="581" width="0.4023%" height="15" fill="rgb(240,47,32)" fg:x="948" fg:w="5"/><text x="76.5171%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="76.4280%" y="565" width="0.2414%" height="15" fill="rgb(250,16,45)" fg:x="950" fg:w="3"/><text x="76.6780%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.5084%" y="549" width="0.1609%" height="15" fill="rgb(227,217,42)" fg:x="951" fg:w="2"/><text x="76.7584%" y="559.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="76.8302%" y="581" width="0.0805%" height="15" fill="rgb(206,82,54)" fg:x="955" fg:w="1"/><text x="77.0802%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.8302%" y="565" width="0.0805%" height="15" fill="rgb(243,145,25)" fg:x="955" fg:w="1"/><text x="77.0802%" y="575.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="76.8302%" y="549" width="0.0805%" height="15" fill="rgb(207,166,24)" fg:x="955" fg:w="1"/><text x="77.0802%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="76.8302%" y="597" width="0.1609%" height="15" fill="rgb(215,191,44)" fg:x="955" fg:w="2"/><text x="77.0802%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9107%" y="581" width="0.0805%" height="15" fill="rgb(234,218,51)" fg:x="956" fg:w="1"/><text x="77.1607%" y="591.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (5 samples, 0.40%)</title><rect x="76.6693%" y="645" width="0.4023%" height="15" fill="rgb(245,133,21)" fg:x="953" fg:w="5"/><text x="76.9193%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.32%)</title><rect x="76.7498%" y="629" width="0.3218%" height="15" fill="rgb(230,136,45)" fg:x="954" fg:w="4"/><text x="76.9998%" y="639.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="76.8302%" y="613" width="0.2414%" height="15" fill="rgb(247,63,43)" fg:x="955" fg:w="3"/><text x="77.0802%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="76.9912%" y="597" width="0.0805%" height="15" fill="rgb(254,223,31)" fg:x="957" fg:w="1"/><text x="77.2412%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="76.9912%" y="581" width="0.0805%" height="15" fill="rgb(236,185,0)" fg:x="957" fg:w="1"/><text x="77.2412%" y="591.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1_complete (1 samples, 0.08%)</title><rect x="76.9912%" y="565" width="0.0805%" height="15" fill="rgb(231,139,46)" fg:x="957" fg:w="1"/><text x="77.2412%" y="575.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="76.9912%" y="549" width="0.0805%" height="15" fill="rgb(236,147,31)" fg:x="957" fg:w="1"/><text x="77.2412%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="76.9912%" y="533" width="0.0805%" height="15" fill="rgb(225,222,22)" fg:x="957" fg:w="1"/><text x="77.2412%" y="543.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (1 samples, 0.08%)</title><rect x="76.9912%" y="517" width="0.0805%" height="15" fill="rgb(225,193,14)" fg:x="957" fg:w="1"/><text x="77.2412%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.08%)</title><rect x="76.9912%" y="501" width="0.0805%" height="15" fill="rgb(253,193,46)" fg:x="957" fg:w="1"/><text x="77.2412%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="77.1521%" y="533" width="0.0805%" height="15" fill="rgb(218,187,39)" fg:x="959" fg:w="1"/><text x="77.4021%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.1521%" y="517" width="0.0805%" height="15" fill="rgb(227,162,48)" fg:x="959" fg:w="1"/><text x="77.4021%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.1521%" y="501" width="0.0805%" height="15" fill="rgb(222,25,5)" fg:x="959" fg:w="1"/><text x="77.4021%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1521%" y="485" width="0.0805%" height="15" fill="rgb(211,205,16)" fg:x="959" fg:w="1"/><text x="77.4021%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.1521%" y="469" width="0.0805%" height="15" fill="rgb(244,191,2)" fg:x="959" fg:w="1"/><text x="77.4021%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.1521%" y="453" width="0.0805%" height="15" fill="rgb(248,159,12)" fg:x="959" fg:w="1"/><text x="77.4021%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.1521%" y="437" width="0.0805%" height="15" fill="rgb(235,204,17)" fg:x="959" fg:w="1"/><text x="77.4021%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.1521%" y="421" width="0.0805%" height="15" fill="rgb(240,21,27)" fg:x="959" fg:w="1"/><text x="77.4021%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.1521%" y="405" width="0.0805%" height="15" fill="rgb(224,170,31)" fg:x="959" fg:w="1"/><text x="77.4021%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.1521%" y="389" width="0.0805%" height="15" fill="rgb(223,145,32)" fg:x="959" fg:w="1"/><text x="77.4021%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.1521%" y="373" width="0.0805%" height="15" fill="rgb(243,100,5)" fg:x="959" fg:w="1"/><text x="77.4021%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.1521%" y="357" width="0.0805%" height="15" fill="rgb(242,131,51)" fg:x="959" fg:w="1"/><text x="77.4021%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.1521%" y="341" width="0.0805%" height="15" fill="rgb(223,156,46)" fg:x="959" fg:w="1"/><text x="77.4021%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="77.1521%" y="325" width="0.0805%" height="15" fill="rgb(215,10,40)" fg:x="959" fg:w="1"/><text x="77.4021%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="77.1521%" y="309" width="0.0805%" height="15" fill="rgb(233,155,0)" fg:x="959" fg:w="1"/><text x="77.4021%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="77.0716%" y="645" width="0.2414%" height="15" fill="rgb(247,78,6)" fg:x="958" fg:w="3"/><text x="77.3216%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="77.0716%" y="629" width="0.2414%" height="15" fill="rgb(237,217,21)" fg:x="958" fg:w="3"/><text x="77.3216%" y="639.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="77.0716%" y="613" width="0.2414%" height="15" fill="rgb(212,1,21)" fg:x="958" fg:w="3"/><text x="77.3216%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="77.0716%" y="597" width="0.2414%" height="15" fill="rgb(213,7,14)" fg:x="958" fg:w="3"/><text x="77.3216%" y="607.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="77.0716%" y="581" width="0.2414%" height="15" fill="rgb(225,84,14)" fg:x="958" fg:w="3"/><text x="77.3216%" y="591.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (3 samples, 0.24%)</title><rect x="77.0716%" y="565" width="0.2414%" height="15" fill="rgb(239,216,39)" fg:x="958" fg:w="3"/><text x="77.3216%" y="575.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="77.1521%" y="549" width="0.1609%" height="15" fill="rgb(253,29,23)" fg:x="959" fg:w="2"/><text x="77.4021%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.2325%" y="533" width="0.0805%" height="15" fill="rgb(220,167,50)" fg:x="960" fg:w="1"/><text x="77.4825%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.2325%" y="517" width="0.0805%" height="15" fill="rgb(232,141,1)" fg:x="960" fg:w="1"/><text x="77.4825%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="77.2325%" y="501" width="0.0805%" height="15" fill="rgb(222,210,1)" fg:x="960" fg:w="1"/><text x="77.4825%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="77.2325%" y="485" width="0.0805%" height="15" fill="rgb(219,84,10)" fg:x="960" fg:w="1"/><text x="77.4825%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.2325%" y="469" width="0.0805%" height="15" fill="rgb(245,188,6)" fg:x="960" fg:w="1"/><text x="77.4825%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.2325%" y="453" width="0.0805%" height="15" fill="rgb(252,139,39)" fg:x="960" fg:w="1"/><text x="77.4825%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="77.2325%" y="437" width="0.0805%" height="15" fill="rgb(218,42,26)" fg:x="960" fg:w="1"/><text x="77.4825%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="77.2325%" y="421" width="0.0805%" height="15" fill="rgb(237,226,51)" fg:x="960" fg:w="1"/><text x="77.4825%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="77.2325%" y="405" width="0.0805%" height="15" fill="rgb(246,15,17)" fg:x="960" fg:w="1"/><text x="77.4825%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="77.2325%" y="389" width="0.0805%" height="15" fill="rgb(228,170,42)" fg:x="960" fg:w="1"/><text x="77.4825%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.2325%" y="373" width="0.0805%" height="15" fill="rgb(248,118,53)" fg:x="960" fg:w="1"/><text x="77.4825%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="77.2325%" y="357" width="0.0805%" height="15" fill="rgb(207,30,10)" fg:x="960" fg:w="1"/><text x="77.4825%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.2325%" y="341" width="0.0805%" height="15" fill="rgb(217,104,38)" fg:x="960" fg:w="1"/><text x="77.4825%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="77.2325%" y="325" width="0.0805%" height="15" fill="rgb(211,165,26)" fg:x="960" fg:w="1"/><text x="77.4825%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.2325%" y="309" width="0.0805%" height="15" fill="rgb(247,38,9)" fg:x="960" fg:w="1"/><text x="77.4825%" y="319.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (598 samples, 48.11%)</title><rect x="29.2840%" y="677" width="48.1094%" height="15" fill="rgb(218,187,8)" fg:x="364" fg:w="598"/><text x="29.5340%" y="687.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (598 samples, 48.11%)</title><rect x="29.2840%" y="661" width="48.1094%" height="15" fill="rgb(247,94,28)" fg:x="364" fg:w="598"/><text x="29.5340%" y="671.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="77.3130%" y="645" width="0.0805%" height="15" fill="rgb(218,173,30)" fg:x="961" fg:w="1"/><text x="77.5630%" y="655.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="77.3130%" y="629" width="0.0805%" height="15" fill="rgb(245,45,36)" fg:x="961" fg:w="1"/><text x="77.5630%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (963 samples, 77.47%)</title><rect x="0.0000%" y="725" width="77.4739%" height="15" fill="rgb(221,172,44)" fg:x="0" fg:w="963"/><text x="0.2500%" y="735.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (963 samples, 77.47%)</title><rect x="0.0000%" y="709" width="77.4739%" height="15" fill="rgb(222,45,12)" fg:x="0" fg:w="963"/><text x="0.2500%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (963 samples, 77.47%)</title><rect x="0.0000%" y="693" width="77.4739%" height="15" fill="rgb(250,10,22)" fg:x="0" fg:w="963"/><text x="0.2500%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="77.3934%" y="677" width="0.0805%" height="15" fill="rgb(239,27,0)" fg:x="962" fg:w="1"/><text x="77.6434%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3934%" y="661" width="0.0805%" height="15" fill="rgb(223,118,22)" fg:x="962" fg:w="1"/><text x="77.6434%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="77.5543%" y="597" width="0.1609%" height="15" fill="rgb(251,81,25)" fg:x="964" fg:w="2"/><text x="77.8043%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="77.5543%" y="581" width="0.1609%" height="15" fill="rgb(237,225,53)" fg:x="964" fg:w="2"/><text x="77.8043%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="77.5543%" y="565" width="0.1609%" height="15" fill="rgb(237,186,51)" fg:x="964" fg:w="2"/><text x="77.8043%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="77.6348%" y="549" width="0.0805%" height="15" fill="rgb(247,209,11)" fg:x="965" fg:w="1"/><text x="77.8848%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.6348%" y="533" width="0.0805%" height="15" fill="rgb(223,109,27)" fg:x="965" fg:w="1"/><text x="77.8848%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="77.5543%" y="645" width="0.2414%" height="15" fill="rgb(246,181,13)" fg:x="964" fg:w="3"/><text x="77.8043%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (3 samples, 0.24%)</title><rect x="77.5543%" y="629" width="0.2414%" height="15" fill="rgb(234,57,44)" fg:x="964" fg:w="3"/><text x="77.8043%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="77.5543%" y="613" width="0.2414%" height="15" fill="rgb(211,227,50)" fg:x="964" fg:w="3"/><text x="77.8043%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7152%" y="597" width="0.0805%" height="15" fill="rgb(254,57,34)" fg:x="966" fg:w="1"/><text x="77.9652%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="77.5543%" y="677" width="0.4023%" height="15" fill="rgb(227,212,26)" fg:x="964" fg:w="5"/><text x="77.8043%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (5 samples, 0.40%)</title><rect x="77.5543%" y="661" width="0.4023%" height="15" fill="rgb(244,169,44)" fg:x="964" fg:w="5"/><text x="77.8043%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="77.7957%" y="645" width="0.1609%" height="15" fill="rgb(236,135,50)" fg:x="967" fg:w="2"/><text x="78.0457%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="78.0370%" y="533" width="0.0805%" height="15" fill="rgb(241,89,30)" fg:x="970" fg:w="1"/><text x="78.2870%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.0370%" y="517" width="0.0805%" height="15" fill="rgb(206,113,34)" fg:x="970" fg:w="1"/><text x="78.2870%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.0370%" y="501" width="0.0805%" height="15" fill="rgb(218,104,52)" fg:x="970" fg:w="1"/><text x="78.2870%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="77.9566%" y="597" width="0.2414%" height="15" fill="rgb(223,82,32)" fg:x="969" fg:w="3"/><text x="78.2066%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="77.9566%" y="581" width="0.2414%" height="15" fill="rgb(249,219,30)" fg:x="969" fg:w="3"/><text x="78.2066%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.9566%" y="565" width="0.2414%" height="15" fill="rgb(233,141,21)" fg:x="969" fg:w="3"/><text x="78.2066%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.9566%" y="549" width="0.2414%" height="15" fill="rgb(252,87,44)" fg:x="969" fg:w="3"/><text x="78.2066%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.1175%" y="533" width="0.0805%" height="15" fill="rgb(229,48,33)" fg:x="971" fg:w="1"/><text x="78.3675%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.1175%" y="517" width="0.0805%" height="15" fill="rgb(229,23,22)" fg:x="971" fg:w="1"/><text x="78.3675%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.1175%" y="501" width="0.0805%" height="15" fill="rgb(244,116,16)" fg:x="971" fg:w="1"/><text x="78.3675%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="77.9566%" y="645" width="0.3218%" height="15" fill="rgb(247,45,10)" fg:x="969" fg:w="4"/><text x="78.2066%" y="655.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="77.9566%" y="629" width="0.3218%" height="15" fill="rgb(228,60,29)" fg:x="969" fg:w="4"/><text x="78.2066%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="77.9566%" y="613" width="0.3218%" height="15" fill="rgb(205,129,15)" fg:x="969" fg:w="4"/><text x="78.2066%" y="623.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="78.1979%" y="597" width="0.0805%" height="15" fill="rgb(206,229,4)" fg:x="972" fg:w="1"/><text x="78.4479%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.1979%" y="581" width="0.0805%" height="15" fill="rgb(249,191,30)" fg:x="972" fg:w="1"/><text x="78.4479%" y="591.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.2784%" y="581" width="0.0805%" height="15" fill="rgb(250,84,54)" fg:x="973" fg:w="1"/><text x="78.5284%" y="591.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="78.2784%" y="565" width="0.0805%" height="15" fill="rgb(207,25,53)" fg:x="973" fg:w="1"/><text x="78.5284%" y="575.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="78.2784%" y="549" width="0.0805%" height="15" fill="rgb(235,40,8)" fg:x="973" fg:w="1"/><text x="78.5284%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="78.2784%" y="533" width="0.0805%" height="15" fill="rgb(226,169,33)" fg:x="973" fg:w="1"/><text x="78.5284%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="78.2784%" y="517" width="0.0805%" height="15" fill="rgb(238,110,8)" fg:x="973" fg:w="1"/><text x="78.5284%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.2784%" y="501" width="0.0805%" height="15" fill="rgb(251,206,12)" fg:x="973" fg:w="1"/><text x="78.5284%" y="511.50"></text></g><g><title>libloading::os::unix::Library::open (2 samples, 0.16%)</title><rect x="78.2784%" y="597" width="0.1609%" height="15" fill="rgb(248,171,18)" fg:x="973" fg:w="2"/><text x="78.5284%" y="607.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="78.3588%" y="581" width="0.0805%" height="15" fill="rgb(213,65,46)" fg:x="974" fg:w="1"/><text x="78.6088%" y="591.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="78.3588%" y="565" width="0.0805%" height="15" fill="rgb(211,154,15)" fg:x="974" fg:w="1"/><text x="78.6088%" y="575.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (7 samples, 0.56%)</title><rect x="77.9566%" y="677" width="0.5632%" height="15" fill="rgb(217,75,43)" fg:x="969" fg:w="7"/><text x="78.2066%" y="687.50"></text></g><g><title>engine::session::Session::new (7 samples, 0.56%)</title><rect x="77.9566%" y="661" width="0.5632%" height="15" fill="rgb(230,32,33)" fg:x="969" fg:w="7"/><text x="78.2066%" y="671.50"></text></g><g><title>engine::session::Session::initialize (3 samples, 0.24%)</title><rect x="78.2784%" y="645" width="0.2414%" height="15" fill="rgb(221,100,16)" fg:x="973" fg:w="3"/><text x="78.5284%" y="655.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (3 samples, 0.24%)</title><rect x="78.2784%" y="629" width="0.2414%" height="15" fill="rgb(212,129,47)" fg:x="973" fg:w="3"/><text x="78.5284%" y="639.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (3 samples, 0.24%)</title><rect x="78.2784%" y="613" width="0.2414%" height="15" fill="rgb(239,217,47)" fg:x="973" fg:w="3"/><text x="78.5284%" y="623.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="78.4393%" y="597" width="0.0805%" height="15" fill="rgb(230,84,24)" fg:x="975" fg:w="1"/><text x="78.6893%" y="607.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="78.4393%" y="581" width="0.0805%" height="15" fill="rgb(214,153,51)" fg:x="975" fg:w="1"/><text x="78.6893%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="78.5197%" y="661" width="0.0805%" height="15" fill="rgb(231,6,35)" fg:x="976" fg:w="1"/><text x="78.7697%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5197%" y="645" width="0.0805%" height="15" fill="rgb(229,122,30)" fg:x="976" fg:w="1"/><text x="78.7697%" y="655.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="78.6002%" y="629" width="0.0805%" height="15" fill="rgb(234,71,10)" fg:x="977" fg:w="1"/><text x="78.8502%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="78.6002%" y="613" width="0.0805%" height="15" fill="rgb(215,173,26)" fg:x="977" fg:w="1"/><text x="78.8502%" y="623.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="78.6002%" y="597" width="0.0805%" height="15" fill="rgb(248,118,52)" fg:x="977" fg:w="1"/><text x="78.8502%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.6002%" y="581" width="0.0805%" height="15" fill="rgb(237,55,46)" fg:x="977" fg:w="1"/><text x="78.8502%" y="591.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="78.6806%" y="629" width="0.0805%" height="15" fill="rgb(243,214,43)" fg:x="978" fg:w="1"/><text x="78.9306%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="78.6806%" y="613" width="0.0805%" height="15" fill="rgb(252,123,30)" fg:x="978" fg:w="1"/><text x="78.9306%" y="623.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="78.6806%" y="597" width="0.0805%" height="15" fill="rgb(215,73,39)" fg:x="978" fg:w="1"/><text x="78.9306%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="78.6806%" y="581" width="0.0805%" height="15" fill="rgb(251,194,29)" fg:x="978" fg:w="1"/><text x="78.9306%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.6806%" y="565" width="0.0805%" height="15" fill="rgb(224,58,52)" fg:x="978" fg:w="1"/><text x="78.9306%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="78.7611%" y="517" width="0.0805%" height="15" fill="rgb(248,106,46)" fg:x="979" fg:w="1"/><text x="79.0111%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="78.7611%" y="501" width="0.0805%" height="15" fill="rgb(223,80,29)" fg:x="979" fg:w="1"/><text x="79.0111%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="78.7611%" y="485" width="0.0805%" height="15" fill="rgb(243,137,9)" fg:x="979" fg:w="1"/><text x="79.0111%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.7611%" y="469" width="0.0805%" height="15" fill="rgb(235,121,28)" fg:x="979" fg:w="1"/><text x="79.0111%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="78.7611%" y="549" width="0.2414%" height="15" fill="rgb(219,121,41)" fg:x="979" fg:w="3"/><text x="79.0111%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="78.7611%" y="533" width="0.2414%" height="15" fill="rgb(251,60,6)" fg:x="979" fg:w="3"/><text x="79.0111%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="78.8415%" y="517" width="0.1609%" height="15" fill="rgb(208,12,30)" fg:x="980" fg:w="2"/><text x="79.0915%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="78.8415%" y="501" width="0.1609%" height="15" fill="rgb(207,176,36)" fg:x="980" fg:w="2"/><text x="79.0915%" y="511.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="78.8415%" y="485" width="0.1609%" height="15" fill="rgb(211,188,29)" fg:x="980" fg:w="2"/><text x="79.0915%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="78.8415%" y="469" width="0.1609%" height="15" fill="rgb(220,184,37)" fg:x="980" fg:w="2"/><text x="79.0915%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.9220%" y="453" width="0.0805%" height="15" fill="rgb(239,87,37)" fg:x="981" fg:w="1"/><text x="79.1720%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="79.0024%" y="533" width="0.0805%" height="15" fill="rgb(232,113,44)" fg:x="982" fg:w="1"/><text x="79.2524%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="79.0024%" y="517" width="0.0805%" height="15" fill="rgb(246,25,39)" fg:x="982" fg:w="1"/><text x="79.2524%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="79.0024%" y="501" width="0.0805%" height="15" fill="rgb(247,30,13)" fg:x="982" fg:w="1"/><text x="79.2524%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.0024%" y="485" width="0.0805%" height="15" fill="rgb(230,176,35)" fg:x="982" fg:w="1"/><text x="79.2524%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="78.7611%" y="565" width="0.5632%" height="15" fill="rgb(222,23,18)" fg:x="979" fg:w="7"/><text x="79.0111%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="79.0024%" y="549" width="0.3218%" height="15" fill="rgb(234,86,8)" fg:x="982" fg:w="4"/><text x="79.2524%" y="559.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="79.0829%" y="533" width="0.2414%" height="15" fill="rgb(206,218,47)" fg:x="983" fg:w="3"/><text x="79.3329%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="79.2438%" y="517" width="0.0805%" height="15" fill="rgb(229,35,31)" fg:x="985" fg:w="1"/><text x="79.4938%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.2438%" y="501" width="0.0805%" height="15" fill="rgb(242,81,7)" fg:x="985" fg:w="1"/><text x="79.4938%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.4851%" y="533" width="0.0805%" height="15" fill="rgb(231,11,35)" fg:x="988" fg:w="1"/><text x="79.7351%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.4851%" y="517" width="0.0805%" height="15" fill="rgb(219,218,17)" fg:x="988" fg:w="1"/><text x="79.7351%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.4851%" y="501" width="0.0805%" height="15" fill="rgb(221,83,32)" fg:x="988" fg:w="1"/><text x="79.7351%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.4851%" y="485" width="0.0805%" height="15" fill="rgb(233,49,54)" fg:x="988" fg:w="1"/><text x="79.7351%" y="495.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="78.7611%" y="597" width="0.8850%" height="15" fill="rgb(206,18,51)" fg:x="979" fg:w="11"/><text x="79.0111%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="78.7611%" y="581" width="0.8850%" height="15" fill="rgb(249,193,15)" fg:x="979" fg:w="11"/><text x="79.0111%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="79.3242%" y="565" width="0.3218%" height="15" fill="rgb(245,186,19)" fg:x="986" fg:w="4"/><text x="79.5742%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="79.4047%" y="549" width="0.2414%" height="15" fill="rgb(230,4,24)" fg:x="987" fg:w="3"/><text x="79.6547%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="79.5656%" y="533" width="0.0805%" height="15" fill="rgb(234,75,27)" fg:x="989" fg:w="1"/><text x="79.8156%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6460%" y="597" width="0.0805%" height="15" fill="rgb(244,187,35)" fg:x="990" fg:w="1"/><text x="79.8960%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="79.6460%" y="581" width="0.0805%" height="15" fill="rgb(241,97,43)" fg:x="990" fg:w="1"/><text x="79.8960%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6460%" y="565" width="0.0805%" height="15" fill="rgb(236,94,2)" fg:x="990" fg:w="1"/><text x="79.8960%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.6460%" y="549" width="0.0805%" height="15" fill="rgb(231,175,7)" fg:x="990" fg:w="1"/><text x="79.8960%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.6460%" y="533" width="0.0805%" height="15" fill="rgb(236,89,47)" fg:x="990" fg:w="1"/><text x="79.8960%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8069%" y="549" width="0.0805%" height="15" fill="rgb(213,191,37)" fg:x="992" fg:w="1"/><text x="80.0569%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="79.8069%" y="533" width="0.0805%" height="15" fill="rgb(252,0,34)" fg:x="992" fg:w="1"/><text x="80.0569%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8874%" y="549" width="0.0805%" height="15" fill="rgb(208,145,44)" fg:x="993" fg:w="1"/><text x="80.1374%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.8874%" y="533" width="0.0805%" height="15" fill="rgb(227,95,50)" fg:x="993" fg:w="1"/><text x="80.1374%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="79.8874%" y="517" width="0.0805%" height="15" fill="rgb(222,136,24)" fg:x="993" fg:w="1"/><text x="80.1374%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="79.8874%" y="501" width="0.0805%" height="15" fill="rgb(218,105,10)" fg:x="993" fg:w="1"/><text x="80.1374%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.8874%" y="485" width="0.0805%" height="15" fill="rgb(216,65,28)" fg:x="993" fg:w="1"/><text x="80.1374%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.8874%" y="469" width="0.0805%" height="15" fill="rgb(229,6,28)" fg:x="993" fg:w="1"/><text x="80.1374%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.9678%" y="501" width="0.0805%" height="15" fill="rgb(222,160,42)" fg:x="994" fg:w="1"/><text x="80.2178%" y="511.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (18 samples, 1.45%)</title><rect x="78.7611%" y="629" width="1.4481%" height="15" fill="rgb(235,83,49)" fg:x="979" fg:w="18"/><text x="79.0111%" y="639.50"></text></g><g><title>engine::session::Session::check_for_changes (18 samples, 1.45%)</title><rect x="78.7611%" y="613" width="1.4481%" height="15" fill="rgb(236,86,36)" fg:x="979" fg:w="18"/><text x="79.0111%" y="623.50"></text></g><g><title>kernel::compare::any_entity_changes (6 samples, 0.48%)</title><rect x="79.7265%" y="597" width="0.4827%" height="15" fill="rgb(236,19,41)" fg:x="991" fg:w="6"/><text x="79.9765%" y="607.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (6 samples, 0.48%)</title><rect x="79.7265%" y="581" width="0.4827%" height="15" fill="rgb(217,71,31)" fg:x="991" fg:w="6"/><text x="79.9765%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="79.8069%" y="565" width="0.4023%" height="15" fill="rgb(236,209,25)" fg:x="992" fg:w="5"/><text x="80.0569%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="79.9678%" y="549" width="0.2414%" height="15" fill="rgb(247,104,21)" fg:x="994" fg:w="3"/><text x="80.2178%" y="559.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="79.9678%" y="533" width="0.2414%" height="15" fill="rgb(243,80,38)" fg:x="994" fg:w="3"/><text x="80.2178%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="79.9678%" y="517" width="0.2414%" height="15" fill="rgb(232,109,38)" fg:x="994" fg:w="3"/><text x="80.2178%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="80.0483%" y="501" width="0.1609%" height="15" fill="rgb(212,177,53)" fg:x="995" fg:w="2"/><text x="80.2983%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.0483%" y="485" width="0.1609%" height="15" fill="rgb(227,30,34)" fg:x="995" fg:w="2"/><text x="80.2983%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.0483%" y="469" width="0.1609%" height="15" fill="rgb(205,175,25)" fg:x="995" fg:w="2"/><text x="80.2983%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.0483%" y="453" width="0.1609%" height="15" fill="rgb(249,39,54)" fg:x="995" fg:w="2"/><text x="80.2983%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.1287%" y="437" width="0.0805%" height="15" fill="rgb(215,54,37)" fg:x="996" fg:w="1"/><text x="80.3787%" y="447.50"></text></g><g><title>engine::session::Session::flush (21 samples, 1.69%)</title><rect x="78.6002%" y="661" width="1.6895%" height="15" fill="rgb(205,60,46)" fg:x="977" fg:w="21"/><text x="78.8502%" y="671.50"></text></g><g><title>engine::session::Session::save_entity_changes (21 samples, 1.69%)</title><rect x="78.6002%" y="645" width="1.6895%" height="15" fill="rgb(238,89,29)" fg:x="977" fg:w="21"/><text x="78.8502%" y="655.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="80.2092%" y="629" width="0.0805%" height="15" fill="rgb(212,48,10)" fg:x="997" fg:w="1"/><text x="80.4592%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="80.2092%" y="613" width="0.0805%" height="15" fill="rgb(237,186,28)" fg:x="997" fg:w="1"/><text x="80.4592%" y="623.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="80.2092%" y="597" width="0.0805%" height="15" fill="rgb(237,204,4)" fg:x="997" fg:w="1"/><text x="80.4592%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="80.2896%" y="629" width="0.0805%" height="15" fill="rgb(237,15,47)" fg:x="998" fg:w="1"/><text x="80.5396%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::entity (1 samples, 0.08%)</title><rect x="80.2896%" y="613" width="0.0805%" height="15" fill="rgb(244,110,25)" fg:x="998" fg:w="1"/><text x="80.5396%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="80.2896%" y="661" width="0.1609%" height="15" fill="rgb(241,12,16)" fg:x="998" fg:w="2"/><text x="80.5396%" y="671.50"></text></g><g><title>plugins_core::tools::set_container (2 samples, 0.16%)</title><rect x="80.2896%" y="645" width="0.1609%" height="15" fill="rgb(235,25,9)" fg:x="998" fg:w="2"/><text x="80.5396%" y="655.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="80.3701%" y="629" width="0.0805%" height="15" fill="rgb(245,159,19)" fg:x="999" fg:w="1"/><text x="80.6201%" y="639.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="80.3701%" y="613" width="0.0805%" height="15" fill="rgb(236,63,32)" fg:x="999" fg:w="1"/><text x="80.6201%" y="623.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3701%" y="597" width="0.0805%" height="15" fill="rgb(235,32,52)" fg:x="999" fg:w="1"/><text x="80.6201%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.3701%" y="581" width="0.0805%" height="15" fill="rgb(209,176,21)" fg:x="999" fg:w="1"/><text x="80.6201%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="80.3701%" y="565" width="0.0805%" height="15" fill="rgb(205,90,42)" fg:x="999" fg:w="1"/><text x="80.6201%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.3701%" y="549" width="0.0805%" height="15" fill="rgb(213,132,16)" fg:x="999" fg:w="1"/><text x="80.6201%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3701%" y="533" width="0.0805%" height="15" fill="rgb(232,11,22)" fg:x="999" fg:w="1"/><text x="80.6201%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.3701%" y="517" width="0.0805%" height="15" fill="rgb(248,167,41)" fg:x="999" fg:w="1"/><text x="80.6201%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="80.3701%" y="501" width="0.0805%" height="15" fill="rgb(209,127,6)" fg:x="999" fg:w="1"/><text x="80.6201%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="80.4505%" y="645" width="0.0805%" height="15" fill="rgb(246,210,34)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.4505%" y="629" width="0.0805%" height="15" fill="rgb(238,165,13)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="639.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="80.4505%" y="613" width="0.0805%" height="15" fill="rgb(233,98,15)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="623.50"></text></g><g><title>plugins_core::build::Build::leads_to (1 samples, 0.08%)</title><rect x="80.4505%" y="597" width="0.0805%" height="15" fill="rgb(215,215,51)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="607.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="80.4505%" y="581" width="0.0805%" height="15" fill="rgb(217,161,25)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="80.4505%" y="565" width="0.0805%" height="15" fill="rgb(217,167,48)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="575.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="80.4505%" y="549" width="0.0805%" height="15" fill="rgb(205,163,34)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="559.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="80.4505%" y="533" width="0.0805%" height="15" fill="rgb(241,197,31)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="80.4505%" y="517" width="0.0805%" height="15" fill="rgb(225,123,11)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4505%" y="501" width="0.0805%" height="15" fill="rgb(217,4,20)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.4505%" y="485" width="0.0805%" height="15" fill="rgb(215,55,9)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.4505%" y="469" width="0.0805%" height="15" fill="rgb(218,165,5)" fg:x="1000" fg:w="1"/><text x="80.7005%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="80.5310%" y="613" width="0.0805%" height="15" fill="rgb(222,175,15)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="80.5310%" y="597" width="0.0805%" height="15" fill="rgb(223,85,34)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.5310%" y="581" width="0.0805%" height="15" fill="rgb(234,228,29)" fg:x="1001" fg:w="1"/><text x="80.7810%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7723%" y="549" width="0.0805%" height="15" fill="rgb(239,7,28)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.7723%" y="533" width="0.0805%" height="15" fill="rgb(252,222,53)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.7723%" y="517" width="0.0805%" height="15" fill="rgb(232,146,44)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.7723%" y="501" width="0.0805%" height="15" fill="rgb(243,223,53)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="80.7723%" y="485" width="0.0805%" height="15" fill="rgb(219,128,25)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="80.7723%" y="469" width="0.0805%" height="15" fill="rgb(223,56,32)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="479.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="80.7723%" y="453" width="0.0805%" height="15" fill="rgb(237,41,3)" fg:x="1004" fg:w="1"/><text x="81.0223%" y="463.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.7723%" y="565" width="0.1609%" height="15" fill="rgb(235,138,9)" fg:x="1004" fg:w="2"/><text x="81.0223%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8528%" y="549" width="0.0805%" height="15" fill="rgb(214,131,10)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.8528%" y="533" width="0.0805%" height="15" fill="rgb(229,89,7)" fg:x="1005" fg:w="1"/><text x="81.1028%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0137%" y="549" width="0.0805%" height="15" fill="rgb(240,24,42)" fg:x="1007" fg:w="1"/><text x="81.2637%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0137%" y="533" width="0.0805%" height="15" fill="rgb(243,188,54)" fg:x="1007" fg:w="1"/><text x="81.2637%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0137%" y="517" width="0.0805%" height="15" fill="rgb(246,92,22)" fg:x="1007" fg:w="1"/><text x="81.2637%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0137%" y="501" width="0.0805%" height="15" fill="rgb(211,176,51)" fg:x="1007" fg:w="1"/><text x="81.2637%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.0941%" y="533" width="0.0805%" height="15" fill="rgb(246,207,34)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.0941%" y="517" width="0.0805%" height="15" fill="rgb(239,95,2)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.0941%" y="501" width="0.0805%" height="15" fill="rgb(211,124,25)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.0941%" y="485" width="0.0805%" height="15" fill="rgb(231,221,19)" fg:x="1008" fg:w="1"/><text x="81.3441%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.1746%" y="517" width="0.0805%" height="15" fill="rgb(239,183,19)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="527.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.2550%" y="501" width="0.0805%" height="15" fill="rgb(221,130,29)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="511.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.2550%" y="485" width="0.0805%" height="15" fill="rgb(206,130,36)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="495.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.2550%" y="469" width="0.0805%" height="15" fill="rgb(215,70,19)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="81.2550%" y="453" width="0.0805%" height="15" fill="rgb(244,16,43)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="463.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.2550%" y="517" width="0.1609%" height="15" fill="rgb(222,115,32)" fg:x="1010" fg:w="2"/><text x="81.5050%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.3355%" y="501" width="0.0805%" height="15" fill="rgb(247,48,25)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="511.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.72%)</title><rect x="80.7723%" y="581" width="0.7241%" height="15" fill="rgb(226,180,51)" fg:x="1004" fg:w="9"/><text x="81.0223%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="80.9332%" y="565" width="0.5632%" height="15" fill="rgb(217,142,42)" fg:x="1006" fg:w="7"/><text x="81.1832%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.0941%" y="549" width="0.4023%" height="15" fill="rgb(220,178,3)" fg:x="1008" fg:w="5"/><text x="81.3441%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="81.1746%" y="533" width="0.3218%" height="15" fill="rgb(217,221,4)" fg:x="1009" fg:w="4"/><text x="81.4246%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.4159%" y="517" width="0.0805%" height="15" fill="rgb(237,63,43)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.4159%" y="501" width="0.0805%" height="15" fill="rgb(220,57,8)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="511.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="81.4964%" y="581" width="0.0805%" height="15" fill="rgb(254,186,27)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="501" width="0.0805%" height="15" fill="rgb(251,57,28)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="81.5768%" y="485" width="0.0805%" height="15" fill="rgb(215,228,0)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.5768%" y="469" width="0.0805%" height="15" fill="rgb(237,218,39)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5768%" y="581" width="0.1609%" height="15" fill="rgb(207,2,54)" fg:x="1014" fg:w="2"/><text x="81.8268%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.5768%" y="565" width="0.1609%" height="15" fill="rgb(232,76,50)" fg:x="1014" fg:w="2"/><text x="81.8268%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5768%" y="549" width="0.1609%" height="15" fill="rgb(211,85,31)" fg:x="1014" fg:w="2"/><text x="81.8268%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5768%" y="533" width="0.1609%" height="15" fill="rgb(223,210,27)" fg:x="1014" fg:w="2"/><text x="81.8268%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.5768%" y="517" width="0.1609%" height="15" fill="rgb(254,36,8)" fg:x="1014" fg:w="2"/><text x="81.8268%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.6573%" y="501" width="0.0805%" height="15" fill="rgb(213,4,25)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.6573%" y="485" width="0.0805%" height="15" fill="rgb(224,2,39)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7377%" y="533" width="0.0805%" height="15" fill="rgb(208,8,39)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="81.7377%" y="517" width="0.0805%" height="15" fill="rgb(216,226,3)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="81.8182%" y="517" width="0.0805%" height="15" fill="rgb(249,139,31)" fg:x="1017" fg:w="1"/><text x="82.0682%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9791%" y="453" width="0.0805%" height="15" fill="rgb(242,170,35)" fg:x="1019" fg:w="1"/><text x="82.2291%" y="463.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (5 samples, 0.40%)</title><rect x="81.8182%" y="533" width="0.4023%" height="15" fill="rgb(238,14,9)" fg:x="1017" fg:w="5"/><text x="82.0682%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="81.8986%" y="517" width="0.3218%" height="15" fill="rgb(251,81,46)" fg:x="1018" fg:w="4"/><text x="82.1486%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.32%)</title><rect x="81.8986%" y="501" width="0.3218%" height="15" fill="rgb(230,23,4)" fg:x="1018" fg:w="4"/><text x="82.1486%" y="511.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="81.9791%" y="485" width="0.2414%" height="15" fill="rgb(211,85,25)" fg:x="1019" fg:w="3"/><text x="82.2291%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="81.9791%" y="469" width="0.2414%" height="15" fill="rgb(252,23,31)" fg:x="1019" fg:w="3"/><text x="82.2291%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0595%" y="453" width="0.1609%" height="15" fill="rgb(234,163,38)" fg:x="1020" fg:w="2"/><text x="82.3095%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.0595%" y="437" width="0.1609%" height="15" fill="rgb(210,190,50)" fg:x="1020" fg:w="2"/><text x="82.3095%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1400%" y="421" width="0.0805%" height="15" fill="rgb(228,158,3)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="431.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.2204%" y="485" width="0.0805%" height="15" fill="rgb(216,130,0)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="495.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2204%" y="469" width="0.0805%" height="15" fill="rgb(224,184,10)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="82.2204%" y="453" width="0.0805%" height="15" fill="rgb(214,202,18)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.2204%" y="437" width="0.0805%" height="15" fill="rgb(213,229,54)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="447.50"></text></g><g><title>engine::session::Session::flush (23 samples, 1.85%)</title><rect x="80.5310%" y="645" width="1.8504%" height="15" fill="rgb(246,120,0)" fg:x="1001" fg:w="23"/><text x="80.7810%" y="655.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (23 samples, 1.85%)</title><rect x="80.5310%" y="629" width="1.8504%" height="15" fill="rgb(237,6,15)" fg:x="1001" fg:w="23"/><text x="80.7810%" y="639.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (22 samples, 1.77%)</title><rect x="80.6114%" y="613" width="1.7699%" height="15" fill="rgb(252,156,15)" fg:x="1002" fg:w="22"/><text x="80.8614%" y="623.50"></text></g><g><title>engine::session::Session::check_for_changes (22 samples, 1.77%)</title><rect x="80.6114%" y="597" width="1.7699%" height="15" fill="rgb(249,78,18)" fg:x="1002" fg:w="22"/><text x="80.8614%" y="607.50"></text></g><g><title>kernel::compare::any_entity_changes (8 samples, 0.64%)</title><rect x="81.7377%" y="581" width="0.6436%" height="15" fill="rgb(230,223,44)" fg:x="1016" fg:w="8"/><text x="81.9877%" y="591.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="81.7377%" y="565" width="0.6436%" height="15" fill="rgb(230,222,32)" fg:x="1016" fg:w="8"/><text x="81.9877%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="81.7377%" y="549" width="0.6436%" height="15" fill="rgb(247,54,6)" fg:x="1016" fg:w="8"/><text x="81.9877%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="82.2204%" y="533" width="0.1609%" height="15" fill="rgb(247,115,45)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (2 samples, 0.16%)</title><rect x="82.2204%" y="517" width="0.1609%" height="15" fill="rgb(213,203,37)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.2204%" y="501" width="0.1609%" height="15" fill="rgb(248,188,18)" fg:x="1022" fg:w="2"/><text x="82.4704%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.3009%" y="485" width="0.0805%" height="15" fill="rgb(206,80,8)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.3009%" y="469" width="0.0805%" height="15" fill="rgb(245,217,31)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="479.50"></text></g><g><title>kernel::model::EntityPtr::set_key (1 samples, 0.08%)</title><rect x="82.3813%" y="645" width="0.0805%" height="15" fill="rgb(220,193,15)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="655.50"></text></g><g><title>kernel::model::EntityPtr::modified (1 samples, 0.08%)</title><rect x="82.3813%" y="629" width="0.0805%" height="15" fill="rgb(226,7,19)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3813%" y="613" width="0.0805%" height="15" fill="rgb(222,145,31)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3813%" y="597" width="0.0805%" height="15" fill="rgb(241,193,36)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3813%" y="581" width="0.0805%" height="15" fill="rgb(225,123,33)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3813%" y="565" width="0.0805%" height="15" fill="rgb(246,136,38)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3813%" y="549" width="0.0805%" height="15" fill="rgb(243,56,24)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3813%" y="533" width="0.0805%" height="15" fill="rgb(215,147,2)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3813%" y="517" width="0.0805%" height="15" fill="rgb(209,155,27)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3813%" y="501" width="0.0805%" height="15" fill="rgb(222,177,11)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3813%" y="485" width="0.0805%" height="15" fill="rgb(212,227,15)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3813%" y="469" width="0.0805%" height="15" fill="rgb(214,138,20)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3813%" y="453" width="0.0805%" height="15" fill="rgb(221,170,31)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3813%" y="437" width="0.0805%" height="15" fill="rgb(253,207,5)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="447.50"></text></g><g><title>plugins_core::build::Build::holding (2 samples, 0.16%)</title><rect x="82.4618%" y="645" width="0.1609%" height="15" fill="rgb(212,64,37)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.4618%" y="629" width="0.1609%" height="15" fill="rgb(208,113,51)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.4618%" y="613" width="0.1609%" height="15" fill="rgb(237,15,5)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="623.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="82.4618%" y="597" width="0.1609%" height="15" fill="rgb(238,33,18)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.4618%" y="581" width="0.1609%" height="15" fill="rgb(253,206,50)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.4618%" y="565" width="0.1609%" height="15" fill="rgb(242,158,43)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="82.4618%" y="549" width="0.1609%" height="15" fill="rgb(213,125,27)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.4618%" y="533" width="0.1609%" height="15" fill="rgb(233,161,31)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="543.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.6227%" y="645" width="0.0805%" height="15" fill="rgb(218,135,6)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.6227%" y="629" width="0.0805%" height="15" fill="rgb(222,73,53)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="639.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.6227%" y="613" width="0.0805%" height="15" fill="rgb(229,66,53)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6227%" y="597" width="0.0805%" height="15" fill="rgb(208,128,19)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6227%" y="581" width="0.0805%" height="15" fill="rgb(235,70,27)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="591.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="82.7031%" y="645" width="0.0805%" height="15" fill="rgb(241,130,30)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="655.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (54 samples, 4.34%)</title><rect x="78.5197%" y="677" width="4.3443%" height="15" fill="rgb(222,57,48)" fg:x="976" fg:w="54"/><text x="78.7697%" y="687.50">&lt;test..</text></g><g><title>plugins_core::build::BuildSurroundings::build (30 samples, 2.41%)</title><rect x="80.4505%" y="661" width="2.4135%" height="15" fill="rgb(225,204,29)" fg:x="1000" fg:w="30"/><text x="80.7005%" y="671.50">pl..</text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="82.7836%" y="645" width="0.0805%" height="15" fill="rgb(240,196,35)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="655.50"></text></g><g><title>plugins_core::tools::set_occupying (1 samples, 0.08%)</title><rect x="82.7836%" y="629" width="0.0805%" height="15" fill="rgb(215,150,16)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="639.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="82.7836%" y="613" width="0.0805%" height="15" fill="rgb(209,170,13)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.7836%" y="597" width="0.0805%" height="15" fill="rgb(235,75,31)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="607.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.7836%" y="581" width="0.0805%" height="15" fill="rgb(252,1,47)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7836%" y="565" width="0.0805%" height="15" fill="rgb(241,2,36)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7836%" y="549" width="0.0805%" height="15" fill="rgb(236,191,4)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7836%" y="533" width="0.0805%" height="15" fill="rgb(212,65,35)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7836%" y="517" width="0.0805%" height="15" fill="rgb(209,49,33)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7836%" y="501" width="0.0805%" height="15" fill="rgb(208,36,46)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7836%" y="485" width="0.0805%" height="15" fill="rgb(210,125,2)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7836%" y="469" width="0.0805%" height="15" fill="rgb(225,62,6)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7836%" y="453" width="0.0805%" height="15" fill="rgb(210,54,27)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7836%" y="437" width="0.0805%" height="15" fill="rgb(249,189,52)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7836%" y="421" width="0.0805%" height="15" fill="rgb(225,134,40)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7836%" y="405" width="0.0805%" height="15" fill="rgb(206,13,37)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7836%" y="389" width="0.0805%" height="15" fill="rgb(232,114,28)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9445%" y="597" width="0.0805%" height="15" fill="rgb(253,215,8)" fg:x="1031" fg:w="1"/><text x="83.1945%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9445%" y="581" width="0.0805%" height="15" fill="rgb(254,64,19)" fg:x="1031" fg:w="1"/><text x="83.1945%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0249%" y="565" width="0.0805%" height="15" fill="rgb(242,18,46)" fg:x="1032" fg:w="1"/><text x="83.2749%" y="575.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="83.1054%" y="533" width="0.0805%" height="15" fill="rgb(239,192,30)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.1054%" y="517" width="0.0805%" height="15" fill="rgb(232,73,14)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.1054%" y="501" width="0.0805%" height="15" fill="rgb(225,51,9)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="83.1054%" y="565" width="0.1609%" height="15" fill="rgb(242,217,54)" fg:x="1033" fg:w="2"/><text x="83.3554%" y="575.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="83.1054%" y="549" width="0.1609%" height="15" fill="rgb(216,93,3)" fg:x="1033" fg:w="2"/><text x="83.3554%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.1858%" y="533" width="0.0805%" height="15" fill="rgb(230,119,33)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="543.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (6 samples, 0.48%)</title><rect x="82.8640%" y="661" width="0.4827%" height="15" fill="rgb(238,170,27)" fg:x="1030" fg:w="6"/><text x="83.1140%" y="671.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="82.8640%" y="645" width="0.4827%" height="15" fill="rgb(229,8,2)" fg:x="1030" fg:w="6"/><text x="83.1140%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.48%)</title><rect x="82.8640%" y="629" width="0.4827%" height="15" fill="rgb(205,214,42)" fg:x="1030" fg:w="6"/><text x="83.1140%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="82.9445%" y="613" width="0.4023%" height="15" fill="rgb(245,113,1)" fg:x="1031" fg:w="5"/><text x="83.1945%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="83.0249%" y="597" width="0.3218%" height="15" fill="rgb(252,50,2)" fg:x="1032" fg:w="4"/><text x="83.2749%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="83.0249%" y="581" width="0.3218%" height="15" fill="rgb(225,122,24)" fg:x="1032" fg:w="4"/><text x="83.2749%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.2663%" y="565" width="0.0805%" height="15" fill="rgb(234,129,31)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.2663%" y="549" width="0.0805%" height="15" fill="rgb(219,177,4)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="83.2663%" y="533" width="0.0805%" height="15" fill="rgb(225,142,27)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="83.2663%" y="517" width="0.0805%" height="15" fill="rgb(205,107,51)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="83.2663%" y="501" width="0.0805%" height="15" fill="rgb(236,223,15)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.3467%" y="645" width="0.0805%" height="15" fill="rgb(235,133,11)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.3467%" y="629" width="0.0805%" height="15" fill="rgb(247,172,13)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3467%" y="613" width="0.0805%" height="15" fill="rgb(233,191,41)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.3467%" y="597" width="0.0805%" height="15" fill="rgb(250,65,16)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4272%" y="629" width="0.0805%" height="15" fill="rgb(206,10,27)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.4272%" y="613" width="0.0805%" height="15" fill="rgb(212,96,22)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.4272%" y="597" width="0.0805%" height="15" fill="rgb(206,50,0)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.4272%" y="581" width="0.0805%" height="15" fill="rgb(249,105,52)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.4272%" y="565" width="0.0805%" height="15" fill="rgb(216,93,51)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4272%" y="549" width="0.0805%" height="15" fill="rgb(217,172,13)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.4272%" y="533" width="0.0805%" height="15" fill="rgb(235,199,38)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.4272%" y="517" width="0.0805%" height="15" fill="rgb(221,97,33)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.4272%" y="501" width="0.0805%" height="15" fill="rgb(205,156,50)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.4272%" y="485" width="0.0805%" height="15" fill="rgb(215,142,19)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.4272%" y="469" width="0.0805%" height="15" fill="rgb(232,170,7)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4272%" y="453" width="0.0805%" height="15" fill="rgb(223,50,17)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="83.4272%" y="645" width="0.1609%" height="15" fill="rgb(230,103,46)" fg:x="1037" fg:w="2"/><text x="83.6772%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5076%" y="629" width="0.0805%" height="15" fill="rgb(254,30,34)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5076%" y="613" width="0.0805%" height="15" fill="rgb(235,198,1)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="623.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="83.5881%" y="645" width="0.0805%" height="15" fill="rgb(217,105,47)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="83.5881%" y="629" width="0.0805%" height="15" fill="rgb(231,18,12)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="639.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="83.5881%" y="613" width="0.0805%" height="15" fill="rgb(218,196,1)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.5881%" y="597" width="0.0805%" height="15" fill="rgb(210,32,3)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="83.6685%" y="629" width="0.0805%" height="15" fill="rgb(227,178,30)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.6685%" y="613" width="0.0805%" height="15" fill="rgb(231,140,27)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.6685%" y="597" width="0.0805%" height="15" fill="rgb(206,66,35)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.9099%" y="581" width="0.0805%" height="15" fill="rgb(212,34,2)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.9099%" y="565" width="0.0805%" height="15" fill="rgb(207,201,33)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.9099%" y="549" width="0.0805%" height="15" fill="rgb(221,135,32)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.9099%" y="533" width="0.0805%" height="15" fill="rgb(206,77,31)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.9099%" y="517" width="0.0805%" height="15" fill="rgb(252,198,50)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.9099%" y="501" width="0.0805%" height="15" fill="rgb(206,79,27)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.9099%" y="485" width="0.0805%" height="15" fill="rgb(228,108,9)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.9903%" y="565" width="0.0805%" height="15" fill="rgb(213,9,39)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.0708%" y="565" width="0.0805%" height="15" fill="rgb(252,51,13)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0708%" y="549" width="0.0805%" height="15" fill="rgb(218,202,39)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="84.0708%" y="533" width="0.0805%" height="15" fill="rgb(214,122,21)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.0708%" y="517" width="0.0805%" height="15" fill="rgb(217,205,48)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="527.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.0708%" y="501" width="0.0805%" height="15" fill="rgb(230,216,13)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="511.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.0708%" y="485" width="0.0805%" height="15" fill="rgb(249,118,4)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="84.0708%" y="469" width="0.0805%" height="15" fill="rgb(212,207,40)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="479.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.1512%" y="565" width="0.1609%" height="15" fill="rgb(217,156,26)" fg:x="1046" fg:w="2"/><text x="84.4012%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.2317%" y="549" width="0.0805%" height="15" fill="rgb(226,86,34)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="84.3121%" y="533" width="0.2414%" height="15" fill="rgb(217,111,30)" fg:x="1048" fg:w="3"/><text x="84.5621%" y="543.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.3926%" y="517" width="0.1609%" height="15" fill="rgb(228,64,18)" fg:x="1049" fg:w="2"/><text x="84.6426%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.4730%" y="501" width="0.0805%" height="15" fill="rgb(254,217,48)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.4730%" y="485" width="0.0805%" height="15" fill="rgb(226,156,48)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="84.3121%" y="549" width="0.3218%" height="15" fill="rgb(236,168,20)" fg:x="1048" fg:w="4"/><text x="84.5621%" y="559.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5535%" y="533" width="0.0805%" height="15" fill="rgb(239,210,33)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="543.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5535%" y="517" width="0.0805%" height="15" fill="rgb(242,85,17)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5535%" y="501" width="0.0805%" height="15" fill="rgb(221,196,15)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="83.9903%" y="581" width="0.7241%" height="15" fill="rgb(249,76,21)" fg:x="1044" fg:w="9"/><text x="84.2403%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="84.3121%" y="565" width="0.4023%" height="15" fill="rgb(243,67,29)" fg:x="1048" fg:w="5"/><text x="84.5621%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.6340%" y="549" width="0.0805%" height="15" fill="rgb(240,159,2)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.6340%" y="533" width="0.0805%" height="15" fill="rgb(244,64,3)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="84.6340%" y="517" width="0.0805%" height="15" fill="rgb(220,86,40)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="83.8294%" y="613" width="0.9654%" height="15" fill="rgb(222,194,51)" fg:x="1042" fg:w="12"/><text x="84.0794%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="83.8294%" y="597" width="0.9654%" height="15" fill="rgb(207,154,19)" fg:x="1042" fg:w="12"/><text x="84.0794%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.7144%" y="581" width="0.0805%" height="15" fill="rgb(206,178,36)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.7949%" y="581" width="0.0805%" height="15" fill="rgb(218,8,24)" fg:x="1054" fg:w="1"/><text x="85.0449%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.7949%" y="613" width="0.1609%" height="15" fill="rgb(226,83,41)" fg:x="1054" fg:w="2"/><text x="85.0449%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="84.7949%" y="597" width="0.1609%" height="15" fill="rgb(224,23,22)" fg:x="1054" fg:w="2"/><text x="85.0449%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8753%" y="581" width="0.0805%" height="15" fill="rgb(218,198,45)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.8753%" y="565" width="0.0805%" height="15" fill="rgb(249,147,41)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.8753%" y="549" width="0.0805%" height="15" fill="rgb(244,224,13)" fg:x="1055" fg:w="1"/><text x="85.1253%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.9558%" y="597" width="0.0805%" height="15" fill="rgb(225,97,27)" fg:x="1056" fg:w="1"/><text x="85.2058%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0362%" y="597" width="0.0805%" height="15" fill="rgb(254,64,0)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.0362%" y="581" width="0.0805%" height="15" fill="rgb(208,130,43)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.0362%" y="565" width="0.0805%" height="15" fill="rgb(247,91,25)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.0362%" y="549" width="0.0805%" height="15" fill="rgb(215,218,42)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.0362%" y="533" width="0.0805%" height="15" fill="rgb(233,9,24)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="85.1167%" y="597" width="0.0805%" height="15" fill="rgb(252,105,38)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.1167%" y="581" width="0.0805%" height="15" fill="rgb(225,40,49)" fg:x="1058" fg:w="1"/><text x="85.3667%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1971%" y="565" width="0.0805%" height="15" fill="rgb(232,196,19)" fg:x="1059" fg:w="1"/><text x="85.4471%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="85.2776%" y="565" width="0.1609%" height="15" fill="rgb(207,35,15)" fg:x="1060" fg:w="2"/><text x="85.5276%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.3580%" y="549" width="0.0805%" height="15" fill="rgb(238,68,36)" fg:x="1061" fg:w="1"/><text x="85.6080%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.3580%" y="533" width="0.0805%" height="15" fill="rgb(205,158,20)" fg:x="1061" fg:w="1"/><text x="85.6080%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5189%" y="549" width="0.0805%" height="15" fill="rgb(232,32,22)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5189%" y="533" width="0.0805%" height="15" fill="rgb(210,169,6)" fg:x="1063" fg:w="1"/><text x="85.7689%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="85.5994%" y="517" width="0.1609%" height="15" fill="rgb(229,28,12)" fg:x="1064" fg:w="2"/><text x="85.8494%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="85.5994%" y="501" width="0.1609%" height="15" fill="rgb(229,78,10)" fg:x="1064" fg:w="2"/><text x="85.8494%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.6798%" y="485" width="0.0805%" height="15" fill="rgb(223,139,54)" fg:x="1065" fg:w="1"/><text x="85.9298%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (8 samples, 0.64%)</title><rect x="85.1971%" y="597" width="0.6436%" height="15" fill="rgb(207,110,4)" fg:x="1059" fg:w="8"/><text x="85.4471%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.64%)</title><rect x="85.1971%" y="581" width="0.6436%" height="15" fill="rgb(248,30,41)" fg:x="1059" fg:w="8"/><text x="85.4471%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="85.4385%" y="565" width="0.4023%" height="15" fill="rgb(235,54,25)" fg:x="1062" fg:w="5"/><text x="85.6885%" y="575.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (3 samples, 0.24%)</title><rect x="85.5994%" y="549" width="0.2414%" height="15" fill="rgb(213,107,41)" fg:x="1064" fg:w="3"/><text x="85.8494%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="85.5994%" y="533" width="0.2414%" height="15" fill="rgb(237,102,9)" fg:x="1064" fg:w="3"/><text x="85.8494%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7603%" y="517" width="0.0805%" height="15" fill="rgb(252,137,49)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="85.7603%" y="501" width="0.0805%" height="15" fill="rgb(233,202,33)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7603%" y="485" width="0.0805%" height="15" fill="rgb(223,14,51)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7603%" y="469" width="0.0805%" height="15" fill="rgb(248,70,23)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.7603%" y="453" width="0.0805%" height="15" fill="rgb(209,207,47)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="85.8407%" y="437" width="0.0805%" height="15" fill="rgb(245,124,2)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.8407%" y="421" width="0.0805%" height="15" fill="rgb(249,208,11)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.8407%" y="501" width="0.1609%" height="15" fill="rgb(247,112,7)" fg:x="1067" fg:w="2"/><text x="86.0907%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.8407%" y="485" width="0.1609%" height="15" fill="rgb(209,192,31)" fg:x="1067" fg:w="2"/><text x="86.0907%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="85.8407%" y="469" width="0.1609%" height="15" fill="rgb(236,55,19)" fg:x="1067" fg:w="2"/><text x="86.0907%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="85.8407%" y="453" width="0.1609%" height="15" fill="rgb(252,89,41)" fg:x="1067" fg:w="2"/><text x="86.0907%" y="463.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.9212%" y="437" width="0.0805%" height="15" fill="rgb(220,172,14)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="447.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="85.9212%" y="421" width="0.0805%" height="15" fill="rgb(252,65,2)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="85.8407%" y="533" width="0.2414%" height="15" fill="rgb(250,20,8)" fg:x="1067" fg:w="3"/><text x="86.0907%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="85.8407%" y="517" width="0.2414%" height="15" fill="rgb(234,149,13)" fg:x="1067" fg:w="3"/><text x="86.0907%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="86.0016%" y="501" width="0.0805%" height="15" fill="rgb(223,219,12)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="86.0016%" y="485" width="0.0805%" height="15" fill="rgb(234,13,49)" fg:x="1069" fg:w="1"/><text x="86.2516%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="86.0821%" y="533" width="0.1609%" height="15" fill="rgb(214,41,25)" fg:x="1070" fg:w="2"/><text x="86.3321%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="86.0821%" y="517" width="0.1609%" height="15" fill="rgb(232,198,52)" fg:x="1070" fg:w="2"/><text x="86.3321%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="85.8407%" y="597" width="0.4827%" height="15" fill="rgb(236,111,46)" fg:x="1067" fg:w="6"/><text x="86.0907%" y="607.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="85.8407%" y="581" width="0.4827%" height="15" fill="rgb(253,30,20)" fg:x="1067" fg:w="6"/><text x="86.0907%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="85.8407%" y="565" width="0.4827%" height="15" fill="rgb(247,141,17)" fg:x="1067" fg:w="6"/><text x="86.0907%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="85.8407%" y="549" width="0.4827%" height="15" fill="rgb(214,195,21)" fg:x="1067" fg:w="6"/><text x="86.0907%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.2430%" y="533" width="0.0805%" height="15" fill="rgb(214,98,12)" fg:x="1072" fg:w="1"/><text x="86.4930%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="86.3234%" y="581" width="0.2414%" height="15" fill="rgb(239,4,26)" fg:x="1073" fg:w="3"/><text x="86.5734%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="86.3234%" y="565" width="0.2414%" height="15" fill="rgb(234,210,35)" fg:x="1073" fg:w="3"/><text x="86.5734%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="86.4039%" y="549" width="0.1609%" height="15" fill="rgb(252,178,27)" fg:x="1074" fg:w="2"/><text x="86.6539%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="86.4039%" y="533" width="0.1609%" height="15" fill="rgb(217,50,1)" fg:x="1074" fg:w="2"/><text x="86.6539%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.5648%" y="581" width="0.0805%" height="15" fill="rgb(233,137,5)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.5648%" y="565" width="0.0805%" height="15" fill="rgb(217,227,25)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.6452%" y="581" width="0.0805%" height="15" fill="rgb(242,89,38)" fg:x="1077" fg:w="1"/><text x="86.8952%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.6452%" y="565" width="0.0805%" height="15" fill="rgb(212,190,30)" fg:x="1077" fg:w="1"/><text x="86.8952%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.7257%" y="549" width="0.0805%" height="15" fill="rgb(222,120,8)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="86.7257%" y="533" width="0.0805%" height="15" fill="rgb(227,181,9)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="86.7257%" y="517" width="0.0805%" height="15" fill="rgb(222,125,29)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.8061%" y="549" width="0.0805%" height="15" fill="rgb(215,153,31)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.8866%" y="549" width="0.0805%" height="15" fill="rgb(228,77,30)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.8866%" y="533" width="0.0805%" height="15" fill="rgb(226,110,9)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8866%" y="517" width="0.0805%" height="15" fill="rgb(219,111,7)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.8866%" y="501" width="0.0805%" height="15" fill="rgb(229,167,25)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.8866%" y="485" width="0.0805%" height="15" fill="rgb(209,77,43)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.8866%" y="469" width="0.0805%" height="15" fill="rgb(233,70,39)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.8866%" y="453" width="0.0805%" height="15" fill="rgb(207,171,44)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="86.8866%" y="437" width="0.0805%" height="15" fill="rgb(244,91,6)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="86.8866%" y="421" width="0.0805%" height="15" fill="rgb(234,136,12)" fg:x="1080" fg:w="1"/><text x="87.1366%" y="431.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="86.7257%" y="581" width="0.3218%" height="15" fill="rgb(216,210,38)" fg:x="1078" fg:w="4"/><text x="86.9757%" y="591.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="86.7257%" y="565" width="0.3218%" height="15" fill="rgb(241,227,7)" fg:x="1078" fg:w="4"/><text x="86.9757%" y="575.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="86.9670%" y="549" width="0.0805%" height="15" fill="rgb(241,222,11)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="559.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="86.9670%" y="533" width="0.0805%" height="15" fill="rgb(246,86,18)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="86.9670%" y="517" width="0.0805%" height="15" fill="rgb(224,151,49)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.9670%" y="501" width="0.0805%" height="15" fill="rgb(235,4,41)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9670%" y="485" width="0.0805%" height="15" fill="rgb(218,30,52)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9670%" y="469" width="0.0805%" height="15" fill="rgb(205,124,51)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9670%" y="453" width="0.0805%" height="15" fill="rgb(237,126,51)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9670%" y="437" width="0.0805%" height="15" fill="rgb(225,32,46)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9670%" y="421" width="0.0805%" height="15" fill="rgb(251,60,49)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9670%" y="405" width="0.0805%" height="15" fill="rgb(234,18,23)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9670%" y="389" width="0.0805%" height="15" fill="rgb(234,25,23)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9670%" y="373" width="0.0805%" height="15" fill="rgb(210,43,52)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9670%" y="357" width="0.0805%" height="15" fill="rgb(237,198,21)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9670%" y="341" width="0.0805%" height="15" fill="rgb(211,20,34)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9670%" y="325" width="0.0805%" height="15" fill="rgb(221,155,50)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="86.9670%" y="309" width="0.0805%" height="15" fill="rgb(213,214,53)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="86.9670%" y="293" width="0.0805%" height="15" fill="rgb(215,229,48)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="303.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (43 samples, 3.46%)</title><rect x="83.6685%" y="645" width="3.4594%" height="15" fill="rgb(243,88,5)" fg:x="1040" fg:w="43"/><text x="83.9185%" y="655.50">eng..</text></g><g><title>engine::session::Session::check_for_changes (42 samples, 3.38%)</title><rect x="83.7490%" y="629" width="3.3789%" height="15" fill="rgb(216,199,8)" fg:x="1041" fg:w="42"/><text x="83.9990%" y="639.50">eng..</text></g><g><title>kernel::compare::any_entity_changes (27 samples, 2.17%)</title><rect x="84.9558%" y="613" width="2.1722%" height="15" fill="rgb(241,22,4)" fg:x="1056" fg:w="27"/><text x="85.2058%" y="623.50">k..</text></g><g><title>treediff::diff::diff (10 samples, 0.80%)</title><rect x="86.3234%" y="597" width="0.8045%" height="15" fill="rgb(209,190,22)" fg:x="1073" fg:w="10"/><text x="86.5734%" y="607.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="87.0475%" y="581" width="0.0805%" height="15" fill="rgb(251,138,45)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0475%" y="565" width="0.0805%" height="15" fill="rgb(219,111,22)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="575.50"></text></g><g><title>engine::session::Session::close (54 samples, 4.34%)</title><rect x="82.8640%" y="677" width="4.3443%" height="15" fill="rgb(253,29,49)" fg:x="1030" fg:w="54"/><text x="83.1140%" y="687.50">engin..</text></g><g><title>engine::session::Session::save_entity_changes (48 samples, 3.86%)</title><rect x="83.3467%" y="661" width="3.8616%" height="15" fill="rgb(238,129,49)" fg:x="1036" fg:w="48"/><text x="83.5967%" y="671.50">engi..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="87.1279%" y="645" width="0.0805%" height="15" fill="rgb(240,26,41)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.1279%" y="629" width="0.0805%" height="15" fill="rgb(221,47,33)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.1279%" y="613" width="0.0805%" height="15" fill="rgb(216,200,17)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.1279%" y="597" width="0.0805%" height="15" fill="rgb(230,151,26)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="581" width="0.0805%" height="15" fill="rgb(242,182,16)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1279%" y="565" width="0.0805%" height="15" fill="rgb(236,35,53)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="549" width="0.0805%" height="15" fill="rgb(214,180,28)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="533" width="0.0805%" height="15" fill="rgb(208,173,36)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="517" width="0.0805%" height="15" fill="rgb(218,39,15)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1279%" y="501" width="0.0805%" height="15" fill="rgb(213,145,15)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="485" width="0.0805%" height="15" fill="rgb(242,110,37)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="469" width="0.0805%" height="15" fill="rgb(247,146,22)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="453" width="0.0805%" height="15" fill="rgb(215,191,7)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.1279%" y="437" width="0.0805%" height="15" fill="rgb(240,158,1)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.1279%" y="421" width="0.0805%" height="15" fill="rgb(241,78,32)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1279%" y="405" width="0.0805%" height="15" fill="rgb(248,83,10)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.1279%" y="389" width="0.0805%" height="15" fill="rgb(241,52,0)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.1279%" y="373" width="0.0805%" height="15" fill="rgb(238,37,13)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.1279%" y="357" width="0.0805%" height="15" fill="rgb(242,194,17)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.1279%" y="341" width="0.0805%" height="15" fill="rgb(236,96,3)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.1279%" y="325" width="0.0805%" height="15" fill="rgb(235,148,34)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.1279%" y="309" width="0.0805%" height="15" fill="rgb(254,12,11)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="87.1279%" y="293" width="0.0805%" height="15" fill="rgb(207,31,54)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.1279%" y="277" width="0.0805%" height="15" fill="rgb(252,14,28)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="87.1279%" y="261" width="0.0805%" height="15" fill="rgb(252,108,36)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.08%)</title><rect x="87.1279%" y="245" width="0.0805%" height="15" fill="rgb(214,149,7)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.2084%" y="549" width="0.0805%" height="15" fill="rgb(243,94,12)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="87.2888%" y="549" width="0.1609%" height="15" fill="rgb(208,36,10)" fg:x="1085" fg:w="2"/><text x="87.5388%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="87.2888%" y="533" width="0.1609%" height="15" fill="rgb(233,185,52)" fg:x="1085" fg:w="2"/><text x="87.5388%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="87.2888%" y="517" width="0.1609%" height="15" fill="rgb(234,50,45)" fg:x="1085" fg:w="2"/><text x="87.5388%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="87.4497%" y="533" width="0.0805%" height="15" fill="rgb(228,92,54)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="87.4497%" y="517" width="0.0805%" height="15" fill="rgb(224,85,25)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.4497%" y="501" width="0.0805%" height="15" fill="rgb(246,1,45)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="511.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.4497%" y="485" width="0.0805%" height="15" fill="rgb(240,66,23)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="495.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.4497%" y="469" width="0.0805%" height="15" fill="rgb(222,96,27)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4497%" y="453" width="0.0805%" height="15" fill="rgb(212,136,10)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.4497%" y="437" width="0.0805%" height="15" fill="rgb(226,192,50)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.4497%" y="421" width="0.0805%" height="15" fill="rgb(241,182,31)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="431.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.4497%" y="405" width="0.0805%" height="15" fill="rgb(219,205,47)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.4497%" y="389" width="0.0805%" height="15" fill="rgb(207,96,14)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (5 samples, 0.40%)</title><rect x="87.2084%" y="597" width="0.4023%" height="15" fill="rgb(216,119,9)" fg:x="1084" fg:w="5"/><text x="87.4584%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (5 samples, 0.40%)</title><rect x="87.2084%" y="581" width="0.4023%" height="15" fill="rgb(235,62,36)" fg:x="1084" fg:w="5"/><text x="87.4584%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.40%)</title><rect x="87.2084%" y="565" width="0.4023%" height="15" fill="rgb(214,41,27)" fg:x="1084" fg:w="5"/><text x="87.4584%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (2 samples, 0.16%)</title><rect x="87.4497%" y="549" width="0.1609%" height="15" fill="rgb(214,174,37)" fg:x="1087" fg:w="2"/><text x="87.6997%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="87.5302%" y="533" width="0.0805%" height="15" fill="rgb(212,11,25)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.5302%" y="517" width="0.0805%" height="15" fill="rgb(217,71,35)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5302%" y="501" width="0.0805%" height="15" fill="rgb(234,152,9)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5302%" y="485" width="0.0805%" height="15" fill="rgb(228,32,51)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="87.5302%" y="469" width="0.0805%" height="15" fill="rgb(209,14,47)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="87.5302%" y="453" width="0.0805%" height="15" fill="rgb(218,201,17)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="87.5302%" y="437" width="0.0805%" height="15" fill="rgb(218,98,15)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5302%" y="421" width="0.0805%" height="15" fill="rgb(233,202,29)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.6106%" y="581" width="0.1609%" height="15" fill="rgb(207,196,44)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="591.50"></text></g><g><title>kernel::model::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="87.6106%" y="565" width="0.1609%" height="15" fill="rgb(218,63,34)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.6106%" y="549" width="0.1609%" height="15" fill="rgb(209,10,5)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="87.6106%" y="533" width="0.1609%" height="15" fill="rgb(224,36,28)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="87.6106%" y="517" width="0.1609%" height="15" fill="rgb(249,178,7)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="87.6106%" y="501" width="0.1609%" height="15" fill="rgb(253,163,10)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="87.6106%" y="485" width="0.1609%" height="15" fill="rgb(245,67,46)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.6106%" y="469" width="0.1609%" height="15" fill="rgb(225,14,18)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="87.6106%" y="453" width="0.1609%" height="15" fill="rgb(217,41,54)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="87.6106%" y="437" width="0.1609%" height="15" fill="rgb(222,111,11)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="87.6106%" y="421" width="0.1609%" height="15" fill="rgb(211,85,31)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="87.6106%" y="405" width="0.1609%" height="15" fill="rgb(223,29,26)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="415.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="87.6106%" y="389" width="0.1609%" height="15" fill="rgb(236,124,50)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="87.6106%" y="373" width="0.1609%" height="15" fill="rgb(219,148,15)" fg:x="1089" fg:w="2"/><text x="87.8606%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.7715%" y="581" width="0.0805%" height="15" fill="rgb(248,159,33)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="87.7715%" y="565" width="0.0805%" height="15" fill="rgb(252,65,8)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.7715%" y="549" width="0.0805%" height="15" fill="rgb(236,45,7)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="559.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="87.8520%" y="581" width="0.0805%" height="15" fill="rgb(244,3,48)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (1 samples, 0.08%)</title><rect x="87.8520%" y="565" width="0.0805%" height="15" fill="rgb(224,123,53)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8520%" y="549" width="0.0805%" height="15" fill="rgb(223,173,15)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8520%" y="533" width="0.0805%" height="15" fill="rgb(254,181,5)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.8520%" y="517" width="0.0805%" height="15" fill="rgb(243,124,33)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="527.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8520%" y="501" width="0.0805%" height="15" fill="rgb(253,220,11)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8520%" y="485" width="0.0805%" height="15" fill="rgb(217,14,4)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.8520%" y="469" width="0.0805%" height="15" fill="rgb(209,196,12)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="479.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="87.9324%" y="581" width="0.0805%" height="15" fill="rgb(237,108,29)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="87.9324%" y="565" width="0.0805%" height="15" fill="rgb(216,173,20)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="87.9324%" y="549" width="0.0805%" height="15" fill="rgb(245,27,6)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="87.9324%" y="533" width="0.0805%" height="15" fill="rgb(210,181,20)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="543.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="87.9324%" y="517" width="0.0805%" height="15" fill="rgb(235,213,1)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="527.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="87.9324%" y="501" width="0.0805%" height="15" fill="rgb(239,68,43)" fg:x="1093" fg:w="1"/><text x="88.1824%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (11 samples, 0.88%)</title><rect x="87.2084%" y="613" width="0.8850%" height="15" fill="rgb(254,137,43)" fg:x="1084" fg:w="11"/><text x="87.4584%" y="623.50"></text></g><g><title>plugins_core::tools::move_between (6 samples, 0.48%)</title><rect x="87.6106%" y="597" width="0.4827%" height="15" fill="rgb(252,170,38)" fg:x="1089" fg:w="6"/><text x="87.8606%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="88.0129%" y="581" width="0.0805%" height="15" fill="rgb(234,21,42)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="88.0129%" y="565" width="0.0805%" height="15" fill="rgb(216,145,40)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.0129%" y="549" width="0.0805%" height="15" fill="rgb(251,73,9)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="88.0933%" y="549" width="0.0805%" height="15" fill="rgb(242,54,6)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="88.0933%" y="533" width="0.0805%" height="15" fill="rgb(239,70,7)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="88.0933%" y="517" width="0.0805%" height="15" fill="rgb(216,159,35)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="527.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="88.3347%" y="533" width="0.0805%" height="15" fill="rgb(224,50,39)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.3347%" y="517" width="0.0805%" height="15" fill="rgb(235,9,35)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.3347%" y="501" width="0.0805%" height="15" fill="rgb(239,34,21)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (5 samples, 0.40%)</title><rect x="88.0933%" y="597" width="0.4023%" height="15" fill="rgb(218,162,43)" fg:x="1095" fg:w="5"/><text x="88.3433%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (5 samples, 0.40%)</title><rect x="88.0933%" y="581" width="0.4023%" height="15" fill="rgb(219,89,33)" fg:x="1095" fg:w="5"/><text x="88.3433%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (5 samples, 0.40%)</title><rect x="88.0933%" y="565" width="0.4023%" height="15" fill="rgb(226,125,37)" fg:x="1095" fg:w="5"/><text x="88.3433%" y="575.50"></text></g><g><title>plugins_core::tools::contained_by (4 samples, 0.32%)</title><rect x="88.1738%" y="549" width="0.3218%" height="15" fill="rgb(233,149,30)" fg:x="1096" fg:w="4"/><text x="88.4238%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="88.4151%" y="533" width="0.0805%" height="15" fill="rgb(236,8,18)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="543.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="88.4151%" y="517" width="0.0805%" height="15" fill="rgb(205,176,9)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4151%" y="501" width="0.0805%" height="15" fill="rgb(252,103,44)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.4151%" y="485" width="0.0805%" height="15" fill="rgb(207,68,53)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4151%" y="469" width="0.0805%" height="15" fill="rgb(218,193,48)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="88.4956%" y="581" width="0.0805%" height="15" fill="rgb(234,121,52)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="88.5760%" y="581" width="0.0805%" height="15" fill="rgb(227,218,49)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="88.5760%" y="565" width="0.0805%" height="15" fill="rgb(221,8,7)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.5760%" y="549" width="0.0805%" height="15" fill="rgb(217,151,36)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5760%" y="533" width="0.0805%" height="15" fill="rgb(213,71,5)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.5760%" y="517" width="0.0805%" height="15" fill="rgb(225,145,43)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6565%" y="549" width="0.0805%" height="15" fill="rgb(235,118,19)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.6565%" y="533" width="0.0805%" height="15" fill="rgb(214,102,36)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.6565%" y="517" width="0.0805%" height="15" fill="rgb(220,56,43)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.6565%" y="501" width="0.0805%" height="15" fill="rgb(246,136,46)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="88.6565%" y="485" width="0.0805%" height="15" fill="rgb(249,99,12)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6565%" y="469" width="0.0805%" height="15" fill="rgb(224,31,42)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="88.6565%" y="581" width="0.1609%" height="15" fill="rgb(208,96,21)" fg:x="1102" fg:w="2"/><text x="88.9065%" y="591.50"></text></g><g><title>kernel::model::Entity::replace_scope (2 samples, 0.16%)</title><rect x="88.6565%" y="565" width="0.1609%" height="15" fill="rgb(237,229,7)" fg:x="1102" fg:w="2"/><text x="88.9065%" y="575.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7369%" y="549" width="0.0805%" height="15" fill="rgb(210,12,6)" fg:x="1103" fg:w="1"/><text x="88.9869%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.7369%" y="533" width="0.0805%" height="15" fill="rgb(240,9,34)" fg:x="1103" fg:w="1"/><text x="88.9869%" y="543.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="88.7369%" y="517" width="0.0805%" height="15" fill="rgb(211,68,37)" fg:x="1103" fg:w="1"/><text x="88.9869%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.7369%" y="501" width="0.0805%" height="15" fill="rgb(249,138,50)" fg:x="1103" fg:w="1"/><text x="88.9869%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7369%" y="485" width="0.0805%" height="15" fill="rgb(243,185,40)" fg:x="1103" fg:w="1"/><text x="88.9869%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (10 samples, 0.80%)</title><rect x="88.0933%" y="613" width="0.8045%" height="15" fill="rgb(242,92,35)" fg:x="1095" fg:w="10"/><text x="88.3433%" y="623.50"></text></g><g><title>plugins_core::tools::move_between (5 samples, 0.40%)</title><rect x="88.4956%" y="597" width="0.4023%" height="15" fill="rgb(244,98,5)" fg:x="1100" fg:w="5"/><text x="88.7456%" y="607.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="88.8174%" y="581" width="0.0805%" height="15" fill="rgb(228,186,29)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="591.50"></text></g><g><title>kernel::model::EntityRef::into_entry (1 samples, 0.08%)</title><rect x="88.9783%" y="581" width="0.0805%" height="15" fill="rgb(253,7,44)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="88.9783%" y="565" width="0.0805%" height="15" fill="rgb(216,11,45)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.9783%" y="549" width="0.0805%" height="15" fill="rgb(205,67,3)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="559.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.9783%" y="533" width="0.0805%" height="15" fill="rgb(250,18,3)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="517" width="0.0805%" height="15" fill="rgb(241,222,43)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9783%" y="501" width="0.0805%" height="15" fill="rgb(233,115,3)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="485" width="0.0805%" height="15" fill="rgb(215,165,25)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="469" width="0.0805%" height="15" fill="rgb(234,179,6)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="453" width="0.0805%" height="15" fill="rgb(215,82,23)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9783%" y="437" width="0.0805%" height="15" fill="rgb(211,47,18)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="421" width="0.0805%" height="15" fill="rgb(248,17,9)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="405" width="0.0805%" height="15" fill="rgb(210,212,12)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="389" width="0.0805%" height="15" fill="rgb(230,135,45)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.9783%" y="373" width="0.0805%" height="15" fill="rgb(214,121,41)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.9783%" y="357" width="0.0805%" height="15" fill="rgb(239,165,45)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="367.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (3 samples, 0.24%)</title><rect x="88.8978%" y="613" width="0.2414%" height="15" fill="rgb(214,85,51)" fg:x="1105" fg:w="3"/><text x="89.1478%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (2 samples, 0.16%)</title><rect x="88.9783%" y="597" width="0.1609%" height="15" fill="rgb(223,90,27)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="89.0587%" y="581" width="0.0805%" height="15" fill="rgb(244,84,11)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="591.50"></text></g><g><title>kernel::model::Entity::load_scope (1 samples, 0.08%)</title><rect x="89.0587%" y="565" width="0.0805%" height="15" fill="rgb(253,41,47)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="89.0587%" y="549" width="0.0805%" height="15" fill="rgb(232,39,5)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="89.1392%" y="581" width="0.0805%" height="15" fill="rgb(211,93,4)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1392%" y="565" width="0.0805%" height="15" fill="rgb(219,50,49)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.6219%" y="501" width="0.0805%" height="15" fill="rgb(232,80,19)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.6219%" y="517" width="0.1609%" height="15" fill="rgb(215,227,39)" fg:x="1114" fg:w="2"/><text x="89.8719%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="89.7023%" y="501" width="0.0805%" height="15" fill="rgb(211,99,12)" fg:x="1115" fg:w="1"/><text x="89.9523%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="89.6219%" y="533" width="0.3218%" height="15" fill="rgb(214,158,5)" fg:x="1114" fg:w="4"/><text x="89.8719%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="89.7828%" y="517" width="0.1609%" height="15" fill="rgb(242,19,53)" fg:x="1116" fg:w="2"/><text x="90.0328%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="89.7828%" y="501" width="0.1609%" height="15" fill="rgb(208,18,20)" fg:x="1116" fg:w="2"/><text x="90.0328%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.8632%" y="485" width="0.0805%" height="15" fill="rgb(250,44,11)" fg:x="1117" fg:w="1"/><text x="90.1132%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.72%)</title><rect x="89.3805%" y="549" width="0.7241%" height="15" fill="rgb(238,159,13)" fg:x="1111" fg:w="9"/><text x="89.6305%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="89.9437%" y="533" width="0.1609%" height="15" fill="rgb(231,74,18)" fg:x="1118" fg:w="2"/><text x="90.1937%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (15 samples, 1.21%)</title><rect x="89.2196%" y="581" width="1.2068%" height="15" fill="rgb(229,219,45)" fg:x="1109" fg:w="15"/><text x="89.4696%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.13%)</title><rect x="89.3001%" y="565" width="1.1263%" height="15" fill="rgb(210,221,1)" fg:x="1110" fg:w="14"/><text x="89.5501%" y="575.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="90.1046%" y="549" width="0.3218%" height="15" fill="rgb(209,60,51)" fg:x="1120" fg:w="4"/><text x="90.3546%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="90.5068%" y="533" width="0.0805%" height="15" fill="rgb(252,97,34)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.5068%" y="517" width="0.0805%" height="15" fill="rgb(243,211,37)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="90.5068%" y="501" width="0.0805%" height="15" fill="rgb(210,229,37)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="90.5068%" y="549" width="0.3218%" height="15" fill="rgb(220,208,43)" fg:x="1125" fg:w="4"/><text x="90.7568%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.24%)</title><rect x="90.5873%" y="533" width="0.2414%" height="15" fill="rgb(218,118,50)" fg:x="1126" fg:w="3"/><text x="90.8373%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityKey as core::fmt::Display&gt;::fmt (2 samples, 0.16%)</title><rect x="90.6677%" y="517" width="0.1609%" height="15" fill="rgb(254,169,52)" fg:x="1127" fg:w="2"/><text x="90.9177%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="90.6677%" y="501" width="0.1609%" height="15" fill="rgb(221,214,37)" fg:x="1127" fg:w="2"/><text x="90.9177%" y="511.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="90.6677%" y="485" width="0.1609%" height="15" fill="rgb(254,186,32)" fg:x="1127" fg:w="2"/><text x="90.9177%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="90.6677%" y="469" width="0.1609%" height="15" fill="rgb(215,144,43)" fg:x="1127" fg:w="2"/><text x="90.9177%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="90.7482%" y="453" width="0.0805%" height="15" fill="rgb(252,21,46)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.9091%" y="485" width="0.0805%" height="15" fill="rgb(207,166,46)" fg:x="1130" fg:w="1"/><text x="91.1591%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="90.9895%" y="405" width="0.0805%" height="15" fill="rgb(253,37,49)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9895%" y="389" width="0.0805%" height="15" fill="rgb(222,97,20)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9895%" y="373" width="0.0805%" height="15" fill="rgb(244,181,26)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.9895%" y="357" width="0.0805%" height="15" fill="rgb(241,22,29)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.9895%" y="341" width="0.0805%" height="15" fill="rgb(206,200,43)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.9895%" y="325" width="0.0805%" height="15" fill="rgb(226,224,43)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9895%" y="309" width="0.0805%" height="15" fill="rgb(253,129,28)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.9895%" y="293" width="0.0805%" height="15" fill="rgb(252,99,33)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.9895%" y="277" width="0.0805%" height="15" fill="rgb(208,123,45)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.9895%" y="261" width="0.0805%" height="15" fill="rgb(251,106,12)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.9895%" y="245" width="0.0805%" height="15" fill="rgb(240,209,35)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.9895%" y="229" width="0.0805%" height="15" fill="rgb(214,52,50)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.9895%" y="213" width="0.0805%" height="15" fill="rgb(234,119,4)" fg:x="1131" fg:w="1"/><text x="91.2395%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="90.9895%" y="453" width="0.1609%" height="15" fill="rgb(228,181,36)" fg:x="1131" fg:w="2"/><text x="91.2395%" y="463.50"></text></g><g><title>kernel::model::EntityRef::into_entry (2 samples, 0.16%)</title><rect x="90.9895%" y="437" width="0.1609%" height="15" fill="rgb(213,171,42)" fg:x="1131" fg:w="2"/><text x="91.2395%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="90.9895%" y="421" width="0.1609%" height="15" fill="rgb(239,14,41)" fg:x="1131" fg:w="2"/><text x="91.2395%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.0700%" y="405" width="0.0805%" height="15" fill="rgb(239,111,46)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.0700%" y="389" width="0.0805%" height="15" fill="rgb(214,72,7)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="399.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.0700%" y="373" width="0.0805%" height="15" fill="rgb(221,114,1)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.0700%" y="357" width="0.0805%" height="15" fill="rgb(213,143,14)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.0700%" y="341" width="0.0805%" height="15" fill="rgb(220,221,53)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.0700%" y="325" width="0.0805%" height="15" fill="rgb(236,189,27)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.0700%" y="309" width="0.0805%" height="15" fill="rgb(252,139,49)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="90.9895%" y="469" width="0.2414%" height="15" fill="rgb(231,158,33)" fg:x="1131" fg:w="3"/><text x="91.2395%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1504%" y="453" width="0.0805%" height="15" fill="rgb(207,201,15)" fg:x="1133" fg:w="1"/><text x="91.4004%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.3113%" y="405" width="0.0805%" height="15" fill="rgb(218,43,48)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.3113%" y="389" width="0.0805%" height="15" fill="rgb(244,63,52)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3113%" y="373" width="0.0805%" height="15" fill="rgb(236,60,17)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.3113%" y="357" width="0.0805%" height="15" fill="rgb(205,206,29)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.3113%" y="341" width="0.0805%" height="15" fill="rgb(205,209,35)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.3113%" y="325" width="0.0805%" height="15" fill="rgb(227,112,14)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.3113%" y="309" width="0.0805%" height="15" fill="rgb(248,151,9)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3113%" y="293" width="0.0805%" height="15" fill="rgb(247,45,40)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.3113%" y="277" width="0.0805%" height="15" fill="rgb(232,185,16)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.3113%" y="261" width="0.0805%" height="15" fill="rgb(215,45,44)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.3113%" y="245" width="0.0805%" height="15" fill="rgb(206,69,32)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.3113%" y="229" width="0.0805%" height="15" fill="rgb(233,98,50)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.3113%" y="213" width="0.0805%" height="15" fill="rgb(232,217,52)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3113%" y="197" width="0.0805%" height="15" fill="rgb(250,42,51)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="207.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.48%)</title><rect x="90.9895%" y="485" width="0.4827%" height="15" fill="rgb(241,200,26)" fg:x="1131" fg:w="6"/><text x="91.2395%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="91.2309%" y="469" width="0.2414%" height="15" fill="rgb(207,10,32)" fg:x="1134" fg:w="3"/><text x="91.4809%" y="479.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (3 samples, 0.24%)</title><rect x="91.2309%" y="453" width="0.2414%" height="15" fill="rgb(214,63,15)" fg:x="1134" fg:w="3"/><text x="91.4809%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (3 samples, 0.24%)</title><rect x="91.2309%" y="437" width="0.2414%" height="15" fill="rgb(234,176,14)" fg:x="1134" fg:w="3"/><text x="91.4809%" y="447.50"></text></g><g><title>kernel::model::Entity::load_scope (3 samples, 0.24%)</title><rect x="91.2309%" y="421" width="0.2414%" height="15" fill="rgb(226,104,52)" fg:x="1134" fg:w="3"/><text x="91.4809%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="91.3918%" y="405" width="0.0805%" height="15" fill="rgb(211,222,1)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="91.3918%" y="389" width="0.0805%" height="15" fill="rgb(237,7,3)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="91.3918%" y="373" width="0.0805%" height="15" fill="rgb(218,143,7)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="383.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="91.3918%" y="357" width="0.0805%" height="15" fill="rgb(208,25,22)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.3918%" y="341" width="0.0805%" height="15" fill="rgb(228,127,16)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3918%" y="325" width="0.0805%" height="15" fill="rgb(237,86,27)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.3918%" y="309" width="0.0805%" height="15" fill="rgb(207,125,19)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3918%" y="293" width="0.0805%" height="15" fill="rgb(243,195,0)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.3918%" y="277" width="0.0805%" height="15" fill="rgb(230,95,18)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3918%" y="261" width="0.0805%" height="15" fill="rgb(232,157,21)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.3918%" y="245" width="0.0805%" height="15" fill="rgb(212,120,50)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3918%" y="229" width="0.0805%" height="15" fill="rgb(222,204,44)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="91.3918%" y="213" width="0.0805%" height="15" fill="rgb(236,6,33)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.3918%" y="197" width="0.0805%" height="15" fill="rgb(247,11,38)" fg:x="1136" fg:w="1"/><text x="91.6418%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="91.4722%" y="485" width="0.0805%" height="15" fill="rgb(215,111,0)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="91.4722%" y="469" width="0.0805%" height="15" fill="rgb(211,65,46)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.4722%" y="453" width="0.0805%" height="15" fill="rgb(216,5,12)" fg:x="1137" fg:w="1"/><text x="91.7222%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6331%" y="453" width="0.0805%" height="15" fill="rgb(226,7,2)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6331%" y="437" width="0.0805%" height="15" fill="rgb(242,116,12)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="91.6331%" y="421" width="0.0805%" height="15" fill="rgb(249,209,7)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6331%" y="405" width="0.0805%" height="15" fill="rgb(232,73,17)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.6331%" y="389" width="0.0805%" height="15" fill="rgb(214,13,32)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.6331%" y="373" width="0.0805%" height="15" fill="rgb(221,125,10)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.6331%" y="357" width="0.0805%" height="15" fill="rgb(246,7,44)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.6331%" y="341" width="0.0805%" height="15" fill="rgb(239,18,35)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="91.6331%" y="325" width="0.0805%" height="15" fill="rgb(250,222,16)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="91.6331%" y="309" width="0.0805%" height="15" fill="rgb(219,100,8)" fg:x="1139" fg:w="1"/><text x="91.8831%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="91.7136%" y="453" width="0.0805%" height="15" fill="rgb(240,62,13)" fg:x="1140" fg:w="1"/><text x="91.9636%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="91.7136%" y="437" width="0.0805%" height="15" fill="rgb(253,194,2)" fg:x="1140" fg:w="1"/><text x="91.9636%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="91.7136%" y="421" width="0.0805%" height="15" fill="rgb(235,58,31)" fg:x="1140" fg:w="1"/><text x="91.9636%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="91.7136%" y="405" width="0.0805%" height="15" fill="rgb(231,37,11)" fg:x="1140" fg:w="1"/><text x="91.9636%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.7940%" y="453" width="0.0805%" height="15" fill="rgb(235,133,0)" fg:x="1141" fg:w="1"/><text x="92.0440%" y="463.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="91.8745%" y="453" width="0.0805%" height="15" fill="rgb(212,185,40)" fg:x="1142" fg:w="1"/><text x="92.1245%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="91.9549%" y="389" width="0.1609%" height="15" fill="rgb(216,68,42)" fg:x="1143" fg:w="2"/><text x="92.2049%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="91.9549%" y="373" width="0.1609%" height="15" fill="rgb(239,81,4)" fg:x="1143" fg:w="2"/><text x="92.2049%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.9549%" y="357" width="0.1609%" height="15" fill="rgb(206,86,6)" fg:x="1143" fg:w="2"/><text x="92.2049%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (16 samples, 1.29%)</title><rect x="90.9091%" y="501" width="1.2872%" height="15" fill="rgb(249,95,27)" fg:x="1130" fg:w="16"/><text x="91.1591%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="91.5527%" y="485" width="0.6436%" height="15" fill="rgb(205,155,45)" fg:x="1138" fg:w="8"/><text x="91.8027%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (8 samples, 0.64%)</title><rect x="91.5527%" y="469" width="0.6436%" height="15" fill="rgb(213,55,42)" fg:x="1138" fg:w="8"/><text x="91.8027%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="91.9549%" y="453" width="0.2414%" height="15" fill="rgb(249,197,4)" fg:x="1143" fg:w="3"/><text x="92.2049%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="91.9549%" y="437" width="0.2414%" height="15" fill="rgb(212,128,32)" fg:x="1143" fg:w="3"/><text x="92.2049%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="91.9549%" y="421" width="0.2414%" height="15" fill="rgb(252,47,30)" fg:x="1143" fg:w="3"/><text x="92.2049%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="91.9549%" y="405" width="0.2414%" height="15" fill="rgb(209,79,18)" fg:x="1143" fg:w="3"/><text x="92.2049%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.1158%" y="389" width="0.0805%" height="15" fill="rgb(225,81,38)" fg:x="1145" fg:w="1"/><text x="92.3658%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="92.2767%" y="421" width="0.1609%" height="15" fill="rgb(205,95,16)" fg:x="1147" fg:w="2"/><text x="92.5267%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.2767%" y="453" width="0.2414%" height="15" fill="rgb(214,30,4)" fg:x="1147" fg:w="3"/><text x="92.5267%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.2767%" y="437" width="0.2414%" height="15" fill="rgb(232,137,22)" fg:x="1147" fg:w="3"/><text x="92.5267%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4377%" y="421" width="0.0805%" height="15" fill="rgb(232,156,19)" fg:x="1149" fg:w="1"/><text x="92.6877%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (1 samples, 0.08%)</title><rect x="92.5181%" y="341" width="0.0805%" height="15" fill="rgb(248,157,26)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="351.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (1 samples, 0.08%)</title><rect x="92.5181%" y="325" width="0.0805%" height="15" fill="rgb(242,24,3)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5181%" y="309" width="0.0805%" height="15" fill="rgb(218,195,48)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5181%" y="293" width="0.0805%" height="15" fill="rgb(214,193,36)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="303.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5181%" y="277" width="0.0805%" height="15" fill="rgb(242,110,40)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.5986%" y="293" width="0.0805%" height="15" fill="rgb(233,150,26)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="303.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="92.5986%" y="277" width="0.0805%" height="15" fill="rgb(239,200,30)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6790%" y="261" width="0.0805%" height="15" fill="rgb(226,28,11)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.6790%" y="245" width="0.0805%" height="15" fill="rgb(220,26,48)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.6790%" y="229" width="0.0805%" height="15" fill="rgb(232,10,11)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="239.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.8399%" y="229" width="0.0805%" height="15" fill="rgb(252,143,50)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="92.8399%" y="213" width="0.0805%" height="15" fill="rgb(206,58,22)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="92.8399%" y="197" width="0.0805%" height="15" fill="rgb(250,9,45)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9204%" y="229" width="0.0805%" height="15" fill="rgb(225,148,14)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="239.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.9204%" y="213" width="0.0805%" height="15" fill="rgb(205,178,40)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9204%" y="197" width="0.0805%" height="15" fill="rgb(215,201,4)" fg:x="1155" fg:w="1"/><text x="93.1704%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="93.0008%" y="197" width="0.0805%" height="15" fill="rgb(219,223,24)" fg:x="1156" fg:w="1"/><text x="93.2508%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (8 samples, 0.64%)</title><rect x="92.5181%" y="453" width="0.6436%" height="15" fill="rgb(217,19,31)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (8 samples, 0.64%)</title><rect x="92.5181%" y="437" width="0.6436%" height="15" fill="rgb(235,33,3)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.64%)</title><rect x="92.5181%" y="421" width="0.6436%" height="15" fill="rgb(221,39,18)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.64%)</title><rect x="92.5181%" y="405" width="0.6436%" height="15" fill="rgb(242,162,33)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.64%)</title><rect x="92.5181%" y="389" width="0.6436%" height="15" fill="rgb(233,215,28)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="399.50"></text></g><g><title>engine::internal::Entities::prepare_entity (8 samples, 0.64%)</title><rect x="92.5181%" y="373" width="0.6436%" height="15" fill="rgb(212,117,9)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="92.5181%" y="357" width="0.6436%" height="15" fill="rgb(237,70,47)" fg:x="1150" fg:w="8"/><text x="92.7681%" y="367.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.56%)</title><rect x="92.5986%" y="341" width="0.5632%" height="15" fill="rgb(206,177,13)" fg:x="1151" fg:w="7"/><text x="92.8486%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="92.5986%" y="325" width="0.5632%" height="15" fill="rgb(209,174,33)" fg:x="1151" fg:w="7"/><text x="92.8486%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="92.5986%" y="309" width="0.5632%" height="15" fill="rgb(226,6,11)" fg:x="1151" fg:w="7"/><text x="92.8486%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="92.6790%" y="293" width="0.4827%" height="15" fill="rgb(240,214,6)" fg:x="1152" fg:w="6"/><text x="92.9290%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="92.6790%" y="277" width="0.4827%" height="15" fill="rgb(254,214,40)" fg:x="1152" fg:w="6"/><text x="92.9290%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="92.7595%" y="261" width="0.4023%" height="15" fill="rgb(230,187,15)" fg:x="1153" fg:w="5"/><text x="93.0095%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="92.8399%" y="245" width="0.3218%" height="15" fill="rgb(250,11,27)" fg:x="1154" fg:w="4"/><text x="93.0899%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.0008%" y="229" width="0.1609%" height="15" fill="rgb(243,107,19)" fg:x="1156" fg:w="2"/><text x="93.2508%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.0008%" y="213" width="0.1609%" height="15" fill="rgb(253,66,26)" fg:x="1156" fg:w="2"/><text x="93.2508%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.0813%" y="197" width="0.0805%" height="15" fill="rgb(228,43,8)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.0813%" y="181" width="0.0805%" height="15" fill="rgb(232,197,36)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="191.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="93.0813%" y="165" width="0.0805%" height="15" fill="rgb(221,182,31)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="175.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="93.0813%" y="149" width="0.0805%" height="15" fill="rgb(244,25,36)" fg:x="1157" fg:w="1"/><text x="93.3313%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.1617%" y="421" width="0.0805%" height="15" fill="rgb(247,101,19)" fg:x="1158" fg:w="1"/><text x="93.4117%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2422%" y="373" width="0.0805%" height="15" fill="rgb(223,117,19)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="383.50"></text></g><g><title>plugins_core::tools::get_contained_keys (15 samples, 1.21%)</title><rect x="92.1963%" y="501" width="1.2068%" height="15" fill="rgb(249,63,38)" fg:x="1146" fg:w="15"/><text x="92.4463%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.21%)</title><rect x="92.1963%" y="485" width="1.2068%" height="15" fill="rgb(220,143,23)" fg:x="1146" fg:w="15"/><text x="92.4463%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (15 samples, 1.21%)</title><rect x="92.1963%" y="469" width="1.2068%" height="15" fill="rgb(252,183,22)" fg:x="1146" fg:w="15"/><text x="92.4463%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.1617%" y="453" width="0.2414%" height="15" fill="rgb(243,176,15)" fg:x="1158" fg:w="3"/><text x="93.4117%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.1617%" y="437" width="0.2414%" height="15" fill="rgb(244,204,46)" fg:x="1158" fg:w="3"/><text x="93.4117%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="93.2422%" y="421" width="0.1609%" height="15" fill="rgb(227,28,54)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="93.2422%" y="405" width="0.1609%" height="15" fill="rgb(231,10,15)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="93.2422%" y="389" width="0.1609%" height="15" fill="rgb(210,200,17)" fg:x="1159" fg:w="2"/><text x="93.4922%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.3226%" y="373" width="0.0805%" height="15" fill="rgb(251,106,46)" fg:x="1160" fg:w="1"/><text x="93.5726%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.3226%" y="357" width="0.0805%" height="15" fill="rgb(218,211,15)" fg:x="1160" fg:w="1"/><text x="93.5726%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.4031%" y="485" width="0.0805%" height="15" fill="rgb(239,62,10)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.4031%" y="469" width="0.0805%" height="15" fill="rgb(225,53,53)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.4835%" y="437" width="0.0805%" height="15" fill="rgb(207,16,24)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="93.4835%" y="453" width="0.2414%" height="15" fill="rgb(217,52,28)" fg:x="1162" fg:w="3"/><text x="93.7335%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="93.5640%" y="437" width="0.1609%" height="15" fill="rgb(246,1,5)" fg:x="1163" fg:w="2"/><text x="93.8140%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.5640%" y="421" width="0.1609%" height="15" fill="rgb(221,29,26)" fg:x="1163" fg:w="2"/><text x="93.8140%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6444%" y="405" width="0.0805%" height="15" fill="rgb(250,133,32)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6444%" y="389" width="0.0805%" height="15" fill="rgb(236,63,16)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6444%" y="373" width="0.0805%" height="15" fill="rgb(231,159,14)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6444%" y="357" width="0.0805%" height="15" fill="rgb(207,102,36)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6444%" y="341" width="0.0805%" height="15" fill="rgb(230,224,31)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6444%" y="325" width="0.0805%" height="15" fill="rgb(215,182,16)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6444%" y="309" width="0.0805%" height="15" fill="rgb(226,113,2)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6444%" y="293" width="0.0805%" height="15" fill="rgb(241,18,35)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6444%" y="277" width="0.0805%" height="15" fill="rgb(240,165,44)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6444%" y="261" width="0.0805%" height="15" fill="rgb(229,130,47)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6444%" y="245" width="0.0805%" height="15" fill="rgb(223,93,7)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6444%" y="229" width="0.0805%" height="15" fill="rgb(205,180,36)" fg:x="1164" fg:w="1"/><text x="93.8944%" y="239.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="93.7249%" y="453" width="0.0805%" height="15" fill="rgb(221,103,28)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.7249%" y="437" width="0.0805%" height="15" fill="rgb(212,4,3)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="93.7249%" y="421" width="0.0805%" height="15" fill="rgb(209,221,53)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="93.7249%" y="405" width="0.0805%" height="15" fill="rgb(233,229,52)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="93.7249%" y="389" width="0.0805%" height="15" fill="rgb(254,127,37)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="399.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="93.7249%" y="373" width="0.0805%" height="15" fill="rgb(207,161,26)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7249%" y="357" width="0.0805%" height="15" fill="rgb(223,75,5)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 3.06%)</title><rect x="90.8286%" y="533" width="3.0571%" height="15" fill="rgb(235,115,52)" fg:x="1129" fg:w="38"/><text x="91.0786%" y="543.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 2.98%)</title><rect x="90.9091%" y="517" width="2.9767%" height="15" fill="rgb(240,91,46)" fg:x="1130" fg:w="37"/><text x="91.1591%" y="527.50">&lt;co..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.48%)</title><rect x="93.4031%" y="501" width="0.4827%" height="15" fill="rgb(251,144,21)" fg:x="1161" fg:w="6"/><text x="93.6531%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="93.4835%" y="485" width="0.4023%" height="15" fill="rgb(247,220,47)" fg:x="1162" fg:w="5"/><text x="93.7335%" y="495.50"></text></g><g><title>kernel::model::Entity::load_scope (5 samples, 0.40%)</title><rect x="93.4835%" y="469" width="0.4023%" height="15" fill="rgb(253,122,1)" fg:x="1162" fg:w="5"/><text x="93.7335%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8053%" y="453" width="0.0805%" height="15" fill="rgb(221,0,24)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8053%" y="437" width="0.0805%" height="15" fill="rgb(220,204,54)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="93.8053%" y="421" width="0.0805%" height="15" fill="rgb(205,96,25)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="93.8053%" y="405" width="0.0805%" height="15" fill="rgb(247,77,20)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="93.8053%" y="389" width="0.0805%" height="15" fill="rgb(245,151,8)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.8053%" y="373" width="0.0805%" height="15" fill="rgb(242,158,39)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.8053%" y="357" width="0.0805%" height="15" fill="rgb(222,214,50)" fg:x="1166" fg:w="1"/><text x="94.0553%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="93.8858%" y="485" width="0.3218%" height="15" fill="rgb(229,60,39)" fg:x="1167" fg:w="4"/><text x="94.1358%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="93.9662%" y="469" width="0.2414%" height="15" fill="rgb(240,148,18)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="93.9662%" y="453" width="0.2414%" height="15" fill="rgb(215,96,11)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="93.9662%" y="437" width="0.2414%" height="15" fill="rgb(238,162,53)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="93.9662%" y="421" width="0.2414%" height="15" fill="rgb(214,83,18)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="93.9662%" y="405" width="0.2414%" height="15" fill="rgb(248,117,24)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="93.9662%" y="389" width="0.2414%" height="15" fill="rgb(238,190,6)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="93.9662%" y="373" width="0.2414%" height="15" fill="rgb(213,51,6)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="93.9662%" y="357" width="0.2414%" height="15" fill="rgb(212,136,1)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="93.9662%" y="341" width="0.2414%" height="15" fill="rgb(221,192,14)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="93.9662%" y="325" width="0.2414%" height="15" fill="rgb(244,38,54)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="335.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="93.9662%" y="309" width="0.2414%" height="15" fill="rgb(240,45,28)" fg:x="1168" fg:w="3"/><text x="94.2162%" y="319.50"></text></g><g><title>engine::internal::Entities::prepare_entity (2 samples, 0.16%)</title><rect x="94.2880%" y="469" width="0.1609%" height="15" fill="rgb(240,123,12)" fg:x="1172" fg:w="2"/><text x="94.5380%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="94.3685%" y="453" width="0.0805%" height="15" fill="rgb(216,14,30)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="94.2076%" y="485" width="0.3218%" height="15" fill="rgb(212,50,24)" fg:x="1171" fg:w="4"/><text x="94.4576%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="94.4489%" y="469" width="0.0805%" height="15" fill="rgb(253,229,47)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4489%" y="453" width="0.0805%" height="15" fill="rgb(214,26,17)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4489%" y="437" width="0.0805%" height="15" fill="rgb(252,60,11)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4489%" y="421" width="0.0805%" height="15" fill="rgb(209,59,37)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4489%" y="405" width="0.0805%" height="15" fill="rgb(228,126,53)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4489%" y="389" width="0.0805%" height="15" fill="rgb(233,99,2)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4489%" y="373" width="0.0805%" height="15" fill="rgb(217,106,34)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4489%" y="357" width="0.0805%" height="15" fill="rgb(222,46,19)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4489%" y="341" width="0.0805%" height="15" fill="rgb(251,87,31)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4489%" y="325" width="0.0805%" height="15" fill="rgb(213,70,51)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4489%" y="309" width="0.0805%" height="15" fill="rgb(229,144,18)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4489%" y="293" width="0.0805%" height="15" fill="rgb(254,60,26)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.4489%" y="277" width="0.0805%" height="15" fill="rgb(243,127,51)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="94.6903%" y="373" width="0.0805%" height="15" fill="rgb(221,51,25)" fg:x="1177" fg:w="1"/><text x="94.9403%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.0121%" y="325" width="0.0805%" height="15" fill="rgb(205,42,7)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0121%" y="309" width="0.0805%" height="15" fill="rgb(236,177,48)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.24%)</title><rect x="95.1730%" y="277" width="0.2414%" height="15" fill="rgb(226,79,31)" fg:x="1183" fg:w="3"/><text x="95.4230%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="95.2534%" y="261" width="0.1609%" height="15" fill="rgb(216,170,12)" fg:x="1184" fg:w="2"/><text x="95.5034%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.2534%" y="245" width="0.1609%" height="15" fill="rgb(208,62,51)" fg:x="1184" fg:w="2"/><text x="95.5034%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.3339%" y="229" width="0.0805%" height="15" fill="rgb(254,129,9)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="95.4948%" y="261" width="0.0805%" height="15" fill="rgb(243,209,31)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="95.4948%" y="245" width="0.0805%" height="15" fill="rgb(213,159,23)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.64%)</title><rect x="95.0925%" y="293" width="0.6436%" height="15" fill="rgb(249,77,39)" fg:x="1182" fg:w="8"/><text x="95.3425%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="95.4143%" y="277" width="0.3218%" height="15" fill="rgb(230,13,33)" fg:x="1186" fg:w="4"/><text x="95.6643%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.5752%" y="261" width="0.1609%" height="15" fill="rgb(215,215,7)" fg:x="1188" fg:w="2"/><text x="95.8252%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (10 samples, 0.80%)</title><rect x="95.0925%" y="309" width="0.8045%" height="15" fill="rgb(222,92,25)" fg:x="1182" fg:w="10"/><text x="95.3425%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.7361%" y="293" width="0.1609%" height="15" fill="rgb(215,173,22)" fg:x="1190" fg:w="2"/><text x="95.9861%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.8166%" y="277" width="0.0805%" height="15" fill="rgb(247,205,52)" fg:x="1191" fg:w="1"/><text x="96.0666%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 1.13%)</title><rect x="94.8512%" y="341" width="1.1263%" height="15" fill="rgb(240,210,37)" fg:x="1179" fg:w="14"/><text x="95.1012%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (11 samples, 0.88%)</title><rect x="95.0925%" y="325" width="0.8850%" height="15" fill="rgb(224,13,10)" fg:x="1182" fg:w="11"/><text x="95.3425%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8970%" y="309" width="0.0805%" height="15" fill="rgb(209,48,33)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.8970%" y="293" width="0.0805%" height="15" fill="rgb(228,219,23)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="303.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.8970%" y="277" width="0.0805%" height="15" fill="rgb(239,46,49)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.8970%" y="261" width="0.0805%" height="15" fill="rgb(206,172,51)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.8970%" y="245" width="0.0805%" height="15" fill="rgb(213,212,35)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.8970%" y="229" width="0.0805%" height="15" fill="rgb(252,40,27)" fg:x="1192" fg:w="1"/><text x="96.1470%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (17 samples, 1.37%)</title><rect x="94.7707%" y="373" width="1.3677%" height="15" fill="rgb(212,33,41)" fg:x="1178" fg:w="17"/><text x="95.0207%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (16 samples, 1.29%)</title><rect x="94.8512%" y="357" width="1.2872%" height="15" fill="rgb(232,160,27)" fg:x="1179" fg:w="16"/><text x="95.1012%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.9775%" y="341" width="0.1609%" height="15" fill="rgb(244,160,20)" fg:x="1193" fg:w="2"/><text x="96.2275%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.0579%" y="325" width="0.0805%" height="15" fill="rgb(205,66,20)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.77%)</title><rect x="94.5294%" y="389" width="1.7699%" height="15" fill="rgb(236,158,6)" fg:x="1175" fg:w="22"/><text x="94.7794%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="96.1384%" y="373" width="0.1609%" height="15" fill="rgb(232,25,36)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.93%)</title><rect x="94.5294%" y="421" width="1.9308%" height="15" fill="rgb(220,153,35)" fg:x="1175" fg:w="24"/><text x="94.7794%" y="431.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (24 samples, 1.93%)</title><rect x="94.5294%" y="405" width="1.9308%" height="15" fill="rgb(216,5,8)" fg:x="1175" fg:w="24"/><text x="94.7794%" y="415.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.2993%" y="389" width="0.1609%" height="15" fill="rgb(240,97,3)" fg:x="1197" fg:w="2"/><text x="96.5493%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="96.2993%" y="373" width="0.1609%" height="15" fill="rgb(220,99,26)" fg:x="1197" fg:w="2"/><text x="96.5493%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 2.17%)</title><rect x="94.5294%" y="437" width="2.1722%" height="15" fill="rgb(237,96,2)" fg:x="1175" fg:w="27"/><text x="94.7794%" y="447.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="96.4602%" y="421" width="0.2414%" height="15" fill="rgb(217,197,47)" fg:x="1199" fg:w="3"/><text x="96.7102%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="96.4602%" y="405" width="0.2414%" height="15" fill="rgb(252,133,54)" fg:x="1199" fg:w="3"/><text x="96.7102%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.6211%" y="389" width="0.0805%" height="15" fill="rgb(233,37,30)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (31 samples, 2.49%)</title><rect x="94.5294%" y="469" width="2.4940%" height="15" fill="rgb(239,182,12)" fg:x="1175" fg:w="31"/><text x="94.7794%" y="479.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (31 samples, 2.49%)</title><rect x="94.5294%" y="453" width="2.4940%" height="15" fill="rgb(245,83,39)" fg:x="1175" fg:w="31"/><text x="94.7794%" y="463.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="96.7015%" y="437" width="0.3218%" height="15" fill="rgb(222,109,36)" fg:x="1202" fg:w="4"/><text x="96.9515%" y="447.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="96.7015%" y="421" width="0.3218%" height="15" fill="rgb(237,95,44)" fg:x="1202" fg:w="4"/><text x="96.9515%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.1038%" y="421" width="0.0805%" height="15" fill="rgb(216,36,54)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="97.1842%" y="421" width="0.2414%" height="15" fill="rgb(236,164,3)" fg:x="1208" fg:w="3"/><text x="97.4342%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.3451%" y="405" width="0.0805%" height="15" fill="rgb(223,15,21)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.3451%" y="389" width="0.0805%" height="15" fill="rgb(239,191,12)" fg:x="1210" fg:w="1"/><text x="97.5951%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="97.4256%" y="421" width="0.0805%" height="15" fill="rgb(231,191,37)" fg:x="1211" fg:w="1"/><text x="97.6756%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.4256%" y="405" width="0.0805%" height="15" fill="rgb(209,155,36)" fg:x="1211" fg:w="1"/><text x="97.6756%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7474%" y="373" width="0.0805%" height="15" fill="rgb(216,222,49)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.7474%" y="357" width="0.0805%" height="15" fill="rgb(218,181,2)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7474%" y="341" width="0.0805%" height="15" fill="rgb(239,125,9)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8278%" y="341" width="0.0805%" height="15" fill="rgb(233,103,7)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8278%" y="325" width="0.0805%" height="15" fill="rgb(209,223,5)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.8278%" y="357" width="0.1609%" height="15" fill="rgb(234,71,27)" fg:x="1216" fg:w="2"/><text x="98.0778%" y="367.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="97.9083%" y="341" width="0.0805%" height="15" fill="rgb(251,202,16)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="351.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="97.9083%" y="325" width="0.0805%" height="15" fill="rgb(231,180,0)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="335.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="97.9083%" y="309" width="0.0805%" height="15" fill="rgb(223,58,28)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="319.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Props&gt;::serialize (7 samples, 0.56%)</title><rect x="97.5060%" y="421" width="0.5632%" height="15" fill="rgb(250,34,24)" fg:x="1212" fg:w="7"/><text x="97.7560%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.48%)</title><rect x="97.5865%" y="405" width="0.4827%" height="15" fill="rgb(235,24,16)" fg:x="1213" fg:w="6"/><text x="97.8365%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="97.5865%" y="389" width="0.4827%" height="15" fill="rgb(219,28,33)" fg:x="1213" fg:w="6"/><text x="97.8365%" y="399.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="97.8278%" y="373" width="0.2414%" height="15" fill="rgb(228,150,43)" fg:x="1216" fg:w="3"/><text x="98.0778%" y="383.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="97.9887%" y="357" width="0.0805%" height="15" fill="rgb(221,228,36)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="97.9887%" y="341" width="0.0805%" height="15" fill="rgb(232,116,17)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.0692%" y="405" width="0.0805%" height="15" fill="rgb(220,110,51)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="415.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="98.2301%" y="373" width="0.1609%" height="15" fill="rgb(207,26,25)" fg:x="1221" fg:w="2"/><text x="98.4801%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="98.2301%" y="357" width="0.1609%" height="15" fill="rgb(223,58,19)" fg:x="1221" fg:w="2"/><text x="98.4801%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.2301%" y="341" width="0.1609%" height="15" fill="rgb(234,125,39)" fg:x="1221" fg:w="2"/><text x="98.4801%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.2301%" y="325" width="0.1609%" height="15" fill="rgb(241,48,36)" fg:x="1221" fg:w="2"/><text x="98.4801%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="98.3910%" y="357" width="0.0805%" height="15" fill="rgb(217,148,51)" fg:x="1223" fg:w="1"/><text x="98.6410%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="98.1496%" y="389" width="0.4827%" height="15" fill="rgb(247,17,25)" fg:x="1220" fg:w="6"/><text x="98.3996%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="98.3910%" y="373" width="0.2414%" height="15" fill="rgb(219,89,38)" fg:x="1223" fg:w="3"/><text x="98.6410%" y="383.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="98.4714%" y="357" width="0.1609%" height="15" fill="rgb(220,145,2)" fg:x="1224" fg:w="2"/><text x="98.7214%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5519%" y="341" width="0.0805%" height="15" fill="rgb(244,66,47)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.5519%" y="325" width="0.0805%" height="15" fill="rgb(226,182,5)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="335.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.5519%" y="309" width="0.0805%" height="15" fill="rgb(211,98,20)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.5519%" y="293" width="0.0805%" height="15" fill="rgb(217,103,52)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="303.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (53 samples, 4.26%)</title><rect x="94.5294%" y="485" width="4.2639%" height="15" fill="rgb(208,125,52)" fg:x="1175" fg:w="53"/><text x="94.7794%" y="495.50">&lt;rpc_..</text></g><g><title>kernel::model::EntityPtr::to_json_value (22 samples, 1.77%)</title><rect x="97.0233%" y="469" width="1.7699%" height="15" fill="rgb(244,70,13)" fg:x="1206" fg:w="22"/><text x="97.2733%" y="479.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::Entity&gt;::serialize (22 samples, 1.77%)</title><rect x="97.0233%" y="453" width="1.7699%" height="15" fill="rgb(253,124,3)" fg:x="1206" fg:w="22"/><text x="97.2733%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="97.0233%" y="437" width="1.7699%" height="15" fill="rgb(222,145,32)" fg:x="1206" fg:w="22"/><text x="97.2733%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="98.0692%" y="421" width="0.7241%" height="15" fill="rgb(232,183,47)" fg:x="1219" fg:w="9"/><text x="98.3192%" y="431.50"></text></g><g><title>kernel::model::_::&lt;impl serde::ser::Serialize for kernel::model::ScopeValue&gt;::serialize (8 samples, 0.64%)</title><rect x="98.1496%" y="405" width="0.6436%" height="15" fill="rgb(246,226,4)" fg:x="1220" fg:w="8"/><text x="98.3996%" y="415.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="98.6323%" y="389" width="0.1609%" height="15" fill="rgb(228,185,46)" fg:x="1226" fg:w="2"/><text x="98.8823%" y="399.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="98.6323%" y="373" width="0.1609%" height="15" fill="rgb(213,196,4)" fg:x="1226" fg:w="2"/><text x="98.8823%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7932%" y="485" width="0.0805%" height="15" fill="rgb(212,2,45)" fg:x="1228" fg:w="1"/><text x="99.0432%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (101 samples, 8.13%)</title><rect x="90.8286%" y="549" width="8.1255%" height="15" fill="rgb(217,145,50)" fg:x="1129" fg:w="101"/><text x="91.0786%" y="559.50">core::iter:..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (63 samples, 5.07%)</title><rect x="93.8858%" y="533" width="5.0684%" height="15" fill="rgb(242,10,46)" fg:x="1167" fg:w="63"/><text x="94.1358%" y="543.50">alloc:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (63 samples, 5.07%)</title><rect x="93.8858%" y="517" width="5.0684%" height="15" fill="rgb(252,91,48)" fg:x="1167" fg:w="63"/><text x="94.1358%" y="527.50">&lt;core:..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (63 samples, 5.07%)</title><rect x="93.8858%" y="501" width="5.0684%" height="15" fill="rgb(216,72,13)" fg:x="1167" fg:w="63"/><text x="94.1358%" y="511.50">plugin..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.8737%" y="485" width="0.0805%" height="15" fill="rgb(219,6,37)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.8737%" y="469" width="0.0805%" height="15" fill="rgb(236,185,40)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="479.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (106 samples, 8.53%)</title><rect x="90.5068%" y="565" width="8.5278%" height="15" fill="rgb(208,81,48)" fg:x="1125" fg:w="106"/><text x="90.7568%" y="575.50">&lt;plugins_rpc..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9541%" y="549" width="0.0805%" height="15" fill="rgb(211,42,33)" fg:x="1230" fg:w="1"/><text x="99.2041%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.9541%" y="533" width="0.0805%" height="15" fill="rgb(211,90,39)" fg:x="1230" fg:w="1"/><text x="99.2041%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="98.9541%" y="517" width="0.0805%" height="15" fill="rgb(218,136,12)" fg:x="1230" fg:w="1"/><text x="99.2041%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.0346%" y="565" width="0.0805%" height="15" fill="rgb(234,12,32)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.0346%" y="549" width="0.0805%" height="15" fill="rgb(221,164,18)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="559.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (149 samples, 11.99%)</title><rect x="87.2084%" y="629" width="11.9871%" height="15" fill="rgb(239,135,14)" fg:x="1084" fg:w="149"/><text x="87.4584%" y="639.50">&lt;engine::perform::..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (125 samples, 10.06%)</title><rect x="89.1392%" y="613" width="10.0563%" height="15" fill="rgb(226,198,47)" fg:x="1108" fg:w="125"/><text x="89.3892%" y="623.50">kernel::plugins..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (125 samples, 10.06%)</title><rect x="89.1392%" y="597" width="10.0563%" height="15" fill="rgb(244,121,47)" fg:x="1108" fg:w="125"/><text x="89.3892%" y="607.50">&lt;plugins_dynlib..</text></g><g><title>plugins_rpc::querying::have_surroundings (109 samples, 8.77%)</title><rect x="90.4264%" y="581" width="8.7691%" height="15" fill="rgb(226,21,48)" fg:x="1124" fg:w="109"/><text x="90.6764%" y="591.50">plugins_rpc:..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="99.1150%" y="565" width="0.0805%" height="15" fill="rgb(215,178,47)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.2759%" y="453" width="0.0805%" height="15" fill="rgb(206,212,19)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="437" width="0.0805%" height="15" fill="rgb(230,104,34)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2759%" y="421" width="0.0805%" height="15" fill="rgb(210,96,51)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3564%" y="453" width="0.0805%" height="15" fill="rgb(229,111,47)" fg:x="1235" fg:w="1"/><text x="99.6064%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.3564%" y="437" width="0.0805%" height="15" fill="rgb(218,174,45)" fg:x="1235" fg:w="1"/><text x="99.6064%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3564%" y="421" width="0.0805%" height="15" fill="rgb(215,21,32)" fg:x="1235" fg:w="1"/><text x="99.6064%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.3564%" y="405" width="0.0805%" height="15" fill="rgb(235,72,21)" fg:x="1235" fg:w="1"/><text x="99.6064%" y="415.50"></text></g><g><title>engine::internal::Entities::prepare_entity (4 samples, 0.32%)</title><rect x="99.1955%" y="597" width="0.3218%" height="15" fill="rgb(250,113,30)" fg:x="1233" fg:w="4"/><text x="99.4455%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="99.2759%" y="581" width="0.2414%" height="15" fill="rgb(244,136,34)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="99.2759%" y="565" width="0.2414%" height="15" fill="rgb(213,226,47)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="99.2759%" y="549" width="0.2414%" height="15" fill="rgb(224,136,40)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.2759%" y="533" width="0.2414%" height="15" fill="rgb(253,124,12)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2759%" y="517" width="0.2414%" height="15" fill="rgb(210,67,8)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.2759%" y="501" width="0.2414%" height="15" fill="rgb(210,204,0)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.2759%" y="485" width="0.2414%" height="15" fill="rgb(217,179,22)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="495.50"></text></g><g><title>kernel::model::_::&lt;impl serde::de::Deserialize for kernel::model::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="99.2759%" y="469" width="0.2414%" height="15" fill="rgb(237,192,33)" fg:x="1234" fg:w="3"/><text x="99.5259%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4368%" y="453" width="0.0805%" height="15" fill="rgb(211,104,28)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.4368%" y="437" width="0.0805%" height="15" fill="rgb(214,75,30)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4368%" y="421" width="0.0805%" height="15" fill="rgb(220,227,12)" fg:x="1236" fg:w="1"/><text x="99.6868%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="99.1955%" y="613" width="0.4023%" height="15" fill="rgb(233,134,28)" fg:x="1233" fg:w="5"/><text x="99.4455%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="99.5173%" y="597" width="0.0805%" height="15" fill="rgb(215,146,24)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.5173%" y="581" width="0.0805%" height="15" fill="rgb(248,227,20)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="99.5977%" y="613" width="0.0805%" height="15" fill="rgb(250,44,42)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="99.5977%" y="597" width="0.0805%" height="15" fill="rgb(219,5,35)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.5977%" y="581" width="0.0805%" height="15" fill="rgb(241,132,32)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="591.50"></text></g><g><title>engine::internal::Entities::prepare_entity (1 samples, 0.08%)</title><rect x="99.6782%" y="581" width="0.0805%" height="15" fill="rgb(234,212,51)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.6782%" y="565" width="0.0805%" height="15" fill="rgb(242,173,29)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6782%" y="549" width="0.0805%" height="15" fill="rgb(212,159,2)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6782%" y="533" width="0.0805%" height="15" fill="rgb(238,165,31)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.6782%" y="517" width="0.0805%" height="15" fill="rgb(241,57,36)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.6782%" y="501" width="0.0805%" height="15" fill="rgb(249,7,4)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.6782%" y="485" width="0.0805%" height="15" fill="rgb(250,137,44)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.6782%" y="469" width="0.0805%" height="15" fill="rgb(244,185,1)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.6782%" y="453" width="0.0805%" height="15" fill="rgb(216,5,53)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.6782%" y="437" width="0.0805%" height="15" fill="rgb(234,89,21)" fg:x="1239" fg:w="1"/><text x="99.9282%" y="447.50"></text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="99.6782%" y="613" width="0.1609%" height="15" fill="rgb(250,81,43)" fg:x="1239" fg:w="2"/><text x="99.9282%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="99.6782%" y="597" width="0.1609%" height="15" fill="rgb(243,132,11)" fg:x="1239" fg:w="2"/><text x="99.9282%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.7586%" y="581" width="0.0805%" height="15" fill="rgb(253,159,28)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="591.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.7586%" y="565" width="0.0805%" height="15" fill="rgb(237,167,34)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.7586%" y="549" width="0.0805%" height="15" fill="rgb(237,16,50)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7586%" y="533" width="0.0805%" height="15" fill="rgb(247,125,2)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7586%" y="517" width="0.0805%" height="15" fill="rgb(254,35,3)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="527.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.7586%" y="501" width="0.0805%" height="15" fill="rgb(237,209,21)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.7586%" y="485" width="0.0805%" height="15" fill="rgb(224,122,20)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.7586%" y="469" width="0.0805%" height="15" fill="rgb(224,11,46)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.7586%" y="453" width="0.0805%" height="15" fill="rgb(248,21,33)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7586%" y="437" width="0.0805%" height="15" fill="rgb(222,144,7)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.7586%" y="421" width="0.0805%" height="15" fill="rgb(205,141,37)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.7586%" y="405" width="0.0805%" height="15" fill="rgb(237,130,8)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.7586%" y="389" width="0.0805%" height="15" fill="rgb(209,179,39)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.7586%" y="373" width="0.0805%" height="15" fill="rgb(207,52,17)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.7586%" y="357" width="0.0805%" height="15" fill="rgb(253,158,17)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7586%" y="341" width="0.0805%" height="15" fill="rgb(208,19,53)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.7586%" y="325" width="0.0805%" height="15" fill="rgb(233,152,13)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.7586%" y="309" width="0.0805%" height="15" fill="rgb(231,84,1)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.7586%" y="293" width="0.0805%" height="15" fill="rgb(229,142,48)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.7586%" y="277" width="0.0805%" height="15" fill="rgb(248,70,29)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.7586%" y="261" width="0.0805%" height="15" fill="rgb(250,85,7)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.7586%" y="245" width="0.0805%" height="15" fill="rgb(235,140,43)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.7586%" y="229" width="0.0805%" height="15" fill="rgb(216,0,5)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.7586%" y="213" width="0.0805%" height="15" fill="rgb(223,167,29)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.8391%" y="565" width="0.0805%" height="15" fill="rgb(229,150,33)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.8391%" y="549" width="0.0805%" height="15" fill="rgb(227,26,52)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="559.50"></text></g><g><title>all (1,243 samples, 100%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(250,60,52)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1039.50"></text></g><g><title>simple-15eb1580 (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(228,81,46)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1023.50">simple-15eb1580</text></g><g><title>_start (1,243 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(225,218,31)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1007.50">_start</text></g><g><title>__libc_start_main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(230,35,16)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="991.50">__libc_start_main</text></g><g><title>main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(247,100,0)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (1,243 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(223,135,11)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(207,136,0)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(246,131,25)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(209,47,12)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(221,25,16)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(223,164,33)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(220,26,23)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(231,224,1)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,243 samples, 100.00%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(229,221,24)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="805" width="100.0000%" height="15" fill="rgb(213,34,10)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,243 samples, 100.00%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(215,33,11)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="773" width="100.0000%" height="15" fill="rgb(216,20,41)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="783.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,243 samples, 100.00%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(228,43,31)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="767.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,243 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(227,83,26)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="751.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (280 samples, 22.53%)</title><rect x="77.4739%" y="725" width="22.5261%" height="15" fill="rgb(217,168,19)" fg:x="963" fg:w="280"/><text x="77.7239%" y="735.50">&lt;criterion::routine::Function&lt;M,F,T&gt;..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (280 samples, 22.53%)</title><rect x="77.4739%" y="709" width="22.5261%" height="15" fill="rgb(231,34,33)" fg:x="963" fg:w="280"/><text x="77.7239%" y="719.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (280 samples, 22.53%)</title><rect x="77.4739%" y="693" width="22.5261%" height="15" fill="rgb(230,120,51)" fg:x="963" fg:w="280"/><text x="77.7239%" y="703.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (159 samples, 12.79%)</title><rect x="87.2084%" y="677" width="12.7916%" height="15" fill="rgb(215,138,27)" fg:x="1084" fg:w="159"/><text x="87.4584%" y="687.50">engine::session::Se..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (159 samples, 12.79%)</title><rect x="87.2084%" y="661" width="12.7916%" height="15" fill="rgb(246,80,47)" fg:x="1084" fg:w="159"/><text x="87.4584%" y="671.50">engine::perform::St..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (159 samples, 12.79%)</title><rect x="87.2084%" y="645" width="12.7916%" height="15" fill="rgb(215,57,53)" fg:x="1084" fg:w="159"/><text x="87.4584%" y="655.50">&lt;engine::perform::S..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (10 samples, 0.80%)</title><rect x="99.1955%" y="629" width="0.8045%" height="15" fill="rgb(229,137,5)" fg:x="1233" fg:w="10"/><text x="99.4455%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.8391%" y="613" width="0.1609%" height="15" fill="rgb(210,86,2)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.8391%" y="597" width="0.1609%" height="15" fill="rgb(231,226,51)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="607.50"></text></g><g><title>kernel::model::Entity::load_scope (2 samples, 0.16%)</title><rect x="99.8391%" y="581" width="0.1609%" height="15" fill="rgb(216,62,29)" fg:x="1241" fg:w="2"/><text x="100.0891%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.9195%" y="565" width="0.0805%" height="15" fill="rgb(248,202,3)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="575.50"></text></g></svg></svg>