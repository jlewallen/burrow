<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="1274"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0785%" y="757" width="0.0785%" height="15" fill="rgb(208,184,23)" fg:x="1" fg:w="1"/><text x="0.3285%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0785%" y="741" width="0.0785%" height="15" fill="rgb(221,83,2)" fg:x="1" fg:w="1"/><text x="0.3285%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.2355%" y="725" width="0.0785%" height="15" fill="rgb(236,53,24)" fg:x="3" fg:w="1"/><text x="0.4855%" y="735.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.3925%" y="661" width="0.2355%" height="15" fill="rgb(244,171,29)" fg:x="5" fg:w="3"/><text x="0.6425%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6279%" y="661" width="0.0785%" height="15" fill="rgb(205,19,11)" fg:x="8" fg:w="1"/><text x="0.8779%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.6279%" y="645" width="0.0785%" height="15" fill="rgb(207,108,29)" fg:x="8" fg:w="1"/><text x="0.8779%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.7064%" y="645" width="0.1570%" height="15" fill="rgb(236,215,43)" fg:x="9" fg:w="2"/><text x="0.9564%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.7064%" y="629" width="0.1570%" height="15" fill="rgb(213,58,35)" fg:x="9" fg:w="2"/><text x="0.9564%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7064%" y="613" width="0.1570%" height="15" fill="rgb(220,211,46)" fg:x="9" fg:w="2"/><text x="0.9564%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.31%)</title><rect x="0.8634%" y="645" width="0.3140%" height="15" fill="rgb(212,134,16)" fg:x="11" fg:w="4"/><text x="1.1134%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.0204%" y="629" width="0.1570%" height="15" fill="rgb(232,90,44)" fg:x="13" fg:w="2"/><text x="1.2704%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.2559%" y="629" width="0.0785%" height="15" fill="rgb(212,18,36)" fg:x="16" fg:w="1"/><text x="1.5059%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.4914%" y="597" width="0.1570%" height="15" fill="rgb(206,112,24)" fg:x="19" fg:w="2"/><text x="1.7414%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 1.49%)</title><rect x="0.3140%" y="677" width="1.4914%" height="15" fill="rgb(238,223,40)" fg:x="4" fg:w="19"/><text x="0.5640%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.10%)</title><rect x="0.7064%" y="661" width="1.0989%" height="15" fill="rgb(226,169,20)" fg:x="9" fg:w="14"/><text x="0.9564%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.63%)</title><rect x="1.1774%" y="645" width="0.6279%" height="15" fill="rgb(241,64,52)" fg:x="15" fg:w="8"/><text x="1.4274%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="1.3344%" y="629" width="0.4710%" height="15" fill="rgb(228,120,25)" fg:x="17" fg:w="6"/><text x="1.5844%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="1.4129%" y="613" width="0.3925%" height="15" fill="rgb(234,108,19)" fg:x="18" fg:w="5"/><text x="1.6629%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6484%" y="597" width="0.1570%" height="15" fill="rgb(236,133,29)" fg:x="21" fg:w="2"/><text x="1.8984%" y="607.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.6484%" y="581" width="0.1570%" height="15" fill="rgb(246,174,53)" fg:x="21" fg:w="2"/><text x="1.8984%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.57%)</title><rect x="0.3140%" y="693" width="1.5699%" height="15" fill="rgb(210,105,35)" fg:x="4" fg:w="20"/><text x="0.5640%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="1.8053%" y="677" width="0.0785%" height="15" fill="rgb(225,27,26)" fg:x="23" fg:w="1"/><text x="2.0553%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.65%)</title><rect x="0.3140%" y="709" width="1.6484%" height="15" fill="rgb(233,2,39)" fg:x="4" fg:w="21"/><text x="0.5640%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.8838%" y="693" width="0.0785%" height="15" fill="rgb(219,164,26)" fg:x="24" fg:w="1"/><text x="2.1338%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9623%" y="709" width="0.0785%" height="15" fill="rgb(236,211,5)" fg:x="25" fg:w="1"/><text x="2.2123%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 1.88%)</title><rect x="0.2355%" y="741" width="1.8838%" height="15" fill="rgb(244,227,23)" fg:x="3" fg:w="24"/><text x="0.4855%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (23 samples, 1.81%)</title><rect x="0.3140%" y="725" width="1.8053%" height="15" fill="rgb(230,184,8)" fg:x="4" fg:w="23"/><text x="0.5640%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.0408%" y="709" width="0.0785%" height="15" fill="rgb(217,125,48)" fg:x="26" fg:w="1"/><text x="2.2908%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.0408%" y="693" width="0.0785%" height="15" fill="rgb(223,192,47)" fg:x="26" fg:w="1"/><text x="2.2908%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.12%)</title><rect x="0.0785%" y="773" width="2.1193%" height="15" fill="rgb(226,119,10)" fg:x="1" fg:w="27"/><text x="0.3285%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (26 samples, 2.04%)</title><rect x="0.1570%" y="757" width="2.0408%" height="15" fill="rgb(221,49,29)" fg:x="2" fg:w="26"/><text x="0.4070%" y="767.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1193%" y="741" width="0.0785%" height="15" fill="rgb(217,205,19)" fg:x="27" fg:w="1"/><text x="2.3693%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.1978%" y="725" width="0.0785%" height="15" fill="rgb(242,104,7)" fg:x="28" fg:w="1"/><text x="2.4478%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="2.2763%" y="725" width="0.0785%" height="15" fill="rgb(209,154,48)" fg:x="29" fg:w="1"/><text x="2.5263%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="2.2763%" y="709" width="0.0785%" height="15" fill="rgb(219,213,46)" fg:x="29" fg:w="1"/><text x="2.5263%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="2.2763%" y="693" width="0.0785%" height="15" fill="rgb(229,105,38)" fg:x="29" fg:w="1"/><text x="2.5263%" y="703.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="2.6688%" y="661" width="0.1570%" height="15" fill="rgb(205,151,5)" fg:x="34" fg:w="2"/><text x="2.9188%" y="671.50"></text></g><g><title>dlerror (5 samples, 0.39%)</title><rect x="2.5118%" y="677" width="0.3925%" height="15" fill="rgb(248,115,40)" fg:x="32" fg:w="5"/><text x="2.7618%" y="687.50"></text></g><g><title>pthread_rwlock_rdlock (1 samples, 0.08%)</title><rect x="2.8257%" y="661" width="0.0785%" height="15" fill="rgb(206,179,2)" fg:x="36" fg:w="1"/><text x="3.0757%" y="671.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (19 samples, 1.49%)</title><rect x="2.4333%" y="709" width="1.4914%" height="15" fill="rgb(230,103,24)" fg:x="31" fg:w="19"/><text x="2.6833%" y="719.50"></text></g><g><title>libloading::safe::Library::new (19 samples, 1.49%)</title><rect x="2.4333%" y="693" width="1.4914%" height="15" fill="rgb(218,152,4)" fg:x="31" fg:w="19"/><text x="2.6833%" y="703.50"></text></g><g><title>dlopen (13 samples, 1.02%)</title><rect x="2.9042%" y="677" width="1.0204%" height="15" fill="rgb(236,161,54)" fg:x="37" fg:w="13"/><text x="3.1542%" y="687.50"></text></g><g><title>_dl_catch_error (13 samples, 1.02%)</title><rect x="2.9042%" y="661" width="1.0204%" height="15" fill="rgb(226,65,17)" fg:x="37" fg:w="13"/><text x="3.1542%" y="671.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.02%)</title><rect x="2.9042%" y="645" width="1.0204%" height="15" fill="rgb(221,134,44)" fg:x="37" fg:w="13"/><text x="3.1542%" y="655.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.02%)</title><rect x="2.9042%" y="629" width="1.0204%" height="15" fill="rgb(251,129,4)" fg:x="37" fg:w="13"/><text x="3.1542%" y="639.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.02%)</title><rect x="2.9042%" y="613" width="1.0204%" height="15" fill="rgb(244,32,34)" fg:x="37" fg:w="13"/><text x="3.1542%" y="623.50"></text></g><g><title>_dl_find_dso_for_object (1 samples, 0.08%)</title><rect x="3.8462%" y="597" width="0.0785%" height="15" fill="rgb(251,224,37)" fg:x="49" fg:w="1"/><text x="4.0962%" y="607.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (21 samples, 1.65%)</title><rect x="2.3548%" y="725" width="1.6484%" height="15" fill="rgb(248,117,31)" fg:x="30" fg:w="21"/><text x="2.6048%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="3.9246%" y="709" width="0.0785%" height="15" fill="rgb(222,208,37)" fg:x="50" fg:w="1"/><text x="4.1746%" y="719.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::convert::From&lt;libc::unix::timespec&gt;&gt;::from (1 samples, 0.08%)</title><rect x="3.9246%" y="693" width="0.0785%" height="15" fill="rgb(234,211,25)" fg:x="50" fg:w="1"/><text x="4.1746%" y="703.50"></text></g><g><title>std::sys::unix::time::Timespec::new (1 samples, 0.08%)</title><rect x="3.9246%" y="677" width="0.0785%" height="15" fill="rgb(211,72,6)" fg:x="50" fg:w="1"/><text x="4.1746%" y="687.50"></text></g><g><title>engine::session::Session::initialize (24 samples, 1.88%)</title><rect x="2.1978%" y="741" width="1.8838%" height="15" fill="rgb(249,198,38)" fg:x="28" fg:w="24"/><text x="2.4478%" y="751.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (1 samples, 0.08%)</title><rect x="4.0031%" y="725" width="0.0785%" height="15" fill="rgb(221,86,51)" fg:x="51" fg:w="1"/><text x="4.2531%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.0031%" y="709" width="0.0785%" height="15" fill="rgb(226,178,43)" fg:x="51" fg:w="1"/><text x="4.2531%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.0031%" y="693" width="0.0785%" height="15" fill="rgb(215,145,7)" fg:x="51" fg:w="1"/><text x="4.2531%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.0031%" y="677" width="0.0785%" height="15" fill="rgb(250,202,36)" fg:x="51" fg:w="1"/><text x="4.2531%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0031%" y="661" width="0.0785%" height="15" fill="rgb(215,86,13)" fg:x="51" fg:w="1"/><text x="4.2531%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0031%" y="645" width="0.0785%" height="15" fill="rgb(221,134,12)" fg:x="51" fg:w="1"/><text x="4.2531%" y="655.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="4.0816%" y="741" width="0.0785%" height="15" fill="rgb(213,82,10)" fg:x="52" fg:w="1"/><text x="4.3316%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="4.0816%" y="725" width="0.0785%" height="15" fill="rgb(214,142,0)" fg:x="52" fg:w="1"/><text x="4.3316%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="4.0816%" y="709" width="0.0785%" height="15" fill="rgb(205,145,9)" fg:x="52" fg:w="1"/><text x="4.3316%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.0816%" y="693" width="0.0785%" height="15" fill="rgb(244,214,8)" fg:x="52" fg:w="1"/><text x="4.3316%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.0816%" y="677" width="0.0785%" height="15" fill="rgb(224,72,51)" fg:x="52" fg:w="1"/><text x="4.3316%" y="687.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.0816%" y="661" width="0.0785%" height="15" fill="rgb(233,137,37)" fg:x="52" fg:w="1"/><text x="4.3316%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (26 samples, 2.04%)</title><rect x="2.1978%" y="773" width="2.0408%" height="15" fill="rgb(208,71,28)" fg:x="28" fg:w="26"/><text x="2.4478%" y="783.50">&lt;..</text></g><g><title>engine::session::Session::new (26 samples, 2.04%)</title><rect x="2.1978%" y="757" width="2.0408%" height="15" fill="rgb(226,31,7)" fg:x="28" fg:w="26"/><text x="2.4478%" y="767.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="4.1601%" y="741" width="0.0785%" height="15" fill="rgb(229,62,18)" fg:x="53" fg:w="1"/><text x="4.4101%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="4.3171%" y="757" width="0.0785%" height="15" fill="rgb(226,74,28)" fg:x="55" fg:w="1"/><text x="4.5671%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="4.3171%" y="741" width="0.0785%" height="15" fill="rgb(214,170,18)" fg:x="55" fg:w="1"/><text x="4.5671%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="4.3956%" y="741" width="0.1570%" height="15" fill="rgb(227,229,35)" fg:x="56" fg:w="2"/><text x="4.6456%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="4.3956%" y="725" width="0.1570%" height="15" fill="rgb(225,181,39)" fg:x="56" fg:w="2"/><text x="4.6456%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="4.3956%" y="709" width="0.1570%" height="15" fill="rgb(253,124,44)" fg:x="56" fg:w="2"/><text x="4.6456%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (3 samples, 0.24%)</title><rect x="4.3956%" y="757" width="0.2355%" height="15" fill="rgb(220,75,18)" fg:x="56" fg:w="3"/><text x="4.6456%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::QuickThing&gt; (1 samples, 0.08%)</title><rect x="4.5526%" y="741" width="0.0785%" height="15" fill="rgb(239,175,43)" fg:x="58" fg:w="1"/><text x="4.8026%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="4.6311%" y="741" width="0.0785%" height="15" fill="rgb(228,112,50)" fg:x="59" fg:w="1"/><text x="4.8811%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="4.6311%" y="725" width="0.0785%" height="15" fill="rgb(232,105,36)" fg:x="59" fg:w="1"/><text x="4.8811%" y="735.50"></text></g><g><title>engine::session::Session::set_session (1 samples, 0.08%)</title><rect x="4.7096%" y="741" width="0.0785%" height="15" fill="rgb(227,137,47)" fg:x="60" fg:w="1"/><text x="4.9596%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="4.7096%" y="725" width="0.0785%" height="15" fill="rgb(217,51,9)" fg:x="60" fg:w="1"/><text x="4.9596%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (4 samples, 0.31%)</title><rect x="4.9451%" y="661" width="0.3140%" height="15" fill="rgb(245,117,0)" fg:x="63" fg:w="4"/><text x="5.1951%" y="671.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="4.9451%" y="645" width="0.3140%" height="15" fill="rgb(252,52,30)" fg:x="63" fg:w="4"/><text x="5.1951%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.0235%" y="629" width="0.2355%" height="15" fill="rgb(227,85,33)" fg:x="64" fg:w="3"/><text x="5.2735%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.1805%" y="613" width="0.0785%" height="15" fill="rgb(220,157,20)" fg:x="66" fg:w="1"/><text x="5.4305%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.3375%" y="645" width="0.0785%" height="15" fill="rgb(254,14,34)" fg:x="68" fg:w="1"/><text x="5.5875%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3375%" y="629" width="0.0785%" height="15" fill="rgb(216,103,41)" fg:x="68" fg:w="1"/><text x="5.5875%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.3375%" y="613" width="0.0785%" height="15" fill="rgb(245,221,9)" fg:x="68" fg:w="1"/><text x="5.5875%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3375%" y="597" width="0.0785%" height="15" fill="rgb(254,136,47)" fg:x="68" fg:w="1"/><text x="5.5875%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="5.4945%" y="629" width="0.1570%" height="15" fill="rgb(235,71,46)" fg:x="70" fg:w="2"/><text x="5.7445%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.4945%" y="613" width="0.1570%" height="15" fill="rgb(242,154,29)" fg:x="70" fg:w="2"/><text x="5.7445%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="5.4945%" y="597" width="0.1570%" height="15" fill="rgb(210,65,31)" fg:x="70" fg:w="2"/><text x="5.7445%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="5.6515%" y="629" width="0.3925%" height="15" fill="rgb(244,9,50)" fg:x="72" fg:w="5"/><text x="5.9015%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="5.7300%" y="613" width="0.3140%" height="15" fill="rgb(215,141,38)" fg:x="73" fg:w="4"/><text x="5.9800%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="5.8085%" y="597" width="0.2355%" height="15" fill="rgb(241,129,6)" fg:x="74" fg:w="3"/><text x="6.0585%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="5.8870%" y="581" width="0.1570%" height="15" fill="rgb(253,169,4)" fg:x="75" fg:w="2"/><text x="6.1370%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.0440%" y="613" width="0.0785%" height="15" fill="rgb(237,82,36)" fg:x="77" fg:w="1"/><text x="6.2940%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.1224%" y="613" width="0.1570%" height="15" fill="rgb(209,171,11)" fg:x="78" fg:w="2"/><text x="6.3724%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.1224%" y="597" width="0.1570%" height="15" fill="rgb(242,19,22)" fg:x="78" fg:w="2"/><text x="6.3724%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="6.2794%" y="597" width="0.3140%" height="15" fill="rgb(251,122,24)" fg:x="80" fg:w="4"/><text x="6.5294%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.4364%" y="581" width="0.1570%" height="15" fill="rgb(226,166,42)" fg:x="82" fg:w="2"/><text x="6.6864%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="6.4364%" y="565" width="0.1570%" height="15" fill="rgb(244,101,48)" fg:x="82" fg:w="2"/><text x="6.6864%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5149%" y="549" width="0.0785%" height="15" fill="rgb(227,125,1)" fg:x="83" fg:w="1"/><text x="6.7649%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="6.5149%" y="533" width="0.0785%" height="15" fill="rgb(206,79,43)" fg:x="83" fg:w="1"/><text x="6.7649%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="6.5149%" y="517" width="0.0785%" height="15" fill="rgb(241,109,41)" fg:x="83" fg:w="1"/><text x="6.7649%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="6.5149%" y="501" width="0.0785%" height="15" fill="rgb(219,73,4)" fg:x="83" fg:w="1"/><text x="6.7649%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="6.5934%" y="581" width="0.0785%" height="15" fill="rgb(239,25,41)" fg:x="84" fg:w="1"/><text x="6.8434%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.5934%" y="565" width="0.0785%" height="15" fill="rgb(208,88,46)" fg:x="84" fg:w="1"/><text x="6.8434%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5934%" y="549" width="0.0785%" height="15" fill="rgb(239,184,9)" fg:x="84" fg:w="1"/><text x="6.8434%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5934%" y="533" width="0.0785%" height="15" fill="rgb(223,114,13)" fg:x="84" fg:w="1"/><text x="6.8434%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="6.8289%" y="565" width="0.3140%" height="15" fill="rgb(214,28,42)" fg:x="87" fg:w="4"/><text x="7.0789%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="6.9074%" y="549" width="0.2355%" height="15" fill="rgb(252,32,44)" fg:x="88" fg:w="3"/><text x="7.1574%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.0644%" y="533" width="0.0785%" height="15" fill="rgb(231,159,4)" fg:x="90" fg:w="1"/><text x="7.3144%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="6.2794%" y="613" width="0.9419%" height="15" fill="rgb(210,35,26)" fg:x="80" fg:w="12"/><text x="6.5294%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="6.5934%" y="597" width="0.6279%" height="15" fill="rgb(208,190,37)" fg:x="84" fg:w="8"/><text x="6.8434%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="6.6719%" y="581" width="0.5495%" height="15" fill="rgb(226,148,22)" fg:x="85" fg:w="7"/><text x="6.9219%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.1429%" y="565" width="0.0785%" height="15" fill="rgb(242,153,24)" fg:x="91" fg:w="1"/><text x="7.3929%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.1429%" y="549" width="0.0785%" height="15" fill="rgb(213,133,7)" fg:x="91" fg:w="1"/><text x="7.3929%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.33%)</title><rect x="6.0440%" y="629" width="1.3344%" height="15" fill="rgb(248,206,18)" fg:x="77" fg:w="17"/><text x="6.2940%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.2214%" y="613" width="0.1570%" height="15" fill="rgb(233,157,4)" fg:x="92" fg:w="2"/><text x="7.4714%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.2214%" y="597" width="0.1570%" height="15" fill="rgb(249,179,32)" fg:x="92" fg:w="2"/><text x="7.4714%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.2214%" y="581" width="0.1570%" height="15" fill="rgb(248,69,35)" fg:x="92" fg:w="2"/><text x="7.4714%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (27 samples, 2.12%)</title><rect x="5.4160%" y="645" width="2.1193%" height="15" fill="rgb(249,158,38)" fg:x="69" fg:w="27"/><text x="5.6660%" y="655.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.3783%" y="629" width="0.1570%" height="15" fill="rgb(223,18,43)" fg:x="94" fg:w="2"/><text x="7.6283%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (31 samples, 2.43%)</title><rect x="5.2590%" y="661" width="2.4333%" height="15" fill="rgb(238,42,45)" fg:x="67" fg:w="31"/><text x="5.5090%" y="671.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.5353%" y="645" width="0.1570%" height="15" fill="rgb(219,65,47)" fg:x="96" fg:w="2"/><text x="7.7853%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.5353%" y="629" width="0.1570%" height="15" fill="rgb(248,153,12)" fg:x="96" fg:w="2"/><text x="7.7853%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.6138%" y="613" width="0.0785%" height="15" fill="rgb(240,118,4)" fg:x="97" fg:w="1"/><text x="7.8638%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.6138%" y="597" width="0.0785%" height="15" fill="rgb(250,96,34)" fg:x="97" fg:w="1"/><text x="7.8638%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.6138%" y="581" width="0.0785%" height="15" fill="rgb(221,15,4)" fg:x="97" fg:w="1"/><text x="7.8638%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.6138%" y="565" width="0.0785%" height="15" fill="rgb(217,149,33)" fg:x="97" fg:w="1"/><text x="7.8638%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (36 samples, 2.83%)</title><rect x="4.9451%" y="677" width="2.8257%" height="15" fill="rgb(213,58,29)" fg:x="63" fg:w="36"/><text x="5.1951%" y="687.50">&lt;s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.6923%" y="661" width="0.0785%" height="15" fill="rgb(236,218,9)" fg:x="98" fg:w="1"/><text x="7.9423%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.6923%" y="645" width="0.0785%" height="15" fill="rgb(248,40,19)" fg:x="98" fg:w="1"/><text x="7.9423%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.7708%" y="645" width="0.0785%" height="15" fill="rgb(212,17,6)" fg:x="99" fg:w="1"/><text x="8.0208%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="7.8493%" y="629" width="0.0785%" height="15" fill="rgb(206,212,20)" fg:x="100" fg:w="1"/><text x="8.0993%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="8.0063%" y="613" width="0.0785%" height="15" fill="rgb(229,80,37)" fg:x="102" fg:w="1"/><text x="8.2563%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.0063%" y="597" width="0.0785%" height="15" fill="rgb(253,8,37)" fg:x="102" fg:w="1"/><text x="8.2563%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="7.7708%" y="677" width="0.5495%" height="15" fill="rgb(215,16,43)" fg:x="99" fg:w="7"/><text x="8.0208%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.55%)</title><rect x="7.7708%" y="661" width="0.5495%" height="15" fill="rgb(236,219,16)" fg:x="99" fg:w="7"/><text x="8.0208%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="7.8493%" y="645" width="0.4710%" height="15" fill="rgb(251,0,3)" fg:x="100" fg:w="6"/><text x="8.0993%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="7.9278%" y="629" width="0.3925%" height="15" fill="rgb(207,133,37)" fg:x="101" fg:w="5"/><text x="8.1778%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="8.0848%" y="613" width="0.2355%" height="15" fill="rgb(250,143,20)" fg:x="103" fg:w="3"/><text x="8.3348%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="8.1633%" y="597" width="0.1570%" height="15" fill="rgb(242,19,50)" fg:x="104" fg:w="2"/><text x="8.4133%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.2418%" y="581" width="0.0785%" height="15" fill="rgb(206,124,43)" fg:x="105" fg:w="1"/><text x="8.4918%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="8.4772%" y="629" width="0.1570%" height="15" fill="rgb(229,4,38)" fg:x="108" fg:w="2"/><text x="8.7272%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="8.6342%" y="629" width="0.2355%" height="15" fill="rgb(247,220,45)" fg:x="110" fg:w="3"/><text x="8.8842%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="8.7127%" y="613" width="0.1570%" height="15" fill="rgb(247,195,0)" fg:x="111" fg:w="2"/><text x="8.9627%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="8.7912%" y="597" width="0.0785%" height="15" fill="rgb(252,12,19)" fg:x="112" fg:w="1"/><text x="9.0412%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="8.8697%" y="629" width="0.0785%" height="15" fill="rgb(222,49,50)" fg:x="113" fg:w="1"/><text x="9.1197%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="8.8697%" y="613" width="0.0785%" height="15" fill="rgb(209,157,28)" fg:x="113" fg:w="1"/><text x="9.1197%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.8697%" y="597" width="0.0785%" height="15" fill="rgb(238,174,24)" fg:x="113" fg:w="1"/><text x="9.1197%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="8.8697%" y="581" width="0.0785%" height="15" fill="rgb(224,17,28)" fg:x="113" fg:w="1"/><text x="9.1197%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="8.9482%" y="613" width="0.0785%" height="15" fill="rgb(249,7,29)" fg:x="114" fg:w="1"/><text x="9.1982%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="8.9482%" y="629" width="0.1570%" height="15" fill="rgb(243,178,4)" fg:x="114" fg:w="2"/><text x="9.1982%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.0267%" y="613" width="0.0785%" height="15" fill="rgb(246,138,35)" fg:x="115" fg:w="1"/><text x="9.2767%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="9.1052%" y="629" width="0.0785%" height="15" fill="rgb(251,85,18)" fg:x="116" fg:w="1"/><text x="9.3552%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="9.4192%" y="565" width="0.0785%" height="15" fill="rgb(254,55,9)" fg:x="120" fg:w="1"/><text x="9.6692%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.4192%" y="549" width="0.0785%" height="15" fill="rgb(248,4,50)" fg:x="120" fg:w="1"/><text x="9.6692%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="9.5761%" y="549" width="0.1570%" height="15" fill="rgb(215,208,14)" fg:x="122" fg:w="2"/><text x="9.8261%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="9.5761%" y="533" width="0.1570%" height="15" fill="rgb(218,37,18)" fg:x="122" fg:w="2"/><text x="9.8261%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.47%)</title><rect x="9.4192%" y="581" width="0.4710%" height="15" fill="rgb(206,104,13)" fg:x="120" fg:w="6"/><text x="9.6692%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="9.4976%" y="565" width="0.3925%" height="15" fill="rgb(248,94,22)" fg:x="121" fg:w="5"/><text x="9.7476%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="9.7331%" y="549" width="0.1570%" height="15" fill="rgb(235,42,46)" fg:x="124" fg:w="2"/><text x="9.9831%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1256%" y="549" width="0.0785%" height="15" fill="rgb(220,228,48)" fg:x="129" fg:w="1"/><text x="10.3756%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1256%" y="533" width="0.0785%" height="15" fill="rgb(216,58,12)" fg:x="129" fg:w="1"/><text x="10.3756%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.1256%" y="517" width="0.0785%" height="15" fill="rgb(223,97,52)" fg:x="129" fg:w="1"/><text x="10.3756%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.2041%" y="501" width="0.0785%" height="15" fill="rgb(208,159,17)" fg:x="130" fg:w="1"/><text x="10.4541%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.3611%" y="485" width="0.0785%" height="15" fill="rgb(215,172,9)" fg:x="132" fg:w="1"/><text x="10.6111%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.18%)</title><rect x="9.3407%" y="597" width="1.1774%" height="15" fill="rgb(252,175,30)" fg:x="119" fg:w="15"/><text x="9.5907%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="9.8901%" y="581" width="0.6279%" height="15" fill="rgb(209,159,10)" fg:x="126" fg:w="8"/><text x="10.1401%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="9.8901%" y="565" width="0.6279%" height="15" fill="rgb(229,73,51)" fg:x="126" fg:w="8"/><text x="10.1401%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="10.2041%" y="549" width="0.3140%" height="15" fill="rgb(208,212,43)" fg:x="130" fg:w="4"/><text x="10.4541%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="10.2041%" y="533" width="0.3140%" height="15" fill="rgb(254,123,53)" fg:x="130" fg:w="4"/><text x="10.4541%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="10.2041%" y="517" width="0.3140%" height="15" fill="rgb(254,128,49)" fg:x="130" fg:w="4"/><text x="10.4541%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="10.2826%" y="501" width="0.2355%" height="15" fill="rgb(246,16,16)" fg:x="131" fg:w="3"/><text x="10.5326%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.4396%" y="485" width="0.0785%" height="15" fill="rgb(209,200,1)" fg:x="133" fg:w="1"/><text x="10.6896%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.4396%" y="469" width="0.0785%" height="15" fill="rgb(235,9,3)" fg:x="133" fg:w="1"/><text x="10.6896%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.4396%" y="453" width="0.0785%" height="15" fill="rgb(233,121,54)" fg:x="133" fg:w="1"/><text x="10.6896%" y="463.50"></text></g><g><title>engine::session::Session::flush (77 samples, 6.04%)</title><rect x="4.6311%" y="757" width="6.0440%" height="15" fill="rgb(236,80,25)" fg:x="59" fg:w="77"/><text x="4.8811%" y="767.50">engine::..</text></g><g><title>engine::session::state::State::close (75 samples, 5.89%)</title><rect x="4.7881%" y="741" width="5.8870%" height="15" fill="rgb(220,44,24)" fg:x="61" fg:w="75"/><text x="5.0381%" y="751.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (75 samples, 5.89%)</title><rect x="4.7881%" y="725" width="5.8870%" height="15" fill="rgb(236,225,16)" fg:x="61" fg:w="75"/><text x="5.0381%" y="735.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (75 samples, 5.89%)</title><rect x="4.7881%" y="709" width="5.8870%" height="15" fill="rgb(237,140,0)" fg:x="61" fg:w="75"/><text x="5.0381%" y="719.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (74 samples, 5.81%)</title><rect x="4.8666%" y="693" width="5.8085%" height="15" fill="rgb(243,225,53)" fg:x="62" fg:w="74"/><text x="5.1166%" y="703.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (30 samples, 2.35%)</title><rect x="8.3203%" y="677" width="2.3548%" height="15" fill="rgb(240,140,30)" fg:x="106" fg:w="30"/><text x="8.5703%" y="687.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (30 samples, 2.35%)</title><rect x="8.3203%" y="661" width="2.3548%" height="15" fill="rgb(217,51,16)" fg:x="106" fg:w="30"/><text x="8.5703%" y="671.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.28%)</title><rect x="8.3987%" y="645" width="2.2763%" height="15" fill="rgb(245,75,50)" fg:x="107" fg:w="29"/><text x="8.6487%" y="655.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 1.49%)</title><rect x="9.1837%" y="629" width="1.4914%" height="15" fill="rgb(208,174,22)" fg:x="117" fg:w="19"/><text x="9.4337%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 1.49%)</title><rect x="9.1837%" y="613" width="1.4914%" height="15" fill="rgb(219,98,50)" fg:x="117" fg:w="19"/><text x="9.4337%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="10.5181%" y="597" width="0.1570%" height="15" fill="rgb(243,138,3)" fg:x="134" fg:w="2"/><text x="10.7681%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5965%" y="581" width="0.0785%" height="15" fill="rgb(243,132,26)" fg:x="135" fg:w="1"/><text x="10.8465%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="10.7535%" y="725" width="0.0785%" height="15" fill="rgb(250,201,8)" fg:x="137" fg:w="1"/><text x="11.0035%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7535%" y="709" width="0.0785%" height="15" fill="rgb(213,91,26)" fg:x="137" fg:w="1"/><text x="11.0035%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="10.8320%" y="709" width="0.0785%" height="15" fill="rgb(229,117,1)" fg:x="138" fg:w="1"/><text x="11.0820%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.8320%" y="693" width="0.0785%" height="15" fill="rgb(229,24,6)" fg:x="138" fg:w="1"/><text x="11.0820%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="10.8320%" y="677" width="0.0785%" height="15" fill="rgb(206,69,11)" fg:x="138" fg:w="1"/><text x="11.0820%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="10.8320%" y="661" width="0.0785%" height="15" fill="rgb(234,111,34)" fg:x="138" fg:w="1"/><text x="11.0820%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.8320%" y="645" width="0.0785%" height="15" fill="rgb(213,187,51)" fg:x="138" fg:w="1"/><text x="11.0820%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="10.8320%" y="725" width="0.1570%" height="15" fill="rgb(207,45,11)" fg:x="138" fg:w="2"/><text x="11.0820%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="10.9105%" y="709" width="0.0785%" height="15" fill="rgb(225,151,47)" fg:x="139" fg:w="1"/><text x="11.1605%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9105%" y="693" width="0.0785%" height="15" fill="rgb(211,226,5)" fg:x="139" fg:w="1"/><text x="11.1605%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9105%" y="677" width="0.0785%" height="15" fill="rgb(214,83,52)" fg:x="139" fg:w="1"/><text x="11.1605%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="10.9890%" y="677" width="0.0785%" height="15" fill="rgb(229,49,53)" fg:x="140" fg:w="1"/><text x="11.2390%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="10.9890%" y="661" width="0.0785%" height="15" fill="rgb(246,8,28)" fg:x="140" fg:w="1"/><text x="11.2390%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9890%" y="645" width="0.0785%" height="15" fill="rgb(207,28,41)" fg:x="140" fg:w="1"/><text x="11.2390%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9890%" y="629" width="0.0785%" height="15" fill="rgb(254,22,25)" fg:x="140" fg:w="1"/><text x="11.2390%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9890%" y="613" width="0.0785%" height="15" fill="rgb(209,120,42)" fg:x="140" fg:w="1"/><text x="11.2390%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9890%" y="597" width="0.0785%" height="15" fill="rgb(216,194,18)" fg:x="140" fg:w="1"/><text x="11.2390%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="10.9890%" y="581" width="0.0785%" height="15" fill="rgb(213,70,17)" fg:x="140" fg:w="1"/><text x="11.2390%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.9890%" y="565" width="0.0785%" height="15" fill="rgb(228,66,19)" fg:x="140" fg:w="1"/><text x="11.2390%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="11.0675%" y="661" width="0.0785%" height="15" fill="rgb(236,221,54)" fg:x="141" fg:w="1"/><text x="11.3175%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="10.9890%" y="709" width="0.2355%" height="15" fill="rgb(207,175,15)" fg:x="140" fg:w="3"/><text x="11.2390%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="10.9890%" y="693" width="0.2355%" height="15" fill="rgb(234,76,8)" fg:x="140" fg:w="3"/><text x="11.2390%" y="703.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="11.0675%" y="677" width="0.1570%" height="15" fill="rgb(243,106,0)" fg:x="141" fg:w="2"/><text x="11.3175%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="11.1460%" y="661" width="0.0785%" height="15" fill="rgb(208,48,19)" fg:x="142" fg:w="1"/><text x="11.3960%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1460%" y="645" width="0.0785%" height="15" fill="rgb(251,50,29)" fg:x="142" fg:w="1"/><text x="11.3960%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1460%" y="629" width="0.0785%" height="15" fill="rgb(222,31,49)" fg:x="142" fg:w="1"/><text x="11.3960%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1460%" y="613" width="0.0785%" height="15" fill="rgb(232,33,18)" fg:x="142" fg:w="1"/><text x="11.3960%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.1460%" y="597" width="0.0785%" height="15" fill="rgb(209,1,44)" fg:x="142" fg:w="1"/><text x="11.3960%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1460%" y="581" width="0.0785%" height="15" fill="rgb(211,7,1)" fg:x="142" fg:w="1"/><text x="11.3960%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="11.1460%" y="565" width="0.0785%" height="15" fill="rgb(224,111,27)" fg:x="142" fg:w="1"/><text x="11.3960%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="11.1460%" y="549" width="0.0785%" height="15" fill="rgb(252,195,39)" fg:x="142" fg:w="1"/><text x="11.3960%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="11.1460%" y="533" width="0.0785%" height="15" fill="rgb(237,198,5)" fg:x="142" fg:w="1"/><text x="11.3960%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="11.1460%" y="517" width="0.0785%" height="15" fill="rgb(232,148,1)" fg:x="142" fg:w="1"/><text x="11.3960%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1460%" y="501" width="0.0785%" height="15" fill="rgb(249,41,3)" fg:x="142" fg:w="1"/><text x="11.3960%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="11.1460%" y="485" width="0.0785%" height="15" fill="rgb(215,14,33)" fg:x="142" fg:w="1"/><text x="11.3960%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="11.1460%" y="469" width="0.0785%" height="15" fill="rgb(209,146,24)" fg:x="142" fg:w="1"/><text x="11.3960%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.1460%" y="453" width="0.0785%" height="15" fill="rgb(219,51,47)" fg:x="142" fg:w="1"/><text x="11.3960%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.1460%" y="437" width="0.0785%" height="15" fill="rgb(234,217,40)" fg:x="142" fg:w="1"/><text x="11.3960%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.1460%" y="421" width="0.0785%" height="15" fill="rgb(228,34,26)" fg:x="142" fg:w="1"/><text x="11.3960%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.1460%" y="405" width="0.0785%" height="15" fill="rgb(224,50,29)" fg:x="142" fg:w="1"/><text x="11.3960%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.26%)</title><rect x="10.7535%" y="741" width="1.2559%" height="15" fill="rgb(205,79,51)" fg:x="137" fg:w="16"/><text x="11.0035%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.02%)</title><rect x="10.9890%" y="725" width="1.0204%" height="15" fill="rgb(218,136,28)" fg:x="140" fg:w="13"/><text x="11.2390%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (10 samples, 0.78%)</title><rect x="11.2245%" y="709" width="0.7849%" height="15" fill="rgb(220,150,10)" fg:x="143" fg:w="10"/><text x="11.4745%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.78%)</title><rect x="11.2245%" y="693" width="0.7849%" height="15" fill="rgb(242,158,47)" fg:x="143" fg:w="10"/><text x="11.4745%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.78%)</title><rect x="11.2245%" y="677" width="0.7849%" height="15" fill="rgb(209,68,0)" fg:x="143" fg:w="10"/><text x="11.4745%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.78%)</title><rect x="11.2245%" y="661" width="0.7849%" height="15" fill="rgb(208,13,41)" fg:x="143" fg:w="10"/><text x="11.4745%" y="671.50"></text></g><g><title>__libc_malloc (10 samples, 0.78%)</title><rect x="11.2245%" y="645" width="0.7849%" height="15" fill="rgb(226,201,7)" fg:x="143" fg:w="10"/><text x="11.4745%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="12.0879%" y="693" width="0.0785%" height="15" fill="rgb(236,103,26)" fg:x="154" fg:w="1"/><text x="12.3379%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="12.0879%" y="677" width="0.0785%" height="15" fill="rgb(243,162,8)" fg:x="154" fg:w="1"/><text x="12.3379%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="12.0879%" y="661" width="0.0785%" height="15" fill="rgb(237,225,11)" fg:x="154" fg:w="1"/><text x="12.3379%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0879%" y="645" width="0.0785%" height="15" fill="rgb(247,186,32)" fg:x="154" fg:w="1"/><text x="12.3379%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0879%" y="629" width="0.0785%" height="15" fill="rgb(215,26,28)" fg:x="154" fg:w="1"/><text x="12.3379%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.0879%" y="613" width="0.0785%" height="15" fill="rgb(208,121,6)" fg:x="154" fg:w="1"/><text x="12.3379%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0879%" y="597" width="0.0785%" height="15" fill="rgb(225,91,3)" fg:x="154" fg:w="1"/><text x="12.3379%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="12.0879%" y="581" width="0.0785%" height="15" fill="rgb(246,119,36)" fg:x="154" fg:w="1"/><text x="12.3379%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.0879%" y="565" width="0.0785%" height="15" fill="rgb(254,173,2)" fg:x="154" fg:w="1"/><text x="12.3379%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="12.0879%" y="549" width="0.0785%" height="15" fill="rgb(209,87,54)" fg:x="154" fg:w="1"/><text x="12.3379%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1664%" y="645" width="0.0785%" height="15" fill="rgb(223,216,20)" fg:x="155" fg:w="1"/><text x="12.4164%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.1664%" y="629" width="0.0785%" height="15" fill="rgb(220,31,8)" fg:x="155" fg:w="1"/><text x="12.4164%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.1664%" y="613" width="0.0785%" height="15" fill="rgb(220,185,15)" fg:x="155" fg:w="1"/><text x="12.4164%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.1664%" y="597" width="0.0785%" height="15" fill="rgb(247,190,50)" fg:x="155" fg:w="1"/><text x="12.4164%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="12.0879%" y="725" width="0.2355%" height="15" fill="rgb(239,173,47)" fg:x="154" fg:w="3"/><text x="12.3379%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="12.0879%" y="709" width="0.2355%" height="15" fill="rgb(218,190,42)" fg:x="154" fg:w="3"/><text x="12.3379%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="12.1664%" y="693" width="0.1570%" height="15" fill="rgb(251,207,16)" fg:x="155" fg:w="2"/><text x="12.4164%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="12.1664%" y="677" width="0.1570%" height="15" fill="rgb(222,199,47)" fg:x="155" fg:w="2"/><text x="12.4164%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="12.1664%" y="661" width="0.1570%" height="15" fill="rgb(245,190,7)" fg:x="155" fg:w="2"/><text x="12.4164%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2449%" y="645" width="0.0785%" height="15" fill="rgb(239,85,38)" fg:x="156" fg:w="1"/><text x="12.4949%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2449%" y="629" width="0.0785%" height="15" fill="rgb(229,69,51)" fg:x="156" fg:w="1"/><text x="12.4949%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.2449%" y="613" width="0.0785%" height="15" fill="rgb(231,104,51)" fg:x="156" fg:w="1"/><text x="12.4949%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.2449%" y="597" width="0.0785%" height="15" fill="rgb(235,49,4)" fg:x="156" fg:w="1"/><text x="12.4949%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="12.2449%" y="581" width="0.0785%" height="15" fill="rgb(246,166,20)" fg:x="156" fg:w="1"/><text x="12.4949%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.31%)</title><rect x="12.3234%" y="725" width="0.3140%" height="15" fill="rgb(230,119,37)" fg:x="157" fg:w="4"/><text x="12.5734%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="12.4019%" y="709" width="0.2355%" height="15" fill="rgb(234,77,34)" fg:x="158" fg:w="3"/><text x="12.6519%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.5589%" y="693" width="0.0785%" height="15" fill="rgb(211,222,33)" fg:x="160" fg:w="1"/><text x="12.8089%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="12.6374%" y="725" width="0.0785%" height="15" fill="rgb(226,45,42)" fg:x="161" fg:w="1"/><text x="12.8874%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6374%" y="709" width="0.0785%" height="15" fill="rgb(215,174,28)" fg:x="161" fg:w="1"/><text x="12.8874%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6374%" y="693" width="0.0785%" height="15" fill="rgb(254,173,49)" fg:x="161" fg:w="1"/><text x="12.8874%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="12.6374%" y="677" width="0.0785%" height="15" fill="rgb(229,191,6)" fg:x="161" fg:w="1"/><text x="12.8874%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.6374%" y="661" width="0.0785%" height="15" fill="rgb(212,145,22)" fg:x="161" fg:w="1"/><text x="12.8874%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6374%" y="645" width="0.0785%" height="15" fill="rgb(226,6,51)" fg:x="161" fg:w="1"/><text x="12.8874%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.7159%" y="709" width="0.0785%" height="15" fill="rgb(227,128,8)" fg:x="162" fg:w="1"/><text x="12.9659%" y="719.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="12.7943%" y="709" width="0.0785%" height="15" fill="rgb(205,24,10)" fg:x="163" fg:w="1"/><text x="13.0443%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="12.7943%" y="693" width="0.0785%" height="15" fill="rgb(217,147,27)" fg:x="163" fg:w="1"/><text x="13.0443%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.8728%" y="629" width="0.1570%" height="15" fill="rgb(250,82,42)" fg:x="164" fg:w="2"/><text x="13.1228%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9513%" y="613" width="0.0785%" height="15" fill="rgb(248,93,17)" fg:x="165" fg:w="1"/><text x="13.2013%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9513%" y="597" width="0.0785%" height="15" fill="rgb(254,212,40)" fg:x="165" fg:w="1"/><text x="13.2013%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.9513%" y="581" width="0.0785%" height="15" fill="rgb(229,209,2)" fg:x="165" fg:w="1"/><text x="13.2013%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9513%" y="565" width="0.0785%" height="15" fill="rgb(211,50,43)" fg:x="165" fg:w="1"/><text x="13.2013%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0298%" y="597" width="0.0785%" height="15" fill="rgb(245,196,29)" fg:x="166" fg:w="1"/><text x="13.2798%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="13.0298%" y="629" width="0.1570%" height="15" fill="rgb(216,132,13)" fg:x="166" fg:w="2"/><text x="13.2798%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="13.0298%" y="613" width="0.1570%" height="15" fill="rgb(251,108,21)" fg:x="166" fg:w="2"/><text x="13.2798%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1083%" y="597" width="0.0785%" height="15" fill="rgb(229,174,54)" fg:x="167" fg:w="1"/><text x="13.3583%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1083%" y="581" width="0.0785%" height="15" fill="rgb(211,175,47)" fg:x="167" fg:w="1"/><text x="13.3583%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1083%" y="565" width="0.0785%" height="15" fill="rgb(234,5,37)" fg:x="167" fg:w="1"/><text x="13.3583%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.1083%" y="549" width="0.0785%" height="15" fill="rgb(244,150,43)" fg:x="167" fg:w="1"/><text x="13.3583%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="12.8728%" y="677" width="0.4710%" height="15" fill="rgb(242,172,38)" fg:x="164" fg:w="6"/><text x="13.1228%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="12.8728%" y="661" width="0.4710%" height="15" fill="rgb(205,27,8)" fg:x="164" fg:w="6"/><text x="13.1228%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="12.8728%" y="645" width="0.4710%" height="15" fill="rgb(217,57,3)" fg:x="164" fg:w="6"/><text x="13.1228%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.1868%" y="629" width="0.1570%" height="15" fill="rgb(242,21,38)" fg:x="168" fg:w="2"/><text x="13.4368%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.1868%" y="613" width="0.1570%" height="15" fill="rgb(209,64,43)" fg:x="168" fg:w="2"/><text x="13.4368%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2653%" y="597" width="0.0785%" height="15" fill="rgb(222,2,46)" fg:x="169" fg:w="1"/><text x="13.5153%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2653%" y="581" width="0.0785%" height="15" fill="rgb(218,19,44)" fg:x="169" fg:w="1"/><text x="13.5153%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.2653%" y="565" width="0.0785%" height="15" fill="rgb(240,203,42)" fg:x="169" fg:w="1"/><text x="13.5153%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2653%" y="549" width="0.0785%" height="15" fill="rgb(229,23,45)" fg:x="169" fg:w="1"/><text x="13.5153%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.2653%" y="533" width="0.0785%" height="15" fill="rgb(205,228,51)" fg:x="169" fg:w="1"/><text x="13.5153%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.2653%" y="517" width="0.0785%" height="15" fill="rgb(239,36,20)" fg:x="169" fg:w="1"/><text x="13.5153%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.4223%" y="565" width="0.0785%" height="15" fill="rgb(248,172,27)" fg:x="171" fg:w="1"/><text x="13.6723%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.3438%" y="629" width="0.2355%" height="15" fill="rgb(244,55,32)" fg:x="170" fg:w="3"/><text x="13.5938%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.3438%" y="613" width="0.2355%" height="15" fill="rgb(215,97,16)" fg:x="170" fg:w="3"/><text x="13.5938%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.3438%" y="597" width="0.2355%" height="15" fill="rgb(224,80,29)" fg:x="170" fg:w="3"/><text x="13.5938%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.3438%" y="581" width="0.2355%" height="15" fill="rgb(216,93,47)" fg:x="170" fg:w="3"/><text x="13.5938%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.5008%" y="565" width="0.0785%" height="15" fill="rgb(238,159,10)" fg:x="172" fg:w="1"/><text x="13.7508%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="629" width="0.0785%" height="15" fill="rgb(223,98,29)" fg:x="173" fg:w="1"/><text x="13.8293%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="613" width="0.0785%" height="15" fill="rgb(210,176,23)" fg:x="173" fg:w="1"/><text x="13.8293%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="597" width="0.0785%" height="15" fill="rgb(242,162,27)" fg:x="173" fg:w="1"/><text x="13.8293%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="581" width="0.0785%" height="15" fill="rgb(245,109,32)" fg:x="173" fg:w="1"/><text x="13.8293%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="565" width="0.0785%" height="15" fill="rgb(248,87,8)" fg:x="173" fg:w="1"/><text x="13.8293%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.5793%" y="549" width="0.0785%" height="15" fill="rgb(250,160,50)" fg:x="173" fg:w="1"/><text x="13.8293%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (39 samples, 3.06%)</title><rect x="10.6750%" y="757" width="3.0612%" height="15" fill="rgb(246,165,25)" fg:x="136" fg:w="39"/><text x="10.9250%" y="767.50">plu..</text></g><g><title>plugins_core::tools::set_container (22 samples, 1.73%)</title><rect x="12.0094%" y="741" width="1.7268%" height="15" fill="rgb(249,219,3)" fg:x="153" fg:w="22"/><text x="12.2594%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (13 samples, 1.02%)</title><rect x="12.7159%" y="725" width="1.0204%" height="15" fill="rgb(226,66,5)" fg:x="162" fg:w="13"/><text x="12.9659%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.86%)</title><rect x="12.8728%" y="709" width="0.8634%" height="15" fill="rgb(250,220,43)" fg:x="164" fg:w="11"/><text x="13.1228%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.86%)</title><rect x="12.8728%" y="693" width="0.8634%" height="15" fill="rgb(225,111,31)" fg:x="164" fg:w="11"/><text x="13.1228%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="13.3438%" y="677" width="0.3925%" height="15" fill="rgb(248,106,18)" fg:x="170" fg:w="5"/><text x="13.5938%" y="687.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="13.3438%" y="661" width="0.3925%" height="15" fill="rgb(220,226,45)" fg:x="170" fg:w="5"/><text x="13.5938%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="13.3438%" y="645" width="0.3925%" height="15" fill="rgb(208,58,53)" fg:x="170" fg:w="5"/><text x="13.5938%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6578%" y="629" width="0.0785%" height="15" fill="rgb(209,133,1)" fg:x="174" fg:w="1"/><text x="13.9078%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6578%" y="613" width="0.0785%" height="15" fill="rgb(228,216,27)" fg:x="174" fg:w="1"/><text x="13.9078%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6578%" y="597" width="0.0785%" height="15" fill="rgb(238,155,2)" fg:x="174" fg:w="1"/><text x="13.9078%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6578%" y="581" width="0.0785%" height="15" fill="rgb(244,99,37)" fg:x="174" fg:w="1"/><text x="13.9078%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.6578%" y="565" width="0.0785%" height="15" fill="rgb(254,32,3)" fg:x="174" fg:w="1"/><text x="13.9078%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6578%" y="549" width="0.0785%" height="15" fill="rgb(234,46,50)" fg:x="174" fg:w="1"/><text x="13.9078%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.6578%" y="533" width="0.0785%" height="15" fill="rgb(232,118,51)" fg:x="174" fg:w="1"/><text x="13.9078%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.6578%" y="517" width="0.0785%" height="15" fill="rgb(207,24,32)" fg:x="174" fg:w="1"/><text x="13.9078%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.7363%" y="581" width="0.0785%" height="15" fill="rgb(208,107,43)" fg:x="175" fg:w="1"/><text x="13.9863%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.7363%" y="565" width="0.0785%" height="15" fill="rgb(231,28,9)" fg:x="175" fg:w="1"/><text x="13.9863%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.7363%" y="549" width="0.0785%" height="15" fill="rgb(241,204,15)" fg:x="175" fg:w="1"/><text x="13.9863%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.7363%" y="533" width="0.0785%" height="15" fill="rgb(214,54,15)" fg:x="175" fg:w="1"/><text x="13.9863%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.7363%" y="517" width="0.0785%" height="15" fill="rgb(230,12,28)" fg:x="175" fg:w="1"/><text x="13.9863%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.7363%" y="501" width="0.0785%" height="15" fill="rgb(221,171,5)" fg:x="175" fg:w="1"/><text x="13.9863%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.7363%" y="485" width="0.0785%" height="15" fill="rgb(207,72,25)" fg:x="175" fg:w="1"/><text x="13.9863%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="13.8148%" y="565" width="0.0785%" height="15" fill="rgb(249,79,37)" fg:x="176" fg:w="1"/><text x="14.0648%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="13.8148%" y="549" width="0.0785%" height="15" fill="rgb(209,98,49)" fg:x="176" fg:w="1"/><text x="14.0648%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="13.8148%" y="533" width="0.0785%" height="15" fill="rgb(221,62,13)" fg:x="176" fg:w="1"/><text x="14.0648%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="13.8148%" y="517" width="0.0785%" height="15" fill="rgb(223,39,6)" fg:x="176" fg:w="1"/><text x="14.0648%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8148%" y="501" width="0.0785%" height="15" fill="rgb(246,163,20)" fg:x="176" fg:w="1"/><text x="14.0648%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8148%" y="485" width="0.0785%" height="15" fill="rgb(211,111,29)" fg:x="176" fg:w="1"/><text x="14.0648%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.8148%" y="469" width="0.0785%" height="15" fill="rgb(243,118,5)" fg:x="176" fg:w="1"/><text x="14.0648%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.8148%" y="453" width="0.0785%" height="15" fill="rgb(240,144,52)" fg:x="176" fg:w="1"/><text x="14.0648%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.8148%" y="437" width="0.0785%" height="15" fill="rgb(244,158,36)" fg:x="176" fg:w="1"/><text x="14.0648%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.8148%" y="421" width="0.0785%" height="15" fill="rgb(241,109,37)" fg:x="176" fg:w="1"/><text x="14.0648%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.8148%" y="405" width="0.0785%" height="15" fill="rgb(213,95,32)" fg:x="176" fg:w="1"/><text x="14.0648%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.8148%" y="389" width="0.0785%" height="15" fill="rgb(252,193,9)" fg:x="176" fg:w="1"/><text x="14.0648%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.8148%" y="373" width="0.0785%" height="15" fill="rgb(225,213,21)" fg:x="176" fg:w="1"/><text x="14.0648%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.8148%" y="357" width="0.0785%" height="15" fill="rgb(220,172,46)" fg:x="176" fg:w="1"/><text x="14.0648%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.8148%" y="341" width="0.0785%" height="15" fill="rgb(235,75,41)" fg:x="176" fg:w="1"/><text x="14.0648%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.8148%" y="325" width="0.0785%" height="15" fill="rgb(213,86,9)" fg:x="176" fg:w="1"/><text x="14.0648%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.8148%" y="309" width="0.0785%" height="15" fill="rgb(238,127,51)" fg:x="176" fg:w="1"/><text x="14.0648%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.8148%" y="293" width="0.0785%" height="15" fill="rgb(215,2,54)" fg:x="176" fg:w="1"/><text x="14.0648%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.8148%" y="277" width="0.0785%" height="15" fill="rgb(245,80,6)" fg:x="176" fg:w="1"/><text x="14.0648%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="13.7363%" y="725" width="0.2355%" height="15" fill="rgb(233,106,42)" fg:x="175" fg:w="3"/><text x="13.9863%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="13.7363%" y="709" width="0.2355%" height="15" fill="rgb(244,86,38)" fg:x="175" fg:w="3"/><text x="13.9863%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="13.7363%" y="693" width="0.2355%" height="15" fill="rgb(242,167,7)" fg:x="175" fg:w="3"/><text x="13.9863%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="13.7363%" y="677" width="0.2355%" height="15" fill="rgb(218,216,3)" fg:x="175" fg:w="3"/><text x="13.9863%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.7363%" y="661" width="0.2355%" height="15" fill="rgb(206,136,36)" fg:x="175" fg:w="3"/><text x="13.9863%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="13.7363%" y="645" width="0.2355%" height="15" fill="rgb(206,206,15)" fg:x="175" fg:w="3"/><text x="13.9863%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="13.7363%" y="629" width="0.2355%" height="15" fill="rgb(207,163,34)" fg:x="175" fg:w="3"/><text x="13.9863%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="13.7363%" y="613" width="0.2355%" height="15" fill="rgb(240,127,22)" fg:x="175" fg:w="3"/><text x="13.9863%" y="623.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="13.7363%" y="597" width="0.2355%" height="15" fill="rgb(227,49,5)" fg:x="175" fg:w="3"/><text x="13.9863%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.8148%" y="581" width="0.1570%" height="15" fill="rgb(231,8,6)" fg:x="176" fg:w="2"/><text x="14.0648%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8932%" y="565" width="0.0785%" height="15" fill="rgb(223,21,24)" fg:x="177" fg:w="1"/><text x="14.1432%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.8932%" y="549" width="0.0785%" height="15" fill="rgb(244,44,52)" fg:x="177" fg:w="1"/><text x="14.1432%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.8932%" y="533" width="0.0785%" height="15" fill="rgb(207,73,28)" fg:x="177" fg:w="1"/><text x="14.1432%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.8932%" y="517" width="0.0785%" height="15" fill="rgb(234,215,10)" fg:x="177" fg:w="1"/><text x="14.1432%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.8932%" y="501" width="0.0785%" height="15" fill="rgb(236,85,3)" fg:x="177" fg:w="1"/><text x="14.1432%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.8932%" y="485" width="0.0785%" height="15" fill="rgb(236,102,39)" fg:x="177" fg:w="1"/><text x="14.1432%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.8932%" y="469" width="0.0785%" height="15" fill="rgb(243,50,8)" fg:x="177" fg:w="1"/><text x="14.1432%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.8932%" y="453" width="0.0785%" height="15" fill="rgb(207,111,4)" fg:x="177" fg:w="1"/><text x="14.1432%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.8932%" y="437" width="0.0785%" height="15" fill="rgb(230,52,42)" fg:x="177" fg:w="1"/><text x="14.1432%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.8932%" y="421" width="0.0785%" height="15" fill="rgb(252,178,50)" fg:x="177" fg:w="1"/><text x="14.1432%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.8932%" y="405" width="0.0785%" height="15" fill="rgb(234,46,35)" fg:x="177" fg:w="1"/><text x="14.1432%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.8932%" y="389" width="0.0785%" height="15" fill="rgb(228,69,37)" fg:x="177" fg:w="1"/><text x="14.1432%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.8932%" y="373" width="0.0785%" height="15" fill="rgb(221,21,11)" fg:x="177" fg:w="1"/><text x="14.1432%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.8932%" y="357" width="0.0785%" height="15" fill="rgb(223,56,9)" fg:x="177" fg:w="1"/><text x="14.1432%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.8932%" y="341" width="0.0785%" height="15" fill="rgb(234,30,19)" fg:x="177" fg:w="1"/><text x="14.1432%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9717%" y="613" width="0.0785%" height="15" fill="rgb(211,64,54)" fg:x="178" fg:w="1"/><text x="14.2217%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.9717%" y="597" width="0.0785%" height="15" fill="rgb(250,189,5)" fg:x="178" fg:w="1"/><text x="14.2217%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.9717%" y="581" width="0.0785%" height="15" fill="rgb(214,180,13)" fg:x="178" fg:w="1"/><text x="14.2217%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.9717%" y="565" width="0.0785%" height="15" fill="rgb(238,40,40)" fg:x="178" fg:w="1"/><text x="14.2217%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.9717%" y="549" width="0.0785%" height="15" fill="rgb(214,101,38)" fg:x="178" fg:w="1"/><text x="14.2217%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9717%" y="533" width="0.0785%" height="15" fill="rgb(242,65,53)" fg:x="178" fg:w="1"/><text x="14.2217%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.9717%" y="517" width="0.0785%" height="15" fill="rgb(230,22,45)" fg:x="178" fg:w="1"/><text x="14.2217%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.9717%" y="501" width="0.0785%" height="15" fill="rgb(223,77,1)" fg:x="178" fg:w="1"/><text x="14.2217%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.9717%" y="485" width="0.0785%" height="15" fill="rgb(227,33,37)" fg:x="178" fg:w="1"/><text x="14.2217%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.9717%" y="469" width="0.0785%" height="15" fill="rgb(224,148,39)" fg:x="178" fg:w="1"/><text x="14.2217%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.9717%" y="453" width="0.0785%" height="15" fill="rgb(232,212,39)" fg:x="178" fg:w="1"/><text x="14.2217%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.9717%" y="437" width="0.0785%" height="15" fill="rgb(251,172,7)" fg:x="178" fg:w="1"/><text x="14.2217%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="13.9717%" y="629" width="0.1570%" height="15" fill="rgb(219,39,9)" fg:x="178" fg:w="2"/><text x="14.2217%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.0502%" y="613" width="0.0785%" height="15" fill="rgb(228,118,14)" fg:x="179" fg:w="1"/><text x="14.3002%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.9717%" y="677" width="0.2355%" height="15" fill="rgb(207,140,10)" fg:x="178" fg:w="3"/><text x="14.2217%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.9717%" y="661" width="0.2355%" height="15" fill="rgb(227,111,53)" fg:x="178" fg:w="3"/><text x="14.2217%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="13.9717%" y="645" width="0.2355%" height="15" fill="rgb(216,165,16)" fg:x="178" fg:w="3"/><text x="14.2217%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1287%" y="629" width="0.0785%" height="15" fill="rgb(226,111,18)" fg:x="180" fg:w="1"/><text x="14.3787%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.1287%" y="613" width="0.0785%" height="15" fill="rgb(251,27,17)" fg:x="180" fg:w="1"/><text x="14.3787%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.1287%" y="597" width="0.0785%" height="15" fill="rgb(254,69,9)" fg:x="180" fg:w="1"/><text x="14.3787%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.1287%" y="581" width="0.0785%" height="15" fill="rgb(234,140,37)" fg:x="180" fg:w="1"/><text x="14.3787%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.1287%" y="565" width="0.0785%" height="15" fill="rgb(220,93,8)" fg:x="180" fg:w="1"/><text x="14.3787%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="14.1287%" y="549" width="0.0785%" height="15" fill="rgb(236,113,3)" fg:x="180" fg:w="1"/><text x="14.3787%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="14.1287%" y="533" width="0.0785%" height="15" fill="rgb(234,108,23)" fg:x="180" fg:w="1"/><text x="14.3787%" y="543.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="14.2072%" y="677" width="0.0785%" height="15" fill="rgb(205,114,34)" fg:x="181" fg:w="1"/><text x="14.4572%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2857%" y="613" width="0.0785%" height="15" fill="rgb(236,200,45)" fg:x="182" fg:w="1"/><text x="14.5357%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.55%)</title><rect x="13.9717%" y="725" width="0.5495%" height="15" fill="rgb(227,194,29)" fg:x="178" fg:w="7"/><text x="14.2217%" y="735.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.55%)</title><rect x="13.9717%" y="709" width="0.5495%" height="15" fill="rgb(250,76,42)" fg:x="178" fg:w="7"/><text x="14.2217%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="13.9717%" y="693" width="0.5495%" height="15" fill="rgb(208,128,8)" fg:x="178" fg:w="7"/><text x="14.2217%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.2857%" y="677" width="0.2355%" height="15" fill="rgb(229,209,35)" fg:x="182" fg:w="3"/><text x="14.5357%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2857%" y="661" width="0.2355%" height="15" fill="rgb(215,39,53)" fg:x="182" fg:w="3"/><text x="14.5357%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="14.2857%" y="645" width="0.2355%" height="15" fill="rgb(219,123,41)" fg:x="182" fg:w="3"/><text x="14.5357%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2857%" y="629" width="0.2355%" height="15" fill="rgb(212,158,18)" fg:x="182" fg:w="3"/><text x="14.5357%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.3642%" y="613" width="0.1570%" height="15" fill="rgb(234,196,53)" fg:x="183" fg:w="2"/><text x="14.6142%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.3642%" y="597" width="0.1570%" height="15" fill="rgb(210,139,12)" fg:x="183" fg:w="2"/><text x="14.6142%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4427%" y="581" width="0.0785%" height="15" fill="rgb(220,116,54)" fg:x="184" fg:w="1"/><text x="14.6927%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4427%" y="565" width="0.0785%" height="15" fill="rgb(247,103,28)" fg:x="184" fg:w="1"/><text x="14.6927%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4427%" y="549" width="0.0785%" height="15" fill="rgb(253,156,45)" fg:x="184" fg:w="1"/><text x="14.6927%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4427%" y="533" width="0.0785%" height="15" fill="rgb(237,157,52)" fg:x="184" fg:w="1"/><text x="14.6927%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="14.4427%" y="517" width="0.0785%" height="15" fill="rgb(253,112,16)" fg:x="184" fg:w="1"/><text x="14.6927%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="14.4427%" y="501" width="0.0785%" height="15" fill="rgb(234,70,18)" fg:x="184" fg:w="1"/><text x="14.6927%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5997%" y="677" width="0.0785%" height="15" fill="rgb(247,138,19)" fg:x="186" fg:w="1"/><text x="14.8497%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5997%" y="661" width="0.0785%" height="15" fill="rgb(207,171,1)" fg:x="186" fg:w="1"/><text x="14.8497%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="14.5212%" y="709" width="0.2355%" height="15" fill="rgb(239,213,3)" fg:x="185" fg:w="3"/><text x="14.7712%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.5212%" y="693" width="0.2355%" height="15" fill="rgb(226,112,4)" fg:x="185" fg:w="3"/><text x="14.7712%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.6782%" y="677" width="0.0785%" height="15" fill="rgb(252,170,12)" fg:x="187" fg:w="1"/><text x="14.9282%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.6782%" y="661" width="0.0785%" height="15" fill="rgb(241,106,13)" fg:x="187" fg:w="1"/><text x="14.9282%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u64 (1 samples, 0.08%)</title><rect x="14.6782%" y="645" width="0.0785%" height="15" fill="rgb(225,73,23)" fg:x="187" fg:w="1"/><text x="14.9282%" y="655.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (4 samples, 0.31%)</title><rect x="14.5212%" y="725" width="0.3140%" height="15" fill="rgb(251,227,29)" fg:x="185" fg:w="4"/><text x="14.7712%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.7567%" y="709" width="0.0785%" height="15" fill="rgb(237,144,13)" fg:x="188" fg:w="1"/><text x="15.0067%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.7567%" y="693" width="0.0785%" height="15" fill="rgb(232,106,46)" fg:x="188" fg:w="1"/><text x="15.0067%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.7567%" y="677" width="0.0785%" height="15" fill="rgb(245,154,53)" fg:x="188" fg:w="1"/><text x="15.0067%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8352%" y="645" width="0.0785%" height="15" fill="rgb(212,119,47)" fg:x="189" fg:w="1"/><text x="15.0852%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8352%" y="629" width="0.0785%" height="15" fill="rgb(253,135,25)" fg:x="189" fg:w="1"/><text x="15.0852%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.8352%" y="613" width="0.0785%" height="15" fill="rgb(253,208,39)" fg:x="189" fg:w="1"/><text x="15.0852%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8352%" y="597" width="0.0785%" height="15" fill="rgb(226,64,12)" fg:x="189" fg:w="1"/><text x="15.0852%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.8352%" y="677" width="0.1570%" height="15" fill="rgb(214,162,37)" fg:x="189" fg:w="2"/><text x="15.0852%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.8352%" y="661" width="0.1570%" height="15" fill="rgb(250,104,5)" fg:x="189" fg:w="2"/><text x="15.0852%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9137%" y="645" width="0.0785%" height="15" fill="rgb(220,202,50)" fg:x="190" fg:w="1"/><text x="15.1637%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9137%" y="629" width="0.0785%" height="15" fill="rgb(248,67,38)" fg:x="190" fg:w="1"/><text x="15.1637%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9137%" y="613" width="0.0785%" height="15" fill="rgb(242,94,35)" fg:x="190" fg:w="1"/><text x="15.1637%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9137%" y="597" width="0.0785%" height="15" fill="rgb(209,78,37)" fg:x="190" fg:w="1"/><text x="15.1637%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.9137%" y="581" width="0.0785%" height="15" fill="rgb(230,126,47)" fg:x="190" fg:w="1"/><text x="15.1637%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9137%" y="565" width="0.0785%" height="15" fill="rgb(222,110,35)" fg:x="190" fg:w="1"/><text x="15.1637%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9137%" y="549" width="0.0785%" height="15" fill="rgb(233,154,20)" fg:x="190" fg:w="1"/><text x="15.1637%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (17 samples, 1.33%)</title><rect x="13.7363%" y="757" width="1.3344%" height="15" fill="rgb(223,53,50)" fg:x="175" fg:w="17"/><text x="13.9863%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.33%)</title><rect x="13.7363%" y="741" width="1.3344%" height="15" fill="rgb(251,27,26)" fg:x="175" fg:w="17"/><text x="13.9863%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="14.8352%" y="725" width="0.2355%" height="15" fill="rgb(223,189,16)" fg:x="189" fg:w="3"/><text x="15.0852%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="14.8352%" y="709" width="0.2355%" height="15" fill="rgb(207,5,54)" fg:x="189" fg:w="3"/><text x="15.0852%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.8352%" y="693" width="0.2355%" height="15" fill="rgb(254,124,50)" fg:x="189" fg:w="3"/><text x="15.0852%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="14.9922%" y="677" width="0.0785%" height="15" fill="rgb(253,193,24)" fg:x="191" fg:w="1"/><text x="15.2422%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="14.9922%" y="661" width="0.0785%" height="15" fill="rgb(235,170,24)" fg:x="191" fg:w="1"/><text x="15.2422%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9922%" y="645" width="0.0785%" height="15" fill="rgb(222,212,52)" fg:x="191" fg:w="1"/><text x="15.2422%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9922%" y="629" width="0.0785%" height="15" fill="rgb(223,17,45)" fg:x="191" fg:w="1"/><text x="15.2422%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.9922%" y="613" width="0.0785%" height="15" fill="rgb(227,103,26)" fg:x="191" fg:w="1"/><text x="15.2422%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.9922%" y="597" width="0.0785%" height="15" fill="rgb(251,151,25)" fg:x="191" fg:w="1"/><text x="15.2422%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="14.9922%" y="581" width="0.0785%" height="15" fill="rgb(248,144,29)" fg:x="191" fg:w="1"/><text x="15.2422%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="15.0706%" y="725" width="0.0785%" height="15" fill="rgb(245,97,16)" fg:x="192" fg:w="1"/><text x="15.3206%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.0706%" y="709" width="0.0785%" height="15" fill="rgb(220,200,29)" fg:x="192" fg:w="1"/><text x="15.3206%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.0706%" y="693" width="0.0785%" height="15" fill="rgb(206,38,29)" fg:x="192" fg:w="1"/><text x="15.3206%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="677" width="0.0785%" height="15" fill="rgb(245,19,52)" fg:x="192" fg:w="1"/><text x="15.3206%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0706%" y="661" width="0.0785%" height="15" fill="rgb(205,67,43)" fg:x="192" fg:w="1"/><text x="15.3206%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="645" width="0.0785%" height="15" fill="rgb(217,128,23)" fg:x="192" fg:w="1"/><text x="15.3206%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="629" width="0.0785%" height="15" fill="rgb(210,109,28)" fg:x="192" fg:w="1"/><text x="15.3206%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="613" width="0.0785%" height="15" fill="rgb(233,181,7)" fg:x="192" fg:w="1"/><text x="15.3206%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0706%" y="597" width="0.0785%" height="15" fill="rgb(244,11,22)" fg:x="192" fg:w="1"/><text x="15.3206%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="581" width="0.0785%" height="15" fill="rgb(205,124,54)" fg:x="192" fg:w="1"/><text x="15.3206%" y="591.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="565" width="0.0785%" height="15" fill="rgb(218,21,27)" fg:x="192" fg:w="1"/><text x="15.3206%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.0706%" y="549" width="0.0785%" height="15" fill="rgb(224,153,33)" fg:x="192" fg:w="1"/><text x="15.3206%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.0706%" y="533" width="0.0785%" height="15" fill="rgb(240,219,28)" fg:x="192" fg:w="1"/><text x="15.3206%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.1491%" y="709" width="0.0785%" height="15" fill="rgb(214,80,29)" fg:x="193" fg:w="1"/><text x="15.3991%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.1491%" y="693" width="0.0785%" height="15" fill="rgb(247,148,44)" fg:x="193" fg:w="1"/><text x="15.3991%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="15.0706%" y="741" width="0.2355%" height="15" fill="rgb(243,110,30)" fg:x="192" fg:w="3"/><text x="15.3206%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.1491%" y="725" width="0.1570%" height="15" fill="rgb(243,173,41)" fg:x="193" fg:w="2"/><text x="15.3991%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="15.2276%" y="709" width="0.0785%" height="15" fill="rgb(225,160,47)" fg:x="194" fg:w="1"/><text x="15.4776%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.2276%" y="693" width="0.0785%" height="15" fill="rgb(215,44,21)" fg:x="194" fg:w="1"/><text x="15.4776%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2276%" y="677" width="0.0785%" height="15" fill="rgb(248,90,3)" fg:x="194" fg:w="1"/><text x="15.4776%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2276%" y="661" width="0.0785%" height="15" fill="rgb(220,196,49)" fg:x="194" fg:w="1"/><text x="15.4776%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2276%" y="645" width="0.0785%" height="15" fill="rgb(217,138,14)" fg:x="194" fg:w="1"/><text x="15.4776%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2276%" y="629" width="0.0785%" height="15" fill="rgb(219,111,20)" fg:x="194" fg:w="1"/><text x="15.4776%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="15.2276%" y="613" width="0.0785%" height="15" fill="rgb(218,114,4)" fg:x="194" fg:w="1"/><text x="15.4776%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2276%" y="597" width="0.0785%" height="15" fill="rgb(238,133,3)" fg:x="194" fg:w="1"/><text x="15.4776%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.2276%" y="581" width="0.0785%" height="15" fill="rgb(224,95,0)" fg:x="194" fg:w="1"/><text x="15.4776%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2276%" y="565" width="0.0785%" height="15" fill="rgb(220,169,35)" fg:x="194" fg:w="1"/><text x="15.4776%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="15.3061%" y="709" width="0.0785%" height="15" fill="rgb(242,116,47)" fg:x="195" fg:w="1"/><text x="15.5561%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="15.3061%" y="693" width="0.0785%" height="15" fill="rgb(251,42,20)" fg:x="195" fg:w="1"/><text x="15.5561%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="15.3061%" y="741" width="0.1570%" height="15" fill="rgb(234,7,34)" fg:x="195" fg:w="2"/><text x="15.5561%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="15.3061%" y="725" width="0.1570%" height="15" fill="rgb(243,208,13)" fg:x="195" fg:w="2"/><text x="15.5561%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="15.3846%" y="709" width="0.0785%" height="15" fill="rgb(227,33,28)" fg:x="196" fg:w="1"/><text x="15.6346%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="15.3846%" y="693" width="0.0785%" height="15" fill="rgb(250,47,37)" fg:x="196" fg:w="1"/><text x="15.6346%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.4631%" y="693" width="0.0785%" height="15" fill="rgb(235,111,52)" fg:x="197" fg:w="1"/><text x="15.7131%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="15.4631%" y="677" width="0.0785%" height="15" fill="rgb(223,64,28)" fg:x="197" fg:w="1"/><text x="15.7131%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5416%" y="613" width="0.0785%" height="15" fill="rgb(236,67,22)" fg:x="198" fg:w="1"/><text x="15.7916%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5416%" y="597" width="0.0785%" height="15" fill="rgb(243,79,24)" fg:x="198" fg:w="1"/><text x="15.7916%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5416%" y="581" width="0.0785%" height="15" fill="rgb(241,225,22)" fg:x="198" fg:w="1"/><text x="15.7916%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5416%" y="565" width="0.0785%" height="15" fill="rgb(228,214,26)" fg:x="198" fg:w="1"/><text x="15.7916%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.5416%" y="549" width="0.0785%" height="15" fill="rgb(219,84,52)" fg:x="198" fg:w="1"/><text x="15.7916%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.6201%" y="485" width="0.0785%" height="15" fill="rgb(220,12,22)" fg:x="199" fg:w="1"/><text x="15.8701%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="15.5416%" y="693" width="0.2355%" height="15" fill="rgb(219,9,49)" fg:x="198" fg:w="3"/><text x="15.7916%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="15.5416%" y="677" width="0.2355%" height="15" fill="rgb(237,40,43)" fg:x="198" fg:w="3"/><text x="15.7916%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="15.5416%" y="661" width="0.2355%" height="15" fill="rgb(212,189,32)" fg:x="198" fg:w="3"/><text x="15.7916%" y="671.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.5416%" y="645" width="0.2355%" height="15" fill="rgb(247,48,9)" fg:x="198" fg:w="3"/><text x="15.7916%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.5416%" y="629" width="0.2355%" height="15" fill="rgb(247,112,3)" fg:x="198" fg:w="3"/><text x="15.7916%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6201%" y="613" width="0.1570%" height="15" fill="rgb(243,110,18)" fg:x="199" fg:w="2"/><text x="15.8701%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6201%" y="597" width="0.1570%" height="15" fill="rgb(233,223,44)" fg:x="199" fg:w="2"/><text x="15.8701%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6201%" y="581" width="0.1570%" height="15" fill="rgb(245,160,20)" fg:x="199" fg:w="2"/><text x="15.8701%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6201%" y="565" width="0.1570%" height="15" fill="rgb(225,37,1)" fg:x="199" fg:w="2"/><text x="15.8701%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="15.6201%" y="549" width="0.1570%" height="15" fill="rgb(253,227,39)" fg:x="199" fg:w="2"/><text x="15.8701%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6201%" y="533" width="0.1570%" height="15" fill="rgb(240,179,26)" fg:x="199" fg:w="2"/><text x="15.8701%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="15.6201%" y="517" width="0.1570%" height="15" fill="rgb(237,212,23)" fg:x="199" fg:w="2"/><text x="15.8701%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.6201%" y="501" width="0.1570%" height="15" fill="rgb(221,38,11)" fg:x="199" fg:w="2"/><text x="15.8701%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6986%" y="485" width="0.0785%" height="15" fill="rgb(215,85,6)" fg:x="200" fg:w="1"/><text x="15.9486%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6986%" y="469" width="0.0785%" height="15" fill="rgb(239,64,14)" fg:x="200" fg:w="1"/><text x="15.9486%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.6986%" y="453" width="0.0785%" height="15" fill="rgb(215,150,32)" fg:x="200" fg:w="1"/><text x="15.9486%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="15.6986%" y="437" width="0.0785%" height="15" fill="rgb(238,15,13)" fg:x="200" fg:w="1"/><text x="15.9486%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.8556%" y="613" width="0.0785%" height="15" fill="rgb(251,87,8)" fg:x="202" fg:w="1"/><text x="16.1056%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.8556%" y="597" width="0.0785%" height="15" fill="rgb(206,86,1)" fg:x="202" fg:w="1"/><text x="16.1056%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.8556%" y="581" width="0.0785%" height="15" fill="rgb(208,151,45)" fg:x="202" fg:w="1"/><text x="16.1056%" y="591.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="15.8556%" y="661" width="0.1570%" height="15" fill="rgb(231,181,24)" fg:x="202" fg:w="2"/><text x="16.1056%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="15.8556%" y="645" width="0.1570%" height="15" fill="rgb(240,106,29)" fg:x="202" fg:w="2"/><text x="16.1056%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="15.8556%" y="629" width="0.1570%" height="15" fill="rgb(227,166,11)" fg:x="202" fg:w="2"/><text x="16.1056%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9341%" y="613" width="0.0785%" height="15" fill="rgb(254,14,34)" fg:x="203" fg:w="1"/><text x="16.1841%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9341%" y="597" width="0.0785%" height="15" fill="rgb(223,222,6)" fg:x="203" fg:w="1"/><text x="16.1841%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9341%" y="581" width="0.0785%" height="15" fill="rgb(245,69,24)" fg:x="203" fg:w="1"/><text x="16.1841%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9341%" y="565" width="0.0785%" height="15" fill="rgb(213,193,7)" fg:x="203" fg:w="1"/><text x="16.1841%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="15.9341%" y="549" width="0.0785%" height="15" fill="rgb(237,92,51)" fg:x="203" fg:w="1"/><text x="16.1841%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.0126%" y="613" width="0.0785%" height="15" fill="rgb(225,194,6)" fg:x="204" fg:w="1"/><text x="16.2626%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0126%" y="597" width="0.0785%" height="15" fill="rgb(205,159,49)" fg:x="204" fg:w="1"/><text x="16.2626%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0126%" y="581" width="0.0785%" height="15" fill="rgb(219,69,2)" fg:x="204" fg:w="1"/><text x="16.2626%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0126%" y="565" width="0.0785%" height="15" fill="rgb(215,107,24)" fg:x="204" fg:w="1"/><text x="16.2626%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0126%" y="549" width="0.0785%" height="15" fill="rgb(249,208,29)" fg:x="204" fg:w="1"/><text x="16.2626%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0126%" y="533" width="0.0785%" height="15" fill="rgb(213,147,10)" fg:x="204" fg:w="1"/><text x="16.2626%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0126%" y="517" width="0.0785%" height="15" fill="rgb(254,140,42)" fg:x="204" fg:w="1"/><text x="16.2626%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.0126%" y="501" width="0.0785%" height="15" fill="rgb(249,9,15)" fg:x="204" fg:w="1"/><text x="16.2626%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.0126%" y="485" width="0.0785%" height="15" fill="rgb(210,19,33)" fg:x="204" fg:w="1"/><text x="16.2626%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.0126%" y="469" width="0.0785%" height="15" fill="rgb(241,121,22)" fg:x="204" fg:w="1"/><text x="16.2626%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.0126%" y="453" width="0.0785%" height="15" fill="rgb(244,69,52)" fg:x="204" fg:w="1"/><text x="16.2626%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.0126%" y="437" width="0.0785%" height="15" fill="rgb(244,191,54)" fg:x="204" fg:w="1"/><text x="16.2626%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.0911%" y="597" width="0.0785%" height="15" fill="rgb(250,3,53)" fg:x="205" fg:w="1"/><text x="16.3411%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1695%" y="549" width="0.0785%" height="15" fill="rgb(205,77,3)" fg:x="206" fg:w="1"/><text x="16.4195%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1695%" y="533" width="0.0785%" height="15" fill="rgb(207,155,3)" fg:x="206" fg:w="1"/><text x="16.4195%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1695%" y="517" width="0.0785%" height="15" fill="rgb(224,79,2)" fg:x="206" fg:w="1"/><text x="16.4195%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.1695%" y="501" width="0.0785%" height="15" fill="rgb(243,172,5)" fg:x="206" fg:w="1"/><text x="16.4195%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.1695%" y="485" width="0.0785%" height="15" fill="rgb(217,23,43)" fg:x="206" fg:w="1"/><text x="16.4195%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.1695%" y="469" width="0.0785%" height="15" fill="rgb(223,109,20)" fg:x="206" fg:w="1"/><text x="16.4195%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.1695%" y="453" width="0.0785%" height="15" fill="rgb(232,159,21)" fg:x="206" fg:w="1"/><text x="16.4195%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1695%" y="437" width="0.0785%" height="15" fill="rgb(219,58,2)" fg:x="206" fg:w="1"/><text x="16.4195%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="16.1695%" y="421" width="0.0785%" height="15" fill="rgb(241,56,8)" fg:x="206" fg:w="1"/><text x="16.4195%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="16.1695%" y="405" width="0.0785%" height="15" fill="rgb(249,10,27)" fg:x="206" fg:w="1"/><text x="16.4195%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="16.1695%" y="389" width="0.0785%" height="15" fill="rgb(248,177,5)" fg:x="206" fg:w="1"/><text x="16.4195%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="16.1695%" y="373" width="0.0785%" height="15" fill="rgb(239,12,30)" fg:x="206" fg:w="1"/><text x="16.4195%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="16.1695%" y="357" width="0.0785%" height="15" fill="rgb(229,164,25)" fg:x="206" fg:w="1"/><text x="16.4195%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.2480%" y="549" width="0.0785%" height="15" fill="rgb(231,217,50)" fg:x="207" fg:w="1"/><text x="16.4980%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.1695%" y="565" width="0.2355%" height="15" fill="rgb(247,99,32)" fg:x="206" fg:w="3"/><text x="16.4195%" y="575.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="16.3265%" y="549" width="0.0785%" height="15" fill="rgb(240,74,50)" fg:x="208" fg:w="1"/><text x="16.5765%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="16.1695%" y="581" width="0.3140%" height="15" fill="rgb(218,54,8)" fg:x="206" fg:w="4"/><text x="16.4195%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.4050%" y="565" width="0.0785%" height="15" fill="rgb(227,132,20)" fg:x="209" fg:w="1"/><text x="16.6550%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="581" width="0.0785%" height="15" fill="rgb(232,134,12)" fg:x="210" fg:w="1"/><text x="16.7335%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="565" width="0.0785%" height="15" fill="rgb(250,129,18)" fg:x="210" fg:w="1"/><text x="16.7335%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="549" width="0.0785%" height="15" fill="rgb(232,129,47)" fg:x="210" fg:w="1"/><text x="16.7335%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="533" width="0.0785%" height="15" fill="rgb(230,31,40)" fg:x="210" fg:w="1"/><text x="16.7335%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="517" width="0.0785%" height="15" fill="rgb(232,126,10)" fg:x="210" fg:w="1"/><text x="16.7335%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="501" width="0.0785%" height="15" fill="rgb(205,46,31)" fg:x="210" fg:w="1"/><text x="16.7335%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.4835%" y="485" width="0.0785%" height="15" fill="rgb(232,37,37)" fg:x="210" fg:w="1"/><text x="16.7335%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.78%)</title><rect x="15.8556%" y="677" width="0.7849%" height="15" fill="rgb(240,91,16)" fg:x="202" fg:w="10"/><text x="16.1056%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (8 samples, 0.63%)</title><rect x="16.0126%" y="661" width="0.6279%" height="15" fill="rgb(224,160,9)" fg:x="204" fg:w="8"/><text x="16.2626%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (8 samples, 0.63%)</title><rect x="16.0126%" y="645" width="0.6279%" height="15" fill="rgb(215,116,14)" fg:x="204" fg:w="8"/><text x="16.2626%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (8 samples, 0.63%)</title><rect x="16.0126%" y="629" width="0.6279%" height="15" fill="rgb(235,46,36)" fg:x="204" fg:w="8"/><text x="16.2626%" y="639.50"></text></g><g><title>kernel::model::props::save_props (7 samples, 0.55%)</title><rect x="16.0911%" y="613" width="0.5495%" height="15" fill="rgb(238,39,28)" fg:x="205" fg:w="7"/><text x="16.3411%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.47%)</title><rect x="16.1695%" y="597" width="0.4710%" height="15" fill="rgb(242,125,29)" fg:x="206" fg:w="6"/><text x="16.4195%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.5620%" y="581" width="0.0785%" height="15" fill="rgb(238,211,30)" fg:x="211" fg:w="1"/><text x="16.8120%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.6405%" y="629" width="0.0785%" height="15" fill="rgb(227,201,28)" fg:x="212" fg:w="1"/><text x="16.8905%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.6405%" y="613" width="0.0785%" height="15" fill="rgb(238,77,29)" fg:x="212" fg:w="1"/><text x="16.8905%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.6405%" y="597" width="0.0785%" height="15" fill="rgb(213,221,40)" fg:x="212" fg:w="1"/><text x="16.8905%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6405%" y="581" width="0.0785%" height="15" fill="rgb(226,220,44)" fg:x="212" fg:w="1"/><text x="16.8905%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6405%" y="565" width="0.0785%" height="15" fill="rgb(228,90,23)" fg:x="212" fg:w="1"/><text x="16.8905%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6405%" y="549" width="0.0785%" height="15" fill="rgb(235,72,29)" fg:x="212" fg:w="1"/><text x="16.8905%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7190%" y="549" width="0.0785%" height="15" fill="rgb(248,117,39)" fg:x="213" fg:w="1"/><text x="16.9690%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.7190%" y="533" width="0.0785%" height="15" fill="rgb(225,43,28)" fg:x="213" fg:w="1"/><text x="16.9690%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.7190%" y="581" width="0.1570%" height="15" fill="rgb(240,93,4)" fg:x="213" fg:w="2"/><text x="16.9690%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.7190%" y="565" width="0.1570%" height="15" fill="rgb(234,178,27)" fg:x="213" fg:w="2"/><text x="16.9690%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7975%" y="549" width="0.0785%" height="15" fill="rgb(254,88,22)" fg:x="214" fg:w="1"/><text x="17.0475%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.7975%" y="533" width="0.0785%" height="15" fill="rgb(240,206,50)" fg:x="214" fg:w="1"/><text x="17.0475%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.7975%" y="517" width="0.0785%" height="15" fill="rgb(249,103,8)" fg:x="214" fg:w="1"/><text x="17.0475%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.7975%" y="501" width="0.0785%" height="15" fill="rgb(241,178,36)" fg:x="214" fg:w="1"/><text x="17.0475%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.7975%" y="485" width="0.0785%" height="15" fill="rgb(246,110,15)" fg:x="214" fg:w="1"/><text x="17.0475%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.7975%" y="469" width="0.0785%" height="15" fill="rgb(207,14,43)" fg:x="214" fg:w="1"/><text x="17.0475%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.7975%" y="453" width="0.0785%" height="15" fill="rgb(253,219,19)" fg:x="214" fg:w="1"/><text x="17.0475%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="16.6405%" y="661" width="0.3140%" height="15" fill="rgb(216,126,5)" fg:x="212" fg:w="4"/><text x="16.8905%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="16.6405%" y="645" width="0.3140%" height="15" fill="rgb(218,78,42)" fg:x="212" fg:w="4"/><text x="16.8905%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="16.7190%" y="629" width="0.2355%" height="15" fill="rgb(215,154,40)" fg:x="213" fg:w="3"/><text x="16.9690%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.7190%" y="613" width="0.2355%" height="15" fill="rgb(235,129,32)" fg:x="213" fg:w="3"/><text x="16.9690%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.7190%" y="597" width="0.2355%" height="15" fill="rgb(218,51,8)" fg:x="213" fg:w="3"/><text x="16.9690%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.8760%" y="581" width="0.0785%" height="15" fill="rgb(245,48,4)" fg:x="215" fg:w="1"/><text x="17.1260%" y="591.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.9545%" y="661" width="0.0785%" height="15" fill="rgb(250,175,12)" fg:x="216" fg:w="1"/><text x="17.2045%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.0330%" y="645" width="0.0785%" height="15" fill="rgb(237,95,40)" fg:x="217" fg:w="1"/><text x="17.2830%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.0330%" y="629" width="0.0785%" height="15" fill="rgb(244,120,0)" fg:x="217" fg:w="1"/><text x="17.2830%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="17.1115%" y="629" width="0.0785%" height="15" fill="rgb(241,19,42)" fg:x="218" fg:w="1"/><text x="17.3615%" y="639.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 1.81%)</title><rect x="15.4631%" y="741" width="1.8053%" height="15" fill="rgb(217,174,48)" fg:x="197" fg:w="23"/><text x="15.7131%" y="751.50">c..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.81%)</title><rect x="15.4631%" y="725" width="1.8053%" height="15" fill="rgb(239,36,38)" fg:x="197" fg:w="23"/><text x="15.7131%" y="735.50">&lt;..</text></g><g><title>plugins_core::build::QuickThing::make (23 samples, 1.81%)</title><rect x="15.4631%" y="709" width="1.8053%" height="15" fill="rgb(220,63,49)" fg:x="197" fg:w="23"/><text x="15.7131%" y="719.50">p..</text></g><g><title>plugins_core::build::Build::leads_to (19 samples, 1.49%)</title><rect x="15.7771%" y="693" width="1.4914%" height="15" fill="rgb(240,101,13)" fg:x="201" fg:w="19"/><text x="16.0271%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (8 samples, 0.63%)</title><rect x="16.6405%" y="677" width="0.6279%" height="15" fill="rgb(209,184,51)" fg:x="212" fg:w="8"/><text x="16.8905%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="17.0330%" y="661" width="0.2355%" height="15" fill="rgb(206,136,39)" fg:x="217" fg:w="3"/><text x="17.2830%" y="671.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (2 samples, 0.16%)</title><rect x="17.1115%" y="645" width="0.1570%" height="15" fill="rgb(254,47,45)" fg:x="218" fg:w="2"/><text x="17.3615%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1900%" y="629" width="0.0785%" height="15" fill="rgb(252,103,20)" fg:x="219" fg:w="1"/><text x="17.4400%" y="639.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1900%" y="613" width="0.0785%" height="15" fill="rgb(230,69,12)" fg:x="219" fg:w="1"/><text x="17.4400%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1900%" y="597" width="0.0785%" height="15" fill="rgb(219,2,28)" fg:x="219" fg:w="1"/><text x="17.4400%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="17.2684%" y="741" width="0.0785%" height="15" fill="rgb(210,9,12)" fg:x="220" fg:w="1"/><text x="17.5184%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.2684%" y="725" width="0.0785%" height="15" fill="rgb(235,99,33)" fg:x="220" fg:w="1"/><text x="17.5184%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.3469%" y="709" width="0.1570%" height="15" fill="rgb(230,11,38)" fg:x="221" fg:w="2"/><text x="17.5969%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.3469%" y="693" width="0.1570%" height="15" fill="rgb(217,129,0)" fg:x="221" fg:w="2"/><text x="17.5969%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="17.3469%" y="677" width="0.1570%" height="15" fill="rgb(222,198,4)" fg:x="221" fg:w="2"/><text x="17.5969%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="17.3469%" y="661" width="0.1570%" height="15" fill="rgb(246,170,27)" fg:x="221" fg:w="2"/><text x="17.5969%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="17.3469%" y="645" width="0.1570%" height="15" fill="rgb(229,17,28)" fg:x="221" fg:w="2"/><text x="17.5969%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="17.3469%" y="629" width="0.1570%" height="15" fill="rgb(233,198,48)" fg:x="221" fg:w="2"/><text x="17.5969%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="17.3469%" y="613" width="0.1570%" height="15" fill="rgb(238,103,23)" fg:x="221" fg:w="2"/><text x="17.5969%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="17.3469%" y="597" width="0.1570%" height="15" fill="rgb(206,91,41)" fg:x="221" fg:w="2"/><text x="17.5969%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="17.3469%" y="581" width="0.1570%" height="15" fill="rgb(227,34,25)" fg:x="221" fg:w="2"/><text x="17.5969%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="17.3469%" y="565" width="0.1570%" height="15" fill="rgb(210,110,44)" fg:x="221" fg:w="2"/><text x="17.5969%" y="575.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="17.3469%" y="549" width="0.1570%" height="15" fill="rgb(216,189,8)" fg:x="221" fg:w="2"/><text x="17.5969%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="17.3469%" y="533" width="0.1570%" height="15" fill="rgb(234,9,46)" fg:x="221" fg:w="2"/><text x="17.5969%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.5039%" y="709" width="0.0785%" height="15" fill="rgb(251,200,5)" fg:x="223" fg:w="1"/><text x="17.7539%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.31%)</title><rect x="17.3469%" y="725" width="0.3140%" height="15" fill="rgb(238,165,37)" fg:x="221" fg:w="4"/><text x="17.5969%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.5824%" y="709" width="0.0785%" height="15" fill="rgb(232,77,38)" fg:x="224" fg:w="1"/><text x="17.8324%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.5824%" y="693" width="0.0785%" height="15" fill="rgb(253,179,33)" fg:x="224" fg:w="1"/><text x="17.8324%" y="703.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="17.6609%" y="709" width="0.0785%" height="15" fill="rgb(240,13,35)" fg:x="225" fg:w="1"/><text x="17.9109%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.7394%" y="677" width="0.0785%" height="15" fill="rgb(242,150,49)" fg:x="226" fg:w="1"/><text x="17.9894%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="17.7394%" y="661" width="0.0785%" height="15" fill="rgb(237,176,28)" fg:x="226" fg:w="1"/><text x="17.9894%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="17.7394%" y="645" width="0.0785%" height="15" fill="rgb(214,176,33)" fg:x="226" fg:w="1"/><text x="17.9894%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="17.7394%" y="629" width="0.0785%" height="15" fill="rgb(214,25,12)" fg:x="226" fg:w="1"/><text x="17.9894%" y="639.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="17.8179%" y="645" width="0.0785%" height="15" fill="rgb(238,190,20)" fg:x="227" fg:w="1"/><text x="18.0679%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8179%" y="629" width="0.0785%" height="15" fill="rgb(208,11,19)" fg:x="227" fg:w="1"/><text x="18.0679%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8179%" y="613" width="0.0785%" height="15" fill="rgb(239,90,4)" fg:x="227" fg:w="1"/><text x="18.0679%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8179%" y="597" width="0.0785%" height="15" fill="rgb(248,110,3)" fg:x="227" fg:w="1"/><text x="18.0679%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8179%" y="581" width="0.0785%" height="15" fill="rgb(210,41,30)" fg:x="227" fg:w="1"/><text x="18.0679%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8179%" y="565" width="0.0785%" height="15" fill="rgb(239,36,8)" fg:x="227" fg:w="1"/><text x="18.0679%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8179%" y="549" width="0.0785%" height="15" fill="rgb(237,201,47)" fg:x="227" fg:w="1"/><text x="18.0679%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8179%" y="533" width="0.0785%" height="15" fill="rgb(224,140,29)" fg:x="227" fg:w="1"/><text x="18.0679%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8179%" y="517" width="0.0785%" height="15" fill="rgb(231,209,17)" fg:x="227" fg:w="1"/><text x="18.0679%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8179%" y="501" width="0.0785%" height="15" fill="rgb(249,196,1)" fg:x="227" fg:w="1"/><text x="18.0679%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8179%" y="485" width="0.0785%" height="15" fill="rgb(223,207,51)" fg:x="227" fg:w="1"/><text x="18.0679%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8179%" y="469" width="0.0785%" height="15" fill="rgb(210,14,40)" fg:x="227" fg:w="1"/><text x="18.0679%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8179%" y="453" width="0.0785%" height="15" fill="rgb(250,20,52)" fg:x="227" fg:w="1"/><text x="18.0679%" y="463.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="17.8179%" y="677" width="0.1570%" height="15" fill="rgb(241,46,11)" fg:x="227" fg:w="2"/><text x="18.0679%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="17.8179%" y="661" width="0.1570%" height="15" fill="rgb(219,105,5)" fg:x="227" fg:w="2"/><text x="18.0679%" y="671.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="17.8964%" y="645" width="0.0785%" height="15" fill="rgb(252,77,35)" fg:x="228" fg:w="1"/><text x="18.1464%" y="655.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="17.8964%" y="629" width="0.0785%" height="15" fill="rgb(243,119,2)" fg:x="228" fg:w="1"/><text x="18.1464%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8964%" y="613" width="0.0785%" height="15" fill="rgb(206,82,28)" fg:x="228" fg:w="1"/><text x="18.1464%" y="623.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.1319%" y="645" width="0.0785%" height="15" fill="rgb(227,120,12)" fg:x="231" fg:w="1"/><text x="18.3819%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.1319%" y="629" width="0.0785%" height="15" fill="rgb(229,134,41)" fg:x="231" fg:w="1"/><text x="18.3819%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.2104%" y="629" width="0.0785%" height="15" fill="rgb(239,96,32)" fg:x="232" fg:w="1"/><text x="18.4604%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="18.2889%" y="629" width="0.2355%" height="15" fill="rgb(225,46,27)" fg:x="233" fg:w="3"/><text x="18.5389%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="18.2889%" y="613" width="0.2355%" height="15" fill="rgb(215,168,2)" fg:x="233" fg:w="3"/><text x="18.5389%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.4458%" y="597" width="0.0785%" height="15" fill="rgb(207,170,52)" fg:x="235" fg:w="1"/><text x="18.6958%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.4458%" y="581" width="0.0785%" height="15" fill="rgb(237,198,36)" fg:x="235" fg:w="1"/><text x="18.6958%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4458%" y="565" width="0.0785%" height="15" fill="rgb(213,27,14)" fg:x="235" fg:w="1"/><text x="18.6958%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.5243%" y="613" width="0.0785%" height="15" fill="rgb(218,77,5)" fg:x="236" fg:w="1"/><text x="18.7743%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (11 samples, 0.86%)</title><rect x="18.6028%" y="613" width="0.8634%" height="15" fill="rgb(230,219,39)" fg:x="237" fg:w="11"/><text x="18.8528%" y="623.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.71%)</title><rect x="18.7598%" y="597" width="0.7064%" height="15" fill="rgb(245,177,7)" fg:x="239" fg:w="9"/><text x="19.0098%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (7 samples, 0.55%)</title><rect x="18.9168%" y="581" width="0.5495%" height="15" fill="rgb(246,44,46)" fg:x="241" fg:w="7"/><text x="19.1668%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.39%)</title><rect x="19.0738%" y="565" width="0.3925%" height="15" fill="rgb(207,173,15)" fg:x="243" fg:w="5"/><text x="19.3238%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="19.3093%" y="549" width="0.1570%" height="15" fill="rgb(245,170,50)" fg:x="246" fg:w="2"/><text x="19.5593%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.3878%" y="533" width="0.0785%" height="15" fill="rgb(233,156,21)" fg:x="247" fg:w="1"/><text x="19.6378%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.3878%" y="517" width="0.0785%" height="15" fill="rgb(253,146,27)" fg:x="247" fg:w="1"/><text x="19.6378%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.4662%" y="597" width="0.0785%" height="15" fill="rgb(247,66,29)" fg:x="248" fg:w="1"/><text x="19.7162%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.5447%" y="565" width="0.0785%" height="15" fill="rgb(218,207,26)" fg:x="249" fg:w="1"/><text x="19.7947%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5447%" y="549" width="0.0785%" height="15" fill="rgb(234,93,26)" fg:x="249" fg:w="1"/><text x="19.7947%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="19.5447%" y="597" width="0.1570%" height="15" fill="rgb(214,75,48)" fg:x="249" fg:w="2"/><text x="19.7947%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.5447%" y="581" width="0.1570%" height="15" fill="rgb(229,119,22)" fg:x="249" fg:w="2"/><text x="19.7947%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6232%" y="565" width="0.0785%" height="15" fill="rgb(226,153,19)" fg:x="250" fg:w="1"/><text x="19.8732%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.6232%" y="549" width="0.0785%" height="15" fill="rgb(220,204,36)" fg:x="250" fg:w="1"/><text x="19.8732%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.6232%" y="533" width="0.0785%" height="15" fill="rgb(253,181,43)" fg:x="250" fg:w="1"/><text x="19.8732%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.7017%" y="597" width="0.0785%" height="15" fill="rgb(211,41,51)" fg:x="251" fg:w="1"/><text x="19.9517%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.7017%" y="581" width="0.0785%" height="15" fill="rgb(207,215,0)" fg:x="251" fg:w="1"/><text x="19.9517%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7017%" y="565" width="0.0785%" height="15" fill="rgb(212,153,10)" fg:x="251" fg:w="1"/><text x="19.9517%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7017%" y="549" width="0.0785%" height="15" fill="rgb(251,171,36)" fg:x="251" fg:w="1"/><text x="19.9517%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.8587%" y="581" width="0.0785%" height="15" fill="rgb(225,219,41)" fg:x="253" fg:w="1"/><text x="20.1087%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.31%)</title><rect x="19.9372%" y="581" width="0.3140%" height="15" fill="rgb(208,200,1)" fg:x="254" fg:w="4"/><text x="20.1872%" y="591.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.31%)</title><rect x="19.9372%" y="565" width="0.3140%" height="15" fill="rgb(206,75,47)" fg:x="254" fg:w="4"/><text x="20.1872%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.0942%" y="549" width="0.1570%" height="15" fill="rgb(248,3,16)" fg:x="256" fg:w="2"/><text x="20.3442%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.0942%" y="533" width="0.1570%" height="15" fill="rgb(242,157,36)" fg:x="256" fg:w="2"/><text x="20.3442%" y="543.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.2512%" y="565" width="0.0785%" height="15" fill="rgb(215,175,11)" fg:x="258" fg:w="1"/><text x="20.5012%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.3297%" y="549" width="0.0785%" height="15" fill="rgb(252,222,22)" fg:x="259" fg:w="1"/><text x="20.5797%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.4867%" y="533" width="0.0785%" height="15" fill="rgb(250,121,35)" fg:x="261" fg:w="1"/><text x="20.7367%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.4867%" y="517" width="0.0785%" height="15" fill="rgb(233,120,49)" fg:x="261" fg:w="1"/><text x="20.7367%" y="527.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.4867%" y="501" width="0.0785%" height="15" fill="rgb(205,201,14)" fg:x="261" fg:w="1"/><text x="20.7367%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.4867%" y="485" width="0.0785%" height="15" fill="rgb(219,58,45)" fg:x="261" fg:w="1"/><text x="20.7367%" y="495.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="20.4082%" y="549" width="0.3925%" height="15" fill="rgb(251,65,12)" fg:x="260" fg:w="5"/><text x="20.6582%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="20.5651%" y="533" width="0.2355%" height="15" fill="rgb(224,47,31)" fg:x="262" fg:w="3"/><text x="20.8151%" y="543.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="20.5651%" y="517" width="0.2355%" height="15" fill="rgb(233,74,26)" fg:x="262" fg:w="3"/><text x="20.8151%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="20.2512%" y="581" width="0.6279%" height="15" fill="rgb(231,211,31)" fg:x="258" fg:w="8"/><text x="20.5012%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="20.3297%" y="565" width="0.5495%" height="15" fill="rgb(239,167,5)" fg:x="259" fg:w="7"/><text x="20.5797%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.8006%" y="549" width="0.0785%" height="15" fill="rgb(241,85,0)" fg:x="265" fg:w="1"/><text x="21.0506%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.8006%" y="533" width="0.0785%" height="15" fill="rgb(229,130,21)" fg:x="265" fg:w="1"/><text x="21.0506%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.8006%" y="517" width="0.0785%" height="15" fill="rgb(254,84,49)" fg:x="265" fg:w="1"/><text x="21.0506%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.26%)</title><rect x="19.7802%" y="597" width="1.2559%" height="15" fill="rgb(235,85,21)" fg:x="252" fg:w="16"/><text x="20.0302%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.8791%" y="581" width="0.1570%" height="15" fill="rgb(246,128,52)" fg:x="266" fg:w="2"/><text x="21.1291%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.9576%" y="565" width="0.0785%" height="15" fill="rgb(243,114,49)" fg:x="267" fg:w="1"/><text x="21.2076%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.9576%" y="549" width="0.0785%" height="15" fill="rgb(240,224,22)" fg:x="267" fg:w="1"/><text x="21.2076%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (22 samples, 1.73%)</title><rect x="19.4662%" y="613" width="1.7268%" height="15" fill="rgb(247,201,52)" fg:x="248" fg:w="22"/><text x="19.7162%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.0361%" y="597" width="0.1570%" height="15" fill="rgb(231,70,45)" fg:x="268" fg:w="2"/><text x="21.2861%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.0361%" y="581" width="0.1570%" height="15" fill="rgb(217,215,20)" fg:x="268" fg:w="2"/><text x="21.2861%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.0361%" y="565" width="0.1570%" height="15" fill="rgb(226,170,30)" fg:x="268" fg:w="2"/><text x="21.2861%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (36 samples, 2.83%)</title><rect x="18.5243%" y="629" width="2.8257%" height="15" fill="rgb(220,190,43)" fg:x="236" fg:w="36"/><text x="18.7743%" y="639.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.1931%" y="613" width="0.1570%" height="15" fill="rgb(218,20,18)" fg:x="270" fg:w="2"/><text x="21.4431%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="21.1931%" y="597" width="0.1570%" height="15" fill="rgb(245,37,26)" fg:x="270" fg:w="2"/><text x="21.4431%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.2716%" y="581" width="0.0785%" height="15" fill="rgb(241,127,29)" fg:x="271" fg:w="1"/><text x="21.5216%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.30%)</title><rect x="18.2104%" y="645" width="3.2967%" height="15" fill="rgb(241,33,26)" fg:x="232" fg:w="42"/><text x="18.4604%" y="655.50">&lt;se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="21.3501%" y="629" width="0.1570%" height="15" fill="rgb(220,106,21)" fg:x="272" fg:w="2"/><text x="21.6001%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.4286%" y="613" width="0.0785%" height="15" fill="rgb(225,125,35)" fg:x="273" fg:w="1"/><text x="21.6786%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.4286%" y="597" width="0.0785%" height="15" fill="rgb(248,80,22)" fg:x="273" fg:w="1"/><text x="21.6786%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.5071%" y="629" width="0.0785%" height="15" fill="rgb(231,117,39)" fg:x="274" fg:w="1"/><text x="21.7571%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.5856%" y="613" width="0.0785%" height="15" fill="rgb(239,183,16)" fg:x="275" fg:w="1"/><text x="21.8356%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.6641%" y="597" width="0.0785%" height="15" fill="rgb(221,61,19)" fg:x="276" fg:w="1"/><text x="21.9141%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.7425%" y="597" width="0.0785%" height="15" fill="rgb(239,196,44)" fg:x="277" fg:w="1"/><text x="21.9925%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.7425%" y="581" width="0.0785%" height="15" fill="rgb(206,113,19)" fg:x="277" fg:w="1"/><text x="21.9925%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.8210%" y="581" width="0.1570%" height="15" fill="rgb(245,114,12)" fg:x="278" fg:w="2"/><text x="22.0710%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="21.8210%" y="565" width="0.1570%" height="15" fill="rgb(247,89,39)" fg:x="278" fg:w="2"/><text x="22.0710%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.0565%" y="565" width="0.1570%" height="15" fill="rgb(213,85,14)" fg:x="281" fg:w="2"/><text x="22.3065%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.1350%" y="549" width="0.0785%" height="15" fill="rgb(249,206,33)" fg:x="282" fg:w="1"/><text x="22.3850%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="22.2135%" y="565" width="0.0785%" height="15" fill="rgb(235,167,47)" fg:x="283" fg:w="1"/><text x="22.4635%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="22.2135%" y="549" width="0.0785%" height="15" fill="rgb(217,177,16)" fg:x="283" fg:w="1"/><text x="22.4635%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="22.2135%" y="533" width="0.0785%" height="15" fill="rgb(250,228,29)" fg:x="283" fg:w="1"/><text x="22.4635%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.3705%" y="549" width="0.0785%" height="15" fill="rgb(216,195,42)" fg:x="285" fg:w="1"/><text x="22.6205%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.3705%" y="533" width="0.0785%" height="15" fill="rgb(232,192,32)" fg:x="285" fg:w="1"/><text x="22.6205%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5275%" y="533" width="0.0785%" height="15" fill="rgb(211,8,47)" fg:x="287" fg:w="1"/><text x="22.7775%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="22.6060%" y="533" width="0.0785%" height="15" fill="rgb(251,201,9)" fg:x="288" fg:w="1"/><text x="22.8560%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.6060%" y="517" width="0.0785%" height="15" fill="rgb(206,185,47)" fg:x="288" fg:w="1"/><text x="22.8560%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.33%)</title><rect x="21.5071%" y="645" width="1.3344%" height="15" fill="rgb(245,54,32)" fg:x="274" fg:w="17"/><text x="21.7571%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (16 samples, 1.26%)</title><rect x="21.5856%" y="629" width="1.2559%" height="15" fill="rgb(208,1,8)" fg:x="275" fg:w="16"/><text x="21.8356%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.18%)</title><rect x="21.6641%" y="613" width="1.1774%" height="15" fill="rgb(228,57,24)" fg:x="276" fg:w="15"/><text x="21.9141%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.02%)</title><rect x="21.8210%" y="597" width="1.0204%" height="15" fill="rgb(251,24,8)" fg:x="278" fg:w="13"/><text x="22.0710%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="21.9780%" y="581" width="0.8634%" height="15" fill="rgb(236,196,50)" fg:x="280" fg:w="11"/><text x="22.2280%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="22.2920%" y="565" width="0.5495%" height="15" fill="rgb(246,222,29)" fg:x="284" fg:w="7"/><text x="22.5420%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="22.4490%" y="549" width="0.3925%" height="15" fill="rgb(211,34,40)" fg:x="286" fg:w="5"/><text x="22.6990%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.6845%" y="533" width="0.1570%" height="15" fill="rgb(210,66,51)" fg:x="289" fg:w="2"/><text x="22.9345%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.6845%" y="517" width="0.1570%" height="15" fill="rgb(250,56,43)" fg:x="289" fg:w="2"/><text x="22.9345%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.7630%" y="501" width="0.0785%" height="15" fill="rgb(240,111,50)" fg:x="290" fg:w="1"/><text x="23.0130%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.8414%" y="613" width="0.1570%" height="15" fill="rgb(209,117,13)" fg:x="291" fg:w="2"/><text x="23.0914%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (3 samples, 0.24%)</title><rect x="22.8414%" y="629" width="0.2355%" height="15" fill="rgb(232,164,45)" fg:x="291" fg:w="3"/><text x="23.0914%" y="639.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="22.9984%" y="613" width="0.0785%" height="15" fill="rgb(205,69,32)" fg:x="293" fg:w="1"/><text x="23.2484%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="22.9984%" y="597" width="0.0785%" height="15" fill="rgb(240,147,45)" fg:x="293" fg:w="1"/><text x="23.2484%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="23.3124%" y="597" width="0.2355%" height="15" fill="rgb(221,94,48)" fg:x="297" fg:w="3"/><text x="23.5624%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4694%" y="581" width="0.0785%" height="15" fill="rgb(249,209,17)" fg:x="299" fg:w="1"/><text x="23.7194%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.4694%" y="565" width="0.0785%" height="15" fill="rgb(228,57,28)" fg:x="299" fg:w="1"/><text x="23.7194%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="23.5479%" y="581" width="0.0785%" height="15" fill="rgb(250,133,26)" fg:x="300" fg:w="1"/><text x="23.7979%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (5 samples, 0.39%)</title><rect x="23.5479%" y="597" width="0.3925%" height="15" fill="rgb(254,15,16)" fg:x="300" fg:w="5"/><text x="23.7979%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="23.6264%" y="581" width="0.3140%" height="15" fill="rgb(209,147,42)" fg:x="301" fg:w="4"/><text x="23.8764%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.7834%" y="565" width="0.1570%" height="15" fill="rgb(208,5,29)" fg:x="303" fg:w="2"/><text x="24.0334%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0973%" y="549" width="0.0785%" height="15" fill="rgb(250,73,31)" fg:x="307" fg:w="1"/><text x="24.3473%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4898%" y="517" width="0.0785%" height="15" fill="rgb(238,45,10)" fg:x="312" fg:w="1"/><text x="24.7398%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.4898%" y="501" width="0.0785%" height="15" fill="rgb(214,104,5)" fg:x="312" fg:w="1"/><text x="24.7398%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.4898%" y="485" width="0.0785%" height="15" fill="rgb(242,217,19)" fg:x="312" fg:w="1"/><text x="24.7398%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5683%" y="485" width="0.0785%" height="15" fill="rgb(246,113,27)" fg:x="313" fg:w="1"/><text x="24.8183%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5683%" y="469" width="0.0785%" height="15" fill="rgb(221,34,27)" fg:x="313" fg:w="1"/><text x="24.8183%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5683%" y="453" width="0.0785%" height="15" fill="rgb(246,109,6)" fg:x="313" fg:w="1"/><text x="24.8183%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="24.8038%" y="437" width="0.0785%" height="15" fill="rgb(217,12,25)" fg:x="316" fg:w="1"/><text x="25.0538%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9608%" y="421" width="0.1570%" height="15" fill="rgb(250,195,5)" fg:x="318" fg:w="2"/><text x="25.2108%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9608%" y="405" width="0.1570%" height="15" fill="rgb(244,140,45)" fg:x="318" fg:w="2"/><text x="25.2108%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="24.9608%" y="389" width="0.1570%" height="15" fill="rgb(230,64,14)" fg:x="318" fg:w="2"/><text x="25.2108%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="24.8823%" y="437" width="0.3140%" height="15" fill="rgb(206,27,27)" fg:x="317" fg:w="4"/><text x="25.1323%" y="447.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.1177%" y="421" width="0.0785%" height="15" fill="rgb(230,14,50)" fg:x="320" fg:w="1"/><text x="25.3677%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (16 samples, 1.26%)</title><rect x="24.0188%" y="565" width="1.2559%" height="15" fill="rgb(237,172,14)" fg:x="306" fg:w="16"/><text x="24.2688%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (14 samples, 1.10%)</title><rect x="24.1758%" y="549" width="1.0989%" height="15" fill="rgb(209,25,21)" fg:x="308" fg:w="14"/><text x="24.4258%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.86%)</title><rect x="24.4113%" y="533" width="0.8634%" height="15" fill="rgb(248,148,22)" fg:x="311" fg:w="11"/><text x="24.6613%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.71%)</title><rect x="24.5683%" y="517" width="0.7064%" height="15" fill="rgb(234,100,22)" fg:x="313" fg:w="9"/><text x="24.8183%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.71%)</title><rect x="24.5683%" y="501" width="0.7064%" height="15" fill="rgb(210,20,30)" fg:x="313" fg:w="9"/><text x="24.8183%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.63%)</title><rect x="24.6468%" y="485" width="0.6279%" height="15" fill="rgb(232,58,0)" fg:x="314" fg:w="8"/><text x="24.8968%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.63%)</title><rect x="24.6468%" y="469" width="0.6279%" height="15" fill="rgb(221,68,13)" fg:x="314" fg:w="8"/><text x="24.8968%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="24.7253%" y="453" width="0.5495%" height="15" fill="rgb(231,194,11)" fg:x="315" fg:w="7"/><text x="24.9753%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1962%" y="437" width="0.0785%" height="15" fill="rgb(235,51,41)" fg:x="321" fg:w="1"/><text x="25.4462%" y="447.50"></text></g><g><title>engine::session::Session::flush (102 samples, 8.01%)</title><rect x="17.3469%" y="741" width="8.0063%" height="15" fill="rgb(240,50,32)" fg:x="221" fg:w="102"/><text x="17.5969%" y="751.50">engine::ses..</text></g><g><title>engine::session::Session::save_changes (98 samples, 7.69%)</title><rect x="17.6609%" y="725" width="7.6923%" height="15" fill="rgb(240,185,36)" fg:x="225" fg:w="98"/><text x="17.9109%" y="735.50">engine::ses..</text></g><g><title>engine::session::state::State::close (97 samples, 7.61%)</title><rect x="17.7394%" y="709" width="7.6138%" height="15" fill="rgb(211,168,15)" fg:x="226" fg:w="97"/><text x="17.9894%" y="719.50">engine::se..</text></g><g><title>engine::session::state::State::flush_entities (97 samples, 7.61%)</title><rect x="17.7394%" y="693" width="7.6138%" height="15" fill="rgb(221,70,0)" fg:x="226" fg:w="97"/><text x="17.9894%" y="703.50">engine::se..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (94 samples, 7.38%)</title><rect x="17.9749%" y="677" width="7.3783%" height="15" fill="rgb(205,21,33)" fg:x="229" fg:w="94"/><text x="18.2249%" y="687.50">engine::se..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (94 samples, 7.38%)</title><rect x="17.9749%" y="661" width="7.3783%" height="15" fill="rgb(225,106,10)" fg:x="229" fg:w="94"/><text x="18.2249%" y="671.50">engine::se..</text></g><g><title>kernel::model::any_entity_changes (32 samples, 2.51%)</title><rect x="22.8414%" y="645" width="2.5118%" height="15" fill="rgb(236,200,50)" fg:x="291" fg:w="32"/><text x="23.0914%" y="655.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (29 samples, 2.28%)</title><rect x="23.0769%" y="629" width="2.2763%" height="15" fill="rgb(249,93,23)" fg:x="294" fg:w="29"/><text x="23.3269%" y="639.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 2.28%)</title><rect x="23.0769%" y="613" width="2.2763%" height="15" fill="rgb(244,115,35)" fg:x="294" fg:w="29"/><text x="23.3269%" y="623.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (18 samples, 1.41%)</title><rect x="23.9403%" y="597" width="1.4129%" height="15" fill="rgb(231,129,47)" fg:x="305" fg:w="18"/><text x="24.1903%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.33%)</title><rect x="24.0188%" y="581" width="1.3344%" height="15" fill="rgb(225,160,50)" fg:x="306" fg:w="17"/><text x="24.2688%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="25.2747%" y="565" width="0.0785%" height="15" fill="rgb(218,135,23)" fg:x="322" fg:w="1"/><text x="25.5247%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3532%" y="725" width="0.0785%" height="15" fill="rgb(227,119,14)" fg:x="323" fg:w="1"/><text x="25.6032%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="25.3532%" y="741" width="0.1570%" height="15" fill="rgb(242,138,13)" fg:x="323" fg:w="2"/><text x="25.6032%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="25.4317%" y="725" width="0.0785%" height="15" fill="rgb(215,11,16)" fg:x="324" fg:w="1"/><text x="25.6817%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="25.5887%" y="709" width="0.0785%" height="15" fill="rgb(234,170,50)" fg:x="326" fg:w="1"/><text x="25.8387%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7457%" y="661" width="0.0785%" height="15" fill="rgb(233,34,20)" fg:x="328" fg:w="1"/><text x="25.9957%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7457%" y="645" width="0.0785%" height="15" fill="rgb(237,100,45)" fg:x="328" fg:w="1"/><text x="25.9957%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7457%" y="629" width="0.0785%" height="15" fill="rgb(231,184,36)" fg:x="328" fg:w="1"/><text x="25.9957%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7457%" y="613" width="0.0785%" height="15" fill="rgb(252,93,2)" fg:x="328" fg:w="1"/><text x="25.9957%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.7457%" y="597" width="0.0785%" height="15" fill="rgb(248,176,47)" fg:x="328" fg:w="1"/><text x="25.9957%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7457%" y="581" width="0.0785%" height="15" fill="rgb(249,125,23)" fg:x="328" fg:w="1"/><text x="25.9957%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8242%" y="533" width="0.0785%" height="15" fill="rgb(239,67,42)" fg:x="329" fg:w="1"/><text x="26.0742%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="25.6672%" y="709" width="0.3140%" height="15" fill="rgb(244,162,4)" fg:x="327" fg:w="4"/><text x="25.9172%" y="719.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="25.6672%" y="693" width="0.3140%" height="15" fill="rgb(214,150,38)" fg:x="327" fg:w="4"/><text x="25.9172%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="25.6672%" y="677" width="0.3140%" height="15" fill="rgb(228,211,28)" fg:x="327" fg:w="4"/><text x="25.9172%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8242%" y="661" width="0.1570%" height="15" fill="rgb(212,98,48)" fg:x="329" fg:w="2"/><text x="26.0742%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8242%" y="645" width="0.1570%" height="15" fill="rgb(213,45,13)" fg:x="329" fg:w="2"/><text x="26.0742%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8242%" y="629" width="0.1570%" height="15" fill="rgb(218,35,29)" fg:x="329" fg:w="2"/><text x="26.0742%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8242%" y="613" width="0.1570%" height="15" fill="rgb(244,13,3)" fg:x="329" fg:w="2"/><text x="26.0742%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.8242%" y="597" width="0.1570%" height="15" fill="rgb(235,170,19)" fg:x="329" fg:w="2"/><text x="26.0742%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8242%" y="581" width="0.1570%" height="15" fill="rgb(233,193,43)" fg:x="329" fg:w="2"/><text x="26.0742%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8242%" y="565" width="0.1570%" height="15" fill="rgb(228,223,20)" fg:x="329" fg:w="2"/><text x="26.0742%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8242%" y="549" width="0.1570%" height="15" fill="rgb(208,85,54)" fg:x="329" fg:w="2"/><text x="26.0742%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9027%" y="533" width="0.0785%" height="15" fill="rgb(254,14,45)" fg:x="330" fg:w="1"/><text x="26.1527%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9027%" y="517" width="0.0785%" height="15" fill="rgb(247,99,29)" fg:x="330" fg:w="1"/><text x="26.1527%" y="527.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="25.9027%" y="501" width="0.0785%" height="15" fill="rgb(225,180,54)" fg:x="330" fg:w="1"/><text x="26.1527%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="25.9812%" y="709" width="0.0785%" height="15" fill="rgb(239,88,43)" fg:x="331" fg:w="1"/><text x="26.2312%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.9812%" y="693" width="0.0785%" height="15" fill="rgb(209,47,11)" fg:x="331" fg:w="1"/><text x="26.2312%" y="703.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9812%" y="677" width="0.0785%" height="15" fill="rgb(219,179,23)" fg:x="331" fg:w="1"/><text x="26.2312%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9812%" y="661" width="0.0785%" height="15" fill="rgb(213,183,19)" fg:x="331" fg:w="1"/><text x="26.2312%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.0597%" y="661" width="0.0785%" height="15" fill="rgb(210,11,9)" fg:x="332" fg:w="1"/><text x="26.3097%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.0597%" y="645" width="0.0785%" height="15" fill="rgb(239,194,16)" fg:x="332" fg:w="1"/><text x="26.3097%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.0597%" y="629" width="0.0785%" height="15" fill="rgb(246,23,50)" fg:x="332" fg:w="1"/><text x="26.3097%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.0597%" y="613" width="0.0785%" height="15" fill="rgb(245,10,41)" fg:x="332" fg:w="1"/><text x="26.3097%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.0597%" y="597" width="0.0785%" height="15" fill="rgb(228,43,24)" fg:x="332" fg:w="1"/><text x="26.3097%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.0597%" y="581" width="0.0785%" height="15" fill="rgb(220,151,0)" fg:x="332" fg:w="1"/><text x="26.3097%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2166%" y="629" width="0.0785%" height="15" fill="rgb(232,219,10)" fg:x="334" fg:w="1"/><text x="26.4666%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2166%" y="613" width="0.0785%" height="15" fill="rgb(227,217,48)" fg:x="334" fg:w="1"/><text x="26.4666%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2166%" y="597" width="0.0785%" height="15" fill="rgb(210,66,35)" fg:x="334" fg:w="1"/><text x="26.4666%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2166%" y="581" width="0.0785%" height="15" fill="rgb(254,6,7)" fg:x="334" fg:w="1"/><text x="26.4666%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.2166%" y="565" width="0.0785%" height="15" fill="rgb(235,222,42)" fg:x="334" fg:w="1"/><text x="26.4666%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.78%)</title><rect x="25.5887%" y="725" width="0.7849%" height="15" fill="rgb(245,126,5)" fg:x="326" fg:w="10"/><text x="25.8387%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="26.0597%" y="709" width="0.3140%" height="15" fill="rgb(215,73,17)" fg:x="332" fg:w="4"/><text x="26.3097%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="26.0597%" y="693" width="0.3140%" height="15" fill="rgb(219,198,52)" fg:x="332" fg:w="4"/><text x="26.3097%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="26.0597%" y="677" width="0.3140%" height="15" fill="rgb(217,159,18)" fg:x="332" fg:w="4"/><text x="26.3097%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="26.1381%" y="661" width="0.2355%" height="15" fill="rgb(212,177,18)" fg:x="333" fg:w="3"/><text x="26.3881%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="26.1381%" y="645" width="0.2355%" height="15" fill="rgb(241,10,11)" fg:x="333" fg:w="3"/><text x="26.3881%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="629" width="0.0785%" height="15" fill="rgb(232,114,35)" fg:x="335" fg:w="1"/><text x="26.5451%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="613" width="0.0785%" height="15" fill="rgb(238,222,8)" fg:x="335" fg:w="1"/><text x="26.5451%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="597" width="0.0785%" height="15" fill="rgb(251,153,44)" fg:x="335" fg:w="1"/><text x="26.5451%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="581" width="0.0785%" height="15" fill="rgb(210,140,51)" fg:x="335" fg:w="1"/><text x="26.5451%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="565" width="0.0785%" height="15" fill="rgb(222,63,0)" fg:x="335" fg:w="1"/><text x="26.5451%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="549" width="0.0785%" height="15" fill="rgb(240,18,40)" fg:x="335" fg:w="1"/><text x="26.5451%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2951%" y="533" width="0.0785%" height="15" fill="rgb(237,88,16)" fg:x="335" fg:w="1"/><text x="26.5451%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="26.3736%" y="709" width="0.0785%" height="15" fill="rgb(251,117,13)" fg:x="336" fg:w="1"/><text x="26.6236%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="26.3736%" y="693" width="0.0785%" height="15" fill="rgb(251,228,8)" fg:x="336" fg:w="1"/><text x="26.6236%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.3736%" y="677" width="0.0785%" height="15" fill="rgb(205,107,49)" fg:x="336" fg:w="1"/><text x="26.6236%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5306%" y="565" width="0.0785%" height="15" fill="rgb(238,72,41)" fg:x="338" fg:w="1"/><text x="26.7806%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.5306%" y="549" width="0.0785%" height="15" fill="rgb(248,183,52)" fg:x="338" fg:w="1"/><text x="26.7806%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.5306%" y="533" width="0.0785%" height="15" fill="rgb(215,58,20)" fg:x="338" fg:w="1"/><text x="26.7806%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.5306%" y="517" width="0.0785%" height="15" fill="rgb(209,49,13)" fg:x="338" fg:w="1"/><text x="26.7806%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.5306%" y="501" width="0.0785%" height="15" fill="rgb(208,113,17)" fg:x="338" fg:w="1"/><text x="26.7806%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5306%" y="485" width="0.0785%" height="15" fill="rgb(208,14,22)" fg:x="338" fg:w="1"/><text x="26.7806%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.5306%" y="469" width="0.0785%" height="15" fill="rgb(222,95,2)" fg:x="338" fg:w="1"/><text x="26.7806%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.5306%" y="453" width="0.0785%" height="15" fill="rgb(253,180,37)" fg:x="338" fg:w="1"/><text x="26.7806%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.5306%" y="437" width="0.0785%" height="15" fill="rgb(250,81,33)" fg:x="338" fg:w="1"/><text x="26.7806%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.5306%" y="421" width="0.0785%" height="15" fill="rgb(251,151,41)" fg:x="338" fg:w="1"/><text x="26.7806%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.5306%" y="405" width="0.0785%" height="15" fill="rgb(210,135,17)" fg:x="338" fg:w="1"/><text x="26.7806%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5306%" y="389" width="0.0785%" height="15" fill="rgb(239,21,29)" fg:x="338" fg:w="1"/><text x="26.7806%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.4521%" y="629" width="0.2355%" height="15" fill="rgb(231,215,16)" fg:x="337" fg:w="3"/><text x="26.7021%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.4521%" y="613" width="0.2355%" height="15" fill="rgb(239,151,54)" fg:x="337" fg:w="3"/><text x="26.7021%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.4521%" y="597" width="0.2355%" height="15" fill="rgb(222,122,38)" fg:x="337" fg:w="3"/><text x="26.7021%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.4521%" y="581" width="0.2355%" height="15" fill="rgb(243,128,1)" fg:x="337" fg:w="3"/><text x="26.7021%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.6091%" y="565" width="0.0785%" height="15" fill="rgb(225,74,21)" fg:x="339" fg:w="1"/><text x="26.8591%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.6876%" y="629" width="0.0785%" height="15" fill="rgb(216,210,10)" fg:x="340" fg:w="1"/><text x="26.9376%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.6876%" y="613" width="0.0785%" height="15" fill="rgb(228,76,19)" fg:x="340" fg:w="1"/><text x="26.9376%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.6876%" y="597" width="0.0785%" height="15" fill="rgb(236,80,34)" fg:x="340" fg:w="1"/><text x="26.9376%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6876%" y="581" width="0.0785%" height="15" fill="rgb(225,173,23)" fg:x="340" fg:w="1"/><text x="26.9376%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="26.4521%" y="677" width="0.4710%" height="15" fill="rgb(253,38,1)" fg:x="337" fg:w="6"/><text x="26.7021%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="26.4521%" y="661" width="0.4710%" height="15" fill="rgb(206,155,35)" fg:x="337" fg:w="6"/><text x="26.7021%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="26.4521%" y="645" width="0.4710%" height="15" fill="rgb(254,27,53)" fg:x="337" fg:w="6"/><text x="26.7021%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="26.7661%" y="629" width="0.1570%" height="15" fill="rgb(225,52,41)" fg:x="341" fg:w="2"/><text x="27.0161%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="26.7661%" y="613" width="0.1570%" height="15" fill="rgb(244,53,18)" fg:x="341" fg:w="2"/><text x="27.0161%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8446%" y="597" width="0.0785%" height="15" fill="rgb(254,206,48)" fg:x="342" fg:w="1"/><text x="27.0946%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8446%" y="581" width="0.0785%" height="15" fill="rgb(236,182,23)" fg:x="342" fg:w="1"/><text x="27.0946%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.8446%" y="565" width="0.0785%" height="15" fill="rgb(236,191,37)" fg:x="342" fg:w="1"/><text x="27.0946%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8446%" y="549" width="0.0785%" height="15" fill="rgb(245,53,8)" fg:x="342" fg:w="1"/><text x="27.0946%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.8446%" y="533" width="0.0785%" height="15" fill="rgb(245,147,9)" fg:x="342" fg:w="1"/><text x="27.0946%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.8446%" y="517" width="0.0785%" height="15" fill="rgb(218,24,48)" fg:x="342" fg:w="1"/><text x="27.0946%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="26.9231%" y="661" width="0.0785%" height="15" fill="rgb(254,23,9)" fg:x="343" fg:w="1"/><text x="27.1731%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.9231%" y="645" width="0.0785%" height="15" fill="rgb(244,105,9)" fg:x="343" fg:w="1"/><text x="27.1731%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.0801%" y="629" width="0.0785%" height="15" fill="rgb(212,142,22)" fg:x="345" fg:w="1"/><text x="27.3301%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0801%" y="613" width="0.0785%" height="15" fill="rgb(221,114,49)" fg:x="345" fg:w="1"/><text x="27.3301%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.0801%" y="597" width="0.0785%" height="15" fill="rgb(223,210,25)" fg:x="345" fg:w="1"/><text x="27.3301%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.0801%" y="581" width="0.0785%" height="15" fill="rgb(235,162,44)" fg:x="345" fg:w="1"/><text x="27.3301%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.0801%" y="565" width="0.0785%" height="15" fill="rgb(237,65,45)" fg:x="345" fg:w="1"/><text x="27.3301%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.0801%" y="549" width="0.0785%" height="15" fill="rgb(208,79,9)" fg:x="345" fg:w="1"/><text x="27.3301%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0801%" y="533" width="0.0785%" height="15" fill="rgb(215,228,8)" fg:x="345" fg:w="1"/><text x="27.3301%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.0801%" y="517" width="0.0785%" height="15" fill="rgb(205,185,17)" fg:x="345" fg:w="1"/><text x="27.3301%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.0801%" y="501" width="0.0785%" height="15" fill="rgb(213,62,36)" fg:x="345" fg:w="1"/><text x="27.3301%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.0801%" y="485" width="0.0785%" height="15" fill="rgb(209,34,9)" fg:x="345" fg:w="1"/><text x="27.3301%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.0801%" y="469" width="0.0785%" height="15" fill="rgb(246,151,27)" fg:x="345" fg:w="1"/><text x="27.3301%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.0801%" y="453" width="0.0785%" height="15" fill="rgb(218,206,3)" fg:x="345" fg:w="1"/><text x="27.3301%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.0801%" y="437" width="0.0785%" height="15" fill="rgb(242,202,1)" fg:x="345" fg:w="1"/><text x="27.3301%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.1586%" y="565" width="0.0785%" height="15" fill="rgb(227,185,16)" fg:x="346" fg:w="1"/><text x="27.4086%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.1586%" y="549" width="0.0785%" height="15" fill="rgb(241,1,14)" fg:x="346" fg:w="1"/><text x="27.4086%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.1586%" y="629" width="0.1570%" height="15" fill="rgb(212,113,25)" fg:x="346" fg:w="2"/><text x="27.4086%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="27.1586%" y="613" width="0.1570%" height="15" fill="rgb(247,37,43)" fg:x="346" fg:w="2"/><text x="27.4086%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.1586%" y="597" width="0.1570%" height="15" fill="rgb(226,54,8)" fg:x="346" fg:w="2"/><text x="27.4086%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="27.1586%" y="581" width="0.1570%" height="15" fill="rgb(251,205,25)" fg:x="346" fg:w="2"/><text x="27.4086%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2370%" y="565" width="0.0785%" height="15" fill="rgb(246,87,35)" fg:x="347" fg:w="1"/><text x="27.4870%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="27.2370%" y="549" width="0.0785%" height="15" fill="rgb(251,145,46)" fg:x="347" fg:w="1"/><text x="27.4870%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.2370%" y="533" width="0.0785%" height="15" fill="rgb(210,210,33)" fg:x="347" fg:w="1"/><text x="27.4870%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.2370%" y="517" width="0.0785%" height="15" fill="rgb(221,151,11)" fg:x="347" fg:w="1"/><text x="27.4870%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.3155%" y="533" width="0.0785%" height="15" fill="rgb(208,160,28)" fg:x="348" fg:w="1"/><text x="27.5655%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.3155%" y="517" width="0.0785%" height="15" fill="rgb(243,69,29)" fg:x="348" fg:w="1"/><text x="27.5655%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (13 samples, 1.02%)</title><rect x="26.4521%" y="709" width="1.0204%" height="15" fill="rgb(224,144,4)" fg:x="337" fg:w="13"/><text x="26.7021%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (13 samples, 1.02%)</title><rect x="26.4521%" y="693" width="1.0204%" height="15" fill="rgb(211,140,38)" fg:x="337" fg:w="13"/><text x="26.7021%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.55%)</title><rect x="26.9231%" y="677" width="0.5495%" height="15" fill="rgb(252,189,15)" fg:x="343" fg:w="7"/><text x="27.1731%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="27.0016%" y="661" width="0.4710%" height="15" fill="rgb(251,175,23)" fg:x="344" fg:w="6"/><text x="27.2516%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="27.0016%" y="645" width="0.4710%" height="15" fill="rgb(212,184,11)" fg:x="344" fg:w="6"/><text x="27.2516%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.3155%" y="629" width="0.1570%" height="15" fill="rgb(217,205,6)" fg:x="348" fg:w="2"/><text x="27.5655%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.3155%" y="613" width="0.1570%" height="15" fill="rgb(235,45,45)" fg:x="348" fg:w="2"/><text x="27.5655%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.3155%" y="597" width="0.1570%" height="15" fill="rgb(211,157,53)" fg:x="348" fg:w="2"/><text x="27.5655%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.3155%" y="581" width="0.1570%" height="15" fill="rgb(212,13,8)" fg:x="348" fg:w="2"/><text x="27.5655%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.3155%" y="565" width="0.1570%" height="15" fill="rgb(218,80,36)" fg:x="348" fg:w="2"/><text x="27.5655%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.3155%" y="549" width="0.1570%" height="15" fill="rgb(211,123,43)" fg:x="348" fg:w="2"/><text x="27.5655%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.3940%" y="533" width="0.0785%" height="15" fill="rgb(206,165,2)" fg:x="349" fg:w="1"/><text x="27.6440%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.3940%" y="517" width="0.0785%" height="15" fill="rgb(248,63,35)" fg:x="349" fg:w="1"/><text x="27.6440%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="27.4725%" y="709" width="0.0785%" height="15" fill="rgb(219,133,41)" fg:x="350" fg:w="1"/><text x="27.7225%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="27.4725%" y="693" width="0.0785%" height="15" fill="rgb(206,175,46)" fg:x="350" fg:w="1"/><text x="27.7225%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.4725%" y="677" width="0.0785%" height="15" fill="rgb(224,41,35)" fg:x="350" fg:w="1"/><text x="27.7225%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="27.4725%" y="661" width="0.0785%" height="15" fill="rgb(226,113,24)" fg:x="350" fg:w="1"/><text x="27.7225%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="27.5510%" y="693" width="0.0785%" height="15" fill="rgb(219,51,41)" fg:x="351" fg:w="1"/><text x="27.8010%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.6295%" y="661" width="0.0785%" height="15" fill="rgb(220,145,47)" fg:x="352" fg:w="1"/><text x="27.8795%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="27.5510%" y="709" width="0.2355%" height="15" fill="rgb(239,121,47)" fg:x="351" fg:w="3"/><text x="27.8010%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="27.6295%" y="693" width="0.1570%" height="15" fill="rgb(207,60,40)" fg:x="352" fg:w="2"/><text x="27.8795%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.6295%" y="677" width="0.1570%" height="15" fill="rgb(224,229,11)" fg:x="352" fg:w="2"/><text x="27.8795%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.7080%" y="661" width="0.0785%" height="15" fill="rgb(252,28,32)" fg:x="353" fg:w="1"/><text x="27.9580%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="27.7080%" y="645" width="0.0785%" height="15" fill="rgb(207,52,49)" fg:x="353" fg:w="1"/><text x="27.9580%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.7865%" y="645" width="0.0785%" height="15" fill="rgb(243,51,50)" fg:x="354" fg:w="1"/><text x="28.0365%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8650%" y="565" width="0.0785%" height="15" fill="rgb(212,92,21)" fg:x="355" fg:w="1"/><text x="28.1150%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8650%" y="613" width="0.1570%" height="15" fill="rgb(230,183,50)" fg:x="355" fg:w="2"/><text x="28.1150%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8650%" y="597" width="0.1570%" height="15" fill="rgb(225,48,9)" fg:x="355" fg:w="2"/><text x="28.1150%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.8650%" y="581" width="0.1570%" height="15" fill="rgb(254,44,4)" fg:x="355" fg:w="2"/><text x="28.1150%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9435%" y="565" width="0.0785%" height="15" fill="rgb(252,128,37)" fg:x="356" fg:w="1"/><text x="28.1935%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9435%" y="549" width="0.0785%" height="15" fill="rgb(227,178,8)" fg:x="356" fg:w="1"/><text x="28.1935%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.9435%" y="533" width="0.0785%" height="15" fill="rgb(205,206,32)" fg:x="356" fg:w="1"/><text x="28.1935%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.9435%" y="517" width="0.0785%" height="15" fill="rgb(220,218,22)" fg:x="356" fg:w="1"/><text x="28.1935%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.9435%" y="501" width="0.0785%" height="15" fill="rgb(236,41,28)" fg:x="356" fg:w="1"/><text x="28.1935%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9435%" y="485" width="0.0785%" height="15" fill="rgb(219,37,7)" fg:x="356" fg:w="1"/><text x="28.1935%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9435%" y="469" width="0.0785%" height="15" fill="rgb(206,160,15)" fg:x="356" fg:w="1"/><text x="28.1935%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.9435%" y="453" width="0.0785%" height="15" fill="rgb(208,82,21)" fg:x="356" fg:w="1"/><text x="28.1935%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.9435%" y="437" width="0.0785%" height="15" fill="rgb(226,130,25)" fg:x="356" fg:w="1"/><text x="28.1935%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.9435%" y="421" width="0.0785%" height="15" fill="rgb(212,72,24)" fg:x="356" fg:w="1"/><text x="28.1935%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.9435%" y="405" width="0.0785%" height="15" fill="rgb(206,28,16)" fg:x="356" fg:w="1"/><text x="28.1935%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9435%" y="389" width="0.0785%" height="15" fill="rgb(249,41,5)" fg:x="356" fg:w="1"/><text x="28.1935%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="28.0220%" y="517" width="0.1570%" height="15" fill="rgb(233,96,48)" fg:x="357" fg:w="2"/><text x="28.2720%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.47%)</title><rect x="27.7865%" y="661" width="0.4710%" height="15" fill="rgb(240,198,11)" fg:x="354" fg:w="6"/><text x="28.0365%" y="671.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="27.8650%" y="645" width="0.3925%" height="15" fill="rgb(209,175,35)" fg:x="355" fg:w="5"/><text x="28.1150%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="27.8650%" y="629" width="0.3925%" height="15" fill="rgb(214,40,51)" fg:x="355" fg:w="5"/><text x="28.1150%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.0220%" y="613" width="0.2355%" height="15" fill="rgb(252,56,4)" fg:x="357" fg:w="3"/><text x="28.2720%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.0220%" y="597" width="0.2355%" height="15" fill="rgb(219,131,5)" fg:x="357" fg:w="3"/><text x="28.2720%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.0220%" y="581" width="0.2355%" height="15" fill="rgb(223,67,53)" fg:x="357" fg:w="3"/><text x="28.2720%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.0220%" y="565" width="0.2355%" height="15" fill="rgb(227,154,8)" fg:x="357" fg:w="3"/><text x="28.2720%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.0220%" y="549" width="0.2355%" height="15" fill="rgb(216,174,51)" fg:x="357" fg:w="3"/><text x="28.2720%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.0220%" y="533" width="0.2355%" height="15" fill="rgb(239,60,34)" fg:x="357" fg:w="3"/><text x="28.2720%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="28.1790%" y="517" width="0.0785%" height="15" fill="rgb(236,165,48)" fg:x="359" fg:w="1"/><text x="28.4290%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1790%" y="501" width="0.0785%" height="15" fill="rgb(210,37,26)" fg:x="359" fg:w="1"/><text x="28.4290%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.1790%" y="485" width="0.0785%" height="15" fill="rgb(211,3,17)" fg:x="359" fg:w="1"/><text x="28.4290%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="28.2575%" y="645" width="0.0785%" height="15" fill="rgb(234,88,49)" fg:x="360" fg:w="1"/><text x="28.5075%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.2575%" y="629" width="0.0785%" height="15" fill="rgb(233,40,17)" fg:x="360" fg:w="1"/><text x="28.5075%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.3359%" y="597" width="0.0785%" height="15" fill="rgb(235,127,31)" fg:x="361" fg:w="1"/><text x="28.5859%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.3359%" y="581" width="0.0785%" height="15" fill="rgb(248,167,17)" fg:x="361" fg:w="1"/><text x="28.5859%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3359%" y="565" width="0.0785%" height="15" fill="rgb(218,179,8)" fg:x="361" fg:w="1"/><text x="28.5859%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.3359%" y="549" width="0.0785%" height="15" fill="rgb(216,92,14)" fg:x="361" fg:w="1"/><text x="28.5859%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.3359%" y="533" width="0.0785%" height="15" fill="rgb(221,198,46)" fg:x="361" fg:w="1"/><text x="28.5859%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.3359%" y="517" width="0.0785%" height="15" fill="rgb(244,7,25)" fg:x="361" fg:w="1"/><text x="28.5859%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.3359%" y="501" width="0.0785%" height="15" fill="rgb(233,75,6)" fg:x="361" fg:w="1"/><text x="28.5859%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3359%" y="485" width="0.0785%" height="15" fill="rgb(240,189,41)" fg:x="361" fg:w="1"/><text x="28.5859%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.3359%" y="469" width="0.0785%" height="15" fill="rgb(237,157,21)" fg:x="361" fg:w="1"/><text x="28.5859%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.3359%" y="453" width="0.0785%" height="15" fill="rgb(210,136,49)" fg:x="361" fg:w="1"/><text x="28.5859%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.3359%" y="437" width="0.0785%" height="15" fill="rgb(210,68,29)" fg:x="361" fg:w="1"/><text x="28.5859%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.3359%" y="421" width="0.0785%" height="15" fill="rgb(247,207,20)" fg:x="361" fg:w="1"/><text x="28.5859%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.3359%" y="405" width="0.0785%" height="15" fill="rgb(224,73,48)" fg:x="361" fg:w="1"/><text x="28.5859%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.3359%" y="389" width="0.0785%" height="15" fill="rgb(215,136,47)" fg:x="361" fg:w="1"/><text x="28.5859%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3359%" y="613" width="0.1570%" height="15" fill="rgb(232,222,16)" fg:x="361" fg:w="2"/><text x="28.5859%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.4144%" y="597" width="0.0785%" height="15" fill="rgb(249,202,47)" fg:x="362" fg:w="1"/><text x="28.6644%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4929%" y="613" width="0.0785%" height="15" fill="rgb(236,56,8)" fg:x="363" fg:w="1"/><text x="28.7429%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="28.4929%" y="597" width="0.0785%" height="15" fill="rgb(222,6,3)" fg:x="363" fg:w="1"/><text x="28.7429%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4929%" y="581" width="0.0785%" height="15" fill="rgb(254,222,28)" fg:x="363" fg:w="1"/><text x="28.7429%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4929%" y="565" width="0.0785%" height="15" fill="rgb(219,57,23)" fg:x="363" fg:w="1"/><text x="28.7429%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="28.4929%" y="549" width="0.0785%" height="15" fill="rgb(251,106,48)" fg:x="363" fg:w="1"/><text x="28.7429%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.5714%" y="581" width="0.0785%" height="15" fill="rgb(242,2,23)" fg:x="364" fg:w="1"/><text x="28.8214%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (43 samples, 3.38%)</title><rect x="25.5102%" y="741" width="3.3752%" height="15" fill="rgb(212,109,31)" fg:x="325" fg:w="43"/><text x="25.7602%" y="751.50">plu..</text></g><g><title>plugins_core::tools::set_container (32 samples, 2.51%)</title><rect x="26.3736%" y="725" width="2.5118%" height="15" fill="rgb(241,9,22)" fg:x="336" fg:w="32"/><text x="26.6236%" y="735.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (14 samples, 1.10%)</title><rect x="27.7865%" y="709" width="1.0989%" height="15" fill="rgb(209,64,27)" fg:x="354" fg:w="14"/><text x="28.0365%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.10%)</title><rect x="27.7865%" y="693" width="1.0989%" height="15" fill="rgb(248,13,44)" fg:x="354" fg:w="14"/><text x="28.0365%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (14 samples, 1.10%)</title><rect x="27.7865%" y="677" width="1.0989%" height="15" fill="rgb(213,86,6)" fg:x="354" fg:w="14"/><text x="28.0365%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.63%)</title><rect x="28.2575%" y="661" width="0.6279%" height="15" fill="rgb(247,11,18)" fg:x="360" fg:w="8"/><text x="28.5075%" y="671.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.55%)</title><rect x="28.3359%" y="645" width="0.5495%" height="15" fill="rgb(252,31,11)" fg:x="361" fg:w="7"/><text x="28.5859%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.55%)</title><rect x="28.3359%" y="629" width="0.5495%" height="15" fill="rgb(215,63,51)" fg:x="361" fg:w="7"/><text x="28.5859%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="28.5714%" y="613" width="0.3140%" height="15" fill="rgb(222,180,4)" fg:x="364" fg:w="4"/><text x="28.8214%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="28.5714%" y="597" width="0.3140%" height="15" fill="rgb(233,4,23)" fg:x="364" fg:w="4"/><text x="28.8214%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.6499%" y="581" width="0.2355%" height="15" fill="rgb(230,116,22)" fg:x="365" fg:w="3"/><text x="28.8999%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6499%" y="565" width="0.2355%" height="15" fill="rgb(222,20,14)" fg:x="365" fg:w="3"/><text x="28.8999%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.6499%" y="549" width="0.2355%" height="15" fill="rgb(210,176,43)" fg:x="365" fg:w="3"/><text x="28.8999%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6499%" y="533" width="0.2355%" height="15" fill="rgb(219,67,32)" fg:x="365" fg:w="3"/><text x="28.8999%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.6499%" y="517" width="0.2355%" height="15" fill="rgb(228,91,39)" fg:x="365" fg:w="3"/><text x="28.8999%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6499%" y="501" width="0.2355%" height="15" fill="rgb(254,63,14)" fg:x="365" fg:w="3"/><text x="28.8999%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.6499%" y="485" width="0.2355%" height="15" fill="rgb(216,171,39)" fg:x="365" fg:w="3"/><text x="28.8999%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6499%" y="469" width="0.2355%" height="15" fill="rgb(248,68,25)" fg:x="365" fg:w="3"/><text x="28.8999%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="28.8069%" y="453" width="0.0785%" height="15" fill="rgb(239,63,16)" fg:x="367" fg:w="1"/><text x="29.0569%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="28.8069%" y="437" width="0.0785%" height="15" fill="rgb(225,111,43)" fg:x="367" fg:w="1"/><text x="29.0569%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="28.8854%" y="709" width="0.0785%" height="15" fill="rgb(246,165,17)" fg:x="368" fg:w="1"/><text x="29.1354%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="28.8854%" y="693" width="0.0785%" height="15" fill="rgb(208,124,1)" fg:x="368" fg:w="1"/><text x="29.1354%" y="703.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="28.8854%" y="677" width="0.0785%" height="15" fill="rgb(234,147,33)" fg:x="368" fg:w="1"/><text x="29.1354%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.8854%" y="661" width="0.0785%" height="15" fill="rgb(240,86,30)" fg:x="368" fg:w="1"/><text x="29.1354%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.9639%" y="693" width="0.0785%" height="15" fill="rgb(237,34,51)" fg:x="369" fg:w="1"/><text x="29.2139%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.9639%" y="677" width="0.0785%" height="15" fill="rgb(232,131,41)" fg:x="369" fg:w="1"/><text x="29.2139%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="28.8854%" y="741" width="0.2355%" height="15" fill="rgb(227,129,53)" fg:x="368" fg:w="3"/><text x="29.1354%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="28.8854%" y="725" width="0.2355%" height="15" fill="rgb(230,90,35)" fg:x="368" fg:w="3"/><text x="29.1354%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="28.9639%" y="709" width="0.1570%" height="15" fill="rgb(248,88,27)" fg:x="369" fg:w="2"/><text x="29.2139%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.0424%" y="693" width="0.0785%" height="15" fill="rgb(223,18,17)" fg:x="370" fg:w="1"/><text x="29.2924%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.0424%" y="677" width="0.0785%" height="15" fill="rgb(241,11,10)" fg:x="370" fg:w="1"/><text x="29.2924%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0424%" y="661" width="0.0785%" height="15" fill="rgb(232,111,52)" fg:x="370" fg:w="1"/><text x="29.2924%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0424%" y="645" width="0.0785%" height="15" fill="rgb(228,67,8)" fg:x="370" fg:w="1"/><text x="29.2924%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0424%" y="629" width="0.0785%" height="15" fill="rgb(251,168,31)" fg:x="370" fg:w="1"/><text x="29.2924%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0424%" y="613" width="0.0785%" height="15" fill="rgb(249,164,11)" fg:x="370" fg:w="1"/><text x="29.2924%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0424%" y="597" width="0.0785%" height="15" fill="rgb(239,81,9)" fg:x="370" fg:w="1"/><text x="29.2924%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0424%" y="581" width="0.0785%" height="15" fill="rgb(222,145,38)" fg:x="370" fg:w="1"/><text x="29.2924%" y="591.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="29.1209%" y="709" width="0.0785%" height="15" fill="rgb(238,80,54)" fg:x="371" fg:w="1"/><text x="29.3709%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1209%" y="693" width="0.0785%" height="15" fill="rgb(237,116,16)" fg:x="371" fg:w="1"/><text x="29.3709%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.1209%" y="677" width="0.0785%" height="15" fill="rgb(218,135,19)" fg:x="371" fg:w="1"/><text x="29.3709%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1994%" y="677" width="0.0785%" height="15" fill="rgb(216,207,44)" fg:x="372" fg:w="1"/><text x="29.4494%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.1994%" y="661" width="0.0785%" height="15" fill="rgb(226,152,40)" fg:x="372" fg:w="1"/><text x="29.4494%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="29.1994%" y="645" width="0.0785%" height="15" fill="rgb(219,98,35)" fg:x="372" fg:w="1"/><text x="29.4494%" y="655.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.31%)</title><rect x="29.1209%" y="741" width="0.3140%" height="15" fill="rgb(222,136,46)" fg:x="371" fg:w="4"/><text x="29.3709%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.31%)</title><rect x="29.1209%" y="725" width="0.3140%" height="15" fill="rgb(222,71,8)" fg:x="371" fg:w="4"/><text x="29.3709%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="29.1994%" y="709" width="0.2355%" height="15" fill="rgb(209,89,53)" fg:x="372" fg:w="3"/><text x="29.4494%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="29.1994%" y="693" width="0.2355%" height="15" fill="rgb(210,97,51)" fg:x="372" fg:w="3"/><text x="29.4494%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2779%" y="677" width="0.1570%" height="15" fill="rgb(248,65,21)" fg:x="373" fg:w="2"/><text x="29.5279%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.2779%" y="661" width="0.1570%" height="15" fill="rgb(222,5,31)" fg:x="373" fg:w="2"/><text x="29.5279%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2779%" y="645" width="0.1570%" height="15" fill="rgb(241,16,30)" fg:x="373" fg:w="2"/><text x="29.5279%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="29.2779%" y="629" width="0.1570%" height="15" fill="rgb(215,86,30)" fg:x="373" fg:w="2"/><text x="29.5279%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="29.2779%" y="613" width="0.1570%" height="15" fill="rgb(235,26,44)" fg:x="373" fg:w="2"/><text x="29.5279%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="29.2779%" y="597" width="0.1570%" height="15" fill="rgb(228,147,14)" fg:x="373" fg:w="2"/><text x="29.5279%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="29.3564%" y="581" width="0.0785%" height="15" fill="rgb(253,38,50)" fg:x="374" fg:w="1"/><text x="29.6064%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="29.5133%" y="709" width="0.0785%" height="15" fill="rgb(251,151,16)" fg:x="376" fg:w="1"/><text x="29.7633%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.5133%" y="693" width="0.0785%" height="15" fill="rgb(224,64,19)" fg:x="376" fg:w="1"/><text x="29.7633%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.5133%" y="677" width="0.0785%" height="15" fill="rgb(235,214,47)" fg:x="376" fg:w="1"/><text x="29.7633%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.5133%" y="661" width="0.0785%" height="15" fill="rgb(218,15,19)" fg:x="376" fg:w="1"/><text x="29.7633%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.5133%" y="645" width="0.0785%" height="15" fill="rgb(247,209,3)" fg:x="376" fg:w="1"/><text x="29.7633%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.5133%" y="629" width="0.0785%" height="15" fill="rgb(217,29,2)" fg:x="376" fg:w="1"/><text x="29.7633%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.5133%" y="613" width="0.0785%" height="15" fill="rgb(234,9,9)" fg:x="376" fg:w="1"/><text x="29.7633%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.5133%" y="597" width="0.0785%" height="15" fill="rgb(207,43,14)" fg:x="376" fg:w="1"/><text x="29.7633%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.5133%" y="581" width="0.0785%" height="15" fill="rgb(216,219,36)" fg:x="376" fg:w="1"/><text x="29.7633%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.5133%" y="565" width="0.0785%" height="15" fill="rgb(238,12,26)" fg:x="376" fg:w="1"/><text x="29.7633%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="29.5918%" y="693" width="0.0785%" height="15" fill="rgb(226,67,30)" fg:x="377" fg:w="1"/><text x="29.8418%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.5918%" y="677" width="0.0785%" height="15" fill="rgb(229,154,7)" fg:x="377" fg:w="1"/><text x="29.8418%" y="687.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.5918%" y="661" width="0.0785%" height="15" fill="rgb(249,90,18)" fg:x="377" fg:w="1"/><text x="29.8418%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="29.5918%" y="709" width="0.1570%" height="15" fill="rgb(223,53,15)" fg:x="377" fg:w="2"/><text x="29.8418%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.6703%" y="693" width="0.0785%" height="15" fill="rgb(253,86,38)" fg:x="378" fg:w="1"/><text x="29.9203%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6703%" y="677" width="0.0785%" height="15" fill="rgb(222,198,9)" fg:x="378" fg:w="1"/><text x="29.9203%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6703%" y="661" width="0.0785%" height="15" fill="rgb(240,146,25)" fg:x="378" fg:w="1"/><text x="29.9203%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6703%" y="645" width="0.0785%" height="15" fill="rgb(225,38,10)" fg:x="378" fg:w="1"/><text x="29.9203%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.7488%" y="693" width="0.0785%" height="15" fill="rgb(246,93,4)" fg:x="379" fg:w="1"/><text x="29.9988%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.8273%" y="661" width="0.0785%" height="15" fill="rgb(222,55,18)" fg:x="380" fg:w="1"/><text x="30.0773%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.8273%" y="645" width="0.0785%" height="15" fill="rgb(233,137,48)" fg:x="380" fg:w="1"/><text x="30.0773%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8273%" y="629" width="0.0785%" height="15" fill="rgb(214,8,54)" fg:x="380" fg:w="1"/><text x="30.0773%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8273%" y="613" width="0.0785%" height="15" fill="rgb(206,75,4)" fg:x="380" fg:w="1"/><text x="30.0773%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8273%" y="597" width="0.0785%" height="15" fill="rgb(238,171,14)" fg:x="380" fg:w="1"/><text x="30.0773%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.8273%" y="581" width="0.0785%" height="15" fill="rgb(233,70,41)" fg:x="380" fg:w="1"/><text x="30.0773%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8273%" y="565" width="0.0785%" height="15" fill="rgb(214,68,36)" fg:x="380" fg:w="1"/><text x="30.0773%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.8273%" y="549" width="0.0785%" height="15" fill="rgb(223,29,5)" fg:x="380" fg:w="1"/><text x="30.0773%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.8273%" y="533" width="0.0785%" height="15" fill="rgb(251,22,40)" fg:x="380" fg:w="1"/><text x="30.0773%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.8273%" y="517" width="0.0785%" height="15" fill="rgb(210,67,41)" fg:x="380" fg:w="1"/><text x="30.0773%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.8273%" y="501" width="0.0785%" height="15" fill="rgb(225,177,31)" fg:x="380" fg:w="1"/><text x="30.0773%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8273%" y="485" width="0.0785%" height="15" fill="rgb(221,229,11)" fg:x="380" fg:w="1"/><text x="30.0773%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.8273%" y="469" width="0.0785%" height="15" fill="rgb(247,172,52)" fg:x="380" fg:w="1"/><text x="30.0773%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.8273%" y="453" width="0.0785%" height="15" fill="rgb(212,73,19)" fg:x="380" fg:w="1"/><text x="30.0773%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.8273%" y="437" width="0.0785%" height="15" fill="rgb(244,7,46)" fg:x="380" fg:w="1"/><text x="30.0773%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.8273%" y="421" width="0.0785%" height="15" fill="rgb(230,113,20)" fg:x="380" fg:w="1"/><text x="30.0773%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.8273%" y="405" width="0.0785%" height="15" fill="rgb(209,97,30)" fg:x="380" fg:w="1"/><text x="30.0773%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8273%" y="389" width="0.0785%" height="15" fill="rgb(243,89,12)" fg:x="380" fg:w="1"/><text x="30.0773%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.9058%" y="613" width="0.0785%" height="15" fill="rgb(228,32,19)" fg:x="381" fg:w="1"/><text x="30.1558%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9058%" y="597" width="0.0785%" height="15" fill="rgb(248,25,17)" fg:x="381" fg:w="1"/><text x="30.1558%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="29.4349%" y="725" width="0.6279%" height="15" fill="rgb(232,161,29)" fg:x="375" fg:w="8"/><text x="29.6849%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="29.7488%" y="709" width="0.3140%" height="15" fill="rgb(251,192,11)" fg:x="379" fg:w="4"/><text x="29.9988%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="29.8273%" y="693" width="0.2355%" height="15" fill="rgb(240,47,32)" fg:x="380" fg:w="3"/><text x="30.0773%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="29.8273%" y="677" width="0.2355%" height="15" fill="rgb(250,16,45)" fg:x="380" fg:w="3"/><text x="30.0773%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="29.9058%" y="661" width="0.1570%" height="15" fill="rgb(227,217,42)" fg:x="381" fg:w="2"/><text x="30.1558%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="29.9058%" y="645" width="0.1570%" height="15" fill="rgb(206,82,54)" fg:x="381" fg:w="2"/><text x="30.1558%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.9058%" y="629" width="0.1570%" height="15" fill="rgb(243,145,25)" fg:x="381" fg:w="2"/><text x="30.1558%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9843%" y="613" width="0.0785%" height="15" fill="rgb(207,166,24)" fg:x="382" fg:w="1"/><text x="30.2343%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0628%" y="629" width="0.0785%" height="15" fill="rgb(215,191,44)" fg:x="383" fg:w="1"/><text x="30.3128%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0628%" y="613" width="0.0785%" height="15" fill="rgb(234,218,51)" fg:x="383" fg:w="1"/><text x="30.3128%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0628%" y="597" width="0.0785%" height="15" fill="rgb(245,133,21)" fg:x="383" fg:w="1"/><text x="30.3128%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.0628%" y="581" width="0.0785%" height="15" fill="rgb(230,136,45)" fg:x="383" fg:w="1"/><text x="30.3128%" y="591.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="30.0628%" y="709" width="0.1570%" height="15" fill="rgb(247,63,43)" fg:x="383" fg:w="2"/><text x="30.3128%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="30.0628%" y="693" width="0.1570%" height="15" fill="rgb(254,223,31)" fg:x="383" fg:w="2"/><text x="30.3128%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.0628%" y="677" width="0.1570%" height="15" fill="rgb(236,185,0)" fg:x="383" fg:w="2"/><text x="30.3128%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.0628%" y="661" width="0.1570%" height="15" fill="rgb(231,139,46)" fg:x="383" fg:w="2"/><text x="30.3128%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.0628%" y="645" width="0.1570%" height="15" fill="rgb(236,147,31)" fg:x="383" fg:w="2"/><text x="30.3128%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1413%" y="629" width="0.0785%" height="15" fill="rgb(225,222,22)" fg:x="384" fg:w="1"/><text x="30.3913%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1413%" y="613" width="0.0785%" height="15" fill="rgb(225,193,14)" fg:x="384" fg:w="1"/><text x="30.3913%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1413%" y="597" width="0.0785%" height="15" fill="rgb(253,193,46)" fg:x="384" fg:w="1"/><text x="30.3913%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1413%" y="581" width="0.0785%" height="15" fill="rgb(218,187,39)" fg:x="384" fg:w="1"/><text x="30.3913%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.1413%" y="565" width="0.0785%" height="15" fill="rgb(227,162,48)" fg:x="384" fg:w="1"/><text x="30.3913%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1413%" y="549" width="0.0785%" height="15" fill="rgb(222,25,5)" fg:x="384" fg:w="1"/><text x="30.3913%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1413%" y="533" width="0.0785%" height="15" fill="rgb(211,205,16)" fg:x="384" fg:w="1"/><text x="30.3913%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1413%" y="517" width="0.0785%" height="15" fill="rgb(244,191,2)" fg:x="384" fg:w="1"/><text x="30.3913%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.1413%" y="501" width="0.0785%" height="15" fill="rgb(248,159,12)" fg:x="384" fg:w="1"/><text x="30.3913%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.1413%" y="485" width="0.0785%" height="15" fill="rgb(235,204,17)" fg:x="384" fg:w="1"/><text x="30.3913%" y="495.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.2198%" y="709" width="0.0785%" height="15" fill="rgb(240,21,27)" fg:x="385" fg:w="1"/><text x="30.4698%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.2198%" y="693" width="0.0785%" height="15" fill="rgb(224,170,31)" fg:x="385" fg:w="1"/><text x="30.4698%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.2198%" y="677" width="0.0785%" height="15" fill="rgb(223,145,32)" fg:x="385" fg:w="1"/><text x="30.4698%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.2198%" y="661" width="0.0785%" height="15" fill="rgb(243,100,5)" fg:x="385" fg:w="1"/><text x="30.4698%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2983%" y="597" width="0.0785%" height="15" fill="rgb(242,131,51)" fg:x="386" fg:w="1"/><text x="30.5483%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2983%" y="581" width="0.0785%" height="15" fill="rgb(223,156,46)" fg:x="386" fg:w="1"/><text x="30.5483%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2983%" y="565" width="0.0785%" height="15" fill="rgb(215,10,40)" fg:x="386" fg:w="1"/><text x="30.5483%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2983%" y="549" width="0.0785%" height="15" fill="rgb(233,155,0)" fg:x="386" fg:w="1"/><text x="30.5483%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.2983%" y="613" width="0.1570%" height="15" fill="rgb(247,78,6)" fg:x="386" fg:w="2"/><text x="30.5483%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3768%" y="597" width="0.0785%" height="15" fill="rgb(237,217,21)" fg:x="387" fg:w="1"/><text x="30.6268%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="613" width="0.0785%" height="15" fill="rgb(212,1,21)" fg:x="388" fg:w="1"/><text x="30.7053%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="597" width="0.0785%" height="15" fill="rgb(213,7,14)" fg:x="388" fg:w="1"/><text x="30.7053%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="581" width="0.0785%" height="15" fill="rgb(225,84,14)" fg:x="388" fg:w="1"/><text x="30.7053%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="565" width="0.0785%" height="15" fill="rgb(239,216,39)" fg:x="388" fg:w="1"/><text x="30.7053%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="549" width="0.0785%" height="15" fill="rgb(253,29,23)" fg:x="388" fg:w="1"/><text x="30.7053%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.4553%" y="533" width="0.0785%" height="15" fill="rgb(220,167,50)" fg:x="388" fg:w="1"/><text x="30.7053%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.4553%" y="517" width="0.0785%" height="15" fill="rgb(232,141,1)" fg:x="388" fg:w="1"/><text x="30.7053%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.4553%" y="501" width="0.0785%" height="15" fill="rgb(222,210,1)" fg:x="388" fg:w="1"/><text x="30.7053%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="30.2983%" y="661" width="0.3140%" height="15" fill="rgb(219,84,10)" fg:x="386" fg:w="4"/><text x="30.5483%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="30.2983%" y="645" width="0.3140%" height="15" fill="rgb(245,188,6)" fg:x="386" fg:w="4"/><text x="30.5483%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="30.2983%" y="629" width="0.3140%" height="15" fill="rgb(252,139,39)" fg:x="386" fg:w="4"/><text x="30.5483%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.5338%" y="613" width="0.0785%" height="15" fill="rgb(218,42,26)" fg:x="389" fg:w="1"/><text x="30.7838%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6122%" y="613" width="0.0785%" height="15" fill="rgb(237,226,51)" fg:x="390" fg:w="1"/><text x="30.8622%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6122%" y="597" width="0.0785%" height="15" fill="rgb(246,15,17)" fg:x="390" fg:w="1"/><text x="30.8622%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (200 samples, 15.70%)</title><rect x="15.0706%" y="757" width="15.6986%" height="15" fill="rgb(228,170,42)" fg:x="192" fg:w="200"/><text x="15.3206%" y="767.50">plugins_core::build::Bui..</text></g><g><title>plugins_core::build::Build::occupying (17 samples, 1.33%)</title><rect x="29.4349%" y="741" width="1.3344%" height="15" fill="rgb(248,118,53)" fg:x="375" fg:w="17"/><text x="29.6849%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (9 samples, 0.71%)</title><rect x="30.0628%" y="725" width="0.7064%" height="15" fill="rgb(207,30,10)" fg:x="383" fg:w="9"/><text x="30.3128%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (6 samples, 0.47%)</title><rect x="30.2983%" y="709" width="0.4710%" height="15" fill="rgb(217,104,38)" fg:x="386" fg:w="6"/><text x="30.5483%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.47%)</title><rect x="30.2983%" y="693" width="0.4710%" height="15" fill="rgb(211,165,26)" fg:x="386" fg:w="6"/><text x="30.5483%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.47%)</title><rect x="30.2983%" y="677" width="0.4710%" height="15" fill="rgb(247,38,9)" fg:x="386" fg:w="6"/><text x="30.5483%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="30.6122%" y="661" width="0.1570%" height="15" fill="rgb(218,187,8)" fg:x="390" fg:w="2"/><text x="30.8622%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.6122%" y="645" width="0.1570%" height="15" fill="rgb(247,94,28)" fg:x="390" fg:w="2"/><text x="30.8622%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.6122%" y="629" width="0.1570%" height="15" fill="rgb(218,173,30)" fg:x="390" fg:w="2"/><text x="30.8622%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6907%" y="613" width="0.0785%" height="15" fill="rgb(245,45,36)" fg:x="391" fg:w="1"/><text x="30.9407%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6907%" y="597" width="0.0785%" height="15" fill="rgb(221,172,44)" fg:x="391" fg:w="1"/><text x="30.9407%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.6907%" y="581" width="0.0785%" height="15" fill="rgb(222,45,12)" fg:x="391" fg:w="1"/><text x="30.9407%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6907%" y="565" width="0.0785%" height="15" fill="rgb(250,10,22)" fg:x="391" fg:w="1"/><text x="30.9407%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.6907%" y="549" width="0.0785%" height="15" fill="rgb(239,27,0)" fg:x="391" fg:w="1"/><text x="30.9407%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.6907%" y="533" width="0.0785%" height="15" fill="rgb(223,118,22)" fg:x="391" fg:w="1"/><text x="30.9407%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="30.6907%" y="517" width="0.0785%" height="15" fill="rgb(251,81,25)" fg:x="391" fg:w="1"/><text x="30.9407%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.6907%" y="501" width="0.0785%" height="15" fill="rgb(237,225,53)" fg:x="391" fg:w="1"/><text x="30.9407%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.6907%" y="485" width="0.0785%" height="15" fill="rgb(237,186,51)" fg:x="391" fg:w="1"/><text x="30.9407%" y="495.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="30.8477%" y="725" width="0.0785%" height="15" fill="rgb(247,209,11)" fg:x="393" fg:w="1"/><text x="31.0977%" y="735.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (3 samples, 0.24%)</title><rect x="30.7692%" y="757" width="0.2355%" height="15" fill="rgb(223,109,27)" fg:x="392" fg:w="3"/><text x="31.0192%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="30.8477%" y="741" width="0.1570%" height="15" fill="rgb(246,181,13)" fg:x="393" fg:w="2"/><text x="31.0977%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="30.9262%" y="725" width="0.0785%" height="15" fill="rgb(234,57,44)" fg:x="394" fg:w="1"/><text x="31.1762%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.9262%" y="709" width="0.0785%" height="15" fill="rgb(211,227,50)" fg:x="394" fg:w="1"/><text x="31.1762%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9262%" y="693" width="0.0785%" height="15" fill="rgb(254,57,34)" fg:x="394" fg:w="1"/><text x="31.1762%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="31.0047%" y="709" width="0.0785%" height="15" fill="rgb(227,212,26)" fg:x="395" fg:w="1"/><text x="31.2547%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.0832%" y="709" width="0.0785%" height="15" fill="rgb(244,169,44)" fg:x="396" fg:w="1"/><text x="31.3332%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.0832%" y="693" width="0.0785%" height="15" fill="rgb(236,135,50)" fg:x="396" fg:w="1"/><text x="31.3332%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0832%" y="677" width="0.0785%" height="15" fill="rgb(241,89,30)" fg:x="396" fg:w="1"/><text x="31.3332%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.0832%" y="661" width="0.0785%" height="15" fill="rgb(206,113,34)" fg:x="396" fg:w="1"/><text x="31.3332%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.0832%" y="645" width="0.0785%" height="15" fill="rgb(218,104,52)" fg:x="396" fg:w="1"/><text x="31.3332%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.0832%" y="629" width="0.0785%" height="15" fill="rgb(223,82,32)" fg:x="396" fg:w="1"/><text x="31.3332%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0832%" y="613" width="0.0785%" height="15" fill="rgb(249,219,30)" fg:x="396" fg:w="1"/><text x="31.3332%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.0832%" y="597" width="0.0785%" height="15" fill="rgb(233,141,21)" fg:x="396" fg:w="1"/><text x="31.3332%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.0832%" y="581" width="0.0785%" height="15" fill="rgb(252,87,44)" fg:x="396" fg:w="1"/><text x="31.3332%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.0832%" y="565" width="0.0785%" height="15" fill="rgb(229,48,33)" fg:x="396" fg:w="1"/><text x="31.3332%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.0832%" y="549" width="0.0785%" height="15" fill="rgb(229,23,22)" fg:x="396" fg:w="1"/><text x="31.3332%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0832%" y="533" width="0.0785%" height="15" fill="rgb(244,116,16)" fg:x="396" fg:w="1"/><text x="31.3332%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.0832%" y="517" width="0.0785%" height="15" fill="rgb(247,45,10)" fg:x="396" fg:w="1"/><text x="31.3332%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.0832%" y="501" width="0.0785%" height="15" fill="rgb(228,60,29)" fg:x="396" fg:w="1"/><text x="31.3332%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.0832%" y="485" width="0.0785%" height="15" fill="rgb(205,129,15)" fg:x="396" fg:w="1"/><text x="31.3332%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.0832%" y="469" width="0.0785%" height="15" fill="rgb(206,229,4)" fg:x="396" fg:w="1"/><text x="31.3332%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.0832%" y="453" width="0.0785%" height="15" fill="rgb(249,191,30)" fg:x="396" fg:w="1"/><text x="31.3332%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.0832%" y="437" width="0.0785%" height="15" fill="rgb(250,84,54)" fg:x="396" fg:w="1"/><text x="31.3332%" y="447.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="31.2402%" y="677" width="0.0785%" height="15" fill="rgb(207,25,53)" fg:x="398" fg:w="1"/><text x="31.4902%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.2402%" y="661" width="0.0785%" height="15" fill="rgb(235,40,8)" fg:x="398" fg:w="1"/><text x="31.4902%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2402%" y="645" width="0.0785%" height="15" fill="rgb(226,169,33)" fg:x="398" fg:w="1"/><text x="31.4902%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.2402%" y="629" width="0.0785%" height="15" fill="rgb(238,110,8)" fg:x="398" fg:w="1"/><text x="31.4902%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="31.1617%" y="709" width="0.2355%" height="15" fill="rgb(251,206,12)" fg:x="397" fg:w="3"/><text x="31.4117%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.2402%" y="693" width="0.1570%" height="15" fill="rgb(248,171,18)" fg:x="398" fg:w="2"/><text x="31.4902%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3187%" y="677" width="0.0785%" height="15" fill="rgb(213,65,46)" fg:x="399" fg:w="1"/><text x="31.5687%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.3972%" y="661" width="0.0785%" height="15" fill="rgb(211,154,15)" fg:x="400" fg:w="1"/><text x="31.6472%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.3972%" y="645" width="0.0785%" height="15" fill="rgb(217,75,43)" fg:x="400" fg:w="1"/><text x="31.6472%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3972%" y="629" width="0.0785%" height="15" fill="rgb(230,32,33)" fg:x="400" fg:w="1"/><text x="31.6472%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3972%" y="613" width="0.0785%" height="15" fill="rgb(221,100,16)" fg:x="400" fg:w="1"/><text x="31.6472%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3972%" y="597" width="0.0785%" height="15" fill="rgb(212,129,47)" fg:x="400" fg:w="1"/><text x="31.6472%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.3972%" y="581" width="0.0785%" height="15" fill="rgb(239,217,47)" fg:x="400" fg:w="1"/><text x="31.6472%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4757%" y="645" width="0.0785%" height="15" fill="rgb(230,84,24)" fg:x="401" fg:w="1"/><text x="31.7257%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="31.0047%" y="725" width="0.6279%" height="15" fill="rgb(214,153,51)" fg:x="395" fg:w="8"/><text x="31.2547%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="31.3972%" y="709" width="0.2355%" height="15" fill="rgb(231,6,35)" fg:x="400" fg:w="3"/><text x="31.6472%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="31.3972%" y="693" width="0.2355%" height="15" fill="rgb(229,122,30)" fg:x="400" fg:w="3"/><text x="31.6472%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="31.3972%" y="677" width="0.2355%" height="15" fill="rgb(234,71,10)" fg:x="400" fg:w="3"/><text x="31.6472%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="31.4757%" y="661" width="0.1570%" height="15" fill="rgb(215,173,26)" fg:x="401" fg:w="2"/><text x="31.7257%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.5542%" y="645" width="0.0785%" height="15" fill="rgb(248,118,52)" fg:x="402" fg:w="1"/><text x="31.8042%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5542%" y="629" width="0.0785%" height="15" fill="rgb(237,55,46)" fg:x="402" fg:w="1"/><text x="31.8042%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.5542%" y="613" width="0.0785%" height="15" fill="rgb(243,214,43)" fg:x="402" fg:w="1"/><text x="31.8042%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5542%" y="597" width="0.0785%" height="15" fill="rgb(252,123,30)" fg:x="402" fg:w="1"/><text x="31.8042%" y="607.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="31.6327%" y="725" width="0.0785%" height="15" fill="rgb(215,73,39)" fg:x="403" fg:w="1"/><text x="31.8827%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="31.6327%" y="709" width="0.0785%" height="15" fill="rgb(251,194,29)" fg:x="403" fg:w="1"/><text x="31.8827%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="31.6327%" y="693" width="0.0785%" height="15" fill="rgb(224,58,52)" fg:x="403" fg:w="1"/><text x="31.8827%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.6327%" y="677" width="0.0785%" height="15" fill="rgb(248,106,46)" fg:x="403" fg:w="1"/><text x="31.8827%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.6327%" y="661" width="0.0785%" height="15" fill="rgb(223,80,29)" fg:x="403" fg:w="1"/><text x="31.8827%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="31.6327%" y="645" width="0.0785%" height="15" fill="rgb(243,137,9)" fg:x="403" fg:w="1"/><text x="31.8827%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="31.6327%" y="629" width="0.0785%" height="15" fill="rgb(235,121,28)" fg:x="403" fg:w="1"/><text x="31.8827%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7111%" y="677" width="0.0785%" height="15" fill="rgb(219,121,41)" fg:x="404" fg:w="1"/><text x="31.9611%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (11 samples, 0.86%)</title><rect x="31.0047%" y="757" width="0.8634%" height="15" fill="rgb(251,60,6)" fg:x="395" fg:w="11"/><text x="31.2547%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (11 samples, 0.86%)</title><rect x="31.0047%" y="741" width="0.8634%" height="15" fill="rgb(208,12,30)" fg:x="395" fg:w="11"/><text x="31.2547%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="31.7111%" y="725" width="0.1570%" height="15" fill="rgb(207,176,36)" fg:x="404" fg:w="2"/><text x="31.9611%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="31.7111%" y="709" width="0.1570%" height="15" fill="rgb(211,188,29)" fg:x="404" fg:w="2"/><text x="31.9611%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="31.7111%" y="693" width="0.1570%" height="15" fill="rgb(220,184,37)" fg:x="404" fg:w="2"/><text x="31.9611%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.7896%" y="677" width="0.0785%" height="15" fill="rgb(239,87,37)" fg:x="405" fg:w="1"/><text x="32.0396%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="31.7896%" y="661" width="0.0785%" height="15" fill="rgb(232,113,44)" fg:x="405" fg:w="1"/><text x="32.0396%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.7896%" y="645" width="0.0785%" height="15" fill="rgb(246,25,39)" fg:x="405" fg:w="1"/><text x="32.0396%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="31.7896%" y="629" width="0.0785%" height="15" fill="rgb(247,30,13)" fg:x="405" fg:w="1"/><text x="32.0396%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="31.7896%" y="613" width="0.0785%" height="15" fill="rgb(230,176,35)" fg:x="405" fg:w="1"/><text x="32.0396%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="31.7896%" y="597" width="0.0785%" height="15" fill="rgb(222,23,18)" fg:x="405" fg:w="1"/><text x="32.0396%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="31.7896%" y="581" width="0.0785%" height="15" fill="rgb(234,86,8)" fg:x="405" fg:w="1"/><text x="32.0396%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="31.7896%" y="565" width="0.0785%" height="15" fill="rgb(206,218,47)" fg:x="405" fg:w="1"/><text x="32.0396%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7896%" y="549" width="0.0785%" height="15" fill="rgb(229,35,31)" fg:x="405" fg:w="1"/><text x="32.0396%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.7896%" y="533" width="0.0785%" height="15" fill="rgb(242,81,7)" fg:x="405" fg:w="1"/><text x="32.0396%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="31.7896%" y="517" width="0.0785%" height="15" fill="rgb(231,11,35)" fg:x="405" fg:w="1"/><text x="32.0396%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.0251%" y="677" width="0.1570%" height="15" fill="rgb(219,218,17)" fg:x="408" fg:w="2"/><text x="32.2751%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.0251%" y="661" width="0.1570%" height="15" fill="rgb(221,83,32)" fg:x="408" fg:w="2"/><text x="32.2751%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.0251%" y="645" width="0.1570%" height="15" fill="rgb(233,49,54)" fg:x="408" fg:w="2"/><text x="32.2751%" y="655.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.0251%" y="629" width="0.1570%" height="15" fill="rgb(206,18,51)" fg:x="408" fg:w="2"/><text x="32.2751%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="31.9466%" y="725" width="0.3140%" height="15" fill="rgb(249,193,15)" fg:x="407" fg:w="4"/><text x="32.1966%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="31.9466%" y="709" width="0.3140%" height="15" fill="rgb(245,186,19)" fg:x="407" fg:w="4"/><text x="32.1966%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="31.9466%" y="693" width="0.3140%" height="15" fill="rgb(230,4,24)" fg:x="407" fg:w="4"/><text x="32.1966%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1821%" y="677" width="0.0785%" height="15" fill="rgb(234,75,27)" fg:x="410" fg:w="1"/><text x="32.4321%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1821%" y="661" width="0.0785%" height="15" fill="rgb(244,187,35)" fg:x="410" fg:w="1"/><text x="32.4321%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.1821%" y="645" width="0.0785%" height="15" fill="rgb(241,97,43)" fg:x="410" fg:w="1"/><text x="32.4321%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1821%" y="629" width="0.0785%" height="15" fill="rgb(236,94,2)" fg:x="410" fg:w="1"/><text x="32.4321%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="32.1821%" y="613" width="0.0785%" height="15" fill="rgb(231,175,7)" fg:x="410" fg:w="1"/><text x="32.4321%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.1821%" y="597" width="0.0785%" height="15" fill="rgb(236,89,47)" fg:x="410" fg:w="1"/><text x="32.4321%" y="607.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="32.2606%" y="677" width="0.2355%" height="15" fill="rgb(213,191,37)" fg:x="411" fg:w="3"/><text x="32.5106%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="32.2606%" y="661" width="0.2355%" height="15" fill="rgb(252,0,34)" fg:x="411" fg:w="3"/><text x="32.5106%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.3391%" y="645" width="0.1570%" height="15" fill="rgb(208,145,44)" fg:x="412" fg:w="2"/><text x="32.5891%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4176%" y="629" width="0.0785%" height="15" fill="rgb(227,95,50)" fg:x="413" fg:w="1"/><text x="32.6676%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4176%" y="613" width="0.0785%" height="15" fill="rgb(222,136,24)" fg:x="413" fg:w="1"/><text x="32.6676%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4176%" y="597" width="0.0785%" height="15" fill="rgb(218,105,10)" fg:x="413" fg:w="1"/><text x="32.6676%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.4176%" y="581" width="0.0785%" height="15" fill="rgb(216,65,28)" fg:x="413" fg:w="1"/><text x="32.6676%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.63%)</title><rect x="31.9466%" y="741" width="0.6279%" height="15" fill="rgb(229,6,28)" fg:x="407" fg:w="8"/><text x="32.1966%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="32.2606%" y="725" width="0.3140%" height="15" fill="rgb(222,160,42)" fg:x="411" fg:w="4"/><text x="32.5106%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="32.2606%" y="709" width="0.3140%" height="15" fill="rgb(235,83,49)" fg:x="411" fg:w="4"/><text x="32.5106%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.31%)</title><rect x="32.2606%" y="693" width="0.3140%" height="15" fill="rgb(236,86,36)" fg:x="411" fg:w="4"/><text x="32.5106%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="32.4961%" y="677" width="0.0785%" height="15" fill="rgb(236,19,41)" fg:x="414" fg:w="1"/><text x="32.7461%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="32.4961%" y="661" width="0.0785%" height="15" fill="rgb(217,71,31)" fg:x="414" fg:w="1"/><text x="32.7461%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4961%" y="645" width="0.0785%" height="15" fill="rgb(236,209,25)" fg:x="414" fg:w="1"/><text x="32.7461%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.4961%" y="629" width="0.0785%" height="15" fill="rgb(247,104,21)" fg:x="414" fg:w="1"/><text x="32.7461%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4961%" y="613" width="0.0785%" height="15" fill="rgb(243,80,38)" fg:x="414" fg:w="1"/><text x="32.7461%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.4961%" y="597" width="0.0785%" height="15" fill="rgb(232,109,38)" fg:x="414" fg:w="1"/><text x="32.7461%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="32.4961%" y="581" width="0.0785%" height="15" fill="rgb(212,177,53)" fg:x="414" fg:w="1"/><text x="32.7461%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4961%" y="565" width="0.0785%" height="15" fill="rgb(227,30,34)" fg:x="414" fg:w="1"/><text x="32.7461%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.4961%" y="549" width="0.0785%" height="15" fill="rgb(205,175,25)" fg:x="414" fg:w="1"/><text x="32.7461%" y="559.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.4961%" y="533" width="0.0785%" height="15" fill="rgb(249,39,54)" fg:x="414" fg:w="1"/><text x="32.7461%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.4961%" y="517" width="0.0785%" height="15" fill="rgb(215,54,37)" fg:x="414" fg:w="1"/><text x="32.7461%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4961%" y="501" width="0.0785%" height="15" fill="rgb(205,60,46)" fg:x="414" fg:w="1"/><text x="32.7461%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4961%" y="485" width="0.0785%" height="15" fill="rgb(238,89,29)" fg:x="414" fg:w="1"/><text x="32.7461%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.5746%" y="565" width="0.0785%" height="15" fill="rgb(212,48,10)" fg:x="415" fg:w="1"/><text x="32.8246%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.6531%" y="565" width="0.0785%" height="15" fill="rgb(237,186,28)" fg:x="416" fg:w="1"/><text x="32.9031%" y="575.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (364 samples, 28.57%)</title><rect x="4.2386%" y="773" width="28.5714%" height="15" fill="rgb(237,204,4)" fg:x="54" fg:w="364"/><text x="4.4886%" y="783.50">&lt;tests::HoldingKeyInVessel as tests::WorldFixt..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (12 samples, 0.94%)</title><rect x="31.8681%" y="757" width="0.9419%" height="15" fill="rgb(237,15,47)" fg:x="406" fg:w="12"/><text x="32.1181%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="32.5746%" y="741" width="0.2355%" height="15" fill="rgb(244,110,25)" fg:x="415" fg:w="3"/><text x="32.8246%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="32.5746%" y="725" width="0.2355%" height="15" fill="rgb(241,12,16)" fg:x="415" fg:w="3"/><text x="32.8246%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="32.5746%" y="709" width="0.2355%" height="15" fill="rgb(235,25,9)" fg:x="415" fg:w="3"/><text x="32.8246%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="32.5746%" y="693" width="0.2355%" height="15" fill="rgb(245,159,19)" fg:x="415" fg:w="3"/><text x="32.8246%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="32.5746%" y="677" width="0.2355%" height="15" fill="rgb(236,63,32)" fg:x="415" fg:w="3"/><text x="32.8246%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.5746%" y="661" width="0.2355%" height="15" fill="rgb(235,32,52)" fg:x="415" fg:w="3"/><text x="32.8246%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (3 samples, 0.24%)</title><rect x="32.5746%" y="645" width="0.2355%" height="15" fill="rgb(209,176,21)" fg:x="415" fg:w="3"/><text x="32.8246%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.5746%" y="629" width="0.2355%" height="15" fill="rgb(205,90,42)" fg:x="415" fg:w="3"/><text x="32.8246%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="32.5746%" y="613" width="0.2355%" height="15" fill="rgb(213,132,16)" fg:x="415" fg:w="3"/><text x="32.8246%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (3 samples, 0.24%)</title><rect x="32.5746%" y="597" width="0.2355%" height="15" fill="rgb(232,11,22)" fg:x="415" fg:w="3"/><text x="32.8246%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="32.5746%" y="581" width="0.2355%" height="15" fill="rgb(248,167,41)" fg:x="415" fg:w="3"/><text x="32.8246%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="32.7316%" y="565" width="0.0785%" height="15" fill="rgb(209,127,6)" fg:x="417" fg:w="1"/><text x="32.9816%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="32.7316%" y="549" width="0.0785%" height="15" fill="rgb(246,210,34)" fg:x="417" fg:w="1"/><text x="32.9816%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="32.7316%" y="533" width="0.0785%" height="15" fill="rgb(238,165,13)" fg:x="417" fg:w="1"/><text x="32.9816%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="32.7316%" y="517" width="0.0785%" height="15" fill="rgb(233,98,15)" fg:x="417" fg:w="1"/><text x="32.9816%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8885%" y="741" width="0.0785%" height="15" fill="rgb(215,215,51)" fg:x="419" fg:w="1"/><text x="33.1385%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8885%" y="725" width="0.0785%" height="15" fill="rgb(217,161,25)" fg:x="419" fg:w="1"/><text x="33.1385%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.8885%" y="709" width="0.0785%" height="15" fill="rgb(217,167,48)" fg:x="419" fg:w="1"/><text x="33.1385%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.8885%" y="693" width="0.0785%" height="15" fill="rgb(205,163,34)" fg:x="419" fg:w="1"/><text x="33.1385%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.8885%" y="677" width="0.0785%" height="15" fill="rgb(241,197,31)" fg:x="419" fg:w="1"/><text x="33.1385%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.8885%" y="661" width="0.0785%" height="15" fill="rgb(225,123,11)" fg:x="419" fg:w="1"/><text x="33.1385%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.8885%" y="645" width="0.0785%" height="15" fill="rgb(217,4,20)" fg:x="419" fg:w="1"/><text x="33.1385%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.8885%" y="629" width="0.0785%" height="15" fill="rgb(215,55,9)" fg:x="419" fg:w="1"/><text x="33.1385%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.8885%" y="613" width="0.0785%" height="15" fill="rgb(218,165,5)" fg:x="419" fg:w="1"/><text x="33.1385%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.8885%" y="597" width="0.0785%" height="15" fill="rgb(222,175,15)" fg:x="419" fg:w="1"/><text x="33.1385%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.8885%" y="581" width="0.0785%" height="15" fill="rgb(223,85,34)" fg:x="419" fg:w="1"/><text x="33.1385%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.8885%" y="565" width="0.0785%" height="15" fill="rgb(234,228,29)" fg:x="419" fg:w="1"/><text x="33.1385%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.9670%" y="725" width="0.0785%" height="15" fill="rgb(239,7,28)" fg:x="420" fg:w="1"/><text x="33.2170%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (4 samples, 0.31%)</title><rect x="32.8100%" y="757" width="0.3140%" height="15" fill="rgb(252,222,53)" fg:x="418" fg:w="4"/><text x="33.0600%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="32.9670%" y="741" width="0.1570%" height="15" fill="rgb(232,146,44)" fg:x="420" fg:w="2"/><text x="33.2170%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="33.0455%" y="725" width="0.0785%" height="15" fill="rgb(243,223,53)" fg:x="421" fg:w="1"/><text x="33.2955%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="33.1240%" y="757" width="0.0785%" height="15" fill="rgb(219,128,25)" fg:x="422" fg:w="1"/><text x="33.3740%" y="767.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="33.1240%" y="741" width="0.0785%" height="15" fill="rgb(223,56,32)" fg:x="422" fg:w="1"/><text x="33.3740%" y="751.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="33.1240%" y="725" width="0.0785%" height="15" fill="rgb(237,41,3)" fg:x="422" fg:w="1"/><text x="33.3740%" y="735.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="33.1240%" y="709" width="0.0785%" height="15" fill="rgb(235,138,9)" fg:x="422" fg:w="1"/><text x="33.3740%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="33.1240%" y="693" width="0.0785%" height="15" fill="rgb(214,131,10)" fg:x="422" fg:w="1"/><text x="33.3740%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="33.1240%" y="677" width="0.0785%" height="15" fill="rgb(229,89,7)" fg:x="422" fg:w="1"/><text x="33.3740%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.1240%" y="661" width="0.0785%" height="15" fill="rgb(240,24,42)" fg:x="422" fg:w="1"/><text x="33.3740%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="33.5950%" y="709" width="0.0785%" height="15" fill="rgb(243,188,54)" fg:x="428" fg:w="1"/><text x="33.8450%" y="719.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="33.5950%" y="693" width="0.0785%" height="15" fill="rgb(246,92,22)" fg:x="428" fg:w="1"/><text x="33.8450%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6735%" y="693" width="0.0785%" height="15" fill="rgb(211,176,51)" fg:x="429" fg:w="1"/><text x="33.9235%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6735%" y="677" width="0.0785%" height="15" fill="rgb(246,207,34)" fg:x="429" fg:w="1"/><text x="33.9235%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6735%" y="661" width="0.0785%" height="15" fill="rgb(239,95,2)" fg:x="429" fg:w="1"/><text x="33.9235%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6735%" y="645" width="0.0785%" height="15" fill="rgb(211,124,25)" fg:x="429" fg:w="1"/><text x="33.9235%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6735%" y="629" width="0.0785%" height="15" fill="rgb(231,221,19)" fg:x="429" fg:w="1"/><text x="33.9235%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6735%" y="613" width="0.0785%" height="15" fill="rgb(239,183,19)" fg:x="429" fg:w="1"/><text x="33.9235%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6735%" y="597" width="0.0785%" height="15" fill="rgb(221,130,29)" fg:x="429" fg:w="1"/><text x="33.9235%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6735%" y="581" width="0.0785%" height="15" fill="rgb(206,130,36)" fg:x="429" fg:w="1"/><text x="33.9235%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6735%" y="565" width="0.0785%" height="15" fill="rgb(215,70,19)" fg:x="429" fg:w="1"/><text x="33.9235%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6735%" y="549" width="0.0785%" height="15" fill="rgb(244,16,43)" fg:x="429" fg:w="1"/><text x="33.9235%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6735%" y="533" width="0.0785%" height="15" fill="rgb(222,115,32)" fg:x="429" fg:w="1"/><text x="33.9235%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7520%" y="613" width="0.0785%" height="15" fill="rgb(247,48,25)" fg:x="430" fg:w="1"/><text x="34.0020%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.9089%" y="501" width="0.0785%" height="15" fill="rgb(226,180,51)" fg:x="432" fg:w="1"/><text x="34.1589%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.9089%" y="485" width="0.0785%" height="15" fill="rgb(217,142,42)" fg:x="432" fg:w="1"/><text x="34.1589%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="33.9089%" y="469" width="0.0785%" height="15" fill="rgb(220,178,3)" fg:x="432" fg:w="1"/><text x="34.1589%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="33.9089%" y="453" width="0.0785%" height="15" fill="rgb(217,221,4)" fg:x="432" fg:w="1"/><text x="34.1589%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.9089%" y="437" width="0.0785%" height="15" fill="rgb(237,63,43)" fg:x="432" fg:w="1"/><text x="34.1589%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="33.9089%" y="421" width="0.0785%" height="15" fill="rgb(220,57,8)" fg:x="432" fg:w="1"/><text x="34.1589%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.9089%" y="405" width="0.0785%" height="15" fill="rgb(254,186,27)" fg:x="432" fg:w="1"/><text x="34.1589%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.9089%" y="389" width="0.0785%" height="15" fill="rgb(251,57,28)" fg:x="432" fg:w="1"/><text x="34.1589%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.9089%" y="373" width="0.0785%" height="15" fill="rgb(215,228,0)" fg:x="432" fg:w="1"/><text x="34.1589%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="33.9089%" y="357" width="0.0785%" height="15" fill="rgb(237,218,39)" fg:x="432" fg:w="1"/><text x="34.1589%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.9089%" y="341" width="0.0785%" height="15" fill="rgb(207,2,54)" fg:x="432" fg:w="1"/><text x="34.1589%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="33.9089%" y="325" width="0.0785%" height="15" fill="rgb(232,76,50)" fg:x="432" fg:w="1"/><text x="34.1589%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="33.9089%" y="309" width="0.0785%" height="15" fill="rgb(211,85,31)" fg:x="432" fg:w="1"/><text x="34.1589%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="33.9089%" y="293" width="0.0785%" height="15" fill="rgb(223,210,27)" fg:x="432" fg:w="1"/><text x="34.1589%" y="303.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="33.9089%" y="277" width="0.0785%" height="15" fill="rgb(254,36,8)" fg:x="432" fg:w="1"/><text x="34.1589%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.9874%" y="469" width="0.0785%" height="15" fill="rgb(213,4,25)" fg:x="433" fg:w="1"/><text x="34.2374%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="33.9874%" y="453" width="0.0785%" height="15" fill="rgb(224,2,39)" fg:x="433" fg:w="1"/><text x="34.2374%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="33.9874%" y="437" width="0.0785%" height="15" fill="rgb(208,8,39)" fg:x="433" fg:w="1"/><text x="34.2374%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="33.9874%" y="421" width="0.0785%" height="15" fill="rgb(216,226,3)" fg:x="433" fg:w="1"/><text x="34.2374%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="33.9874%" y="405" width="0.0785%" height="15" fill="rgb(249,139,31)" fg:x="433" fg:w="1"/><text x="34.2374%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="33.9874%" y="389" width="0.0785%" height="15" fill="rgb(242,170,35)" fg:x="433" fg:w="1"/><text x="34.2374%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.9874%" y="373" width="0.0785%" height="15" fill="rgb(238,14,9)" fg:x="433" fg:w="1"/><text x="34.2374%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="33.9874%" y="357" width="0.0785%" height="15" fill="rgb(251,81,46)" fg:x="433" fg:w="1"/><text x="34.2374%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="33.9874%" y="341" width="0.0785%" height="15" fill="rgb(230,23,4)" fg:x="433" fg:w="1"/><text x="34.2374%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="33.9874%" y="325" width="0.0785%" height="15" fill="rgb(211,85,25)" fg:x="433" fg:w="1"/><text x="34.2374%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="33.9874%" y="309" width="0.0785%" height="15" fill="rgb(252,23,31)" fg:x="433" fg:w="1"/><text x="34.2374%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="33.9874%" y="293" width="0.0785%" height="15" fill="rgb(234,163,38)" fg:x="433" fg:w="1"/><text x="34.2374%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="33.9874%" y="277" width="0.0785%" height="15" fill="rgb(210,190,50)" fg:x="433" fg:w="1"/><text x="34.2374%" y="287.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="33.9874%" y="261" width="0.0785%" height="15" fill="rgb(228,158,3)" fg:x="433" fg:w="1"/><text x="34.2374%" y="271.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="33.8305%" y="565" width="0.3140%" height="15" fill="rgb(216,130,0)" fg:x="431" fg:w="4"/><text x="34.0805%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.31%)</title><rect x="33.8305%" y="549" width="0.3140%" height="15" fill="rgb(224,184,10)" fg:x="431" fg:w="4"/><text x="34.0805%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="33.9089%" y="533" width="0.2355%" height="15" fill="rgb(214,202,18)" fg:x="432" fg:w="3"/><text x="34.1589%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="33.9089%" y="517" width="0.2355%" height="15" fill="rgb(213,229,54)" fg:x="432" fg:w="3"/><text x="34.1589%" y="527.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.16%)</title><rect x="33.9874%" y="501" width="0.1570%" height="15" fill="rgb(246,120,0)" fg:x="433" fg:w="2"/><text x="34.2374%" y="511.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (2 samples, 0.16%)</title><rect x="33.9874%" y="485" width="0.1570%" height="15" fill="rgb(237,6,15)" fg:x="433" fg:w="2"/><text x="34.2374%" y="495.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.08%)</title><rect x="34.0659%" y="469" width="0.0785%" height="15" fill="rgb(252,156,15)" fg:x="434" fg:w="1"/><text x="34.3159%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (10 samples, 0.78%)</title><rect x="33.4380%" y="725" width="0.7849%" height="15" fill="rgb(249,78,18)" fg:x="426" fg:w="10"/><text x="33.6880%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (7 samples, 0.55%)</title><rect x="33.6735%" y="709" width="0.5495%" height="15" fill="rgb(230,223,44)" fg:x="429" fg:w="7"/><text x="33.9235%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (6 samples, 0.47%)</title><rect x="33.7520%" y="693" width="0.4710%" height="15" fill="rgb(230,222,32)" fg:x="430" fg:w="6"/><text x="34.0020%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.47%)</title><rect x="33.7520%" y="677" width="0.4710%" height="15" fill="rgb(247,54,6)" fg:x="430" fg:w="6"/><text x="34.0020%" y="687.50"></text></g><g><title>core::fmt::write (6 samples, 0.47%)</title><rect x="33.7520%" y="661" width="0.4710%" height="15" fill="rgb(247,115,45)" fg:x="430" fg:w="6"/><text x="34.0020%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (6 samples, 0.47%)</title><rect x="33.7520%" y="645" width="0.4710%" height="15" fill="rgb(213,203,37)" fg:x="430" fg:w="6"/><text x="34.0020%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (6 samples, 0.47%)</title><rect x="33.7520%" y="629" width="0.4710%" height="15" fill="rgb(248,188,18)" fg:x="430" fg:w="6"/><text x="34.0020%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.39%)</title><rect x="33.8305%" y="613" width="0.3925%" height="15" fill="rgb(206,80,8)" fg:x="431" fg:w="5"/><text x="34.0805%" y="623.50"></text></g><g><title>core::fmt::write (5 samples, 0.39%)</title><rect x="33.8305%" y="597" width="0.3925%" height="15" fill="rgb(245,217,31)" fg:x="431" fg:w="5"/><text x="34.0805%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.39%)</title><rect x="33.8305%" y="581" width="0.3925%" height="15" fill="rgb(220,193,15)" fg:x="431" fg:w="5"/><text x="34.0805%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.1444%" y="565" width="0.0785%" height="15" fill="rgb(226,7,19)" fg:x="435" fg:w="1"/><text x="34.3944%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.1444%" y="549" width="0.0785%" height="15" fill="rgb(222,145,31)" fg:x="435" fg:w="1"/><text x="34.3944%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="34.1444%" y="533" width="0.0785%" height="15" fill="rgb(241,193,36)" fg:x="435" fg:w="1"/><text x="34.3944%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="34.1444%" y="517" width="0.0785%" height="15" fill="rgb(225,123,33)" fg:x="435" fg:w="1"/><text x="34.3944%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="34.1444%" y="501" width="0.0785%" height="15" fill="rgb(246,136,38)" fg:x="435" fg:w="1"/><text x="34.3944%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="34.1444%" y="485" width="0.0785%" height="15" fill="rgb(243,56,24)" fg:x="435" fg:w="1"/><text x="34.3944%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.1444%" y="469" width="0.0785%" height="15" fill="rgb(215,147,2)" fg:x="435" fg:w="1"/><text x="34.3944%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="34.1444%" y="453" width="0.0785%" height="15" fill="rgb(209,155,27)" fg:x="435" fg:w="1"/><text x="34.3944%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.1444%" y="437" width="0.0785%" height="15" fill="rgb(222,177,11)" fg:x="435" fg:w="1"/><text x="34.3944%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="34.1444%" y="421" width="0.0785%" height="15" fill="rgb(212,227,15)" fg:x="435" fg:w="1"/><text x="34.3944%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.1444%" y="405" width="0.0785%" height="15" fill="rgb(214,138,20)" fg:x="435" fg:w="1"/><text x="34.3944%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="34.1444%" y="389" width="0.0785%" height="15" fill="rgb(221,170,31)" fg:x="435" fg:w="1"/><text x="34.3944%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="34.1444%" y="373" width="0.0785%" height="15" fill="rgb(253,207,5)" fg:x="435" fg:w="1"/><text x="34.3944%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="34.1444%" y="357" width="0.0785%" height="15" fill="rgb(212,64,37)" fg:x="435" fg:w="1"/><text x="34.3944%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.1444%" y="341" width="0.0785%" height="15" fill="rgb(208,113,51)" fg:x="435" fg:w="1"/><text x="34.3944%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3014%" y="677" width="0.0785%" height="15" fill="rgb(237,15,5)" fg:x="437" fg:w="1"/><text x="34.5514%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3014%" y="661" width="0.0785%" height="15" fill="rgb(238,33,18)" fg:x="437" fg:w="1"/><text x="34.5514%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.3014%" y="645" width="0.0785%" height="15" fill="rgb(253,206,50)" fg:x="437" fg:w="1"/><text x="34.5514%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.3014%" y="629" width="0.0785%" height="15" fill="rgb(242,158,43)" fg:x="437" fg:w="1"/><text x="34.5514%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="34.3799%" y="677" width="0.1570%" height="15" fill="rgb(213,125,27)" fg:x="438" fg:w="2"/><text x="34.6299%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.3799%" y="661" width="0.1570%" height="15" fill="rgb(233,161,31)" fg:x="438" fg:w="2"/><text x="34.6299%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="34.4584%" y="645" width="0.0785%" height="15" fill="rgb(218,135,6)" fg:x="439" fg:w="1"/><text x="34.7084%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="34.4584%" y="629" width="0.0785%" height="15" fill="rgb(222,73,53)" fg:x="439" fg:w="1"/><text x="34.7084%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="34.4584%" y="613" width="0.0785%" height="15" fill="rgb(229,66,53)" fg:x="439" fg:w="1"/><text x="34.7084%" y="623.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="34.4584%" y="597" width="0.0785%" height="15" fill="rgb(208,128,19)" fg:x="439" fg:w="1"/><text x="34.7084%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4584%" y="581" width="0.0785%" height="15" fill="rgb(235,70,27)" fg:x="439" fg:w="1"/><text x="34.7084%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4584%" y="565" width="0.0785%" height="15" fill="rgb(241,130,30)" fg:x="439" fg:w="1"/><text x="34.7084%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4584%" y="549" width="0.0785%" height="15" fill="rgb(222,57,48)" fg:x="439" fg:w="1"/><text x="34.7084%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.4584%" y="533" width="0.0785%" height="15" fill="rgb(225,204,29)" fg:x="439" fg:w="1"/><text x="34.7084%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.4584%" y="517" width="0.0785%" height="15" fill="rgb(240,196,35)" fg:x="439" fg:w="1"/><text x="34.7084%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.4584%" y="501" width="0.0785%" height="15" fill="rgb(215,150,16)" fg:x="439" fg:w="1"/><text x="34.7084%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4584%" y="485" width="0.0785%" height="15" fill="rgb(209,170,13)" fg:x="439" fg:w="1"/><text x="34.7084%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="34.4584%" y="469" width="0.0785%" height="15" fill="rgb(235,75,31)" fg:x="439" fg:w="1"/><text x="34.7084%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="34.4584%" y="453" width="0.0785%" height="15" fill="rgb(252,1,47)" fg:x="439" fg:w="1"/><text x="34.7084%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="34.4584%" y="437" width="0.0785%" height="15" fill="rgb(241,2,36)" fg:x="439" fg:w="1"/><text x="34.7084%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="34.4584%" y="421" width="0.0785%" height="15" fill="rgb(236,191,4)" fg:x="439" fg:w="1"/><text x="34.7084%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="34.4584%" y="405" width="0.0785%" height="15" fill="rgb(212,65,35)" fg:x="439" fg:w="1"/><text x="34.7084%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="34.4584%" y="389" width="0.0785%" height="15" fill="rgb(209,49,33)" fg:x="439" fg:w="1"/><text x="34.7084%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="34.4584%" y="373" width="0.0785%" height="15" fill="rgb(208,36,46)" fg:x="439" fg:w="1"/><text x="34.7084%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.6154%" y="613" width="0.0785%" height="15" fill="rgb(210,125,2)" fg:x="441" fg:w="1"/><text x="34.8654%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.6154%" y="645" width="0.1570%" height="15" fill="rgb(225,62,6)" fg:x="441" fg:w="2"/><text x="34.8654%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.6154%" y="629" width="0.1570%" height="15" fill="rgb(210,54,27)" fg:x="441" fg:w="2"/><text x="34.8654%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="34.6939%" y="613" width="0.0785%" height="15" fill="rgb(249,189,52)" fg:x="442" fg:w="1"/><text x="34.9439%" y="623.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="34.6939%" y="597" width="0.0785%" height="15" fill="rgb(225,134,40)" fg:x="442" fg:w="1"/><text x="34.9439%" y="607.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.6939%" y="581" width="0.0785%" height="15" fill="rgb(206,13,37)" fg:x="442" fg:w="1"/><text x="34.9439%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (19 samples, 1.49%)</title><rect x="33.3595%" y="741" width="1.4914%" height="15" fill="rgb(232,114,28)" fg:x="425" fg:w="19"/><text x="33.6095%" y="751.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.63%)</title><rect x="34.2229%" y="725" width="0.6279%" height="15" fill="rgb(253,215,8)" fg:x="436" fg:w="8"/><text x="34.4729%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.63%)</title><rect x="34.2229%" y="709" width="0.6279%" height="15" fill="rgb(254,64,19)" fg:x="436" fg:w="8"/><text x="34.4729%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.63%)</title><rect x="34.2229%" y="693" width="0.6279%" height="15" fill="rgb(242,18,46)" fg:x="436" fg:w="8"/><text x="34.4729%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="34.5369%" y="677" width="0.3140%" height="15" fill="rgb(239,192,30)" fg:x="440" fg:w="4"/><text x="34.7869%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="34.5369%" y="661" width="0.3140%" height="15" fill="rgb(232,73,14)" fg:x="440" fg:w="4"/><text x="34.7869%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_u32 (1 samples, 0.08%)</title><rect x="34.7724%" y="645" width="0.0785%" height="15" fill="rgb(225,51,9)" fg:x="443" fg:w="1"/><text x="35.0224%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (2 samples, 0.16%)</title><rect x="34.8509%" y="741" width="0.1570%" height="15" fill="rgb(242,217,54)" fg:x="444" fg:w="2"/><text x="35.1009%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::model::CarryingEvent&gt; (1 samples, 0.08%)</title><rect x="34.9294%" y="725" width="0.0785%" height="15" fill="rgb(216,93,3)" fg:x="445" fg:w="1"/><text x="35.1794%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="34.9294%" y="709" width="0.0785%" height="15" fill="rgb(230,119,33)" fg:x="445" fg:w="1"/><text x="35.1794%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.9294%" y="693" width="0.0785%" height="15" fill="rgb(238,170,27)" fg:x="445" fg:w="1"/><text x="35.1794%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="35.0078%" y="725" width="0.0785%" height="15" fill="rgb(229,8,2)" fg:x="446" fg:w="1"/><text x="35.2578%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="35.1648%" y="709" width="0.0785%" height="15" fill="rgb(205,214,42)" fg:x="448" fg:w="1"/><text x="35.4148%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.1648%" y="693" width="0.0785%" height="15" fill="rgb(245,113,1)" fg:x="448" fg:w="1"/><text x="35.4148%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.1648%" y="677" width="0.0785%" height="15" fill="rgb(252,50,2)" fg:x="448" fg:w="1"/><text x="35.4148%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.2433%" y="693" width="0.0785%" height="15" fill="rgb(225,122,24)" fg:x="449" fg:w="1"/><text x="35.4933%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.2433%" y="677" width="0.0785%" height="15" fill="rgb(234,129,31)" fg:x="449" fg:w="1"/><text x="35.4933%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.2433%" y="661" width="0.0785%" height="15" fill="rgb(219,177,4)" fg:x="449" fg:w="1"/><text x="35.4933%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.2433%" y="645" width="0.0785%" height="15" fill="rgb(225,142,27)" fg:x="449" fg:w="1"/><text x="35.4933%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.2433%" y="629" width="0.0785%" height="15" fill="rgb(205,107,51)" fg:x="449" fg:w="1"/><text x="35.4933%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.2433%" y="613" width="0.0785%" height="15" fill="rgb(236,223,15)" fg:x="449" fg:w="1"/><text x="35.4933%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.2433%" y="597" width="0.0785%" height="15" fill="rgb(235,133,11)" fg:x="449" fg:w="1"/><text x="35.4933%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.2433%" y="581" width="0.0785%" height="15" fill="rgb(247,172,13)" fg:x="449" fg:w="1"/><text x="35.4933%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.2433%" y="565" width="0.0785%" height="15" fill="rgb(233,191,41)" fg:x="449" fg:w="1"/><text x="35.4933%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.2433%" y="549" width="0.0785%" height="15" fill="rgb(250,65,16)" fg:x="449" fg:w="1"/><text x="35.4933%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.2433%" y="533" width="0.0785%" height="15" fill="rgb(206,10,27)" fg:x="449" fg:w="1"/><text x="35.4933%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="35.2433%" y="517" width="0.0785%" height="15" fill="rgb(212,96,22)" fg:x="449" fg:w="1"/><text x="35.4933%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="35.4003%" y="613" width="0.2355%" height="15" fill="rgb(206,50,0)" fg:x="451" fg:w="3"/><text x="35.6503%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="35.5573%" y="597" width="0.0785%" height="15" fill="rgb(249,105,52)" fg:x="453" fg:w="1"/><text x="35.8073%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="35.5573%" y="581" width="0.0785%" height="15" fill="rgb(216,93,51)" fg:x="453" fg:w="1"/><text x="35.8073%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="35.5573%" y="565" width="0.0785%" height="15" fill="rgb(217,172,13)" fg:x="453" fg:w="1"/><text x="35.8073%" y="575.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.39%)</title><rect x="35.3218%" y="677" width="0.3925%" height="15" fill="rgb(235,199,38)" fg:x="450" fg:w="5"/><text x="35.5718%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.39%)</title><rect x="35.3218%" y="661" width="0.3925%" height="15" fill="rgb(221,97,33)" fg:x="450" fg:w="5"/><text x="35.5718%" y="671.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.39%)</title><rect x="35.3218%" y="645" width="0.3925%" height="15" fill="rgb(205,156,50)" fg:x="450" fg:w="5"/><text x="35.5718%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.31%)</title><rect x="35.4003%" y="629" width="0.3140%" height="15" fill="rgb(215,142,19)" fg:x="451" fg:w="4"/><text x="35.6503%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.6358%" y="613" width="0.0785%" height="15" fill="rgb(232,170,7)" fg:x="454" fg:w="1"/><text x="35.8858%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.47%)</title><rect x="35.8713%" y="661" width="0.4710%" height="15" fill="rgb(223,50,17)" fg:x="457" fg:w="6"/><text x="36.1213%" y="671.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="36.1068%" y="645" width="0.2355%" height="15" fill="rgb(230,103,46)" fg:x="460" fg:w="3"/><text x="36.3568%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.1852%" y="629" width="0.1570%" height="15" fill="rgb(254,30,34)" fg:x="461" fg:w="2"/><text x="36.4352%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="36.1852%" y="613" width="0.1570%" height="15" fill="rgb(235,198,1)" fg:x="461" fg:w="2"/><text x="36.4352%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="36.1852%" y="597" width="0.1570%" height="15" fill="rgb(217,105,47)" fg:x="461" fg:w="2"/><text x="36.4352%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.2637%" y="581" width="0.0785%" height="15" fill="rgb(231,18,12)" fg:x="462" fg:w="1"/><text x="36.5137%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.2637%" y="565" width="0.0785%" height="15" fill="rgb(218,196,1)" fg:x="462" fg:w="1"/><text x="36.5137%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="36.4207%" y="613" width="0.1570%" height="15" fill="rgb(210,32,3)" fg:x="464" fg:w="2"/><text x="36.6707%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="36.4207%" y="645" width="0.2355%" height="15" fill="rgb(227,178,30)" fg:x="464" fg:w="3"/><text x="36.6707%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="36.4207%" y="629" width="0.2355%" height="15" fill="rgb(231,140,27)" fg:x="464" fg:w="3"/><text x="36.6707%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.5777%" y="613" width="0.0785%" height="15" fill="rgb(206,66,35)" fg:x="466" fg:w="1"/><text x="36.8277%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.5777%" y="597" width="0.0785%" height="15" fill="rgb(212,34,2)" fg:x="466" fg:w="1"/><text x="36.8277%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.5777%" y="581" width="0.0785%" height="15" fill="rgb(207,201,33)" fg:x="466" fg:w="1"/><text x="36.8277%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.6562%" y="645" width="0.1570%" height="15" fill="rgb(221,135,32)" fg:x="467" fg:w="2"/><text x="36.9062%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.6562%" y="629" width="0.1570%" height="15" fill="rgb(206,77,31)" fg:x="467" fg:w="2"/><text x="36.9062%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.7347%" y="613" width="0.0785%" height="15" fill="rgb(252,198,50)" fg:x="468" fg:w="1"/><text x="36.9847%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.7347%" y="597" width="0.0785%" height="15" fill="rgb(206,79,27)" fg:x="468" fg:w="1"/><text x="36.9847%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.8132%" y="629" width="0.1570%" height="15" fill="rgb(228,108,9)" fg:x="469" fg:w="2"/><text x="37.0632%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="37.0487%" y="613" width="0.2355%" height="15" fill="rgb(213,9,39)" fg:x="472" fg:w="3"/><text x="37.2987%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.1272%" y="597" width="0.1570%" height="15" fill="rgb(252,51,13)" fg:x="473" fg:w="2"/><text x="37.3772%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.1272%" y="581" width="0.1570%" height="15" fill="rgb(218,202,39)" fg:x="473" fg:w="2"/><text x="37.3772%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="37.2841%" y="597" width="0.1570%" height="15" fill="rgb(214,122,21)" fg:x="475" fg:w="2"/><text x="37.5341%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.2841%" y="581" width="0.1570%" height="15" fill="rgb(217,205,48)" fg:x="475" fg:w="2"/><text x="37.5341%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.2841%" y="565" width="0.1570%" height="15" fill="rgb(230,216,13)" fg:x="475" fg:w="2"/><text x="37.5341%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="37.5196%" y="581" width="0.2355%" height="15" fill="rgb(249,118,4)" fg:x="478" fg:w="3"/><text x="37.7696%" y="591.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.5981%" y="565" width="0.1570%" height="15" fill="rgb(212,207,40)" fg:x="479" fg:w="2"/><text x="37.8481%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="37.4411%" y="597" width="0.4710%" height="15" fill="rgb(217,156,26)" fg:x="477" fg:w="6"/><text x="37.6911%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.7551%" y="581" width="0.1570%" height="15" fill="rgb(226,86,34)" fg:x="481" fg:w="2"/><text x="38.0051%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.7551%" y="565" width="0.1570%" height="15" fill="rgb(217,111,30)" fg:x="481" fg:w="2"/><text x="38.0051%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8336%" y="549" width="0.0785%" height="15" fill="rgb(228,64,18)" fg:x="482" fg:w="1"/><text x="38.0836%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.02%)</title><rect x="36.9702%" y="629" width="1.0204%" height="15" fill="rgb(254,217,48)" fg:x="471" fg:w="13"/><text x="37.2202%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.71%)</title><rect x="37.2841%" y="613" width="0.7064%" height="15" fill="rgb(226,156,48)" fg:x="475" fg:w="9"/><text x="37.5341%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.9121%" y="597" width="0.0785%" height="15" fill="rgb(236,168,20)" fg:x="483" fg:w="1"/><text x="38.1621%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.9121%" y="581" width="0.0785%" height="15" fill="rgb(239,210,33)" fg:x="483" fg:w="1"/><text x="38.1621%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (17 samples, 1.33%)</title><rect x="36.8132%" y="645" width="1.3344%" height="15" fill="rgb(242,85,17)" fg:x="469" fg:w="17"/><text x="37.0632%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.9906%" y="629" width="0.1570%" height="15" fill="rgb(221,196,15)" fg:x="484" fg:w="2"/><text x="38.2406%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.9906%" y="613" width="0.1570%" height="15" fill="rgb(249,76,21)" fg:x="484" fg:w="2"/><text x="38.2406%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.0691%" y="597" width="0.0785%" height="15" fill="rgb(243,67,29)" fg:x="485" fg:w="1"/><text x="38.3191%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (25 samples, 1.96%)</title><rect x="36.3422%" y="661" width="1.9623%" height="15" fill="rgb(240,159,2)" fg:x="463" fg:w="25"/><text x="36.5922%" y="671.50">s..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.1476%" y="645" width="0.1570%" height="15" fill="rgb(244,64,3)" fg:x="486" fg:w="2"/><text x="38.3976%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.1476%" y="629" width="0.1570%" height="15" fill="rgb(220,86,40)" fg:x="486" fg:w="2"/><text x="38.3976%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.2261%" y="613" width="0.0785%" height="15" fill="rgb(222,194,51)" fg:x="487" fg:w="1"/><text x="38.4761%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.75%)</title><rect x="35.7143%" y="677" width="2.7473%" height="15" fill="rgb(207,154,19)" fg:x="455" fg:w="35"/><text x="35.9643%" y="687.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.3046%" y="661" width="0.1570%" height="15" fill="rgb(206,178,36)" fg:x="488" fg:w="2"/><text x="38.5546%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="38.3046%" y="645" width="0.1570%" height="15" fill="rgb(218,8,24)" fg:x="488" fg:w="2"/><text x="38.5546%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="38.3046%" y="629" width="0.1570%" height="15" fill="rgb(226,83,41)" fg:x="488" fg:w="2"/><text x="38.5546%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="38.3830%" y="613" width="0.0785%" height="15" fill="rgb(224,23,22)" fg:x="489" fg:w="1"/><text x="38.6330%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="38.3830%" y="597" width="0.0785%" height="15" fill="rgb(218,198,45)" fg:x="489" fg:w="1"/><text x="38.6330%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="38.3830%" y="581" width="0.0785%" height="15" fill="rgb(249,147,41)" fg:x="489" fg:w="1"/><text x="38.6330%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (41 samples, 3.22%)</title><rect x="35.3218%" y="693" width="3.2182%" height="15" fill="rgb(244,224,13)" fg:x="450" fg:w="41"/><text x="35.5718%" y="703.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="38.4615%" y="677" width="0.0785%" height="15" fill="rgb(225,97,27)" fg:x="490" fg:w="1"/><text x="38.7115%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.4615%" y="661" width="0.0785%" height="15" fill="rgb(254,64,0)" fg:x="490" fg:w="1"/><text x="38.7115%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="38.4615%" y="645" width="0.0785%" height="15" fill="rgb(208,130,43)" fg:x="490" fg:w="1"/><text x="38.7115%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.6185%" y="661" width="0.1570%" height="15" fill="rgb(247,91,25)" fg:x="492" fg:w="2"/><text x="38.8685%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.7755%" y="661" width="0.0785%" height="15" fill="rgb(215,218,42)" fg:x="494" fg:w="1"/><text x="39.0255%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0110%" y="629" width="0.0785%" height="15" fill="rgb(233,9,24)" fg:x="497" fg:w="1"/><text x="39.2610%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0895%" y="613" width="0.0785%" height="15" fill="rgb(252,105,38)" fg:x="498" fg:w="1"/><text x="39.3395%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0895%" y="597" width="0.0785%" height="15" fill="rgb(225,40,49)" fg:x="498" fg:w="1"/><text x="39.3395%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.71%)</title><rect x="38.5400%" y="693" width="0.7064%" height="15" fill="rgb(232,196,19)" fg:x="491" fg:w="9"/><text x="38.7900%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.71%)</title><rect x="38.5400%" y="677" width="0.7064%" height="15" fill="rgb(207,35,15)" fg:x="491" fg:w="9"/><text x="38.7900%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="38.8540%" y="661" width="0.3925%" height="15" fill="rgb(238,68,36)" fg:x="495" fg:w="5"/><text x="39.1040%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="38.9325%" y="645" width="0.3140%" height="15" fill="rgb(205,158,20)" fg:x="496" fg:w="4"/><text x="39.1825%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.0895%" y="629" width="0.1570%" height="15" fill="rgb(232,32,22)" fg:x="498" fg:w="2"/><text x="39.3395%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1680%" y="613" width="0.0785%" height="15" fill="rgb(210,169,6)" fg:x="499" fg:w="1"/><text x="39.4180%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.1680%" y="597" width="0.0785%" height="15" fill="rgb(229,28,12)" fg:x="499" fg:w="1"/><text x="39.4180%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.1680%" y="581" width="0.0785%" height="15" fill="rgb(229,78,10)" fg:x="499" fg:w="1"/><text x="39.4180%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.1680%" y="565" width="0.0785%" height="15" fill="rgb(223,139,54)" fg:x="499" fg:w="1"/><text x="39.4180%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.3250%" y="661" width="0.0785%" height="15" fill="rgb(207,110,4)" fg:x="501" fg:w="1"/><text x="39.5750%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4819%" y="613" width="0.0785%" height="15" fill="rgb(248,30,41)" fg:x="503" fg:w="1"/><text x="39.7319%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.5604%" y="613" width="0.1570%" height="15" fill="rgb(235,54,25)" fg:x="504" fg:w="2"/><text x="39.8104%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.7959%" y="597" width="0.1570%" height="15" fill="rgb(213,107,41)" fg:x="507" fg:w="2"/><text x="40.0459%" y="607.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="40.1099%" y="581" width="0.2355%" height="15" fill="rgb(237,102,9)" fg:x="511" fg:w="3"/><text x="40.3599%" y="591.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="40.4239%" y="549" width="0.1570%" height="15" fill="rgb(252,137,49)" fg:x="515" fg:w="2"/><text x="40.6739%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.5808%" y="549" width="0.0785%" height="15" fill="rgb(233,202,33)" fg:x="517" fg:w="1"/><text x="40.8308%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5808%" y="533" width="0.0785%" height="15" fill="rgb(223,14,51)" fg:x="517" fg:w="1"/><text x="40.8308%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.6593%" y="533" width="0.0785%" height="15" fill="rgb(248,70,23)" fg:x="518" fg:w="1"/><text x="40.9093%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.6593%" y="517" width="0.0785%" height="15" fill="rgb(209,207,47)" fg:x="518" fg:w="1"/><text x="40.9093%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (18 samples, 1.41%)</title><rect x="39.4035%" y="661" width="1.4129%" height="15" fill="rgb(245,124,2)" fg:x="502" fg:w="18"/><text x="39.6535%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (18 samples, 1.41%)</title><rect x="39.4035%" y="645" width="1.4129%" height="15" fill="rgb(249,208,11)" fg:x="502" fg:w="18"/><text x="39.6535%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (17 samples, 1.33%)</title><rect x="39.4819%" y="629" width="1.3344%" height="15" fill="rgb(247,112,7)" fg:x="503" fg:w="17"/><text x="39.7319%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 1.10%)</title><rect x="39.7174%" y="613" width="1.0989%" height="15" fill="rgb(209,192,31)" fg:x="506" fg:w="14"/><text x="39.9674%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.86%)</title><rect x="39.9529%" y="597" width="0.8634%" height="15" fill="rgb(236,55,19)" fg:x="509" fg:w="11"/><text x="40.2029%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="40.3454%" y="581" width="0.4710%" height="15" fill="rgb(252,89,41)" fg:x="514" fg:w="6"/><text x="40.5954%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="40.3454%" y="565" width="0.4710%" height="15" fill="rgb(220,172,14)" fg:x="514" fg:w="6"/><text x="40.5954%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="40.6593%" y="549" width="0.1570%" height="15" fill="rgb(252,65,2)" fg:x="518" fg:w="2"/><text x="40.9093%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="40.7378%" y="533" width="0.0785%" height="15" fill="rgb(250,20,8)" fg:x="519" fg:w="1"/><text x="40.9878%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.7378%" y="517" width="0.0785%" height="15" fill="rgb(234,149,13)" fg:x="519" fg:w="1"/><text x="40.9878%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="41.0518%" y="613" width="0.0785%" height="15" fill="rgb(223,219,12)" fg:x="523" fg:w="1"/><text x="41.3018%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="41.2873%" y="597" width="0.0785%" height="15" fill="rgb(234,13,49)" fg:x="526" fg:w="1"/><text x="41.5373%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.2873%" y="581" width="0.0785%" height="15" fill="rgb(214,41,25)" fg:x="526" fg:w="1"/><text x="41.5373%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.2873%" y="565" width="0.0785%" height="15" fill="rgb(232,198,52)" fg:x="526" fg:w="1"/><text x="41.5373%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.31%)</title><rect x="41.1303%" y="613" width="0.3140%" height="15" fill="rgb(236,111,46)" fg:x="524" fg:w="4"/><text x="41.3803%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.3658%" y="597" width="0.0785%" height="15" fill="rgb(253,30,20)" fg:x="527" fg:w="1"/><text x="41.6158%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.63%)</title><rect x="40.8948%" y="645" width="0.6279%" height="15" fill="rgb(247,141,17)" fg:x="521" fg:w="8"/><text x="41.1448%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.47%)</title><rect x="41.0518%" y="629" width="0.4710%" height="15" fill="rgb(214,195,21)" fg:x="523" fg:w="6"/><text x="41.3018%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.4443%" y="613" width="0.0785%" height="15" fill="rgb(214,98,12)" fg:x="528" fg:w="1"/><text x="41.6943%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (2 samples, 0.16%)</title><rect x="41.5228%" y="645" width="0.1570%" height="15" fill="rgb(239,4,26)" fg:x="529" fg:w="2"/><text x="41.7728%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="41.6797%" y="645" width="0.2355%" height="15" fill="rgb(234,210,35)" fg:x="531" fg:w="3"/><text x="41.9297%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.8367%" y="629" width="0.0785%" height="15" fill="rgb(252,178,27)" fg:x="533" fg:w="1"/><text x="42.0867%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.8367%" y="613" width="0.0785%" height="15" fill="rgb(217,50,1)" fg:x="533" fg:w="1"/><text x="42.0867%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="41.9152%" y="645" width="0.0785%" height="15" fill="rgb(233,137,5)" fg:x="534" fg:w="1"/><text x="42.1652%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0722%" y="629" width="0.0785%" height="15" fill="rgb(217,227,25)" fg:x="536" fg:w="1"/><text x="42.3222%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0722%" y="613" width="0.0785%" height="15" fill="rgb(242,89,38)" fg:x="536" fg:w="1"/><text x="42.3222%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1507%" y="613" width="0.0785%" height="15" fill="rgb(212,190,30)" fg:x="537" fg:w="1"/><text x="42.4007%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.1507%" y="597" width="0.0785%" height="15" fill="rgb(222,120,8)" fg:x="537" fg:w="1"/><text x="42.4007%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="42.1507%" y="581" width="0.0785%" height="15" fill="rgb(227,181,9)" fg:x="537" fg:w="1"/><text x="42.4007%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.2292%" y="597" width="0.0785%" height="15" fill="rgb(222,125,29)" fg:x="538" fg:w="1"/><text x="42.4792%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.3077%" y="597" width="0.0785%" height="15" fill="rgb(215,153,31)" fg:x="539" fg:w="1"/><text x="42.5577%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="42.4647%" y="581" width="0.0785%" height="15" fill="rgb(228,77,30)" fg:x="541" fg:w="1"/><text x="42.7147%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.5432%" y="581" width="0.0785%" height="15" fill="rgb(226,110,9)" fg:x="542" fg:w="1"/><text x="42.7932%" y="591.50"></text></g><g><title>treediff::diff::diff (10 samples, 0.78%)</title><rect x="41.9937%" y="645" width="0.7849%" height="15" fill="rgb(219,111,7)" fg:x="535" fg:w="10"/><text x="42.2437%" y="655.50"></text></g><g><title>treediff::diff::diff (8 samples, 0.63%)</title><rect x="42.1507%" y="629" width="0.6279%" height="15" fill="rgb(229,167,25)" fg:x="537" fg:w="8"/><text x="42.4007%" y="639.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.55%)</title><rect x="42.2292%" y="613" width="0.5495%" height="15" fill="rgb(209,77,43)" fg:x="538" fg:w="7"/><text x="42.4792%" y="623.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.39%)</title><rect x="42.3862%" y="597" width="0.3925%" height="15" fill="rgb(233,70,39)" fg:x="540" fg:w="5"/><text x="42.6362%" y="607.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="42.6217%" y="581" width="0.1570%" height="15" fill="rgb(207,171,44)" fg:x="543" fg:w="2"/><text x="42.8717%" y="591.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="42.7002%" y="565" width="0.0785%" height="15" fill="rgb(244,91,6)" fg:x="544" fg:w="1"/><text x="42.9502%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7002%" y="549" width="0.0785%" height="15" fill="rgb(234,136,12)" fg:x="544" fg:w="1"/><text x="42.9502%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.7002%" y="533" width="0.0785%" height="15" fill="rgb(216,210,38)" fg:x="544" fg:w="1"/><text x="42.9502%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.7002%" y="517" width="0.0785%" height="15" fill="rgb(241,227,7)" fg:x="544" fg:w="1"/><text x="42.9502%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.7002%" y="501" width="0.0785%" height="15" fill="rgb(241,222,11)" fg:x="544" fg:w="1"/><text x="42.9502%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.7002%" y="485" width="0.0785%" height="15" fill="rgb(246,86,18)" fg:x="544" fg:w="1"/><text x="42.9502%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7002%" y="469" width="0.0785%" height="15" fill="rgb(224,151,49)" fg:x="544" fg:w="1"/><text x="42.9502%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.7002%" y="453" width="0.0785%" height="15" fill="rgb(235,4,41)" fg:x="544" fg:w="1"/><text x="42.9502%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.7002%" y="437" width="0.0785%" height="15" fill="rgb(218,30,52)" fg:x="544" fg:w="1"/><text x="42.9502%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.7002%" y="421" width="0.0785%" height="15" fill="rgb(205,124,51)" fg:x="544" fg:w="1"/><text x="42.9502%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.7002%" y="405" width="0.0785%" height="15" fill="rgb(237,126,51)" fg:x="544" fg:w="1"/><text x="42.9502%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.7002%" y="389" width="0.0785%" height="15" fill="rgb(225,32,46)" fg:x="544" fg:w="1"/><text x="42.9502%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7002%" y="373" width="0.0785%" height="15" fill="rgb(251,60,49)" fg:x="544" fg:w="1"/><text x="42.9502%" y="383.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (46 samples, 3.61%)</title><rect x="39.2465%" y="677" width="3.6107%" height="15" fill="rgb(234,18,23)" fg:x="500" fg:w="46"/><text x="39.4965%" y="687.50">&lt;ker..</text></g><g><title>treediff::diff::diff (26 samples, 2.04%)</title><rect x="40.8163%" y="661" width="2.0408%" height="15" fill="rgb(234,25,23)" fg:x="520" fg:w="26"/><text x="41.0663%" y="671.50">t..</text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="42.7786%" y="645" width="0.0785%" height="15" fill="rgb(210,43,52)" fg:x="545" fg:w="1"/><text x="43.0286%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7786%" y="629" width="0.0785%" height="15" fill="rgb(237,198,21)" fg:x="545" fg:w="1"/><text x="43.0286%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.0926%" y="645" width="0.1570%" height="15" fill="rgb(211,20,34)" fg:x="549" fg:w="2"/><text x="43.3426%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.47%)</title><rect x="43.2496%" y="645" width="0.4710%" height="15" fill="rgb(221,155,50)" fg:x="551" fg:w="6"/><text x="43.4996%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.6421%" y="629" width="0.0785%" height="15" fill="rgb(213,214,53)" fg:x="556" fg:w="1"/><text x="43.8921%" y="639.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="43.6421%" y="613" width="0.0785%" height="15" fill="rgb(215,229,48)" fg:x="556" fg:w="1"/><text x="43.8921%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="43.7206%" y="645" width="0.1570%" height="15" fill="rgb(243,88,5)" fg:x="557" fg:w="2"/><text x="43.9706%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.7991%" y="629" width="0.0785%" height="15" fill="rgb(216,199,8)" fg:x="558" fg:w="1"/><text x="44.0491%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="43.7991%" y="613" width="0.0785%" height="15" fill="rgb(241,22,4)" fg:x="558" fg:w="1"/><text x="44.0491%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="43.8776%" y="629" width="0.0785%" height="15" fill="rgb(209,190,22)" fg:x="559" fg:w="1"/><text x="44.1276%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.9560%" y="613" width="0.0785%" height="15" fill="rgb(251,138,45)" fg:x="560" fg:w="1"/><text x="44.2060%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.31%)</title><rect x="43.8776%" y="645" width="0.3140%" height="15" fill="rgb(219,111,22)" fg:x="559" fg:w="4"/><text x="44.1276%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="43.9560%" y="629" width="0.2355%" height="15" fill="rgb(253,29,49)" fg:x="560" fg:w="3"/><text x="44.2060%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.0345%" y="613" width="0.1570%" height="15" fill="rgb(238,129,49)" fg:x="561" fg:w="2"/><text x="44.2845%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="44.1130%" y="597" width="0.0785%" height="15" fill="rgb(240,26,41)" fg:x="562" fg:w="1"/><text x="44.3630%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.5055%" y="613" width="0.0785%" height="15" fill="rgb(221,47,33)" fg:x="567" fg:w="1"/><text x="44.7555%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.6625%" y="597" width="0.1570%" height="15" fill="rgb(216,200,17)" fg:x="569" fg:w="2"/><text x="44.9125%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.6625%" y="581" width="0.1570%" height="15" fill="rgb(230,151,26)" fg:x="569" fg:w="2"/><text x="44.9125%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.6625%" y="565" width="0.1570%" height="15" fill="rgb(242,182,16)" fg:x="569" fg:w="2"/><text x="44.9125%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.2119%" y="533" width="0.0785%" height="15" fill="rgb(236,35,53)" fg:x="576" fg:w="1"/><text x="45.4619%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.2119%" y="565" width="0.1570%" height="15" fill="rgb(214,180,28)" fg:x="576" fg:w="2"/><text x="45.4619%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.2119%" y="549" width="0.1570%" height="15" fill="rgb(208,173,36)" fg:x="576" fg:w="2"/><text x="45.4619%" y="559.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.2904%" y="533" width="0.0785%" height="15" fill="rgb(218,39,15)" fg:x="577" fg:w="1"/><text x="45.5404%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.6044%" y="533" width="0.1570%" height="15" fill="rgb(213,145,15)" fg:x="581" fg:w="2"/><text x="45.8544%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="45.6044%" y="517" width="0.1570%" height="15" fill="rgb(242,110,37)" fg:x="581" fg:w="2"/><text x="45.8544%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.6829%" y="501" width="0.0785%" height="15" fill="rgb(247,146,22)" fg:x="582" fg:w="1"/><text x="45.9329%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="45.7614%" y="517" width="0.0785%" height="15" fill="rgb(215,191,7)" fg:x="583" fg:w="1"/><text x="46.0114%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="45.8399%" y="517" width="0.0785%" height="15" fill="rgb(240,158,1)" fg:x="584" fg:w="1"/><text x="46.0899%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="45.9184%" y="517" width="0.3140%" height="15" fill="rgb(241,78,32)" fg:x="585" fg:w="4"/><text x="46.1684%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="45.9184%" y="501" width="0.3140%" height="15" fill="rgb(248,83,10)" fg:x="585" fg:w="4"/><text x="46.1684%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="45.9969%" y="485" width="0.2355%" height="15" fill="rgb(241,52,0)" fg:x="586" fg:w="3"/><text x="46.2469%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="46.1538%" y="469" width="0.0785%" height="15" fill="rgb(238,37,13)" fg:x="588" fg:w="1"/><text x="46.4038%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="46.1538%" y="453" width="0.0785%" height="15" fill="rgb(242,194,17)" fg:x="588" fg:w="1"/><text x="46.4038%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.73%)</title><rect x="44.5840%" y="613" width="1.7268%" height="15" fill="rgb(236,96,3)" fg:x="568" fg:w="22"/><text x="44.8340%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 1.49%)</title><rect x="44.8195%" y="597" width="1.4914%" height="15" fill="rgb(235,148,34)" fg:x="571" fg:w="19"/><text x="45.0695%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (15 samples, 1.18%)</title><rect x="45.1334%" y="581" width="1.1774%" height="15" fill="rgb(254,12,11)" fg:x="575" fg:w="15"/><text x="45.3834%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.94%)</title><rect x="45.3689%" y="565" width="0.9419%" height="15" fill="rgb(207,31,54)" fg:x="578" fg:w="12"/><text x="45.6189%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.71%)</title><rect x="45.6044%" y="549" width="0.7064%" height="15" fill="rgb(252,14,28)" fg:x="581" fg:w="9"/><text x="45.8544%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="45.7614%" y="533" width="0.5495%" height="15" fill="rgb(252,108,36)" fg:x="583" fg:w="7"/><text x="46.0114%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.2323%" y="517" width="0.0785%" height="15" fill="rgb(214,149,7)" fg:x="589" fg:w="1"/><text x="46.4823%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.04%)</title><rect x="44.3485%" y="629" width="2.0408%" height="15" fill="rgb(243,94,12)" fg:x="565" fg:w="26"/><text x="44.5985%" y="639.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="46.3108%" y="613" width="0.0785%" height="15" fill="rgb(208,36,10)" fg:x="590" fg:w="1"/><text x="46.5608%" y="623.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (46 samples, 3.61%)</title><rect x="42.8571%" y="677" width="3.6107%" height="15" fill="rgb(233,185,52)" fg:x="546" fg:w="46"/><text x="43.1071%" y="687.50">kern..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (45 samples, 3.53%)</title><rect x="42.9356%" y="661" width="3.5322%" height="15" fill="rgb(234,50,45)" fg:x="547" fg:w="45"/><text x="43.1856%" y="671.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 2.28%)</title><rect x="44.1915%" y="645" width="2.2763%" height="15" fill="rgb(228,92,54)" fg:x="563" fg:w="29"/><text x="44.4415%" y="655.50">s..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3893%" y="629" width="0.0785%" height="15" fill="rgb(224,85,25)" fg:x="591" fg:w="1"/><text x="46.6393%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.3893%" y="613" width="0.0785%" height="15" fill="rgb(246,1,45)" fg:x="591" fg:w="1"/><text x="46.6393%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.3893%" y="597" width="0.0785%" height="15" fill="rgb(240,66,23)" fg:x="591" fg:w="1"/><text x="46.6393%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.8603%" y="501" width="0.0785%" height="15" fill="rgb(222,96,27)" fg:x="597" fg:w="1"/><text x="47.1103%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8603%" y="485" width="0.0785%" height="15" fill="rgb(212,136,10)" fg:x="597" fg:w="1"/><text x="47.1103%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.8603%" y="533" width="0.1570%" height="15" fill="rgb(226,192,50)" fg:x="597" fg:w="2"/><text x="47.1103%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="46.8603%" y="517" width="0.1570%" height="15" fill="rgb(241,182,31)" fg:x="597" fg:w="2"/><text x="47.1103%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9388%" y="501" width="0.0785%" height="15" fill="rgb(219,205,47)" fg:x="598" fg:w="1"/><text x="47.1888%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.9388%" y="485" width="0.0785%" height="15" fill="rgb(207,96,14)" fg:x="598" fg:w="1"/><text x="47.1888%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.9388%" y="469" width="0.0785%" height="15" fill="rgb(216,119,9)" fg:x="598" fg:w="1"/><text x="47.1888%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.0173%" y="501" width="0.0785%" height="15" fill="rgb(235,62,36)" fg:x="599" fg:w="1"/><text x="47.2673%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="47.0958%" y="453" width="0.1570%" height="15" fill="rgb(214,41,27)" fg:x="600" fg:w="2"/><text x="47.3458%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.0958%" y="437" width="0.1570%" height="15" fill="rgb(214,174,37)" fg:x="600" fg:w="2"/><text x="47.3458%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.1743%" y="421" width="0.0785%" height="15" fill="rgb(212,11,25)" fg:x="601" fg:w="1"/><text x="47.4243%" y="431.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="47.0173%" y="517" width="0.4710%" height="15" fill="rgb(217,71,35)" fg:x="599" fg:w="6"/><text x="47.2673%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="47.0958%" y="501" width="0.3925%" height="15" fill="rgb(234,152,9)" fg:x="600" fg:w="5"/><text x="47.3458%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="47.0958%" y="485" width="0.3925%" height="15" fill="rgb(228,32,51)" fg:x="600" fg:w="5"/><text x="47.3458%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="47.0958%" y="469" width="0.3925%" height="15" fill="rgb(209,14,47)" fg:x="600" fg:w="5"/><text x="47.3458%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="47.2527%" y="453" width="0.2355%" height="15" fill="rgb(218,201,17)" fg:x="602" fg:w="3"/><text x="47.5027%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.4097%" y="437" width="0.0785%" height="15" fill="rgb(218,98,15)" fg:x="604" fg:w="1"/><text x="47.6597%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.4097%" y="421" width="0.0785%" height="15" fill="rgb(233,202,29)" fg:x="604" fg:w="1"/><text x="47.6597%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.4882%" y="501" width="0.0785%" height="15" fill="rgb(207,196,44)" fg:x="605" fg:w="1"/><text x="47.7382%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="47.4882%" y="517" width="0.1570%" height="15" fill="rgb(218,63,34)" fg:x="605" fg:w="2"/><text x="47.7382%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.5667%" y="501" width="0.0785%" height="15" fill="rgb(209,10,5)" fg:x="606" fg:w="1"/><text x="47.8167%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.94%)</title><rect x="46.7818%" y="549" width="0.9419%" height="15" fill="rgb(224,36,28)" fg:x="596" fg:w="12"/><text x="47.0318%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.71%)</title><rect x="47.0173%" y="533" width="0.7064%" height="15" fill="rgb(249,178,7)" fg:x="599" fg:w="9"/><text x="47.2673%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6452%" y="517" width="0.0785%" height="15" fill="rgb(253,163,10)" fg:x="607" fg:w="1"/><text x="47.8952%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (18 samples, 1.41%)</title><rect x="46.4678%" y="581" width="1.4129%" height="15" fill="rgb(245,67,46)" fg:x="592" fg:w="18"/><text x="46.7178%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.18%)</title><rect x="46.7033%" y="565" width="1.1774%" height="15" fill="rgb(225,14,18)" fg:x="595" fg:w="15"/><text x="46.9533%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.7237%" y="549" width="0.1570%" height="15" fill="rgb(217,41,54)" fg:x="608" fg:w="2"/><text x="47.9737%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.8022%" y="533" width="0.0785%" height="15" fill="rgb(222,111,11)" fg:x="609" fg:w="1"/><text x="48.0522%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.8022%" y="517" width="0.0785%" height="15" fill="rgb(211,85,31)" fg:x="609" fg:w="1"/><text x="48.0522%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.49%)</title><rect x="46.4678%" y="613" width="1.4914%" height="15" fill="rgb(223,29,26)" fg:x="592" fg:w="19"/><text x="46.7178%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.49%)</title><rect x="46.4678%" y="597" width="1.4914%" height="15" fill="rgb(236,124,50)" fg:x="592" fg:w="19"/><text x="46.7178%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.8807%" y="581" width="0.0785%" height="15" fill="rgb(219,148,15)" fg:x="610" fg:w="1"/><text x="48.1307%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (6 samples, 0.47%)</title><rect x="47.9592%" y="613" width="0.4710%" height="15" fill="rgb(248,159,33)" fg:x="611" fg:w="6"/><text x="48.2092%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="48.2732%" y="597" width="0.1570%" height="15" fill="rgb(252,65,8)" fg:x="615" fg:w="2"/><text x="48.5232%" y="607.50"></text></g><g><title>engine::session::state::State::close (198 samples, 15.54%)</title><rect x="33.2025%" y="757" width="15.5416%" height="15" fill="rgb(236,45,7)" fg:x="423" fg:w="198"/><text x="33.4525%" y="767.50">engine::session::state::..</text></g><g><title>engine::session::state::State::flush_entities (175 samples, 13.74%)</title><rect x="35.0078%" y="741" width="13.7363%" height="15" fill="rgb(244,3,48)" fg:x="446" fg:w="175"/><text x="35.2578%" y="751.50">engine::session::stat..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (174 samples, 13.66%)</title><rect x="35.0863%" y="725" width="13.6578%" height="15" fill="rgb(224,123,53)" fg:x="447" fg:w="174"/><text x="35.3363%" y="735.50">engine::session::inte..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (172 samples, 13.50%)</title><rect x="35.2433%" y="709" width="13.5008%" height="15" fill="rgb(223,173,15)" fg:x="449" fg:w="172"/><text x="35.4933%" y="719.50">engine::session::sta..</text></g><g><title>kernel::model::any_entity_changes (121 samples, 9.50%)</title><rect x="39.2465%" y="693" width="9.4976%" height="15" fill="rgb(254,181,5)" fg:x="500" fg:w="121"/><text x="39.4965%" y="703.50">kernel::model:..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.28%)</title><rect x="46.4678%" y="677" width="2.2763%" height="15" fill="rgb(243,124,33)" fg:x="592" fg:w="29"/><text x="46.7178%" y="687.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.28%)</title><rect x="46.4678%" y="661" width="2.2763%" height="15" fill="rgb(253,220,11)" fg:x="592" fg:w="29"/><text x="46.7178%" y="671.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.28%)</title><rect x="46.4678%" y="645" width="2.2763%" height="15" fill="rgb(217,14,4)" fg:x="592" fg:w="29"/><text x="46.7178%" y="655.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.28%)</title><rect x="46.4678%" y="629" width="2.2763%" height="15" fill="rgb(209,196,12)" fg:x="592" fg:w="29"/><text x="46.7178%" y="639.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="48.4301%" y="613" width="0.3140%" height="15" fill="rgb(237,108,29)" fg:x="617" fg:w="4"/><text x="48.6801%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="48.7441%" y="757" width="0.0785%" height="15" fill="rgb(216,173,20)" fg:x="621" fg:w="1"/><text x="48.9941%" y="767.50"></text></g><g><title>engine::session::Session::close (205 samples, 16.09%)</title><rect x="32.8100%" y="773" width="16.0911%" height="15" fill="rgb(245,27,6)" fg:x="418" fg:w="205"/><text x="33.0600%" y="783.50">engine::session::Session:..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="48.8226%" y="757" width="0.0785%" height="15" fill="rgb(210,181,20)" fg:x="622" fg:w="1"/><text x="49.0726%" y="767.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="48.8226%" y="741" width="0.0785%" height="15" fill="rgb(235,213,1)" fg:x="622" fg:w="1"/><text x="49.0726%" y="751.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="48.8226%" y="725" width="0.0785%" height="15" fill="rgb(239,68,43)" fg:x="622" fg:w="1"/><text x="49.0726%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="48.8226%" y="709" width="0.0785%" height="15" fill="rgb(254,137,43)" fg:x="622" fg:w="1"/><text x="49.0726%" y="719.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="48.8226%" y="693" width="0.0785%" height="15" fill="rgb(252,170,38)" fg:x="622" fg:w="1"/><text x="49.0726%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="49.1366%" y="741" width="0.0785%" height="15" fill="rgb(234,21,42)" fg:x="626" fg:w="1"/><text x="49.3866%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (4 samples, 0.31%)</title><rect x="49.2936%" y="661" width="0.3140%" height="15" fill="rgb(216,145,40)" fg:x="628" fg:w="4"/><text x="49.5436%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (3 samples, 0.24%)</title><rect x="49.3721%" y="645" width="0.2355%" height="15" fill="rgb(251,73,9)" fg:x="629" fg:w="3"/><text x="49.6221%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="49.3721%" y="629" width="0.2355%" height="15" fill="rgb(242,54,6)" fg:x="629" fg:w="3"/><text x="49.6221%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="49.3721%" y="613" width="0.2355%" height="15" fill="rgb(239,70,7)" fg:x="629" fg:w="3"/><text x="49.6221%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="49.3721%" y="597" width="0.2355%" height="15" fill="rgb(216,159,35)" fg:x="629" fg:w="3"/><text x="49.6221%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="49.3721%" y="581" width="0.2355%" height="15" fill="rgb(224,50,39)" fg:x="629" fg:w="3"/><text x="49.6221%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="49.3721%" y="565" width="0.2355%" height="15" fill="rgb(235,9,35)" fg:x="629" fg:w="3"/><text x="49.6221%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="49.3721%" y="549" width="0.2355%" height="15" fill="rgb(239,34,21)" fg:x="629" fg:w="3"/><text x="49.6221%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.5290%" y="533" width="0.0785%" height="15" fill="rgb(218,162,43)" fg:x="631" fg:w="1"/><text x="49.7790%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.5290%" y="517" width="0.0785%" height="15" fill="rgb(219,89,33)" fg:x="631" fg:w="1"/><text x="49.7790%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.5290%" y="501" width="0.0785%" height="15" fill="rgb(226,125,37)" fg:x="631" fg:w="1"/><text x="49.7790%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="49.5290%" y="485" width="0.0785%" height="15" fill="rgb(233,149,30)" fg:x="631" fg:w="1"/><text x="49.7790%" y="495.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.5290%" y="469" width="0.0785%" height="15" fill="rgb(236,8,18)" fg:x="631" fg:w="1"/><text x="49.7790%" y="479.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.5290%" y="453" width="0.0785%" height="15" fill="rgb(205,176,9)" fg:x="631" fg:w="1"/><text x="49.7790%" y="463.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.5290%" y="437" width="0.0785%" height="15" fill="rgb(252,103,44)" fg:x="631" fg:w="1"/><text x="49.7790%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.5290%" y="421" width="0.0785%" height="15" fill="rgb(207,68,53)" fg:x="631" fg:w="1"/><text x="49.7790%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.5290%" y="405" width="0.0785%" height="15" fill="rgb(218,193,48)" fg:x="631" fg:w="1"/><text x="49.7790%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.5290%" y="389" width="0.0785%" height="15" fill="rgb(234,121,52)" fg:x="631" fg:w="1"/><text x="49.7790%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.5290%" y="373" width="0.0785%" height="15" fill="rgb(227,218,49)" fg:x="631" fg:w="1"/><text x="49.7790%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.5290%" y="357" width="0.0785%" height="15" fill="rgb(221,8,7)" fg:x="631" fg:w="1"/><text x="49.7790%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.5290%" y="341" width="0.0785%" height="15" fill="rgb(217,151,36)" fg:x="631" fg:w="1"/><text x="49.7790%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.5290%" y="325" width="0.0785%" height="15" fill="rgb(213,71,5)" fg:x="631" fg:w="1"/><text x="49.7790%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.5290%" y="309" width="0.0785%" height="15" fill="rgb(225,145,43)" fg:x="631" fg:w="1"/><text x="49.7790%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.5290%" y="293" width="0.0785%" height="15" fill="rgb(235,118,19)" fg:x="631" fg:w="1"/><text x="49.7790%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.5290%" y="277" width="0.0785%" height="15" fill="rgb(214,102,36)" fg:x="631" fg:w="1"/><text x="49.7790%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.5290%" y="261" width="0.0785%" height="15" fill="rgb(220,56,43)" fg:x="631" fg:w="1"/><text x="49.7790%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="49.5290%" y="245" width="0.0785%" height="15" fill="rgb(246,136,46)" fg:x="631" fg:w="1"/><text x="49.7790%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="49.8430%" y="581" width="0.1570%" height="15" fill="rgb(249,99,12)" fg:x="635" fg:w="2"/><text x="50.0930%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="49.8430%" y="565" width="0.1570%" height="15" fill="rgb(224,31,42)" fg:x="635" fg:w="2"/><text x="50.0930%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="49.8430%" y="549" width="0.1570%" height="15" fill="rgb(208,96,21)" fg:x="635" fg:w="2"/><text x="50.0930%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="49.9215%" y="533" width="0.0785%" height="15" fill="rgb(237,229,7)" fg:x="636" fg:w="1"/><text x="50.1715%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.9215%" y="517" width="0.0785%" height="15" fill="rgb(210,12,6)" fg:x="636" fg:w="1"/><text x="50.1715%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9215%" y="501" width="0.0785%" height="15" fill="rgb(240,9,34)" fg:x="636" fg:w="1"/><text x="50.1715%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9215%" y="485" width="0.0785%" height="15" fill="rgb(211,68,37)" fg:x="636" fg:w="1"/><text x="50.1715%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9215%" y="469" width="0.0785%" height="15" fill="rgb(249,138,50)" fg:x="636" fg:w="1"/><text x="50.1715%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9215%" y="453" width="0.0785%" height="15" fill="rgb(243,185,40)" fg:x="636" fg:w="1"/><text x="50.1715%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="49.9215%" y="437" width="0.0785%" height="15" fill="rgb(242,92,35)" fg:x="636" fg:w="1"/><text x="50.1715%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9215%" y="421" width="0.0785%" height="15" fill="rgb(244,98,5)" fg:x="636" fg:w="1"/><text x="50.1715%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9215%" y="405" width="0.0785%" height="15" fill="rgb(228,186,29)" fg:x="636" fg:w="1"/><text x="50.1715%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9215%" y="389" width="0.0785%" height="15" fill="rgb(253,7,44)" fg:x="636" fg:w="1"/><text x="50.1715%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.9215%" y="373" width="0.0785%" height="15" fill="rgb(216,11,45)" fg:x="636" fg:w="1"/><text x="50.1715%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.9215%" y="357" width="0.0785%" height="15" fill="rgb(205,67,3)" fg:x="636" fg:w="1"/><text x="50.1715%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.9215%" y="341" width="0.0785%" height="15" fill="rgb(250,18,3)" fg:x="636" fg:w="1"/><text x="50.1715%" y="351.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.0785%" y="485" width="0.0785%" height="15" fill="rgb(241,222,43)" fg:x="638" fg:w="1"/><text x="50.3285%" y="495.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="50.0785%" y="469" width="0.0785%" height="15" fill="rgb(233,115,3)" fg:x="638" fg:w="1"/><text x="50.3285%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.1570%" y="437" width="0.0785%" height="15" fill="rgb(215,165,25)" fg:x="639" fg:w="1"/><text x="50.4070%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.1570%" y="421" width="0.0785%" height="15" fill="rgb(234,179,6)" fg:x="639" fg:w="1"/><text x="50.4070%" y="431.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.31%)</title><rect x="50.0000%" y="565" width="0.3140%" height="15" fill="rgb(215,82,23)" fg:x="637" fg:w="4"/><text x="50.2500%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="50.0000%" y="549" width="0.3140%" height="15" fill="rgb(211,47,18)" fg:x="637" fg:w="4"/><text x="50.2500%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="50.0000%" y="533" width="0.3140%" height="15" fill="rgb(248,17,9)" fg:x="637" fg:w="4"/><text x="50.2500%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="50.0000%" y="517" width="0.3140%" height="15" fill="rgb(210,212,12)" fg:x="637" fg:w="4"/><text x="50.2500%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="50.0000%" y="501" width="0.3140%" height="15" fill="rgb(230,135,45)" fg:x="637" fg:w="4"/><text x="50.2500%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.1570%" y="485" width="0.1570%" height="15" fill="rgb(214,121,41)" fg:x="639" fg:w="2"/><text x="50.4070%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.1570%" y="469" width="0.1570%" height="15" fill="rgb(239,165,45)" fg:x="639" fg:w="2"/><text x="50.4070%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="50.1570%" y="453" width="0.1570%" height="15" fill="rgb(214,85,51)" fg:x="639" fg:w="2"/><text x="50.4070%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="50.2355%" y="437" width="0.0785%" height="15" fill="rgb(223,90,27)" fg:x="640" fg:w="1"/><text x="50.4855%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.2355%" y="421" width="0.0785%" height="15" fill="rgb(244,84,11)" fg:x="640" fg:w="1"/><text x="50.4855%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.3140%" y="453" width="0.0785%" height="15" fill="rgb(253,41,47)" fg:x="641" fg:w="1"/><text x="50.5640%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.3140%" y="437" width="0.0785%" height="15" fill="rgb(232,39,5)" fg:x="641" fg:w="1"/><text x="50.5640%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.3140%" y="421" width="0.0785%" height="15" fill="rgb(211,93,4)" fg:x="641" fg:w="1"/><text x="50.5640%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.3140%" y="405" width="0.0785%" height="15" fill="rgb(219,50,49)" fg:x="641" fg:w="1"/><text x="50.5640%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.3140%" y="389" width="0.0785%" height="15" fill="rgb(232,80,19)" fg:x="641" fg:w="1"/><text x="50.5640%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.3140%" y="373" width="0.0785%" height="15" fill="rgb(215,227,39)" fg:x="641" fg:w="1"/><text x="50.5640%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.3140%" y="357" width="0.0785%" height="15" fill="rgb(211,99,12)" fg:x="641" fg:w="1"/><text x="50.5640%" y="367.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="50.3925%" y="389" width="0.0785%" height="15" fill="rgb(214,158,5)" fg:x="642" fg:w="1"/><text x="50.6425%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="50.3140%" y="485" width="0.2355%" height="15" fill="rgb(242,19,53)" fg:x="641" fg:w="3"/><text x="50.5640%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.3140%" y="469" width="0.2355%" height="15" fill="rgb(208,18,20)" fg:x="641" fg:w="3"/><text x="50.5640%" y="479.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="50.3925%" y="453" width="0.1570%" height="15" fill="rgb(250,44,11)" fg:x="642" fg:w="2"/><text x="50.6425%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.3925%" y="437" width="0.1570%" height="15" fill="rgb(238,159,13)" fg:x="642" fg:w="2"/><text x="50.6425%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="50.3925%" y="421" width="0.1570%" height="15" fill="rgb(231,74,18)" fg:x="642" fg:w="2"/><text x="50.6425%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.3925%" y="405" width="0.1570%" height="15" fill="rgb(229,219,45)" fg:x="642" fg:w="2"/><text x="50.6425%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4710%" y="389" width="0.0785%" height="15" fill="rgb(210,221,1)" fg:x="643" fg:w="1"/><text x="50.7210%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.5495%" y="485" width="0.0785%" height="15" fill="rgb(209,60,51)" fg:x="644" fg:w="1"/><text x="50.7995%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="50.5495%" y="469" width="0.0785%" height="15" fill="rgb(252,97,34)" fg:x="644" fg:w="1"/><text x="50.7995%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.5495%" y="453" width="0.0785%" height="15" fill="rgb(243,211,37)" fg:x="644" fg:w="1"/><text x="50.7995%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.5495%" y="437" width="0.0785%" height="15" fill="rgb(210,229,37)" fg:x="644" fg:w="1"/><text x="50.7995%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.6279%" y="453" width="0.0785%" height="15" fill="rgb(220,208,43)" fg:x="645" fg:w="1"/><text x="50.8779%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6279%" y="437" width="0.0785%" height="15" fill="rgb(218,118,50)" fg:x="645" fg:w="1"/><text x="50.8779%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6279%" y="421" width="0.0785%" height="15" fill="rgb(254,169,52)" fg:x="645" fg:w="1"/><text x="50.8779%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (6 samples, 0.47%)</title><rect x="50.3140%" y="533" width="0.4710%" height="15" fill="rgb(221,214,37)" fg:x="641" fg:w="6"/><text x="50.5640%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="50.3140%" y="517" width="0.4710%" height="15" fill="rgb(254,186,32)" fg:x="641" fg:w="6"/><text x="50.5640%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (6 samples, 0.47%)</title><rect x="50.3140%" y="501" width="0.4710%" height="15" fill="rgb(215,144,43)" fg:x="641" fg:w="6"/><text x="50.5640%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.6279%" y="485" width="0.1570%" height="15" fill="rgb(252,21,46)" fg:x="645" fg:w="2"/><text x="50.8779%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="50.6279%" y="469" width="0.1570%" height="15" fill="rgb(207,166,46)" fg:x="645" fg:w="2"/><text x="50.8779%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.7064%" y="453" width="0.0785%" height="15" fill="rgb(253,37,49)" fg:x="646" fg:w="1"/><text x="50.9564%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.7064%" y="437" width="0.0785%" height="15" fill="rgb(222,97,20)" fg:x="646" fg:w="1"/><text x="50.9564%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.7064%" y="421" width="0.0785%" height="15" fill="rgb(244,181,26)" fg:x="646" fg:w="1"/><text x="50.9564%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.7064%" y="405" width="0.0785%" height="15" fill="rgb(241,22,29)" fg:x="646" fg:w="1"/><text x="50.9564%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.7064%" y="389" width="0.0785%" height="15" fill="rgb(206,200,43)" fg:x="646" fg:w="1"/><text x="50.9564%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.7064%" y="373" width="0.0785%" height="15" fill="rgb(226,224,43)" fg:x="646" fg:w="1"/><text x="50.9564%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.7064%" y="357" width="0.0785%" height="15" fill="rgb(253,129,28)" fg:x="646" fg:w="1"/><text x="50.9564%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.7064%" y="341" width="0.0785%" height="15" fill="rgb(252,99,33)" fg:x="646" fg:w="1"/><text x="50.9564%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.7064%" y="325" width="0.0785%" height="15" fill="rgb(208,123,45)" fg:x="646" fg:w="1"/><text x="50.9564%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.7064%" y="309" width="0.0785%" height="15" fill="rgb(251,106,12)" fg:x="646" fg:w="1"/><text x="50.9564%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.7064%" y="293" width="0.0785%" height="15" fill="rgb(240,209,35)" fg:x="646" fg:w="1"/><text x="50.9564%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.7064%" y="277" width="0.0785%" height="15" fill="rgb(214,52,50)" fg:x="646" fg:w="1"/><text x="50.9564%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.7064%" y="261" width="0.0785%" height="15" fill="rgb(234,119,4)" fg:x="646" fg:w="1"/><text x="50.9564%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.7064%" y="245" width="0.0785%" height="15" fill="rgb(228,181,36)" fg:x="646" fg:w="1"/><text x="50.9564%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.7064%" y="229" width="0.0785%" height="15" fill="rgb(213,171,42)" fg:x="646" fg:w="1"/><text x="50.9564%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.7849%" y="501" width="0.0785%" height="15" fill="rgb(239,14,41)" fg:x="647" fg:w="1"/><text x="51.0349%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (15 samples, 1.18%)</title><rect x="49.7645%" y="613" width="1.1774%" height="15" fill="rgb(239,111,46)" fg:x="634" fg:w="15"/><text x="50.0145%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.10%)</title><rect x="49.8430%" y="597" width="1.0989%" height="15" fill="rgb(214,72,7)" fg:x="635" fg:w="14"/><text x="50.0930%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.94%)</title><rect x="50.0000%" y="581" width="0.9419%" height="15" fill="rgb(221,114,1)" fg:x="637" fg:w="12"/><text x="50.2500%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (8 samples, 0.63%)</title><rect x="50.3140%" y="565" width="0.6279%" height="15" fill="rgb(213,143,14)" fg:x="641" fg:w="8"/><text x="50.5640%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="50.3140%" y="549" width="0.6279%" height="15" fill="rgb(220,221,53)" fg:x="641" fg:w="8"/><text x="50.5640%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="50.7849%" y="533" width="0.1570%" height="15" fill="rgb(236,189,27)" fg:x="647" fg:w="2"/><text x="51.0349%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="50.7849%" y="517" width="0.1570%" height="15" fill="rgb(252,139,49)" fg:x="647" fg:w="2"/><text x="51.0349%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.8634%" y="501" width="0.0785%" height="15" fill="rgb(231,158,33)" fg:x="648" fg:w="1"/><text x="51.1134%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.8634%" y="485" width="0.0785%" height="15" fill="rgb(207,201,15)" fg:x="648" fg:w="1"/><text x="51.1134%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (16 samples, 1.26%)</title><rect x="49.7645%" y="629" width="1.2559%" height="15" fill="rgb(218,43,48)" fg:x="634" fg:w="16"/><text x="50.0145%" y="639.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="50.9419%" y="613" width="0.0785%" height="15" fill="rgb(244,63,52)" fg:x="649" fg:w="1"/><text x="51.1919%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="50.9419%" y="597" width="0.0785%" height="15" fill="rgb(236,60,17)" fg:x="649" fg:w="1"/><text x="51.1919%" y="607.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.0204%" y="629" width="0.1570%" height="15" fill="rgb(205,206,29)" fg:x="650" fg:w="2"/><text x="51.2704%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.0204%" y="613" width="0.1570%" height="15" fill="rgb(205,209,35)" fg:x="650" fg:w="2"/><text x="51.2704%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.0204%" y="597" width="0.1570%" height="15" fill="rgb(227,112,14)" fg:x="650" fg:w="2"/><text x="51.2704%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0989%" y="581" width="0.0785%" height="15" fill="rgb(248,151,9)" fg:x="651" fg:w="1"/><text x="51.3489%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.0989%" y="565" width="0.0785%" height="15" fill="rgb(247,45,40)" fg:x="651" fg:w="1"/><text x="51.3489%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.0989%" y="549" width="0.0785%" height="15" fill="rgb(232,185,16)" fg:x="651" fg:w="1"/><text x="51.3489%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.0989%" y="533" width="0.0785%" height="15" fill="rgb(215,45,44)" fg:x="651" fg:w="1"/><text x="51.3489%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.0989%" y="517" width="0.0785%" height="15" fill="rgb(206,69,32)" fg:x="651" fg:w="1"/><text x="51.3489%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0989%" y="501" width="0.0785%" height="15" fill="rgb(233,98,50)" fg:x="651" fg:w="1"/><text x="51.3489%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.0989%" y="485" width="0.0785%" height="15" fill="rgb(232,217,52)" fg:x="651" fg:w="1"/><text x="51.3489%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.0989%" y="469" width="0.0785%" height="15" fill="rgb(250,42,51)" fg:x="651" fg:w="1"/><text x="51.3489%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.1774%" y="629" width="0.0785%" height="15" fill="rgb(241,200,26)" fg:x="652" fg:w="1"/><text x="51.4274%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="51.2559%" y="629" width="0.0785%" height="15" fill="rgb(207,10,32)" fg:x="653" fg:w="1"/><text x="51.5059%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="51.2559%" y="613" width="0.0785%" height="15" fill="rgb(214,63,15)" fg:x="653" fg:w="1"/><text x="51.5059%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (29 samples, 2.28%)</title><rect x="49.2936%" y="677" width="2.2763%" height="15" fill="rgb(234,176,14)" fg:x="628" fg:w="29"/><text x="49.5436%" y="687.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::scope (25 samples, 1.96%)</title><rect x="49.6075%" y="661" width="1.9623%" height="15" fill="rgb(226,104,52)" fg:x="632" fg:w="25"/><text x="49.8575%" y="671.50">k..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (24 samples, 1.88%)</title><rect x="49.6860%" y="645" width="1.8838%" height="15" fill="rgb(211,222,1)" fg:x="633" fg:w="24"/><text x="49.9360%" y="655.50">k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.3344%" y="629" width="0.2355%" height="15" fill="rgb(237,7,3)" fg:x="654" fg:w="3"/><text x="51.5844%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.3344%" y="613" width="0.2355%" height="15" fill="rgb(218,143,7)" fg:x="654" fg:w="3"/><text x="51.5844%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.4914%" y="597" width="0.0785%" height="15" fill="rgb(208,25,22)" fg:x="656" fg:w="1"/><text x="51.7414%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.4914%" y="581" width="0.0785%" height="15" fill="rgb(228,127,16)" fg:x="656" fg:w="1"/><text x="51.7414%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5699%" y="613" width="0.0785%" height="15" fill="rgb(237,86,27)" fg:x="657" fg:w="1"/><text x="51.8199%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.5699%" y="597" width="0.0785%" height="15" fill="rgb(207,125,19)" fg:x="657" fg:w="1"/><text x="51.8199%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.5699%" y="581" width="0.0785%" height="15" fill="rgb(243,195,0)" fg:x="657" fg:w="1"/><text x="51.8199%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.5699%" y="565" width="0.0785%" height="15" fill="rgb(230,95,18)" fg:x="657" fg:w="1"/><text x="51.8199%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.5699%" y="549" width="0.0785%" height="15" fill="rgb(232,157,21)" fg:x="657" fg:w="1"/><text x="51.8199%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5699%" y="533" width="0.0785%" height="15" fill="rgb(212,120,50)" fg:x="657" fg:w="1"/><text x="51.8199%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5699%" y="517" width="0.0785%" height="15" fill="rgb(222,204,44)" fg:x="657" fg:w="1"/><text x="51.8199%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.5699%" y="501" width="0.0785%" height="15" fill="rgb(236,6,33)" fg:x="657" fg:w="1"/><text x="51.8199%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.5699%" y="485" width="0.0785%" height="15" fill="rgb(247,11,38)" fg:x="657" fg:w="1"/><text x="51.8199%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.5699%" y="469" width="0.0785%" height="15" fill="rgb(215,111,0)" fg:x="657" fg:w="1"/><text x="51.8199%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.5699%" y="453" width="0.0785%" height="15" fill="rgb(211,65,46)" fg:x="657" fg:w="1"/><text x="51.8199%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.5699%" y="437" width="0.0785%" height="15" fill="rgb(216,5,12)" fg:x="657" fg:w="1"/><text x="51.8199%" y="447.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (31 samples, 2.43%)</title><rect x="49.2936%" y="693" width="2.4333%" height="15" fill="rgb(226,7,2)" fg:x="628" fg:w="31"/><text x="49.5436%" y="703.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (2 samples, 0.16%)</title><rect x="51.5699%" y="677" width="0.1570%" height="15" fill="rgb(242,116,12)" fg:x="657" fg:w="2"/><text x="51.8199%" y="687.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (2 samples, 0.16%)</title><rect x="51.5699%" y="661" width="0.1570%" height="15" fill="rgb(249,209,7)" fg:x="657" fg:w="2"/><text x="51.8199%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="51.5699%" y="645" width="0.1570%" height="15" fill="rgb(232,73,17)" fg:x="657" fg:w="2"/><text x="51.8199%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="51.5699%" y="629" width="0.1570%" height="15" fill="rgb(214,13,32)" fg:x="657" fg:w="2"/><text x="51.8199%" y="639.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="51.6484%" y="613" width="0.0785%" height="15" fill="rgb(221,125,10)" fg:x="658" fg:w="1"/><text x="51.8984%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="51.6484%" y="597" width="0.0785%" height="15" fill="rgb(246,7,44)" fg:x="658" fg:w="1"/><text x="51.8984%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="51.6484%" y="581" width="0.0785%" height="15" fill="rgb(239,18,35)" fg:x="658" fg:w="1"/><text x="51.8984%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="51.6484%" y="565" width="0.0785%" height="15" fill="rgb(250,222,16)" fg:x="658" fg:w="1"/><text x="51.8984%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="51.6484%" y="549" width="0.0785%" height="15" fill="rgb(219,100,8)" fg:x="658" fg:w="1"/><text x="51.8984%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7268%" y="565" width="0.0785%" height="15" fill="rgb(240,62,13)" fg:x="659" fg:w="1"/><text x="51.9768%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7268%" y="549" width="0.0785%" height="15" fill="rgb(253,194,2)" fg:x="659" fg:w="1"/><text x="51.9768%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7268%" y="533" width="0.0785%" height="15" fill="rgb(235,58,31)" fg:x="659" fg:w="1"/><text x="51.9768%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7268%" y="517" width="0.0785%" height="15" fill="rgb(231,37,11)" fg:x="659" fg:w="1"/><text x="51.9768%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7268%" y="501" width="0.0785%" height="15" fill="rgb(235,133,0)" fg:x="659" fg:w="1"/><text x="51.9768%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7268%" y="485" width="0.0785%" height="15" fill="rgb(212,185,40)" fg:x="659" fg:w="1"/><text x="51.9768%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7268%" y="469" width="0.0785%" height="15" fill="rgb(216,68,42)" fg:x="659" fg:w="1"/><text x="51.9768%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.7268%" y="453" width="0.0785%" height="15" fill="rgb(239,81,4)" fg:x="659" fg:w="1"/><text x="51.9768%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.7268%" y="437" width="0.0785%" height="15" fill="rgb(206,86,6)" fg:x="659" fg:w="1"/><text x="51.9768%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.7268%" y="421" width="0.0785%" height="15" fill="rgb(249,95,27)" fg:x="659" fg:w="1"/><text x="51.9768%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.7268%" y="405" width="0.0785%" height="15" fill="rgb(205,155,45)" fg:x="659" fg:w="1"/><text x="51.9768%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.8838%" y="517" width="0.0785%" height="15" fill="rgb(213,55,42)" fg:x="661" fg:w="1"/><text x="52.1338%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="51.8838%" y="533" width="0.2355%" height="15" fill="rgb(249,197,4)" fg:x="661" fg:w="3"/><text x="52.1338%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="51.9623%" y="517" width="0.1570%" height="15" fill="rgb(212,128,32)" fg:x="662" fg:w="2"/><text x="52.2123%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.9623%" y="501" width="0.1570%" height="15" fill="rgb(252,47,30)" fg:x="662" fg:w="2"/><text x="52.2123%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.1978%" y="517" width="0.1570%" height="15" fill="rgb(209,79,18)" fg:x="665" fg:w="2"/><text x="52.4478%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2763%" y="501" width="0.0785%" height="15" fill="rgb(225,81,38)" fg:x="666" fg:w="1"/><text x="52.5263%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2763%" y="485" width="0.0785%" height="15" fill="rgb(205,95,16)" fg:x="666" fg:w="1"/><text x="52.5263%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.2763%" y="469" width="0.0785%" height="15" fill="rgb(214,30,4)" fg:x="666" fg:w="1"/><text x="52.5263%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.2763%" y="453" width="0.0785%" height="15" fill="rgb(232,137,22)" fg:x="666" fg:w="1"/><text x="52.5263%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.2763%" y="437" width="0.0785%" height="15" fill="rgb(232,156,19)" fg:x="666" fg:w="1"/><text x="52.5263%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.2763%" y="421" width="0.0785%" height="15" fill="rgb(248,157,26)" fg:x="666" fg:w="1"/><text x="52.5263%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2763%" y="405" width="0.0785%" height="15" fill="rgb(242,24,3)" fg:x="666" fg:w="1"/><text x="52.5263%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.2763%" y="389" width="0.0785%" height="15" fill="rgb(218,195,48)" fg:x="666" fg:w="1"/><text x="52.5263%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.2763%" y="373" width="0.0785%" height="15" fill="rgb(214,193,36)" fg:x="666" fg:w="1"/><text x="52.5263%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.2763%" y="357" width="0.0785%" height="15" fill="rgb(242,110,40)" fg:x="666" fg:w="1"/><text x="52.5263%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.2763%" y="341" width="0.0785%" height="15" fill="rgb(233,150,26)" fg:x="666" fg:w="1"/><text x="52.5263%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.2763%" y="325" width="0.0785%" height="15" fill="rgb(239,200,30)" fg:x="666" fg:w="1"/><text x="52.5263%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.3548%" y="517" width="0.0785%" height="15" fill="rgb(226,28,11)" fg:x="667" fg:w="1"/><text x="52.6048%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="52.4333%" y="517" width="0.1570%" height="15" fill="rgb(220,26,48)" fg:x="668" fg:w="2"/><text x="52.6833%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="52.4333%" y="501" width="0.1570%" height="15" fill="rgb(232,10,11)" fg:x="668" fg:w="2"/><text x="52.6833%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.4333%" y="485" width="0.1570%" height="15" fill="rgb(252,143,50)" fg:x="668" fg:w="2"/><text x="52.6833%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.5903%" y="469" width="0.0785%" height="15" fill="rgb(206,58,22)" fg:x="670" fg:w="1"/><text x="52.8403%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.5903%" y="453" width="0.0785%" height="15" fill="rgb(250,9,45)" fg:x="670" fg:w="1"/><text x="52.8403%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5903%" y="437" width="0.0785%" height="15" fill="rgb(225,148,14)" fg:x="670" fg:w="1"/><text x="52.8403%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6688%" y="453" width="0.0785%" height="15" fill="rgb(205,178,40)" fg:x="671" fg:w="1"/><text x="52.9188%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6688%" y="437" width="0.0785%" height="15" fill="rgb(215,201,4)" fg:x="671" fg:w="1"/><text x="52.9188%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6688%" y="421" width="0.0785%" height="15" fill="rgb(219,223,24)" fg:x="671" fg:w="1"/><text x="52.9188%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6688%" y="405" width="0.0785%" height="15" fill="rgb(217,19,31)" fg:x="671" fg:w="1"/><text x="52.9188%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6688%" y="389" width="0.0785%" height="15" fill="rgb(235,33,3)" fg:x="671" fg:w="1"/><text x="52.9188%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6688%" y="373" width="0.0785%" height="15" fill="rgb(221,39,18)" fg:x="671" fg:w="1"/><text x="52.9188%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6688%" y="357" width="0.0785%" height="15" fill="rgb(242,162,33)" fg:x="671" fg:w="1"/><text x="52.9188%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6688%" y="341" width="0.0785%" height="15" fill="rgb(233,215,28)" fg:x="671" fg:w="1"/><text x="52.9188%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6688%" y="325" width="0.0785%" height="15" fill="rgb(212,117,9)" fg:x="671" fg:w="1"/><text x="52.9188%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6688%" y="309" width="0.0785%" height="15" fill="rgb(237,70,47)" fg:x="671" fg:w="1"/><text x="52.9188%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6688%" y="293" width="0.0785%" height="15" fill="rgb(206,177,13)" fg:x="671" fg:w="1"/><text x="52.9188%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.6688%" y="277" width="0.0785%" height="15" fill="rgb(209,174,33)" fg:x="671" fg:w="1"/><text x="52.9188%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.7473%" y="341" width="0.1570%" height="15" fill="rgb(226,6,11)" fg:x="672" fg:w="2"/><text x="52.9973%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="52.7473%" y="325" width="0.1570%" height="15" fill="rgb(240,214,6)" fg:x="672" fg:w="2"/><text x="52.9973%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="52.7473%" y="309" width="0.1570%" height="15" fill="rgb(254,214,40)" fg:x="672" fg:w="2"/><text x="52.9973%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="52.7473%" y="293" width="0.1570%" height="15" fill="rgb(230,187,15)" fg:x="672" fg:w="2"/><text x="52.9973%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="52.7473%" y="277" width="0.1570%" height="15" fill="rgb(250,11,27)" fg:x="672" fg:w="2"/><text x="52.9973%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="52.7473%" y="261" width="0.1570%" height="15" fill="rgb(243,107,19)" fg:x="672" fg:w="2"/><text x="52.9973%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.7473%" y="245" width="0.1570%" height="15" fill="rgb(253,66,26)" fg:x="672" fg:w="2"/><text x="52.9973%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="52.7473%" y="229" width="0.1570%" height="15" fill="rgb(228,43,8)" fg:x="672" fg:w="2"/><text x="52.9973%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="52.7473%" y="213" width="0.1570%" height="15" fill="rgb(232,197,36)" fg:x="672" fg:w="2"/><text x="52.9973%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="52.7473%" y="197" width="0.1570%" height="15" fill="rgb(221,182,31)" fg:x="672" fg:w="2"/><text x="52.9973%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="52.7473%" y="181" width="0.1570%" height="15" fill="rgb(244,25,36)" fg:x="672" fg:w="2"/><text x="52.9973%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="52.7473%" y="165" width="0.1570%" height="15" fill="rgb(247,101,19)" fg:x="672" fg:w="2"/><text x="52.9973%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="52.7473%" y="149" width="0.1570%" height="15" fill="rgb(223,117,19)" fg:x="672" fg:w="2"/><text x="52.9973%" y="159.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="52.7473%" y="133" width="0.1570%" height="15" fill="rgb(249,63,38)" fg:x="672" fg:w="2"/><text x="52.9973%" y="143.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="52.7473%" y="117" width="0.1570%" height="15" fill="rgb(220,143,23)" fg:x="672" fg:w="2"/><text x="52.9973%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (5 samples, 0.39%)</title><rect x="52.5903%" y="501" width="0.3925%" height="15" fill="rgb(252,183,22)" fg:x="670" fg:w="5"/><text x="52.8403%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.39%)</title><rect x="52.5903%" y="485" width="0.3925%" height="15" fill="rgb(243,176,15)" fg:x="670" fg:w="5"/><text x="52.8403%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.31%)</title><rect x="52.6688%" y="469" width="0.3140%" height="15" fill="rgb(244,204,46)" fg:x="671" fg:w="4"/><text x="52.9188%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="52.7473%" y="453" width="0.2355%" height="15" fill="rgb(227,28,54)" fg:x="672" fg:w="3"/><text x="52.9973%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="52.7473%" y="437" width="0.2355%" height="15" fill="rgb(231,10,15)" fg:x="672" fg:w="3"/><text x="52.9973%" y="447.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="52.7473%" y="421" width="0.2355%" height="15" fill="rgb(210,200,17)" fg:x="672" fg:w="3"/><text x="52.9973%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="52.7473%" y="405" width="0.2355%" height="15" fill="rgb(251,106,46)" fg:x="672" fg:w="3"/><text x="52.9973%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="52.7473%" y="389" width="0.2355%" height="15" fill="rgb(218,211,15)" fg:x="672" fg:w="3"/><text x="52.9973%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="52.7473%" y="373" width="0.2355%" height="15" fill="rgb(239,62,10)" fg:x="672" fg:w="3"/><text x="52.9973%" y="383.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="52.7473%" y="357" width="0.2355%" height="15" fill="rgb(225,53,53)" fg:x="672" fg:w="3"/><text x="52.9973%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.9042%" y="341" width="0.0785%" height="15" fill="rgb(207,16,24)" fg:x="674" fg:w="1"/><text x="53.1542%" y="351.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.9042%" y="325" width="0.0785%" height="15" fill="rgb(217,52,28)" fg:x="674" fg:w="1"/><text x="53.1542%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.9042%" y="309" width="0.0785%" height="15" fill="rgb(246,1,5)" fg:x="674" fg:w="1"/><text x="53.1542%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.9042%" y="293" width="0.0785%" height="15" fill="rgb(221,29,26)" fg:x="674" fg:w="1"/><text x="53.1542%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.9042%" y="277" width="0.0785%" height="15" fill="rgb(250,133,32)" fg:x="674" fg:w="1"/><text x="53.1542%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.9042%" y="261" width="0.0785%" height="15" fill="rgb(236,63,16)" fg:x="674" fg:w="1"/><text x="53.1542%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.9042%" y="245" width="0.0785%" height="15" fill="rgb(231,159,14)" fg:x="674" fg:w="1"/><text x="53.1542%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.9042%" y="229" width="0.0785%" height="15" fill="rgb(207,102,36)" fg:x="674" fg:w="1"/><text x="53.1542%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.9042%" y="213" width="0.0785%" height="15" fill="rgb(230,224,31)" fg:x="674" fg:w="1"/><text x="53.1542%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.9042%" y="197" width="0.0785%" height="15" fill="rgb(215,182,16)" fg:x="674" fg:w="1"/><text x="53.1542%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.9042%" y="181" width="0.0785%" height="15" fill="rgb(226,113,2)" fg:x="674" fg:w="1"/><text x="53.1542%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.9042%" y="165" width="0.0785%" height="15" fill="rgb(241,18,35)" fg:x="674" fg:w="1"/><text x="53.1542%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.9042%" y="149" width="0.0785%" height="15" fill="rgb(240,165,44)" fg:x="674" fg:w="1"/><text x="53.1542%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.9042%" y="133" width="0.0785%" height="15" fill="rgb(229,130,47)" fg:x="674" fg:w="1"/><text x="53.1542%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.9042%" y="117" width="0.0785%" height="15" fill="rgb(223,93,7)" fg:x="674" fg:w="1"/><text x="53.1542%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.9042%" y="101" width="0.0785%" height="15" fill="rgb(205,180,36)" fg:x="674" fg:w="1"/><text x="53.1542%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.9042%" y="85" width="0.0785%" height="15" fill="rgb(221,103,28)" fg:x="674" fg:w="1"/><text x="53.1542%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.9042%" y="69" width="0.0785%" height="15" fill="rgb(212,4,3)" fg:x="674" fg:w="1"/><text x="53.1542%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.9042%" y="53" width="0.0785%" height="15" fill="rgb(209,221,53)" fg:x="674" fg:w="1"/><text x="53.1542%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.9042%" y="37" width="0.0785%" height="15" fill="rgb(233,229,52)" fg:x="674" fg:w="1"/><text x="53.1542%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="52.9827%" y="501" width="0.0785%" height="15" fill="rgb(254,127,37)" fg:x="675" fg:w="1"/><text x="53.2327%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="52.9827%" y="485" width="0.0785%" height="15" fill="rgb(207,161,26)" fg:x="675" fg:w="1"/><text x="53.2327%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.9827%" y="469" width="0.0785%" height="15" fill="rgb(223,75,5)" fg:x="675" fg:w="1"/><text x="53.2327%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0612%" y="469" width="0.0785%" height="15" fill="rgb(235,115,52)" fg:x="676" fg:w="1"/><text x="53.3112%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0612%" y="453" width="0.0785%" height="15" fill="rgb(240,91,46)" fg:x="676" fg:w="1"/><text x="53.3112%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0612%" y="437" width="0.0785%" height="15" fill="rgb(251,144,21)" fg:x="676" fg:w="1"/><text x="53.3112%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0612%" y="421" width="0.0785%" height="15" fill="rgb(247,220,47)" fg:x="676" fg:w="1"/><text x="53.3112%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0612%" y="405" width="0.0785%" height="15" fill="rgb(253,122,1)" fg:x="676" fg:w="1"/><text x="53.3112%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.0612%" y="389" width="0.0785%" height="15" fill="rgb(221,0,24)" fg:x="676" fg:w="1"/><text x="53.3112%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.0612%" y="373" width="0.0785%" height="15" fill="rgb(220,204,54)" fg:x="676" fg:w="1"/><text x="53.3112%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.0612%" y="357" width="0.0785%" height="15" fill="rgb(205,96,25)" fg:x="676" fg:w="1"/><text x="53.3112%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.0612%" y="341" width="0.0785%" height="15" fill="rgb(247,77,20)" fg:x="676" fg:w="1"/><text x="53.3112%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.0612%" y="325" width="0.0785%" height="15" fill="rgb(245,151,8)" fg:x="676" fg:w="1"/><text x="53.3112%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.0612%" y="309" width="0.0785%" height="15" fill="rgb(242,158,39)" fg:x="676" fg:w="1"/><text x="53.3112%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.0612%" y="293" width="0.0785%" height="15" fill="rgb(222,214,50)" fg:x="676" fg:w="1"/><text x="53.3112%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.0612%" y="277" width="0.0785%" height="15" fill="rgb(229,60,39)" fg:x="676" fg:w="1"/><text x="53.3112%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.0612%" y="261" width="0.0785%" height="15" fill="rgb(240,148,18)" fg:x="676" fg:w="1"/><text x="53.3112%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.0612%" y="245" width="0.0785%" height="15" fill="rgb(215,96,11)" fg:x="676" fg:w="1"/><text x="53.3112%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0612%" y="229" width="0.0785%" height="15" fill="rgb(238,162,53)" fg:x="676" fg:w="1"/><text x="53.3112%" y="239.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (2 samples, 0.16%)</title><rect x="53.2182%" y="389" width="0.1570%" height="15" fill="rgb(214,83,18)" fg:x="678" fg:w="2"/><text x="53.4682%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5322%" y="293" width="0.1570%" height="15" fill="rgb(248,117,24)" fg:x="682" fg:w="2"/><text x="53.7822%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5322%" y="277" width="0.1570%" height="15" fill="rgb(238,190,6)" fg:x="682" fg:w="2"/><text x="53.7822%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5322%" y="261" width="0.1570%" height="15" fill="rgb(213,51,6)" fg:x="682" fg:w="2"/><text x="53.7822%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.5322%" y="245" width="0.1570%" height="15" fill="rgb(212,136,1)" fg:x="682" fg:w="2"/><text x="53.7822%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.5322%" y="229" width="0.1570%" height="15" fill="rgb(221,192,14)" fg:x="682" fg:w="2"/><text x="53.7822%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="53.5322%" y="213" width="0.1570%" height="15" fill="rgb(244,38,54)" fg:x="682" fg:w="2"/><text x="53.7822%" y="223.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="53.5322%" y="197" width="0.1570%" height="15" fill="rgb(240,45,28)" fg:x="682" fg:w="2"/><text x="53.7822%" y="207.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="53.5322%" y="181" width="0.1570%" height="15" fill="rgb(240,123,12)" fg:x="682" fg:w="2"/><text x="53.7822%" y="191.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="53.5322%" y="165" width="0.1570%" height="15" fill="rgb(216,14,30)" fg:x="682" fg:w="2"/><text x="53.7822%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.5322%" y="149" width="0.1570%" height="15" fill="rgb(212,50,24)" fg:x="682" fg:w="2"/><text x="53.7822%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="53.5322%" y="133" width="0.1570%" height="15" fill="rgb(253,229,47)" fg:x="682" fg:w="2"/><text x="53.7822%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="53.5322%" y="117" width="0.1570%" height="15" fill="rgb(214,26,17)" fg:x="682" fg:w="2"/><text x="53.7822%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="53.5322%" y="101" width="0.1570%" height="15" fill="rgb(252,60,11)" fg:x="682" fg:w="2"/><text x="53.7822%" y="111.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="53.5322%" y="85" width="0.1570%" height="15" fill="rgb(209,59,37)" fg:x="682" fg:w="2"/><text x="53.7822%" y="95.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="53.5322%" y="69" width="0.1570%" height="15" fill="rgb(228,126,53)" fg:x="682" fg:w="2"/><text x="53.7822%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.6107%" y="53" width="0.0785%" height="15" fill="rgb(233,99,2)" fg:x="683" fg:w="1"/><text x="53.8607%" y="63.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="53.4537%" y="341" width="0.3140%" height="15" fill="rgb(217,106,34)" fg:x="681" fg:w="4"/><text x="53.7037%" y="351.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="53.5322%" y="325" width="0.2355%" height="15" fill="rgb(222,46,19)" fg:x="682" fg:w="3"/><text x="53.7822%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="53.5322%" y="309" width="0.2355%" height="15" fill="rgb(251,87,31)" fg:x="682" fg:w="3"/><text x="53.7822%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.6892%" y="293" width="0.0785%" height="15" fill="rgb(213,70,51)" fg:x="684" fg:w="1"/><text x="53.9392%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6892%" y="277" width="0.0785%" height="15" fill="rgb(229,144,18)" fg:x="684" fg:w="1"/><text x="53.9392%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.6892%" y="261" width="0.0785%" height="15" fill="rgb(254,60,26)" fg:x="684" fg:w="1"/><text x="53.9392%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.6892%" y="245" width="0.0785%" height="15" fill="rgb(243,127,51)" fg:x="684" fg:w="1"/><text x="53.9392%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.6892%" y="229" width="0.0785%" height="15" fill="rgb(221,51,25)" fg:x="684" fg:w="1"/><text x="53.9392%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="53.7677%" y="325" width="0.0785%" height="15" fill="rgb(205,42,7)" fg:x="685" fg:w="1"/><text x="54.0177%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.7677%" y="309" width="0.0785%" height="15" fill="rgb(236,177,48)" fg:x="685" fg:w="1"/><text x="54.0177%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.8462%" y="245" width="0.0785%" height="15" fill="rgb(226,79,31)" fg:x="686" fg:w="1"/><text x="54.0962%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8462%" y="229" width="0.0785%" height="15" fill="rgb(216,170,12)" fg:x="686" fg:w="1"/><text x="54.0962%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.8462%" y="293" width="0.1570%" height="15" fill="rgb(208,62,51)" fg:x="686" fg:w="2"/><text x="54.0962%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.8462%" y="277" width="0.1570%" height="15" fill="rgb(254,129,9)" fg:x="686" fg:w="2"/><text x="54.0962%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.8462%" y="261" width="0.1570%" height="15" fill="rgb(243,209,31)" fg:x="686" fg:w="2"/><text x="54.0962%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9246%" y="245" width="0.0785%" height="15" fill="rgb(213,159,23)" fg:x="687" fg:w="1"/><text x="54.1746%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9246%" y="229" width="0.0785%" height="15" fill="rgb(249,77,39)" fg:x="687" fg:w="1"/><text x="54.1746%" y="239.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9246%" y="213" width="0.0785%" height="15" fill="rgb(230,13,33)" fg:x="687" fg:w="1"/><text x="54.1746%" y="223.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9246%" y="197" width="0.0785%" height="15" fill="rgb(215,215,7)" fg:x="687" fg:w="1"/><text x="54.1746%" y="207.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9246%" y="181" width="0.0785%" height="15" fill="rgb(222,92,25)" fg:x="687" fg:w="1"/><text x="54.1746%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9246%" y="165" width="0.0785%" height="15" fill="rgb(215,173,22)" fg:x="687" fg:w="1"/><text x="54.1746%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.9246%" y="149" width="0.0785%" height="15" fill="rgb(247,205,52)" fg:x="687" fg:w="1"/><text x="54.1746%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.9246%" y="133" width="0.0785%" height="15" fill="rgb(240,210,37)" fg:x="687" fg:w="1"/><text x="54.1746%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.9246%" y="117" width="0.0785%" height="15" fill="rgb(224,13,10)" fg:x="687" fg:w="1"/><text x="54.1746%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.9246%" y="101" width="0.0785%" height="15" fill="rgb(209,48,33)" fg:x="687" fg:w="1"/><text x="54.1746%" y="111.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.9246%" y="85" width="0.0785%" height="15" fill="rgb(228,219,23)" fg:x="687" fg:w="1"/><text x="54.1746%" y="95.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9246%" y="69" width="0.0785%" height="15" fill="rgb(239,46,49)" fg:x="687" fg:w="1"/><text x="54.1746%" y="79.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0031%" y="261" width="0.0785%" height="15" fill="rgb(206,172,51)" fg:x="688" fg:w="1"/><text x="54.2531%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0816%" y="261" width="0.0785%" height="15" fill="rgb(213,212,35)" fg:x="689" fg:w="1"/><text x="54.3316%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0816%" y="245" width="0.0785%" height="15" fill="rgb(252,40,27)" fg:x="689" fg:w="1"/><text x="54.3316%" y="255.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (11 samples, 0.86%)</title><rect x="53.3752%" y="373" width="0.8634%" height="15" fill="rgb(212,33,41)" fg:x="680" fg:w="11"/><text x="53.6252%" y="383.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.78%)</title><rect x="53.4537%" y="357" width="0.7849%" height="15" fill="rgb(232,160,27)" fg:x="681" fg:w="10"/><text x="53.7037%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.47%)</title><rect x="53.7677%" y="341" width="0.4710%" height="15" fill="rgb(244,160,20)" fg:x="685" fg:w="6"/><text x="54.0177%" y="351.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="53.8462%" y="325" width="0.3925%" height="15" fill="rgb(205,66,20)" fg:x="686" fg:w="5"/><text x="54.0962%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="53.8462%" y="309" width="0.3925%" height="15" fill="rgb(236,158,6)" fg:x="686" fg:w="5"/><text x="54.0962%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="54.0031%" y="293" width="0.2355%" height="15" fill="rgb(232,25,36)" fg:x="688" fg:w="3"/><text x="54.2531%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="54.0031%" y="277" width="0.2355%" height="15" fill="rgb(220,153,35)" fg:x="688" fg:w="3"/><text x="54.2531%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.1601%" y="261" width="0.0785%" height="15" fill="rgb(216,5,8)" fg:x="690" fg:w="1"/><text x="54.4101%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1601%" y="245" width="0.0785%" height="15" fill="rgb(240,97,3)" fg:x="690" fg:w="1"/><text x="54.4101%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="54.1601%" y="229" width="0.0785%" height="15" fill="rgb(220,99,26)" fg:x="690" fg:w="1"/><text x="54.4101%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1601%" y="213" width="0.0785%" height="15" fill="rgb(237,96,2)" fg:x="690" fg:w="1"/><text x="54.4101%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="54.1601%" y="197" width="0.0785%" height="15" fill="rgb(217,197,47)" fg:x="690" fg:w="1"/><text x="54.4101%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="54.1601%" y="181" width="0.0785%" height="15" fill="rgb(252,133,54)" fg:x="690" fg:w="1"/><text x="54.4101%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.1601%" y="165" width="0.0785%" height="15" fill="rgb(233,37,30)" fg:x="690" fg:w="1"/><text x="54.4101%" y="175.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.1601%" y="149" width="0.0785%" height="15" fill="rgb(239,182,12)" fg:x="690" fg:w="1"/><text x="54.4101%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.2386%" y="309" width="0.0785%" height="15" fill="rgb(245,83,39)" fg:x="691" fg:w="1"/><text x="54.4886%" y="319.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.3956%" y="277" width="0.0785%" height="15" fill="rgb(222,109,36)" fg:x="693" fg:w="1"/><text x="54.6456%" y="287.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.3956%" y="261" width="0.0785%" height="15" fill="rgb(237,95,44)" fg:x="693" fg:w="1"/><text x="54.6456%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.5526%" y="245" width="0.0785%" height="15" fill="rgb(216,36,54)" fg:x="695" fg:w="1"/><text x="54.8026%" y="255.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="54.5526%" y="229" width="0.0785%" height="15" fill="rgb(236,164,3)" fg:x="695" fg:w="1"/><text x="54.8026%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.6311%" y="245" width="0.0785%" height="15" fill="rgb(223,15,21)" fg:x="696" fg:w="1"/><text x="54.8811%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7096%" y="149" width="0.0785%" height="15" fill="rgb(239,191,12)" fg:x="697" fg:w="1"/><text x="54.9596%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.7096%" y="133" width="0.0785%" height="15" fill="rgb(231,191,37)" fg:x="697" fg:w="1"/><text x="54.9596%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7096%" y="117" width="0.0785%" height="15" fill="rgb(209,155,36)" fg:x="697" fg:w="1"/><text x="54.9596%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="54.8666%" y="117" width="0.0785%" height="15" fill="rgb(216,222,49)" fg:x="699" fg:w="1"/><text x="55.1166%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.8666%" y="101" width="0.0785%" height="15" fill="rgb(218,181,2)" fg:x="699" fg:w="1"/><text x="55.1166%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="54.7096%" y="229" width="0.3140%" height="15" fill="rgb(239,125,9)" fg:x="697" fg:w="4"/><text x="54.9596%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="54.7096%" y="213" width="0.3140%" height="15" fill="rgb(233,103,7)" fg:x="697" fg:w="4"/><text x="54.9596%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="54.7096%" y="197" width="0.3140%" height="15" fill="rgb(209,223,5)" fg:x="697" fg:w="4"/><text x="54.9596%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="54.7096%" y="181" width="0.3140%" height="15" fill="rgb(234,71,27)" fg:x="697" fg:w="4"/><text x="54.9596%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="54.7096%" y="165" width="0.3140%" height="15" fill="rgb(251,202,16)" fg:x="697" fg:w="4"/><text x="54.9596%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="54.7881%" y="149" width="0.2355%" height="15" fill="rgb(231,180,0)" fg:x="698" fg:w="3"/><text x="55.0381%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="54.7881%" y="133" width="0.2355%" height="15" fill="rgb(223,58,28)" fg:x="698" fg:w="3"/><text x="55.0381%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9451%" y="117" width="0.0785%" height="15" fill="rgb(250,34,24)" fg:x="700" fg:w="1"/><text x="55.1951%" y="127.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.9451%" y="101" width="0.0785%" height="15" fill="rgb(235,24,16)" fg:x="700" fg:w="1"/><text x="55.1951%" y="111.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.9451%" y="85" width="0.0785%" height="15" fill="rgb(219,28,33)" fg:x="700" fg:w="1"/><text x="55.1951%" y="95.50"></text></g><g><title>serde_json::de::from_trait (11 samples, 0.86%)</title><rect x="54.2386%" y="357" width="0.8634%" height="15" fill="rgb(228,150,43)" fg:x="691" fg:w="11"/><text x="54.4886%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (11 samples, 0.86%)</title><rect x="54.2386%" y="341" width="0.8634%" height="15" fill="rgb(221,228,36)" fg:x="691" fg:w="11"/><text x="54.4886%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (11 samples, 0.86%)</title><rect x="54.2386%" y="325" width="0.8634%" height="15" fill="rgb(232,116,17)" fg:x="691" fg:w="11"/><text x="54.4886%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.78%)</title><rect x="54.3171%" y="309" width="0.7849%" height="15" fill="rgb(220,110,51)" fg:x="692" fg:w="10"/><text x="54.5671%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.78%)</title><rect x="54.3171%" y="293" width="0.7849%" height="15" fill="rgb(207,26,25)" fg:x="692" fg:w="10"/><text x="54.5671%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.63%)</title><rect x="54.4741%" y="277" width="0.6279%" height="15" fill="rgb(223,58,19)" fg:x="694" fg:w="8"/><text x="54.7241%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.63%)</title><rect x="54.4741%" y="261" width="0.6279%" height="15" fill="rgb(234,125,39)" fg:x="694" fg:w="8"/><text x="54.7241%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="54.7096%" y="245" width="0.3925%" height="15" fill="rgb(241,48,36)" fg:x="697" fg:w="5"/><text x="54.9596%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="55.0235%" y="229" width="0.0785%" height="15" fill="rgb(217,148,51)" fg:x="701" fg:w="1"/><text x="55.2735%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="55.0235%" y="213" width="0.0785%" height="15" fill="rgb(247,17,25)" fg:x="701" fg:w="1"/><text x="55.2735%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.1805%" y="325" width="0.0785%" height="15" fill="rgb(219,89,38)" fg:x="703" fg:w="1"/><text x="55.4305%" y="335.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2590%" y="213" width="0.0785%" height="15" fill="rgb(220,145,2)" fg:x="704" fg:w="1"/><text x="55.5090%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2590%" y="197" width="0.0785%" height="15" fill="rgb(244,66,47)" fg:x="704" fg:w="1"/><text x="55.5090%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.2590%" y="181" width="0.0785%" height="15" fill="rgb(226,182,5)" fg:x="704" fg:w="1"/><text x="55.5090%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.2590%" y="165" width="0.0785%" height="15" fill="rgb(211,98,20)" fg:x="704" fg:w="1"/><text x="55.5090%" y="175.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.2590%" y="149" width="0.0785%" height="15" fill="rgb(217,103,52)" fg:x="704" fg:w="1"/><text x="55.5090%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.2590%" y="133" width="0.0785%" height="15" fill="rgb(208,125,52)" fg:x="704" fg:w="1"/><text x="55.5090%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.3375%" y="213" width="0.0785%" height="15" fill="rgb(244,70,13)" fg:x="705" fg:w="1"/><text x="55.5875%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="55.3375%" y="197" width="0.0785%" height="15" fill="rgb(253,124,3)" fg:x="705" fg:w="1"/><text x="55.5875%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="55.2590%" y="245" width="0.2355%" height="15" fill="rgb(222,145,32)" fg:x="704" fg:w="3"/><text x="55.5090%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="55.2590%" y="229" width="0.2355%" height="15" fill="rgb(232,183,47)" fg:x="704" fg:w="3"/><text x="55.5090%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4160%" y="213" width="0.0785%" height="15" fill="rgb(246,226,4)" fg:x="706" fg:w="1"/><text x="55.6660%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="55.2590%" y="277" width="0.3140%" height="15" fill="rgb(228,185,46)" fg:x="704" fg:w="4"/><text x="55.5090%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="55.2590%" y="261" width="0.3140%" height="15" fill="rgb(213,196,4)" fg:x="704" fg:w="4"/><text x="55.5090%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.4945%" y="245" width="0.0785%" height="15" fill="rgb(212,2,45)" fg:x="707" fg:w="1"/><text x="55.7445%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.6515%" y="229" width="0.0785%" height="15" fill="rgb(217,145,50)" fg:x="709" fg:w="1"/><text x="55.9015%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (4 samples, 0.31%)</title><rect x="55.5730%" y="277" width="0.3140%" height="15" fill="rgb(242,10,46)" fg:x="708" fg:w="4"/><text x="55.8230%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="55.5730%" y="261" width="0.3140%" height="15" fill="rgb(252,91,48)" fg:x="708" fg:w="4"/><text x="55.8230%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="55.6515%" y="245" width="0.2355%" height="15" fill="rgb(216,72,13)" fg:x="709" fg:w="3"/><text x="55.9015%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.7300%" y="229" width="0.1570%" height="15" fill="rgb(219,6,37)" fg:x="710" fg:w="2"/><text x="55.9800%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.8085%" y="213" width="0.0785%" height="15" fill="rgb(236,185,40)" fg:x="711" fg:w="1"/><text x="56.0585%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.2009%" y="101" width="0.0785%" height="15" fill="rgb(208,81,48)" fg:x="716" fg:w="1"/><text x="56.4509%" y="111.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.2009%" y="85" width="0.0785%" height="15" fill="rgb(211,42,33)" fg:x="716" fg:w="1"/><text x="56.4509%" y="95.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (15 samples, 1.18%)</title><rect x="55.2590%" y="325" width="1.1774%" height="15" fill="rgb(211,90,39)" fg:x="704" fg:w="15"/><text x="55.5090%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (15 samples, 1.18%)</title><rect x="55.2590%" y="309" width="1.1774%" height="15" fill="rgb(218,136,12)" fg:x="704" fg:w="15"/><text x="55.5090%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (15 samples, 1.18%)</title><rect x="55.2590%" y="293" width="1.1774%" height="15" fill="rgb(234,12,32)" fg:x="704" fg:w="15"/><text x="55.5090%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="55.8870%" y="277" width="0.5495%" height="15" fill="rgb(221,164,18)" fg:x="712" fg:w="7"/><text x="56.1370%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="56.0440%" y="261" width="0.3925%" height="15" fill="rgb(239,135,14)" fg:x="714" fg:w="5"/><text x="56.2940%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.39%)</title><rect x="56.0440%" y="245" width="0.3925%" height="15" fill="rgb(226,198,47)" fg:x="714" fg:w="5"/><text x="56.2940%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="56.0440%" y="229" width="0.3925%" height="15" fill="rgb(244,121,47)" fg:x="714" fg:w="5"/><text x="56.2940%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="56.0440%" y="213" width="0.3925%" height="15" fill="rgb(226,21,48)" fg:x="714" fg:w="5"/><text x="56.2940%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (5 samples, 0.39%)</title><rect x="56.0440%" y="197" width="0.3925%" height="15" fill="rgb(215,178,47)" fg:x="714" fg:w="5"/><text x="56.2940%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="56.0440%" y="181" width="0.3925%" height="15" fill="rgb(206,212,19)" fg:x="714" fg:w="5"/><text x="56.2940%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="56.0440%" y="165" width="0.3925%" height="15" fill="rgb(230,104,34)" fg:x="714" fg:w="5"/><text x="56.2940%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="56.1224%" y="149" width="0.3140%" height="15" fill="rgb(210,96,51)" fg:x="715" fg:w="4"/><text x="56.3724%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="56.1224%" y="133" width="0.3140%" height="15" fill="rgb(229,111,47)" fg:x="715" fg:w="4"/><text x="56.3724%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="56.1224%" y="117" width="0.3140%" height="15" fill="rgb(218,174,45)" fg:x="715" fg:w="4"/><text x="56.3724%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.2794%" y="101" width="0.1570%" height="15" fill="rgb(215,21,32)" fg:x="717" fg:w="2"/><text x="56.5294%" y="111.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.2794%" y="85" width="0.1570%" height="15" fill="rgb(235,72,21)" fg:x="717" fg:w="2"/><text x="56.5294%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.2794%" y="69" width="0.1570%" height="15" fill="rgb(250,113,30)" fg:x="717" fg:w="2"/><text x="56.5294%" y="79.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.3579%" y="53" width="0.0785%" height="15" fill="rgb(244,136,34)" fg:x="718" fg:w="1"/><text x="56.6079%" y="63.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.3579%" y="37" width="0.0785%" height="15" fill="rgb(213,226,47)" fg:x="718" fg:w="1"/><text x="56.6079%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (29 samples, 2.28%)</title><rect x="54.2386%" y="373" width="2.2763%" height="15" fill="rgb(224,136,40)" fg:x="691" fg:w="29"/><text x="54.4886%" y="383.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (18 samples, 1.41%)</title><rect x="55.1020%" y="357" width="1.4129%" height="15" fill="rgb(253,124,12)" fg:x="702" fg:w="18"/><text x="55.3520%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (18 samples, 1.41%)</title><rect x="55.1020%" y="341" width="1.4129%" height="15" fill="rgb(210,67,8)" fg:x="702" fg:w="18"/><text x="55.3520%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.4364%" y="325" width="0.0785%" height="15" fill="rgb(210,204,0)" fg:x="719" fg:w="1"/><text x="56.6864%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.4364%" y="309" width="0.0785%" height="15" fill="rgb(217,179,22)" fg:x="719" fg:w="1"/><text x="56.6864%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.4364%" y="293" width="0.0785%" height="15" fill="rgb(237,192,33)" fg:x="719" fg:w="1"/><text x="56.6864%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.4364%" y="277" width="0.0785%" height="15" fill="rgb(211,104,28)" fg:x="719" fg:w="1"/><text x="56.6864%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5149%" y="325" width="0.0785%" height="15" fill="rgb(214,75,30)" fg:x="720" fg:w="1"/><text x="56.7649%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5149%" y="309" width="0.0785%" height="15" fill="rgb(220,227,12)" fg:x="720" fg:w="1"/><text x="56.7649%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5149%" y="293" width="0.0785%" height="15" fill="rgb(233,134,28)" fg:x="720" fg:w="1"/><text x="56.7649%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5149%" y="277" width="0.0785%" height="15" fill="rgb(215,146,24)" fg:x="720" fg:w="1"/><text x="56.7649%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.5149%" y="261" width="0.0785%" height="15" fill="rgb(248,227,20)" fg:x="720" fg:w="1"/><text x="56.7649%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="56.5934%" y="165" width="0.0785%" height="15" fill="rgb(250,44,42)" fg:x="721" fg:w="1"/><text x="56.8434%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.5934%" y="149" width="0.0785%" height="15" fill="rgb(219,5,35)" fg:x="721" fg:w="1"/><text x="56.8434%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="56.5149%" y="373" width="0.2355%" height="15" fill="rgb(241,132,32)" fg:x="720" fg:w="3"/><text x="56.7649%" y="383.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="56.5149%" y="357" width="0.2355%" height="15" fill="rgb(234,212,51)" fg:x="720" fg:w="3"/><text x="56.7649%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="56.5149%" y="341" width="0.2355%" height="15" fill="rgb(242,173,29)" fg:x="720" fg:w="3"/><text x="56.7649%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5934%" y="325" width="0.1570%" height="15" fill="rgb(212,159,2)" fg:x="721" fg:w="2"/><text x="56.8434%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5934%" y="309" width="0.1570%" height="15" fill="rgb(238,165,31)" fg:x="721" fg:w="2"/><text x="56.8434%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5934%" y="293" width="0.1570%" height="15" fill="rgb(241,57,36)" fg:x="721" fg:w="2"/><text x="56.8434%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5934%" y="277" width="0.1570%" height="15" fill="rgb(249,7,4)" fg:x="721" fg:w="2"/><text x="56.8434%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="56.5934%" y="261" width="0.1570%" height="15" fill="rgb(250,137,44)" fg:x="721" fg:w="2"/><text x="56.8434%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5934%" y="245" width="0.1570%" height="15" fill="rgb(244,185,1)" fg:x="721" fg:w="2"/><text x="56.8434%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5934%" y="229" width="0.1570%" height="15" fill="rgb(216,5,53)" fg:x="721" fg:w="2"/><text x="56.8434%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5934%" y="213" width="0.1570%" height="15" fill="rgb(234,89,21)" fg:x="721" fg:w="2"/><text x="56.8434%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="56.5934%" y="197" width="0.1570%" height="15" fill="rgb(250,81,43)" fg:x="721" fg:w="2"/><text x="56.8434%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.5934%" y="181" width="0.1570%" height="15" fill="rgb(243,132,11)" fg:x="721" fg:w="2"/><text x="56.8434%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.6719%" y="165" width="0.0785%" height="15" fill="rgb(253,159,28)" fg:x="722" fg:w="1"/><text x="56.9219%" y="175.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (6 samples, 0.47%)</title><rect x="56.7504%" y="373" width="0.4710%" height="15" fill="rgb(237,167,34)" fg:x="723" fg:w="6"/><text x="57.0004%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.47%)</title><rect x="56.7504%" y="357" width="0.4710%" height="15" fill="rgb(237,16,50)" fg:x="723" fg:w="6"/><text x="57.0004%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.47%)</title><rect x="56.7504%" y="341" width="0.4710%" height="15" fill="rgb(247,125,2)" fg:x="723" fg:w="6"/><text x="57.0004%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.47%)</title><rect x="56.7504%" y="325" width="0.4710%" height="15" fill="rgb(254,35,3)" fg:x="723" fg:w="6"/><text x="57.0004%" y="335.50"></text></g><g><title>__libc_malloc (6 samples, 0.47%)</title><rect x="56.7504%" y="309" width="0.4710%" height="15" fill="rgb(237,209,21)" fg:x="723" fg:w="6"/><text x="57.0004%" y="319.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (50 samples, 3.92%)</title><rect x="53.3752%" y="389" width="3.9246%" height="15" fill="rgb(224,122,20)" fg:x="680" fg:w="50"/><text x="53.6252%" y="399.50">engi..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="57.2214%" y="373" width="0.0785%" height="15" fill="rgb(224,11,46)" fg:x="729" fg:w="1"/><text x="57.4714%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.2214%" y="357" width="0.0785%" height="15" fill="rgb(248,21,33)" fg:x="729" fg:w="1"/><text x="57.4714%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (53 samples, 4.16%)</title><rect x="53.2182%" y="405" width="4.1601%" height="15" fill="rgb(222,144,7)" fg:x="678" fg:w="53"/><text x="53.4682%" y="415.50">&lt;engi..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.2998%" y="389" width="0.0785%" height="15" fill="rgb(205,141,37)" fg:x="730" fg:w="1"/><text x="57.5498%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (55 samples, 4.32%)</title><rect x="53.1397%" y="469" width="4.3171%" height="15" fill="rgb(237,130,8)" fg:x="677" fg:w="55"/><text x="53.3897%" y="479.50">&lt;plug..</text></g><g><title>core::iter::adapters::try_process (54 samples, 4.24%)</title><rect x="53.2182%" y="453" width="4.2386%" height="15" fill="rgb(209,179,39)" fg:x="678" fg:w="54"/><text x="53.4682%" y="463.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 4.24%)</title><rect x="53.2182%" y="437" width="4.2386%" height="15" fill="rgb(207,52,17)" fg:x="678" fg:w="54"/><text x="53.4682%" y="447.50">&lt;allo..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (54 samples, 4.24%)</title><rect x="53.2182%" y="421" width="4.2386%" height="15" fill="rgb(253,158,17)" fg:x="678" fg:w="54"/><text x="53.4682%" y="431.50">&lt;engi..</text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="57.3783%" y="405" width="0.0785%" height="15" fill="rgb(208,19,53)" fg:x="731" fg:w="1"/><text x="57.6283%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3783%" y="389" width="0.0785%" height="15" fill="rgb(233,152,13)" fg:x="731" fg:w="1"/><text x="57.6283%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="57.3783%" y="373" width="0.0785%" height="15" fill="rgb(231,84,1)" fg:x="731" fg:w="1"/><text x="57.6283%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="57.3783%" y="357" width="0.0785%" height="15" fill="rgb(229,142,48)" fg:x="731" fg:w="1"/><text x="57.6283%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="57.3783%" y="341" width="0.0785%" height="15" fill="rgb(248,70,29)" fg:x="731" fg:w="1"/><text x="57.6283%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="57.3783%" y="325" width="0.0785%" height="15" fill="rgb(250,85,7)" fg:x="731" fg:w="1"/><text x="57.6283%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3783%" y="309" width="0.0785%" height="15" fill="rgb(235,140,43)" fg:x="731" fg:w="1"/><text x="57.6283%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="57.3783%" y="293" width="0.0785%" height="15" fill="rgb(216,0,5)" fg:x="731" fg:w="1"/><text x="57.6283%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="57.4568%" y="469" width="0.0785%" height="15" fill="rgb(223,167,29)" fg:x="732" fg:w="1"/><text x="57.7068%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.7708%" y="437" width="0.0785%" height="15" fill="rgb(229,150,33)" fg:x="736" fg:w="1"/><text x="58.0208%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (75 samples, 5.89%)</title><rect x="52.1193%" y="533" width="5.8870%" height="15" fill="rgb(227,26,52)" fg:x="664" fg:w="75"/><text x="52.3693%" y="543.50">plugins..</text></g><g><title>plugins_core::tools::contained_by (69 samples, 5.42%)</title><rect x="52.5903%" y="517" width="5.4160%" height="15" fill="rgb(250,60,52)" fg:x="670" fg:w="69"/><text x="52.8403%" y="527.50">plugins..</text></g><g><title>kernel::model::entry::Entry::scope (63 samples, 4.95%)</title><rect x="53.0612%" y="501" width="4.9451%" height="15" fill="rgb(228,81,46)" fg:x="676" fg:w="63"/><text x="53.3112%" y="511.50">kernel..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (63 samples, 4.95%)</title><rect x="53.0612%" y="485" width="4.9451%" height="15" fill="rgb(225,218,31)" fg:x="676" fg:w="63"/><text x="53.3112%" y="495.50">kernel..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="57.5353%" y="469" width="0.4710%" height="15" fill="rgb(230,35,16)" fg:x="733" fg:w="6"/><text x="57.7853%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="57.5353%" y="453" width="0.4710%" height="15" fill="rgb(247,100,0)" fg:x="733" fg:w="6"/><text x="57.7853%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="57.8493%" y="437" width="0.1570%" height="15" fill="rgb(223,135,11)" fg:x="737" fg:w="2"/><text x="58.0993%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="57.8493%" y="421" width="0.1570%" height="15" fill="rgb(207,136,0)" fg:x="737" fg:w="2"/><text x="58.0993%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="57.8493%" y="405" width="0.1570%" height="15" fill="rgb(246,131,25)" fg:x="737" fg:w="2"/><text x="58.0993%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.9278%" y="389" width="0.0785%" height="15" fill="rgb(209,47,12)" fg:x="738" fg:w="1"/><text x="58.1778%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.9278%" y="373" width="0.0785%" height="15" fill="rgb(221,25,16)" fg:x="738" fg:w="1"/><text x="58.1778%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0848%" y="501" width="0.0785%" height="15" fill="rgb(223,164,33)" fg:x="740" fg:w="1"/><text x="58.3348%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0848%" y="485" width="0.0785%" height="15" fill="rgb(220,26,23)" fg:x="740" fg:w="1"/><text x="58.3348%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.0848%" y="469" width="0.0785%" height="15" fill="rgb(231,224,1)" fg:x="740" fg:w="1"/><text x="58.3348%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.0848%" y="453" width="0.0785%" height="15" fill="rgb(229,221,24)" fg:x="740" fg:w="1"/><text x="58.3348%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.0848%" y="437" width="0.0785%" height="15" fill="rgb(213,34,10)" fg:x="740" fg:w="1"/><text x="58.3348%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.0848%" y="421" width="0.0785%" height="15" fill="rgb(215,33,11)" fg:x="740" fg:w="1"/><text x="58.3348%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0848%" y="405" width="0.0785%" height="15" fill="rgb(216,20,41)" fg:x="740" fg:w="1"/><text x="58.3348%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.0848%" y="389" width="0.0785%" height="15" fill="rgb(228,43,31)" fg:x="740" fg:w="1"/><text x="58.3348%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.0848%" y="373" width="0.0785%" height="15" fill="rgb(227,83,26)" fg:x="740" fg:w="1"/><text x="58.3348%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.0848%" y="357" width="0.0785%" height="15" fill="rgb(217,168,19)" fg:x="740" fg:w="1"/><text x="58.3348%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.0848%" y="341" width="0.0785%" height="15" fill="rgb(231,34,33)" fg:x="740" fg:w="1"/><text x="58.3348%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.0848%" y="325" width="0.0785%" height="15" fill="rgb(230,120,51)" fg:x="740" fg:w="1"/><text x="58.3348%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.0848%" y="309" width="0.0785%" height="15" fill="rgb(215,138,27)" fg:x="740" fg:w="1"/><text x="58.3348%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.0848%" y="517" width="0.1570%" height="15" fill="rgb(246,80,47)" fg:x="740" fg:w="2"/><text x="58.3348%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1633%" y="501" width="0.0785%" height="15" fill="rgb(215,57,53)" fg:x="741" fg:w="1"/><text x="58.4133%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3203%" y="453" width="0.0785%" height="15" fill="rgb(229,137,5)" fg:x="743" fg:w="1"/><text x="58.5703%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="58.3987%" y="453" width="0.0785%" height="15" fill="rgb(210,86,2)" fg:x="744" fg:w="1"/><text x="58.6487%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.3987%" y="437" width="0.0785%" height="15" fill="rgb(231,226,51)" fg:x="744" fg:w="1"/><text x="58.6487%" y="447.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="58.4772%" y="453" width="0.0785%" height="15" fill="rgb(216,62,29)" fg:x="745" fg:w="1"/><text x="58.7272%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7912%" y="373" width="0.0785%" height="15" fill="rgb(248,202,3)" fg:x="749" fg:w="1"/><text x="59.0412%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7912%" y="357" width="0.0785%" height="15" fill="rgb(225,181,7)" fg:x="749" fg:w="1"/><text x="59.0412%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7912%" y="341" width="0.0785%" height="15" fill="rgb(247,170,54)" fg:x="749" fg:w="1"/><text x="59.0412%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.7912%" y="325" width="0.0785%" height="15" fill="rgb(236,204,33)" fg:x="749" fg:w="1"/><text x="59.0412%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.7912%" y="309" width="0.0785%" height="15" fill="rgb(216,45,30)" fg:x="749" fg:w="1"/><text x="59.0412%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.7912%" y="293" width="0.0785%" height="15" fill="rgb(213,203,16)" fg:x="749" fg:w="1"/><text x="59.0412%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7912%" y="277" width="0.0785%" height="15" fill="rgb(215,46,16)" fg:x="749" fg:w="1"/><text x="59.0412%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.7912%" y="261" width="0.0785%" height="15" fill="rgb(217,162,46)" fg:x="749" fg:w="1"/><text x="59.0412%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.7912%" y="245" width="0.0785%" height="15" fill="rgb(224,189,20)" fg:x="749" fg:w="1"/><text x="59.0412%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.7912%" y="229" width="0.0785%" height="15" fill="rgb(232,35,51)" fg:x="749" fg:w="1"/><text x="59.0412%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.7912%" y="213" width="0.0785%" height="15" fill="rgb(243,221,46)" fg:x="749" fg:w="1"/><text x="59.0412%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.7912%" y="197" width="0.0785%" height="15" fill="rgb(248,16,16)" fg:x="749" fg:w="1"/><text x="59.0412%" y="207.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="58.7912%" y="181" width="0.0785%" height="15" fill="rgb(220,168,13)" fg:x="749" fg:w="1"/><text x="59.0412%" y="191.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="58.7912%" y="165" width="0.0785%" height="15" fill="rgb(243,102,39)" fg:x="749" fg:w="1"/><text x="59.0412%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="58.6342%" y="421" width="0.3140%" height="15" fill="rgb(245,82,32)" fg:x="747" fg:w="4"/><text x="58.8842%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.7127%" y="405" width="0.2355%" height="15" fill="rgb(230,164,19)" fg:x="748" fg:w="3"/><text x="58.9627%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="58.7127%" y="389" width="0.2355%" height="15" fill="rgb(221,9,41)" fg:x="748" fg:w="3"/><text x="58.9627%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8697%" y="373" width="0.0785%" height="15" fill="rgb(216,93,0)" fg:x="750" fg:w="1"/><text x="59.1197%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.8697%" y="357" width="0.0785%" height="15" fill="rgb(235,113,9)" fg:x="750" fg:w="1"/><text x="59.1197%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="58.8697%" y="341" width="0.0785%" height="15" fill="rgb(209,224,10)" fg:x="750" fg:w="1"/><text x="59.1197%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="58.8697%" y="325" width="0.0785%" height="15" fill="rgb(226,54,34)" fg:x="750" fg:w="1"/><text x="59.1197%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="58.8697%" y="309" width="0.0785%" height="15" fill="rgb(222,60,8)" fg:x="750" fg:w="1"/><text x="59.1197%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8697%" y="293" width="0.0785%" height="15" fill="rgb(248,228,41)" fg:x="750" fg:w="1"/><text x="59.1197%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="58.8697%" y="277" width="0.0785%" height="15" fill="rgb(226,31,32)" fg:x="750" fg:w="1"/><text x="59.1197%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="58.8697%" y="261" width="0.0785%" height="15" fill="rgb(242,132,49)" fg:x="750" fg:w="1"/><text x="59.1197%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="58.8697%" y="245" width="0.0785%" height="15" fill="rgb(224,194,19)" fg:x="750" fg:w="1"/><text x="59.1197%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="58.8697%" y="229" width="0.0785%" height="15" fill="rgb(232,200,51)" fg:x="750" fg:w="1"/><text x="59.1197%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="58.8697%" y="213" width="0.0785%" height="15" fill="rgb(235,60,46)" fg:x="750" fg:w="1"/><text x="59.1197%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.8697%" y="197" width="0.0785%" height="15" fill="rgb(240,109,52)" fg:x="750" fg:w="1"/><text x="59.1197%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.9482%" y="421" width="0.0785%" height="15" fill="rgb(215,78,37)" fg:x="751" fg:w="1"/><text x="59.1982%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="421" width="0.0785%" height="15" fill="rgb(225,141,7)" fg:x="752" fg:w="1"/><text x="59.2767%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="405" width="0.0785%" height="15" fill="rgb(216,102,54)" fg:x="752" fg:w="1"/><text x="59.2767%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="389" width="0.0785%" height="15" fill="rgb(238,143,13)" fg:x="752" fg:w="1"/><text x="59.2767%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="373" width="0.0785%" height="15" fill="rgb(219,45,51)" fg:x="752" fg:w="1"/><text x="59.2767%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="357" width="0.0785%" height="15" fill="rgb(242,105,46)" fg:x="752" fg:w="1"/><text x="59.2767%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="341" width="0.0785%" height="15" fill="rgb(206,154,49)" fg:x="752" fg:w="1"/><text x="59.2767%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="325" width="0.0785%" height="15" fill="rgb(239,215,4)" fg:x="752" fg:w="1"/><text x="59.2767%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="59.0267%" y="309" width="0.0785%" height="15" fill="rgb(238,82,17)" fg:x="752" fg:w="1"/><text x="59.2767%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (13 samples, 1.02%)</title><rect x="58.3203%" y="485" width="1.0204%" height="15" fill="rgb(242,49,30)" fg:x="743" fg:w="13"/><text x="58.5703%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (13 samples, 1.02%)</title><rect x="58.3203%" y="469" width="1.0204%" height="15" fill="rgb(248,5,16)" fg:x="743" fg:w="13"/><text x="58.5703%" y="479.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.78%)</title><rect x="58.5557%" y="453" width="0.7849%" height="15" fill="rgb(237,138,32)" fg:x="746" fg:w="10"/><text x="58.8057%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.78%)</title><rect x="58.5557%" y="437" width="0.7849%" height="15" fill="rgb(235,79,45)" fg:x="746" fg:w="10"/><text x="58.8057%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.1052%" y="421" width="0.2355%" height="15" fill="rgb(213,105,25)" fg:x="753" fg:w="3"/><text x="59.3552%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.1052%" y="405" width="0.2355%" height="15" fill="rgb(251,131,7)" fg:x="753" fg:w="3"/><text x="59.3552%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="59.1052%" y="389" width="0.2355%" height="15" fill="rgb(211,155,7)" fg:x="753" fg:w="3"/><text x="59.3552%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.1052%" y="373" width="0.2355%" height="15" fill="rgb(243,70,15)" fg:x="753" fg:w="3"/><text x="59.3552%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="59.1052%" y="357" width="0.2355%" height="15" fill="rgb(215,171,2)" fg:x="753" fg:w="3"/><text x="59.3552%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="59.1052%" y="341" width="0.2355%" height="15" fill="rgb(244,121,35)" fg:x="753" fg:w="3"/><text x="59.3552%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.2622%" y="325" width="0.0785%" height="15" fill="rgb(249,147,17)" fg:x="755" fg:w="1"/><text x="59.5122%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2622%" y="309" width="0.0785%" height="15" fill="rgb(241,193,52)" fg:x="755" fg:w="1"/><text x="59.5122%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="59.2622%" y="293" width="0.0785%" height="15" fill="rgb(217,159,39)" fg:x="755" fg:w="1"/><text x="59.5122%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.2622%" y="277" width="0.0785%" height="15" fill="rgb(248,110,0)" fg:x="755" fg:w="1"/><text x="59.5122%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="59.2622%" y="261" width="0.0785%" height="15" fill="rgb(233,227,0)" fg:x="755" fg:w="1"/><text x="59.5122%" y="271.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="59.2622%" y="245" width="0.0785%" height="15" fill="rgb(252,55,2)" fg:x="755" fg:w="1"/><text x="59.5122%" y="255.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="59.2622%" y="229" width="0.0785%" height="15" fill="rgb(224,194,24)" fg:x="755" fg:w="1"/><text x="59.5122%" y="239.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="59.3407%" y="453" width="0.0785%" height="15" fill="rgb(247,5,33)" fg:x="756" fg:w="1"/><text x="59.5907%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="59.3407%" y="437" width="0.0785%" height="15" fill="rgb(242,66,47)" fg:x="756" fg:w="1"/><text x="59.5907%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3407%" y="421" width="0.0785%" height="15" fill="rgb(213,107,12)" fg:x="756" fg:w="1"/><text x="59.5907%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.3407%" y="405" width="0.0785%" height="15" fill="rgb(206,131,1)" fg:x="756" fg:w="1"/><text x="59.5907%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.3407%" y="389" width="0.0785%" height="15" fill="rgb(214,9,36)" fg:x="756" fg:w="1"/><text x="59.5907%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.3407%" y="373" width="0.0785%" height="15" fill="rgb(251,215,18)" fg:x="756" fg:w="1"/><text x="59.5907%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.3407%" y="357" width="0.0785%" height="15" fill="rgb(251,64,9)" fg:x="756" fg:w="1"/><text x="59.5907%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.3407%" y="341" width="0.0785%" height="15" fill="rgb(235,68,21)" fg:x="756" fg:w="1"/><text x="59.5907%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.3407%" y="325" width="0.0785%" height="15" fill="rgb(240,69,38)" fg:x="756" fg:w="1"/><text x="59.5907%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (19 samples, 1.49%)</title><rect x="58.0063%" y="533" width="1.4914%" height="15" fill="rgb(231,18,27)" fg:x="739" fg:w="19"/><text x="58.2563%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (16 samples, 1.26%)</title><rect x="58.2418%" y="517" width="1.2559%" height="15" fill="rgb(215,154,25)" fg:x="742" fg:w="16"/><text x="58.4918%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (16 samples, 1.26%)</title><rect x="58.2418%" y="501" width="1.2559%" height="15" fill="rgb(224,33,46)" fg:x="742" fg:w="16"/><text x="58.4918%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (2 samples, 0.16%)</title><rect x="59.3407%" y="485" width="0.1570%" height="15" fill="rgb(248,191,53)" fg:x="756" fg:w="2"/><text x="59.5907%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="59.3407%" y="469" width="0.1570%" height="15" fill="rgb(231,3,37)" fg:x="756" fg:w="2"/><text x="59.5907%" y="479.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_lower (1 samples, 0.08%)</title><rect x="59.4192%" y="453" width="0.0785%" height="15" fill="rgb(209,152,2)" fg:x="757" fg:w="1"/><text x="59.6692%" y="463.50"></text></g><g><title>core::num::&lt;impl u8&gt;::to_ascii_lowercase (1 samples, 0.08%)</title><rect x="59.4192%" y="437" width="0.0785%" height="15" fill="rgb(212,208,43)" fg:x="757" fg:w="1"/><text x="59.6692%" y="447.50"></text></g><g><title>core::num::&lt;impl u8&gt;::is_ascii_uppercase (1 samples, 0.08%)</title><rect x="59.4192%" y="421" width="0.0785%" height="15" fill="rgb(208,60,49)" fg:x="757" fg:w="1"/><text x="59.6692%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (99 samples, 7.77%)</title><rect x="51.8053%" y="565" width="7.7708%" height="15" fill="rgb(245,135,6)" fg:x="660" fg:w="99"/><text x="52.0553%" y="575.50">&lt;engine::se..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (99 samples, 7.77%)</title><rect x="51.8053%" y="549" width="7.7708%" height="15" fill="rgb(243,86,23)" fg:x="660" fg:w="99"/><text x="52.0553%" y="559.50">&lt;plugins_co..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="59.4976%" y="533" width="0.0785%" height="15" fill="rgb(223,7,20)" fg:x="758" fg:w="1"/><text x="59.7476%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4976%" y="517" width="0.0785%" height="15" fill="rgb(212,182,17)" fg:x="758" fg:w="1"/><text x="59.7476%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4976%" y="501" width="0.0785%" height="15" fill="rgb(237,94,50)" fg:x="758" fg:w="1"/><text x="59.7476%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.4976%" y="485" width="0.0785%" height="15" fill="rgb(232,185,44)" fg:x="758" fg:w="1"/><text x="59.7476%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.4976%" y="469" width="0.0785%" height="15" fill="rgb(205,50,36)" fg:x="758" fg:w="1"/><text x="59.7476%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.4976%" y="453" width="0.0785%" height="15" fill="rgb(252,32,32)" fg:x="758" fg:w="1"/><text x="59.7476%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.4976%" y="437" width="0.0785%" height="15" fill="rgb(241,123,33)" fg:x="758" fg:w="1"/><text x="59.7476%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4976%" y="421" width="0.0785%" height="15" fill="rgb(212,140,16)" fg:x="758" fg:w="1"/><text x="59.7476%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.4976%" y="405" width="0.0785%" height="15" fill="rgb(247,132,5)" fg:x="758" fg:w="1"/><text x="59.7476%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.4976%" y="389" width="0.0785%" height="15" fill="rgb(209,137,38)" fg:x="758" fg:w="1"/><text x="59.7476%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.4976%" y="373" width="0.0785%" height="15" fill="rgb(248,32,42)" fg:x="758" fg:w="1"/><text x="59.7476%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.4976%" y="357" width="0.0785%" height="15" fill="rgb(216,188,40)" fg:x="758" fg:w="1"/><text x="59.7476%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.4976%" y="341" width="0.0785%" height="15" fill="rgb(209,127,53)" fg:x="758" fg:w="1"/><text x="59.7476%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4976%" y="325" width="0.0785%" height="15" fill="rgb(254,162,9)" fg:x="758" fg:w="1"/><text x="59.7476%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.5761%" y="533" width="0.0785%" height="15" fill="rgb(219,183,10)" fg:x="759" fg:w="1"/><text x="59.8261%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.5761%" y="517" width="0.0785%" height="15" fill="rgb(217,192,21)" fg:x="759" fg:w="1"/><text x="59.8261%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.5761%" y="501" width="0.0785%" height="15" fill="rgb(251,89,27)" fg:x="759" fg:w="1"/><text x="59.8261%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.7331%" y="437" width="0.0785%" height="15" fill="rgb(253,55,28)" fg:x="761" fg:w="1"/><text x="59.9831%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8116%" y="437" width="0.0785%" height="15" fill="rgb(216,159,8)" fg:x="762" fg:w="1"/><text x="60.0616%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.8116%" y="421" width="0.0785%" height="15" fill="rgb(231,228,44)" fg:x="762" fg:w="1"/><text x="60.0616%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.8116%" y="405" width="0.0785%" height="15" fill="rgb(247,34,48)" fg:x="762" fg:w="1"/><text x="60.0616%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.8116%" y="389" width="0.0785%" height="15" fill="rgb(247,222,18)" fg:x="762" fg:w="1"/><text x="60.0616%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.8116%" y="373" width="0.0785%" height="15" fill="rgb(227,49,4)" fg:x="762" fg:w="1"/><text x="60.0616%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8116%" y="357" width="0.0785%" height="15" fill="rgb(219,189,53)" fg:x="762" fg:w="1"/><text x="60.0616%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.8116%" y="341" width="0.0785%" height="15" fill="rgb(241,160,53)" fg:x="762" fg:w="1"/><text x="60.0616%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.8116%" y="325" width="0.0785%" height="15" fill="rgb(227,115,4)" fg:x="762" fg:w="1"/><text x="60.0616%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.8116%" y="309" width="0.0785%" height="15" fill="rgb(215,28,28)" fg:x="762" fg:w="1"/><text x="60.0616%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.8116%" y="293" width="0.0785%" height="15" fill="rgb(237,143,40)" fg:x="762" fg:w="1"/><text x="60.0616%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.8116%" y="277" width="0.0785%" height="15" fill="rgb(205,107,24)" fg:x="762" fg:w="1"/><text x="60.0616%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8116%" y="261" width="0.0785%" height="15" fill="rgb(209,112,35)" fg:x="762" fg:w="1"/><text x="60.0616%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="59.6546%" y="485" width="0.3140%" height="15" fill="rgb(206,135,5)" fg:x="760" fg:w="4"/><text x="59.9046%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="59.6546%" y="469" width="0.3140%" height="15" fill="rgb(227,217,38)" fg:x="760" fg:w="4"/><text x="59.9046%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.7331%" y="453" width="0.2355%" height="15" fill="rgb(205,0,41)" fg:x="761" fg:w="3"/><text x="59.9831%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.8901%" y="437" width="0.0785%" height="15" fill="rgb(220,20,40)" fg:x="763" fg:w="1"/><text x="60.1401%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="59.6546%" y="501" width="0.3925%" height="15" fill="rgb(216,145,3)" fg:x="760" fg:w="5"/><text x="59.9046%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.9686%" y="485" width="0.0785%" height="15" fill="rgb(207,130,51)" fg:x="764" fg:w="1"/><text x="60.2186%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2041%" y="405" width="0.0785%" height="15" fill="rgb(252,93,13)" fg:x="767" fg:w="1"/><text x="60.4541%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2041%" y="389" width="0.0785%" height="15" fill="rgb(210,105,15)" fg:x="767" fg:w="1"/><text x="60.4541%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.2041%" y="373" width="0.0785%" height="15" fill="rgb(212,126,31)" fg:x="767" fg:w="1"/><text x="60.4541%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.2041%" y="357" width="0.0785%" height="15" fill="rgb(241,167,46)" fg:x="767" fg:w="1"/><text x="60.4541%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.2041%" y="341" width="0.0785%" height="15" fill="rgb(217,143,19)" fg:x="767" fg:w="1"/><text x="60.4541%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (10 samples, 0.78%)</title><rect x="59.5761%" y="549" width="0.7849%" height="15" fill="rgb(235,117,33)" fg:x="759" fg:w="10"/><text x="59.8261%" y="559.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.71%)</title><rect x="59.6546%" y="533" width="0.7064%" height="15" fill="rgb(247,95,6)" fg:x="760" fg:w="9"/><text x="59.9046%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.71%)</title><rect x="59.6546%" y="517" width="0.7064%" height="15" fill="rgb(243,206,43)" fg:x="760" fg:w="9"/><text x="59.9046%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="60.0471%" y="501" width="0.3140%" height="15" fill="rgb(229,65,54)" fg:x="765" fg:w="4"/><text x="60.2971%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="60.0471%" y="485" width="0.3140%" height="15" fill="rgb(247,137,34)" fg:x="765" fg:w="4"/><text x="60.2971%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="60.1256%" y="469" width="0.2355%" height="15" fill="rgb(245,174,44)" fg:x="766" fg:w="3"/><text x="60.3756%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.1256%" y="453" width="0.2355%" height="15" fill="rgb(223,64,15)" fg:x="766" fg:w="3"/><text x="60.3756%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="60.1256%" y="437" width="0.2355%" height="15" fill="rgb(243,153,36)" fg:x="766" fg:w="3"/><text x="60.3756%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="60.1256%" y="421" width="0.2355%" height="15" fill="rgb(252,23,4)" fg:x="766" fg:w="3"/><text x="60.3756%" y="431.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="60.2826%" y="405" width="0.0785%" height="15" fill="rgb(209,132,13)" fg:x="768" fg:w="1"/><text x="60.5326%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.5181%" y="437" width="0.2355%" height="15" fill="rgb(209,196,21)" fg:x="771" fg:w="3"/><text x="60.7681%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="60.5181%" y="421" width="0.2355%" height="15" fill="rgb(252,197,1)" fg:x="771" fg:w="3"/><text x="60.7681%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="60.5181%" y="405" width="0.2355%" height="15" fill="rgb(229,42,46)" fg:x="771" fg:w="3"/><text x="60.7681%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="60.5181%" y="389" width="0.2355%" height="15" fill="rgb(219,85,8)" fg:x="771" fg:w="3"/><text x="60.7681%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="60.5181%" y="373" width="0.2355%" height="15" fill="rgb(223,185,14)" fg:x="771" fg:w="3"/><text x="60.7681%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="60.5181%" y="357" width="0.2355%" height="15" fill="rgb(217,196,18)" fg:x="771" fg:w="3"/><text x="60.7681%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="60.5181%" y="341" width="0.2355%" height="15" fill="rgb(220,122,37)" fg:x="771" fg:w="3"/><text x="60.7681%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="60.5181%" y="325" width="0.2355%" height="15" fill="rgb(236,135,33)" fg:x="771" fg:w="3"/><text x="60.7681%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="60.5181%" y="309" width="0.2355%" height="15" fill="rgb(222,86,54)" fg:x="771" fg:w="3"/><text x="60.7681%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="60.5181%" y="293" width="0.2355%" height="15" fill="rgb(227,42,22)" fg:x="771" fg:w="3"/><text x="60.7681%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="60.5181%" y="277" width="0.2355%" height="15" fill="rgb(243,101,27)" fg:x="771" fg:w="3"/><text x="60.7681%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="60.5181%" y="261" width="0.2355%" height="15" fill="rgb(229,100,8)" fg:x="771" fg:w="3"/><text x="60.7681%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="60.5181%" y="501" width="0.3925%" height="15" fill="rgb(252,68,10)" fg:x="771" fg:w="5"/><text x="60.7681%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="60.5181%" y="485" width="0.3925%" height="15" fill="rgb(219,19,31)" fg:x="771" fg:w="5"/><text x="60.7681%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="60.5181%" y="469" width="0.3925%" height="15" fill="rgb(246,150,44)" fg:x="771" fg:w="5"/><text x="60.7681%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="60.5181%" y="453" width="0.3925%" height="15" fill="rgb(211,14,39)" fg:x="771" fg:w="5"/><text x="60.7681%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.7535%" y="437" width="0.1570%" height="15" fill="rgb(221,98,29)" fg:x="774" fg:w="2"/><text x="61.0035%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.9105%" y="501" width="0.0785%" height="15" fill="rgb(221,70,26)" fg:x="776" fg:w="1"/><text x="61.1605%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.9890%" y="469" width="0.0785%" height="15" fill="rgb(236,146,30)" fg:x="777" fg:w="1"/><text x="61.2390%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9890%" y="453" width="0.0785%" height="15" fill="rgb(226,94,34)" fg:x="777" fg:w="1"/><text x="61.2390%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="60.9890%" y="501" width="0.1570%" height="15" fill="rgb(248,132,21)" fg:x="777" fg:w="2"/><text x="61.2390%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="60.9890%" y="485" width="0.1570%" height="15" fill="rgb(245,43,50)" fg:x="777" fg:w="2"/><text x="61.2390%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.0675%" y="469" width="0.0785%" height="15" fill="rgb(245,132,31)" fg:x="778" fg:w="1"/><text x="61.3175%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="61.0675%" y="453" width="0.0785%" height="15" fill="rgb(230,171,4)" fg:x="778" fg:w="1"/><text x="61.3175%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.0675%" y="437" width="0.0785%" height="15" fill="rgb(235,6,45)" fg:x="778" fg:w="1"/><text x="61.3175%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.0675%" y="421" width="0.0785%" height="15" fill="rgb(220,80,28)" fg:x="778" fg:w="1"/><text x="61.3175%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="61.1460%" y="501" width="0.0785%" height="15" fill="rgb(242,171,9)" fg:x="779" fg:w="1"/><text x="61.3960%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3815%" y="373" width="0.0785%" height="15" fill="rgb(214,135,29)" fg:x="782" fg:w="1"/><text x="61.6315%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.4600%" y="341" width="0.0785%" height="15" fill="rgb(221,229,16)" fg:x="783" fg:w="1"/><text x="61.7100%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5385%" y="341" width="0.0785%" height="15" fill="rgb(253,59,46)" fg:x="784" fg:w="1"/><text x="61.7885%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="61.6170%" y="341" width="0.0785%" height="15" fill="rgb(250,147,20)" fg:x="785" fg:w="1"/><text x="61.8670%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (28 samples, 2.20%)</title><rect x="59.5761%" y="565" width="2.1978%" height="15" fill="rgb(236,64,48)" fg:x="759" fg:w="28"/><text x="59.8261%" y="575.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (18 samples, 1.41%)</title><rect x="60.3611%" y="549" width="1.4129%" height="15" fill="rgb(240,37,42)" fg:x="769" fg:w="18"/><text x="60.6111%" y="559.50"></text></g><g><title>kernel::model::props::load_props (18 samples, 1.41%)</title><rect x="60.3611%" y="533" width="1.4129%" height="15" fill="rgb(220,41,50)" fg:x="769" fg:w="18"/><text x="60.6111%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (18 samples, 1.41%)</title><rect x="60.3611%" y="517" width="1.4129%" height="15" fill="rgb(216,51,14)" fg:x="769" fg:w="18"/><text x="60.6111%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="61.2245%" y="501" width="0.5495%" height="15" fill="rgb(215,83,10)" fg:x="780" fg:w="7"/><text x="61.4745%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="61.2245%" y="485" width="0.5495%" height="15" fill="rgb(206,144,17)" fg:x="780" fg:w="7"/><text x="61.4745%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="61.2245%" y="469" width="0.5495%" height="15" fill="rgb(219,196,37)" fg:x="780" fg:w="7"/><text x="61.4745%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="61.2245%" y="453" width="0.5495%" height="15" fill="rgb(226,135,26)" fg:x="780" fg:w="7"/><text x="61.4745%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (7 samples, 0.55%)</title><rect x="61.2245%" y="437" width="0.5495%" height="15" fill="rgb(237,195,40)" fg:x="780" fg:w="7"/><text x="61.4745%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="61.3030%" y="421" width="0.4710%" height="15" fill="rgb(228,182,42)" fg:x="781" fg:w="6"/><text x="61.5530%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="61.3030%" y="405" width="0.4710%" height="15" fill="rgb(224,135,50)" fg:x="781" fg:w="6"/><text x="61.5530%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="61.3030%" y="389" width="0.4710%" height="15" fill="rgb(236,215,34)" fg:x="781" fg:w="6"/><text x="61.5530%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="61.4600%" y="373" width="0.3140%" height="15" fill="rgb(244,213,27)" fg:x="783" fg:w="4"/><text x="61.7100%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="61.4600%" y="357" width="0.3140%" height="15" fill="rgb(233,37,53)" fg:x="783" fg:w="4"/><text x="61.7100%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="61.6954%" y="341" width="0.0785%" height="15" fill="rgb(222,132,14)" fg:x="786" fg:w="1"/><text x="61.9454%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.7739%" y="453" width="0.1570%" height="15" fill="rgb(219,202,29)" fg:x="787" fg:w="2"/><text x="62.0239%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.7739%" y="437" width="0.1570%" height="15" fill="rgb(226,157,39)" fg:x="787" fg:w="2"/><text x="62.0239%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="61.7739%" y="421" width="0.1570%" height="15" fill="rgb(235,213,2)" fg:x="787" fg:w="2"/><text x="62.0239%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="61.7739%" y="405" width="0.1570%" height="15" fill="rgb(250,121,2)" fg:x="787" fg:w="2"/><text x="62.0239%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="61.7739%" y="389" width="0.1570%" height="15" fill="rgb(206,192,33)" fg:x="787" fg:w="2"/><text x="62.0239%" y="399.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="61.7739%" y="373" width="0.1570%" height="15" fill="rgb(240,161,6)" fg:x="787" fg:w="2"/><text x="62.0239%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.8524%" y="357" width="0.0785%" height="15" fill="rgb(246,53,30)" fg:x="788" fg:w="1"/><text x="62.1024%" y="367.50"></text></g><g><title>kernel::surround::Surroundings::unpack (4 samples, 0.31%)</title><rect x="61.7739%" y="565" width="0.3140%" height="15" fill="rgb(219,123,43)" fg:x="787" fg:w="4"/><text x="62.0239%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="61.7739%" y="549" width="0.3140%" height="15" fill="rgb(236,53,49)" fg:x="787" fg:w="4"/><text x="62.0239%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="61.7739%" y="533" width="0.3140%" height="15" fill="rgb(241,156,1)" fg:x="787" fg:w="4"/><text x="62.0239%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="61.7739%" y="517" width="0.3140%" height="15" fill="rgb(209,73,26)" fg:x="787" fg:w="4"/><text x="62.0239%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.31%)</title><rect x="61.7739%" y="501" width="0.3140%" height="15" fill="rgb(206,114,3)" fg:x="787" fg:w="4"/><text x="62.0239%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="61.7739%" y="485" width="0.3140%" height="15" fill="rgb(230,214,9)" fg:x="787" fg:w="4"/><text x="62.0239%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.31%)</title><rect x="61.7739%" y="469" width="0.3140%" height="15" fill="rgb(240,184,46)" fg:x="787" fg:w="4"/><text x="62.0239%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="61.9309%" y="453" width="0.1570%" height="15" fill="rgb(242,169,54)" fg:x="789" fg:w="2"/><text x="62.1809%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="61.9309%" y="437" width="0.1570%" height="15" fill="rgb(207,168,50)" fg:x="789" fg:w="2"/><text x="62.1809%" y="447.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="62.0879%" y="565" width="0.0785%" height="15" fill="rgb(240,114,2)" fg:x="791" fg:w="1"/><text x="62.3379%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="62.0879%" y="549" width="0.0785%" height="15" fill="rgb(211,17,40)" fg:x="791" fg:w="1"/><text x="62.3379%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="62.0879%" y="533" width="0.0785%" height="15" fill="rgb(235,97,36)" fg:x="791" fg:w="1"/><text x="62.3379%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="62.0879%" y="517" width="0.0785%" height="15" fill="rgb(208,164,11)" fg:x="791" fg:w="1"/><text x="62.3379%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="62.0879%" y="501" width="0.0785%" height="15" fill="rgb(242,11,17)" fg:x="791" fg:w="1"/><text x="62.3379%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="62.0879%" y="485" width="0.0785%" height="15" fill="rgb(215,86,33)" fg:x="791" fg:w="1"/><text x="62.3379%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.2449%" y="549" width="0.0785%" height="15" fill="rgb(245,185,28)" fg:x="793" fg:w="1"/><text x="62.4949%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="62.3234%" y="549" width="0.1570%" height="15" fill="rgb(231,89,42)" fg:x="794" fg:w="2"/><text x="62.5734%" y="559.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="62.4804%" y="501" width="0.0785%" height="15" fill="rgb(210,18,47)" fg:x="796" fg:w="1"/><text x="62.7304%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.4804%" y="485" width="0.0785%" height="15" fill="rgb(214,84,8)" fg:x="796" fg:w="1"/><text x="62.7304%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="62.4804%" y="469" width="0.0785%" height="15" fill="rgb(214,222,23)" fg:x="796" fg:w="1"/><text x="62.7304%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.5589%" y="469" width="0.1570%" height="15" fill="rgb(213,104,21)" fg:x="797" fg:w="2"/><text x="62.8089%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.5589%" y="453" width="0.1570%" height="15" fill="rgb(238,138,6)" fg:x="797" fg:w="2"/><text x="62.8089%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.5589%" y="437" width="0.1570%" height="15" fill="rgb(205,167,50)" fg:x="797" fg:w="2"/><text x="62.8089%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.5589%" y="421" width="0.1570%" height="15" fill="rgb(230,105,27)" fg:x="797" fg:w="2"/><text x="62.8089%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.6374%" y="405" width="0.0785%" height="15" fill="rgb(222,97,48)" fg:x="798" fg:w="1"/><text x="62.8874%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.6374%" y="389" width="0.0785%" height="15" fill="rgb(222,197,14)" fg:x="798" fg:w="1"/><text x="62.8874%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7159%" y="469" width="0.0785%" height="15" fill="rgb(210,105,47)" fg:x="799" fg:w="1"/><text x="62.9659%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="62.7159%" y="453" width="0.0785%" height="15" fill="rgb(238,158,19)" fg:x="799" fg:w="1"/><text x="62.9659%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7159%" y="437" width="0.0785%" height="15" fill="rgb(226,176,23)" fg:x="799" fg:w="1"/><text x="62.9659%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="62.7159%" y="421" width="0.0785%" height="15" fill="rgb(208,79,31)" fg:x="799" fg:w="1"/><text x="62.9659%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7159%" y="405" width="0.0785%" height="15" fill="rgb(221,154,21)" fg:x="799" fg:w="1"/><text x="62.9659%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="62.4804%" y="517" width="0.3925%" height="15" fill="rgb(213,61,41)" fg:x="796" fg:w="5"/><text x="62.7304%" y="527.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="62.5589%" y="501" width="0.3140%" height="15" fill="rgb(215,28,33)" fg:x="797" fg:w="4"/><text x="62.8089%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="62.5589%" y="485" width="0.3140%" height="15" fill="rgb(231,139,26)" fg:x="797" fg:w="4"/><text x="62.8089%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7943%" y="469" width="0.0785%" height="15" fill="rgb(232,159,16)" fg:x="800" fg:w="1"/><text x="63.0443%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7943%" y="453" width="0.0785%" height="15" fill="rgb(233,80,10)" fg:x="800" fg:w="1"/><text x="63.0443%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7943%" y="437" width="0.0785%" height="15" fill="rgb(208,147,29)" fg:x="800" fg:w="1"/><text x="63.0443%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7943%" y="421" width="0.0785%" height="15" fill="rgb(213,10,12)" fg:x="800" fg:w="1"/><text x="63.0443%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="62.7943%" y="405" width="0.0785%" height="15" fill="rgb(231,218,13)" fg:x="800" fg:w="1"/><text x="63.0443%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7943%" y="389" width="0.0785%" height="15" fill="rgb(244,199,44)" fg:x="800" fg:w="1"/><text x="63.0443%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7943%" y="373" width="0.0785%" height="15" fill="rgb(240,144,53)" fg:x="800" fg:w="1"/><text x="63.0443%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7943%" y="357" width="0.0785%" height="15" fill="rgb(223,57,28)" fg:x="800" fg:w="1"/><text x="63.0443%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.7943%" y="341" width="0.0785%" height="15" fill="rgb(213,134,38)" fg:x="800" fg:w="1"/><text x="63.0443%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.7943%" y="325" width="0.0785%" height="15" fill="rgb(251,182,42)" fg:x="800" fg:w="1"/><text x="63.0443%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.7943%" y="309" width="0.0785%" height="15" fill="rgb(229,93,13)" fg:x="800" fg:w="1"/><text x="63.0443%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8728%" y="501" width="0.0785%" height="15" fill="rgb(234,171,3)" fg:x="801" fg:w="1"/><text x="63.1228%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8728%" y="485" width="0.0785%" height="15" fill="rgb(241,105,32)" fg:x="801" fg:w="1"/><text x="63.1228%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.8728%" y="469" width="0.0785%" height="15" fill="rgb(221,66,3)" fg:x="801" fg:w="1"/><text x="63.1228%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.8728%" y="453" width="0.0785%" height="15" fill="rgb(248,155,29)" fg:x="801" fg:w="1"/><text x="63.1228%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.8728%" y="437" width="0.0785%" height="15" fill="rgb(231,31,5)" fg:x="801" fg:w="1"/><text x="63.1228%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.8728%" y="421" width="0.0785%" height="15" fill="rgb(213,188,31)" fg:x="801" fg:w="1"/><text x="63.1228%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.8728%" y="405" width="0.0785%" height="15" fill="rgb(212,104,33)" fg:x="801" fg:w="1"/><text x="63.1228%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9513%" y="469" width="0.0785%" height="15" fill="rgb(254,77,51)" fg:x="802" fg:w="1"/><text x="63.2013%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9513%" y="453" width="0.0785%" height="15" fill="rgb(234,39,26)" fg:x="802" fg:w="1"/><text x="63.2013%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9513%" y="437" width="0.0785%" height="15" fill="rgb(208,88,36)" fg:x="802" fg:w="1"/><text x="63.2013%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.9513%" y="421" width="0.0785%" height="15" fill="rgb(243,222,10)" fg:x="802" fg:w="1"/><text x="63.2013%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9513%" y="405" width="0.0785%" height="15" fill="rgb(218,133,52)" fg:x="802" fg:w="1"/><text x="63.2013%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.9513%" y="389" width="0.0785%" height="15" fill="rgb(222,25,26)" fg:x="802" fg:w="1"/><text x="63.2013%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.9513%" y="373" width="0.0785%" height="15" fill="rgb(243,174,24)" fg:x="802" fg:w="1"/><text x="63.2013%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.9513%" y="357" width="0.0785%" height="15" fill="rgb(233,188,52)" fg:x="802" fg:w="1"/><text x="63.2013%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.9513%" y="341" width="0.0785%" height="15" fill="rgb(208,89,14)" fg:x="802" fg:w="1"/><text x="63.2013%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.9513%" y="325" width="0.0785%" height="15" fill="rgb(205,204,21)" fg:x="802" fg:w="1"/><text x="63.2013%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.9513%" y="309" width="0.0785%" height="15" fill="rgb(246,39,28)" fg:x="802" fg:w="1"/><text x="63.2013%" y="319.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.63%)</title><rect x="62.4804%" y="549" width="0.6279%" height="15" fill="rgb(235,71,19)" fg:x="796" fg:w="8"/><text x="62.7304%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.63%)</title><rect x="62.4804%" y="533" width="0.6279%" height="15" fill="rgb(211,62,39)" fg:x="796" fg:w="8"/><text x="62.7304%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="62.8728%" y="517" width="0.2355%" height="15" fill="rgb(246,118,20)" fg:x="801" fg:w="3"/><text x="63.1228%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="62.9513%" y="501" width="0.1570%" height="15" fill="rgb(230,82,12)" fg:x="802" fg:w="2"/><text x="63.2013%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="62.9513%" y="485" width="0.1570%" height="15" fill="rgb(205,212,34)" fg:x="802" fg:w="2"/><text x="63.2013%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0298%" y="469" width="0.0785%" height="15" fill="rgb(239,90,1)" fg:x="803" fg:w="1"/><text x="63.2798%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0298%" y="453" width="0.0785%" height="15" fill="rgb(225,198,50)" fg:x="803" fg:w="1"/><text x="63.2798%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0298%" y="437" width="0.0785%" height="15" fill="rgb(227,208,48)" fg:x="803" fg:w="1"/><text x="63.2798%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0298%" y="421" width="0.0785%" height="15" fill="rgb(238,134,41)" fg:x="803" fg:w="1"/><text x="63.2798%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.0298%" y="405" width="0.0785%" height="15" fill="rgb(241,58,39)" fg:x="803" fg:w="1"/><text x="63.2798%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.0298%" y="389" width="0.0785%" height="15" fill="rgb(214,126,4)" fg:x="803" fg:w="1"/><text x="63.2798%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.0298%" y="373" width="0.0785%" height="15" fill="rgb(235,149,4)" fg:x="803" fg:w="1"/><text x="63.2798%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.1083%" y="533" width="0.0785%" height="15" fill="rgb(236,59,29)" fg:x="804" fg:w="1"/><text x="63.3583%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="63.3438%" y="485" width="0.2355%" height="15" fill="rgb(246,11,33)" fg:x="807" fg:w="3"/><text x="63.5938%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.4223%" y="469" width="0.1570%" height="15" fill="rgb(232,180,35)" fg:x="808" fg:w="2"/><text x="63.6723%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.4223%" y="453" width="0.1570%" height="15" fill="rgb(220,35,37)" fg:x="808" fg:w="2"/><text x="63.6723%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="63.4223%" y="437" width="0.1570%" height="15" fill="rgb(238,107,48)" fg:x="808" fg:w="2"/><text x="63.6723%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="63.4223%" y="421" width="0.1570%" height="15" fill="rgb(205,65,21)" fg:x="808" fg:w="2"/><text x="63.6723%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="63.4223%" y="405" width="0.1570%" height="15" fill="rgb(246,138,48)" fg:x="808" fg:w="2"/><text x="63.6723%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="63.4223%" y="389" width="0.1570%" height="15" fill="rgb(209,220,47)" fg:x="808" fg:w="2"/><text x="63.6723%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.4223%" y="373" width="0.1570%" height="15" fill="rgb(222,162,49)" fg:x="808" fg:w="2"/><text x="63.6723%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="63.4223%" y="357" width="0.1570%" height="15" fill="rgb(243,123,11)" fg:x="808" fg:w="2"/><text x="63.6723%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="63.4223%" y="341" width="0.1570%" height="15" fill="rgb(221,229,41)" fg:x="808" fg:w="2"/><text x="63.6723%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="63.4223%" y="325" width="0.1570%" height="15" fill="rgb(216,68,4)" fg:x="808" fg:w="2"/><text x="63.6723%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="63.4223%" y="309" width="0.1570%" height="15" fill="rgb(207,88,35)" fg:x="808" fg:w="2"/><text x="63.6723%" y="319.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="63.4223%" y="293" width="0.1570%" height="15" fill="rgb(252,2,5)" fg:x="808" fg:w="2"/><text x="63.6723%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5008%" y="277" width="0.0785%" height="15" fill="rgb(209,173,7)" fg:x="809" fg:w="1"/><text x="63.7508%" y="287.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="63.3438%" y="517" width="0.3140%" height="15" fill="rgb(210,198,52)" fg:x="807" fg:w="4"/><text x="63.5938%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="63.3438%" y="501" width="0.3140%" height="15" fill="rgb(228,152,32)" fg:x="807" fg:w="4"/><text x="63.5938%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5793%" y="485" width="0.0785%" height="15" fill="rgb(249,98,29)" fg:x="810" fg:w="1"/><text x="63.8293%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6578%" y="501" width="0.0785%" height="15" fill="rgb(205,148,48)" fg:x="811" fg:w="1"/><text x="63.9078%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="63.6578%" y="517" width="0.2355%" height="15" fill="rgb(236,69,34)" fg:x="811" fg:w="3"/><text x="63.9078%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="63.7363%" y="501" width="0.1570%" height="15" fill="rgb(220,151,41)" fg:x="812" fg:w="2"/><text x="63.9863%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="63.7363%" y="485" width="0.1570%" height="15" fill="rgb(254,106,24)" fg:x="812" fg:w="2"/><text x="63.9863%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="63.7363%" y="469" width="0.1570%" height="15" fill="rgb(210,37,48)" fg:x="812" fg:w="2"/><text x="63.9863%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="63.8148%" y="453" width="0.0785%" height="15" fill="rgb(254,131,5)" fg:x="813" fg:w="1"/><text x="64.0648%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.8932%" y="517" width="0.0785%" height="15" fill="rgb(216,55,41)" fg:x="814" fg:w="1"/><text x="64.1432%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="63.9717%" y="485" width="0.0785%" height="15" fill="rgb(250,35,31)" fg:x="815" fg:w="1"/><text x="64.2217%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9717%" y="469" width="0.0785%" height="15" fill="rgb(207,124,33)" fg:x="815" fg:w="1"/><text x="64.2217%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (14 samples, 1.10%)</title><rect x="63.1083%" y="549" width="1.0989%" height="15" fill="rgb(249,175,17)" fg:x="804" fg:w="14"/><text x="63.3583%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.02%)</title><rect x="63.1868%" y="533" width="1.0204%" height="15" fill="rgb(224,175,39)" fg:x="805" fg:w="13"/><text x="63.4368%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="63.9717%" y="517" width="0.2355%" height="15" fill="rgb(208,67,49)" fg:x="815" fg:w="3"/><text x="64.2217%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="63.9717%" y="501" width="0.2355%" height="15" fill="rgb(222,188,41)" fg:x="815" fg:w="3"/><text x="64.2217%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="64.0502%" y="485" width="0.1570%" height="15" fill="rgb(243,213,30)" fg:x="816" fg:w="2"/><text x="64.3002%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="64.0502%" y="469" width="0.1570%" height="15" fill="rgb(253,100,45)" fg:x="816" fg:w="2"/><text x="64.3002%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="64.0502%" y="453" width="0.1570%" height="15" fill="rgb(226,24,44)" fg:x="816" fg:w="2"/><text x="64.3002%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="64.0502%" y="437" width="0.1570%" height="15" fill="rgb(215,41,24)" fg:x="816" fg:w="2"/><text x="64.3002%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.0502%" y="421" width="0.1570%" height="15" fill="rgb(254,53,33)" fg:x="816" fg:w="2"/><text x="64.3002%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="64.1287%" y="405" width="0.0785%" height="15" fill="rgb(242,103,10)" fg:x="817" fg:w="1"/><text x="64.3787%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2072%" y="485" width="0.0785%" height="15" fill="rgb(246,29,21)" fg:x="818" fg:w="1"/><text x="64.4572%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2072%" y="469" width="0.0785%" height="15" fill="rgb(251,154,1)" fg:x="818" fg:w="1"/><text x="64.4572%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2072%" y="453" width="0.0785%" height="15" fill="rgb(254,212,26)" fg:x="818" fg:w="1"/><text x="64.4572%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2072%" y="437" width="0.0785%" height="15" fill="rgb(251,187,46)" fg:x="818" fg:w="1"/><text x="64.4572%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2072%" y="421" width="0.0785%" height="15" fill="rgb(224,208,14)" fg:x="818" fg:w="1"/><text x="64.4572%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2072%" y="405" width="0.0785%" height="15" fill="rgb(222,176,26)" fg:x="818" fg:w="1"/><text x="64.4572%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.2072%" y="389" width="0.0785%" height="15" fill="rgb(241,219,52)" fg:x="818" fg:w="1"/><text x="64.4572%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.2072%" y="517" width="0.1570%" height="15" fill="rgb(252,198,21)" fg:x="818" fg:w="2"/><text x="64.4572%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.2072%" y="501" width="0.1570%" height="15" fill="rgb(244,196,23)" fg:x="818" fg:w="2"/><text x="64.4572%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.2857%" y="485" width="0.0785%" height="15" fill="rgb(239,121,44)" fg:x="819" fg:w="1"/><text x="64.5357%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="64.3642%" y="517" width="0.0785%" height="15" fill="rgb(249,203,23)" fg:x="820" fg:w="1"/><text x="64.6142%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.3642%" y="501" width="0.0785%" height="15" fill="rgb(238,219,10)" fg:x="820" fg:w="1"/><text x="64.6142%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="64.3642%" y="485" width="0.0785%" height="15" fill="rgb(241,35,46)" fg:x="820" fg:w="1"/><text x="64.6142%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="64.3642%" y="469" width="0.0785%" height="15" fill="rgb(218,28,6)" fg:x="820" fg:w="1"/><text x="64.6142%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="64.3642%" y="453" width="0.0785%" height="15" fill="rgb(233,151,50)" fg:x="820" fg:w="1"/><text x="64.6142%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3642%" y="437" width="0.0785%" height="15" fill="rgb(208,57,8)" fg:x="820" fg:w="1"/><text x="64.6142%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4427%" y="485" width="0.0785%" height="15" fill="rgb(253,99,10)" fg:x="821" fg:w="1"/><text x="64.6927%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.4427%" y="469" width="0.0785%" height="15" fill="rgb(237,196,49)" fg:x="821" fg:w="1"/><text x="64.6927%" y="479.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="64.4427%" y="453" width="0.0785%" height="15" fill="rgb(209,51,3)" fg:x="821" fg:w="1"/><text x="64.6927%" y="463.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (6 samples, 0.47%)</title><rect x="64.4427%" y="517" width="0.4710%" height="15" fill="rgb(238,129,10)" fg:x="821" fg:w="6"/><text x="64.6927%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="64.4427%" y="501" width="0.4710%" height="15" fill="rgb(246,201,16)" fg:x="821" fg:w="6"/><text x="64.6927%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="64.5212%" y="485" width="0.3925%" height="15" fill="rgb(250,160,20)" fg:x="822" fg:w="5"/><text x="64.7712%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (4 samples, 0.31%)</title><rect x="64.5997%" y="469" width="0.3140%" height="15" fill="rgb(251,107,25)" fg:x="823" fg:w="4"/><text x="64.8497%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="64.7567%" y="453" width="0.1570%" height="15" fill="rgb(212,103,39)" fg:x="825" fg:w="2"/><text x="65.0067%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8352%" y="437" width="0.0785%" height="15" fill="rgb(207,9,29)" fg:x="826" fg:w="1"/><text x="65.0852%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.8352%" y="421" width="0.0785%" height="15" fill="rgb(227,84,3)" fg:x="826" fg:w="1"/><text x="65.0852%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="64.8352%" y="405" width="0.0785%" height="15" fill="rgb(242,194,7)" fg:x="826" fg:w="1"/><text x="65.0852%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="64.8352%" y="389" width="0.0785%" height="15" fill="rgb(230,40,4)" fg:x="826" fg:w="1"/><text x="65.0852%" y="399.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="64.9137%" y="469" width="0.0785%" height="15" fill="rgb(243,229,33)" fg:x="827" fg:w="1"/><text x="65.1637%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (11 samples, 0.86%)</title><rect x="64.2072%" y="549" width="0.8634%" height="15" fill="rgb(240,65,24)" fg:x="818" fg:w="11"/><text x="64.4572%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (11 samples, 0.86%)</title><rect x="64.2072%" y="533" width="0.8634%" height="15" fill="rgb(212,28,20)" fg:x="818" fg:w="11"/><text x="64.4572%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="64.9137%" y="517" width="0.1570%" height="15" fill="rgb(209,72,3)" fg:x="827" fg:w="2"/><text x="65.1637%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="64.9137%" y="501" width="0.1570%" height="15" fill="rgb(238,170,36)" fg:x="827" fg:w="2"/><text x="65.1637%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="64.9137%" y="485" width="0.1570%" height="15" fill="rgb(236,19,38)" fg:x="827" fg:w="2"/><text x="65.1637%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="64.9922%" y="469" width="0.0785%" height="15" fill="rgb(230,67,43)" fg:x="828" fg:w="1"/><text x="65.2422%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="65.1491%" y="533" width="0.0785%" height="15" fill="rgb(227,14,36)" fg:x="830" fg:w="1"/><text x="65.3991%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="65.1491%" y="517" width="0.0785%" height="15" fill="rgb(247,171,49)" fg:x="830" fg:w="1"/><text x="65.3991%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="65.2276%" y="501" width="0.0785%" height="15" fill="rgb(235,164,51)" fg:x="831" fg:w="1"/><text x="65.4776%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.3061%" y="485" width="0.0785%" height="15" fill="rgb(246,107,20)" fg:x="832" fg:w="1"/><text x="65.5561%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="65.3061%" y="469" width="0.0785%" height="15" fill="rgb(226,88,18)" fg:x="832" fg:w="1"/><text x="65.5561%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3846%" y="421" width="0.0785%" height="15" fill="rgb(235,136,9)" fg:x="833" fg:w="1"/><text x="65.6346%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="65.2276%" y="533" width="0.3140%" height="15" fill="rgb(209,3,34)" fg:x="831" fg:w="4"/><text x="65.4776%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="65.2276%" y="517" width="0.3140%" height="15" fill="rgb(213,38,19)" fg:x="831" fg:w="4"/><text x="65.4776%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="65.3061%" y="501" width="0.2355%" height="15" fill="rgb(254,24,24)" fg:x="832" fg:w="3"/><text x="65.5561%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="65.3846%" y="485" width="0.1570%" height="15" fill="rgb(219,122,42)" fg:x="833" fg:w="2"/><text x="65.6346%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="65.3846%" y="469" width="0.1570%" height="15" fill="rgb(205,128,31)" fg:x="833" fg:w="2"/><text x="65.6346%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="65.3846%" y="453" width="0.1570%" height="15" fill="rgb(212,142,0)" fg:x="833" fg:w="2"/><text x="65.6346%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="65.3846%" y="437" width="0.1570%" height="15" fill="rgb(211,25,35)" fg:x="833" fg:w="2"/><text x="65.6346%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.4631%" y="421" width="0.0785%" height="15" fill="rgb(220,150,53)" fg:x="834" fg:w="1"/><text x="65.7131%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4631%" y="405" width="0.0785%" height="15" fill="rgb(220,30,24)" fg:x="834" fg:w="1"/><text x="65.7131%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.4631%" y="389" width="0.0785%" height="15" fill="rgb(218,86,23)" fg:x="834" fg:w="1"/><text x="65.7131%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4631%" y="373" width="0.0785%" height="15" fill="rgb(206,62,27)" fg:x="834" fg:w="1"/><text x="65.7131%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.4631%" y="357" width="0.0785%" height="15" fill="rgb(249,174,0)" fg:x="834" fg:w="1"/><text x="65.7131%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.4631%" y="341" width="0.0785%" height="15" fill="rgb(246,67,27)" fg:x="834" fg:w="1"/><text x="65.7131%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.4631%" y="325" width="0.0785%" height="15" fill="rgb(250,195,30)" fg:x="834" fg:w="1"/><text x="65.7131%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.55%)</title><rect x="65.0706%" y="549" width="0.5495%" height="15" fill="rgb(251,171,50)" fg:x="829" fg:w="7"/><text x="65.3206%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="65.5416%" y="533" width="0.0785%" height="15" fill="rgb(236,196,10)" fg:x="835" fg:w="1"/><text x="65.7916%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.5416%" y="517" width="0.0785%" height="15" fill="rgb(249,228,52)" fg:x="835" fg:w="1"/><text x="65.7916%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="65.5416%" y="501" width="0.0785%" height="15" fill="rgb(219,60,51)" fg:x="835" fg:w="1"/><text x="65.7916%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="65.5416%" y="485" width="0.0785%" height="15" fill="rgb(240,198,24)" fg:x="835" fg:w="1"/><text x="65.7916%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.5416%" y="469" width="0.0785%" height="15" fill="rgb(240,192,40)" fg:x="835" fg:w="1"/><text x="65.7916%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.5416%" y="453" width="0.0785%" height="15" fill="rgb(219,118,5)" fg:x="835" fg:w="1"/><text x="65.7916%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.5416%" y="437" width="0.0785%" height="15" fill="rgb(205,202,34)" fg:x="835" fg:w="1"/><text x="65.7916%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.5416%" y="421" width="0.0785%" height="15" fill="rgb(234,153,26)" fg:x="835" fg:w="1"/><text x="65.7916%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="65.6201%" y="533" width="0.0785%" height="15" fill="rgb(229,26,29)" fg:x="836" fg:w="1"/><text x="65.8701%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (179 samples, 14.05%)</title><rect x="51.7268%" y="581" width="14.0502%" height="15" fill="rgb(237,115,21)" fg:x="659" fg:w="179"/><text x="51.9768%" y="591.50">&lt;plugins_core::carryi..</text></g><g><title>plugins_core::tools::move_between (46 samples, 3.61%)</title><rect x="62.1664%" y="565" width="3.6107%" height="15" fill="rgb(252,144,15)" fg:x="792" fg:w="46"/><text x="62.4164%" y="575.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="65.6201%" y="549" width="0.1570%" height="15" fill="rgb(232,26,13)" fg:x="836" fg:w="2"/><text x="65.8701%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="65.6986%" y="533" width="0.0785%" height="15" fill="rgb(206,44,19)" fg:x="837" fg:w="1"/><text x="65.9486%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.6986%" y="517" width="0.0785%" height="15" fill="rgb(249,159,2)" fg:x="837" fg:w="1"/><text x="65.9486%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="65.6986%" y="501" width="0.0785%" height="15" fill="rgb(231,5,32)" fg:x="837" fg:w="1"/><text x="65.9486%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="65.6986%" y="485" width="0.0785%" height="15" fill="rgb(249,210,18)" fg:x="837" fg:w="1"/><text x="65.9486%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.6986%" y="469" width="0.0785%" height="15" fill="rgb(215,223,36)" fg:x="837" fg:w="1"/><text x="65.9486%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.6986%" y="453" width="0.0785%" height="15" fill="rgb(245,185,20)" fg:x="837" fg:w="1"/><text x="65.9486%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.6986%" y="437" width="0.0785%" height="15" fill="rgb(206,224,11)" fg:x="837" fg:w="1"/><text x="65.9486%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="65.8556%" y="533" width="0.1570%" height="15" fill="rgb(248,73,42)" fg:x="839" fg:w="2"/><text x="66.1056%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="65.8556%" y="517" width="0.1570%" height="15" fill="rgb(219,149,31)" fg:x="839" fg:w="2"/><text x="66.1056%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.9341%" y="501" width="0.0785%" height="15" fill="rgb(243,104,17)" fg:x="840" fg:w="1"/><text x="66.1841%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0911%" y="517" width="0.0785%" height="15" fill="rgb(244,117,33)" fg:x="842" fg:w="1"/><text x="66.3411%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0911%" y="501" width="0.0785%" height="15" fill="rgb(251,25,47)" fg:x="842" fg:w="1"/><text x="66.3411%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0911%" y="485" width="0.0785%" height="15" fill="rgb(249,70,13)" fg:x="842" fg:w="1"/><text x="66.3411%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.0911%" y="469" width="0.0785%" height="15" fill="rgb(217,133,18)" fg:x="842" fg:w="1"/><text x="66.3411%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.0911%" y="453" width="0.0785%" height="15" fill="rgb(248,97,28)" fg:x="842" fg:w="1"/><text x="66.3411%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.0911%" y="437" width="0.0785%" height="15" fill="rgb(237,193,4)" fg:x="842" fg:w="1"/><text x="66.3411%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.0911%" y="421" width="0.0785%" height="15" fill="rgb(247,198,45)" fg:x="842" fg:w="1"/><text x="66.3411%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0911%" y="405" width="0.0785%" height="15" fill="rgb(245,2,20)" fg:x="842" fg:w="1"/><text x="66.3411%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.0911%" y="389" width="0.0785%" height="15" fill="rgb(210,71,36)" fg:x="842" fg:w="1"/><text x="66.3411%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.0911%" y="373" width="0.0785%" height="15" fill="rgb(238,114,30)" fg:x="842" fg:w="1"/><text x="66.3411%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.0911%" y="357" width="0.0785%" height="15" fill="rgb(241,200,2)" fg:x="842" fg:w="1"/><text x="66.3411%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.0911%" y="341" width="0.0785%" height="15" fill="rgb(232,106,18)" fg:x="842" fg:w="1"/><text x="66.3411%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.0911%" y="325" width="0.0785%" height="15" fill="rgb(211,141,18)" fg:x="842" fg:w="1"/><text x="66.3411%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.1695%" y="517" width="0.0785%" height="15" fill="rgb(224,9,9)" fg:x="843" fg:w="1"/><text x="66.4195%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="66.2480%" y="517" width="0.2355%" height="15" fill="rgb(249,137,46)" fg:x="844" fg:w="3"/><text x="66.4980%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="66.2480%" y="501" width="0.2355%" height="15" fill="rgb(236,44,45)" fg:x="844" fg:w="3"/><text x="66.4980%" y="511.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="66.2480%" y="485" width="0.2355%" height="15" fill="rgb(205,68,40)" fg:x="844" fg:w="3"/><text x="66.4980%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="66.5620%" y="501" width="0.0785%" height="15" fill="rgb(214,198,49)" fg:x="848" fg:w="1"/><text x="66.8120%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="66.5620%" y="485" width="0.0785%" height="15" fill="rgb(226,140,45)" fg:x="848" fg:w="1"/><text x="66.8120%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="66.5620%" y="469" width="0.0785%" height="15" fill="rgb(209,109,20)" fg:x="848" fg:w="1"/><text x="66.8120%" y="479.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="66.5620%" y="453" width="0.0785%" height="15" fill="rgb(217,33,46)" fg:x="848" fg:w="1"/><text x="66.8120%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.7190%" y="437" width="0.0785%" height="15" fill="rgb(232,150,33)" fg:x="850" fg:w="1"/><text x="66.9690%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.7190%" y="421" width="0.0785%" height="15" fill="rgb(233,76,25)" fg:x="850" fg:w="1"/><text x="66.9690%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.7190%" y="405" width="0.0785%" height="15" fill="rgb(254,219,23)" fg:x="850" fg:w="1"/><text x="66.9690%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.7190%" y="389" width="0.0785%" height="15" fill="rgb(233,108,4)" fg:x="850" fg:w="1"/><text x="66.9690%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.7190%" y="373" width="0.0785%" height="15" fill="rgb(229,98,6)" fg:x="850" fg:w="1"/><text x="66.9690%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.7190%" y="357" width="0.0785%" height="15" fill="rgb(217,40,27)" fg:x="850" fg:w="1"/><text x="66.9690%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.7190%" y="341" width="0.0785%" height="15" fill="rgb(221,35,43)" fg:x="850" fg:w="1"/><text x="66.9690%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.7190%" y="325" width="0.0785%" height="15" fill="rgb(212,107,11)" fg:x="850" fg:w="1"/><text x="66.9690%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.7190%" y="309" width="0.0785%" height="15" fill="rgb(245,42,44)" fg:x="850" fg:w="1"/><text x="66.9690%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.7190%" y="293" width="0.0785%" height="15" fill="rgb(209,31,12)" fg:x="850" fg:w="1"/><text x="66.9690%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.7190%" y="277" width="0.0785%" height="15" fill="rgb(210,228,54)" fg:x="850" fg:w="1"/><text x="66.9690%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.7190%" y="261" width="0.0785%" height="15" fill="rgb(241,19,33)" fg:x="850" fg:w="1"/><text x="66.9690%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="66.6405%" y="469" width="0.3140%" height="15" fill="rgb(229,51,27)" fg:x="849" fg:w="4"/><text x="66.8905%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="66.6405%" y="453" width="0.3140%" height="15" fill="rgb(214,167,49)" fg:x="849" fg:w="4"/><text x="66.8905%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="66.7975%" y="437" width="0.1570%" height="15" fill="rgb(248,140,47)" fg:x="851" fg:w="2"/><text x="67.0475%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.8760%" y="421" width="0.0785%" height="15" fill="rgb(228,6,51)" fg:x="852" fg:w="1"/><text x="67.1260%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.9545%" y="373" width="0.0785%" height="15" fill="rgb(242,44,53)" fg:x="853" fg:w="1"/><text x="67.2045%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="66.9545%" y="405" width="0.1570%" height="15" fill="rgb(249,90,50)" fg:x="853" fg:w="2"/><text x="67.2045%" y="415.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="66.9545%" y="389" width="0.1570%" height="15" fill="rgb(222,84,19)" fg:x="853" fg:w="2"/><text x="67.2045%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.0330%" y="373" width="0.0785%" height="15" fill="rgb(214,140,12)" fg:x="854" fg:w="1"/><text x="67.2830%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.0330%" y="357" width="0.0785%" height="15" fill="rgb(210,20,43)" fg:x="854" fg:w="1"/><text x="67.2830%" y="367.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="66.9545%" y="453" width="0.2355%" height="15" fill="rgb(243,1,40)" fg:x="853" fg:w="3"/><text x="67.2045%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="66.9545%" y="437" width="0.2355%" height="15" fill="rgb(224,102,26)" fg:x="853" fg:w="3"/><text x="67.2045%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="66.9545%" y="421" width="0.2355%" height="15" fill="rgb(221,179,1)" fg:x="853" fg:w="3"/><text x="67.2045%" y="431.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (1 samples, 0.08%)</title><rect x="67.1115%" y="405" width="0.0785%" height="15" fill="rgb(216,209,47)" fg:x="855" fg:w="1"/><text x="67.3615%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1115%" y="389" width="0.0785%" height="15" fill="rgb(251,135,9)" fg:x="855" fg:w="1"/><text x="67.3615%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.1115%" y="373" width="0.0785%" height="15" fill="rgb(242,9,36)" fg:x="855" fg:w="1"/><text x="67.3615%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.1115%" y="357" width="0.0785%" height="15" fill="rgb(249,60,37)" fg:x="855" fg:w="1"/><text x="67.3615%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.1115%" y="341" width="0.0785%" height="15" fill="rgb(230,66,45)" fg:x="855" fg:w="1"/><text x="67.3615%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.1115%" y="325" width="0.0785%" height="15" fill="rgb(216,1,47)" fg:x="855" fg:w="1"/><text x="67.3615%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (4 samples, 0.31%)</title><rect x="66.9545%" y="469" width="0.3140%" height="15" fill="rgb(235,8,23)" fg:x="853" fg:w="4"/><text x="67.2045%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="67.1900%" y="453" width="0.0785%" height="15" fill="rgb(225,136,11)" fg:x="856" fg:w="1"/><text x="67.4400%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1900%" y="437" width="0.0785%" height="15" fill="rgb(228,63,44)" fg:x="856" fg:w="1"/><text x="67.4400%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.2684%" y="469" width="0.0785%" height="15" fill="rgb(240,43,52)" fg:x="857" fg:w="1"/><text x="67.5184%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="67.2684%" y="453" width="0.0785%" height="15" fill="rgb(217,167,36)" fg:x="857" fg:w="1"/><text x="67.5184%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.4254%" y="437" width="0.0785%" height="15" fill="rgb(250,19,6)" fg:x="859" fg:w="1"/><text x="67.6754%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.4254%" y="421" width="0.0785%" height="15" fill="rgb(236,60,51)" fg:x="859" fg:w="1"/><text x="67.6754%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="67.3469%" y="469" width="0.2355%" height="15" fill="rgb(222,217,20)" fg:x="858" fg:w="3"/><text x="67.5969%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="67.3469%" y="453" width="0.2355%" height="15" fill="rgb(242,65,52)" fg:x="858" fg:w="3"/><text x="67.5969%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.5039%" y="437" width="0.0785%" height="15" fill="rgb(217,5,41)" fg:x="860" fg:w="1"/><text x="67.7539%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="67.5039%" y="421" width="0.0785%" height="15" fill="rgb(223,208,53)" fg:x="860" fg:w="1"/><text x="67.7539%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="67.5039%" y="405" width="0.0785%" height="15" fill="rgb(221,104,30)" fg:x="860" fg:w="1"/><text x="67.7539%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.5039%" y="389" width="0.0785%" height="15" fill="rgb(230,210,42)" fg:x="860" fg:w="1"/><text x="67.7539%" y="399.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (21 samples, 1.65%)</title><rect x="66.0126%" y="533" width="1.6484%" height="15" fill="rgb(206,205,27)" fg:x="841" fg:w="21"/><text x="66.2626%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (15 samples, 1.18%)</title><rect x="66.4835%" y="517" width="1.1774%" height="15" fill="rgb(233,114,38)" fg:x="847" fg:w="15"/><text x="66.7335%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.02%)</title><rect x="66.6405%" y="501" width="1.0204%" height="15" fill="rgb(216,174,36)" fg:x="849" fg:w="13"/><text x="66.8905%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.02%)</title><rect x="66.6405%" y="485" width="1.0204%" height="15" fill="rgb(211,30,9)" fg:x="849" fg:w="13"/><text x="66.8905%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.5824%" y="469" width="0.0785%" height="15" fill="rgb(216,8,21)" fg:x="861" fg:w="1"/><text x="67.8324%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.5824%" y="453" width="0.0785%" height="15" fill="rgb(237,209,39)" fg:x="861" fg:w="1"/><text x="67.8324%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.5824%" y="437" width="0.0785%" height="15" fill="rgb(235,111,47)" fg:x="861" fg:w="1"/><text x="67.8324%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.5824%" y="421" width="0.0785%" height="15" fill="rgb(216,139,9)" fg:x="861" fg:w="1"/><text x="67.8324%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.5824%" y="405" width="0.0785%" height="15" fill="rgb(248,185,4)" fg:x="861" fg:w="1"/><text x="67.8324%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="67.8179%" y="389" width="0.1570%" height="15" fill="rgb(239,185,25)" fg:x="864" fg:w="2"/><text x="68.0679%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="67.8964%" y="373" width="0.0785%" height="15" fill="rgb(233,207,8)" fg:x="865" fg:w="1"/><text x="68.1464%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8964%" y="357" width="0.0785%" height="15" fill="rgb(249,220,24)" fg:x="865" fg:w="1"/><text x="68.1464%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8964%" y="341" width="0.0785%" height="15" fill="rgb(221,50,14)" fg:x="865" fg:w="1"/><text x="68.1464%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8964%" y="325" width="0.0785%" height="15" fill="rgb(227,79,42)" fg:x="865" fg:w="1"/><text x="68.1464%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8964%" y="309" width="0.0785%" height="15" fill="rgb(228,218,49)" fg:x="865" fg:w="1"/><text x="68.1464%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8964%" y="293" width="0.0785%" height="15" fill="rgb(249,18,15)" fg:x="865" fg:w="1"/><text x="68.1464%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8964%" y="277" width="0.0785%" height="15" fill="rgb(212,84,27)" fg:x="865" fg:w="1"/><text x="68.1464%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8964%" y="261" width="0.0785%" height="15" fill="rgb(207,83,24)" fg:x="865" fg:w="1"/><text x="68.1464%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8964%" y="245" width="0.0785%" height="15" fill="rgb(219,61,7)" fg:x="865" fg:w="1"/><text x="68.1464%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8964%" y="229" width="0.0785%" height="15" fill="rgb(211,43,29)" fg:x="865" fg:w="1"/><text x="68.1464%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8964%" y="213" width="0.0785%" height="15" fill="rgb(243,15,23)" fg:x="865" fg:w="1"/><text x="68.1464%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8964%" y="197" width="0.0785%" height="15" fill="rgb(217,52,28)" fg:x="865" fg:w="1"/><text x="68.1464%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8964%" y="181" width="0.0785%" height="15" fill="rgb(210,35,6)" fg:x="865" fg:w="1"/><text x="68.1464%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="67.7394%" y="437" width="0.3140%" height="15" fill="rgb(237,187,28)" fg:x="863" fg:w="4"/><text x="67.9894%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="67.7394%" y="421" width="0.3140%" height="15" fill="rgb(231,136,24)" fg:x="863" fg:w="4"/><text x="67.9894%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.8179%" y="405" width="0.2355%" height="15" fill="rgb(205,176,52)" fg:x="864" fg:w="3"/><text x="68.0679%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9749%" y="389" width="0.0785%" height="15" fill="rgb(218,65,12)" fg:x="866" fg:w="1"/><text x="68.2249%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9749%" y="373" width="0.0785%" height="15" fill="rgb(234,101,21)" fg:x="866" fg:w="1"/><text x="68.2249%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.9749%" y="357" width="0.0785%" height="15" fill="rgb(206,13,20)" fg:x="866" fg:w="1"/><text x="68.2249%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.9749%" y="341" width="0.0785%" height="15" fill="rgb(236,89,44)" fg:x="866" fg:w="1"/><text x="68.2249%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.9749%" y="325" width="0.0785%" height="15" fill="rgb(225,52,17)" fg:x="866" fg:w="1"/><text x="68.2249%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="67.9749%" y="309" width="0.0785%" height="15" fill="rgb(214,27,25)" fg:x="866" fg:w="1"/><text x="68.2249%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.9749%" y="293" width="0.0785%" height="15" fill="rgb(240,141,35)" fg:x="866" fg:w="1"/><text x="68.2249%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.0534%" y="437" width="0.0785%" height="15" fill="rgb(216,126,3)" fg:x="867" fg:w="1"/><text x="68.3034%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="68.0534%" y="421" width="0.0785%" height="15" fill="rgb(249,196,23)" fg:x="867" fg:w="1"/><text x="68.3034%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.0534%" y="405" width="0.0785%" height="15" fill="rgb(215,185,43)" fg:x="867" fg:w="1"/><text x="68.3034%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="68.0534%" y="389" width="0.0785%" height="15" fill="rgb(208,194,36)" fg:x="867" fg:w="1"/><text x="68.3034%" y="399.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="68.1319%" y="437" width="0.0785%" height="15" fill="rgb(245,182,12)" fg:x="868" fg:w="1"/><text x="68.3819%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="68.2104%" y="341" width="0.0785%" height="15" fill="rgb(244,222,52)" fg:x="869" fg:w="1"/><text x="68.4604%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.2104%" y="325" width="0.0785%" height="15" fill="rgb(236,222,51)" fg:x="869" fg:w="1"/><text x="68.4604%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.2889%" y="309" width="0.1570%" height="15" fill="rgb(254,71,22)" fg:x="870" fg:w="2"/><text x="68.5389%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (11 samples, 0.86%)</title><rect x="67.6609%" y="501" width="0.8634%" height="15" fill="rgb(250,104,15)" fg:x="862" fg:w="11"/><text x="67.9109%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.78%)</title><rect x="67.7394%" y="485" width="0.7849%" height="15" fill="rgb(229,223,46)" fg:x="863" fg:w="10"/><text x="67.9894%" y="495.50"></text></g><g><title>kernel::model::props::load_props (10 samples, 0.78%)</title><rect x="67.7394%" y="469" width="0.7849%" height="15" fill="rgb(209,129,18)" fg:x="863" fg:w="10"/><text x="67.9894%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (10 samples, 0.78%)</title><rect x="67.7394%" y="453" width="0.7849%" height="15" fill="rgb(224,160,1)" fg:x="863" fg:w="10"/><text x="67.9894%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="68.2104%" y="437" width="0.3140%" height="15" fill="rgb(237,112,21)" fg:x="869" fg:w="4"/><text x="68.4604%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="68.2104%" y="421" width="0.3140%" height="15" fill="rgb(215,198,53)" fg:x="869" fg:w="4"/><text x="68.4604%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="68.2104%" y="405" width="0.3140%" height="15" fill="rgb(218,227,35)" fg:x="869" fg:w="4"/><text x="68.4604%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="68.2104%" y="389" width="0.3140%" height="15" fill="rgb(232,121,22)" fg:x="869" fg:w="4"/><text x="68.4604%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="68.2104%" y="373" width="0.3140%" height="15" fill="rgb(235,52,54)" fg:x="869" fg:w="4"/><text x="68.4604%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="68.2104%" y="357" width="0.3140%" height="15" fill="rgb(219,21,44)" fg:x="869" fg:w="4"/><text x="68.4604%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="68.2889%" y="341" width="0.2355%" height="15" fill="rgb(221,51,43)" fg:x="870" fg:w="3"/><text x="68.5389%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="68.2889%" y="325" width="0.2355%" height="15" fill="rgb(225,77,42)" fg:x="870" fg:w="3"/><text x="68.5389%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="68.4458%" y="309" width="0.0785%" height="15" fill="rgb(214,117,53)" fg:x="872" fg:w="1"/><text x="68.6958%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.4458%" y="293" width="0.0785%" height="15" fill="rgb(218,227,27)" fg:x="872" fg:w="1"/><text x="68.6958%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="68.4458%" y="277" width="0.0785%" height="15" fill="rgb(223,214,36)" fg:x="872" fg:w="1"/><text x="68.6958%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (35 samples, 2.75%)</title><rect x="65.8556%" y="565" width="2.7473%" height="15" fill="rgb(235,21,7)" fg:x="839" fg:w="35"/><text x="66.1056%" y="575.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (35 samples, 2.75%)</title><rect x="65.8556%" y="549" width="2.7473%" height="15" fill="rgb(244,216,4)" fg:x="839" fg:w="35"/><text x="66.1056%" y="559.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (12 samples, 0.94%)</title><rect x="67.6609%" y="533" width="0.9419%" height="15" fill="rgb(249,197,24)" fg:x="862" fg:w="12"/><text x="67.9109%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (12 samples, 0.94%)</title><rect x="67.6609%" y="517" width="0.9419%" height="15" fill="rgb(222,169,49)" fg:x="862" fg:w="12"/><text x="67.9109%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="68.5243%" y="501" width="0.0785%" height="15" fill="rgb(207,137,33)" fg:x="873" fg:w="1"/><text x="68.7743%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.5243%" y="485" width="0.0785%" height="15" fill="rgb(219,180,40)" fg:x="873" fg:w="1"/><text x="68.7743%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="68.6028%" y="565" width="0.0785%" height="15" fill="rgb(250,163,42)" fg:x="874" fg:w="1"/><text x="68.8528%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7598%" y="549" width="0.0785%" height="15" fill="rgb(239,163,0)" fg:x="876" fg:w="1"/><text x="69.0098%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.7598%" y="533" width="0.0785%" height="15" fill="rgb(252,38,28)" fg:x="876" fg:w="1"/><text x="69.0098%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.7598%" y="517" width="0.0785%" height="15" fill="rgb(254,203,26)" fg:x="876" fg:w="1"/><text x="69.0098%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.7598%" y="501" width="0.0785%" height="15" fill="rgb(209,129,32)" fg:x="876" fg:w="1"/><text x="69.0098%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.7598%" y="485" width="0.0785%" height="15" fill="rgb(207,177,52)" fg:x="876" fg:w="1"/><text x="69.0098%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7598%" y="469" width="0.0785%" height="15" fill="rgb(230,209,36)" fg:x="876" fg:w="1"/><text x="69.0098%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.7598%" y="453" width="0.0785%" height="15" fill="rgb(238,131,0)" fg:x="876" fg:w="1"/><text x="69.0098%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.7598%" y="437" width="0.0785%" height="15" fill="rgb(218,61,31)" fg:x="876" fg:w="1"/><text x="69.0098%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.7598%" y="421" width="0.0785%" height="15" fill="rgb(232,6,53)" fg:x="876" fg:w="1"/><text x="69.0098%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.7598%" y="405" width="0.0785%" height="15" fill="rgb(254,100,32)" fg:x="876" fg:w="1"/><text x="69.0098%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.7598%" y="389" width="0.0785%" height="15" fill="rgb(229,194,49)" fg:x="876" fg:w="1"/><text x="69.0098%" y="399.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="68.8383%" y="533" width="0.1570%" height="15" fill="rgb(206,208,39)" fg:x="877" fg:w="2"/><text x="69.0883%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="68.8383%" y="517" width="0.1570%" height="15" fill="rgb(246,226,14)" fg:x="877" fg:w="2"/><text x="69.0883%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="69.0738%" y="437" width="0.1570%" height="15" fill="rgb(226,48,32)" fg:x="880" fg:w="2"/><text x="69.3238%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1523%" y="421" width="0.0785%" height="15" fill="rgb(252,43,54)" fg:x="881" fg:w="1"/><text x="69.4023%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.1523%" y="405" width="0.0785%" height="15" fill="rgb(207,124,0)" fg:x="881" fg:w="1"/><text x="69.4023%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.1523%" y="389" width="0.0785%" height="15" fill="rgb(248,188,30)" fg:x="881" fg:w="1"/><text x="69.4023%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.1523%" y="373" width="0.0785%" height="15" fill="rgb(232,14,43)" fg:x="881" fg:w="1"/><text x="69.4023%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.1523%" y="357" width="0.0785%" height="15" fill="rgb(218,52,29)" fg:x="881" fg:w="1"/><text x="69.4023%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1523%" y="341" width="0.0785%" height="15" fill="rgb(218,176,50)" fg:x="881" fg:w="1"/><text x="69.4023%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.1523%" y="325" width="0.0785%" height="15" fill="rgb(213,112,0)" fg:x="881" fg:w="1"/><text x="69.4023%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.1523%" y="309" width="0.0785%" height="15" fill="rgb(244,216,8)" fg:x="881" fg:w="1"/><text x="69.4023%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.1523%" y="293" width="0.0785%" height="15" fill="rgb(224,148,53)" fg:x="881" fg:w="1"/><text x="69.4023%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.1523%" y="277" width="0.0785%" height="15" fill="rgb(241,133,40)" fg:x="881" fg:w="1"/><text x="69.4023%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.1523%" y="261" width="0.0785%" height="15" fill="rgb(232,17,44)" fg:x="881" fg:w="1"/><text x="69.4023%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.1523%" y="245" width="0.0785%" height="15" fill="rgb(213,32,25)" fg:x="881" fg:w="1"/><text x="69.4023%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="68.9953%" y="469" width="0.3925%" height="15" fill="rgb(249,115,27)" fg:x="879" fg:w="5"/><text x="69.2453%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.39%)</title><rect x="68.9953%" y="453" width="0.3925%" height="15" fill="rgb(241,50,1)" fg:x="879" fg:w="5"/><text x="69.2453%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2308%" y="437" width="0.1570%" height="15" fill="rgb(244,175,40)" fg:x="882" fg:w="2"/><text x="69.4808%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.2308%" y="421" width="0.1570%" height="15" fill="rgb(230,94,34)" fg:x="882" fg:w="2"/><text x="69.4808%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="69.2308%" y="405" width="0.1570%" height="15" fill="rgb(223,185,29)" fg:x="882" fg:w="2"/><text x="69.4808%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="69.2308%" y="389" width="0.1570%" height="15" fill="rgb(225,193,15)" fg:x="882" fg:w="2"/><text x="69.4808%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="69.2308%" y="373" width="0.1570%" height="15" fill="rgb(252,121,38)" fg:x="882" fg:w="2"/><text x="69.4808%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3093%" y="357" width="0.0785%" height="15" fill="rgb(232,44,12)" fg:x="883" fg:w="1"/><text x="69.5593%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.3093%" y="341" width="0.0785%" height="15" fill="rgb(226,45,54)" fg:x="883" fg:w="1"/><text x="69.5593%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.3093%" y="325" width="0.0785%" height="15" fill="rgb(209,67,17)" fg:x="883" fg:w="1"/><text x="69.5593%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.3093%" y="309" width="0.0785%" height="15" fill="rgb(219,108,52)" fg:x="883" fg:w="1"/><text x="69.5593%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.3093%" y="293" width="0.0785%" height="15" fill="rgb(216,118,19)" fg:x="883" fg:w="1"/><text x="69.5593%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.3093%" y="277" width="0.0785%" height="15" fill="rgb(228,120,40)" fg:x="883" fg:w="1"/><text x="69.5593%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.3093%" y="261" width="0.0785%" height="15" fill="rgb(221,218,34)" fg:x="883" fg:w="1"/><text x="69.5593%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="68.9953%" y="501" width="0.4710%" height="15" fill="rgb(235,89,14)" fg:x="879" fg:w="6"/><text x="69.2453%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="68.9953%" y="485" width="0.4710%" height="15" fill="rgb(248,89,7)" fg:x="879" fg:w="6"/><text x="69.2453%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.3878%" y="469" width="0.0785%" height="15" fill="rgb(212,114,34)" fg:x="884" fg:w="1"/><text x="69.6378%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.4662%" y="469" width="0.0785%" height="15" fill="rgb(246,88,32)" fg:x="885" fg:w="1"/><text x="69.7162%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6232%" y="373" width="0.0785%" height="15" fill="rgb(237,135,0)" fg:x="887" fg:w="1"/><text x="69.8732%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="69.7017%" y="309" width="0.0785%" height="15" fill="rgb(220,201,54)" fg:x="888" fg:w="1"/><text x="69.9517%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (13 samples, 1.02%)</title><rect x="68.8383%" y="549" width="1.0204%" height="15" fill="rgb(210,142,36)" fg:x="877" fg:w="13"/><text x="69.0883%" y="559.50"></text></g><g><title>kernel::model::props::load_props (11 samples, 0.86%)</title><rect x="68.9953%" y="533" width="0.8634%" height="15" fill="rgb(247,189,26)" fg:x="879" fg:w="11"/><text x="69.2453%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.86%)</title><rect x="68.9953%" y="517" width="0.8634%" height="15" fill="rgb(223,89,24)" fg:x="879" fg:w="11"/><text x="69.2453%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="69.4662%" y="501" width="0.3925%" height="15" fill="rgb(205,90,19)" fg:x="885" fg:w="5"/><text x="69.7162%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="69.4662%" y="485" width="0.3925%" height="15" fill="rgb(234,57,40)" fg:x="885" fg:w="5"/><text x="69.7162%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.5447%" y="469" width="0.3140%" height="15" fill="rgb(213,109,10)" fg:x="886" fg:w="4"/><text x="69.7947%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.5447%" y="453" width="0.3140%" height="15" fill="rgb(214,189,23)" fg:x="886" fg:w="4"/><text x="69.7947%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.31%)</title><rect x="69.5447%" y="437" width="0.3140%" height="15" fill="rgb(234,200,10)" fg:x="886" fg:w="4"/><text x="69.7947%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.5447%" y="421" width="0.3140%" height="15" fill="rgb(221,148,16)" fg:x="886" fg:w="4"/><text x="69.7947%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="69.5447%" y="405" width="0.3140%" height="15" fill="rgb(230,115,10)" fg:x="886" fg:w="4"/><text x="69.7947%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="69.5447%" y="389" width="0.3140%" height="15" fill="rgb(220,106,42)" fg:x="886" fg:w="4"/><text x="69.7947%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.7017%" y="373" width="0.1570%" height="15" fill="rgb(225,105,39)" fg:x="888" fg:w="2"/><text x="69.9517%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.7017%" y="357" width="0.1570%" height="15" fill="rgb(211,161,38)" fg:x="888" fg:w="2"/><text x="69.9517%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="69.7017%" y="341" width="0.1570%" height="15" fill="rgb(213,23,19)" fg:x="888" fg:w="2"/><text x="69.9517%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="69.7017%" y="325" width="0.1570%" height="15" fill="rgb(240,2,33)" fg:x="888" fg:w="2"/><text x="69.9517%" y="335.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.7802%" y="309" width="0.0785%" height="15" fill="rgb(221,29,45)" fg:x="889" fg:w="1"/><text x="70.0302%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.1727%" y="421" width="0.0785%" height="15" fill="rgb(242,10,19)" fg:x="894" fg:w="1"/><text x="70.4227%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.1727%" y="437" width="0.1570%" height="15" fill="rgb(250,84,37)" fg:x="894" fg:w="2"/><text x="70.4227%" y="447.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="70.2512%" y="421" width="0.0785%" height="15" fill="rgb(214,136,7)" fg:x="895" fg:w="1"/><text x="70.5012%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.2512%" y="405" width="0.0785%" height="15" fill="rgb(231,189,12)" fg:x="895" fg:w="1"/><text x="70.5012%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3297%" y="357" width="0.0785%" height="15" fill="rgb(244,40,16)" fg:x="896" fg:w="1"/><text x="70.5797%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3297%" y="341" width="0.0785%" height="15" fill="rgb(217,29,15)" fg:x="896" fg:w="1"/><text x="70.5797%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3297%" y="325" width="0.0785%" height="15" fill="rgb(235,172,33)" fg:x="896" fg:w="1"/><text x="70.5797%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3297%" y="309" width="0.0785%" height="15" fill="rgb(206,148,28)" fg:x="896" fg:w="1"/><text x="70.5797%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3297%" y="293" width="0.0785%" height="15" fill="rgb(251,167,37)" fg:x="896" fg:w="1"/><text x="70.5797%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3297%" y="277" width="0.0785%" height="15" fill="rgb(229,94,52)" fg:x="896" fg:w="1"/><text x="70.5797%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3297%" y="261" width="0.0785%" height="15" fill="rgb(216,132,9)" fg:x="896" fg:w="1"/><text x="70.5797%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="70.0157%" y="501" width="0.4710%" height="15" fill="rgb(208,110,29)" fg:x="892" fg:w="6"/><text x="70.2657%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="70.0157%" y="485" width="0.4710%" height="15" fill="rgb(241,23,8)" fg:x="892" fg:w="6"/><text x="70.2657%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="70.0157%" y="469" width="0.4710%" height="15" fill="rgb(208,26,35)" fg:x="892" fg:w="6"/><text x="70.2657%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.47%)</title><rect x="70.0157%" y="453" width="0.4710%" height="15" fill="rgb(242,165,34)" fg:x="892" fg:w="6"/><text x="70.2657%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.3297%" y="437" width="0.1570%" height="15" fill="rgb(222,222,33)" fg:x="896" fg:w="2"/><text x="70.5797%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.3297%" y="421" width="0.1570%" height="15" fill="rgb(227,16,52)" fg:x="896" fg:w="2"/><text x="70.5797%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.3297%" y="405" width="0.1570%" height="15" fill="rgb(213,93,12)" fg:x="896" fg:w="2"/><text x="70.5797%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.3297%" y="389" width="0.1570%" height="15" fill="rgb(238,41,5)" fg:x="896" fg:w="2"/><text x="70.5797%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.3297%" y="373" width="0.1570%" height="15" fill="rgb(211,60,15)" fg:x="896" fg:w="2"/><text x="70.5797%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.4082%" y="357" width="0.0785%" height="15" fill="rgb(209,11,34)" fg:x="897" fg:w="1"/><text x="70.6582%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.4082%" y="341" width="0.0785%" height="15" fill="rgb(254,155,53)" fg:x="897" fg:w="1"/><text x="70.6582%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.4867%" y="501" width="0.0785%" height="15" fill="rgb(236,174,8)" fg:x="898" fg:w="1"/><text x="70.7367%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5651%" y="421" width="0.0785%" height="15" fill="rgb(229,31,27)" fg:x="899" fg:w="1"/><text x="70.8151%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.5651%" y="501" width="0.1570%" height="15" fill="rgb(242,226,26)" fg:x="899" fg:w="2"/><text x="70.8151%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="70.5651%" y="485" width="0.1570%" height="15" fill="rgb(234,32,40)" fg:x="899" fg:w="2"/><text x="70.8151%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.5651%" y="469" width="0.1570%" height="15" fill="rgb(249,226,47)" fg:x="899" fg:w="2"/><text x="70.8151%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.5651%" y="453" width="0.1570%" height="15" fill="rgb(212,6,26)" fg:x="899" fg:w="2"/><text x="70.8151%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="70.5651%" y="437" width="0.1570%" height="15" fill="rgb(249,202,29)" fg:x="899" fg:w="2"/><text x="70.8151%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.6436%" y="421" width="0.0785%" height="15" fill="rgb(226,106,4)" fg:x="900" fg:w="1"/><text x="70.8936%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.6436%" y="405" width="0.0785%" height="15" fill="rgb(251,2,27)" fg:x="900" fg:w="1"/><text x="70.8936%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.8006%" y="405" width="0.0785%" height="15" fill="rgb(236,208,0)" fg:x="902" fg:w="1"/><text x="71.0506%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (29 samples, 2.28%)</title><rect x="68.6813%" y="565" width="2.2763%" height="15" fill="rgb(211,66,17)" fg:x="875" fg:w="29"/><text x="68.9313%" y="575.50">k..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (14 samples, 1.10%)</title><rect x="69.8587%" y="549" width="1.0989%" height="15" fill="rgb(216,129,9)" fg:x="890" fg:w="14"/><text x="70.1087%" y="559.50"></text></g><g><title>kernel::model::props::load_props (14 samples, 1.10%)</title><rect x="69.8587%" y="533" width="1.0989%" height="15" fill="rgb(215,130,23)" fg:x="890" fg:w="14"/><text x="70.1087%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (14 samples, 1.10%)</title><rect x="69.8587%" y="517" width="1.0989%" height="15" fill="rgb(253,157,11)" fg:x="890" fg:w="14"/><text x="70.1087%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.7221%" y="501" width="0.2355%" height="15" fill="rgb(224,25,14)" fg:x="901" fg:w="3"/><text x="70.9721%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.7221%" y="485" width="0.2355%" height="15" fill="rgb(238,16,7)" fg:x="901" fg:w="3"/><text x="70.9721%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="70.7221%" y="469" width="0.2355%" height="15" fill="rgb(228,74,11)" fg:x="901" fg:w="3"/><text x="70.9721%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.7221%" y="453" width="0.2355%" height="15" fill="rgb(239,221,27)" fg:x="901" fg:w="3"/><text x="70.9721%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="70.8006%" y="437" width="0.1570%" height="15" fill="rgb(229,166,18)" fg:x="902" fg:w="2"/><text x="71.0506%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.8006%" y="421" width="0.1570%" height="15" fill="rgb(254,94,46)" fg:x="902" fg:w="2"/><text x="71.0506%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8791%" y="405" width="0.0785%" height="15" fill="rgb(241,79,19)" fg:x="903" fg:w="1"/><text x="71.1291%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8791%" y="389" width="0.0785%" height="15" fill="rgb(228,99,51)" fg:x="903" fg:w="1"/><text x="71.1291%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.8791%" y="373" width="0.0785%" height="15" fill="rgb(211,15,6)" fg:x="903" fg:w="1"/><text x="71.1291%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.8791%" y="357" width="0.0785%" height="15" fill="rgb(245,107,54)" fg:x="903" fg:w="1"/><text x="71.1291%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="70.8791%" y="341" width="0.0785%" height="15" fill="rgb(243,3,2)" fg:x="903" fg:w="1"/><text x="71.1291%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="70.9576%" y="565" width="0.0785%" height="15" fill="rgb(206,122,10)" fg:x="904" fg:w="1"/><text x="71.2076%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9576%" y="549" width="0.0785%" height="15" fill="rgb(224,88,4)" fg:x="904" fg:w="1"/><text x="71.2076%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9576%" y="533" width="0.0785%" height="15" fill="rgb(230,1,41)" fg:x="904" fg:w="1"/><text x="71.2076%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.9576%" y="517" width="0.0785%" height="15" fill="rgb(230,1,31)" fg:x="904" fg:w="1"/><text x="71.2076%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.9576%" y="501" width="0.0785%" height="15" fill="rgb(232,67,19)" fg:x="904" fg:w="1"/><text x="71.2076%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.9576%" y="485" width="0.0785%" height="15" fill="rgb(222,206,20)" fg:x="904" fg:w="1"/><text x="71.2076%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.9576%" y="469" width="0.0785%" height="15" fill="rgb(217,225,19)" fg:x="904" fg:w="1"/><text x="71.2076%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9576%" y="453" width="0.0785%" height="15" fill="rgb(234,13,33)" fg:x="904" fg:w="1"/><text x="71.2076%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.9576%" y="437" width="0.0785%" height="15" fill="rgb(254,5,1)" fg:x="904" fg:w="1"/><text x="71.2076%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.9576%" y="421" width="0.0785%" height="15" fill="rgb(211,121,41)" fg:x="904" fg:w="1"/><text x="71.2076%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.9576%" y="405" width="0.0785%" height="15" fill="rgb(213,199,35)" fg:x="904" fg:w="1"/><text x="71.2076%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.9576%" y="389" width="0.0785%" height="15" fill="rgb(240,118,22)" fg:x="904" fg:w="1"/><text x="71.2076%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.9576%" y="373" width="0.0785%" height="15" fill="rgb(238,184,25)" fg:x="904" fg:w="1"/><text x="71.2076%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9576%" y="357" width="0.0785%" height="15" fill="rgb(210,165,6)" fg:x="904" fg:w="1"/><text x="71.2076%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0361%" y="517" width="0.0785%" height="15" fill="rgb(235,149,5)" fg:x="905" fg:w="1"/><text x="71.2861%" y="527.50"></text></g><g><title>plugins_core::library::actions::reply_done (3 samples, 0.24%)</title><rect x="71.0361%" y="565" width="0.2355%" height="15" fill="rgb(221,63,5)" fg:x="905" fg:w="3"/><text x="71.2861%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (3 samples, 0.24%)</title><rect x="71.0361%" y="549" width="0.2355%" height="15" fill="rgb(250,44,41)" fg:x="905" fg:w="3"/><text x="71.2861%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (3 samples, 0.24%)</title><rect x="71.0361%" y="533" width="0.2355%" height="15" fill="rgb(235,112,47)" fg:x="905" fg:w="3"/><text x="71.2861%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (2 samples, 0.16%)</title><rect x="71.1146%" y="517" width="0.1570%" height="15" fill="rgb(252,176,34)" fg:x="906" fg:w="2"/><text x="71.3646%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (2 samples, 0.16%)</title><rect x="71.1146%" y="501" width="0.1570%" height="15" fill="rgb(234,50,19)" fg:x="906" fg:w="2"/><text x="71.3646%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="71.1931%" y="485" width="0.0785%" height="15" fill="rgb(241,195,31)" fg:x="907" fg:w="1"/><text x="71.4431%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="71.3501%" y="549" width="0.0785%" height="15" fill="rgb(212,93,11)" fg:x="909" fg:w="1"/><text x="71.6001%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.4286%" y="549" width="0.0785%" height="15" fill="rgb(254,98,51)" fg:x="910" fg:w="1"/><text x="71.6786%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.4286%" y="533" width="0.0785%" height="15" fill="rgb(246,18,45)" fg:x="910" fg:w="1"/><text x="71.6786%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4286%" y="517" width="0.0785%" height="15" fill="rgb(215,148,23)" fg:x="910" fg:w="1"/><text x="71.6786%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="71.5071%" y="501" width="0.0785%" height="15" fill="rgb(227,22,7)" fg:x="911" fg:w="1"/><text x="71.7571%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.5071%" y="485" width="0.0785%" height="15" fill="rgb(207,210,37)" fg:x="911" fg:w="1"/><text x="71.7571%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.5856%" y="469" width="0.0785%" height="15" fill="rgb(247,147,42)" fg:x="912" fg:w="1"/><text x="71.8356%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.5856%" y="453" width="0.0785%" height="15" fill="rgb(226,213,14)" fg:x="912" fg:w="1"/><text x="71.8356%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.6641%" y="373" width="0.0785%" height="15" fill="rgb(223,18,10)" fg:x="913" fg:w="1"/><text x="71.9141%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="71.6641%" y="357" width="0.0785%" height="15" fill="rgb(253,34,22)" fg:x="913" fg:w="1"/><text x="71.9141%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="71.5071%" y="517" width="0.3140%" height="15" fill="rgb(222,90,31)" fg:x="911" fg:w="4"/><text x="71.7571%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.5856%" y="501" width="0.2355%" height="15" fill="rgb(220,182,30)" fg:x="912" fg:w="3"/><text x="71.8356%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.5856%" y="485" width="0.2355%" height="15" fill="rgb(229,170,12)" fg:x="912" fg:w="3"/><text x="71.8356%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.6641%" y="469" width="0.1570%" height="15" fill="rgb(210,101,21)" fg:x="913" fg:w="2"/><text x="71.9141%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6641%" y="453" width="0.1570%" height="15" fill="rgb(237,177,31)" fg:x="913" fg:w="2"/><text x="71.9141%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="71.6641%" y="437" width="0.1570%" height="15" fill="rgb(215,91,34)" fg:x="913" fg:w="2"/><text x="71.9141%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6641%" y="421" width="0.1570%" height="15" fill="rgb(229,206,16)" fg:x="913" fg:w="2"/><text x="71.9141%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.6641%" y="405" width="0.1570%" height="15" fill="rgb(235,207,10)" fg:x="913" fg:w="2"/><text x="71.9141%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.6641%" y="389" width="0.1570%" height="15" fill="rgb(247,18,10)" fg:x="913" fg:w="2"/><text x="71.9141%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.7425%" y="373" width="0.0785%" height="15" fill="rgb(232,4,6)" fg:x="914" fg:w="1"/><text x="71.9925%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7425%" y="357" width="0.0785%" height="15" fill="rgb(247,93,45)" fg:x="914" fg:w="1"/><text x="71.9925%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8995%" y="469" width="0.0785%" height="15" fill="rgb(240,181,18)" fg:x="916" fg:w="1"/><text x="72.1495%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8995%" y="453" width="0.0785%" height="15" fill="rgb(208,224,0)" fg:x="916" fg:w="1"/><text x="72.1495%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8995%" y="437" width="0.0785%" height="15" fill="rgb(224,207,54)" fg:x="916" fg:w="1"/><text x="72.1495%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.8995%" y="421" width="0.0785%" height="15" fill="rgb(217,152,29)" fg:x="916" fg:w="1"/><text x="72.1495%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8995%" y="405" width="0.0785%" height="15" fill="rgb(243,78,27)" fg:x="916" fg:w="1"/><text x="72.1495%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.8995%" y="389" width="0.0785%" height="15" fill="rgb(228,111,9)" fg:x="916" fg:w="1"/><text x="72.1495%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.8995%" y="373" width="0.0785%" height="15" fill="rgb(230,213,21)" fg:x="916" fg:w="1"/><text x="72.1495%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.8995%" y="357" width="0.0785%" height="15" fill="rgb(248,50,36)" fg:x="916" fg:w="1"/><text x="72.1495%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.8995%" y="341" width="0.0785%" height="15" fill="rgb(226,19,31)" fg:x="916" fg:w="1"/><text x="72.1495%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.8995%" y="325" width="0.0785%" height="15" fill="rgb(205,132,21)" fg:x="916" fg:w="1"/><text x="72.1495%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.8995%" y="309" width="0.0785%" height="15" fill="rgb(207,42,19)" fg:x="916" fg:w="1"/><text x="72.1495%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.8995%" y="293" width="0.0785%" height="15" fill="rgb(229,69,35)" fg:x="916" fg:w="1"/><text x="72.1495%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.8995%" y="277" width="0.0785%" height="15" fill="rgb(226,96,11)" fg:x="916" fg:w="1"/><text x="72.1495%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.8995%" y="261" width="0.0785%" height="15" fill="rgb(236,133,54)" fg:x="916" fg:w="1"/><text x="72.1495%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.8995%" y="245" width="0.0785%" height="15" fill="rgb(247,166,21)" fg:x="916" fg:w="1"/><text x="72.1495%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.8995%" y="229" width="0.0785%" height="15" fill="rgb(220,132,12)" fg:x="916" fg:w="1"/><text x="72.1495%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.9780%" y="469" width="0.0785%" height="15" fill="rgb(233,27,30)" fg:x="917" fg:w="1"/><text x="72.2280%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.9780%" y="453" width="0.0785%" height="15" fill="rgb(246,161,27)" fg:x="917" fg:w="1"/><text x="72.2280%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (10 samples, 0.78%)</title><rect x="71.5071%" y="549" width="0.7849%" height="15" fill="rgb(240,56,3)" fg:x="911" fg:w="10"/><text x="71.7571%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (10 samples, 0.78%)</title><rect x="71.5071%" y="533" width="0.7849%" height="15" fill="rgb(242,190,9)" fg:x="911" fg:w="10"/><text x="71.7571%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.47%)</title><rect x="71.8210%" y="517" width="0.4710%" height="15" fill="rgb(234,3,52)" fg:x="915" fg:w="6"/><text x="72.0710%" y="527.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="71.8210%" y="501" width="0.4710%" height="15" fill="rgb(220,221,19)" fg:x="915" fg:w="6"/><text x="72.0710%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="71.8210%" y="485" width="0.4710%" height="15" fill="rgb(247,178,30)" fg:x="915" fg:w="6"/><text x="72.0710%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.0565%" y="469" width="0.2355%" height="15" fill="rgb(234,212,27)" fg:x="918" fg:w="3"/><text x="72.3065%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.0565%" y="453" width="0.2355%" height="15" fill="rgb(226,199,38)" fg:x="918" fg:w="3"/><text x="72.3065%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="72.0565%" y="437" width="0.2355%" height="15" fill="rgb(248,114,22)" fg:x="918" fg:w="3"/><text x="72.3065%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.0565%" y="421" width="0.2355%" height="15" fill="rgb(221,180,4)" fg:x="918" fg:w="3"/><text x="72.3065%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="72.0565%" y="405" width="0.2355%" height="15" fill="rgb(220,229,24)" fg:x="918" fg:w="3"/><text x="72.3065%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="72.0565%" y="389" width="0.2355%" height="15" fill="rgb(226,184,27)" fg:x="918" fg:w="3"/><text x="72.3065%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.2135%" y="373" width="0.0785%" height="15" fill="rgb(232,99,15)" fg:x="920" fg:w="1"/><text x="72.4635%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.2920%" y="533" width="0.0785%" height="15" fill="rgb(250,167,16)" fg:x="921" fg:w="1"/><text x="72.5420%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4490%" y="517" width="0.0785%" height="15" fill="rgb(243,113,6)" fg:x="923" fg:w="1"/><text x="72.6990%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.4490%" y="501" width="0.0785%" height="15" fill="rgb(244,147,52)" fg:x="923" fg:w="1"/><text x="72.6990%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4490%" y="485" width="0.0785%" height="15" fill="rgb(235,59,50)" fg:x="923" fg:w="1"/><text x="72.6990%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.4490%" y="469" width="0.0785%" height="15" fill="rgb(250,188,6)" fg:x="923" fg:w="1"/><text x="72.6990%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.4490%" y="453" width="0.0785%" height="15" fill="rgb(236,173,11)" fg:x="923" fg:w="1"/><text x="72.6990%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.4490%" y="437" width="0.0785%" height="15" fill="rgb(233,64,3)" fg:x="923" fg:w="1"/><text x="72.6990%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.4490%" y="421" width="0.0785%" height="15" fill="rgb(207,92,7)" fg:x="923" fg:w="1"/><text x="72.6990%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.4490%" y="405" width="0.0785%" height="15" fill="rgb(221,30,19)" fg:x="923" fg:w="1"/><text x="72.6990%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.4490%" y="389" width="0.0785%" height="15" fill="rgb(245,22,49)" fg:x="923" fg:w="1"/><text x="72.6990%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.4490%" y="373" width="0.0785%" height="15" fill="rgb(218,39,20)" fg:x="923" fg:w="1"/><text x="72.6990%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.4490%" y="357" width="0.0785%" height="15" fill="rgb(222,144,21)" fg:x="923" fg:w="1"/><text x="72.6990%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.4490%" y="341" width="0.0785%" height="15" fill="rgb(222,78,51)" fg:x="923" fg:w="1"/><text x="72.6990%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.4490%" y="325" width="0.0785%" height="15" fill="rgb(248,213,53)" fg:x="923" fg:w="1"/><text x="72.6990%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.4490%" y="309" width="0.0785%" height="15" fill="rgb(245,28,34)" fg:x="923" fg:w="1"/><text x="72.6990%" y="319.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="72.5275%" y="517" width="0.0785%" height="15" fill="rgb(229,186,26)" fg:x="924" fg:w="1"/><text x="72.7775%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="72.5275%" y="501" width="0.0785%" height="15" fill="rgb(224,0,41)" fg:x="924" fg:w="1"/><text x="72.7775%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.5275%" y="485" width="0.0785%" height="15" fill="rgb(223,136,51)" fg:x="924" fg:w="1"/><text x="72.7775%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="72.5275%" y="469" width="0.0785%" height="15" fill="rgb(234,50,9)" fg:x="924" fg:w="1"/><text x="72.7775%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.5275%" y="453" width="0.0785%" height="15" fill="rgb(242,164,20)" fg:x="924" fg:w="1"/><text x="72.7775%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="72.6060%" y="517" width="0.0785%" height="15" fill="rgb(230,169,22)" fg:x="925" fg:w="1"/><text x="72.8560%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.6845%" y="469" width="0.0785%" height="15" fill="rgb(228,82,26)" fg:x="926" fg:w="1"/><text x="72.9345%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.7630%" y="469" width="0.0785%" height="15" fill="rgb(244,220,31)" fg:x="927" fg:w="1"/><text x="73.0130%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="72.6845%" y="517" width="0.2355%" height="15" fill="rgb(214,35,25)" fg:x="926" fg:w="3"/><text x="72.9345%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="72.6845%" y="501" width="0.2355%" height="15" fill="rgb(245,162,54)" fg:x="926" fg:w="3"/><text x="72.9345%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="72.6845%" y="485" width="0.2355%" height="15" fill="rgb(210,43,24)" fg:x="926" fg:w="3"/><text x="72.9345%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.8414%" y="469" width="0.0785%" height="15" fill="rgb(226,145,51)" fg:x="928" fg:w="1"/><text x="73.0914%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.8414%" y="453" width="0.0785%" height="15" fill="rgb(237,52,53)" fg:x="928" fg:w="1"/><text x="73.0914%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.8414%" y="437" width="0.0785%" height="15" fill="rgb(216,226,7)" fg:x="928" fg:w="1"/><text x="73.0914%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.78%)</title><rect x="72.2920%" y="549" width="0.7849%" height="15" fill="rgb(206,223,18)" fg:x="921" fg:w="10"/><text x="72.5420%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.71%)</title><rect x="72.3705%" y="533" width="0.7064%" height="15" fill="rgb(221,1,10)" fg:x="922" fg:w="9"/><text x="72.6205%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="72.9199%" y="517" width="0.1570%" height="15" fill="rgb(221,151,42)" fg:x="929" fg:w="2"/><text x="73.1699%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="72.9199%" y="501" width="0.1570%" height="15" fill="rgb(205,183,46)" fg:x="929" fg:w="2"/><text x="73.1699%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="72.9984%" y="485" width="0.0785%" height="15" fill="rgb(239,229,1)" fg:x="930" fg:w="1"/><text x="73.2484%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="72.9984%" y="469" width="0.0785%" height="15" fill="rgb(236,192,23)" fg:x="930" fg:w="1"/><text x="73.2484%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="72.9984%" y="453" width="0.0785%" height="15" fill="rgb(215,146,3)" fg:x="930" fg:w="1"/><text x="73.2484%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="72.9984%" y="437" width="0.0785%" height="15" fill="rgb(235,52,27)" fg:x="930" fg:w="1"/><text x="73.2484%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="72.9984%" y="421" width="0.0785%" height="15" fill="rgb(236,45,20)" fg:x="930" fg:w="1"/><text x="73.2484%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.9984%" y="405" width="0.0785%" height="15" fill="rgb(235,86,41)" fg:x="930" fg:w="1"/><text x="73.2484%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.0769%" y="517" width="0.1570%" height="15" fill="rgb(235,27,27)" fg:x="931" fg:w="2"/><text x="73.3269%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1554%" y="501" width="0.0785%" height="15" fill="rgb(232,4,34)" fg:x="932" fg:w="1"/><text x="73.4054%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1554%" y="485" width="0.0785%" height="15" fill="rgb(215,22,10)" fg:x="932" fg:w="1"/><text x="73.4054%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1554%" y="469" width="0.0785%" height="15" fill="rgb(230,228,27)" fg:x="932" fg:w="1"/><text x="73.4054%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1554%" y="453" width="0.0785%" height="15" fill="rgb(216,26,51)" fg:x="932" fg:w="1"/><text x="73.4054%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1554%" y="437" width="0.0785%" height="15" fill="rgb(225,180,50)" fg:x="932" fg:w="1"/><text x="73.4054%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1554%" y="421" width="0.0785%" height="15" fill="rgb(236,211,2)" fg:x="932" fg:w="1"/><text x="73.4054%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1554%" y="405" width="0.0785%" height="15" fill="rgb(250,51,20)" fg:x="932" fg:w="1"/><text x="73.4054%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1554%" y="389" width="0.0785%" height="15" fill="rgb(232,70,37)" fg:x="932" fg:w="1"/><text x="73.4054%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1554%" y="373" width="0.0785%" height="15" fill="rgb(226,183,39)" fg:x="932" fg:w="1"/><text x="73.4054%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1554%" y="357" width="0.0785%" height="15" fill="rgb(232,228,21)" fg:x="932" fg:w="1"/><text x="73.4054%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1554%" y="341" width="0.0785%" height="15" fill="rgb(251,118,32)" fg:x="932" fg:w="1"/><text x="73.4054%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1554%" y="325" width="0.0785%" height="15" fill="rgb(235,172,38)" fg:x="932" fg:w="1"/><text x="73.4054%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.2339%" y="485" width="0.1570%" height="15" fill="rgb(235,63,18)" fg:x="933" fg:w="2"/><text x="73.4839%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (5 samples, 0.39%)</title><rect x="73.2339%" y="517" width="0.3925%" height="15" fill="rgb(225,4,7)" fg:x="933" fg:w="5"/><text x="73.4839%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="73.2339%" y="501" width="0.3925%" height="15" fill="rgb(231,61,1)" fg:x="933" fg:w="5"/><text x="73.4839%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="73.3909%" y="485" width="0.2355%" height="15" fill="rgb(241,155,22)" fg:x="935" fg:w="3"/><text x="73.6409%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="73.3909%" y="469" width="0.2355%" height="15" fill="rgb(209,100,26)" fg:x="935" fg:w="3"/><text x="73.6409%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="73.3909%" y="453" width="0.2355%" height="15" fill="rgb(248,181,15)" fg:x="935" fg:w="3"/><text x="73.6409%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5479%" y="437" width="0.0785%" height="15" fill="rgb(214,94,31)" fg:x="937" fg:w="1"/><text x="73.7979%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.63%)</title><rect x="73.0769%" y="549" width="0.6279%" height="15" fill="rgb(207,16,42)" fg:x="931" fg:w="8"/><text x="73.3269%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (8 samples, 0.63%)</title><rect x="73.0769%" y="533" width="0.6279%" height="15" fill="rgb(208,127,13)" fg:x="931" fg:w="8"/><text x="73.3269%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.6264%" y="517" width="0.0785%" height="15" fill="rgb(220,211,18)" fg:x="938" fg:w="1"/><text x="73.8764%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="73.7049%" y="357" width="0.0785%" height="15" fill="rgb(221,55,38)" fg:x="939" fg:w="1"/><text x="73.9549%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7049%" y="341" width="0.0785%" height="15" fill="rgb(252,219,45)" fg:x="939" fg:w="1"/><text x="73.9549%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="73.7049%" y="501" width="0.1570%" height="15" fill="rgb(248,53,35)" fg:x="939" fg:w="2"/><text x="73.9549%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="73.7049%" y="485" width="0.1570%" height="15" fill="rgb(210,87,2)" fg:x="939" fg:w="2"/><text x="73.9549%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.7049%" y="469" width="0.1570%" height="15" fill="rgb(239,133,9)" fg:x="939" fg:w="2"/><text x="73.9549%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.7049%" y="453" width="0.1570%" height="15" fill="rgb(214,114,5)" fg:x="939" fg:w="2"/><text x="73.9549%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.7049%" y="437" width="0.1570%" height="15" fill="rgb(206,124,24)" fg:x="939" fg:w="2"/><text x="73.9549%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.7049%" y="421" width="0.1570%" height="15" fill="rgb(212,57,33)" fg:x="939" fg:w="2"/><text x="73.9549%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.7049%" y="405" width="0.1570%" height="15" fill="rgb(246,21,20)" fg:x="939" fg:w="2"/><text x="73.9549%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="73.7049%" y="389" width="0.1570%" height="15" fill="rgb(253,210,39)" fg:x="939" fg:w="2"/><text x="73.9549%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.7049%" y="373" width="0.1570%" height="15" fill="rgb(209,187,24)" fg:x="939" fg:w="2"/><text x="73.9549%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7834%" y="357" width="0.0785%" height="15" fill="rgb(246,136,17)" fg:x="940" fg:w="1"/><text x="74.0334%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7834%" y="341" width="0.0785%" height="15" fill="rgb(211,0,30)" fg:x="940" fg:w="1"/><text x="74.0334%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.7834%" y="325" width="0.0785%" height="15" fill="rgb(216,199,7)" fg:x="940" fg:w="1"/><text x="74.0334%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.7834%" y="309" width="0.0785%" height="15" fill="rgb(207,210,19)" fg:x="940" fg:w="1"/><text x="74.0334%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.7834%" y="293" width="0.0785%" height="15" fill="rgb(237,187,39)" fg:x="940" fg:w="1"/><text x="74.0334%" y="303.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="73.8619%" y="485" width="0.0785%" height="15" fill="rgb(243,194,42)" fg:x="941" fg:w="1"/><text x="74.1119%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="73.8619%" y="469" width="0.0785%" height="15" fill="rgb(225,194,19)" fg:x="941" fg:w="1"/><text x="74.1119%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="73.8619%" y="453" width="0.0785%" height="15" fill="rgb(224,192,14)" fg:x="941" fg:w="1"/><text x="74.1119%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9403%" y="437" width="0.1570%" height="15" fill="rgb(252,21,18)" fg:x="942" fg:w="2"/><text x="74.1903%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9403%" y="421" width="0.1570%" height="15" fill="rgb(229,69,19)" fg:x="942" fg:w="2"/><text x="74.1903%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9403%" y="405" width="0.1570%" height="15" fill="rgb(251,31,53)" fg:x="942" fg:w="2"/><text x="74.1903%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="73.9403%" y="389" width="0.1570%" height="15" fill="rgb(218,39,50)" fg:x="942" fg:w="2"/><text x="74.1903%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0188%" y="373" width="0.0785%" height="15" fill="rgb(231,50,17)" fg:x="943" fg:w="1"/><text x="74.2688%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="73.9403%" y="453" width="0.2355%" height="15" fill="rgb(223,217,31)" fg:x="942" fg:w="3"/><text x="74.1903%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.0973%" y="437" width="0.0785%" height="15" fill="rgb(225,91,12)" fg:x="944" fg:w="1"/><text x="74.3473%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.71%)</title><rect x="73.7049%" y="533" width="0.7064%" height="15" fill="rgb(242,58,43)" fg:x="939" fg:w="9"/><text x="73.9549%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.71%)</title><rect x="73.7049%" y="517" width="0.7064%" height="15" fill="rgb(242,32,21)" fg:x="939" fg:w="9"/><text x="73.9549%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (7 samples, 0.55%)</title><rect x="73.8619%" y="501" width="0.5495%" height="15" fill="rgb(211,127,1)" fg:x="941" fg:w="7"/><text x="74.1119%" y="511.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="73.9403%" y="485" width="0.4710%" height="15" fill="rgb(231,93,13)" fg:x="942" fg:w="6"/><text x="74.1903%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="73.9403%" y="469" width="0.4710%" height="15" fill="rgb(218,83,4)" fg:x="942" fg:w="6"/><text x="74.1903%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.1758%" y="453" width="0.2355%" height="15" fill="rgb(230,218,10)" fg:x="945" fg:w="3"/><text x="74.4258%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1758%" y="437" width="0.2355%" height="15" fill="rgb(235,127,18)" fg:x="945" fg:w="3"/><text x="74.4258%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.1758%" y="421" width="0.2355%" height="15" fill="rgb(213,137,46)" fg:x="945" fg:w="3"/><text x="74.4258%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1758%" y="405" width="0.2355%" height="15" fill="rgb(235,179,24)" fg:x="945" fg:w="3"/><text x="74.4258%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="74.1758%" y="389" width="0.2355%" height="15" fill="rgb(247,58,49)" fg:x="945" fg:w="3"/><text x="74.4258%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.1758%" y="373" width="0.2355%" height="15" fill="rgb(242,222,5)" fg:x="945" fg:w="3"/><text x="74.4258%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.1758%" y="357" width="0.2355%" height="15" fill="rgb(230,16,48)" fg:x="945" fg:w="3"/><text x="74.4258%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.2543%" y="341" width="0.1570%" height="15" fill="rgb(241,192,16)" fg:x="946" fg:w="2"/><text x="74.5043%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.2543%" y="325" width="0.1570%" height="15" fill="rgb(209,25,37)" fg:x="946" fg:w="2"/><text x="74.5043%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.3328%" y="309" width="0.0785%" height="15" fill="rgb(229,215,13)" fg:x="947" fg:w="1"/><text x="74.5828%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="74.3328%" y="293" width="0.0785%" height="15" fill="rgb(213,199,8)" fg:x="947" fg:w="1"/><text x="74.5828%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="74.3328%" y="277" width="0.0785%" height="15" fill="rgb(226,151,19)" fg:x="947" fg:w="1"/><text x="74.5828%" y="287.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (10 samples, 0.78%)</title><rect x="73.7049%" y="549" width="0.7849%" height="15" fill="rgb(254,183,12)" fg:x="939" fg:w="10"/><text x="73.9549%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="74.4113%" y="533" width="0.0785%" height="15" fill="rgb(245,8,3)" fg:x="948" fg:w="1"/><text x="74.6613%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.4113%" y="517" width="0.0785%" height="15" fill="rgb(229,159,35)" fg:x="948" fg:w="1"/><text x="74.6613%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="74.4113%" y="501" width="0.0785%" height="15" fill="rgb(209,145,1)" fg:x="948" fg:w="1"/><text x="74.6613%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="74.4113%" y="485" width="0.0785%" height="15" fill="rgb(228,183,16)" fg:x="948" fg:w="1"/><text x="74.6613%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.4113%" y="469" width="0.0785%" height="15" fill="rgb(222,68,0)" fg:x="948" fg:w="1"/><text x="74.6613%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="74.4113%" y="453" width="0.0785%" height="15" fill="rgb(209,130,50)" fg:x="948" fg:w="1"/><text x="74.6613%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="74.4113%" y="437" width="0.0785%" height="15" fill="rgb(228,176,44)" fg:x="948" fg:w="1"/><text x="74.6613%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4113%" y="421" width="0.0785%" height="15" fill="rgb(221,164,2)" fg:x="948" fg:w="1"/><text x="74.6613%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.4113%" y="405" width="0.0785%" height="15" fill="rgb(249,199,49)" fg:x="948" fg:w="1"/><text x="74.6613%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.4113%" y="389" width="0.0785%" height="15" fill="rgb(228,205,53)" fg:x="948" fg:w="1"/><text x="74.6613%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.4113%" y="373" width="0.0785%" height="15" fill="rgb(235,77,20)" fg:x="948" fg:w="1"/><text x="74.6613%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.4113%" y="357" width="0.0785%" height="15" fill="rgb(227,147,34)" fg:x="948" fg:w="1"/><text x="74.6613%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.4113%" y="341" width="0.0785%" height="15" fill="rgb(226,203,52)" fg:x="948" fg:w="1"/><text x="74.6613%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.4113%" y="325" width="0.0785%" height="15" fill="rgb(226,186,23)" fg:x="948" fg:w="1"/><text x="74.6613%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (112 samples, 8.79%)</title><rect x="65.7771%" y="581" width="8.7912%" height="15" fill="rgb(236,13,30)" fg:x="838" fg:w="112"/><text x="66.0271%" y="591.50">&lt;plugins_cor..</text></g><g><title>plugins_core::tools::move_between (42 samples, 3.30%)</title><rect x="71.2716%" y="565" width="3.2967%" height="15" fill="rgb(228,121,22)" fg:x="908" fg:w="42"/><text x="71.5216%" y="575.50">plu..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="74.4898%" y="549" width="0.0785%" height="15" fill="rgb(248,222,26)" fg:x="949" fg:w="1"/><text x="74.7398%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.5683%" y="581" width="0.0785%" height="15" fill="rgb(251,72,25)" fg:x="950" fg:w="1"/><text x="74.8183%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (326 samples, 25.59%)</title><rect x="49.1366%" y="757" width="25.5887%" height="15" fill="rgb(223,114,24)" fg:x="626" fg:w="326"/><text x="49.3866%" y="767.50">&lt;engine::session::Session as kernel::acti..</text></g><g><title>kernel::plugins::mw::apply_middleware (325 samples, 25.51%)</title><rect x="49.2151%" y="741" width="25.5102%" height="15" fill="rgb(232,190,43)" fg:x="627" fg:w="325"/><text x="49.4651%" y="751.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (325 samples, 25.51%)</title><rect x="49.2151%" y="725" width="25.5102%" height="15" fill="rgb(208,90,0)" fg:x="627" fg:w="325"/><text x="49.4651%" y="735.50">kernel::plugins::mw::MiddlewareNext::hand..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (325 samples, 25.51%)</title><rect x="49.2151%" y="709" width="25.5102%" height="15" fill="rgb(234,149,31)" fg:x="627" fg:w="325"/><text x="49.4651%" y="719.50">&lt;engine::session::ExpandSurroundingsMiddl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (293 samples, 23.00%)</title><rect x="51.7268%" y="693" width="22.9984%" height="15" fill="rgb(235,188,36)" fg:x="659" fg:w="293"/><text x="51.9768%" y="703.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (293 samples, 23.00%)</title><rect x="51.7268%" y="677" width="22.9984%" height="15" fill="rgb(219,59,51)" fg:x="659" fg:w="293"/><text x="51.9768%" y="687.50">&lt;plugins_dynlib::DynamicMiddleware a..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (293 samples, 23.00%)</title><rect x="51.7268%" y="661" width="22.9984%" height="15" fill="rgb(236,101,40)" fg:x="659" fg:w="293"/><text x="51.9768%" y="671.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (293 samples, 23.00%)</title><rect x="51.7268%" y="645" width="22.9984%" height="15" fill="rgb(235,33,7)" fg:x="659" fg:w="293"/><text x="51.9768%" y="655.50">core::ops::function::FnOnce::call_on..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (293 samples, 23.00%)</title><rect x="51.7268%" y="629" width="22.9984%" height="15" fill="rgb(213,169,26)" fg:x="659" fg:w="293"/><text x="51.9768%" y="639.50">kernel::plugins::mw::MiddlewareNext:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (293 samples, 23.00%)</title><rect x="51.7268%" y="613" width="22.9984%" height="15" fill="rgb(218,99,34)" fg:x="659" fg:w="293"/><text x="51.9768%" y="623.50">core::ops::function::FnOnce::call_on..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (293 samples, 23.00%)</title><rect x="51.7268%" y="597" width="22.9984%" height="15" fill="rgb(210,57,24)" fg:x="659" fg:w="293"/><text x="51.9768%" y="607.50">&lt;engine::session::state::State as ke..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="74.6468%" y="581" width="0.0785%" height="15" fill="rgb(231,181,54)" fg:x="951" fg:w="1"/><text x="74.8968%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="74.7253%" y="741" width="0.0785%" height="15" fill="rgb(251,188,48)" fg:x="952" fg:w="1"/><text x="74.9753%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7253%" y="725" width="0.0785%" height="15" fill="rgb(243,12,45)" fg:x="952" fg:w="1"/><text x="74.9753%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.7253%" y="709" width="0.0785%" height="15" fill="rgb(250,197,9)" fg:x="952" fg:w="1"/><text x="74.9753%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.7253%" y="693" width="0.0785%" height="15" fill="rgb(235,149,35)" fg:x="952" fg:w="1"/><text x="74.9753%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.7253%" y="677" width="0.0785%" height="15" fill="rgb(219,27,19)" fg:x="952" fg:w="1"/><text x="74.9753%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.7253%" y="661" width="0.0785%" height="15" fill="rgb(244,78,31)" fg:x="952" fg:w="1"/><text x="74.9753%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7253%" y="645" width="0.0785%" height="15" fill="rgb(241,13,4)" fg:x="952" fg:w="1"/><text x="74.9753%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.7253%" y="629" width="0.0785%" height="15" fill="rgb(212,194,26)" fg:x="952" fg:w="1"/><text x="74.9753%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.7253%" y="613" width="0.0785%" height="15" fill="rgb(236,80,11)" fg:x="952" fg:w="1"/><text x="74.9753%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.7253%" y="597" width="0.0785%" height="15" fill="rgb(206,1,24)" fg:x="952" fg:w="1"/><text x="74.9753%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.7253%" y="581" width="0.0785%" height="15" fill="rgb(238,215,50)" fg:x="952" fg:w="1"/><text x="74.9753%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.7253%" y="565" width="0.0785%" height="15" fill="rgb(254,126,32)" fg:x="952" fg:w="1"/><text x="74.9753%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.7253%" y="549" width="0.0785%" height="15" fill="rgb(206,111,53)" fg:x="952" fg:w="1"/><text x="74.9753%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="74.8038%" y="725" width="0.2355%" height="15" fill="rgb(218,72,44)" fg:x="953" fg:w="3"/><text x="75.0538%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="74.8038%" y="709" width="0.2355%" height="15" fill="rgb(238,25,3)" fg:x="953" fg:w="3"/><text x="75.0538%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="74.8038%" y="693" width="0.2355%" height="15" fill="rgb(250,191,7)" fg:x="953" fg:w="3"/><text x="75.0538%" y="703.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="74.8038%" y="677" width="0.2355%" height="15" fill="rgb(238,56,30)" fg:x="953" fg:w="3"/><text x="75.0538%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="74.8038%" y="661" width="0.2355%" height="15" fill="rgb(210,27,45)" fg:x="953" fg:w="3"/><text x="75.0538%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.8038%" y="645" width="0.2355%" height="15" fill="rgb(207,10,50)" fg:x="953" fg:w="3"/><text x="75.0538%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="74.8038%" y="629" width="0.2355%" height="15" fill="rgb(249,30,23)" fg:x="953" fg:w="3"/><text x="75.0538%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="74.8038%" y="613" width="0.2355%" height="15" fill="rgb(250,80,12)" fg:x="953" fg:w="3"/><text x="75.0538%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.8823%" y="597" width="0.1570%" height="15" fill="rgb(210,221,37)" fg:x="954" fg:w="2"/><text x="75.1323%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="74.8823%" y="581" width="0.1570%" height="15" fill="rgb(205,96,24)" fg:x="954" fg:w="2"/><text x="75.1323%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.8823%" y="565" width="0.1570%" height="15" fill="rgb(247,104,22)" fg:x="954" fg:w="2"/><text x="75.1323%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="74.8823%" y="549" width="0.1570%" height="15" fill="rgb(222,61,53)" fg:x="954" fg:w="2"/><text x="75.1323%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="74.8823%" y="533" width="0.1570%" height="15" fill="rgb(241,11,53)" fg:x="954" fg:w="2"/><text x="75.1323%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9608%" y="517" width="0.0785%" height="15" fill="rgb(230,111,47)" fg:x="955" fg:w="1"/><text x="75.2108%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.0392%" y="661" width="0.0785%" height="15" fill="rgb(218,187,29)" fg:x="956" fg:w="1"/><text x="75.2892%" y="671.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.0392%" y="645" width="0.0785%" height="15" fill="rgb(210,121,46)" fg:x="956" fg:w="1"/><text x="75.2892%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.1177%" y="597" width="0.0785%" height="15" fill="rgb(250,43,19)" fg:x="957" fg:w="1"/><text x="75.3677%" y="607.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="75.1177%" y="581" width="0.0785%" height="15" fill="rgb(238,61,12)" fg:x="957" fg:w="1"/><text x="75.3677%" y="591.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="75.0392%" y="709" width="0.2355%" height="15" fill="rgb(251,198,9)" fg:x="956" fg:w="3"/><text x="75.2892%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.0392%" y="693" width="0.2355%" height="15" fill="rgb(214,192,38)" fg:x="956" fg:w="3"/><text x="75.2892%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.0392%" y="677" width="0.2355%" height="15" fill="rgb(214,73,19)" fg:x="956" fg:w="3"/><text x="75.2892%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.1177%" y="661" width="0.1570%" height="15" fill="rgb(249,222,49)" fg:x="957" fg:w="2"/><text x="75.3677%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.1177%" y="645" width="0.1570%" height="15" fill="rgb(231,181,54)" fg:x="957" fg:w="2"/><text x="75.3677%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.1177%" y="629" width="0.1570%" height="15" fill="rgb(240,1,13)" fg:x="957" fg:w="2"/><text x="75.3677%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.1177%" y="613" width="0.1570%" height="15" fill="rgb(225,21,16)" fg:x="957" fg:w="2"/><text x="75.3677%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1962%" y="597" width="0.0785%" height="15" fill="rgb(246,176,50)" fg:x="958" fg:w="1"/><text x="75.4462%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.1962%" y="581" width="0.0785%" height="15" fill="rgb(208,96,50)" fg:x="958" fg:w="1"/><text x="75.4462%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.1962%" y="565" width="0.0785%" height="15" fill="rgb(240,219,19)" fg:x="958" fg:w="1"/><text x="75.4462%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.3532%" y="597" width="0.0785%" height="15" fill="rgb(234,73,5)" fg:x="960" fg:w="1"/><text x="75.6032%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.3532%" y="581" width="0.0785%" height="15" fill="rgb(225,52,53)" fg:x="960" fg:w="1"/><text x="75.6032%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.3532%" y="565" width="0.0785%" height="15" fill="rgb(250,12,14)" fg:x="960" fg:w="1"/><text x="75.6032%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="75.4317%" y="597" width="0.0785%" height="15" fill="rgb(242,185,54)" fg:x="961" fg:w="1"/><text x="75.6817%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="75.3532%" y="629" width="0.2355%" height="15" fill="rgb(211,206,31)" fg:x="960" fg:w="3"/><text x="75.6032%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.3532%" y="613" width="0.2355%" height="15" fill="rgb(252,10,33)" fg:x="960" fg:w="3"/><text x="75.6032%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5102%" y="597" width="0.0785%" height="15" fill="rgb(216,26,7)" fg:x="962" fg:w="1"/><text x="75.7602%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5102%" y="581" width="0.0785%" height="15" fill="rgb(228,112,40)" fg:x="962" fg:w="1"/><text x="75.7602%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5102%" y="565" width="0.0785%" height="15" fill="rgb(212,21,16)" fg:x="962" fg:w="1"/><text x="75.7602%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.5102%" y="549" width="0.0785%" height="15" fill="rgb(249,3,29)" fg:x="962" fg:w="1"/><text x="75.7602%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="75.5102%" y="533" width="0.0785%" height="15" fill="rgb(221,42,51)" fg:x="962" fg:w="1"/><text x="75.7602%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="75.5102%" y="517" width="0.0785%" height="15" fill="rgb(225,90,21)" fg:x="962" fg:w="1"/><text x="75.7602%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5102%" y="501" width="0.0785%" height="15" fill="rgb(242,131,5)" fg:x="962" fg:w="1"/><text x="75.7602%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5887%" y="629" width="0.0785%" height="15" fill="rgb(220,187,28)" fg:x="963" fg:w="1"/><text x="75.8387%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="75.5887%" y="613" width="0.0785%" height="15" fill="rgb(210,75,48)" fg:x="963" fg:w="1"/><text x="75.8387%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="75.5887%" y="597" width="0.0785%" height="15" fill="rgb(211,91,40)" fg:x="963" fg:w="1"/><text x="75.8387%" y="607.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="75.6672%" y="581" width="0.1570%" height="15" fill="rgb(205,43,18)" fg:x="964" fg:w="2"/><text x="75.9172%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="75.6672%" y="565" width="0.1570%" height="15" fill="rgb(207,123,11)" fg:x="964" fg:w="2"/><text x="75.9172%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.7457%" y="549" width="0.0785%" height="15" fill="rgb(235,89,39)" fg:x="965" fg:w="1"/><text x="75.9957%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7457%" y="533" width="0.0785%" height="15" fill="rgb(245,217,27)" fg:x="965" fg:w="1"/><text x="75.9957%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7457%" y="517" width="0.0785%" height="15" fill="rgb(216,55,17)" fg:x="965" fg:w="1"/><text x="75.9957%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.7457%" y="501" width="0.0785%" height="15" fill="rgb(252,116,44)" fg:x="965" fg:w="1"/><text x="75.9957%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (12 samples, 0.94%)</title><rect x="75.0392%" y="725" width="0.9419%" height="15" fill="rgb(229,153,4)" fg:x="956" fg:w="12"/><text x="75.2892%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.71%)</title><rect x="75.2747%" y="709" width="0.7064%" height="15" fill="rgb(222,24,35)" fg:x="959" fg:w="9"/><text x="75.5247%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.71%)</title><rect x="75.2747%" y="693" width="0.7064%" height="15" fill="rgb(214,26,20)" fg:x="959" fg:w="9"/><text x="75.5247%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.63%)</title><rect x="75.3532%" y="677" width="0.6279%" height="15" fill="rgb(215,14,45)" fg:x="960" fg:w="8"/><text x="75.6032%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.63%)</title><rect x="75.3532%" y="661" width="0.6279%" height="15" fill="rgb(217,212,50)" fg:x="960" fg:w="8"/><text x="75.6032%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.63%)</title><rect x="75.3532%" y="645" width="0.6279%" height="15" fill="rgb(230,172,52)" fg:x="960" fg:w="8"/><text x="75.6032%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="75.6672%" y="629" width="0.3140%" height="15" fill="rgb(210,48,36)" fg:x="964" fg:w="4"/><text x="75.9172%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="75.6672%" y="613" width="0.3140%" height="15" fill="rgb(216,213,32)" fg:x="964" fg:w="4"/><text x="75.9172%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (4 samples, 0.31%)</title><rect x="75.6672%" y="597" width="0.3140%" height="15" fill="rgb(237,202,41)" fg:x="964" fg:w="4"/><text x="75.9172%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8242%" y="581" width="0.1570%" height="15" fill="rgb(209,14,29)" fg:x="966" fg:w="2"/><text x="76.0742%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.8242%" y="565" width="0.1570%" height="15" fill="rgb(219,29,3)" fg:x="966" fg:w="2"/><text x="76.0742%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="75.8242%" y="549" width="0.1570%" height="15" fill="rgb(229,13,49)" fg:x="966" fg:w="2"/><text x="76.0742%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8242%" y="533" width="0.1570%" height="15" fill="rgb(210,206,2)" fg:x="966" fg:w="2"/><text x="76.0742%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.8242%" y="517" width="0.1570%" height="15" fill="rgb(216,154,46)" fg:x="966" fg:w="2"/><text x="76.0742%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="75.8242%" y="501" width="0.1570%" height="15" fill="rgb(211,170,52)" fg:x="966" fg:w="2"/><text x="76.0742%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.8242%" y="485" width="0.1570%" height="15" fill="rgb(233,109,47)" fg:x="966" fg:w="2"/><text x="76.0742%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.8242%" y="469" width="0.1570%" height="15" fill="rgb(208,212,30)" fg:x="966" fg:w="2"/><text x="76.0742%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.9027%" y="453" width="0.0785%" height="15" fill="rgb(215,190,19)" fg:x="967" fg:w="1"/><text x="76.1527%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9027%" y="437" width="0.0785%" height="15" fill="rgb(207,164,53)" fg:x="967" fg:w="1"/><text x="76.1527%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.9027%" y="421" width="0.0785%" height="15" fill="rgb(213,87,49)" fg:x="967" fg:w="1"/><text x="76.1527%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="75.9027%" y="405" width="0.0785%" height="15" fill="rgb(241,216,24)" fg:x="967" fg:w="1"/><text x="76.1527%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="75.9027%" y="389" width="0.0785%" height="15" fill="rgb(241,123,45)" fg:x="967" fg:w="1"/><text x="76.1527%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0597%" y="677" width="0.0785%" height="15" fill="rgb(220,36,15)" fg:x="969" fg:w="1"/><text x="76.3097%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0597%" y="661" width="0.0785%" height="15" fill="rgb(215,202,9)" fg:x="969" fg:w="1"/><text x="76.3097%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.0597%" y="645" width="0.0785%" height="15" fill="rgb(252,71,26)" fg:x="969" fg:w="1"/><text x="76.3097%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.0597%" y="629" width="0.0785%" height="15" fill="rgb(243,195,19)" fg:x="969" fg:w="1"/><text x="76.3097%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.1381%" y="581" width="0.0785%" height="15" fill="rgb(207,167,27)" fg:x="970" fg:w="1"/><text x="76.3881%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="75.9812%" y="725" width="0.3140%" height="15" fill="rgb(250,146,54)" fg:x="968" fg:w="4"/><text x="76.2312%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="75.9812%" y="709" width="0.3140%" height="15" fill="rgb(245,79,9)" fg:x="968" fg:w="4"/><text x="76.2312%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="75.9812%" y="693" width="0.3140%" height="15" fill="rgb(234,197,22)" fg:x="968" fg:w="4"/><text x="76.2312%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1381%" y="677" width="0.1570%" height="15" fill="rgb(221,52,48)" fg:x="970" fg:w="2"/><text x="76.3881%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1381%" y="661" width="0.1570%" height="15" fill="rgb(235,80,0)" fg:x="970" fg:w="2"/><text x="76.3881%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.1381%" y="645" width="0.1570%" height="15" fill="rgb(221,117,53)" fg:x="970" fg:w="2"/><text x="76.3881%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1381%" y="629" width="0.1570%" height="15" fill="rgb(239,48,47)" fg:x="970" fg:w="2"/><text x="76.3881%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="76.1381%" y="613" width="0.1570%" height="15" fill="rgb(227,191,52)" fg:x="970" fg:w="2"/><text x="76.3881%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.1381%" y="597" width="0.1570%" height="15" fill="rgb(241,118,1)" fg:x="970" fg:w="2"/><text x="76.3881%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2166%" y="581" width="0.0785%" height="15" fill="rgb(240,85,3)" fg:x="971" fg:w="1"/><text x="76.4666%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2166%" y="565" width="0.0785%" height="15" fill="rgb(237,68,37)" fg:x="971" fg:w="1"/><text x="76.4666%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.2166%" y="549" width="0.0785%" height="15" fill="rgb(212,9,20)" fg:x="971" fg:w="1"/><text x="76.4666%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.2166%" y="533" width="0.0785%" height="15" fill="rgb(218,84,17)" fg:x="971" fg:w="1"/><text x="76.4666%" y="543.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (20 samples, 1.57%)</title><rect x="74.8038%" y="741" width="1.5699%" height="15" fill="rgb(235,147,20)" fg:x="953" fg:w="20"/><text x="75.0538%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="76.2951%" y="725" width="0.0785%" height="15" fill="rgb(208,224,1)" fg:x="972" fg:w="1"/><text x="76.5451%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2951%" y="709" width="0.0785%" height="15" fill="rgb(232,97,50)" fg:x="972" fg:w="1"/><text x="76.5451%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.2951%" y="693" width="0.0785%" height="15" fill="rgb(238,15,45)" fg:x="972" fg:w="1"/><text x="76.5451%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.73%)</title><rect x="74.7253%" y="757" width="1.7268%" height="15" fill="rgb(231,46,18)" fg:x="952" fg:w="22"/><text x="74.9753%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="76.3736%" y="741" width="0.0785%" height="15" fill="rgb(254,169,10)" fg:x="973" fg:w="1"/><text x="76.6236%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.5306%" y="709" width="0.0785%" height="15" fill="rgb(243,169,30)" fg:x="975" fg:w="1"/><text x="76.7806%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="76.6091%" y="661" width="0.1570%" height="15" fill="rgb(236,90,49)" fg:x="976" fg:w="2"/><text x="76.8591%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="76.6091%" y="645" width="0.1570%" height="15" fill="rgb(218,80,15)" fg:x="976" fg:w="2"/><text x="76.8591%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="76.6876%" y="629" width="0.0785%" height="15" fill="rgb(222,115,37)" fg:x="977" fg:w="1"/><text x="76.9376%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8446%" y="613" width="0.0785%" height="15" fill="rgb(227,0,6)" fg:x="979" fg:w="1"/><text x="77.0946%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8446%" y="597" width="0.0785%" height="15" fill="rgb(217,189,13)" fg:x="979" fg:w="1"/><text x="77.0946%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.8446%" y="581" width="0.0785%" height="15" fill="rgb(220,74,19)" fg:x="979" fg:w="1"/><text x="77.0946%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.8446%" y="565" width="0.0785%" height="15" fill="rgb(224,81,18)" fg:x="979" fg:w="1"/><text x="77.0946%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.8446%" y="549" width="0.0785%" height="15" fill="rgb(245,178,48)" fg:x="979" fg:w="1"/><text x="77.0946%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.8446%" y="533" width="0.0785%" height="15" fill="rgb(207,78,24)" fg:x="979" fg:w="1"/><text x="77.0946%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.8446%" y="517" width="0.0785%" height="15" fill="rgb(223,222,30)" fg:x="979" fg:w="1"/><text x="77.0946%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.8446%" y="501" width="0.0785%" height="15" fill="rgb(234,101,12)" fg:x="979" fg:w="1"/><text x="77.0946%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="76.8446%" y="485" width="0.0785%" height="15" fill="rgb(209,80,46)" fg:x="979" fg:w="1"/><text x="77.0946%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="76.8446%" y="469" width="0.0785%" height="15" fill="rgb(228,79,14)" fg:x="979" fg:w="1"/><text x="77.0946%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="76.8446%" y="629" width="0.1570%" height="15" fill="rgb(220,219,34)" fg:x="979" fg:w="2"/><text x="77.0946%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9231%" y="613" width="0.0785%" height="15" fill="rgb(207,80,21)" fg:x="980" fg:w="1"/><text x="77.1731%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.9231%" y="597" width="0.0785%" height="15" fill="rgb(210,154,44)" fg:x="980" fg:w="1"/><text x="77.1731%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="76.9231%" y="581" width="0.0785%" height="15" fill="rgb(246,44,39)" fg:x="980" fg:w="1"/><text x="77.1731%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="76.9231%" y="565" width="0.0785%" height="15" fill="rgb(252,175,13)" fg:x="980" fg:w="1"/><text x="77.1731%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="76.9231%" y="549" width="0.0785%" height="15" fill="rgb(211,50,39)" fg:x="980" fg:w="1"/><text x="77.1731%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9231%" y="533" width="0.0785%" height="15" fill="rgb(231,204,27)" fg:x="980" fg:w="1"/><text x="77.1731%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="76.9231%" y="517" width="0.0785%" height="15" fill="rgb(253,26,34)" fg:x="980" fg:w="1"/><text x="77.1731%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="76.9231%" y="501" width="0.0785%" height="15" fill="rgb(207,139,38)" fg:x="980" fg:w="1"/><text x="77.1731%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="76.9231%" y="485" width="0.0785%" height="15" fill="rgb(248,54,27)" fg:x="980" fg:w="1"/><text x="77.1731%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="76.9231%" y="469" width="0.0785%" height="15" fill="rgb(234,25,33)" fg:x="980" fg:w="1"/><text x="77.1731%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="76.9231%" y="453" width="0.0785%" height="15" fill="rgb(249,107,47)" fg:x="980" fg:w="1"/><text x="77.1731%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9231%" y="437" width="0.0785%" height="15" fill="rgb(230,190,31)" fg:x="980" fg:w="1"/><text x="77.1731%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.0801%" y="501" width="0.0785%" height="15" fill="rgb(238,173,45)" fg:x="982" fg:w="1"/><text x="77.3301%" y="511.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.63%)</title><rect x="76.6091%" y="709" width="0.6279%" height="15" fill="rgb(222,16,50)" fg:x="976" fg:w="8"/><text x="76.8591%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.63%)</title><rect x="76.6091%" y="693" width="0.6279%" height="15" fill="rgb(251,204,47)" fg:x="976" fg:w="8"/><text x="76.8591%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.63%)</title><rect x="76.6091%" y="677" width="0.6279%" height="15" fill="rgb(225,12,3)" fg:x="976" fg:w="8"/><text x="76.8591%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.47%)</title><rect x="76.7661%" y="661" width="0.4710%" height="15" fill="rgb(214,208,22)" fg:x="978" fg:w="6"/><text x="77.0161%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.47%)</title><rect x="76.7661%" y="645" width="0.4710%" height="15" fill="rgb(240,57,32)" fg:x="978" fg:w="6"/><text x="77.0161%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.0016%" y="629" width="0.2355%" height="15" fill="rgb(243,113,48)" fg:x="981" fg:w="3"/><text x="77.2516%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.0016%" y="613" width="0.2355%" height="15" fill="rgb(225,135,30)" fg:x="981" fg:w="3"/><text x="77.2516%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.0016%" y="597" width="0.2355%" height="15" fill="rgb(222,3,53)" fg:x="981" fg:w="3"/><text x="77.2516%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.0016%" y="581" width="0.2355%" height="15" fill="rgb(243,142,2)" fg:x="981" fg:w="3"/><text x="77.2516%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="77.0016%" y="565" width="0.2355%" height="15" fill="rgb(233,67,14)" fg:x="981" fg:w="3"/><text x="77.2516%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.0016%" y="549" width="0.2355%" height="15" fill="rgb(245,125,36)" fg:x="981" fg:w="3"/><text x="77.2516%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.0801%" y="533" width="0.1570%" height="15" fill="rgb(225,199,6)" fg:x="982" fg:w="2"/><text x="77.3301%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0801%" y="517" width="0.1570%" height="15" fill="rgb(244,71,6)" fg:x="982" fg:w="2"/><text x="77.3301%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.1586%" y="501" width="0.0785%" height="15" fill="rgb(225,62,9)" fg:x="983" fg:w="1"/><text x="77.4086%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1586%" y="485" width="0.0785%" height="15" fill="rgb(246,139,53)" fg:x="983" fg:w="1"/><text x="77.4086%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="77.1586%" y="469" width="0.0785%" height="15" fill="rgb(243,161,46)" fg:x="983" fg:w="1"/><text x="77.4086%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="77.1586%" y="453" width="0.0785%" height="15" fill="rgb(236,153,7)" fg:x="983" fg:w="1"/><text x="77.4086%" y="463.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="77.2370%" y="693" width="0.2355%" height="15" fill="rgb(248,42,35)" fg:x="984" fg:w="3"/><text x="77.4870%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.2370%" y="677" width="0.2355%" height="15" fill="rgb(250,17,31)" fg:x="984" fg:w="3"/><text x="77.4870%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.2370%" y="661" width="0.2355%" height="15" fill="rgb(248,138,14)" fg:x="984" fg:w="3"/><text x="77.4870%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.2370%" y="645" width="0.2355%" height="15" fill="rgb(228,161,3)" fg:x="984" fg:w="3"/><text x="77.4870%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.2370%" y="629" width="0.2355%" height="15" fill="rgb(248,116,17)" fg:x="984" fg:w="3"/><text x="77.4870%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.3155%" y="613" width="0.1570%" height="15" fill="rgb(207,78,24)" fg:x="985" fg:w="2"/><text x="77.5655%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.3155%" y="597" width="0.1570%" height="15" fill="rgb(234,99,48)" fg:x="985" fg:w="2"/><text x="77.5655%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.3155%" y="581" width="0.1570%" height="15" fill="rgb(242,22,26)" fg:x="985" fg:w="2"/><text x="77.5655%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.3155%" y="565" width="0.1570%" height="15" fill="rgb(227,78,32)" fg:x="985" fg:w="2"/><text x="77.5655%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.3155%" y="549" width="0.1570%" height="15" fill="rgb(226,189,43)" fg:x="985" fg:w="2"/><text x="77.5655%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.3155%" y="533" width="0.1570%" height="15" fill="rgb(227,218,35)" fg:x="985" fg:w="2"/><text x="77.5655%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="77.3155%" y="517" width="0.1570%" height="15" fill="rgb(206,111,40)" fg:x="985" fg:w="2"/><text x="77.5655%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.3940%" y="501" width="0.0785%" height="15" fill="rgb(208,217,22)" fg:x="986" fg:w="1"/><text x="77.6440%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.4725%" y="549" width="0.0785%" height="15" fill="rgb(248,20,20)" fg:x="987" fg:w="1"/><text x="77.7225%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4725%" y="533" width="0.0785%" height="15" fill="rgb(239,155,16)" fg:x="987" fg:w="1"/><text x="77.7225%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="77.4725%" y="517" width="0.0785%" height="15" fill="rgb(238,171,46)" fg:x="987" fg:w="1"/><text x="77.7225%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.4725%" y="501" width="0.0785%" height="15" fill="rgb(248,11,36)" fg:x="987" fg:w="1"/><text x="77.7225%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4725%" y="485" width="0.0785%" height="15" fill="rgb(220,148,37)" fg:x="987" fg:w="1"/><text x="77.7225%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.4725%" y="469" width="0.0785%" height="15" fill="rgb(218,144,42)" fg:x="987" fg:w="1"/><text x="77.7225%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="77.4725%" y="581" width="0.1570%" height="15" fill="rgb(245,20,20)" fg:x="987" fg:w="2"/><text x="77.7225%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.4725%" y="565" width="0.1570%" height="15" fill="rgb(240,111,48)" fg:x="987" fg:w="2"/><text x="77.7225%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="77.5510%" y="549" width="0.0785%" height="15" fill="rgb(237,225,32)" fg:x="988" fg:w="1"/><text x="77.8010%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.5510%" y="533" width="0.0785%" height="15" fill="rgb(228,161,46)" fg:x="988" fg:w="1"/><text x="77.8010%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="77.4725%" y="613" width="0.2355%" height="15" fill="rgb(235,196,21)" fg:x="987" fg:w="3"/><text x="77.7225%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="77.4725%" y="597" width="0.2355%" height="15" fill="rgb(250,133,21)" fg:x="987" fg:w="3"/><text x="77.7225%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.6295%" y="581" width="0.0785%" height="15" fill="rgb(236,94,32)" fg:x="989" fg:w="1"/><text x="77.8795%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.39%)</title><rect x="77.4725%" y="661" width="0.3925%" height="15" fill="rgb(219,176,25)" fg:x="987" fg:w="5"/><text x="77.7225%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="77.4725%" y="645" width="0.3925%" height="15" fill="rgb(211,17,43)" fg:x="987" fg:w="5"/><text x="77.7225%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="77.4725%" y="629" width="0.3925%" height="15" fill="rgb(220,75,23)" fg:x="987" fg:w="5"/><text x="77.7225%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7080%" y="613" width="0.1570%" height="15" fill="rgb(215,122,32)" fg:x="990" fg:w="2"/><text x="77.9580%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7080%" y="597" width="0.1570%" height="15" fill="rgb(218,57,38)" fg:x="990" fg:w="2"/><text x="77.9580%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.7080%" y="581" width="0.1570%" height="15" fill="rgb(233,208,46)" fg:x="990" fg:w="2"/><text x="77.9580%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7080%" y="565" width="0.1570%" height="15" fill="rgb(221,35,50)" fg:x="990" fg:w="2"/><text x="77.9580%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7080%" y="549" width="0.1570%" height="15" fill="rgb(229,213,29)" fg:x="990" fg:w="2"/><text x="77.9580%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.7080%" y="533" width="0.1570%" height="15" fill="rgb(229,110,40)" fg:x="990" fg:w="2"/><text x="77.9580%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7080%" y="517" width="0.1570%" height="15" fill="rgb(247,206,19)" fg:x="990" fg:w="2"/><text x="77.9580%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7080%" y="501" width="0.1570%" height="15" fill="rgb(216,229,45)" fg:x="990" fg:w="2"/><text x="77.9580%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.7080%" y="485" width="0.1570%" height="15" fill="rgb(205,184,31)" fg:x="990" fg:w="2"/><text x="77.9580%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7080%" y="469" width="0.1570%" height="15" fill="rgb(213,91,10)" fg:x="990" fg:w="2"/><text x="77.9580%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7080%" y="453" width="0.1570%" height="15" fill="rgb(250,49,8)" fg:x="990" fg:w="2"/><text x="77.9580%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.7080%" y="437" width="0.1570%" height="15" fill="rgb(207,26,8)" fg:x="990" fg:w="2"/><text x="77.9580%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.7080%" y="421" width="0.1570%" height="15" fill="rgb(224,2,13)" fg:x="990" fg:w="2"/><text x="77.9580%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.7080%" y="405" width="0.1570%" height="15" fill="rgb(219,108,27)" fg:x="990" fg:w="2"/><text x="77.9580%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.7080%" y="389" width="0.1570%" height="15" fill="rgb(240,89,32)" fg:x="990" fg:w="2"/><text x="77.9580%" y="399.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="77.7080%" y="373" width="0.1570%" height="15" fill="rgb(248,205,3)" fg:x="990" fg:w="2"/><text x="77.9580%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.7865%" y="357" width="0.0785%" height="15" fill="rgb(236,197,47)" fg:x="991" fg:w="1"/><text x="78.0365%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (10 samples, 0.78%)</title><rect x="77.2370%" y="709" width="0.7849%" height="15" fill="rgb(244,185,52)" fg:x="984" fg:w="10"/><text x="77.4870%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="77.4725%" y="693" width="0.5495%" height="15" fill="rgb(210,206,23)" fg:x="987" fg:w="7"/><text x="77.7225%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="77.4725%" y="677" width="0.5495%" height="15" fill="rgb(251,177,30)" fg:x="987" fg:w="7"/><text x="77.7225%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="77.8650%" y="661" width="0.1570%" height="15" fill="rgb(243,27,45)" fg:x="992" fg:w="2"/><text x="78.1150%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.8650%" y="645" width="0.1570%" height="15" fill="rgb(248,141,51)" fg:x="992" fg:w="2"/><text x="78.1150%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="78.0220%" y="709" width="0.0785%" height="15" fill="rgb(235,102,15)" fg:x="994" fg:w="1"/><text x="78.2720%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="78.0220%" y="693" width="0.0785%" height="15" fill="rgb(214,164,53)" fg:x="994" fg:w="1"/><text x="78.2720%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.0220%" y="677" width="0.0785%" height="15" fill="rgb(228,18,51)" fg:x="994" fg:w="1"/><text x="78.2720%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.0220%" y="661" width="0.0785%" height="15" fill="rgb(205,211,11)" fg:x="994" fg:w="1"/><text x="78.2720%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (22 samples, 1.73%)</title><rect x="76.4521%" y="741" width="1.7268%" height="15" fill="rgb(208,63,6)" fg:x="974" fg:w="22"/><text x="76.7021%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (22 samples, 1.73%)</title><rect x="76.4521%" y="725" width="1.7268%" height="15" fill="rgb(245,76,14)" fg:x="974" fg:w="22"/><text x="76.7021%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="78.1005%" y="709" width="0.0785%" height="15" fill="rgb(234,176,34)" fg:x="995" fg:w="1"/><text x="78.3505%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1005%" y="693" width="0.0785%" height="15" fill="rgb(243,156,42)" fg:x="995" fg:w="1"/><text x="78.3505%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="78.1005%" y="677" width="0.0785%" height="15" fill="rgb(237,182,10)" fg:x="995" fg:w="1"/><text x="78.3505%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="78.1005%" y="661" width="0.0785%" height="15" fill="rgb(244,117,0)" fg:x="995" fg:w="1"/><text x="78.3505%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1790%" y="725" width="0.0785%" height="15" fill="rgb(239,91,50)" fg:x="996" fg:w="1"/><text x="78.4290%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.1790%" y="709" width="0.0785%" height="15" fill="rgb(206,38,9)" fg:x="996" fg:w="1"/><text x="78.4290%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="78.1790%" y="693" width="0.0785%" height="15" fill="rgb(205,25,10)" fg:x="996" fg:w="1"/><text x="78.4290%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="78.1790%" y="677" width="0.0785%" height="15" fill="rgb(206,224,7)" fg:x="996" fg:w="1"/><text x="78.4290%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="78.1790%" y="661" width="0.0785%" height="15" fill="rgb(227,157,10)" fg:x="996" fg:w="1"/><text x="78.4290%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1790%" y="645" width="0.0785%" height="15" fill="rgb(214,157,37)" fg:x="996" fg:w="1"/><text x="78.4290%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="78.1790%" y="629" width="0.0785%" height="15" fill="rgb(209,180,35)" fg:x="996" fg:w="1"/><text x="78.4290%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="78.1790%" y="613" width="0.0785%" height="15" fill="rgb(216,174,49)" fg:x="996" fg:w="1"/><text x="78.4290%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="78.1790%" y="597" width="0.0785%" height="15" fill="rgb(205,96,20)" fg:x="996" fg:w="1"/><text x="78.4290%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="78.1790%" y="581" width="0.0785%" height="15" fill="rgb(214,220,39)" fg:x="996" fg:w="1"/><text x="78.4290%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="78.1790%" y="565" width="0.0785%" height="15" fill="rgb(245,126,30)" fg:x="996" fg:w="1"/><text x="78.4290%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="78.1790%" y="549" width="0.0785%" height="15" fill="rgb(215,88,33)" fg:x="996" fg:w="1"/><text x="78.4290%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="78.2575%" y="597" width="0.0785%" height="15" fill="rgb(210,1,49)" fg:x="997" fg:w="1"/><text x="78.5075%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.2575%" y="581" width="0.0785%" height="15" fill="rgb(207,133,3)" fg:x="997" fg:w="1"/><text x="78.5075%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.2575%" y="565" width="0.0785%" height="15" fill="rgb(231,47,43)" fg:x="997" fg:w="1"/><text x="78.5075%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="78.2575%" y="549" width="0.0785%" height="15" fill="rgb(245,64,1)" fg:x="997" fg:w="1"/><text x="78.5075%" y="559.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="78.2575%" y="533" width="0.0785%" height="15" fill="rgb(253,145,20)" fg:x="997" fg:w="1"/><text x="78.5075%" y="543.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="78.2575%" y="517" width="0.0785%" height="15" fill="rgb(211,39,18)" fg:x="997" fg:w="1"/><text x="78.5075%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (25 samples, 1.96%)</title><rect x="76.4521%" y="757" width="1.9623%" height="15" fill="rgb(223,225,18)" fg:x="974" fg:w="25"/><text x="76.7021%" y="767.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="78.1790%" y="741" width="0.2355%" height="15" fill="rgb(210,202,44)" fg:x="996" fg:w="3"/><text x="78.4290%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.2575%" y="725" width="0.1570%" height="15" fill="rgb(231,138,36)" fg:x="997" fg:w="2"/><text x="78.5075%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.2575%" y="709" width="0.1570%" height="15" fill="rgb(237,115,25)" fg:x="997" fg:w="2"/><text x="78.5075%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.2575%" y="693" width="0.1570%" height="15" fill="rgb(215,53,48)" fg:x="997" fg:w="2"/><text x="78.5075%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.2575%" y="677" width="0.1570%" height="15" fill="rgb(243,193,24)" fg:x="997" fg:w="2"/><text x="78.5075%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.2575%" y="661" width="0.1570%" height="15" fill="rgb(210,106,28)" fg:x="997" fg:w="2"/><text x="78.5075%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.2575%" y="645" width="0.1570%" height="15" fill="rgb(249,192,0)" fg:x="997" fg:w="2"/><text x="78.5075%" y="655.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.2575%" y="629" width="0.1570%" height="15" fill="rgb(224,96,21)" fg:x="997" fg:w="2"/><text x="78.5075%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.2575%" y="613" width="0.1570%" height="15" fill="rgb(243,160,19)" fg:x="997" fg:w="2"/><text x="78.5075%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3359%" y="597" width="0.0785%" height="15" fill="rgb(219,205,50)" fg:x="998" fg:w="1"/><text x="78.5859%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.3359%" y="581" width="0.0785%" height="15" fill="rgb(218,175,44)" fg:x="998" fg:w="1"/><text x="78.5859%" y="591.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.3359%" y="565" width="0.0785%" height="15" fill="rgb(251,84,47)" fg:x="998" fg:w="1"/><text x="78.5859%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.3359%" y="549" width="0.0785%" height="15" fill="rgb(241,14,16)" fg:x="998" fg:w="1"/><text x="78.5859%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.3359%" y="533" width="0.0785%" height="15" fill="rgb(207,142,28)" fg:x="998" fg:w="1"/><text x="78.5859%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.3359%" y="517" width="0.0785%" height="15" fill="rgb(208,116,22)" fg:x="998" fg:w="1"/><text x="78.5859%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.3359%" y="501" width="0.0785%" height="15" fill="rgb(210,0,43)" fg:x="998" fg:w="1"/><text x="78.5859%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="78.3359%" y="485" width="0.0785%" height="15" fill="rgb(246,33,21)" fg:x="998" fg:w="1"/><text x="78.5859%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.3359%" y="469" width="0.0785%" height="15" fill="rgb(208,158,54)" fg:x="998" fg:w="1"/><text x="78.5859%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="78.3359%" y="453" width="0.0785%" height="15" fill="rgb(218,99,29)" fg:x="998" fg:w="1"/><text x="78.5859%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.3359%" y="437" width="0.0785%" height="15" fill="rgb(226,29,7)" fg:x="998" fg:w="1"/><text x="78.5859%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="78.3359%" y="421" width="0.0785%" height="15" fill="rgb(206,178,46)" fg:x="998" fg:w="1"/><text x="78.5859%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="78.3359%" y="405" width="0.0785%" height="15" fill="rgb(205,169,32)" fg:x="998" fg:w="1"/><text x="78.5859%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="78.3359%" y="389" width="0.0785%" height="15" fill="rgb(217,4,13)" fg:x="998" fg:w="1"/><text x="78.5859%" y="399.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.3359%" y="373" width="0.0785%" height="15" fill="rgb(210,140,37)" fg:x="998" fg:w="1"/><text x="78.5859%" y="383.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="78.4929%" y="709" width="0.1570%" height="15" fill="rgb(229,80,10)" fg:x="1000" fg:w="2"/><text x="78.7429%" y="719.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="78.4929%" y="693" width="0.1570%" height="15" fill="rgb(212,175,34)" fg:x="1000" fg:w="2"/><text x="78.7429%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="78.4929%" y="677" width="0.1570%" height="15" fill="rgb(216,207,24)" fg:x="1000" fg:w="2"/><text x="78.7429%" y="687.50"></text></g><g><title>plugins_core::library::parser::word (2 samples, 0.16%)</title><rect x="78.4929%" y="661" width="0.1570%" height="15" fill="rgb(234,163,3)" fg:x="1000" fg:w="2"/><text x="78.7429%" y="671.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (2 samples, 0.16%)</title><rect x="78.4929%" y="645" width="0.1570%" height="15" fill="rgb(248,101,16)" fg:x="1000" fg:w="2"/><text x="78.7429%" y="655.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (4 samples, 0.31%)</title><rect x="78.4144%" y="757" width="0.3140%" height="15" fill="rgb(209,152,54)" fg:x="999" fg:w="4"/><text x="78.6644%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.24%)</title><rect x="78.4929%" y="741" width="0.2355%" height="15" fill="rgb(229,124,51)" fg:x="1000" fg:w="3"/><text x="78.7429%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (3 samples, 0.24%)</title><rect x="78.4929%" y="725" width="0.2355%" height="15" fill="rgb(219,83,18)" fg:x="1000" fg:w="3"/><text x="78.7429%" y="735.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.6499%" y="709" width="0.0785%" height="15" fill="rgb(206,29,38)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.6499%" y="693" width="0.0785%" height="15" fill="rgb(245,123,23)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="703.50"></text></g><g><title>plugins_core::library::parser::word (1 samples, 0.08%)</title><rect x="78.6499%" y="677" width="0.0785%" height="15" fill="rgb(238,50,33)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="687.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_contained_in (1 samples, 0.08%)</title><rect x="78.6499%" y="661" width="0.0785%" height="15" fill="rgb(234,165,23)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="671.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.08%)</title><rect x="78.6499%" y="645" width="0.0785%" height="15" fill="rgb(211,82,31)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="655.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="78.6499%" y="629" width="0.0785%" height="15" fill="rgb(224,166,46)" fg:x="1002" fg:w="1"/><text x="78.8999%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="78.7284%" y="741" width="0.0785%" height="15" fill="rgb(211,13,8)" fg:x="1003" fg:w="1"/><text x="78.9784%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="78.7284%" y="725" width="0.0785%" height="15" fill="rgb(212,7,42)" fg:x="1003" fg:w="1"/><text x="78.9784%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::new_from (1 samples, 0.08%)</title><rect x="78.8069%" y="725" width="0.0785%" height="15" fill="rgb(249,102,19)" fg:x="1004" fg:w="1"/><text x="79.0569%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="78.9639%" y="709" width="0.0785%" height="15" fill="rgb(225,41,13)" fg:x="1006" fg:w="1"/><text x="79.2139%" y="719.50"></text></g><g><title>engine::users::model::username_to_key (6 samples, 0.47%)</title><rect x="78.7284%" y="757" width="0.4710%" height="15" fill="rgb(220,65,27)" fg:x="1003" fg:w="6"/><text x="78.9784%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.39%)</title><rect x="78.8069%" y="741" width="0.3925%" height="15" fill="rgb(206,4,41)" fg:x="1004" fg:w="5"/><text x="79.0569%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="78.8854%" y="725" width="0.3140%" height="15" fill="rgb(219,60,39)" fg:x="1005" fg:w="4"/><text x="79.1354%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="79.0424%" y="709" width="0.1570%" height="15" fill="rgb(226,4,38)" fg:x="1007" fg:w="2"/><text x="79.2924%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.0424%" y="693" width="0.1570%" height="15" fill="rgb(250,52,3)" fg:x="1007" fg:w="2"/><text x="79.2924%" y="703.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="79.1994%" y="757" width="0.0785%" height="15" fill="rgb(234,93,0)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1994%" y="741" width="0.0785%" height="15" fill="rgb(251,47,47)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.1994%" y="725" width="0.0785%" height="15" fill="rgb(205,166,47)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.1994%" y="709" width="0.0785%" height="15" fill="rgb(231,148,8)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.1994%" y="693" width="0.0785%" height="15" fill="rgb(244,185,19)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.1994%" y="677" width="0.0785%" height="15" fill="rgb(224,201,45)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.1994%" y="661" width="0.0785%" height="15" fill="rgb(240,77,39)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.1994%" y="645" width="0.0785%" height="15" fill="rgb(248,211,29)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.1994%" y="629" width="0.0785%" height="15" fill="rgb(232,214,46)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.1994%" y="613" width="0.0785%" height="15" fill="rgb(213,99,54)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.1994%" y="597" width="0.0785%" height="15" fill="rgb(240,19,46)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.1994%" y="581" width="0.0785%" height="15" fill="rgb(243,89,10)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1994%" y="565" width="0.0785%" height="15" fill="rgb(249,28,32)" fg:x="1009" fg:w="1"/><text x="79.4494%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2779%" y="741" width="0.0785%" height="15" fill="rgb(253,30,9)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2779%" y="725" width="0.0785%" height="15" fill="rgb(217,2,26)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.2779%" y="709" width="0.0785%" height="15" fill="rgb(220,28,10)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.2779%" y="693" width="0.0785%" height="15" fill="rgb(228,167,49)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.2779%" y="677" width="0.0785%" height="15" fill="rgb(238,212,3)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2779%" y="661" width="0.0785%" height="15" fill="rgb(229,134,44)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2779%" y="645" width="0.0785%" height="15" fill="rgb(208,71,4)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.2779%" y="629" width="0.0785%" height="15" fill="rgb(221,205,45)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.2779%" y="613" width="0.0785%" height="15" fill="rgb(215,132,38)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.2779%" y="597" width="0.0785%" height="15" fill="rgb(227,158,6)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.2779%" y="581" width="0.0785%" height="15" fill="rgb(250,10,38)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2779%" y="565" width="0.0785%" height="15" fill="rgb(225,171,40)" fg:x="1010" fg:w="1"/><text x="79.5279%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,012 samples, 79.43%)</title><rect x="0.0000%" y="821" width="79.4349%" height="15" fill="rgb(238,17,43)" fg:x="0" fg:w="1012"/><text x="0.2500%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (1,012 samples, 79.43%)</title><rect x="0.0000%" y="805" width="79.4349%" height="15" fill="rgb(208,145,4)" fg:x="0" fg:w="1012"/><text x="0.2500%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (1,012 samples, 79.43%)</title><rect x="0.0000%" y="789" width="79.4349%" height="15" fill="rgb(232,82,7)" fg:x="0" fg:w="1012"/><text x="0.2500%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (389 samples, 30.53%)</title><rect x="48.9011%" y="773" width="30.5338%" height="15" fill="rgb(205,166,38)" fg:x="623" fg:w="389"/><text x="49.1511%" y="783.50">engine::session::Session::evaluate_and_perform</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="79.2779%" y="757" width="0.1570%" height="15" fill="rgb(240,228,4)" fg:x="1010" fg:w="2"/><text x="79.5279%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.3564%" y="741" width="0.0785%" height="15" fill="rgb(233,121,40)" fg:x="1011" fg:w="1"/><text x="79.6064%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.3564%" y="725" width="0.0785%" height="15" fill="rgb(243,84,30)" fg:x="1011" fg:w="1"/><text x="79.6064%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.3564%" y="709" width="0.0785%" height="15" fill="rgb(235,81,48)" fg:x="1011" fg:w="1"/><text x="79.6064%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.5133%" y="725" width="0.0785%" height="15" fill="rgb(218,137,0)" fg:x="1013" fg:w="1"/><text x="79.7633%" y="735.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.7488%" y="645" width="0.1570%" height="15" fill="rgb(223,151,48)" fg:x="1016" fg:w="2"/><text x="79.9988%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9058%" y="613" width="0.0785%" height="15" fill="rgb(247,30,19)" fg:x="1018" fg:w="1"/><text x="80.1558%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="79.5918%" y="709" width="0.4710%" height="15" fill="rgb(205,129,29)" fg:x="1014" fg:w="6"/><text x="79.8418%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="79.5918%" y="693" width="0.4710%" height="15" fill="rgb(222,29,2)" fg:x="1014" fg:w="6"/><text x="79.8418%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="79.5918%" y="677" width="0.4710%" height="15" fill="rgb(232,145,33)" fg:x="1014" fg:w="6"/><text x="79.8418%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="79.6703%" y="661" width="0.3925%" height="15" fill="rgb(217,30,31)" fg:x="1015" fg:w="5"/><text x="79.9203%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.9058%" y="645" width="0.1570%" height="15" fill="rgb(243,22,52)" fg:x="1018" fg:w="2"/><text x="80.1558%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="79.9058%" y="629" width="0.1570%" height="15" fill="rgb(254,228,14)" fg:x="1018" fg:w="2"/><text x="80.1558%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="79.9843%" y="613" width="0.0785%" height="15" fill="rgb(231,45,50)" fg:x="1019" fg:w="1"/><text x="80.2343%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.9843%" y="597" width="0.0785%" height="15" fill="rgb(248,125,3)" fg:x="1019" fg:w="1"/><text x="80.2343%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.9843%" y="581" width="0.0785%" height="15" fill="rgb(213,76,9)" fg:x="1019" fg:w="1"/><text x="80.2343%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.71%)</title><rect x="79.4349%" y="773" width="0.7064%" height="15" fill="rgb(238,108,21)" fg:x="1012" fg:w="9"/><text x="79.6849%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (9 samples, 0.71%)</title><rect x="79.4349%" y="757" width="0.7064%" height="15" fill="rgb(229,214,19)" fg:x="1012" fg:w="9"/><text x="79.6849%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.63%)</title><rect x="79.5133%" y="741" width="0.6279%" height="15" fill="rgb(252,201,5)" fg:x="1013" fg:w="8"/><text x="79.7633%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (7 samples, 0.55%)</title><rect x="79.5918%" y="725" width="0.5495%" height="15" fill="rgb(233,165,49)" fg:x="1014" fg:w="7"/><text x="79.8418%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="80.0628%" y="709" width="0.0785%" height="15" fill="rgb(208,165,19)" fg:x="1020" fg:w="1"/><text x="80.3128%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.0628%" y="693" width="0.0785%" height="15" fill="rgb(216,220,31)" fg:x="1020" fg:w="1"/><text x="80.3128%" y="703.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="80.1413%" y="693" width="0.0785%" height="15" fill="rgb(214,8,31)" fg:x="1021" fg:w="1"/><text x="80.3913%" y="703.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="80.2198%" y="677" width="0.0785%" height="15" fill="rgb(220,32,32)" fg:x="1022" fg:w="1"/><text x="80.4698%" y="687.50"></text></g><g><title>dlopen (6 samples, 0.47%)</title><rect x="80.2983%" y="677" width="0.4710%" height="15" fill="rgb(237,172,34)" fg:x="1023" fg:w="6"/><text x="80.5483%" y="687.50"></text></g><g><title>_dl_catch_error (6 samples, 0.47%)</title><rect x="80.2983%" y="661" width="0.4710%" height="15" fill="rgb(240,209,5)" fg:x="1023" fg:w="6"/><text x="80.5483%" y="671.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.47%)</title><rect x="80.2983%" y="645" width="0.4710%" height="15" fill="rgb(221,219,1)" fg:x="1023" fg:w="6"/><text x="80.5483%" y="655.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.47%)</title><rect x="80.2983%" y="629" width="0.4710%" height="15" fill="rgb(237,90,36)" fg:x="1023" fg:w="6"/><text x="80.5483%" y="639.50"></text></g><g><title>_dl_catch_exception (6 samples, 0.47%)</title><rect x="80.2983%" y="613" width="0.4710%" height="15" fill="rgb(245,14,51)" fg:x="1023" fg:w="6"/><text x="80.5483%" y="623.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (9 samples, 0.71%)</title><rect x="80.1413%" y="709" width="0.7064%" height="15" fill="rgb(211,71,49)" fg:x="1021" fg:w="9"/><text x="80.3913%" y="719.50"></text></g><g><title>libloading::safe::Library::new (8 samples, 0.63%)</title><rect x="80.2198%" y="693" width="0.6279%" height="15" fill="rgb(230,223,9)" fg:x="1022" fg:w="8"/><text x="80.4698%" y="703.50"></text></g><g><title>libloading::util::cstr_cow_from_bytes (1 samples, 0.08%)</title><rect x="80.7692%" y="677" width="0.0785%" height="15" fill="rgb(212,33,31)" fg:x="1029" fg:w="1"/><text x="81.0192%" y="687.50"></text></g><g><title>&lt;&amp;str as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.08%)</title><rect x="80.7692%" y="661" width="0.0785%" height="15" fill="rgb(218,141,5)" fg:x="1029" fg:w="1"/><text x="81.0192%" y="671.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.08%)</title><rect x="80.7692%" y="645" width="0.0785%" height="15" fill="rgb(239,194,8)" fg:x="1029" fg:w="1"/><text x="81.0192%" y="655.50"></text></g><g><title>alloc::ffi::c_str::CString::_from_vec_unchecked (1 samples, 0.08%)</title><rect x="80.7692%" y="629" width="0.0785%" height="15" fill="rgb(225,119,29)" fg:x="1029" fg:w="1"/><text x="81.0192%" y="639.50"></text></g><g><title>alloc::sync::arcinner_layout_for_value_layout (1 samples, 0.08%)</title><rect x="80.7692%" y="613" width="0.0785%" height="15" fill="rgb(233,32,3)" fg:x="1029" fg:w="1"/><text x="81.0192%" y="623.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (10 samples, 0.78%)</title><rect x="80.1413%" y="725" width="0.7849%" height="15" fill="rgb(248,126,40)" fg:x="1021" fg:w="10"/><text x="80.3913%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="80.8477%" y="709" width="0.0785%" height="15" fill="rgb(213,102,53)" fg:x="1030" fg:w="1"/><text x="81.0977%" y="719.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="80.8477%" y="693" width="0.0785%" height="15" fill="rgb(212,69,15)" fg:x="1030" fg:w="1"/><text x="81.0977%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="80.9262%" y="709" width="0.0785%" height="15" fill="rgb(253,39,34)" fg:x="1031" fg:w="1"/><text x="81.1762%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.9262%" y="693" width="0.0785%" height="15" fill="rgb(205,189,54)" fg:x="1031" fg:w="1"/><text x="81.1762%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.9262%" y="677" width="0.0785%" height="15" fill="rgb(234,229,45)" fg:x="1031" fg:w="1"/><text x="81.1762%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (12 samples, 0.94%)</title><rect x="80.1413%" y="773" width="0.9419%" height="15" fill="rgb(243,79,48)" fg:x="1021" fg:w="12"/><text x="80.3913%" y="783.50"></text></g><g><title>engine::session::Session::new (12 samples, 0.94%)</title><rect x="80.1413%" y="757" width="0.9419%" height="15" fill="rgb(206,71,50)" fg:x="1021" fg:w="12"/><text x="80.3913%" y="767.50"></text></g><g><title>engine::session::Session::initialize (12 samples, 0.94%)</title><rect x="80.1413%" y="741" width="0.9419%" height="15" fill="rgb(209,32,17)" fg:x="1021" fg:w="12"/><text x="80.3913%" y="751.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="80.9262%" y="725" width="0.1570%" height="15" fill="rgb(219,229,6)" fg:x="1031" fg:w="2"/><text x="81.1762%" y="735.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="81.0047%" y="709" width="0.0785%" height="15" fill="rgb(226,25,27)" fg:x="1032" fg:w="1"/><text x="81.2547%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.0047%" y="693" width="0.0785%" height="15" fill="rgb(218,185,23)" fg:x="1032" fg:w="1"/><text x="81.2547%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.0047%" y="677" width="0.0785%" height="15" fill="rgb(242,123,5)" fg:x="1032" fg:w="1"/><text x="81.2547%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.0047%" y="661" width="0.0785%" height="15" fill="rgb(215,53,19)" fg:x="1032" fg:w="1"/><text x="81.2547%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.0047%" y="645" width="0.0785%" height="15" fill="rgb(233,20,30)" fg:x="1032" fg:w="1"/><text x="81.2547%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0832%" y="757" width="0.0785%" height="15" fill="rgb(209,67,20)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0832%" y="741" width="0.0785%" height="15" fill="rgb(227,181,50)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="81.0832%" y="725" width="0.0785%" height="15" fill="rgb(252,75,38)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="81.0832%" y="709" width="0.0785%" height="15" fill="rgb(235,9,33)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="81.0832%" y="693" width="0.0785%" height="15" fill="rgb(208,87,30)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="81.0832%" y="677" width="0.0785%" height="15" fill="rgb(215,199,39)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="81.0832%" y="661" width="0.0785%" height="15" fill="rgb(246,208,12)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="81.0832%" y="645" width="0.0785%" height="15" fill="rgb(206,195,10)" fg:x="1033" fg:w="1"/><text x="81.3332%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="81.1617%" y="757" width="0.0785%" height="15" fill="rgb(244,1,30)" fg:x="1034" fg:w="1"/><text x="81.4117%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.1617%" y="741" width="0.0785%" height="15" fill="rgb(230,83,5)" fg:x="1034" fg:w="1"/><text x="81.4117%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="81.2402%" y="757" width="0.0785%" height="15" fill="rgb(239,62,17)" fg:x="1035" fg:w="1"/><text x="81.4902%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.2402%" y="741" width="0.0785%" height="15" fill="rgb(252,193,41)" fg:x="1035" fg:w="1"/><text x="81.4902%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.2402%" y="725" width="0.0785%" height="15" fill="rgb(216,142,19)" fg:x="1035" fg:w="1"/><text x="81.4902%" y="735.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="81.3187%" y="741" width="0.0785%" height="15" fill="rgb(240,81,38)" fg:x="1036" fg:w="1"/><text x="81.5687%" y="751.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="81.3187%" y="725" width="0.0785%" height="15" fill="rgb(240,109,40)" fg:x="1036" fg:w="1"/><text x="81.5687%" y="735.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="81.3187%" y="709" width="0.0785%" height="15" fill="rgb(230,123,10)" fg:x="1036" fg:w="1"/><text x="81.5687%" y="719.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="81.3187%" y="693" width="0.0785%" height="15" fill="rgb(253,42,32)" fg:x="1036" fg:w="1"/><text x="81.5687%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.3972%" y="661" width="0.0785%" height="15" fill="rgb(218,154,8)" fg:x="1037" fg:w="1"/><text x="81.6472%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.4757%" y="613" width="0.1570%" height="15" fill="rgb(216,197,10)" fg:x="1038" fg:w="2"/><text x="81.7257%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5542%" y="597" width="0.0785%" height="15" fill="rgb(223,107,12)" fg:x="1039" fg:w="1"/><text x="81.8042%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5542%" y="581" width="0.0785%" height="15" fill="rgb(241,174,42)" fg:x="1039" fg:w="1"/><text x="81.8042%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.5542%" y="565" width="0.0785%" height="15" fill="rgb(231,78,20)" fg:x="1039" fg:w="1"/><text x="81.8042%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.5542%" y="549" width="0.0785%" height="15" fill="rgb(230,208,49)" fg:x="1039" fg:w="1"/><text x="81.8042%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.5542%" y="533" width="0.0785%" height="15" fill="rgb(238,11,34)" fg:x="1039" fg:w="1"/><text x="81.8042%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (4 samples, 0.31%)</title><rect x="81.3972%" y="677" width="0.3140%" height="15" fill="rgb(210,130,26)" fg:x="1037" fg:w="4"/><text x="81.6472%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.4757%" y="661" width="0.2355%" height="15" fill="rgb(242,131,11)" fg:x="1038" fg:w="3"/><text x="81.7257%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.4757%" y="645" width="0.2355%" height="15" fill="rgb(237,38,28)" fg:x="1038" fg:w="3"/><text x="81.7257%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="81.4757%" y="629" width="0.2355%" height="15" fill="rgb(244,180,43)" fg:x="1038" fg:w="3"/><text x="81.7257%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6327%" y="613" width="0.0785%" height="15" fill="rgb(214,171,19)" fg:x="1040" fg:w="1"/><text x="81.8827%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.7111%" y="645" width="0.0785%" height="15" fill="rgb(252,101,45)" fg:x="1041" fg:w="1"/><text x="81.9611%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.7111%" y="677" width="0.1570%" height="15" fill="rgb(211,96,33)" fg:x="1041" fg:w="2"/><text x="81.9611%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="81.7111%" y="661" width="0.1570%" height="15" fill="rgb(207,80,25)" fg:x="1041" fg:w="2"/><text x="81.9611%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.7896%" y="645" width="0.0785%" height="15" fill="rgb(225,15,35)" fg:x="1042" fg:w="1"/><text x="82.0396%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.7896%" y="629" width="0.0785%" height="15" fill="rgb(214,93,43)" fg:x="1042" fg:w="1"/><text x="82.0396%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9466%" y="629" width="0.0785%" height="15" fill="rgb(248,42,37)" fg:x="1044" fg:w="1"/><text x="82.1966%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9466%" y="613" width="0.0785%" height="15" fill="rgb(217,135,32)" fg:x="1044" fg:w="1"/><text x="82.1966%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="81.9466%" y="597" width="0.0785%" height="15" fill="rgb(216,74,28)" fg:x="1044" fg:w="1"/><text x="82.1966%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.0251%" y="581" width="0.0785%" height="15" fill="rgb(247,108,16)" fg:x="1045" fg:w="1"/><text x="82.2751%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="82.0251%" y="565" width="0.0785%" height="15" fill="rgb(205,219,30)" fg:x="1045" fg:w="1"/><text x="82.2751%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.0251%" y="549" width="0.0785%" height="15" fill="rgb(241,122,9)" fg:x="1045" fg:w="1"/><text x="82.2751%" y="559.50"></text></g><g><title>engine::session::Session::flush (13 samples, 1.02%)</title><rect x="81.3187%" y="757" width="1.0204%" height="15" fill="rgb(216,148,50)" fg:x="1036" fg:w="13"/><text x="81.5687%" y="767.50"></text></g><g><title>engine::session::state::State::close (12 samples, 0.94%)</title><rect x="81.3972%" y="741" width="0.9419%" height="15" fill="rgb(226,154,2)" fg:x="1037" fg:w="12"/><text x="81.6472%" y="751.50"></text></g><g><title>engine::session::state::State::flush_entities (12 samples, 0.94%)</title><rect x="81.3972%" y="725" width="0.9419%" height="15" fill="rgb(220,128,1)" fg:x="1037" fg:w="12"/><text x="81.6472%" y="735.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (12 samples, 0.94%)</title><rect x="81.3972%" y="709" width="0.9419%" height="15" fill="rgb(245,185,29)" fg:x="1037" fg:w="12"/><text x="81.6472%" y="719.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (12 samples, 0.94%)</title><rect x="81.3972%" y="693" width="0.9419%" height="15" fill="rgb(243,161,2)" fg:x="1037" fg:w="12"/><text x="81.6472%" y="703.50"></text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.47%)</title><rect x="81.8681%" y="677" width="0.4710%" height="15" fill="rgb(249,215,17)" fg:x="1043" fg:w="6"/><text x="82.1181%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (6 samples, 0.47%)</title><rect x="81.8681%" y="661" width="0.4710%" height="15" fill="rgb(237,67,11)" fg:x="1043" fg:w="6"/><text x="82.1181%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="81.8681%" y="645" width="0.4710%" height="15" fill="rgb(239,17,24)" fg:x="1043" fg:w="6"/><text x="82.1181%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.31%)</title><rect x="82.0251%" y="629" width="0.3140%" height="15" fill="rgb(215,97,29)" fg:x="1045" fg:w="4"/><text x="82.2751%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.31%)</title><rect x="82.0251%" y="613" width="0.3140%" height="15" fill="rgb(253,228,42)" fg:x="1045" fg:w="4"/><text x="82.2751%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="82.0251%" y="597" width="0.3140%" height="15" fill="rgb(240,85,2)" fg:x="1045" fg:w="4"/><text x="82.2751%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="82.1036%" y="581" width="0.2355%" height="15" fill="rgb(214,155,4)" fg:x="1046" fg:w="3"/><text x="82.3536%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.1821%" y="565" width="0.1570%" height="15" fill="rgb(247,120,22)" fg:x="1047" fg:w="2"/><text x="82.4321%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.1821%" y="549" width="0.1570%" height="15" fill="rgb(211,208,6)" fg:x="1047" fg:w="2"/><text x="82.4321%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.1821%" y="533" width="0.1570%" height="15" fill="rgb(235,99,41)" fg:x="1047" fg:w="2"/><text x="82.4321%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.1821%" y="517" width="0.1570%" height="15" fill="rgb(223,28,8)" fg:x="1047" fg:w="2"/><text x="82.4321%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="82.2606%" y="501" width="0.0785%" height="15" fill="rgb(212,71,20)" fg:x="1048" fg:w="1"/><text x="82.5106%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.3391%" y="709" width="0.0785%" height="15" fill="rgb(206,85,3)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.3391%" y="693" width="0.0785%" height="15" fill="rgb(244,180,11)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.3391%" y="677" width="0.0785%" height="15" fill="rgb(223,16,21)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.3391%" y="661" width="0.0785%" height="15" fill="rgb(238,85,42)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3391%" y="645" width="0.0785%" height="15" fill="rgb(205,85,8)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3391%" y="629" width="0.0785%" height="15" fill="rgb(217,190,15)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3391%" y="613" width="0.0785%" height="15" fill="rgb(243,192,23)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.3391%" y="597" width="0.0785%" height="15" fill="rgb(223,220,37)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3391%" y="581" width="0.0785%" height="15" fill="rgb(208,41,17)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3391%" y="565" width="0.0785%" height="15" fill="rgb(224,188,7)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3391%" y="549" width="0.0785%" height="15" fill="rgb(236,16,50)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3391%" y="533" width="0.0785%" height="15" fill="rgb(238,6,24)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3391%" y="517" width="0.0785%" height="15" fill="rgb(253,67,45)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3391%" y="501" width="0.0785%" height="15" fill="rgb(210,89,32)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3391%" y="485" width="0.0785%" height="15" fill="rgb(208,89,9)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3391%" y="469" width="0.0785%" height="15" fill="rgb(222,180,44)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3391%" y="453" width="0.0785%" height="15" fill="rgb(250,181,46)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3391%" y="437" width="0.0785%" height="15" fill="rgb(210,190,26)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3391%" y="421" width="0.0785%" height="15" fill="rgb(253,49,13)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3391%" y="405" width="0.0785%" height="15" fill="rgb(240,184,42)" fg:x="1049" fg:w="1"/><text x="82.5891%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="82.3391%" y="741" width="0.3140%" height="15" fill="rgb(246,59,37)" fg:x="1049" fg:w="4"/><text x="82.5891%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="82.3391%" y="725" width="0.3140%" height="15" fill="rgb(207,134,54)" fg:x="1049" fg:w="4"/><text x="82.5891%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (3 samples, 0.24%)</title><rect x="82.4176%" y="709" width="0.2355%" height="15" fill="rgb(250,122,24)" fg:x="1050" fg:w="3"/><text x="82.6676%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.4176%" y="693" width="0.2355%" height="15" fill="rgb(239,206,3)" fg:x="1050" fg:w="3"/><text x="82.6676%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="82.4176%" y="677" width="0.2355%" height="15" fill="rgb(253,220,32)" fg:x="1050" fg:w="3"/><text x="82.6676%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.24%)</title><rect x="82.4176%" y="661" width="0.2355%" height="15" fill="rgb(209,217,48)" fg:x="1050" fg:w="3"/><text x="82.6676%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="82.4176%" y="645" width="0.2355%" height="15" fill="rgb(242,91,39)" fg:x="1050" fg:w="3"/><text x="82.6676%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.6531%" y="725" width="0.0785%" height="15" fill="rgb(228,4,13)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="735.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6531%" y="709" width="0.0785%" height="15" fill="rgb(223,133,4)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.6531%" y="693" width="0.0785%" height="15" fill="rgb(215,105,30)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="82.6531%" y="677" width="0.0785%" height="15" fill="rgb(230,9,4)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="82.6531%" y="661" width="0.0785%" height="15" fill="rgb(248,15,2)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.6531%" y="645" width="0.0785%" height="15" fill="rgb(208,210,22)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6531%" y="629" width="0.0785%" height="15" fill="rgb(208,112,41)" fg:x="1053" fg:w="1"/><text x="82.9031%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.7316%" y="629" width="0.0785%" height="15" fill="rgb(232,83,14)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7316%" y="613" width="0.0785%" height="15" fill="rgb(229,65,11)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.7316%" y="597" width="0.0785%" height="15" fill="rgb(228,126,24)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.7316%" y="581" width="0.0785%" height="15" fill="rgb(218,66,33)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.7316%" y="565" width="0.0785%" height="15" fill="rgb(251,49,52)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.7316%" y="549" width="0.0785%" height="15" fill="rgb(219,46,37)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7316%" y="533" width="0.0785%" height="15" fill="rgb(213,53,49)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.7316%" y="517" width="0.0785%" height="15" fill="rgb(214,134,1)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.7316%" y="501" width="0.0785%" height="15" fill="rgb(208,139,43)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.7316%" y="485" width="0.0785%" height="15" fill="rgb(231,105,35)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.7316%" y="469" width="0.0785%" height="15" fill="rgb(247,189,9)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.7316%" y="453" width="0.0785%" height="15" fill="rgb(252,48,51)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.7316%" y="437" width="0.0785%" height="15" fill="rgb(209,121,1)" fg:x="1054" fg:w="1"/><text x="82.9816%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.7316%" y="677" width="0.1570%" height="15" fill="rgb(231,40,26)" fg:x="1054" fg:w="2"/><text x="82.9816%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.7316%" y="661" width="0.1570%" height="15" fill="rgb(251,8,13)" fg:x="1054" fg:w="2"/><text x="82.9816%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.7316%" y="645" width="0.1570%" height="15" fill="rgb(231,110,2)" fg:x="1054" fg:w="2"/><text x="82.9816%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8100%" y="629" width="0.0785%" height="15" fill="rgb(216,153,22)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.8100%" y="613" width="0.0785%" height="15" fill="rgb(249,116,49)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8100%" y="597" width="0.0785%" height="15" fill="rgb(230,89,2)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8100%" y="581" width="0.0785%" height="15" fill="rgb(231,125,23)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.8100%" y="565" width="0.0785%" height="15" fill="rgb(212,217,18)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.8100%" y="549" width="0.0785%" height="15" fill="rgb(210,21,33)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.8100%" y="533" width="0.0785%" height="15" fill="rgb(241,97,9)" fg:x="1055" fg:w="1"/><text x="83.0600%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.8885%" y="661" width="0.0785%" height="15" fill="rgb(221,35,31)" fg:x="1056" fg:w="1"/><text x="83.1385%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.8885%" y="645" width="0.0785%" height="15" fill="rgb(251,23,23)" fg:x="1056" fg:w="1"/><text x="83.1385%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.8885%" y="629" width="0.0785%" height="15" fill="rgb(227,165,2)" fg:x="1056" fg:w="1"/><text x="83.1385%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.71%)</title><rect x="82.3391%" y="757" width="0.7064%" height="15" fill="rgb(242,24,2)" fg:x="1049" fg:w="9"/><text x="82.5891%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.39%)</title><rect x="82.6531%" y="741" width="0.3925%" height="15" fill="rgb(242,138,51)" fg:x="1053" fg:w="5"/><text x="82.9031%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="82.7316%" y="725" width="0.3140%" height="15" fill="rgb(220,219,5)" fg:x="1054" fg:w="4"/><text x="82.9816%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="82.7316%" y="709" width="0.3140%" height="15" fill="rgb(247,53,29)" fg:x="1054" fg:w="4"/><text x="82.9816%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="82.7316%" y="693" width="0.3140%" height="15" fill="rgb(233,43,39)" fg:x="1054" fg:w="4"/><text x="82.9816%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.8885%" y="677" width="0.1570%" height="15" fill="rgb(230,128,54)" fg:x="1056" fg:w="2"/><text x="83.1385%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9670%" y="661" width="0.0785%" height="15" fill="rgb(218,20,12)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9670%" y="645" width="0.0785%" height="15" fill="rgb(206,51,14)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9670%" y="629" width="0.0785%" height="15" fill="rgb(223,16,35)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9670%" y="613" width="0.0785%" height="15" fill="rgb(226,165,37)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9670%" y="597" width="0.0785%" height="15" fill="rgb(240,26,21)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.9670%" y="581" width="0.0785%" height="15" fill="rgb(240,72,46)" fg:x="1057" fg:w="1"/><text x="83.2170%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.0455%" y="725" width="0.0785%" height="15" fill="rgb(211,33,41)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.0455%" y="709" width="0.0785%" height="15" fill="rgb(224,157,46)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.0455%" y="693" width="0.0785%" height="15" fill="rgb(223,59,19)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0455%" y="677" width="0.0785%" height="15" fill="rgb(239,187,1)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0455%" y="661" width="0.0785%" height="15" fill="rgb(226,95,9)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0455%" y="645" width="0.0785%" height="15" fill="rgb(234,61,54)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0455%" y="629" width="0.0785%" height="15" fill="rgb(205,209,47)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.0455%" y="613" width="0.0785%" height="15" fill="rgb(228,7,43)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0455%" y="597" width="0.0785%" height="15" fill="rgb(240,217,52)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0455%" y="581" width="0.0785%" height="15" fill="rgb(211,178,21)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0455%" y="565" width="0.0785%" height="15" fill="rgb(205,25,34)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.0455%" y="549" width="0.0785%" height="15" fill="rgb(209,57,11)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.0455%" y="533" width="0.0785%" height="15" fill="rgb(221,99,2)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="83.0455%" y="517" width="0.0785%" height="15" fill="rgb(232,79,22)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.0455%" y="501" width="0.0785%" height="15" fill="rgb(221,145,32)" fg:x="1058" fg:w="1"/><text x="83.2955%" y="511.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.1240%" y="725" width="0.0785%" height="15" fill="rgb(236,133,36)" fg:x="1059" fg:w="1"/><text x="83.3740%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.1240%" y="709" width="0.0785%" height="15" fill="rgb(208,224,44)" fg:x="1059" fg:w="1"/><text x="83.3740%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.24%)</title><rect x="83.0455%" y="757" width="0.2355%" height="15" fill="rgb(235,143,15)" fg:x="1058" fg:w="3"/><text x="83.2955%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="83.0455%" y="741" width="0.2355%" height="15" fill="rgb(249,83,27)" fg:x="1058" fg:w="3"/><text x="83.2955%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.2025%" y="725" width="0.0785%" height="15" fill="rgb(238,226,19)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="735.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.2025%" y="709" width="0.0785%" height="15" fill="rgb(226,206,27)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.2025%" y="693" width="0.0785%" height="15" fill="rgb(251,182,9)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="703.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.2025%" y="677" width="0.0785%" height="15" fill="rgb(212,140,41)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.2025%" y="661" width="0.0785%" height="15" fill="rgb(220,106,18)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2025%" y="645" width="0.0785%" height="15" fill="rgb(252,46,41)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.2025%" y="629" width="0.0785%" height="15" fill="rgb(209,222,15)" fg:x="1060" fg:w="1"/><text x="83.4525%" y="639.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.2810%" y="757" width="0.0785%" height="15" fill="rgb(233,83,50)" fg:x="1061" fg:w="1"/><text x="83.5310%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.2810%" y="741" width="0.0785%" height="15" fill="rgb(205,212,0)" fg:x="1061" fg:w="1"/><text x="83.5310%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.2810%" y="725" width="0.0785%" height="15" fill="rgb(235,117,51)" fg:x="1061" fg:w="1"/><text x="83.5310%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2810%" y="709" width="0.0785%" height="15" fill="rgb(233,133,48)" fg:x="1061" fg:w="1"/><text x="83.5310%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.3595%" y="741" width="0.0785%" height="15" fill="rgb(219,3,2)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.3595%" y="725" width="0.0785%" height="15" fill="rgb(225,80,52)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.3595%" y="709" width="0.0785%" height="15" fill="rgb(235,195,42)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.3595%" y="693" width="0.0785%" height="15" fill="rgb(240,207,46)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3595%" y="677" width="0.0785%" height="15" fill="rgb(236,112,50)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3595%" y="661" width="0.0785%" height="15" fill="rgb(249,151,27)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3595%" y="645" width="0.0785%" height="15" fill="rgb(253,223,52)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3595%" y="629" width="0.0785%" height="15" fill="rgb(215,55,33)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.3595%" y="613" width="0.0785%" height="15" fill="rgb(207,24,17)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.3595%" y="597" width="0.0785%" height="15" fill="rgb(218,169,32)" fg:x="1062" fg:w="1"/><text x="83.6095%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4380%" y="709" width="0.0785%" height="15" fill="rgb(209,210,6)" fg:x="1063" fg:w="1"/><text x="83.6880%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.4380%" y="693" width="0.0785%" height="15" fill="rgb(225,208,8)" fg:x="1063" fg:w="1"/><text x="83.6880%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="83.4380%" y="741" width="0.1570%" height="15" fill="rgb(238,14,32)" fg:x="1063" fg:w="2"/><text x="83.6880%" y="751.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="83.4380%" y="725" width="0.1570%" height="15" fill="rgb(211,137,3)" fg:x="1063" fg:w="2"/><text x="83.6880%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.5165%" y="709" width="0.0785%" height="15" fill="rgb(207,171,19)" fg:x="1064" fg:w="1"/><text x="83.7665%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5950%" y="613" width="0.0785%" height="15" fill="rgb(250,80,8)" fg:x="1065" fg:w="1"/><text x="83.8450%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5950%" y="597" width="0.0785%" height="15" fill="rgb(209,103,53)" fg:x="1065" fg:w="1"/><text x="83.8450%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.5950%" y="581" width="0.0785%" height="15" fill="rgb(233,198,10)" fg:x="1065" fg:w="1"/><text x="83.8450%" y="591.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="83.5950%" y="693" width="0.1570%" height="15" fill="rgb(236,125,25)" fg:x="1065" fg:w="2"/><text x="83.8450%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="83.5950%" y="677" width="0.1570%" height="15" fill="rgb(254,182,48)" fg:x="1065" fg:w="2"/><text x="83.8450%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="83.5950%" y="661" width="0.1570%" height="15" fill="rgb(216,108,44)" fg:x="1065" fg:w="2"/><text x="83.8450%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="83.5950%" y="645" width="0.1570%" height="15" fill="rgb(222,72,39)" fg:x="1065" fg:w="2"/><text x="83.8450%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="83.5950%" y="629" width="0.1570%" height="15" fill="rgb(252,70,39)" fg:x="1065" fg:w="2"/><text x="83.8450%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6735%" y="613" width="0.0785%" height="15" fill="rgb(243,99,34)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6735%" y="597" width="0.0785%" height="15" fill="rgb(252,109,12)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.6735%" y="581" width="0.0785%" height="15" fill="rgb(211,186,10)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6735%" y="565" width="0.0785%" height="15" fill="rgb(246,90,8)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.6735%" y="549" width="0.0785%" height="15" fill="rgb(226,91,24)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.6735%" y="533" width="0.0785%" height="15" fill="rgb(216,28,44)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.6735%" y="517" width="0.0785%" height="15" fill="rgb(229,36,0)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.6735%" y="501" width="0.0785%" height="15" fill="rgb(245,97,18)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="83.6735%" y="485" width="0.0785%" height="15" fill="rgb(241,97,54)" fg:x="1066" fg:w="1"/><text x="83.9235%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.7520%" y="677" width="0.0785%" height="15" fill="rgb(234,125,17)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="83.7520%" y="661" width="0.0785%" height="15" fill="rgb(228,172,39)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="83.7520%" y="645" width="0.0785%" height="15" fill="rgb(227,169,1)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.7520%" y="629" width="0.0785%" height="15" fill="rgb(206,13,35)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.7520%" y="613" width="0.0785%" height="15" fill="rgb(211,117,30)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.7520%" y="597" width="0.0785%" height="15" fill="rgb(230,198,4)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.7520%" y="581" width="0.0785%" height="15" fill="rgb(213,87,54)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.7520%" y="565" width="0.0785%" height="15" fill="rgb(248,43,22)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.7520%" y="549" width="0.0785%" height="15" fill="rgb(213,175,48)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.7520%" y="533" width="0.0785%" height="15" fill="rgb(252,55,9)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.7520%" y="517" width="0.0785%" height="15" fill="rgb(231,72,33)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.7520%" y="501" width="0.0785%" height="15" fill="rgb(213,2,54)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7520%" y="485" width="0.0785%" height="15" fill="rgb(208,88,25)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="83.7520%" y="469" width="0.0785%" height="15" fill="rgb(215,117,13)" fg:x="1067" fg:w="1"/><text x="84.0020%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="83.8305%" y="661" width="0.0785%" height="15" fill="rgb(243,147,21)" fg:x="1068" fg:w="1"/><text x="84.0805%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.8305%" y="645" width="0.0785%" height="15" fill="rgb(208,215,36)" fg:x="1068" fg:w="1"/><text x="84.0805%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.8305%" y="629" width="0.0785%" height="15" fill="rgb(238,187,24)" fg:x="1068" fg:w="1"/><text x="84.0805%" y="639.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.9089%" y="661" width="0.0785%" height="15" fill="rgb(214,173,11)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.9089%" y="645" width="0.0785%" height="15" fill="rgb(222,71,20)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.9089%" y="629" width="0.0785%" height="15" fill="rgb(242,125,4)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="639.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.9089%" y="613" width="0.0785%" height="15" fill="rgb(217,101,52)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9089%" y="597" width="0.0785%" height="15" fill="rgb(223,2,50)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9089%" y="581" width="0.0785%" height="15" fill="rgb(225,197,9)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9089%" y="565" width="0.0785%" height="15" fill="rgb(234,76,27)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9089%" y="549" width="0.0785%" height="15" fill="rgb(213,161,26)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9089%" y="533" width="0.0785%" height="15" fill="rgb(210,228,2)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="83.9089%" y="517" width="0.0785%" height="15" fill="rgb(235,4,16)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.9089%" y="501" width="0.0785%" height="15" fill="rgb(235,83,42)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="83.9089%" y="485" width="0.0785%" height="15" fill="rgb(207,116,39)" fg:x="1069" fg:w="1"/><text x="84.1589%" y="495.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.31%)</title><rect x="83.7520%" y="693" width="0.3140%" height="15" fill="rgb(253,206,9)" fg:x="1067" fg:w="4"/><text x="84.0020%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (3 samples, 0.24%)</title><rect x="83.8305%" y="677" width="0.2355%" height="15" fill="rgb(234,32,47)" fg:x="1068" fg:w="3"/><text x="84.0805%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.9874%" y="661" width="0.0785%" height="15" fill="rgb(247,40,39)" fg:x="1070" fg:w="1"/><text x="84.2374%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9874%" y="645" width="0.0785%" height="15" fill="rgb(236,199,13)" fg:x="1070" fg:w="1"/><text x="84.2374%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.9874%" y="629" width="0.0785%" height="15" fill="rgb(240,127,44)" fg:x="1070" fg:w="1"/><text x="84.2374%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.0659%" y="597" width="0.0785%" height="15" fill="rgb(248,220,47)" fg:x="1071" fg:w="1"/><text x="84.3159%" y="607.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.71%)</title><rect x="83.5950%" y="741" width="0.7064%" height="15" fill="rgb(240,78,9)" fg:x="1065" fg:w="9"/><text x="83.8450%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.71%)</title><rect x="83.5950%" y="725" width="0.7064%" height="15" fill="rgb(245,119,5)" fg:x="1065" fg:w="9"/><text x="83.8450%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.71%)</title><rect x="83.5950%" y="709" width="0.7064%" height="15" fill="rgb(238,175,31)" fg:x="1065" fg:w="9"/><text x="83.8450%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="84.0659%" y="693" width="0.2355%" height="15" fill="rgb(232,140,42)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="84.0659%" y="677" width="0.2355%" height="15" fill="rgb(218,179,7)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="687.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="84.0659%" y="661" width="0.2355%" height="15" fill="rgb(232,79,27)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="84.0659%" y="645" width="0.2355%" height="15" fill="rgb(247,11,19)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (3 samples, 0.24%)</title><rect x="84.0659%" y="629" width="0.2355%" height="15" fill="rgb(216,171,54)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="84.0659%" y="613" width="0.2355%" height="15" fill="rgb(233,158,36)" fg:x="1071" fg:w="3"/><text x="84.3159%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="84.1444%" y="597" width="0.1570%" height="15" fill="rgb(215,48,47)" fg:x="1072" fg:w="2"/><text x="84.3944%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.1444%" y="581" width="0.1570%" height="15" fill="rgb(230,223,15)" fg:x="1072" fg:w="2"/><text x="84.3944%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="84.2229%" y="565" width="0.0785%" height="15" fill="rgb(234,49,19)" fg:x="1073" fg:w="1"/><text x="84.4729%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="84.2229%" y="549" width="0.0785%" height="15" fill="rgb(232,89,25)" fg:x="1073" fg:w="1"/><text x="84.4729%" y="559.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="84.3014%" y="629" width="0.1570%" height="15" fill="rgb(237,206,28)" fg:x="1074" fg:w="2"/><text x="84.5514%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.3014%" y="613" width="0.1570%" height="15" fill="rgb(249,68,37)" fg:x="1074" fg:w="2"/><text x="84.5514%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.3014%" y="597" width="0.1570%" height="15" fill="rgb(226,99,43)" fg:x="1074" fg:w="2"/><text x="84.5514%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="84.4584%" y="613" width="0.0785%" height="15" fill="rgb(216,46,28)" fg:x="1076" fg:w="1"/><text x="84.7084%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.5369%" y="613" width="0.0785%" height="15" fill="rgb(216,33,9)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.5369%" y="597" width="0.0785%" height="15" fill="rgb(216,129,4)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.5369%" y="581" width="0.0785%" height="15" fill="rgb(216,106,3)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.5369%" y="565" width="0.0785%" height="15" fill="rgb(217,79,45)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="84.5369%" y="549" width="0.0785%" height="15" fill="rgb(239,98,13)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.5369%" y="533" width="0.0785%" height="15" fill="rgb(221,115,4)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="543.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="84.5369%" y="517" width="0.0785%" height="15" fill="rgb(215,85,0)" fg:x="1077" fg:w="1"/><text x="84.7869%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="84.6154%" y="597" width="0.1570%" height="15" fill="rgb(230,62,15)" fg:x="1078" fg:w="2"/><text x="84.8654%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.6154%" y="581" width="0.1570%" height="15" fill="rgb(247,162,2)" fg:x="1078" fg:w="2"/><text x="84.8654%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="84.6154%" y="565" width="0.1570%" height="15" fill="rgb(212,112,32)" fg:x="1078" fg:w="2"/><text x="84.8654%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.6154%" y="549" width="0.1570%" height="15" fill="rgb(216,137,9)" fg:x="1078" fg:w="2"/><text x="84.8654%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.7724%" y="597" width="0.0785%" height="15" fill="rgb(250,149,33)" fg:x="1080" fg:w="1"/><text x="85.0224%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.7724%" y="581" width="0.0785%" height="15" fill="rgb(246,124,31)" fg:x="1080" fg:w="1"/><text x="85.0224%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.8509%" y="581" width="0.0785%" height="15" fill="rgb(216,210,22)" fg:x="1081" fg:w="1"/><text x="85.1009%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.8509%" y="565" width="0.0785%" height="15" fill="rgb(228,128,36)" fg:x="1081" fg:w="1"/><text x="85.1009%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.9294%" y="565" width="0.0785%" height="15" fill="rgb(231,41,0)" fg:x="1082" fg:w="1"/><text x="85.1794%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="84.9294%" y="549" width="0.0785%" height="15" fill="rgb(232,61,26)" fg:x="1082" fg:w="1"/><text x="85.1794%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0078%" y="549" width="0.0785%" height="15" fill="rgb(217,60,9)" fg:x="1083" fg:w="1"/><text x="85.2578%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0078%" y="533" width="0.0785%" height="15" fill="rgb(233,41,35)" fg:x="1083" fg:w="1"/><text x="85.2578%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.0078%" y="565" width="0.1570%" height="15" fill="rgb(253,139,43)" fg:x="1083" fg:w="2"/><text x="85.2578%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.0863%" y="549" width="0.0785%" height="15" fill="rgb(245,100,51)" fg:x="1084" fg:w="1"/><text x="85.3363%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.63%)</title><rect x="84.6154%" y="613" width="0.6279%" height="15" fill="rgb(250,208,18)" fg:x="1078" fg:w="8"/><text x="84.8654%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="84.8509%" y="597" width="0.3925%" height="15" fill="rgb(245,33,2)" fg:x="1081" fg:w="5"/><text x="85.1009%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="84.9294%" y="581" width="0.3140%" height="15" fill="rgb(244,171,31)" fg:x="1082" fg:w="4"/><text x="85.1794%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.1648%" y="565" width="0.0785%" height="15" fill="rgb(229,1,43)" fg:x="1085" fg:w="1"/><text x="85.4148%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.1648%" y="549" width="0.0785%" height="15" fill="rgb(223,153,28)" fg:x="1085" fg:w="1"/><text x="85.4148%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.1648%" y="533" width="0.0785%" height="15" fill="rgb(241,4,46)" fg:x="1085" fg:w="1"/><text x="85.4148%" y="543.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.02%)</title><rect x="84.3014%" y="645" width="1.0204%" height="15" fill="rgb(230,81,11)" fg:x="1074" fg:w="13"/><text x="84.5514%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="84.4584%" y="629" width="0.8634%" height="15" fill="rgb(253,204,39)" fg:x="1076" fg:w="11"/><text x="84.7084%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.2433%" y="613" width="0.0785%" height="15" fill="rgb(250,96,8)" fg:x="1086" fg:w="1"/><text x="85.4933%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.3218%" y="597" width="0.0785%" height="15" fill="rgb(219,89,54)" fg:x="1087" fg:w="1"/><text x="85.5718%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4003%" y="581" width="0.0785%" height="15" fill="rgb(235,136,39)" fg:x="1088" fg:w="1"/><text x="85.6503%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="85.3218%" y="645" width="0.2355%" height="15" fill="rgb(230,155,37)" fg:x="1087" fg:w="3"/><text x="85.5718%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="85.3218%" y="629" width="0.2355%" height="15" fill="rgb(235,199,50)" fg:x="1087" fg:w="3"/><text x="85.5718%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="85.3218%" y="613" width="0.2355%" height="15" fill="rgb(227,81,32)" fg:x="1087" fg:w="3"/><text x="85.5718%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.4003%" y="597" width="0.1570%" height="15" fill="rgb(225,6,28)" fg:x="1088" fg:w="2"/><text x="85.6503%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.4788%" y="581" width="0.0785%" height="15" fill="rgb(207,211,17)" fg:x="1089" fg:w="1"/><text x="85.7288%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.4788%" y="565" width="0.0785%" height="15" fill="rgb(228,31,49)" fg:x="1089" fg:w="1"/><text x="85.7288%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7143%" y="597" width="0.0785%" height="15" fill="rgb(230,185,3)" fg:x="1092" fg:w="1"/><text x="85.9643%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7143%" y="581" width="0.0785%" height="15" fill="rgb(206,167,15)" fg:x="1092" fg:w="1"/><text x="85.9643%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.7143%" y="565" width="0.0785%" height="15" fill="rgb(234,2,36)" fg:x="1092" fg:w="1"/><text x="85.9643%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="85.7928%" y="597" width="0.0785%" height="15" fill="rgb(239,160,29)" fg:x="1093" fg:w="1"/><text x="86.0428%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.7928%" y="581" width="0.0785%" height="15" fill="rgb(236,117,2)" fg:x="1093" fg:w="1"/><text x="86.0428%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7928%" y="565" width="0.0785%" height="15" fill="rgb(215,117,37)" fg:x="1093" fg:w="1"/><text x="86.0428%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.7928%" y="549" width="0.0785%" height="15" fill="rgb(244,48,36)" fg:x="1093" fg:w="1"/><text x="86.0428%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="86.0283%" y="533" width="0.0785%" height="15" fill="rgb(223,101,37)" fg:x="1096" fg:w="1"/><text x="86.2783%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="86.1068%" y="533" width="0.1570%" height="15" fill="rgb(205,200,1)" fg:x="1097" fg:w="2"/><text x="86.3568%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.1068%" y="517" width="0.1570%" height="15" fill="rgb(209,193,20)" fg:x="1097" fg:w="2"/><text x="86.3568%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.1852%" y="501" width="0.0785%" height="15" fill="rgb(214,63,13)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1852%" y="485" width="0.0785%" height="15" fill="rgb(253,113,46)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.1852%" y="469" width="0.0785%" height="15" fill="rgb(237,103,34)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="86.1852%" y="453" width="0.0785%" height="15" fill="rgb(223,38,25)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="86.1852%" y="437" width="0.0785%" height="15" fill="rgb(251,32,32)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.1852%" y="421" width="0.0785%" height="15" fill="rgb(228,65,22)" fg:x="1098" fg:w="1"/><text x="86.4352%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="86.0283%" y="565" width="0.3140%" height="15" fill="rgb(205,11,46)" fg:x="1096" fg:w="4"/><text x="86.2783%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="86.0283%" y="549" width="0.3140%" height="15" fill="rgb(220,35,2)" fg:x="1096" fg:w="4"/><text x="86.2783%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.2637%" y="533" width="0.0785%" height="15" fill="rgb(217,151,17)" fg:x="1099" fg:w="1"/><text x="86.5137%" y="543.50"></text></g><g><title>engine::session::Session::flush (27 samples, 2.12%)</title><rect x="84.3014%" y="741" width="2.1193%" height="15" fill="rgb(243,227,35)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="751.50">e..</text></g><g><title>engine::session::Session::save_changes (27 samples, 2.12%)</title><rect x="84.3014%" y="725" width="2.1193%" height="15" fill="rgb(214,0,34)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="735.50">e..</text></g><g><title>engine::session::state::State::close (27 samples, 2.12%)</title><rect x="84.3014%" y="709" width="2.1193%" height="15" fill="rgb(209,42,37)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="719.50">e..</text></g><g><title>engine::session::state::State::flush_entities (27 samples, 2.12%)</title><rect x="84.3014%" y="693" width="2.1193%" height="15" fill="rgb(251,176,30)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="703.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (27 samples, 2.12%)</title><rect x="84.3014%" y="677" width="2.1193%" height="15" fill="rgb(223,64,40)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="687.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (27 samples, 2.12%)</title><rect x="84.3014%" y="661" width="2.1193%" height="15" fill="rgb(227,180,23)" fg:x="1074" fg:w="27"/><text x="84.5514%" y="671.50">e..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.86%)</title><rect x="85.5573%" y="645" width="0.8634%" height="15" fill="rgb(220,137,31)" fg:x="1090" fg:w="11"/><text x="85.8073%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.86%)</title><rect x="85.5573%" y="629" width="0.8634%" height="15" fill="rgb(245,124,25)" fg:x="1090" fg:w="11"/><text x="85.8073%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.86%)</title><rect x="85.5573%" y="613" width="0.8634%" height="15" fill="rgb(217,157,5)" fg:x="1090" fg:w="11"/><text x="85.8073%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.55%)</title><rect x="85.8713%" y="597" width="0.5495%" height="15" fill="rgb(225,59,2)" fg:x="1094" fg:w="7"/><text x="86.1213%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.47%)</title><rect x="85.9498%" y="581" width="0.4710%" height="15" fill="rgb(220,182,9)" fg:x="1095" fg:w="6"/><text x="86.1998%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="86.3422%" y="565" width="0.0785%" height="15" fill="rgb(249,54,24)" fg:x="1100" fg:w="1"/><text x="86.5922%" y="575.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="86.4207%" y="741" width="0.0785%" height="15" fill="rgb(216,89,17)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="86.4207%" y="725" width="0.0785%" height="15" fill="rgb(245,20,45)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.4207%" y="709" width="0.0785%" height="15" fill="rgb(230,83,14)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.4207%" y="693" width="0.0785%" height="15" fill="rgb(246,109,11)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4207%" y="677" width="0.0785%" height="15" fill="rgb(235,85,23)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4207%" y="661" width="0.0785%" height="15" fill="rgb(215,101,36)" fg:x="1101" fg:w="1"/><text x="86.6707%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.4992%" y="709" width="0.0785%" height="15" fill="rgb(228,140,31)" fg:x="1102" fg:w="1"/><text x="86.7492%" y="719.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="86.4992%" y="693" width="0.0785%" height="15" fill="rgb(234,162,37)" fg:x="1102" fg:w="1"/><text x="86.7492%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.4992%" y="677" width="0.0785%" height="15" fill="rgb(221,0,24)" fg:x="1102" fg:w="1"/><text x="86.7492%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="86.5777%" y="709" width="0.0785%" height="15" fill="rgb(230,161,41)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="86.5777%" y="693" width="0.0785%" height="15" fill="rgb(224,46,24)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.5777%" y="677" width="0.0785%" height="15" fill="rgb(205,59,32)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="86.5777%" y="661" width="0.0785%" height="15" fill="rgb(239,31,20)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.5777%" y="645" width="0.0785%" height="15" fill="rgb(233,149,44)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="86.5777%" y="629" width="0.0785%" height="15" fill="rgb(243,47,26)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.5777%" y="613" width="0.0785%" height="15" fill="rgb(233,107,5)" fg:x="1103" fg:w="1"/><text x="86.8277%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6562%" y="629" width="0.0785%" height="15" fill="rgb(248,140,33)" fg:x="1104" fg:w="1"/><text x="86.9062%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.6562%" y="613" width="0.0785%" height="15" fill="rgb(228,178,19)" fg:x="1104" fg:w="1"/><text x="86.9062%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6562%" y="597" width="0.0785%" height="15" fill="rgb(224,39,49)" fg:x="1104" fg:w="1"/><text x="86.9062%" y="607.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="86.6562%" y="693" width="0.1570%" height="15" fill="rgb(246,56,47)" fg:x="1104" fg:w="2"/><text x="86.9062%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="86.6562%" y="677" width="0.1570%" height="15" fill="rgb(220,73,27)" fg:x="1104" fg:w="2"/><text x="86.9062%" y="687.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="86.6562%" y="661" width="0.1570%" height="15" fill="rgb(239,112,21)" fg:x="1104" fg:w="2"/><text x="86.9062%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="86.6562%" y="645" width="0.1570%" height="15" fill="rgb(253,14,51)" fg:x="1104" fg:w="2"/><text x="86.9062%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.7347%" y="629" width="0.0785%" height="15" fill="rgb(215,58,12)" fg:x="1105" fg:w="1"/><text x="86.9847%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="86.7347%" y="613" width="0.0785%" height="15" fill="rgb(207,181,19)" fg:x="1105" fg:w="1"/><text x="86.9847%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="86.4992%" y="725" width="0.3925%" height="15" fill="rgb(211,214,34)" fg:x="1102" fg:w="5"/><text x="86.7492%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="86.6562%" y="709" width="0.2355%" height="15" fill="rgb(243,124,39)" fg:x="1104" fg:w="3"/><text x="86.9062%" y="719.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="86.8132%" y="693" width="0.0785%" height="15" fill="rgb(248,135,21)" fg:x="1106" fg:w="1"/><text x="87.0632%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8132%" y="677" width="0.0785%" height="15" fill="rgb(245,218,3)" fg:x="1106" fg:w="1"/><text x="87.0632%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.8132%" y="661" width="0.0785%" height="15" fill="rgb(225,144,22)" fg:x="1106" fg:w="1"/><text x="87.0632%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8917%" y="629" width="0.0785%" height="15" fill="rgb(250,90,15)" fg:x="1107" fg:w="1"/><text x="87.1417%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.8917%" y="613" width="0.0785%" height="15" fill="rgb(224,64,29)" fg:x="1107" fg:w="1"/><text x="87.1417%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.8917%" y="597" width="0.0785%" height="15" fill="rgb(217,50,47)" fg:x="1107" fg:w="1"/><text x="87.1417%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9702%" y="629" width="0.0785%" height="15" fill="rgb(231,159,47)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.9702%" y="613" width="0.0785%" height="15" fill="rgb(213,89,29)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9702%" y="597" width="0.0785%" height="15" fill="rgb(243,90,23)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9702%" y="581" width="0.0785%" height="15" fill="rgb(213,21,6)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.9702%" y="565" width="0.0785%" height="15" fill="rgb(237,139,17)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.9702%" y="549" width="0.0785%" height="15" fill="rgb(250,147,17)" fg:x="1108" fg:w="1"/><text x="87.2202%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="86.8917%" y="677" width="0.2355%" height="15" fill="rgb(212,208,42)" fg:x="1107" fg:w="3"/><text x="87.1417%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="86.8917%" y="661" width="0.2355%" height="15" fill="rgb(215,229,40)" fg:x="1107" fg:w="3"/><text x="87.1417%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="86.8917%" y="645" width="0.2355%" height="15" fill="rgb(206,204,1)" fg:x="1107" fg:w="3"/><text x="87.1417%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0487%" y="629" width="0.0785%" height="15" fill="rgb(230,62,32)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0487%" y="613" width="0.0785%" height="15" fill="rgb(223,22,42)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0487%" y="597" width="0.0785%" height="15" fill="rgb(244,6,23)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0487%" y="581" width="0.0785%" height="15" fill="rgb(240,221,42)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.0487%" y="565" width="0.0785%" height="15" fill="rgb(222,74,7)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0487%" y="549" width="0.0785%" height="15" fill="rgb(227,191,38)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.0487%" y="533" width="0.0785%" height="15" fill="rgb(227,89,34)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.0487%" y="517" width="0.0785%" height="15" fill="rgb(215,153,25)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0487%" y="501" width="0.0785%" height="15" fill="rgb(215,153,46)" fg:x="1109" fg:w="1"/><text x="87.2987%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="86.8917%" y="709" width="0.3140%" height="15" fill="rgb(242,38,52)" fg:x="1107" fg:w="4"/><text x="87.1417%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="86.8917%" y="693" width="0.3140%" height="15" fill="rgb(218,112,4)" fg:x="1107" fg:w="4"/><text x="87.1417%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.1272%" y="677" width="0.0785%" height="15" fill="rgb(231,210,31)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.1272%" y="661" width="0.0785%" height="15" fill="rgb(245,223,36)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.1272%" y="645" width="0.0785%" height="15" fill="rgb(246,41,2)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1272%" y="629" width="0.0785%" height="15" fill="rgb(227,51,31)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.1272%" y="613" width="0.0785%" height="15" fill="rgb(222,95,26)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.1272%" y="597" width="0.0785%" height="15" fill="rgb(224,190,1)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1272%" y="581" width="0.0785%" height="15" fill="rgb(209,90,42)" fg:x="1110" fg:w="1"/><text x="87.3772%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (10 samples, 0.78%)</title><rect x="86.4992%" y="741" width="0.7849%" height="15" fill="rgb(232,225,50)" fg:x="1102" fg:w="10"/><text x="86.7492%" y="751.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.39%)</title><rect x="86.8917%" y="725" width="0.3925%" height="15" fill="rgb(239,89,47)" fg:x="1107" fg:w="5"/><text x="87.1417%" y="735.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="87.2057%" y="709" width="0.0785%" height="15" fill="rgb(230,212,50)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.2057%" y="693" width="0.0785%" height="15" fill="rgb(252,1,27)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="87.2057%" y="677" width="0.0785%" height="15" fill="rgb(237,179,41)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.2057%" y="661" width="0.0785%" height="15" fill="rgb(214,151,37)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.2057%" y="645" width="0.0785%" height="15" fill="rgb(211,74,11)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2057%" y="629" width="0.0785%" height="15" fill="rgb(242,21,21)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2057%" y="613" width="0.0785%" height="15" fill="rgb(226,106,43)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2057%" y="597" width="0.0785%" height="15" fill="rgb(229,162,39)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2057%" y="581" width="0.0785%" height="15" fill="rgb(228,159,25)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2057%" y="565" width="0.0785%" height="15" fill="rgb(237,32,23)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2057%" y="549" width="0.0785%" height="15" fill="rgb(212,35,32)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2057%" y="533" width="0.0785%" height="15" fill="rgb(215,199,1)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.2057%" y="517" width="0.0785%" height="15" fill="rgb(215,67,13)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.2057%" y="501" width="0.0785%" height="15" fill="rgb(216,20,47)" fg:x="1111" fg:w="1"/><text x="87.4557%" y="511.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="87.2841%" y="741" width="0.0785%" height="15" fill="rgb(249,183,48)" fg:x="1112" fg:w="1"/><text x="87.5341%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="87.2841%" y="725" width="0.0785%" height="15" fill="rgb(208,86,37)" fg:x="1112" fg:w="1"/><text x="87.5341%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="87.2841%" y="709" width="0.0785%" height="15" fill="rgb(251,192,7)" fg:x="1112" fg:w="1"/><text x="87.5341%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2841%" y="693" width="0.0785%" height="15" fill="rgb(234,196,3)" fg:x="1112" fg:w="1"/><text x="87.5341%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="87.3626%" y="725" width="0.0785%" height="15" fill="rgb(229,150,39)" fg:x="1113" fg:w="1"/><text x="87.6126%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="87.3626%" y="709" width="0.0785%" height="15" fill="rgb(226,19,29)" fg:x="1113" fg:w="1"/><text x="87.6126%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3626%" y="693" width="0.0785%" height="15" fill="rgb(226,222,2)" fg:x="1113" fg:w="1"/><text x="87.6126%" y="703.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.4411%" y="709" width="0.0785%" height="15" fill="rgb(235,85,29)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="87.4411%" y="693" width="0.0785%" height="15" fill="rgb(237,194,43)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.4411%" y="677" width="0.0785%" height="15" fill="rgb(211,4,42)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.4411%" y="661" width="0.0785%" height="15" fill="rgb(221,80,37)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.4411%" y="645" width="0.0785%" height="15" fill="rgb(222,47,31)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4411%" y="629" width="0.0785%" height="15" fill="rgb(249,82,52)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4411%" y="613" width="0.0785%" height="15" fill="rgb(218,203,2)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4411%" y="597" width="0.0785%" height="15" fill="rgb(210,175,14)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4411%" y="581" width="0.0785%" height="15" fill="rgb(216,210,12)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.4411%" y="565" width="0.0785%" height="15" fill="rgb(229,120,18)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4411%" y="549" width="0.0785%" height="15" fill="rgb(231,174,12)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.4411%" y="533" width="0.0785%" height="15" fill="rgb(214,101,53)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.4411%" y="517" width="0.0785%" height="15" fill="rgb(246,89,43)" fg:x="1114" fg:w="1"/><text x="87.6911%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.5196%" y="693" width="0.0785%" height="15" fill="rgb(222,9,51)" fg:x="1115" fg:w="1"/><text x="87.7696%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5981%" y="693" width="0.0785%" height="15" fill="rgb(252,221,9)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5981%" y="677" width="0.0785%" height="15" fill="rgb(248,28,15)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="87.5981%" y="661" width="0.0785%" height="15" fill="rgb(213,54,52)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.5981%" y="645" width="0.0785%" height="15" fill="rgb(240,3,45)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.5981%" y="629" width="0.0785%" height="15" fill="rgb(239,138,24)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="87.5981%" y="613" width="0.0785%" height="15" fill="rgb(233,45,54)" fg:x="1116" fg:w="1"/><text x="87.8481%" y="623.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="87.5196%" y="709" width="0.2355%" height="15" fill="rgb(220,131,2)" fg:x="1115" fg:w="3"/><text x="87.7696%" y="719.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6766%" y="693" width="0.0785%" height="15" fill="rgb(240,154,36)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6766%" y="677" width="0.0785%" height="15" fill="rgb(251,221,1)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="87.6766%" y="661" width="0.0785%" height="15" fill="rgb(225,217,1)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.6766%" y="645" width="0.0785%" height="15" fill="rgb(241,105,49)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6766%" y="629" width="0.0785%" height="15" fill="rgb(215,44,32)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.6766%" y="613" width="0.0785%" height="15" fill="rgb(213,222,14)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.6766%" y="597" width="0.0785%" height="15" fill="rgb(207,99,52)" fg:x="1117" fg:w="1"/><text x="87.9266%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (57 samples, 4.47%)</title><rect x="83.3595%" y="757" width="4.4741%" height="15" fill="rgb(214,208,52)" fg:x="1062" fg:w="57"/><text x="83.6095%" y="767.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (6 samples, 0.47%)</title><rect x="87.3626%" y="741" width="0.4710%" height="15" fill="rgb(244,169,0)" fg:x="1113" fg:w="6"/><text x="87.6126%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (5 samples, 0.39%)</title><rect x="87.4411%" y="725" width="0.3925%" height="15" fill="rgb(216,193,37)" fg:x="1114" fg:w="5"/><text x="87.6911%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (1 samples, 0.08%)</title><rect x="87.7551%" y="709" width="0.0785%" height="15" fill="rgb(212,158,10)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="87.7551%" y="693" width="0.0785%" height="15" fill="rgb(213,110,20)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="87.7551%" y="677" width="0.0785%" height="15" fill="rgb(226,5,42)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.7551%" y="661" width="0.0785%" height="15" fill="rgb(211,93,8)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.7551%" y="645" width="0.0785%" height="15" fill="rgb(240,208,12)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7551%" y="629" width="0.0785%" height="15" fill="rgb(233,127,50)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7551%" y="613" width="0.0785%" height="15" fill="rgb(227,199,53)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7551%" y="597" width="0.0785%" height="15" fill="rgb(235,199,10)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7551%" y="581" width="0.0785%" height="15" fill="rgb(228,148,35)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7551%" y="565" width="0.0785%" height="15" fill="rgb(217,87,19)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.7551%" y="549" width="0.0785%" height="15" fill="rgb(239,9,32)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7551%" y="533" width="0.0785%" height="15" fill="rgb(229,101,29)" fg:x="1118" fg:w="1"/><text x="88.0051%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.8336%" y="549" width="0.0785%" height="15" fill="rgb(208,143,26)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.8336%" y="533" width="0.0785%" height="15" fill="rgb(214,10,2)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.8336%" y="517" width="0.0785%" height="15" fill="rgb(254,203,30)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.8336%" y="501" width="0.0785%" height="15" fill="rgb(242,45,3)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.8336%" y="485" width="0.0785%" height="15" fill="rgb(209,146,51)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.8336%" y="469" width="0.0785%" height="15" fill="rgb(222,80,5)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="87.8336%" y="453" width="0.0785%" height="15" fill="rgb(252,80,35)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="87.8336%" y="437" width="0.0785%" height="15" fill="rgb(246,125,28)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="87.8336%" y="421" width="0.0785%" height="15" fill="rgb(224,143,51)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="87.8336%" y="405" width="0.0785%" height="15" fill="rgb(205,24,17)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="87.8336%" y="389" width="0.0785%" height="15" fill="rgb(253,128,30)" fg:x="1119" fg:w="1"/><text x="88.0836%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="87.8336%" y="709" width="0.1570%" height="15" fill="rgb(214,153,25)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="87.8336%" y="693" width="0.1570%" height="15" fill="rgb(214,4,28)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="87.8336%" y="677" width="0.1570%" height="15" fill="rgb(235,179,52)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="87.8336%" y="661" width="0.1570%" height="15" fill="rgb(233,27,42)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="87.8336%" y="645" width="0.1570%" height="15" fill="rgb(238,35,25)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="87.8336%" y="629" width="0.1570%" height="15" fill="rgb(227,44,31)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="87.8336%" y="613" width="0.1570%" height="15" fill="rgb(232,201,13)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="87.8336%" y="597" width="0.1570%" height="15" fill="rgb(224,172,52)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="87.8336%" y="581" width="0.1570%" height="15" fill="rgb(214,27,26)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="87.8336%" y="565" width="0.1570%" height="15" fill="rgb(210,185,52)" fg:x="1119" fg:w="2"/><text x="88.0836%" y="575.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="87.9121%" y="549" width="0.0785%" height="15" fill="rgb(249,59,32)" fg:x="1120" fg:w="1"/><text x="88.1621%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9906%" y="661" width="0.0785%" height="15" fill="rgb(242,209,18)" fg:x="1121" fg:w="1"/><text x="88.2406%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9906%" y="645" width="0.0785%" height="15" fill="rgb(229,0,18)" fg:x="1121" fg:w="1"/><text x="88.2406%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9906%" y="629" width="0.0785%" height="15" fill="rgb(217,138,29)" fg:x="1121" fg:w="1"/><text x="88.2406%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.9906%" y="613" width="0.0785%" height="15" fill="rgb(215,72,42)" fg:x="1121" fg:w="1"/><text x="88.2406%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="87.9906%" y="709" width="0.1570%" height="15" fill="rgb(254,115,11)" fg:x="1121" fg:w="2"/><text x="88.2406%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.9906%" y="693" width="0.1570%" height="15" fill="rgb(205,133,39)" fg:x="1121" fg:w="2"/><text x="88.2406%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.9906%" y="677" width="0.1570%" height="15" fill="rgb(211,36,27)" fg:x="1121" fg:w="2"/><text x="88.2406%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0691%" y="661" width="0.0785%" height="15" fill="rgb(221,48,10)" fg:x="1122" fg:w="1"/><text x="88.3191%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="87.8336%" y="725" width="0.3925%" height="15" fill="rgb(230,172,50)" fg:x="1119" fg:w="5"/><text x="88.0836%" y="735.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.1476%" y="709" width="0.0785%" height="15" fill="rgb(249,72,18)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.1476%" y="693" width="0.0785%" height="15" fill="rgb(237,58,48)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.1476%" y="677" width="0.0785%" height="15" fill="rgb(242,123,3)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.1476%" y="661" width="0.0785%" height="15" fill="rgb(232,111,32)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.1476%" y="645" width="0.0785%" height="15" fill="rgb(229,108,3)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1476%" y="629" width="0.0785%" height="15" fill="rgb(222,158,10)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1476%" y="613" width="0.0785%" height="15" fill="rgb(205,34,49)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="88.1476%" y="597" width="0.0785%" height="15" fill="rgb(232,21,14)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.1476%" y="581" width="0.0785%" height="15" fill="rgb(229,127,44)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1476%" y="565" width="0.0785%" height="15" fill="rgb(232,171,4)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.1476%" y="549" width="0.0785%" height="15" fill="rgb(250,92,16)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.1476%" y="533" width="0.0785%" height="15" fill="rgb(230,103,38)" fg:x="1123" fg:w="1"/><text x="88.3976%" y="543.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="88.2261%" y="725" width="0.0785%" height="15" fill="rgb(253,167,9)" fg:x="1124" fg:w="1"/><text x="88.4761%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="88.2261%" y="709" width="0.0785%" height="15" fill="rgb(222,118,11)" fg:x="1124" fg:w="1"/><text x="88.4761%" y="719.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (7 samples, 0.55%)</title><rect x="87.8336%" y="757" width="0.5495%" height="15" fill="rgb(240,202,0)" fg:x="1119" fg:w="7"/><text x="88.0836%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.55%)</title><rect x="87.8336%" y="741" width="0.5495%" height="15" fill="rgb(236,124,4)" fg:x="1119" fg:w="7"/><text x="88.0836%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="88.3046%" y="725" width="0.0785%" height="15" fill="rgb(244,128,18)" fg:x="1125" fg:w="1"/><text x="88.5546%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="88.3046%" y="709" width="0.0785%" height="15" fill="rgb(231,206,5)" fg:x="1125" fg:w="1"/><text x="88.5546%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.3046%" y="693" width="0.0785%" height="15" fill="rgb(237,111,8)" fg:x="1125" fg:w="1"/><text x="88.5546%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.3830%" y="725" width="0.1570%" height="15" fill="rgb(225,127,3)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.3830%" y="709" width="0.1570%" height="15" fill="rgb(222,85,48)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.3830%" y="693" width="0.1570%" height="15" fill="rgb(221,108,37)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.3830%" y="677" width="0.1570%" height="15" fill="rgb(226,169,36)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3830%" y="661" width="0.1570%" height="15" fill="rgb(237,76,12)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.3830%" y="645" width="0.1570%" height="15" fill="rgb(210,227,32)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3830%" y="629" width="0.1570%" height="15" fill="rgb(214,117,20)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="88.3830%" y="613" width="0.1570%" height="15" fill="rgb(234,119,41)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3830%" y="597" width="0.1570%" height="15" fill="rgb(230,130,47)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.3830%" y="581" width="0.1570%" height="15" fill="rgb(215,21,41)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3830%" y="565" width="0.1570%" height="15" fill="rgb(226,26,53)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.3830%" y="549" width="0.1570%" height="15" fill="rgb(221,92,23)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.3830%" y="533" width="0.1570%" height="15" fill="rgb(213,156,21)" fg:x="1126" fg:w="2"/><text x="88.6330%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.4615%" y="517" width="0.0785%" height="15" fill="rgb(254,166,29)" fg:x="1127" fg:w="1"/><text x="88.7115%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="88.3830%" y="741" width="0.2355%" height="15" fill="rgb(213,71,1)" fg:x="1126" fg:w="3"/><text x="88.6330%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.5400%" y="725" width="0.0785%" height="15" fill="rgb(245,8,13)" fg:x="1128" fg:w="1"/><text x="88.7900%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="88.6970%" y="677" width="0.0785%" height="15" fill="rgb(213,32,32)" fg:x="1130" fg:w="1"/><text x="88.9470%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="88.6970%" y="661" width="0.0785%" height="15" fill="rgb(251,86,50)" fg:x="1130" fg:w="1"/><text x="88.9470%" y="671.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (99 samples, 7.77%)</title><rect x="81.0832%" y="773" width="7.7708%" height="15" fill="rgb(252,92,41)" fg:x="1033" fg:w="99"/><text x="81.3332%" y="783.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (6 samples, 0.47%)</title><rect x="88.3830%" y="757" width="0.4710%" height="15" fill="rgb(234,70,35)" fg:x="1126" fg:w="6"/><text x="88.6330%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="88.6185%" y="741" width="0.2355%" height="15" fill="rgb(210,157,19)" fg:x="1129" fg:w="3"/><text x="88.8685%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="88.6185%" y="725" width="0.2355%" height="15" fill="rgb(206,20,45)" fg:x="1129" fg:w="3"/><text x="88.8685%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="88.6185%" y="709" width="0.2355%" height="15" fill="rgb(207,34,7)" fg:x="1129" fg:w="3"/><text x="88.8685%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="88.6185%" y="693" width="0.2355%" height="15" fill="rgb(253,151,14)" fg:x="1129" fg:w="3"/><text x="88.8685%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7755%" y="677" width="0.0785%" height="15" fill="rgb(252,1,18)" fg:x="1131" fg:w="1"/><text x="89.0255%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.7755%" y="661" width="0.0785%" height="15" fill="rgb(214,77,52)" fg:x="1131" fg:w="1"/><text x="89.0255%" y="671.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="88.8540%" y="757" width="0.0785%" height="15" fill="rgb(254,106,35)" fg:x="1132" fg:w="1"/><text x="89.1040%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="88.8540%" y="741" width="0.0785%" height="15" fill="rgb(212,67,40)" fg:x="1132" fg:w="1"/><text x="89.1040%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="88.9325%" y="757" width="0.1570%" height="15" fill="rgb(228,76,23)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="88.9325%" y="741" width="0.1570%" height="15" fill="rgb(250,198,5)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.9325%" y="725" width="0.1570%" height="15" fill="rgb(209,20,25)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="88.9325%" y="709" width="0.1570%" height="15" fill="rgb(236,32,4)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="88.9325%" y="693" width="0.1570%" height="15" fill="rgb(215,31,6)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="88.9325%" y="677" width="0.1570%" height="15" fill="rgb(207,186,49)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="88.9325%" y="661" width="0.1570%" height="15" fill="rgb(211,212,49)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="88.9325%" y="645" width="0.1570%" height="15" fill="rgb(229,51,41)" fg:x="1133" fg:w="2"/><text x="89.1825%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="89.0110%" y="629" width="0.0785%" height="15" fill="rgb(205,225,36)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="639.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="89.0110%" y="613" width="0.0785%" height="15" fill="rgb(209,213,45)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="623.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="89.0110%" y="597" width="0.0785%" height="15" fill="rgb(219,35,49)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="607.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.0110%" y="581" width="0.0785%" height="15" fill="rgb(215,205,22)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.0110%" y="565" width="0.0785%" height="15" fill="rgb(248,204,34)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="575.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="89.0110%" y="549" width="0.0785%" height="15" fill="rgb(219,223,31)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="89.0110%" y="533" width="0.0785%" height="15" fill="rgb(236,14,8)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="89.0110%" y="517" width="0.0785%" height="15" fill="rgb(243,129,23)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="89.0110%" y="501" width="0.0785%" height="15" fill="rgb(205,204,5)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.0110%" y="485" width="0.0785%" height="15" fill="rgb(244,115,32)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="89.0110%" y="469" width="0.0785%" height="15" fill="rgb(229,123,14)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.0110%" y="453" width="0.0785%" height="15" fill="rgb(250,85,1)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="89.0110%" y="437" width="0.0785%" height="15" fill="rgb(209,141,54)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="89.0110%" y="421" width="0.0785%" height="15" fill="rgb(244,107,39)" fg:x="1134" fg:w="1"/><text x="89.2610%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="89.1680%" y="725" width="0.0785%" height="15" fill="rgb(230,68,26)" fg:x="1136" fg:w="1"/><text x="89.4180%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1680%" y="709" width="0.0785%" height="15" fill="rgb(220,178,33)" fg:x="1136" fg:w="1"/><text x="89.4180%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (3 samples, 0.24%)</title><rect x="89.1680%" y="741" width="0.2355%" height="15" fill="rgb(220,77,53)" fg:x="1136" fg:w="3"/><text x="89.4180%" y="751.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (2 samples, 0.16%)</title><rect x="89.2465%" y="725" width="0.1570%" height="15" fill="rgb(224,108,19)" fg:x="1137" fg:w="2"/><text x="89.4965%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="89.2465%" y="709" width="0.1570%" height="15" fill="rgb(223,203,27)" fg:x="1137" fg:w="2"/><text x="89.4965%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="89.2465%" y="693" width="0.1570%" height="15" fill="rgb(211,32,46)" fg:x="1137" fg:w="2"/><text x="89.4965%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.2465%" y="677" width="0.1570%" height="15" fill="rgb(240,101,27)" fg:x="1137" fg:w="2"/><text x="89.4965%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.2465%" y="661" width="0.1570%" height="15" fill="rgb(217,210,11)" fg:x="1137" fg:w="2"/><text x="89.4965%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.3250%" y="645" width="0.0785%" height="15" fill="rgb(236,130,21)" fg:x="1138" fg:w="1"/><text x="89.5750%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.3250%" y="629" width="0.0785%" height="15" fill="rgb(250,136,8)" fg:x="1138" fg:w="1"/><text x="89.5750%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="89.3250%" y="613" width="0.0785%" height="15" fill="rgb(243,223,36)" fg:x="1138" fg:w="1"/><text x="89.5750%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.3250%" y="597" width="0.0785%" height="15" fill="rgb(246,184,8)" fg:x="1138" fg:w="1"/><text x="89.5750%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4035%" y="677" width="0.0785%" height="15" fill="rgb(222,158,36)" fg:x="1139" fg:w="1"/><text x="89.6535%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="89.4819%" y="677" width="0.0785%" height="15" fill="rgb(210,220,19)" fg:x="1140" fg:w="1"/><text x="89.7319%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.4819%" y="661" width="0.0785%" height="15" fill="rgb(246,44,38)" fg:x="1140" fg:w="1"/><text x="89.7319%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.4819%" y="645" width="0.0785%" height="15" fill="rgb(246,186,14)" fg:x="1140" fg:w="1"/><text x="89.7319%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.4819%" y="629" width="0.0785%" height="15" fill="rgb(233,193,20)" fg:x="1140" fg:w="1"/><text x="89.7319%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.4819%" y="613" width="0.0785%" height="15" fill="rgb(215,60,5)" fg:x="1140" fg:w="1"/><text x="89.7319%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6389%" y="629" width="0.0785%" height="15" fill="rgb(207,128,10)" fg:x="1142" fg:w="1"/><text x="89.8889%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="89.6389%" y="613" width="0.0785%" height="15" fill="rgb(238,84,54)" fg:x="1142" fg:w="1"/><text x="89.8889%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.6389%" y="597" width="0.0785%" height="15" fill="rgb(213,130,11)" fg:x="1142" fg:w="1"/><text x="89.8889%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.6389%" y="581" width="0.0785%" height="15" fill="rgb(235,62,9)" fg:x="1142" fg:w="1"/><text x="89.8889%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.6389%" y="565" width="0.0785%" height="15" fill="rgb(222,64,24)" fg:x="1142" fg:w="1"/><text x="89.8889%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="89.6389%" y="661" width="0.2355%" height="15" fill="rgb(238,193,42)" fg:x="1142" fg:w="3"/><text x="89.8889%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="89.6389%" y="645" width="0.2355%" height="15" fill="rgb(243,204,46)" fg:x="1142" fg:w="3"/><text x="89.8889%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.7174%" y="629" width="0.1570%" height="15" fill="rgb(243,196,11)" fg:x="1143" fg:w="2"/><text x="89.9674%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.7959%" y="613" width="0.0785%" height="15" fill="rgb(232,77,22)" fg:x="1144" fg:w="1"/><text x="90.0459%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.7959%" y="597" width="0.0785%" height="15" fill="rgb(215,80,25)" fg:x="1144" fg:w="1"/><text x="90.0459%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="89.5604%" y="677" width="0.4710%" height="15" fill="rgb(210,173,7)" fg:x="1141" fg:w="6"/><text x="89.8104%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.8744%" y="661" width="0.1570%" height="15" fill="rgb(207,101,10)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="89.8744%" y="645" width="0.1570%" height="15" fill="rgb(246,57,48)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="89.8744%" y="629" width="0.1570%" height="15" fill="rgb(236,184,40)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="89.8744%" y="613" width="0.1570%" height="15" fill="rgb(210,205,13)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="89.8744%" y="597" width="0.1570%" height="15" fill="rgb(231,129,42)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="607.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="89.8744%" y="581" width="0.1570%" height="15" fill="rgb(220,229,54)" fg:x="1145" fg:w="2"/><text x="90.1244%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (9 samples, 0.71%)</title><rect x="89.4035%" y="693" width="0.7064%" height="15" fill="rgb(230,192,26)" fg:x="1139" fg:w="9"/><text x="89.6535%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.0314%" y="677" width="0.0785%" height="15" fill="rgb(253,18,30)" fg:x="1147" fg:w="1"/><text x="90.2814%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.1099%" y="645" width="0.0785%" height="15" fill="rgb(216,62,53)" fg:x="1148" fg:w="1"/><text x="90.3599%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.1884%" y="645" width="0.0785%" height="15" fill="rgb(230,79,29)" fg:x="1149" fg:w="1"/><text x="90.4384%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.1099%" y="693" width="0.2355%" height="15" fill="rgb(242,26,26)" fg:x="1148" fg:w="3"/><text x="90.3599%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="90.1099%" y="677" width="0.2355%" height="15" fill="rgb(227,125,21)" fg:x="1148" fg:w="3"/><text x="90.3599%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="90.1099%" y="661" width="0.2355%" height="15" fill="rgb(229,93,26)" fg:x="1148" fg:w="3"/><text x="90.3599%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2669%" y="645" width="0.0785%" height="15" fill="rgb(227,228,8)" fg:x="1150" fg:w="1"/><text x="90.5169%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.2669%" y="629" width="0.0785%" height="15" fill="rgb(233,56,0)" fg:x="1150" fg:w="1"/><text x="90.5169%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.2669%" y="613" width="0.0785%" height="15" fill="rgb(225,185,17)" fg:x="1150" fg:w="1"/><text x="90.5169%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="661" width="0.0785%" height="15" fill="rgb(238,202,30)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="645" width="0.0785%" height="15" fill="rgb(236,60,13)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="629" width="0.0785%" height="15" fill="rgb(244,92,0)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="613" width="0.0785%" height="15" fill="rgb(225,57,15)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="597" width="0.0785%" height="15" fill="rgb(228,5,28)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="581" width="0.0785%" height="15" fill="rgb(252,34,51)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="565" width="0.0785%" height="15" fill="rgb(235,58,7)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.3454%" y="549" width="0.0785%" height="15" fill="rgb(250,132,20)" fg:x="1151" fg:w="1"/><text x="90.5954%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.4239%" y="613" width="0.0785%" height="15" fill="rgb(217,164,0)" fg:x="1152" fg:w="1"/><text x="90.6739%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.4239%" y="597" width="0.0785%" height="15" fill="rgb(208,220,35)" fg:x="1152" fg:w="1"/><text x="90.6739%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.4239%" y="645" width="0.1570%" height="15" fill="rgb(227,42,51)" fg:x="1152" fg:w="2"/><text x="90.6739%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="90.4239%" y="629" width="0.1570%" height="15" fill="rgb(225,146,38)" fg:x="1152" fg:w="2"/><text x="90.6739%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.5024%" y="613" width="0.0785%" height="15" fill="rgb(252,108,37)" fg:x="1153" fg:w="1"/><text x="90.7524%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5808%" y="629" width="0.0785%" height="15" fill="rgb(244,101,24)" fg:x="1154" fg:w="1"/><text x="90.8308%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.5808%" y="613" width="0.0785%" height="15" fill="rgb(213,161,50)" fg:x="1154" fg:w="1"/><text x="90.8308%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5808%" y="597" width="0.0785%" height="15" fill="rgb(248,159,19)" fg:x="1154" fg:w="1"/><text x="90.8308%" y="607.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="90.6593%" y="613" width="0.0785%" height="15" fill="rgb(233,179,15)" fg:x="1155" fg:w="1"/><text x="90.9093%" y="623.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (6 samples, 0.47%)</title><rect x="90.3454%" y="677" width="0.4710%" height="15" fill="rgb(248,178,3)" fg:x="1151" fg:w="6"/><text x="90.5954%" y="687.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.39%)</title><rect x="90.4239%" y="661" width="0.3925%" height="15" fill="rgb(245,190,41)" fg:x="1152" fg:w="5"/><text x="90.6739%" y="671.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="90.5808%" y="645" width="0.2355%" height="15" fill="rgb(218,151,19)" fg:x="1154" fg:w="3"/><text x="90.8308%" y="655.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="90.6593%" y="629" width="0.1570%" height="15" fill="rgb(245,25,44)" fg:x="1155" fg:w="2"/><text x="90.9093%" y="639.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.7378%" y="613" width="0.0785%" height="15" fill="rgb(235,172,47)" fg:x="1156" fg:w="1"/><text x="90.9878%" y="623.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.7378%" y="597" width="0.0785%" height="15" fill="rgb(246,33,12)" fg:x="1156" fg:w="1"/><text x="90.9878%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.7378%" y="581" width="0.0785%" height="15" fill="rgb(214,124,7)" fg:x="1156" fg:w="1"/><text x="90.9878%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="90.8163%" y="645" width="0.0785%" height="15" fill="rgb(246,186,18)" fg:x="1157" fg:w="1"/><text x="91.0663%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.8948%" y="645" width="0.0785%" height="15" fill="rgb(231,94,1)" fg:x="1158" fg:w="1"/><text x="91.1448%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.8948%" y="629" width="0.0785%" height="15" fill="rgb(208,33,48)" fg:x="1158" fg:w="1"/><text x="91.1448%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.8948%" y="613" width="0.0785%" height="15" fill="rgb(208,195,44)" fg:x="1158" fg:w="1"/><text x="91.1448%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="91.0518%" y="597" width="0.0785%" height="15" fill="rgb(226,13,52)" fg:x="1160" fg:w="1"/><text x="91.3018%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.0518%" y="581" width="0.0785%" height="15" fill="rgb(217,219,45)" fg:x="1160" fg:w="1"/><text x="91.3018%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2088%" y="501" width="0.0785%" height="15" fill="rgb(223,45,25)" fg:x="1162" fg:w="1"/><text x="91.4588%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2088%" y="485" width="0.0785%" height="15" fill="rgb(241,163,0)" fg:x="1162" fg:w="1"/><text x="91.4588%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.2088%" y="469" width="0.0785%" height="15" fill="rgb(216,68,47)" fg:x="1162" fg:w="1"/><text x="91.4588%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.55%)</title><rect x="90.8163%" y="677" width="0.5495%" height="15" fill="rgb(236,119,45)" fg:x="1157" fg:w="7"/><text x="91.0663%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.55%)</title><rect x="90.8163%" y="661" width="0.5495%" height="15" fill="rgb(209,188,24)" fg:x="1157" fg:w="7"/><text x="91.0663%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.39%)</title><rect x="90.9733%" y="645" width="0.3925%" height="15" fill="rgb(221,118,7)" fg:x="1159" fg:w="5"/><text x="91.2233%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.31%)</title><rect x="91.0518%" y="629" width="0.3140%" height="15" fill="rgb(213,148,43)" fg:x="1160" fg:w="4"/><text x="91.3018%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="91.0518%" y="613" width="0.3140%" height="15" fill="rgb(231,21,43)" fg:x="1160" fg:w="4"/><text x="91.3018%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="91.1303%" y="597" width="0.2355%" height="15" fill="rgb(232,213,43)" fg:x="1161" fg:w="3"/><text x="91.3803%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="91.1303%" y="581" width="0.2355%" height="15" fill="rgb(239,145,50)" fg:x="1161" fg:w="3"/><text x="91.3803%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.2088%" y="565" width="0.1570%" height="15" fill="rgb(222,131,18)" fg:x="1162" fg:w="2"/><text x="91.4588%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.2088%" y="549" width="0.1570%" height="15" fill="rgb(243,181,13)" fg:x="1162" fg:w="2"/><text x="91.4588%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.2088%" y="533" width="0.1570%" height="15" fill="rgb(212,74,41)" fg:x="1162" fg:w="2"/><text x="91.4588%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.2088%" y="517" width="0.1570%" height="15" fill="rgb(237,143,34)" fg:x="1162" fg:w="2"/><text x="91.4588%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="91.2873%" y="501" width="0.0785%" height="15" fill="rgb(228,139,0)" fg:x="1163" fg:w="1"/><text x="91.5373%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3658%" y="517" width="0.0785%" height="15" fill="rgb(227,214,11)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3658%" y="501" width="0.0785%" height="15" fill="rgb(228,118,39)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3658%" y="485" width="0.0785%" height="15" fill="rgb(207,117,22)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.3658%" y="469" width="0.0785%" height="15" fill="rgb(225,91,8)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.3658%" y="453" width="0.0785%" height="15" fill="rgb(230,219,48)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="463.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="91.3658%" y="437" width="0.0785%" height="15" fill="rgb(244,0,23)" fg:x="1164" fg:w="1"/><text x="91.6158%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.3658%" y="581" width="0.1570%" height="15" fill="rgb(206,212,23)" fg:x="1164" fg:w="2"/><text x="91.6158%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.3658%" y="565" width="0.1570%" height="15" fill="rgb(254,62,10)" fg:x="1164" fg:w="2"/><text x="91.6158%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.3658%" y="549" width="0.1570%" height="15" fill="rgb(236,58,8)" fg:x="1164" fg:w="2"/><text x="91.6158%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.3658%" y="533" width="0.1570%" height="15" fill="rgb(232,212,17)" fg:x="1164" fg:w="2"/><text x="91.6158%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.4443%" y="517" width="0.0785%" height="15" fill="rgb(206,132,9)" fg:x="1165" fg:w="1"/><text x="91.6943%" y="527.50"></text></g><g><title>engine::session::state::State::flush_entities (28 samples, 2.20%)</title><rect x="89.4035%" y="741" width="2.1978%" height="15" fill="rgb(234,97,28)" fg:x="1139" fg:w="28"/><text x="89.6535%" y="751.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (28 samples, 2.20%)</title><rect x="89.4035%" y="725" width="2.1978%" height="15" fill="rgb(254,144,9)" fg:x="1139" fg:w="28"/><text x="89.6535%" y="735.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (28 samples, 2.20%)</title><rect x="89.4035%" y="709" width="2.1978%" height="15" fill="rgb(244,204,43)" fg:x="1139" fg:w="28"/><text x="89.6535%" y="719.50">e..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.26%)</title><rect x="90.3454%" y="693" width="1.2559%" height="15" fill="rgb(248,177,16)" fg:x="1151" fg:w="16"/><text x="90.5954%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (3 samples, 0.24%)</title><rect x="91.3658%" y="677" width="0.2355%" height="15" fill="rgb(219,110,15)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="687.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.24%)</title><rect x="91.3658%" y="661" width="0.2355%" height="15" fill="rgb(212,203,25)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="91.3658%" y="645" width="0.2355%" height="15" fill="rgb(205,50,1)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.3658%" y="629" width="0.2355%" height="15" fill="rgb(222,152,41)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="91.3658%" y="613" width="0.2355%" height="15" fill="rgb(236,83,3)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.3658%" y="597" width="0.2355%" height="15" fill="rgb(214,30,54)" fg:x="1164" fg:w="3"/><text x="91.6158%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5228%" y="581" width="0.0785%" height="15" fill="rgb(250,117,31)" fg:x="1166" fg:w="1"/><text x="91.7728%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5228%" y="565" width="0.0785%" height="15" fill="rgb(228,77,14)" fg:x="1166" fg:w="1"/><text x="91.7728%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.5228%" y="549" width="0.0785%" height="15" fill="rgb(241,3,28)" fg:x="1166" fg:w="1"/><text x="91.7728%" y="559.50"></text></g><g><title>engine::session::Session::close (36 samples, 2.83%)</title><rect x="88.8540%" y="773" width="2.8257%" height="15" fill="rgb(221,175,52)" fg:x="1132" fg:w="36"/><text x="89.1040%" y="783.50">en..</text></g><g><title>engine::session::state::State::close (33 samples, 2.59%)</title><rect x="89.0895%" y="757" width="2.5903%" height="15" fill="rgb(237,91,6)" fg:x="1135" fg:w="33"/><text x="89.3395%" y="767.50">en..</text></g><g><title>engine::session::state::State::flush_futures (1 samples, 0.08%)</title><rect x="91.6013%" y="741" width="0.0785%" height="15" fill="rgb(246,46,42)" fg:x="1167" fg:w="1"/><text x="91.8513%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9937%" y="453" width="0.0785%" height="15" fill="rgb(235,199,0)" fg:x="1172" fg:w="1"/><text x="92.2437%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0722%" y="437" width="0.0785%" height="15" fill="rgb(224,44,40)" fg:x="1173" fg:w="1"/><text x="92.3222%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0722%" y="421" width="0.0785%" height="15" fill="rgb(209,24,35)" fg:x="1173" fg:w="1"/><text x="92.3222%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="92.1507%" y="405" width="0.0785%" height="15" fill="rgb(244,46,22)" fg:x="1174" fg:w="1"/><text x="92.4007%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.1507%" y="389" width="0.0785%" height="15" fill="rgb(235,99,8)" fg:x="1174" fg:w="1"/><text x="92.4007%" y="399.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="91.9152%" y="565" width="0.3925%" height="15" fill="rgb(218,127,36)" fg:x="1171" fg:w="5"/><text x="92.1652%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="91.9152%" y="549" width="0.3925%" height="15" fill="rgb(238,47,46)" fg:x="1171" fg:w="5"/><text x="92.1652%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="91.9937%" y="533" width="0.3140%" height="15" fill="rgb(233,65,17)" fg:x="1172" fg:w="4"/><text x="92.2437%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="91.9937%" y="517" width="0.3140%" height="15" fill="rgb(239,22,33)" fg:x="1172" fg:w="4"/><text x="92.2437%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="91.9937%" y="501" width="0.3140%" height="15" fill="rgb(243,66,43)" fg:x="1172" fg:w="4"/><text x="92.2437%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="91.9937%" y="485" width="0.3140%" height="15" fill="rgb(235,210,28)" fg:x="1172" fg:w="4"/><text x="92.2437%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="91.9937%" y="469" width="0.3140%" height="15" fill="rgb(205,191,50)" fg:x="1172" fg:w="4"/><text x="92.2437%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="92.0722%" y="453" width="0.2355%" height="15" fill="rgb(251,217,19)" fg:x="1173" fg:w="3"/><text x="92.3222%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="92.1507%" y="437" width="0.1570%" height="15" fill="rgb(205,174,37)" fg:x="1174" fg:w="2"/><text x="92.4007%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="92.1507%" y="421" width="0.1570%" height="15" fill="rgb(212,158,42)" fg:x="1174" fg:w="2"/><text x="92.4007%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.2292%" y="405" width="0.0785%" height="15" fill="rgb(212,208,51)" fg:x="1175" fg:w="1"/><text x="92.4792%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (6 samples, 0.47%)</title><rect x="91.9152%" y="629" width="0.4710%" height="15" fill="rgb(225,198,20)" fg:x="1171" fg:w="6"/><text x="92.1652%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.47%)</title><rect x="91.9152%" y="613" width="0.4710%" height="15" fill="rgb(247,41,44)" fg:x="1171" fg:w="6"/><text x="92.1652%" y="623.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.47%)</title><rect x="91.9152%" y="597" width="0.4710%" height="15" fill="rgb(228,33,41)" fg:x="1171" fg:w="6"/><text x="92.1652%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (6 samples, 0.47%)</title><rect x="91.9152%" y="581" width="0.4710%" height="15" fill="rgb(215,47,52)" fg:x="1171" fg:w="6"/><text x="92.1652%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3077%" y="565" width="0.0785%" height="15" fill="rgb(248,106,37)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="549" width="0.0785%" height="15" fill="rgb(238,91,29)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.3077%" y="533" width="0.0785%" height="15" fill="rgb(226,111,40)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="517" width="0.0785%" height="15" fill="rgb(229,159,36)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="527.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.3077%" y="501" width="0.0785%" height="15" fill="rgb(221,109,4)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="485" width="0.0785%" height="15" fill="rgb(236,56,25)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3077%" y="469" width="0.0785%" height="15" fill="rgb(244,113,23)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.3077%" y="453" width="0.0785%" height="15" fill="rgb(249,132,2)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="437" width="0.0785%" height="15" fill="rgb(205,185,21)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3077%" y="421" width="0.0785%" height="15" fill="rgb(245,130,2)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.3077%" y="405" width="0.0785%" height="15" fill="rgb(246,71,26)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="389" width="0.0785%" height="15" fill="rgb(234,194,6)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3077%" y="373" width="0.0785%" height="15" fill="rgb(206,24,32)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="92.3077%" y="357" width="0.0785%" height="15" fill="rgb(233,7,54)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3077%" y="341" width="0.0785%" height="15" fill="rgb(252,46,1)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.3077%" y="325" width="0.0785%" height="15" fill="rgb(216,113,53)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3077%" y="309" width="0.0785%" height="15" fill="rgb(215,40,24)" fg:x="1176" fg:w="1"/><text x="92.5577%" y="319.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.3862%" y="629" width="0.0785%" height="15" fill="rgb(233,222,8)" fg:x="1177" fg:w="1"/><text x="92.6362%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.3862%" y="613" width="0.0785%" height="15" fill="rgb(248,73,28)" fg:x="1177" fg:w="1"/><text x="92.6362%" y="623.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="92.4647%" y="629" width="0.1570%" height="15" fill="rgb(247,126,28)" fg:x="1178" fg:w="2"/><text x="92.7147%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (13 samples, 1.02%)</title><rect x="91.7582%" y="677" width="1.0204%" height="15" fill="rgb(242,173,54)" fg:x="1169" fg:w="13"/><text x="92.0082%" y="687.50"></text></g><g><title>kernel::model::entry::Entry::scope (13 samples, 1.02%)</title><rect x="91.7582%" y="661" width="1.0204%" height="15" fill="rgb(244,186,22)" fg:x="1169" fg:w="13"/><text x="92.0082%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (13 samples, 1.02%)</title><rect x="91.7582%" y="645" width="1.0204%" height="15" fill="rgb(231,187,4)" fg:x="1169" fg:w="13"/><text x="92.0082%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.6217%" y="629" width="0.1570%" height="15" fill="rgb(252,66,47)" fg:x="1180" fg:w="2"/><text x="92.8717%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.6217%" y="613" width="0.1570%" height="15" fill="rgb(240,228,28)" fg:x="1180" fg:w="2"/><text x="92.8717%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7002%" y="597" width="0.0785%" height="15" fill="rgb(237,63,43)" fg:x="1181" fg:w="1"/><text x="92.9502%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7002%" y="581" width="0.0785%" height="15" fill="rgb(214,1,44)" fg:x="1181" fg:w="1"/><text x="92.9502%" y="591.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (14 samples, 1.10%)</title><rect x="91.7582%" y="693" width="1.0989%" height="15" fill="rgb(212,2,46)" fg:x="1169" fg:w="14"/><text x="92.0082%" y="703.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (1 samples, 0.08%)</title><rect x="92.7786%" y="677" width="0.0785%" height="15" fill="rgb(213,142,5)" fg:x="1182" fg:w="1"/><text x="93.0286%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="92.8571%" y="693" width="0.0785%" height="15" fill="rgb(229,135,1)" fg:x="1183" fg:w="1"/><text x="93.1071%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0926%" y="565" width="0.0785%" height="15" fill="rgb(252,98,38)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.0926%" y="549" width="0.0785%" height="15" fill="rgb(206,89,40)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.0926%" y="533" width="0.0785%" height="15" fill="rgb(219,73,36)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.0926%" y="517" width="0.0785%" height="15" fill="rgb(207,168,32)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.0926%" y="501" width="0.0785%" height="15" fill="rgb(215,113,21)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.0926%" y="485" width="0.0785%" height="15" fill="rgb(217,144,43)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.0926%" y="469" width="0.0785%" height="15" fill="rgb(249,48,50)" fg:x="1186" fg:w="1"/><text x="93.3426%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="93.2496%" y="533" width="0.0785%" height="15" fill="rgb(242,1,26)" fg:x="1188" fg:w="1"/><text x="93.4996%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.2496%" y="517" width="0.0785%" height="15" fill="rgb(231,167,42)" fg:x="1188" fg:w="1"/><text x="93.4996%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.2496%" y="501" width="0.0785%" height="15" fill="rgb(242,177,45)" fg:x="1188" fg:w="1"/><text x="93.4996%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3281%" y="517" width="0.0785%" height="15" fill="rgb(232,121,42)" fg:x="1189" fg:w="1"/><text x="93.5781%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3281%" y="501" width="0.0785%" height="15" fill="rgb(205,8,42)" fg:x="1189" fg:w="1"/><text x="93.5781%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.3281%" y="485" width="0.0785%" height="15" fill="rgb(238,199,24)" fg:x="1189" fg:w="1"/><text x="93.5781%" y="495.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="93.4066%" y="517" width="0.0785%" height="15" fill="rgb(228,112,2)" fg:x="1190" fg:w="1"/><text x="93.6566%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="93.4851%" y="501" width="0.0785%" height="15" fill="rgb(215,115,33)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="93.4851%" y="485" width="0.0785%" height="15" fill="rgb(230,209,34)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.4851%" y="469" width="0.0785%" height="15" fill="rgb(246,76,12)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="93.4851%" y="453" width="0.0785%" height="15" fill="rgb(240,110,9)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="93.4851%" y="437" width="0.0785%" height="15" fill="rgb(224,94,46)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.4851%" y="421" width="0.0785%" height="15" fill="rgb(247,150,22)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.4851%" y="405" width="0.0785%" height="15" fill="rgb(249,85,13)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="93.4851%" y="389" width="0.0785%" height="15" fill="rgb(208,77,41)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.4851%" y="373" width="0.0785%" height="15" fill="rgb(240,42,44)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.4851%" y="357" width="0.0785%" height="15" fill="rgb(222,10,51)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.4851%" y="341" width="0.0785%" height="15" fill="rgb(208,146,53)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4851%" y="325" width="0.0785%" height="15" fill="rgb(236,162,23)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4851%" y="309" width="0.0785%" height="15" fill="rgb(218,66,21)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.4851%" y="293" width="0.0785%" height="15" fill="rgb(233,6,47)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.4851%" y="277" width="0.0785%" height="15" fill="rgb(236,59,51)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.4851%" y="261" width="0.0785%" height="15" fill="rgb(242,12,46)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.4851%" y="245" width="0.0785%" height="15" fill="rgb(243,142,19)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4851%" y="229" width="0.0785%" height="15" fill="rgb(217,28,17)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.4851%" y="213" width="0.0785%" height="15" fill="rgb(228,2,27)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.4851%" y="197" width="0.0785%" height="15" fill="rgb(214,221,4)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.4851%" y="181" width="0.0785%" height="15" fill="rgb(224,69,26)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.4851%" y="165" width="0.0785%" height="15" fill="rgb(219,70,4)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.4851%" y="149" width="0.0785%" height="15" fill="rgb(218,157,39)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.4851%" y="133" width="0.0785%" height="15" fill="rgb(238,36,28)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="143.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.4851%" y="117" width="0.0785%" height="15" fill="rgb(232,29,0)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="127.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.4851%" y="101" width="0.0785%" height="15" fill="rgb(243,138,46)" fg:x="1191" fg:w="1"/><text x="93.7351%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6421%" y="213" width="0.0785%" height="15" fill="rgb(232,186,41)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.6421%" y="197" width="0.0785%" height="15" fill="rgb(252,166,17)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.6421%" y="181" width="0.0785%" height="15" fill="rgb(228,179,12)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.6421%" y="165" width="0.0785%" height="15" fill="rgb(254,205,53)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.6421%" y="149" width="0.0785%" height="15" fill="rgb(224,163,47)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6421%" y="133" width="0.0785%" height="15" fill="rgb(208,43,47)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.6421%" y="117" width="0.0785%" height="15" fill="rgb(224,198,38)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.6421%" y="101" width="0.0785%" height="15" fill="rgb(234,12,40)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.6421%" y="85" width="0.0785%" height="15" fill="rgb(237,212,39)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.6421%" y="69" width="0.0785%" height="15" fill="rgb(253,2,33)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.6421%" y="53" width="0.0785%" height="15" fill="rgb(251,29,16)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.6421%" y="37" width="0.0785%" height="15" fill="rgb(214,38,29)" fg:x="1193" fg:w="1"/><text x="93.8921%" y="47.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6421%" y="293" width="0.1570%" height="15" fill="rgb(226,226,29)" fg:x="1193" fg:w="2"/><text x="93.8921%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6421%" y="277" width="0.1570%" height="15" fill="rgb(236,79,42)" fg:x="1193" fg:w="2"/><text x="93.8921%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6421%" y="261" width="0.1570%" height="15" fill="rgb(222,12,36)" fg:x="1193" fg:w="2"/><text x="93.8921%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6421%" y="245" width="0.1570%" height="15" fill="rgb(232,123,44)" fg:x="1193" fg:w="2"/><text x="93.8921%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="93.6421%" y="229" width="0.1570%" height="15" fill="rgb(234,93,50)" fg:x="1193" fg:w="2"/><text x="93.8921%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7206%" y="213" width="0.0785%" height="15" fill="rgb(210,86,49)" fg:x="1194" fg:w="1"/><text x="93.9706%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="93.6421%" y="341" width="0.2355%" height="15" fill="rgb(224,91,54)" fg:x="1193" fg:w="3"/><text x="93.8921%" y="351.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="93.6421%" y="325" width="0.2355%" height="15" fill="rgb(239,169,9)" fg:x="1193" fg:w="3"/><text x="93.8921%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="93.6421%" y="309" width="0.2355%" height="15" fill="rgb(238,29,17)" fg:x="1193" fg:w="3"/><text x="93.8921%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7991%" y="293" width="0.0785%" height="15" fill="rgb(227,160,22)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7991%" y="277" width="0.0785%" height="15" fill="rgb(231,129,52)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.7991%" y="261" width="0.0785%" height="15" fill="rgb(241,184,9)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7991%" y="245" width="0.0785%" height="15" fill="rgb(217,43,48)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.7991%" y="229" width="0.0785%" height="15" fill="rgb(213,49,1)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.7991%" y="213" width="0.0785%" height="15" fill="rgb(223,79,39)" fg:x="1195" fg:w="1"/><text x="94.0491%" y="223.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (5 samples, 0.39%)</title><rect x="93.6421%" y="373" width="0.3925%" height="15" fill="rgb(228,227,46)" fg:x="1193" fg:w="5"/><text x="93.8921%" y="383.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.39%)</title><rect x="93.6421%" y="357" width="0.3925%" height="15" fill="rgb(245,89,41)" fg:x="1193" fg:w="5"/><text x="93.8921%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="93.8776%" y="341" width="0.1570%" height="15" fill="rgb(253,83,21)" fg:x="1196" fg:w="2"/><text x="94.1276%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="93.8776%" y="325" width="0.1570%" height="15" fill="rgb(229,116,51)" fg:x="1196" fg:w="2"/><text x="94.1276%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="93.8776%" y="309" width="0.1570%" height="15" fill="rgb(246,67,26)" fg:x="1196" fg:w="2"/><text x="94.1276%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9560%" y="293" width="0.0785%" height="15" fill="rgb(250,117,20)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9560%" y="277" width="0.0785%" height="15" fill="rgb(207,88,17)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9560%" y="261" width="0.0785%" height="15" fill="rgb(212,98,36)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9560%" y="245" width="0.0785%" height="15" fill="rgb(221,72,6)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.9560%" y="229" width="0.0785%" height="15" fill="rgb(235,129,19)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9560%" y="213" width="0.0785%" height="15" fill="rgb(237,200,6)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9560%" y="197" width="0.0785%" height="15" fill="rgb(239,69,54)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9560%" y="181" width="0.0785%" height="15" fill="rgb(214,68,45)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.9560%" y="165" width="0.0785%" height="15" fill="rgb(254,160,8)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.9560%" y="149" width="0.0785%" height="15" fill="rgb(215,226,31)" fg:x="1197" fg:w="1"/><text x="94.2060%" y="159.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="94.1130%" y="245" width="0.0785%" height="15" fill="rgb(253,6,35)" fg:x="1199" fg:w="1"/><text x="94.3630%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.1130%" y="229" width="0.0785%" height="15" fill="rgb(219,96,42)" fg:x="1199" fg:w="1"/><text x="94.3630%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.1915%" y="181" width="0.0785%" height="15" fill="rgb(207,170,13)" fg:x="1200" fg:w="1"/><text x="94.4415%" y="191.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.31%)</title><rect x="94.0345%" y="357" width="0.3140%" height="15" fill="rgb(239,101,5)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="94.0345%" y="341" width="0.3140%" height="15" fill="rgb(228,183,34)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="94.0345%" y="325" width="0.3140%" height="15" fill="rgb(205,28,31)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="94.0345%" y="309" width="0.3140%" height="15" fill="rgb(214,118,50)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="94.0345%" y="293" width="0.3140%" height="15" fill="rgb(213,108,51)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="94.0345%" y="277" width="0.3140%" height="15" fill="rgb(238,56,37)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="94.0345%" y="261" width="0.3140%" height="15" fill="rgb(214,136,28)" fg:x="1198" fg:w="4"/><text x="94.2845%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.1915%" y="245" width="0.1570%" height="15" fill="rgb(221,201,54)" fg:x="1200" fg:w="2"/><text x="94.4415%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.1915%" y="229" width="0.1570%" height="15" fill="rgb(228,216,39)" fg:x="1200" fg:w="2"/><text x="94.4415%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.1915%" y="213" width="0.1570%" height="15" fill="rgb(207,229,49)" fg:x="1200" fg:w="2"/><text x="94.4415%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="94.1915%" y="197" width="0.1570%" height="15" fill="rgb(224,23,43)" fg:x="1200" fg:w="2"/><text x="94.4415%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2700%" y="181" width="0.0785%" height="15" fill="rgb(247,97,18)" fg:x="1201" fg:w="1"/><text x="94.5200%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.2700%" y="165" width="0.0785%" height="15" fill="rgb(232,53,32)" fg:x="1201" fg:w="1"/><text x="94.5200%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="94.2700%" y="149" width="0.0785%" height="15" fill="rgb(247,38,23)" fg:x="1201" fg:w="1"/><text x="94.5200%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3485%" y="277" width="0.0785%" height="15" fill="rgb(228,101,52)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3485%" y="261" width="0.0785%" height="15" fill="rgb(231,45,36)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3485%" y="245" width="0.0785%" height="15" fill="rgb(221,183,50)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3485%" y="229" width="0.0785%" height="15" fill="rgb(251,132,12)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3485%" y="213" width="0.0785%" height="15" fill="rgb(252,50,16)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3485%" y="197" width="0.0785%" height="15" fill="rgb(224,60,15)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="94.3485%" y="181" width="0.0785%" height="15" fill="rgb(254,2,34)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3485%" y="165" width="0.0785%" height="15" fill="rgb(232,154,8)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3485%" y="149" width="0.0785%" height="15" fill="rgb(235,190,52)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="94.3485%" y="133" width="0.0785%" height="15" fill="rgb(213,218,38)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.3485%" y="117" width="0.0785%" height="15" fill="rgb(237,50,37)" fg:x="1202" fg:w="1"/><text x="94.5985%" y="127.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.3485%" y="325" width="0.1570%" height="15" fill="rgb(235,51,35)" fg:x="1202" fg:w="2"/><text x="94.5985%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.3485%" y="309" width="0.1570%" height="15" fill="rgb(244,40,52)" fg:x="1202" fg:w="2"/><text x="94.5985%" y="319.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.3485%" y="293" width="0.1570%" height="15" fill="rgb(217,225,45)" fg:x="1202" fg:w="2"/><text x="94.5985%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4270%" y="277" width="0.0785%" height="15" fill="rgb(247,191,36)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4270%" y="261" width="0.0785%" height="15" fill="rgb(251,144,31)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4270%" y="245" width="0.0785%" height="15" fill="rgb(227,155,41)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4270%" y="229" width="0.0785%" height="15" fill="rgb(236,121,36)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4270%" y="213" width="0.0785%" height="15" fill="rgb(221,128,28)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4270%" y="197" width="0.0785%" height="15" fill="rgb(249,67,50)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4270%" y="181" width="0.0785%" height="15" fill="rgb(241,126,38)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4270%" y="165" width="0.0785%" height="15" fill="rgb(239,33,14)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="94.4270%" y="149" width="0.0785%" height="15" fill="rgb(207,221,54)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.4270%" y="133" width="0.0785%" height="15" fill="rgb(242,138,43)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="94.4270%" y="117" width="0.0785%" height="15" fill="rgb(231,118,19)" fg:x="1203" fg:w="1"/><text x="94.6770%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (7 samples, 0.55%)</title><rect x="94.0345%" y="373" width="0.5495%" height="15" fill="rgb(214,128,54)" fg:x="1198" fg:w="7"/><text x="94.2845%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="94.3485%" y="357" width="0.2355%" height="15" fill="rgb(236,136,6)" fg:x="1202" fg:w="3"/><text x="94.5985%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="94.3485%" y="341" width="0.2355%" height="15" fill="rgb(247,30,38)" fg:x="1202" fg:w="3"/><text x="94.5985%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5055%" y="325" width="0.0785%" height="15" fill="rgb(249,189,40)" fg:x="1204" fg:w="1"/><text x="94.7555%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5055%" y="309" width="0.0785%" height="15" fill="rgb(247,179,7)" fg:x="1204" fg:w="1"/><text x="94.7555%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.5840%" y="373" width="0.0785%" height="15" fill="rgb(239,46,52)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="383.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.5840%" y="357" width="0.0785%" height="15" fill="rgb(225,28,52)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="367.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.5840%" y="341" width="0.0785%" height="15" fill="rgb(217,208,44)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5840%" y="325" width="0.0785%" height="15" fill="rgb(224,11,34)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5840%" y="309" width="0.0785%" height="15" fill="rgb(205,134,17)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5840%" y="293" width="0.0785%" height="15" fill="rgb(237,125,9)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5840%" y="277" width="0.0785%" height="15" fill="rgb(208,139,47)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.5840%" y="261" width="0.0785%" height="15" fill="rgb(242,5,5)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5840%" y="245" width="0.0785%" height="15" fill="rgb(218,78,2)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5840%" y="229" width="0.0785%" height="15" fill="rgb(217,75,16)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5840%" y="213" width="0.0785%" height="15" fill="rgb(212,56,17)" fg:x="1205" fg:w="1"/><text x="94.8340%" y="223.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.41%)</title><rect x="93.3281%" y="533" width="1.4129%" height="15" fill="rgb(228,61,29)" fg:x="1189" fg:w="18"/><text x="93.5781%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.26%)</title><rect x="93.4851%" y="517" width="1.2559%" height="15" fill="rgb(247,202,38)" fg:x="1191" fg:w="16"/><text x="93.7351%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.18%)</title><rect x="93.5636%" y="501" width="1.1774%" height="15" fill="rgb(211,216,43)" fg:x="1192" fg:w="15"/><text x="93.8136%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.18%)</title><rect x="93.5636%" y="485" width="1.1774%" height="15" fill="rgb(220,7,49)" fg:x="1192" fg:w="15"/><text x="93.8136%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (14 samples, 1.10%)</title><rect x="93.6421%" y="469" width="1.0989%" height="15" fill="rgb(219,158,7)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.10%)</title><rect x="93.6421%" y="453" width="1.0989%" height="15" fill="rgb(206,127,9)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.10%)</title><rect x="93.6421%" y="437" width="1.0989%" height="15" fill="rgb(206,103,43)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.10%)</title><rect x="93.6421%" y="421" width="1.0989%" height="15" fill="rgb(240,108,41)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.10%)</title><rect x="93.6421%" y="405" width="1.0989%" height="15" fill="rgb(252,212,6)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="415.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (14 samples, 1.10%)</title><rect x="93.6421%" y="389" width="1.0989%" height="15" fill="rgb(248,105,31)" fg:x="1193" fg:w="14"/><text x="93.8921%" y="399.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="94.6625%" y="373" width="0.0785%" height="15" fill="rgb(241,123,4)" fg:x="1206" fg:w="1"/><text x="94.9125%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6625%" y="357" width="0.0785%" height="15" fill="rgb(223,74,37)" fg:x="1206" fg:w="1"/><text x="94.9125%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="94.6625%" y="341" width="0.0785%" height="15" fill="rgb(251,219,28)" fg:x="1206" fg:w="1"/><text x="94.9125%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="94.6625%" y="325" width="0.0785%" height="15" fill="rgb(218,36,31)" fg:x="1206" fg:w="1"/><text x="94.9125%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6625%" y="309" width="0.0785%" height="15" fill="rgb(229,40,15)" fg:x="1206" fg:w="1"/><text x="94.9125%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="94.7410%" y="485" width="0.0785%" height="15" fill="rgb(208,138,37)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.7410%" y="469" width="0.0785%" height="15" fill="rgb(208,40,52)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.7410%" y="453" width="0.0785%" height="15" fill="rgb(246,181,48)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.7410%" y="437" width="0.0785%" height="15" fill="rgb(253,178,36)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7410%" y="421" width="0.0785%" height="15" fill="rgb(210,170,6)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7410%" y="405" width="0.0785%" height="15" fill="rgb(243,62,22)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7410%" y="389" width="0.0785%" height="15" fill="rgb(213,145,26)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7410%" y="373" width="0.0785%" height="15" fill="rgb(237,177,23)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.7410%" y="357" width="0.0785%" height="15" fill="rgb(252,5,24)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7410%" y="341" width="0.0785%" height="15" fill="rgb(230,108,54)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7410%" y="325" width="0.0785%" height="15" fill="rgb(252,192,41)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7410%" y="309" width="0.0785%" height="15" fill="rgb(218,125,20)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.7410%" y="293" width="0.0785%" height="15" fill="rgb(230,223,15)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.7410%" y="277" width="0.0785%" height="15" fill="rgb(239,99,47)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="287.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="94.7410%" y="261" width="0.0785%" height="15" fill="rgb(222,214,23)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="271.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.7410%" y="245" width="0.0785%" height="15" fill="rgb(250,98,43)" fg:x="1207" fg:w="1"/><text x="94.9910%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (22 samples, 1.73%)</title><rect x="93.1711%" y="565" width="1.7268%" height="15" fill="rgb(226,140,11)" fg:x="1187" fg:w="22"/><text x="93.4211%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (22 samples, 1.73%)</title><rect x="93.1711%" y="549" width="1.7268%" height="15" fill="rgb(239,2,22)" fg:x="1187" fg:w="22"/><text x="93.4211%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="94.7410%" y="533" width="0.1570%" height="15" fill="rgb(209,106,26)" fg:x="1207" fg:w="2"/><text x="94.9910%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="94.7410%" y="517" width="0.1570%" height="15" fill="rgb(209,135,11)" fg:x="1207" fg:w="2"/><text x="94.9910%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="94.7410%" y="501" width="0.1570%" height="15" fill="rgb(241,58,6)" fg:x="1207" fg:w="2"/><text x="94.9910%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="94.8195%" y="485" width="0.0785%" height="15" fill="rgb(214,78,1)" fg:x="1208" fg:w="1"/><text x="95.0695%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="94.8195%" y="469" width="0.0785%" height="15" fill="rgb(229,135,33)" fg:x="1208" fg:w="1"/><text x="95.0695%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8980%" y="549" width="0.0785%" height="15" fill="rgb(245,87,50)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.8980%" y="533" width="0.0785%" height="15" fill="rgb(222,222,8)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.8980%" y="517" width="0.0785%" height="15" fill="rgb(214,97,50)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.8980%" y="501" width="0.0785%" height="15" fill="rgb(244,161,51)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.8980%" y="485" width="0.0785%" height="15" fill="rgb(225,17,4)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8980%" y="469" width="0.0785%" height="15" fill="rgb(238,10,13)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.8980%" y="453" width="0.0785%" height="15" fill="rgb(239,169,14)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.8980%" y="437" width="0.0785%" height="15" fill="rgb(213,105,25)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.8980%" y="421" width="0.0785%" height="15" fill="rgb(233,4,17)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.8980%" y="405" width="0.0785%" height="15" fill="rgb(212,5,35)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.8980%" y="389" width="0.0785%" height="15" fill="rgb(216,3,14)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8980%" y="373" width="0.0785%" height="15" fill="rgb(240,105,33)" fg:x="1209" fg:w="1"/><text x="95.1480%" y="383.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="94.9765%" y="533" width="0.0785%" height="15" fill="rgb(216,73,0)" fg:x="1210" fg:w="1"/><text x="95.2265%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.9765%" y="517" width="0.0785%" height="15" fill="rgb(217,153,48)" fg:x="1210" fg:w="1"/><text x="95.2265%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.9765%" y="501" width="0.0785%" height="15" fill="rgb(218,180,8)" fg:x="1210" fg:w="1"/><text x="95.2265%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0549%" y="501" width="0.0785%" height="15" fill="rgb(252,168,2)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0549%" y="485" width="0.0785%" height="15" fill="rgb(224,116,33)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0549%" y="469" width="0.0785%" height="15" fill="rgb(229,205,17)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0549%" y="453" width="0.0785%" height="15" fill="rgb(234,1,41)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0549%" y="437" width="0.0785%" height="15" fill="rgb(244,185,8)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0549%" y="421" width="0.0785%" height="15" fill="rgb(248,51,21)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0549%" y="405" width="0.0785%" height="15" fill="rgb(248,157,31)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0549%" y="389" width="0.0785%" height="15" fill="rgb(210,34,47)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0549%" y="373" width="0.0785%" height="15" fill="rgb(227,139,53)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0549%" y="357" width="0.0785%" height="15" fill="rgb(232,211,37)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0549%" y="341" width="0.0785%" height="15" fill="rgb(236,133,10)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0549%" y="325" width="0.0785%" height="15" fill="rgb(243,202,25)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.0549%" y="309" width="0.0785%" height="15" fill="rgb(224,59,9)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.0549%" y="293" width="0.0785%" height="15" fill="rgb(206,146,16)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.0549%" y="277" width="0.0785%" height="15" fill="rgb(220,47,2)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.0549%" y="261" width="0.0785%" height="15" fill="rgb(225,124,51)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0549%" y="245" width="0.0785%" height="15" fill="rgb(241,220,50)" fg:x="1211" fg:w="1"/><text x="95.3049%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="94.9765%" y="549" width="0.2355%" height="15" fill="rgb(232,168,5)" fg:x="1210" fg:w="3"/><text x="95.2265%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.0549%" y="533" width="0.1570%" height="15" fill="rgb(243,90,22)" fg:x="1211" fg:w="2"/><text x="95.3049%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.0549%" y="517" width="0.1570%" height="15" fill="rgb(223,153,32)" fg:x="1211" fg:w="2"/><text x="95.3049%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.1334%" y="501" width="0.0785%" height="15" fill="rgb(243,124,20)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.1334%" y="485" width="0.0785%" height="15" fill="rgb(246,168,39)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.1334%" y="469" width="0.0785%" height="15" fill="rgb(222,165,54)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.1334%" y="453" width="0.0785%" height="15" fill="rgb(251,142,27)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.1334%" y="437" width="0.0785%" height="15" fill="rgb(207,168,50)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.1334%" y="421" width="0.0785%" height="15" fill="rgb(250,139,25)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.1334%" y="405" width="0.0785%" height="15" fill="rgb(214,194,48)" fg:x="1212" fg:w="1"/><text x="95.3834%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.2119%" y="501" width="0.0785%" height="15" fill="rgb(227,138,47)" fg:x="1213" fg:w="1"/><text x="95.4619%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.2119%" y="485" width="0.0785%" height="15" fill="rgb(250,162,5)" fg:x="1213" fg:w="1"/><text x="95.4619%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.2119%" y="469" width="0.0785%" height="15" fill="rgb(229,74,25)" fg:x="1213" fg:w="1"/><text x="95.4619%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.2119%" y="453" width="0.0785%" height="15" fill="rgb(221,124,34)" fg:x="1213" fg:w="1"/><text x="95.4619%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.2119%" y="437" width="0.0785%" height="15" fill="rgb(225,94,25)" fg:x="1213" fg:w="1"/><text x="95.4619%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (8 samples, 0.63%)</title><rect x="94.8980%" y="565" width="0.6279%" height="15" fill="rgb(210,100,12)" fg:x="1209" fg:w="8"/><text x="95.1480%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="95.2119%" y="549" width="0.3140%" height="15" fill="rgb(206,62,48)" fg:x="1213" fg:w="4"/><text x="95.4619%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="95.2119%" y="533" width="0.3140%" height="15" fill="rgb(222,181,9)" fg:x="1213" fg:w="4"/><text x="95.4619%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="95.2119%" y="517" width="0.3140%" height="15" fill="rgb(248,42,38)" fg:x="1213" fg:w="4"/><text x="95.4619%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.2904%" y="501" width="0.2355%" height="15" fill="rgb(213,40,6)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.2904%" y="485" width="0.2355%" height="15" fill="rgb(211,108,15)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="95.2904%" y="469" width="0.2355%" height="15" fill="rgb(249,62,9)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.2904%" y="453" width="0.2355%" height="15" fill="rgb(233,26,54)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="95.2904%" y="437" width="0.2355%" height="15" fill="rgb(210,175,26)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="95.2904%" y="421" width="0.2355%" height="15" fill="rgb(210,43,33)" fg:x="1214" fg:w="3"/><text x="95.5404%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3689%" y="405" width="0.1570%" height="15" fill="rgb(224,46,17)" fg:x="1215" fg:w="2"/><text x="95.6189%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.3689%" y="389" width="0.1570%" height="15" fill="rgb(254,24,38)" fg:x="1215" fg:w="2"/><text x="95.6189%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.3689%" y="373" width="0.1570%" height="15" fill="rgb(248,32,0)" fg:x="1215" fg:w="2"/><text x="95.6189%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.4474%" y="357" width="0.0785%" height="15" fill="rgb(224,37,41)" fg:x="1216" fg:w="1"/><text x="95.6974%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.4474%" y="341" width="0.0785%" height="15" fill="rgb(252,70,22)" fg:x="1216" fg:w="1"/><text x="95.6974%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.4474%" y="325" width="0.0785%" height="15" fill="rgb(241,123,50)" fg:x="1216" fg:w="1"/><text x="95.6974%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.4474%" y="309" width="0.0785%" height="15" fill="rgb(246,138,33)" fg:x="1216" fg:w="1"/><text x="95.6974%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="95.5259%" y="565" width="0.0785%" height="15" fill="rgb(218,39,32)" fg:x="1217" fg:w="1"/><text x="95.7759%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.5259%" y="549" width="0.0785%" height="15" fill="rgb(241,229,10)" fg:x="1217" fg:w="1"/><text x="95.7759%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="95.6044%" y="549" width="0.0785%" height="15" fill="rgb(212,160,10)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="95.6044%" y="533" width="0.0785%" height="15" fill="rgb(227,48,51)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.6044%" y="517" width="0.0785%" height="15" fill="rgb(238,159,21)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.6044%" y="501" width="0.0785%" height="15" fill="rgb(216,1,10)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.6044%" y="485" width="0.0785%" height="15" fill="rgb(209,228,25)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6044%" y="469" width="0.0785%" height="15" fill="rgb(234,160,10)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6044%" y="453" width="0.0785%" height="15" fill="rgb(212,66,25)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6044%" y="437" width="0.0785%" height="15" fill="rgb(254,121,18)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6044%" y="421" width="0.0785%" height="15" fill="rgb(219,127,1)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.6044%" y="405" width="0.0785%" height="15" fill="rgb(219,224,42)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6044%" y="389" width="0.0785%" height="15" fill="rgb(253,130,22)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6044%" y="373" width="0.0785%" height="15" fill="rgb(253,39,28)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.6044%" y="357" width="0.0785%" height="15" fill="rgb(231,126,37)" fg:x="1218" fg:w="1"/><text x="95.8544%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6829%" y="533" width="0.0785%" height="15" fill="rgb(251,145,14)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6829%" y="517" width="0.0785%" height="15" fill="rgb(229,164,30)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.6829%" y="501" width="0.0785%" height="15" fill="rgb(233,227,54)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.6829%" y="485" width="0.0785%" height="15" fill="rgb(240,94,22)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.6829%" y="469" width="0.0785%" height="15" fill="rgb(217,56,16)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.6829%" y="453" width="0.0785%" height="15" fill="rgb(229,133,38)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6829%" y="437" width="0.0785%" height="15" fill="rgb(225,139,35)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.6829%" y="421" width="0.0785%" height="15" fill="rgb(223,100,16)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.6829%" y="405" width="0.0785%" height="15" fill="rgb(207,43,50)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.6829%" y="389" width="0.0785%" height="15" fill="rgb(237,221,9)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.6829%" y="373" width="0.0785%" height="15" fill="rgb(236,134,24)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.6829%" y="357" width="0.0785%" height="15" fill="rgb(222,173,4)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6829%" y="341" width="0.0785%" height="15" fill="rgb(234,144,52)" fg:x="1219" fg:w="1"/><text x="95.9329%" y="351.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7614%" y="517" width="0.0785%" height="15" fill="rgb(223,41,7)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7614%" y="501" width="0.0785%" height="15" fill="rgb(226,143,9)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7614%" y="485" width="0.0785%" height="15" fill="rgb(234,43,37)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.7614%" y="469" width="0.0785%" height="15" fill="rgb(224,188,11)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7614%" y="453" width="0.0785%" height="15" fill="rgb(233,113,28)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.7614%" y="437" width="0.0785%" height="15" fill="rgb(215,16,1)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.7614%" y="421" width="0.0785%" height="15" fill="rgb(238,74,38)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.7614%" y="405" width="0.0785%" height="15" fill="rgb(221,66,35)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.7614%" y="389" width="0.0785%" height="15" fill="rgb(251,225,2)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7614%" y="373" width="0.0785%" height="15" fill="rgb(240,169,18)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.7614%" y="357" width="0.0785%" height="15" fill="rgb(243,130,50)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.7614%" y="341" width="0.0785%" height="15" fill="rgb(228,75,13)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.7614%" y="325" width="0.0785%" height="15" fill="rgb(252,95,35)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.7614%" y="309" width="0.0785%" height="15" fill="rgb(222,180,54)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.7614%" y="293" width="0.0785%" height="15" fill="rgb(250,110,34)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7614%" y="277" width="0.0785%" height="15" fill="rgb(208,100,21)" fg:x="1220" fg:w="1"/><text x="96.0114%" y="287.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (4 samples, 0.31%)</title><rect x="95.6829%" y="549" width="0.3140%" height="15" fill="rgb(209,123,47)" fg:x="1219" fg:w="4"/><text x="95.9329%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.7614%" y="533" width="0.2355%" height="15" fill="rgb(237,147,9)" fg:x="1220" fg:w="3"/><text x="96.0114%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.8399%" y="517" width="0.1570%" height="15" fill="rgb(228,206,23)" fg:x="1221" fg:w="2"/><text x="96.0899%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8399%" y="501" width="0.1570%" height="15" fill="rgb(217,174,46)" fg:x="1221" fg:w="2"/><text x="96.0899%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="95.8399%" y="485" width="0.1570%" height="15" fill="rgb(231,126,21)" fg:x="1221" fg:w="2"/><text x="96.0899%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="95.8399%" y="469" width="0.1570%" height="15" fill="rgb(245,26,1)" fg:x="1221" fg:w="2"/><text x="96.0899%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="95.8399%" y="453" width="0.1570%" height="15" fill="rgb(224,138,39)" fg:x="1221" fg:w="2"/><text x="96.0899%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.9184%" y="437" width="0.0785%" height="15" fill="rgb(208,97,3)" fg:x="1222" fg:w="1"/><text x="96.1684%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.9184%" y="421" width="0.0785%" height="15" fill="rgb(222,77,29)" fg:x="1222" fg:w="1"/><text x="96.1684%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.9184%" y="405" width="0.0785%" height="15" fill="rgb(243,188,36)" fg:x="1222" fg:w="1"/><text x="96.1684%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9969%" y="517" width="0.0785%" height="15" fill="rgb(218,214,3)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9969%" y="501" width="0.0785%" height="15" fill="rgb(211,183,45)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.9969%" y="485" width="0.0785%" height="15" fill="rgb(230,218,25)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.9969%" y="469" width="0.0785%" height="15" fill="rgb(233,86,6)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.9969%" y="453" width="0.0785%" height="15" fill="rgb(220,59,24)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.9969%" y="437" width="0.0785%" height="15" fill="rgb(227,60,1)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9969%" y="421" width="0.0785%" height="15" fill="rgb(216,212,54)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.9969%" y="405" width="0.0785%" height="15" fill="rgb(227,81,54)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.9969%" y="389" width="0.0785%" height="15" fill="rgb(206,204,43)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.9969%" y="373" width="0.0785%" height="15" fill="rgb(219,29,26)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.9969%" y="357" width="0.0785%" height="15" fill="rgb(252,40,36)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.9969%" y="341" width="0.0785%" height="15" fill="rgb(224,205,39)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9969%" y="325" width="0.0785%" height="15" fill="rgb(222,13,21)" fg:x="1223" fg:w="1"/><text x="96.2469%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.0754%" y="517" width="0.0785%" height="15" fill="rgb(243,139,6)" fg:x="1224" fg:w="1"/><text x="96.3254%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (3 samples, 0.24%)</title><rect x="95.9969%" y="549" width="0.2355%" height="15" fill="rgb(237,101,11)" fg:x="1223" fg:w="3"/><text x="96.2469%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="95.9969%" y="533" width="0.2355%" height="15" fill="rgb(254,49,28)" fg:x="1223" fg:w="3"/><text x="96.2469%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1538%" y="517" width="0.0785%" height="15" fill="rgb(223,41,21)" fg:x="1225" fg:w="1"/><text x="96.4038%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.1538%" y="501" width="0.0785%" height="15" fill="rgb(225,103,29)" fg:x="1225" fg:w="1"/><text x="96.4038%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.1538%" y="485" width="0.0785%" height="15" fill="rgb(244,82,43)" fg:x="1225" fg:w="1"/><text x="96.4038%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.1538%" y="469" width="0.0785%" height="15" fill="rgb(217,39,3)" fg:x="1225" fg:w="1"/><text x="96.4038%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="96.2323%" y="533" width="0.0785%" height="15" fill="rgb(239,128,25)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.2323%" y="517" width="0.0785%" height="15" fill="rgb(210,192,37)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="96.2323%" y="501" width="0.0785%" height="15" fill="rgb(219,98,18)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="96.2323%" y="485" width="0.0785%" height="15" fill="rgb(224,228,38)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="96.2323%" y="469" width="0.0785%" height="15" fill="rgb(241,129,43)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="96.2323%" y="453" width="0.0785%" height="15" fill="rgb(223,8,51)" fg:x="1226" fg:w="1"/><text x="96.4823%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.3108%" y="501" width="0.0785%" height="15" fill="rgb(233,76,24)" fg:x="1227" fg:w="1"/><text x="96.5608%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="96.3108%" y="485" width="0.0785%" height="15" fill="rgb(219,115,10)" fg:x="1227" fg:w="1"/><text x="96.5608%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.3893%" y="405" width="0.0785%" height="15" fill="rgb(222,137,12)" fg:x="1228" fg:w="1"/><text x="96.6393%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.3893%" y="453" width="0.1570%" height="15" fill="rgb(216,192,16)" fg:x="1228" fg:w="2"/><text x="96.6393%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.3893%" y="437" width="0.1570%" height="15" fill="rgb(247,6,27)" fg:x="1228" fg:w="2"/><text x="96.6393%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.3893%" y="421" width="0.1570%" height="15" fill="rgb(254,39,44)" fg:x="1228" fg:w="2"/><text x="96.6393%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4678%" y="405" width="0.0785%" height="15" fill="rgb(251,116,35)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.4678%" y="389" width="0.0785%" height="15" fill="rgb(208,61,44)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.4678%" y="373" width="0.0785%" height="15" fill="rgb(250,34,5)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.4678%" y="357" width="0.0785%" height="15" fill="rgb(241,40,15)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.4678%" y="341" width="0.0785%" height="15" fill="rgb(229,182,2)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4678%" y="325" width="0.0785%" height="15" fill="rgb(244,148,52)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.4678%" y="309" width="0.0785%" height="15" fill="rgb(225,211,4)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.4678%" y="293" width="0.0785%" height="15" fill="rgb(208,222,47)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.4678%" y="277" width="0.0785%" height="15" fill="rgb(233,162,0)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.4678%" y="261" width="0.0785%" height="15" fill="rgb(241,54,13)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.4678%" y="245" width="0.0785%" height="15" fill="rgb(213,89,18)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.4678%" y="229" width="0.0785%" height="15" fill="rgb(215,170,37)" fg:x="1229" fg:w="1"/><text x="96.7178%" y="239.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.47%)</title><rect x="96.2323%" y="549" width="0.4710%" height="15" fill="rgb(216,133,15)" fg:x="1226" fg:w="6"/><text x="96.4823%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.39%)</title><rect x="96.3108%" y="533" width="0.3925%" height="15" fill="rgb(230,42,19)" fg:x="1227" fg:w="5"/><text x="96.5608%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.39%)</title><rect x="96.3108%" y="517" width="0.3925%" height="15" fill="rgb(221,103,41)" fg:x="1227" fg:w="5"/><text x="96.5608%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.31%)</title><rect x="96.3893%" y="501" width="0.3140%" height="15" fill="rgb(220,142,31)" fg:x="1228" fg:w="4"/><text x="96.6393%" y="511.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.31%)</title><rect x="96.3893%" y="485" width="0.3140%" height="15" fill="rgb(239,218,4)" fg:x="1228" fg:w="4"/><text x="96.6393%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.31%)</title><rect x="96.3893%" y="469" width="0.3140%" height="15" fill="rgb(232,16,4)" fg:x="1228" fg:w="4"/><text x="96.6393%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.5463%" y="453" width="0.1570%" height="15" fill="rgb(226,213,25)" fg:x="1230" fg:w="2"/><text x="96.7963%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5463%" y="437" width="0.1570%" height="15" fill="rgb(235,135,19)" fg:x="1230" fg:w="2"/><text x="96.7963%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.5463%" y="421" width="0.1570%" height="15" fill="rgb(240,107,29)" fg:x="1230" fg:w="2"/><text x="96.7963%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.5463%" y="405" width="0.1570%" height="15" fill="rgb(206,164,44)" fg:x="1230" fg:w="2"/><text x="96.7963%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.6248%" y="389" width="0.0785%" height="15" fill="rgb(210,23,48)" fg:x="1231" fg:w="1"/><text x="96.8748%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (47 samples, 3.69%)</title><rect x="93.0926%" y="581" width="3.6892%" height="15" fill="rgb(212,138,25)" fg:x="1186" fg:w="47"/><text x="93.3426%" y="591.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (15 samples, 1.18%)</title><rect x="95.6044%" y="565" width="1.1774%" height="15" fill="rgb(224,152,3)" fg:x="1218" fg:w="15"/><text x="95.8544%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="96.7033%" y="549" width="0.0785%" height="15" fill="rgb(214,38,23)" fg:x="1232" fg:w="1"/><text x="96.9533%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.7033%" y="533" width="0.0785%" height="15" fill="rgb(215,161,10)" fg:x="1232" fg:w="1"/><text x="96.9533%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="96.7033%" y="517" width="0.0785%" height="15" fill="rgb(240,185,7)" fg:x="1232" fg:w="1"/><text x="96.9533%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (1 samples, 0.08%)</title><rect x="96.7818%" y="533" width="0.0785%" height="15" fill="rgb(244,104,25)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (1 samples, 0.08%)</title><rect x="96.7818%" y="517" width="0.0785%" height="15" fill="rgb(242,140,44)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="96.7818%" y="501" width="0.0785%" height="15" fill="rgb(245,30,19)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.7818%" y="485" width="0.0785%" height="15" fill="rgb(219,208,35)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7818%" y="469" width="0.0785%" height="15" fill="rgb(235,200,7)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7818%" y="453" width="0.0785%" height="15" fill="rgb(220,193,10)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.7818%" y="437" width="0.0785%" height="15" fill="rgb(212,216,39)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.7818%" y="421" width="0.0785%" height="15" fill="rgb(212,134,19)" fg:x="1233" fg:w="1"/><text x="97.0318%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8603%" y="437" width="0.0785%" height="15" fill="rgb(230,57,24)" fg:x="1234" fg:w="1"/><text x="97.1103%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.8603%" y="421" width="0.0785%" height="15" fill="rgb(238,209,37)" fg:x="1234" fg:w="1"/><text x="97.1103%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.8603%" y="405" width="0.0785%" height="15" fill="rgb(247,11,45)" fg:x="1234" fg:w="1"/><text x="97.1103%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.9388%" y="341" width="0.0785%" height="15" fill="rgb(222,126,6)" fg:x="1235" fg:w="1"/><text x="97.1888%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.9388%" y="325" width="0.0785%" height="15" fill="rgb(245,77,24)" fg:x="1235" fg:w="1"/><text x="97.1888%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.9388%" y="309" width="0.0785%" height="15" fill="rgb(227,14,24)" fg:x="1235" fg:w="1"/><text x="97.1888%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (4 samples, 0.31%)</title><rect x="96.7818%" y="565" width="0.3140%" height="15" fill="rgb(211,112,42)" fg:x="1233" fg:w="4"/><text x="97.0318%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (4 samples, 0.31%)</title><rect x="96.7818%" y="549" width="0.3140%" height="15" fill="rgb(230,103,42)" fg:x="1233" fg:w="4"/><text x="97.0318%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="96.8603%" y="533" width="0.2355%" height="15" fill="rgb(228,125,42)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="96.8603%" y="517" width="0.2355%" height="15" fill="rgb(243,33,6)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::name (3 samples, 0.24%)</title><rect x="96.8603%" y="501" width="0.2355%" height="15" fill="rgb(231,2,40)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="96.8603%" y="485" width="0.2355%" height="15" fill="rgb(224,200,53)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="495.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="96.8603%" y="469" width="0.2355%" height="15" fill="rgb(215,116,36)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.8603%" y="453" width="0.2355%" height="15" fill="rgb(240,23,51)" fg:x="1234" fg:w="3"/><text x="97.1103%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9388%" y="437" width="0.1570%" height="15" fill="rgb(221,72,5)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9388%" y="421" width="0.1570%" height="15" fill="rgb(245,142,9)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.9388%" y="405" width="0.1570%" height="15" fill="rgb(207,34,16)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9388%" y="389" width="0.1570%" height="15" fill="rgb(252,101,12)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="96.9388%" y="373" width="0.1570%" height="15" fill="rgb(239,89,37)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.9388%" y="357" width="0.1570%" height="15" fill="rgb(252,227,37)" fg:x="1235" fg:w="2"/><text x="97.1888%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0173%" y="341" width="0.0785%" height="15" fill="rgb(212,164,17)" fg:x="1236" fg:w="1"/><text x="97.2673%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0173%" y="325" width="0.0785%" height="15" fill="rgb(240,86,13)" fg:x="1236" fg:w="1"/><text x="97.2673%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0173%" y="309" width="0.0785%" height="15" fill="rgb(233,183,32)" fg:x="1236" fg:w="1"/><text x="97.2673%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.0958%" y="549" width="0.0785%" height="15" fill="rgb(205,201,38)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.0958%" y="533" width="0.0785%" height="15" fill="rgb(210,122,38)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.0958%" y="517" width="0.0785%" height="15" fill="rgb(241,174,26)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0958%" y="501" width="0.0785%" height="15" fill="rgb(219,89,7)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0958%" y="485" width="0.0785%" height="15" fill="rgb(246,9,24)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.0958%" y="469" width="0.0785%" height="15" fill="rgb(205,132,21)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0958%" y="453" width="0.0785%" height="15" fill="rgb(210,11,17)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.0958%" y="437" width="0.0785%" height="15" fill="rgb(226,138,14)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.0958%" y="421" width="0.0785%" height="15" fill="rgb(224,108,44)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.0958%" y="405" width="0.0785%" height="15" fill="rgb(247,114,36)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0958%" y="389" width="0.0785%" height="15" fill="rgb(231,183,14)" fg:x="1237" fg:w="1"/><text x="97.3458%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1743%" y="501" width="0.1570%" height="15" fill="rgb(218,168,4)" fg:x="1238" fg:w="2"/><text x="97.4243%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1743%" y="485" width="0.1570%" height="15" fill="rgb(210,8,3)" fg:x="1238" fg:w="2"/><text x="97.4243%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.1743%" y="469" width="0.1570%" height="15" fill="rgb(216,165,0)" fg:x="1238" fg:w="2"/><text x="97.4243%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2527%" y="453" width="0.0785%" height="15" fill="rgb(245,120,5)" fg:x="1239" fg:w="1"/><text x="97.5027%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.2527%" y="437" width="0.0785%" height="15" fill="rgb(249,121,32)" fg:x="1239" fg:w="1"/><text x="97.5027%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.2527%" y="421" width="0.0785%" height="15" fill="rgb(211,55,33)" fg:x="1239" fg:w="1"/><text x="97.5027%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.3312%" y="437" width="0.0785%" height="15" fill="rgb(254,46,35)" fg:x="1240" fg:w="1"/><text x="97.5812%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.3312%" y="421" width="0.0785%" height="15" fill="rgb(213,213,19)" fg:x="1240" fg:w="1"/><text x="97.5812%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (6 samples, 0.47%)</title><rect x="97.0958%" y="565" width="0.4710%" height="15" fill="rgb(207,152,44)" fg:x="1237" fg:w="6"/><text x="97.3458%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="97.1743%" y="549" width="0.3925%" height="15" fill="rgb(227,195,36)" fg:x="1238" fg:w="5"/><text x="97.4243%" y="559.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.39%)</title><rect x="97.1743%" y="533" width="0.3925%" height="15" fill="rgb(210,137,36)" fg:x="1238" fg:w="5"/><text x="97.4243%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="97.1743%" y="517" width="0.3925%" height="15" fill="rgb(253,47,47)" fg:x="1238" fg:w="5"/><text x="97.4243%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.3312%" y="501" width="0.2355%" height="15" fill="rgb(230,147,18)" fg:x="1240" fg:w="3"/><text x="97.5812%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.3312%" y="485" width="0.2355%" height="15" fill="rgb(247,33,49)" fg:x="1240" fg:w="3"/><text x="97.5812%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="97.3312%" y="469" width="0.2355%" height="15" fill="rgb(239,26,29)" fg:x="1240" fg:w="3"/><text x="97.5812%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="97.3312%" y="453" width="0.2355%" height="15" fill="rgb(245,145,52)" fg:x="1240" fg:w="3"/><text x="97.5812%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="97.4097%" y="437" width="0.1570%" height="15" fill="rgb(224,139,32)" fg:x="1241" fg:w="2"/><text x="97.6597%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.4097%" y="421" width="0.1570%" height="15" fill="rgb(238,202,19)" fg:x="1241" fg:w="2"/><text x="97.6597%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.4882%" y="405" width="0.0785%" height="15" fill="rgb(249,211,53)" fg:x="1242" fg:w="1"/><text x="97.7382%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.4882%" y="389" width="0.0785%" height="15" fill="rgb(237,229,33)" fg:x="1242" fg:w="1"/><text x="97.7382%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="97.5667%" y="549" width="0.1570%" height="15" fill="rgb(208,97,40)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="97.5667%" y="533" width="0.1570%" height="15" fill="rgb(254,36,16)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.5667%" y="517" width="0.1570%" height="15" fill="rgb(221,7,12)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.5667%" y="501" width="0.1570%" height="15" fill="rgb(205,11,12)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.5667%" y="485" width="0.1570%" height="15" fill="rgb(227,72,28)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="97.5667%" y="469" width="0.1570%" height="15" fill="rgb(228,7,34)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="97.5667%" y="453" width="0.1570%" height="15" fill="rgb(230,52,42)" fg:x="1243" fg:w="2"/><text x="97.8167%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6452%" y="437" width="0.0785%" height="15" fill="rgb(219,177,53)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6452%" y="421" width="0.0785%" height="15" fill="rgb(243,196,34)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.6452%" y="405" width="0.0785%" height="15" fill="rgb(213,66,49)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6452%" y="389" width="0.0785%" height="15" fill="rgb(233,11,50)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6452%" y="373" width="0.0785%" height="15" fill="rgb(235,190,6)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6452%" y="357" width="0.0785%" height="15" fill="rgb(212,64,44)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.6452%" y="341" width="0.0785%" height="15" fill="rgb(206,95,44)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.6452%" y="325" width="0.0785%" height="15" fill="rgb(227,136,25)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.6452%" y="309" width="0.0785%" height="15" fill="rgb(206,178,17)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.6452%" y="293" width="0.0785%" height="15" fill="rgb(208,168,35)" fg:x="1244" fg:w="1"/><text x="97.8952%" y="303.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.8022%" y="517" width="0.1570%" height="15" fill="rgb(213,210,40)" fg:x="1246" fg:w="2"/><text x="98.0522%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.8022%" y="501" width="0.1570%" height="15" fill="rgb(236,60,6)" fg:x="1246" fg:w="2"/><text x="98.0522%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.8807%" y="485" width="0.0785%" height="15" fill="rgb(220,186,36)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8807%" y="469" width="0.0785%" height="15" fill="rgb(225,120,49)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.8807%" y="453" width="0.0785%" height="15" fill="rgb(250,115,20)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.8807%" y="437" width="0.0785%" height="15" fill="rgb(207,214,23)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.8807%" y="421" width="0.0785%" height="15" fill="rgb(240,9,18)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.8807%" y="405" width="0.0785%" height="15" fill="rgb(232,170,48)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8807%" y="389" width="0.0785%" height="15" fill="rgb(236,149,23)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.8807%" y="373" width="0.0785%" height="15" fill="rgb(210,125,42)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.8807%" y="357" width="0.0785%" height="15" fill="rgb(207,201,52)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.8807%" y="341" width="0.0785%" height="15" fill="rgb(250,187,37)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.8807%" y="325" width="0.0785%" height="15" fill="rgb(214,186,2)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.8807%" y="309" width="0.0785%" height="15" fill="rgb(207,189,15)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.8807%" y="293" width="0.0785%" height="15" fill="rgb(221,99,21)" fg:x="1247" fg:w="1"/><text x="98.1307%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="97.9592%" y="517" width="0.0785%" height="15" fill="rgb(212,67,18)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="97.9592%" y="501" width="0.0785%" height="15" fill="rgb(226,24,24)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.9592%" y="485" width="0.0785%" height="15" fill="rgb(252,123,31)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="97.9592%" y="469" width="0.0785%" height="15" fill="rgb(251,227,47)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="97.9592%" y="453" width="0.0785%" height="15" fill="rgb(233,84,53)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="463.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.9592%" y="437" width="0.0785%" height="15" fill="rgb(228,57,19)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9592%" y="421" width="0.0785%" height="15" fill="rgb(251,81,5)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9592%" y="405" width="0.0785%" height="15" fill="rgb(236,211,27)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9592%" y="389" width="0.0785%" height="15" fill="rgb(218,21,6)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9592%" y="373" width="0.0785%" height="15" fill="rgb(239,104,19)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9592%" y="357" width="0.0785%" height="15" fill="rgb(234,179,27)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9592%" y="341" width="0.0785%" height="15" fill="rgb(221,154,39)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9592%" y="325" width="0.0785%" height="15" fill="rgb(228,190,1)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9592%" y="309" width="0.0785%" height="15" fill="rgb(244,122,33)" fg:x="1248" fg:w="1"/><text x="98.2092%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.39%)</title><rect x="97.7237%" y="549" width="0.3925%" height="15" fill="rgb(227,56,37)" fg:x="1245" fg:w="5"/><text x="97.9737%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.39%)</title><rect x="97.7237%" y="533" width="0.3925%" height="15" fill="rgb(207,158,16)" fg:x="1245" fg:w="5"/><text x="97.9737%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0377%" y="517" width="0.0785%" height="15" fill="rgb(251,222,30)" fg:x="1249" fg:w="1"/><text x="98.2877%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0377%" y="501" width="0.0785%" height="15" fill="rgb(240,22,49)" fg:x="1249" fg:w="1"/><text x="98.2877%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.0377%" y="485" width="0.0785%" height="15" fill="rgb(224,207,37)" fg:x="1249" fg:w="1"/><text x="98.2877%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.0377%" y="469" width="0.0785%" height="15" fill="rgb(249,188,40)" fg:x="1249" fg:w="1"/><text x="98.2877%" y="479.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="98.0377%" y="453" width="0.0785%" height="15" fill="rgb(254,141,11)" fg:x="1249" fg:w="1"/><text x="98.2877%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.1162%" y="517" width="0.0785%" height="15" fill="rgb(231,177,6)" fg:x="1250" fg:w="1"/><text x="98.3662%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="98.1947%" y="485" width="0.1570%" height="15" fill="rgb(241,6,16)" fg:x="1251" fg:w="2"/><text x="98.4447%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="98.3516%" y="469" width="0.1570%" height="15" fill="rgb(230,50,14)" fg:x="1253" fg:w="2"/><text x="98.6016%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (5 samples, 0.39%)</title><rect x="98.1947%" y="517" width="0.3925%" height="15" fill="rgb(254,36,3)" fg:x="1251" fg:w="5"/><text x="98.4447%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="98.1947%" y="501" width="0.3925%" height="15" fill="rgb(226,149,37)" fg:x="1251" fg:w="5"/><text x="98.4447%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="98.3516%" y="485" width="0.2355%" height="15" fill="rgb(253,49,27)" fg:x="1253" fg:w="3"/><text x="98.6016%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.5086%" y="469" width="0.0785%" height="15" fill="rgb(249,182,52)" fg:x="1255" fg:w="1"/><text x="98.7586%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.5086%" y="453" width="0.0785%" height="15" fill="rgb(223,42,15)" fg:x="1255" fg:w="1"/><text x="98.7586%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.5871%" y="485" width="0.0785%" height="15" fill="rgb(232,31,42)" fg:x="1256" fg:w="1"/><text x="98.8371%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="98.5871%" y="517" width="0.1570%" height="15" fill="rgb(233,56,46)" fg:x="1256" fg:w="2"/><text x="98.8371%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.5871%" y="501" width="0.1570%" height="15" fill="rgb(241,143,21)" fg:x="1256" fg:w="2"/><text x="98.8371%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.6656%" y="485" width="0.0785%" height="15" fill="rgb(251,222,15)" fg:x="1257" fg:w="1"/><text x="98.9156%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.6656%" y="469" width="0.0785%" height="15" fill="rgb(242,101,40)" fg:x="1257" fg:w="1"/><text x="98.9156%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.6656%" y="453" width="0.0785%" height="15" fill="rgb(247,60,44)" fg:x="1257" fg:w="1"/><text x="98.9156%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.71%)</title><rect x="98.1162%" y="549" width="0.7064%" height="15" fill="rgb(254,48,47)" fg:x="1250" fg:w="9"/><text x="98.3662%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (9 samples, 0.71%)</title><rect x="98.1162%" y="533" width="0.7064%" height="15" fill="rgb(253,30,33)" fg:x="1250" fg:w="9"/><text x="98.3662%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="98.7441%" y="517" width="0.0785%" height="15" fill="rgb(253,214,47)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.7441%" y="501" width="0.0785%" height="15" fill="rgb(241,108,29)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.7441%" y="485" width="0.0785%" height="15" fill="rgb(240,36,2)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.7441%" y="469" width="0.0785%" height="15" fill="rgb(243,198,24)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7441%" y="453" width="0.0785%" height="15" fill="rgb(225,98,27)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7441%" y="437" width="0.0785%" height="15" fill="rgb(208,86,30)" fg:x="1258" fg:w="1"/><text x="98.9941%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (92 samples, 7.22%)</title><rect x="91.6797%" y="757" width="7.2214%" height="15" fill="rgb(242,157,11)" fg:x="1168" fg:w="92"/><text x="91.9297%" y="767.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::apply_middleware (92 samples, 7.22%)</title><rect x="91.6797%" y="741" width="7.2214%" height="15" fill="rgb(244,84,16)" fg:x="1168" fg:w="92"/><text x="91.9297%" y="751.50">kernel::pl..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (91 samples, 7.14%)</title><rect x="91.7582%" y="725" width="7.1429%" height="15" fill="rgb(247,20,46)" fg:x="1169" fg:w="91"/><text x="92.0082%" y="735.50">kernel::pl..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (91 samples, 7.14%)</title><rect x="91.7582%" y="709" width="7.1429%" height="15" fill="rgb(240,157,20)" fg:x="1169" fg:w="91"/><text x="92.0082%" y="719.50">&lt;engine::s..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (76 samples, 5.97%)</title><rect x="92.9356%" y="693" width="5.9655%" height="15" fill="rgb(212,151,38)" fg:x="1184" fg:w="76"/><text x="93.1856%" y="703.50">kernel::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (76 samples, 5.97%)</title><rect x="92.9356%" y="677" width="5.9655%" height="15" fill="rgb(233,197,14)" fg:x="1184" fg:w="76"/><text x="93.1856%" y="687.50">&lt;plugins..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (75 samples, 5.89%)</title><rect x="93.0141%" y="661" width="5.8870%" height="15" fill="rgb(226,148,28)" fg:x="1185" fg:w="75"/><text x="93.2641%" y="671.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 5.89%)</title><rect x="93.0141%" y="645" width="5.8870%" height="15" fill="rgb(244,141,30)" fg:x="1185" fg:w="75"/><text x="93.2641%" y="655.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (75 samples, 5.89%)</title><rect x="93.0141%" y="629" width="5.8870%" height="15" fill="rgb(215,73,38)" fg:x="1185" fg:w="75"/><text x="93.2641%" y="639.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 5.89%)</title><rect x="93.0141%" y="613" width="5.8870%" height="15" fill="rgb(230,148,29)" fg:x="1185" fg:w="75"/><text x="93.2641%" y="623.50">core::o..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (75 samples, 5.89%)</title><rect x="93.0141%" y="597" width="5.8870%" height="15" fill="rgb(250,41,52)" fg:x="1185" fg:w="75"/><text x="93.2641%" y="607.50">&lt;engine..</text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (27 samples, 2.12%)</title><rect x="96.7818%" y="581" width="2.1193%" height="15" fill="rgb(215,48,1)" fg:x="1233" fg:w="27"/><text x="97.0318%" y="591.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (17 samples, 1.33%)</title><rect x="97.5667%" y="565" width="1.3344%" height="15" fill="rgb(205,223,38)" fg:x="1243" fg:w="17"/><text x="97.8167%" y="575.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="98.8226%" y="549" width="0.0785%" height="15" fill="rgb(213,51,8)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="98.8226%" y="533" width="0.0785%" height="15" fill="rgb(248,53,11)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="98.8226%" y="517" width="0.0785%" height="15" fill="rgb(218,140,4)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8226%" y="501" width="0.0785%" height="15" fill="rgb(248,161,31)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.8226%" y="485" width="0.0785%" height="15" fill="rgb(239,88,32)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8226%" y="469" width="0.0785%" height="15" fill="rgb(234,14,28)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8226%" y="453" width="0.0785%" height="15" fill="rgb(235,173,11)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8226%" y="437" width="0.0785%" height="15" fill="rgb(222,70,2)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.8226%" y="421" width="0.0785%" height="15" fill="rgb(228,196,41)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8226%" y="405" width="0.0785%" height="15" fill="rgb(249,19,9)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8226%" y="389" width="0.0785%" height="15" fill="rgb(221,16,43)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8226%" y="373" width="0.0785%" height="15" fill="rgb(225,207,6)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8226%" y="357" width="0.0785%" height="15" fill="rgb(249,32,32)" fg:x="1259" fg:w="1"/><text x="99.0726%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9011%" y="629" width="0.0785%" height="15" fill="rgb(232,163,43)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9011%" y="613" width="0.0785%" height="15" fill="rgb(236,158,54)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="623.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.9011%" y="597" width="0.0785%" height="15" fill="rgb(205,126,44)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9011%" y="581" width="0.0785%" height="15" fill="rgb(210,162,12)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9011%" y="565" width="0.0785%" height="15" fill="rgb(218,156,48)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9011%" y="549" width="0.0785%" height="15" fill="rgb(248,210,3)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="559.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.9011%" y="533" width="0.0785%" height="15" fill="rgb(212,43,27)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="98.9011%" y="517" width="0.0785%" height="15" fill="rgb(241,52,6)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9011%" y="501" width="0.0785%" height="15" fill="rgb(222,178,35)" fg:x="1260" fg:w="1"/><text x="99.1511%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="98.9011%" y="677" width="0.1570%" height="15" fill="rgb(205,121,46)" fg:x="1260" fg:w="2"/><text x="99.1511%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.9011%" y="661" width="0.1570%" height="15" fill="rgb(249,67,1)" fg:x="1260" fg:w="2"/><text x="99.1511%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9011%" y="645" width="0.1570%" height="15" fill="rgb(238,168,42)" fg:x="1260" fg:w="2"/><text x="99.1511%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9796%" y="629" width="0.0785%" height="15" fill="rgb(205,36,48)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9796%" y="613" width="0.0785%" height="15" fill="rgb(240,85,12)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9796%" y="597" width="0.0785%" height="15" fill="rgb(245,27,39)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9796%" y="581" width="0.0785%" height="15" fill="rgb(218,129,34)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9796%" y="565" width="0.0785%" height="15" fill="rgb(221,157,12)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9796%" y="549" width="0.0785%" height="15" fill="rgb(213,206,20)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9796%" y="533" width="0.0785%" height="15" fill="rgb(227,115,30)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9796%" y="517" width="0.0785%" height="15" fill="rgb(221,40,47)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="98.9796%" y="501" width="0.0785%" height="15" fill="rgb(239,96,49)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9796%" y="485" width="0.0785%" height="15" fill="rgb(223,24,38)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9796%" y="469" width="0.0785%" height="15" fill="rgb(242,35,45)" fg:x="1261" fg:w="1"/><text x="99.2296%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="98.9011%" y="725" width="0.2355%" height="15" fill="rgb(236,20,9)" fg:x="1260" fg:w="3"/><text x="99.1511%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="98.9011%" y="709" width="0.2355%" height="15" fill="rgb(239,124,8)" fg:x="1260" fg:w="3"/><text x="99.1511%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="98.9011%" y="693" width="0.2355%" height="15" fill="rgb(228,92,29)" fg:x="1260" fg:w="3"/><text x="99.1511%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0581%" y="677" width="0.0785%" height="15" fill="rgb(251,53,39)" fg:x="1262" fg:w="1"/><text x="99.3081%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0581%" y="661" width="0.0785%" height="15" fill="rgb(224,44,10)" fg:x="1262" fg:w="1"/><text x="99.3081%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="99.0581%" y="645" width="0.0785%" height="15" fill="rgb(254,10,15)" fg:x="1262" fg:w="1"/><text x="99.3081%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.31%)</title><rect x="98.9011%" y="757" width="0.3140%" height="15" fill="rgb(245,173,6)" fg:x="1260" fg:w="4"/><text x="99.1511%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (4 samples, 0.31%)</title><rect x="98.9011%" y="741" width="0.3140%" height="15" fill="rgb(228,74,0)" fg:x="1260" fg:w="4"/><text x="99.1511%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.1366%" y="725" width="0.0785%" height="15" fill="rgb(206,138,29)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.1366%" y="709" width="0.0785%" height="15" fill="rgb(253,27,43)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.1366%" y="693" width="0.0785%" height="15" fill="rgb(231,73,0)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1366%" y="677" width="0.0785%" height="15" fill="rgb(218,9,23)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1366%" y="661" width="0.0785%" height="15" fill="rgb(251,55,29)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1366%" y="645" width="0.0785%" height="15" fill="rgb(223,180,22)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1366%" y="629" width="0.0785%" height="15" fill="rgb(223,29,21)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.1366%" y="613" width="0.0785%" height="15" fill="rgb(251,103,37)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1366%" y="597" width="0.0785%" height="15" fill="rgb(214,11,21)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.1366%" y="581" width="0.0785%" height="15" fill="rgb(205,137,13)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.1366%" y="565" width="0.0785%" height="15" fill="rgb(225,58,47)" fg:x="1263" fg:w="1"/><text x="99.3866%" y="575.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="99.2151%" y="709" width="0.0785%" height="15" fill="rgb(222,197,14)" fg:x="1264" fg:w="1"/><text x="99.4651%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2936%" y="645" width="0.0785%" height="15" fill="rgb(215,210,33)" fg:x="1265" fg:w="1"/><text x="99.5436%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.2936%" y="629" width="0.0785%" height="15" fill="rgb(242,13,9)" fg:x="1265" fg:w="1"/><text x="99.5436%" y="639.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.2936%" y="693" width="0.1570%" height="15" fill="rgb(218,31,39)" fg:x="1265" fg:w="2"/><text x="99.5436%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.2936%" y="677" width="0.1570%" height="15" fill="rgb(211,214,23)" fg:x="1265" fg:w="2"/><text x="99.5436%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.2936%" y="661" width="0.1570%" height="15" fill="rgb(237,92,14)" fg:x="1265" fg:w="2"/><text x="99.5436%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3721%" y="645" width="0.0785%" height="15" fill="rgb(220,78,5)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3721%" y="629" width="0.0785%" height="15" fill="rgb(237,23,21)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3721%" y="613" width="0.0785%" height="15" fill="rgb(251,207,51)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3721%" y="597" width="0.0785%" height="15" fill="rgb(249,206,18)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3721%" y="581" width="0.0785%" height="15" fill="rgb(236,20,19)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.3721%" y="565" width="0.0785%" height="15" fill="rgb(214,227,29)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.3721%" y="549" width="0.0785%" height="15" fill="rgb(209,183,4)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="559.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.3721%" y="533" width="0.0785%" height="15" fill="rgb(233,111,23)" fg:x="1266" fg:w="1"/><text x="99.6221%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (3 samples, 0.24%)</title><rect x="99.2936%" y="709" width="0.2355%" height="15" fill="rgb(238,121,27)" fg:x="1265" fg:w="3"/><text x="99.5436%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.4505%" y="693" width="0.0785%" height="15" fill="rgb(236,120,41)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4505%" y="677" width="0.0785%" height="15" fill="rgb(241,143,10)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.4505%" y="661" width="0.0785%" height="15" fill="rgb(224,86,31)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.4505%" y="645" width="0.0785%" height="15" fill="rgb(236,212,27)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.4505%" y="629" width="0.0785%" height="15" fill="rgb(219,43,51)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.4505%" y="613" width="0.0785%" height="15" fill="rgb(232,216,8)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.4505%" y="597" width="0.0785%" height="15" fill="rgb(206,222,39)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.4505%" y="581" width="0.0785%" height="15" fill="rgb(209,149,48)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.4505%" y="565" width="0.0785%" height="15" fill="rgb(229,155,21)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.4505%" y="549" width="0.0785%" height="15" fill="rgb(246,152,26)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.4505%" y="533" width="0.0785%" height="15" fill="rgb(206,70,42)" fg:x="1267" fg:w="1"/><text x="99.7005%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.5290%" y="709" width="0.0785%" height="15" fill="rgb(236,9,11)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.5290%" y="693" width="0.0785%" height="15" fill="rgb(238,145,47)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.5290%" y="677" width="0.0785%" height="15" fill="rgb(252,189,7)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5290%" y="661" width="0.0785%" height="15" fill="rgb(254,168,51)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5290%" y="645" width="0.0785%" height="15" fill="rgb(227,105,46)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.5290%" y="629" width="0.0785%" height="15" fill="rgb(227,74,30)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.5290%" y="613" width="0.0785%" height="15" fill="rgb(206,212,44)" fg:x="1268" fg:w="1"/><text x="99.7790%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (6 samples, 0.47%)</title><rect x="99.2151%" y="757" width="0.4710%" height="15" fill="rgb(252,69,11)" fg:x="1264" fg:w="6"/><text x="99.4651%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (6 samples, 0.47%)</title><rect x="99.2151%" y="741" width="0.4710%" height="15" fill="rgb(239,116,0)" fg:x="1264" fg:w="6"/><text x="99.4651%" y="751.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (6 samples, 0.47%)</title><rect x="99.2151%" y="725" width="0.4710%" height="15" fill="rgb(246,189,23)" fg:x="1264" fg:w="6"/><text x="99.4651%" y="735.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="99.6075%" y="709" width="0.0785%" height="15" fill="rgb(229,50,41)" fg:x="1269" fg:w="1"/><text x="99.8575%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6075%" y="693" width="0.0785%" height="15" fill="rgb(214,66,37)" fg:x="1269" fg:w="1"/><text x="99.8575%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="99.6075%" y="677" width="0.0785%" height="15" fill="rgb(226,28,6)" fg:x="1269" fg:w="1"/><text x="99.8575%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.6860%" y="677" width="0.0785%" height="15" fill="rgb(239,154,0)" fg:x="1270" fg:w="1"/><text x="99.9360%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.6860%" y="661" width="0.0785%" height="15" fill="rgb(233,97,11)" fg:x="1270" fg:w="1"/><text x="99.9360%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.6860%" y="645" width="0.0785%" height="15" fill="rgb(236,215,16)" fg:x="1270" fg:w="1"/><text x="99.9360%" y="655.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.6860%" y="757" width="0.1570%" height="15" fill="rgb(246,188,29)" fg:x="1270" fg:w="2"/><text x="99.9360%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="99.6860%" y="741" width="0.1570%" height="15" fill="rgb(207,7,29)" fg:x="1270" fg:w="2"/><text x="99.9360%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.6860%" y="725" width="0.1570%" height="15" fill="rgb(238,112,43)" fg:x="1270" fg:w="2"/><text x="99.9360%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.6860%" y="709" width="0.1570%" height="15" fill="rgb(230,110,32)" fg:x="1270" fg:w="2"/><text x="99.9360%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.6860%" y="693" width="0.1570%" height="15" fill="rgb(218,197,32)" fg:x="1270" fg:w="2"/><text x="99.9360%" y="703.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="99.7645%" y="677" width="0.0785%" height="15" fill="rgb(252,61,9)" fg:x="1271" fg:w="1"/><text x="100.0145%" y="687.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (105 samples, 8.24%)</title><rect x="91.6797%" y="773" width="8.2418%" height="15" fill="rgb(244,140,14)" fg:x="1168" fg:w="105"/><text x="91.9297%" y="783.50">engine::ses..</text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="99.8430%" y="757" width="0.0785%" height="15" fill="rgb(216,14,47)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="99.8430%" y="741" width="0.0785%" height="15" fill="rgb(224,130,52)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="99.8430%" y="725" width="0.0785%" height="15" fill="rgb(210,229,51)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8430%" y="709" width="0.0785%" height="15" fill="rgb(242,13,9)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.8430%" y="693" width="0.0785%" height="15" fill="rgb(252,71,50)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="99.8430%" y="677" width="0.0785%" height="15" fill="rgb(218,225,6)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.8430%" y="661" width="0.0785%" height="15" fill="rgb(219,27,35)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.8430%" y="645" width="0.0785%" height="15" fill="rgb(226,30,1)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8430%" y="629" width="0.0785%" height="15" fill="rgb(227,164,34)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.8430%" y="613" width="0.0785%" height="15" fill="rgb(206,103,4)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.8430%" y="597" width="0.0785%" height="15" fill="rgb(214,166,19)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.8430%" y="581" width="0.0785%" height="15" fill="rgb(240,56,20)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.8430%" y="565" width="0.0785%" height="15" fill="rgb(224,25,3)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.8430%" y="549" width="0.0785%" height="15" fill="rgb(216,206,54)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.8430%" y="533" width="0.0785%" height="15" fill="rgb(225,142,10)" fg:x="1272" fg:w="1"/><text x="100.0930%" y="543.50"></text></g><g><title>all (1,274 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(246,9,18)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1135.50"></text></g><g><title>simple-484c7248 (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(247,140,18)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1119.50">simple-484c7248</text></g><g><title>_start (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(239,184,22)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1103.50">_start</text></g><g><title>__libc_start_main (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(227,94,44)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1087.50">__libc_start_main</text></g><g><title>main (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(219,43,3)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(210,76,31)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(225,85,12)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,274 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(214,191,28)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,274 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(214,43,14)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,274 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(253,117,5)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,274 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(208,124,26)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,274 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(228,208,39)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,274 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(206,180,39)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,274 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(205,111,37)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,274 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(208,121,24)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,274 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(218,215,32)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,274 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(244,168,53)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="879.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,274 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(214,9,36)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="863.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,274 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(231,4,34)" fg:x="0" fg:w="1274"/><text x="0.2500%" y="847.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (262 samples, 20.57%)</title><rect x="79.4349%" y="821" width="20.5651%" height="15" fill="rgb(210,83,51)" fg:x="1012" fg:w="262"/><text x="79.6849%" y="831.50">&lt;criterion::routine::Function&lt;M,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (262 samples, 20.57%)</title><rect x="79.4349%" y="805" width="20.5651%" height="15" fill="rgb(224,112,1)" fg:x="1012" fg:w="262"/><text x="79.6849%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::..</text></g><g><title>tests::evaluate_text_in_new_domain (262 samples, 20.57%)</title><rect x="79.4349%" y="789" width="20.5651%" height="15" fill="rgb(216,33,41)" fg:x="1012" fg:w="262"/><text x="79.6849%" y="799.50">tests::evaluate_text_in_new_doma..</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9215%" y="773" width="0.0785%" height="15" fill="rgb(215,179,42)" fg:x="1273" fg:w="1"/><text x="100.1715%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9215%" y="757" width="0.0785%" height="15" fill="rgb(205,81,48)" fg:x="1273" fg:w="1"/><text x="100.1715%" y="767.50"></text></g></svg></svg>