<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="1283"><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="0.0779%" y="757" width="0.0779%" height="15" fill="rgb(254,88,22)" fg:x="1" fg:w="1"/><text x="0.3279%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="0.0779%" y="741" width="0.0779%" height="15" fill="rgb(240,206,50)" fg:x="1" fg:w="1"/><text x="0.3279%" y="751.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.2338%" y="677" width="0.1559%" height="15" fill="rgb(249,103,8)" fg:x="3" fg:w="2"/><text x="0.4838%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (2 samples, 0.16%)</title><rect x="0.3897%" y="661" width="0.1559%" height="15" fill="rgb(241,178,36)" fg:x="5" fg:w="2"/><text x="0.6397%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.3897%" y="645" width="0.1559%" height="15" fill="rgb(246,110,15)" fg:x="5" fg:w="2"/><text x="0.6397%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="0.3897%" y="629" width="0.1559%" height="15" fill="rgb(207,14,43)" fg:x="5" fg:w="2"/><text x="0.6397%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.3897%" y="613" width="0.1559%" height="15" fill="rgb(253,219,19)" fg:x="5" fg:w="2"/><text x="0.6397%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.3897%" y="597" width="0.1559%" height="15" fill="rgb(216,126,5)" fg:x="5" fg:w="2"/><text x="0.6397%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="0.4677%" y="581" width="0.0779%" height="15" fill="rgb(218,78,42)" fg:x="6" fg:w="1"/><text x="0.7177%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.4677%" y="565" width="0.0779%" height="15" fill="rgb(215,154,40)" fg:x="6" fg:w="1"/><text x="0.7177%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5456%" y="613" width="0.0779%" height="15" fill="rgb(235,129,32)" fg:x="7" fg:w="1"/><text x="0.7956%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (4 samples, 0.31%)</title><rect x="0.3897%" y="677" width="0.3118%" height="15" fill="rgb(218,51,8)" fg:x="5" fg:w="4"/><text x="0.6397%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.5456%" y="661" width="0.1559%" height="15" fill="rgb(245,48,4)" fg:x="7" fg:w="2"/><text x="0.7956%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="0.5456%" y="645" width="0.1559%" height="15" fill="rgb(250,175,12)" fg:x="7" fg:w="2"/><text x="0.7956%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="0.5456%" y="629" width="0.1559%" height="15" fill="rgb(237,95,40)" fg:x="7" fg:w="2"/><text x="0.7956%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="0.6235%" y="613" width="0.0779%" height="15" fill="rgb(244,120,0)" fg:x="8" fg:w="1"/><text x="0.8735%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="0.6235%" y="597" width="0.0779%" height="15" fill="rgb(241,19,42)" fg:x="8" fg:w="1"/><text x="0.8735%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="0.7015%" y="645" width="0.1559%" height="15" fill="rgb(217,174,48)" fg:x="9" fg:w="2"/><text x="0.9515%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.7015%" y="629" width="0.1559%" height="15" fill="rgb(239,36,38)" fg:x="9" fg:w="2"/><text x="0.9515%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.9353%" y="629" width="0.0779%" height="15" fill="rgb(220,63,49)" fg:x="12" fg:w="1"/><text x="1.1853%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0133%" y="629" width="0.0779%" height="15" fill="rgb(240,101,13)" fg:x="13" fg:w="1"/><text x="1.2633%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.0912%" y="613" width="0.0779%" height="15" fill="rgb(209,184,51)" fg:x="14" fg:w="1"/><text x="1.3412%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.0912%" y="597" width="0.0779%" height="15" fill="rgb(206,136,39)" fg:x="14" fg:w="1"/><text x="1.3412%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.1691%" y="597" width="0.0779%" height="15" fill="rgb(254,47,45)" fg:x="15" fg:w="1"/><text x="1.4191%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.17%)</title><rect x="0.1559%" y="741" width="1.1691%" height="15" fill="rgb(252,103,20)" fg:x="2" fg:w="15"/><text x="0.4059%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (15 samples, 1.17%)</title><rect x="0.1559%" y="725" width="1.1691%" height="15" fill="rgb(230,69,12)" fg:x="2" fg:w="15"/><text x="0.4059%" y="735.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.09%)</title><rect x="0.2338%" y="709" width="1.0912%" height="15" fill="rgb(219,2,28)" fg:x="3" fg:w="14"/><text x="0.4838%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.09%)</title><rect x="0.2338%" y="693" width="1.0912%" height="15" fill="rgb(210,9,12)" fg:x="3" fg:w="14"/><text x="0.4838%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="0.7015%" y="677" width="0.6235%" height="15" fill="rgb(235,99,33)" fg:x="9" fg:w="8"/><text x="0.9515%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.62%)</title><rect x="0.7015%" y="661" width="0.6235%" height="15" fill="rgb(230,11,38)" fg:x="9" fg:w="8"/><text x="0.9515%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="0.8574%" y="645" width="0.4677%" height="15" fill="rgb(217,129,0)" fg:x="11" fg:w="6"/><text x="1.1074%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="1.0912%" y="629" width="0.2338%" height="15" fill="rgb(222,198,4)" fg:x="14" fg:w="3"/><text x="1.3412%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="1.1691%" y="613" width="0.1559%" height="15" fill="rgb(246,170,27)" fg:x="15" fg:w="2"/><text x="1.4191%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.2471%" y="597" width="0.0779%" height="15" fill="rgb(229,17,28)" fg:x="16" fg:w="1"/><text x="1.4971%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="1.2471%" y="581" width="0.0779%" height="15" fill="rgb(233,198,48)" fg:x="16" fg:w="1"/><text x="1.4971%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.33%)</title><rect x="0.0779%" y="773" width="1.3250%" height="15" fill="rgb(238,103,23)" fg:x="1" fg:w="17"/><text x="0.3279%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (16 samples, 1.25%)</title><rect x="0.1559%" y="757" width="1.2471%" height="15" fill="rgb(206,91,41)" fg:x="2" fg:w="16"/><text x="0.4059%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.3250%" y="741" width="0.0779%" height="15" fill="rgb(227,34,25)" fg:x="17" fg:w="1"/><text x="1.5750%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.5588%" y="549" width="0.0779%" height="15" fill="rgb(210,110,44)" fg:x="20" fg:w="1"/><text x="1.8088%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="1.5588%" y="661" width="0.1559%" height="15" fill="rgb(216,189,8)" fg:x="20" fg:w="2"/><text x="1.8088%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="1.5588%" y="645" width="0.1559%" height="15" fill="rgb(234,9,46)" fg:x="20" fg:w="2"/><text x="1.8088%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="1.5588%" y="629" width="0.1559%" height="15" fill="rgb(251,200,5)" fg:x="20" fg:w="2"/><text x="1.8088%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.5588%" y="613" width="0.1559%" height="15" fill="rgb(238,165,37)" fg:x="20" fg:w="2"/><text x="1.8088%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.5588%" y="597" width="0.1559%" height="15" fill="rgb(232,77,38)" fg:x="20" fg:w="2"/><text x="1.8088%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="1.5588%" y="581" width="0.1559%" height="15" fill="rgb(253,179,33)" fg:x="20" fg:w="2"/><text x="1.8088%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="1.5588%" y="565" width="0.1559%" height="15" fill="rgb(240,13,35)" fg:x="20" fg:w="2"/><text x="1.8088%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.6368%" y="549" width="0.0779%" height="15" fill="rgb(242,150,49)" fg:x="21" fg:w="1"/><text x="1.8868%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6368%" y="533" width="0.0779%" height="15" fill="rgb(237,176,28)" fg:x="21" fg:w="1"/><text x="1.8868%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.6368%" y="517" width="0.0779%" height="15" fill="rgb(214,176,33)" fg:x="21" fg:w="1"/><text x="1.8868%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.6368%" y="501" width="0.0779%" height="15" fill="rgb(214,25,12)" fg:x="21" fg:w="1"/><text x="1.8868%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.6368%" y="485" width="0.0779%" height="15" fill="rgb(238,190,20)" fg:x="21" fg:w="1"/><text x="1.8868%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6368%" y="469" width="0.0779%" height="15" fill="rgb(208,11,19)" fg:x="21" fg:w="1"/><text x="1.8868%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.7147%" y="613" width="0.0779%" height="15" fill="rgb(239,90,4)" fg:x="22" fg:w="1"/><text x="1.9647%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.7147%" y="597" width="0.0779%" height="15" fill="rgb(248,110,3)" fg:x="22" fg:w="1"/><text x="1.9647%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.7147%" y="581" width="0.0779%" height="15" fill="rgb(210,41,30)" fg:x="22" fg:w="1"/><text x="1.9647%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.7147%" y="565" width="0.0779%" height="15" fill="rgb(239,36,8)" fg:x="22" fg:w="1"/><text x="1.9647%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.7147%" y="549" width="0.0779%" height="15" fill="rgb(237,201,47)" fg:x="22" fg:w="1"/><text x="1.9647%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.7147%" y="533" width="0.0779%" height="15" fill="rgb(224,140,29)" fg:x="22" fg:w="1"/><text x="1.9647%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.31%)</title><rect x="1.5588%" y="693" width="0.3118%" height="15" fill="rgb(231,209,17)" fg:x="20" fg:w="4"/><text x="1.8088%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="1.5588%" y="677" width="0.3118%" height="15" fill="rgb(249,196,1)" fg:x="20" fg:w="4"/><text x="1.8088%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="1.7147%" y="661" width="0.1559%" height="15" fill="rgb(223,207,51)" fg:x="22" fg:w="2"/><text x="1.9647%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="1.7147%" y="645" width="0.1559%" height="15" fill="rgb(210,14,40)" fg:x="22" fg:w="2"/><text x="1.9647%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="1.7147%" y="629" width="0.1559%" height="15" fill="rgb(250,20,52)" fg:x="22" fg:w="2"/><text x="1.9647%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.7927%" y="613" width="0.0779%" height="15" fill="rgb(241,46,11)" fg:x="23" fg:w="1"/><text x="2.0427%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7927%" y="597" width="0.0779%" height="15" fill="rgb(219,105,5)" fg:x="23" fg:w="1"/><text x="2.0427%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="1.7927%" y="581" width="0.0779%" height="15" fill="rgb(252,77,35)" fg:x="23" fg:w="1"/><text x="2.0427%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7927%" y="565" width="0.0779%" height="15" fill="rgb(243,119,2)" fg:x="23" fg:w="1"/><text x="2.0427%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="1.7927%" y="549" width="0.0779%" height="15" fill="rgb(206,82,28)" fg:x="23" fg:w="1"/><text x="2.0427%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="1.7927%" y="533" width="0.0779%" height="15" fill="rgb(227,120,12)" fg:x="23" fg:w="1"/><text x="2.0427%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.7927%" y="517" width="0.0779%" height="15" fill="rgb(229,134,41)" fg:x="23" fg:w="1"/><text x="2.0427%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="1.8706%" y="581" width="0.0779%" height="15" fill="rgb(239,96,32)" fg:x="24" fg:w="1"/><text x="2.1206%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.8706%" y="565" width="0.0779%" height="15" fill="rgb(225,46,27)" fg:x="24" fg:w="1"/><text x="2.1206%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="1.8706%" y="549" width="0.0779%" height="15" fill="rgb(215,168,2)" fg:x="24" fg:w="1"/><text x="2.1206%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="1.8706%" y="533" width="0.0779%" height="15" fill="rgb(207,170,52)" fg:x="24" fg:w="1"/><text x="2.1206%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="1.8706%" y="517" width="0.0779%" height="15" fill="rgb(237,198,36)" fg:x="24" fg:w="1"/><text x="2.1206%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="1.8706%" y="501" width="0.0779%" height="15" fill="rgb(213,27,14)" fg:x="24" fg:w="1"/><text x="2.1206%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.8706%" y="485" width="0.0779%" height="15" fill="rgb(218,77,5)" fg:x="24" fg:w="1"/><text x="2.1206%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="1.8706%" y="469" width="0.0779%" height="15" fill="rgb(230,219,39)" fg:x="24" fg:w="1"/><text x="2.1206%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="1.8706%" y="453" width="0.0779%" height="15" fill="rgb(245,177,7)" fg:x="24" fg:w="1"/><text x="2.1206%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="1.8706%" y="437" width="0.0779%" height="15" fill="rgb(246,44,46)" fg:x="24" fg:w="1"/><text x="2.1206%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="1.8706%" y="421" width="0.0779%" height="15" fill="rgb(207,173,15)" fg:x="24" fg:w="1"/><text x="2.1206%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="1.8706%" y="405" width="0.0779%" height="15" fill="rgb(245,170,50)" fg:x="24" fg:w="1"/><text x="2.1206%" y="415.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="1.8706%" y="389" width="0.0779%" height="15" fill="rgb(233,156,21)" fg:x="24" fg:w="1"/><text x="2.1206%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="1.9486%" y="581" width="0.0779%" height="15" fill="rgb(253,146,27)" fg:x="25" fg:w="1"/><text x="2.1986%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="1.8706%" y="693" width="0.2338%" height="15" fill="rgb(247,66,29)" fg:x="24" fg:w="3"/><text x="2.1206%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="1.8706%" y="677" width="0.2338%" height="15" fill="rgb(218,207,26)" fg:x="24" fg:w="3"/><text x="2.1206%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="1.8706%" y="661" width="0.2338%" height="15" fill="rgb(234,93,26)" fg:x="24" fg:w="3"/><text x="2.1206%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="1.8706%" y="645" width="0.2338%" height="15" fill="rgb(214,75,48)" fg:x="24" fg:w="3"/><text x="2.1206%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="1.8706%" y="629" width="0.2338%" height="15" fill="rgb(229,119,22)" fg:x="24" fg:w="3"/><text x="2.1206%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="1.8706%" y="613" width="0.2338%" height="15" fill="rgb(226,153,19)" fg:x="24" fg:w="3"/><text x="2.1206%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="1.8706%" y="597" width="0.2338%" height="15" fill="rgb(220,204,36)" fg:x="24" fg:w="3"/><text x="2.1206%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="2.0265%" y="581" width="0.0779%" height="15" fill="rgb(253,181,43)" fg:x="26" fg:w="1"/><text x="2.2765%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="2.0265%" y="565" width="0.0779%" height="15" fill="rgb(211,41,51)" fg:x="26" fg:w="1"/><text x="2.2765%" y="575.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="2.1044%" y="693" width="0.1559%" height="15" fill="rgb(207,215,0)" fg:x="27" fg:w="2"/><text x="2.3544%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="2.1824%" y="677" width="0.0779%" height="15" fill="rgb(212,153,10)" fg:x="28" fg:w="1"/><text x="2.4324%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="2.1824%" y="661" width="0.0779%" height="15" fill="rgb(251,171,36)" fg:x="28" fg:w="1"/><text x="2.4324%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="2.1824%" y="645" width="0.0779%" height="15" fill="rgb(225,219,41)" fg:x="28" fg:w="1"/><text x="2.4324%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.2603%" y="581" width="0.0779%" height="15" fill="rgb(208,200,1)" fg:x="29" fg:w="1"/><text x="2.5103%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="2.2603%" y="565" width="0.0779%" height="15" fill="rgb(206,75,47)" fg:x="29" fg:w="1"/><text x="2.5103%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="2.4162%" y="421" width="0.0779%" height="15" fill="rgb(248,3,16)" fg:x="31" fg:w="1"/><text x="2.6662%" y="431.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.31%)</title><rect x="2.2603%" y="677" width="0.3118%" height="15" fill="rgb(242,157,36)" fg:x="29" fg:w="4"/><text x="2.5103%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.31%)</title><rect x="2.2603%" y="661" width="0.3118%" height="15" fill="rgb(215,175,11)" fg:x="29" fg:w="4"/><text x="2.5103%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="2.2603%" y="645" width="0.3118%" height="15" fill="rgb(252,222,22)" fg:x="29" fg:w="4"/><text x="2.5103%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="2.2603%" y="629" width="0.3118%" height="15" fill="rgb(250,121,35)" fg:x="29" fg:w="4"/><text x="2.5103%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="2.2603%" y="613" width="0.3118%" height="15" fill="rgb(233,120,49)" fg:x="29" fg:w="4"/><text x="2.5103%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="2.2603%" y="597" width="0.3118%" height="15" fill="rgb(205,201,14)" fg:x="29" fg:w="4"/><text x="2.5103%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (3 samples, 0.23%)</title><rect x="2.3383%" y="581" width="0.2338%" height="15" fill="rgb(219,58,45)" fg:x="30" fg:w="3"/><text x="2.5883%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="2.3383%" y="565" width="0.2338%" height="15" fill="rgb(251,65,12)" fg:x="30" fg:w="3"/><text x="2.5883%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.3383%" y="549" width="0.2338%" height="15" fill="rgb(224,47,31)" fg:x="30" fg:w="3"/><text x="2.5883%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="2.3383%" y="533" width="0.2338%" height="15" fill="rgb(233,74,26)" fg:x="30" fg:w="3"/><text x="2.5883%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.3383%" y="517" width="0.2338%" height="15" fill="rgb(231,211,31)" fg:x="30" fg:w="3"/><text x="2.5883%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="2.3383%" y="501" width="0.2338%" height="15" fill="rgb(239,167,5)" fg:x="30" fg:w="3"/><text x="2.5883%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.3383%" y="485" width="0.2338%" height="15" fill="rgb(241,85,0)" fg:x="30" fg:w="3"/><text x="2.5883%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.23%)</title><rect x="2.3383%" y="469" width="0.2338%" height="15" fill="rgb(229,130,21)" fg:x="30" fg:w="3"/><text x="2.5883%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="2.3383%" y="453" width="0.2338%" height="15" fill="rgb(254,84,49)" fg:x="30" fg:w="3"/><text x="2.5883%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.3383%" y="437" width="0.2338%" height="15" fill="rgb(235,85,21)" fg:x="30" fg:w="3"/><text x="2.5883%" y="447.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="2.4942%" y="421" width="0.0779%" height="15" fill="rgb(246,128,52)" fg:x="32" fg:w="1"/><text x="2.7442%" y="431.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.7280%" y="613" width="0.0779%" height="15" fill="rgb(243,114,49)" fg:x="35" fg:w="1"/><text x="2.9780%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="2.8059%" y="581" width="0.0779%" height="15" fill="rgb(240,224,22)" fg:x="36" fg:w="1"/><text x="3.0559%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="2.8839%" y="565" width="0.0779%" height="15" fill="rgb(247,201,52)" fg:x="37" fg:w="1"/><text x="3.1339%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="2.9618%" y="549" width="0.0779%" height="15" fill="rgb(231,70,45)" fg:x="38" fg:w="1"/><text x="3.2118%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="2.9618%" y="533" width="0.0779%" height="15" fill="rgb(217,215,20)" fg:x="38" fg:w="1"/><text x="3.2118%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (21 samples, 1.64%)</title><rect x="1.4809%" y="741" width="1.6368%" height="15" fill="rgb(226,170,30)" fg:x="19" fg:w="21"/><text x="1.7309%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.64%)</title><rect x="1.4809%" y="725" width="1.6368%" height="15" fill="rgb(220,190,43)" fg:x="19" fg:w="21"/><text x="1.7309%" y="735.50"></text></g><g><title>engine::internal::Entities::add_persisted (21 samples, 1.64%)</title><rect x="1.4809%" y="709" width="1.6368%" height="15" fill="rgb(218,20,18)" fg:x="19" fg:w="21"/><text x="1.7309%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity (11 samples, 0.86%)</title><rect x="2.2603%" y="693" width="0.8574%" height="15" fill="rgb(245,37,26)" fg:x="29" fg:w="11"/><text x="2.5103%" y="703.50"></text></g><g><title>serde_json::de::from_trait (7 samples, 0.55%)</title><rect x="2.5721%" y="677" width="0.5456%" height="15" fill="rgb(241,127,29)" fg:x="33" fg:w="7"/><text x="2.8221%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.55%)</title><rect x="2.5721%" y="661" width="0.5456%" height="15" fill="rgb(241,33,26)" fg:x="33" fg:w="7"/><text x="2.8221%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="2.7280%" y="645" width="0.3897%" height="15" fill="rgb(220,106,21)" fg:x="35" fg:w="5"/><text x="2.9780%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="2.7280%" y="629" width="0.3897%" height="15" fill="rgb(225,125,35)" fg:x="35" fg:w="5"/><text x="2.9780%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="2.8059%" y="613" width="0.3118%" height="15" fill="rgb(248,80,22)" fg:x="36" fg:w="4"/><text x="3.0559%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="2.8059%" y="597" width="0.3118%" height="15" fill="rgb(231,117,39)" fg:x="36" fg:w="4"/><text x="3.0559%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="2.8839%" y="581" width="0.2338%" height="15" fill="rgb(239,183,16)" fg:x="37" fg:w="3"/><text x="3.1339%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="2.9618%" y="565" width="0.1559%" height="15" fill="rgb(221,61,19)" fg:x="38" fg:w="2"/><text x="3.2118%" y="575.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="3.0398%" y="549" width="0.0779%" height="15" fill="rgb(239,196,44)" fg:x="39" fg:w="1"/><text x="3.2898%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.1177%" y="741" width="0.0779%" height="15" fill="rgb(206,113,19)" fg:x="40" fg:w="1"/><text x="3.3677%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.1177%" y="725" width="0.0779%" height="15" fill="rgb(245,114,12)" fg:x="40" fg:w="1"/><text x="3.3677%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="3.1956%" y="693" width="0.0779%" height="15" fill="rgb(247,89,39)" fg:x="41" fg:w="1"/><text x="3.4456%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.1956%" y="677" width="0.0779%" height="15" fill="rgb(213,85,14)" fg:x="41" fg:w="1"/><text x="3.4456%" y="687.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.23%)</title><rect x="3.1956%" y="741" width="0.2338%" height="15" fill="rgb(249,206,33)" fg:x="41" fg:w="3"/><text x="3.4456%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="3.1956%" y="725" width="0.2338%" height="15" fill="rgb(235,167,47)" fg:x="41" fg:w="3"/><text x="3.4456%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="3.1956%" y="709" width="0.2338%" height="15" fill="rgb(217,177,16)" fg:x="41" fg:w="3"/><text x="3.4456%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="3.2736%" y="693" width="0.1559%" height="15" fill="rgb(250,228,29)" fg:x="42" fg:w="2"/><text x="3.5236%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="3.2736%" y="677" width="0.1559%" height="15" fill="rgb(216,195,42)" fg:x="42" fg:w="2"/><text x="3.5236%" y="687.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (1 samples, 0.08%)</title><rect x="3.4295%" y="741" width="0.0779%" height="15" fill="rgb(232,192,32)" fg:x="44" fg:w="1"/><text x="3.6795%" y="751.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="3.4295%" y="725" width="0.0779%" height="15" fill="rgb(211,8,47)" fg:x="44" fg:w="1"/><text x="3.6795%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="3.4295%" y="709" width="0.0779%" height="15" fill="rgb(251,201,9)" fg:x="44" fg:w="1"/><text x="3.6795%" y="719.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="3.4295%" y="693" width="0.0779%" height="15" fill="rgb(206,185,47)" fg:x="44" fg:w="1"/><text x="3.6795%" y="703.50"></text></g><g><title>kernel::plugins::SessionPlugins::hooks (1 samples, 0.08%)</title><rect x="3.5074%" y="741" width="0.0779%" height="15" fill="rgb(245,54,32)" fg:x="45" fg:w="1"/><text x="3.7574%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.5853%" y="709" width="0.0779%" height="15" fill="rgb(208,1,8)" fg:x="46" fg:w="1"/><text x="3.8353%" y="719.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="3.5853%" y="693" width="0.0779%" height="15" fill="rgb(228,57,24)" fg:x="46" fg:w="1"/><text x="3.8353%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="3.5853%" y="677" width="0.0779%" height="15" fill="rgb(251,24,8)" fg:x="46" fg:w="1"/><text x="3.8353%" y="687.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="3.5853%" y="661" width="0.0779%" height="15" fill="rgb(236,196,50)" fg:x="46" fg:w="1"/><text x="3.8353%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="3.5853%" y="645" width="0.0779%" height="15" fill="rgb(246,222,29)" fg:x="46" fg:w="1"/><text x="3.8353%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="3.5853%" y="629" width="0.0779%" height="15" fill="rgb(211,34,40)" fg:x="46" fg:w="1"/><text x="3.8353%" y="639.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="3.5853%" y="613" width="0.0779%" height="15" fill="rgb(210,66,51)" fg:x="46" fg:w="1"/><text x="3.8353%" y="623.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="3.5853%" y="597" width="0.0779%" height="15" fill="rgb(250,56,43)" fg:x="46" fg:w="1"/><text x="3.8353%" y="607.50"></text></g><g><title>anyhow::error::object_drop (1 samples, 0.08%)</title><rect x="3.6633%" y="709" width="0.0779%" height="15" fill="rgb(240,111,50)" fg:x="47" fg:w="1"/><text x="3.9133%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;libloading::error::Error&gt; (1 samples, 0.08%)</title><rect x="3.6633%" y="693" width="0.0779%" height="15" fill="rgb(209,117,13)" fg:x="47" fg:w="1"/><text x="3.9133%" y="703.50"></text></g><g><title>libloading::os::unix::Library::open (11 samples, 0.86%)</title><rect x="3.7412%" y="709" width="0.8574%" height="15" fill="rgb(232,164,45)" fg:x="48" fg:w="11"/><text x="3.9912%" y="719.50"></text></g><g><title>dlopen (11 samples, 0.86%)</title><rect x="3.7412%" y="693" width="0.8574%" height="15" fill="rgb(205,69,32)" fg:x="48" fg:w="11"/><text x="3.9912%" y="703.50"></text></g><g><title>_dl_catch_error (11 samples, 0.86%)</title><rect x="3.7412%" y="677" width="0.8574%" height="15" fill="rgb(240,147,45)" fg:x="48" fg:w="11"/><text x="3.9912%" y="687.50"></text></g><g><title>_dl_catch_exception (11 samples, 0.86%)</title><rect x="3.7412%" y="661" width="0.8574%" height="15" fill="rgb(221,94,48)" fg:x="48" fg:w="11"/><text x="3.9912%" y="671.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.78%)</title><rect x="3.8192%" y="645" width="0.7794%" height="15" fill="rgb(249,209,17)" fg:x="49" fg:w="10"/><text x="4.0692%" y="655.50"></text></g><g><title>_dl_catch_exception (10 samples, 0.78%)</title><rect x="3.8192%" y="629" width="0.7794%" height="15" fill="rgb(228,57,28)" fg:x="49" fg:w="10"/><text x="4.0692%" y="639.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (42 samples, 3.27%)</title><rect x="1.4030%" y="773" width="3.2736%" height="15" fill="rgb(250,133,26)" fg:x="18" fg:w="42"/><text x="1.6530%" y="783.50">&lt;en..</text></g><g><title>engine::session::Session::new (42 samples, 3.27%)</title><rect x="1.4030%" y="757" width="3.2736%" height="15" fill="rgb(254,15,16)" fg:x="18" fg:w="42"/><text x="1.6530%" y="767.50">eng..</text></g><g><title>kernel::plugins::SessionPlugins::initialize (14 samples, 1.09%)</title><rect x="3.5853%" y="741" width="1.0912%" height="15" fill="rgb(209,147,42)" fg:x="46" fg:w="14"/><text x="3.8353%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (14 samples, 1.09%)</title><rect x="3.5853%" y="725" width="1.0912%" height="15" fill="rgb(208,5,29)" fg:x="46" fg:w="14"/><text x="3.8353%" y="735.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="4.5986%" y="709" width="0.0779%" height="15" fill="rgb(250,73,31)" fg:x="59" fg:w="1"/><text x="4.8486%" y="719.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="4.5986%" y="693" width="0.0779%" height="15" fill="rgb(238,45,10)" fg:x="59" fg:w="1"/><text x="4.8486%" y="703.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="4.5986%" y="677" width="0.0779%" height="15" fill="rgb(214,104,5)" fg:x="59" fg:w="1"/><text x="4.8486%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.08%)</title><rect x="4.5986%" y="661" width="0.0779%" height="15" fill="rgb(242,217,19)" fg:x="59" fg:w="1"/><text x="4.8486%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.08%)</title><rect x="4.5986%" y="645" width="0.0779%" height="15" fill="rgb(246,113,27)" fg:x="59" fg:w="1"/><text x="4.8486%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="4.7545%" y="677" width="0.1559%" height="15" fill="rgb(221,34,27)" fg:x="61" fg:w="2"/><text x="5.0045%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.7545%" y="661" width="0.1559%" height="15" fill="rgb(246,109,6)" fg:x="61" fg:w="2"/><text x="5.0045%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="4.7545%" y="645" width="0.1559%" height="15" fill="rgb(217,12,25)" fg:x="61" fg:w="2"/><text x="5.0045%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="4.7545%" y="629" width="0.1559%" height="15" fill="rgb(250,195,5)" fg:x="61" fg:w="2"/><text x="5.0045%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.7545%" y="613" width="0.1559%" height="15" fill="rgb(244,140,45)" fg:x="61" fg:w="2"/><text x="5.0045%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="4.9104%" y="661" width="0.1559%" height="15" fill="rgb(230,64,14)" fg:x="63" fg:w="2"/><text x="5.1604%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="4.9883%" y="645" width="0.0779%" height="15" fill="rgb(206,27,27)" fg:x="64" fg:w="1"/><text x="5.2383%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="4.9883%" y="629" width="0.0779%" height="15" fill="rgb(230,14,50)" fg:x="64" fg:w="1"/><text x="5.2383%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="4.9883%" y="613" width="0.0779%" height="15" fill="rgb(237,172,14)" fg:x="64" fg:w="1"/><text x="5.2383%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.1442%" y="613" width="0.0779%" height="15" fill="rgb(209,25,21)" fg:x="66" fg:w="1"/><text x="5.3942%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.1442%" y="597" width="0.0779%" height="15" fill="rgb(248,148,22)" fg:x="66" fg:w="1"/><text x="5.3942%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.1442%" y="581" width="0.0779%" height="15" fill="rgb(234,100,22)" fg:x="66" fg:w="1"/><text x="5.3942%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.1442%" y="565" width="0.0779%" height="15" fill="rgb(210,20,30)" fg:x="66" fg:w="1"/><text x="5.3942%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.1442%" y="549" width="0.0779%" height="15" fill="rgb(232,58,0)" fg:x="66" fg:w="1"/><text x="5.3942%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.1442%" y="629" width="0.1559%" height="15" fill="rgb(221,68,13)" fg:x="66" fg:w="2"/><text x="5.3942%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.2221%" y="613" width="0.0779%" height="15" fill="rgb(231,194,11)" fg:x="67" fg:w="1"/><text x="5.4721%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="5.1442%" y="645" width="0.2338%" height="15" fill="rgb(235,51,41)" fg:x="66" fg:w="3"/><text x="5.3942%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.3001%" y="629" width="0.0779%" height="15" fill="rgb(240,50,32)" fg:x="68" fg:w="1"/><text x="5.5501%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.3001%" y="613" width="0.0779%" height="15" fill="rgb(240,185,36)" fg:x="68" fg:w="1"/><text x="5.5501%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="5.3001%" y="597" width="0.0779%" height="15" fill="rgb(211,168,15)" fg:x="68" fg:w="1"/><text x="5.5501%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="5.3780%" y="645" width="0.1559%" height="15" fill="rgb(221,70,0)" fg:x="69" fg:w="2"/><text x="5.6280%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.4560%" y="629" width="0.0779%" height="15" fill="rgb(205,21,33)" fg:x="70" fg:w="1"/><text x="5.7060%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="5.5339%" y="597" width="0.0779%" height="15" fill="rgb(225,106,10)" fg:x="71" fg:w="1"/><text x="5.7839%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.5339%" y="581" width="0.0779%" height="15" fill="rgb(236,200,50)" fg:x="71" fg:w="1"/><text x="5.7839%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.5339%" y="645" width="0.1559%" height="15" fill="rgb(249,93,23)" fg:x="71" fg:w="2"/><text x="5.7839%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.5339%" y="629" width="0.1559%" height="15" fill="rgb(244,115,35)" fg:x="71" fg:w="2"/><text x="5.7839%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="5.5339%" y="613" width="0.1559%" height="15" fill="rgb(231,129,47)" fg:x="71" fg:w="2"/><text x="5.7839%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="5.6118%" y="597" width="0.0779%" height="15" fill="rgb(225,160,50)" fg:x="72" fg:w="1"/><text x="5.8618%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6118%" y="581" width="0.0779%" height="15" fill="rgb(218,135,23)" fg:x="72" fg:w="1"/><text x="5.8618%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="5.0663%" y="661" width="0.7015%" height="15" fill="rgb(227,119,14)" fg:x="65" fg:w="9"/><text x="5.3163%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="5.6898%" y="645" width="0.0779%" height="15" fill="rgb(242,138,13)" fg:x="73" fg:w="1"/><text x="5.9398%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="5.6898%" y="629" width="0.0779%" height="15" fill="rgb(215,11,16)" fg:x="73" fg:w="1"/><text x="5.9398%" y="639.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="5.6898%" y="613" width="0.0779%" height="15" fill="rgb(234,170,50)" fg:x="73" fg:w="1"/><text x="5.9398%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.25%)</title><rect x="4.7545%" y="693" width="1.2471%" height="15" fill="rgb(233,34,20)" fg:x="61" fg:w="16"/><text x="5.0045%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.09%)</title><rect x="4.9104%" y="677" width="1.0912%" height="15" fill="rgb(237,100,45)" fg:x="63" fg:w="14"/><text x="5.1604%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.23%)</title><rect x="5.7677%" y="661" width="0.2338%" height="15" fill="rgb(231,184,36)" fg:x="74" fg:w="3"/><text x="6.0177%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="5.8457%" y="645" width="0.1559%" height="15" fill="rgb(252,93,2)" fg:x="75" fg:w="2"/><text x="6.0957%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.0016%" y="661" width="0.0779%" height="15" fill="rgb(248,176,47)" fg:x="77" fg:w="1"/><text x="6.2516%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.2354%" y="597" width="0.0779%" height="15" fill="rgb(249,125,23)" fg:x="80" fg:w="1"/><text x="6.4854%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="6.0016%" y="693" width="0.3897%" height="15" fill="rgb(239,67,42)" fg:x="77" fg:w="5"/><text x="6.2516%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="6.0016%" y="677" width="0.3897%" height="15" fill="rgb(244,162,4)" fg:x="77" fg:w="5"/><text x="6.2516%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="6.0795%" y="661" width="0.3118%" height="15" fill="rgb(214,150,38)" fg:x="78" fg:w="4"/><text x="6.3295%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="6.1574%" y="645" width="0.2338%" height="15" fill="rgb(228,211,28)" fg:x="79" fg:w="3"/><text x="6.4074%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="6.2354%" y="629" width="0.1559%" height="15" fill="rgb(212,98,48)" fg:x="80" fg:w="2"/><text x="6.4854%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="6.2354%" y="613" width="0.1559%" height="15" fill="rgb(213,45,13)" fg:x="80" fg:w="2"/><text x="6.4854%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3133%" y="597" width="0.0779%" height="15" fill="rgb(218,35,29)" fg:x="81" fg:w="1"/><text x="6.5633%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="6.3133%" y="581" width="0.0779%" height="15" fill="rgb(244,13,3)" fg:x="81" fg:w="1"/><text x="6.5633%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="6.3133%" y="565" width="0.0779%" height="15" fill="rgb(235,170,19)" fg:x="81" fg:w="1"/><text x="6.5633%" y="575.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="6.3913%" y="677" width="0.0779%" height="15" fill="rgb(233,193,43)" fg:x="82" fg:w="1"/><text x="6.6413%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.4692%" y="645" width="0.0779%" height="15" fill="rgb(228,223,20)" fg:x="83" fg:w="1"/><text x="6.7192%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="6.5472%" y="645" width="0.0779%" height="15" fill="rgb(208,85,54)" fg:x="84" fg:w="1"/><text x="6.7972%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="6.5472%" y="629" width="0.0779%" height="15" fill="rgb(254,14,45)" fg:x="84" fg:w="1"/><text x="6.7972%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.5472%" y="613" width="0.0779%" height="15" fill="rgb(247,99,29)" fg:x="84" fg:w="1"/><text x="6.7972%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.6251%" y="613" width="0.0779%" height="15" fill="rgb(225,180,54)" fg:x="85" fg:w="1"/><text x="6.8751%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="6.6251%" y="645" width="0.1559%" height="15" fill="rgb(239,88,43)" fg:x="85" fg:w="2"/><text x="6.8751%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="6.6251%" y="629" width="0.1559%" height="15" fill="rgb(209,47,11)" fg:x="85" fg:w="2"/><text x="6.8751%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7030%" y="613" width="0.0779%" height="15" fill="rgb(219,179,23)" fg:x="86" fg:w="1"/><text x="6.9530%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7030%" y="597" width="0.0779%" height="15" fill="rgb(213,183,19)" fg:x="86" fg:w="1"/><text x="6.9530%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.7030%" y="581" width="0.0779%" height="15" fill="rgb(210,11,9)" fg:x="86" fg:w="1"/><text x="6.9530%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7810%" y="629" width="0.0779%" height="15" fill="rgb(239,194,16)" fg:x="87" fg:w="1"/><text x="7.0310%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.7810%" y="613" width="0.0779%" height="15" fill="rgb(246,23,50)" fg:x="87" fg:w="1"/><text x="7.0310%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="6.7810%" y="597" width="0.0779%" height="15" fill="rgb(245,10,41)" fg:x="87" fg:w="1"/><text x="7.0310%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8589%" y="597" width="0.0779%" height="15" fill="rgb(228,43,24)" fg:x="88" fg:w="1"/><text x="7.1089%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="6.8589%" y="581" width="0.0779%" height="15" fill="rgb(220,151,0)" fg:x="88" fg:w="1"/><text x="7.1089%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8589%" y="565" width="0.0779%" height="15" fill="rgb(232,219,10)" fg:x="88" fg:w="1"/><text x="7.1089%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.9369%" y="565" width="0.0779%" height="15" fill="rgb(227,217,48)" fg:x="89" fg:w="1"/><text x="7.1869%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="6.9369%" y="597" width="0.1559%" height="15" fill="rgb(210,66,35)" fg:x="89" fg:w="2"/><text x="7.1869%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="6.9369%" y="581" width="0.1559%" height="15" fill="rgb(254,6,7)" fg:x="89" fg:w="2"/><text x="7.1869%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.0148%" y="565" width="0.0779%" height="15" fill="rgb(235,222,42)" fg:x="90" fg:w="1"/><text x="7.2648%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.1707%" y="565" width="0.0779%" height="15" fill="rgb(245,126,5)" fg:x="92" fg:w="1"/><text x="7.4207%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.1707%" y="549" width="0.0779%" height="15" fill="rgb(215,73,17)" fg:x="92" fg:w="1"/><text x="7.4207%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.1707%" y="533" width="0.0779%" height="15" fill="rgb(219,198,52)" fg:x="92" fg:w="1"/><text x="7.4207%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="7.1707%" y="581" width="0.1559%" height="15" fill="rgb(217,159,18)" fg:x="92" fg:w="2"/><text x="7.4207%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.2486%" y="565" width="0.0779%" height="15" fill="rgb(212,177,18)" fg:x="93" fg:w="1"/><text x="7.4986%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.2486%" y="549" width="0.0779%" height="15" fill="rgb(241,10,11)" fg:x="93" fg:w="1"/><text x="7.4986%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="7.2486%" y="533" width="0.0779%" height="15" fill="rgb(232,114,35)" fg:x="93" fg:w="1"/><text x="7.4986%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="7.2486%" y="517" width="0.0779%" height="15" fill="rgb(238,222,8)" fg:x="93" fg:w="1"/><text x="7.4986%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.2486%" y="501" width="0.0779%" height="15" fill="rgb(251,153,44)" fg:x="93" fg:w="1"/><text x="7.4986%" y="511.50"></text></g><g><title>engine::session::Session::flush (34 samples, 2.65%)</title><rect x="4.7545%" y="757" width="2.6500%" height="15" fill="rgb(210,140,51)" fg:x="61" fg:w="34"/><text x="5.0045%" y="767.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (34 samples, 2.65%)</title><rect x="4.7545%" y="741" width="2.6500%" height="15" fill="rgb(222,63,0)" fg:x="61" fg:w="34"/><text x="5.0045%" y="751.50">en..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (34 samples, 2.65%)</title><rect x="4.7545%" y="725" width="2.6500%" height="15" fill="rgb(240,18,40)" fg:x="61" fg:w="34"/><text x="5.0045%" y="735.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (34 samples, 2.65%)</title><rect x="4.7545%" y="709" width="2.6500%" height="15" fill="rgb(237,88,16)" fg:x="61" fg:w="34"/><text x="5.0045%" y="719.50">en..</text></g><g><title>kernel::model::any_entity_changes (13 samples, 1.01%)</title><rect x="6.3913%" y="693" width="1.0133%" height="15" fill="rgb(251,117,13)" fg:x="82" fg:w="13"/><text x="6.6413%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (12 samples, 0.94%)</title><rect x="6.4692%" y="677" width="0.9353%" height="15" fill="rgb(251,228,8)" fg:x="83" fg:w="12"/><text x="6.7192%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.94%)</title><rect x="6.4692%" y="661" width="0.9353%" height="15" fill="rgb(205,107,49)" fg:x="83" fg:w="12"/><text x="6.7192%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.62%)</title><rect x="6.7810%" y="645" width="0.6235%" height="15" fill="rgb(238,72,41)" fg:x="87" fg:w="8"/><text x="7.0310%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.55%)</title><rect x="6.8589%" y="629" width="0.5456%" height="15" fill="rgb(248,183,52)" fg:x="88" fg:w="7"/><text x="7.1089%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="6.8589%" y="613" width="0.5456%" height="15" fill="rgb(215,58,20)" fg:x="88" fg:w="7"/><text x="7.1089%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="7.0928%" y="597" width="0.3118%" height="15" fill="rgb(209,49,13)" fg:x="91" fg:w="4"/><text x="7.3428%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="7.3266%" y="581" width="0.0779%" height="15" fill="rgb(208,113,17)" fg:x="94" fg:w="1"/><text x="7.5766%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="7.4825%" y="693" width="0.1559%" height="15" fill="rgb(208,14,22)" fg:x="96" fg:w="2"/><text x="7.7325%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="7.4825%" y="677" width="0.1559%" height="15" fill="rgb(222,95,2)" fg:x="96" fg:w="2"/><text x="7.7325%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="7.4825%" y="661" width="0.1559%" height="15" fill="rgb(253,180,37)" fg:x="96" fg:w="2"/><text x="7.7325%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="7.4825%" y="645" width="0.1559%" height="15" fill="rgb(250,81,33)" fg:x="96" fg:w="2"/><text x="7.7325%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="7.4825%" y="629" width="0.1559%" height="15" fill="rgb(251,151,41)" fg:x="96" fg:w="2"/><text x="7.7325%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="7.4825%" y="613" width="0.1559%" height="15" fill="rgb(210,135,17)" fg:x="96" fg:w="2"/><text x="7.7325%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.5604%" y="597" width="0.0779%" height="15" fill="rgb(239,21,29)" fg:x="97" fg:w="1"/><text x="7.8104%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="7.5604%" y="581" width="0.0779%" height="15" fill="rgb(231,215,16)" fg:x="97" fg:w="1"/><text x="7.8104%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.5604%" y="565" width="0.0779%" height="15" fill="rgb(239,151,54)" fg:x="97" fg:w="1"/><text x="7.8104%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="7.4045%" y="709" width="0.3897%" height="15" fill="rgb(222,122,38)" fg:x="95" fg:w="5"/><text x="7.6545%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="7.6383%" y="693" width="0.1559%" height="15" fill="rgb(243,128,1)" fg:x="98" fg:w="2"/><text x="7.8883%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="7.6383%" y="677" width="0.1559%" height="15" fill="rgb(225,74,21)" fg:x="98" fg:w="2"/><text x="7.8883%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="7.6383%" y="661" width="0.1559%" height="15" fill="rgb(216,210,10)" fg:x="98" fg:w="2"/><text x="7.8883%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="7.6383%" y="645" width="0.1559%" height="15" fill="rgb(228,76,19)" fg:x="98" fg:w="2"/><text x="7.8883%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="7.6383%" y="629" width="0.1559%" height="15" fill="rgb(236,80,34)" fg:x="98" fg:w="2"/><text x="7.8883%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="7.6383%" y="613" width="0.1559%" height="15" fill="rgb(225,173,23)" fg:x="98" fg:w="2"/><text x="7.8883%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.7163%" y="597" width="0.0779%" height="15" fill="rgb(253,38,1)" fg:x="99" fg:w="1"/><text x="7.9663%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.7163%" y="581" width="0.0779%" height="15" fill="rgb(206,155,35)" fg:x="99" fg:w="1"/><text x="7.9663%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.7163%" y="565" width="0.0779%" height="15" fill="rgb(254,27,53)" fg:x="99" fg:w="1"/><text x="7.9663%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.47%)</title><rect x="7.4045%" y="741" width="0.4677%" height="15" fill="rgb(225,52,41)" fg:x="95" fg:w="6"/><text x="7.6545%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.47%)</title><rect x="7.4045%" y="725" width="0.4677%" height="15" fill="rgb(244,53,18)" fg:x="95" fg:w="6"/><text x="7.6545%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="7.7942%" y="709" width="0.0779%" height="15" fill="rgb(254,206,48)" fg:x="100" fg:w="1"/><text x="8.0442%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.7942%" y="693" width="0.0779%" height="15" fill="rgb(236,182,23)" fg:x="100" fg:w="1"/><text x="8.0442%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="7.7942%" y="677" width="0.0779%" height="15" fill="rgb(236,191,37)" fg:x="100" fg:w="1"/><text x="8.0442%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="7.9501%" y="725" width="0.0779%" height="15" fill="rgb(245,53,8)" fg:x="102" fg:w="1"/><text x="8.2001%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="7.9501%" y="709" width="0.0779%" height="15" fill="rgb(245,147,9)" fg:x="102" fg:w="1"/><text x="8.2001%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="7.9501%" y="693" width="0.0779%" height="15" fill="rgb(218,24,48)" fg:x="102" fg:w="1"/><text x="8.2001%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="7.9501%" y="677" width="0.0779%" height="15" fill="rgb(254,23,9)" fg:x="102" fg:w="1"/><text x="8.2001%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="7.9501%" y="661" width="0.0779%" height="15" fill="rgb(244,105,9)" fg:x="102" fg:w="1"/><text x="8.2001%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.9501%" y="645" width="0.0779%" height="15" fill="rgb(212,142,22)" fg:x="102" fg:w="1"/><text x="8.2001%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.9501%" y="629" width="0.0779%" height="15" fill="rgb(221,114,49)" fg:x="102" fg:w="1"/><text x="8.2001%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.9501%" y="613" width="0.0779%" height="15" fill="rgb(223,210,25)" fg:x="102" fg:w="1"/><text x="8.2001%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.9501%" y="597" width="0.0779%" height="15" fill="rgb(235,162,44)" fg:x="102" fg:w="1"/><text x="8.2001%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="7.9501%" y="581" width="0.0779%" height="15" fill="rgb(237,65,45)" fg:x="102" fg:w="1"/><text x="8.2001%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="7.9501%" y="565" width="0.0779%" height="15" fill="rgb(208,79,9)" fg:x="102" fg:w="1"/><text x="8.2001%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.1060%" y="677" width="0.0779%" height="15" fill="rgb(215,228,8)" fg:x="104" fg:w="1"/><text x="8.3560%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.1060%" y="661" width="0.0779%" height="15" fill="rgb(205,185,17)" fg:x="104" fg:w="1"/><text x="8.3560%" y="671.50"></text></g><g><title>plugins_core::build::Build::holding (11 samples, 0.86%)</title><rect x="7.4045%" y="757" width="0.8574%" height="15" fill="rgb(213,62,36)" fg:x="95" fg:w="11"/><text x="7.6545%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.39%)</title><rect x="7.8722%" y="741" width="0.3897%" height="15" fill="rgb(209,34,9)" fg:x="101" fg:w="5"/><text x="8.1222%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.23%)</title><rect x="8.0281%" y="725" width="0.2338%" height="15" fill="rgb(246,151,27)" fg:x="103" fg:w="3"/><text x="8.2781%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="8.0281%" y="709" width="0.2338%" height="15" fill="rgb(218,206,3)" fg:x="103" fg:w="3"/><text x="8.2781%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.23%)</title><rect x="8.0281%" y="693" width="0.2338%" height="15" fill="rgb(242,202,1)" fg:x="103" fg:w="3"/><text x="8.2781%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="8.1839%" y="677" width="0.0779%" height="15" fill="rgb(227,185,16)" fg:x="105" fg:w="1"/><text x="8.4339%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="8.1839%" y="661" width="0.0779%" height="15" fill="rgb(241,1,14)" fg:x="105" fg:w="1"/><text x="8.4339%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="8.1839%" y="645" width="0.0779%" height="15" fill="rgb(212,113,25)" fg:x="105" fg:w="1"/><text x="8.4339%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.1839%" y="629" width="0.0779%" height="15" fill="rgb(247,37,43)" fg:x="105" fg:w="1"/><text x="8.4339%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.1839%" y="613" width="0.0779%" height="15" fill="rgb(226,54,8)" fg:x="105" fg:w="1"/><text x="8.4339%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="8.1839%" y="597" width="0.0779%" height="15" fill="rgb(251,205,25)" fg:x="105" fg:w="1"/><text x="8.4339%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.1839%" y="581" width="0.0779%" height="15" fill="rgb(246,87,35)" fg:x="105" fg:w="1"/><text x="8.4339%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="8.1839%" y="565" width="0.0779%" height="15" fill="rgb(251,145,46)" fg:x="105" fg:w="1"/><text x="8.4339%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="8.1839%" y="549" width="0.0779%" height="15" fill="rgb(210,210,33)" fg:x="105" fg:w="1"/><text x="8.4339%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="8.1839%" y="533" width="0.0779%" height="15" fill="rgb(221,151,11)" fg:x="105" fg:w="1"/><text x="8.4339%" y="543.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="8.2619%" y="709" width="0.0779%" height="15" fill="rgb(208,160,28)" fg:x="106" fg:w="1"/><text x="8.5119%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="8.2619%" y="693" width="0.0779%" height="15" fill="rgb(243,69,29)" fg:x="106" fg:w="1"/><text x="8.5119%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.2619%" y="677" width="0.0779%" height="15" fill="rgb(224,144,4)" fg:x="106" fg:w="1"/><text x="8.5119%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (3 samples, 0.23%)</title><rect x="8.2619%" y="757" width="0.2338%" height="15" fill="rgb(211,140,38)" fg:x="106" fg:w="3"/><text x="8.5119%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="8.2619%" y="741" width="0.2338%" height="15" fill="rgb(252,189,15)" fg:x="106" fg:w="3"/><text x="8.5119%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="8.2619%" y="725" width="0.2338%" height="15" fill="rgb(251,175,23)" fg:x="106" fg:w="3"/><text x="8.5119%" y="735.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="8.3398%" y="709" width="0.1559%" height="15" fill="rgb(212,184,11)" fg:x="107" fg:w="2"/><text x="8.5898%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (2 samples, 0.16%)</title><rect x="8.3398%" y="693" width="0.1559%" height="15" fill="rgb(217,205,6)" fg:x="107" fg:w="2"/><text x="8.5898%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="8.4178%" y="677" width="0.0779%" height="15" fill="rgb(235,45,45)" fg:x="108" fg:w="1"/><text x="8.6678%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.4178%" y="661" width="0.0779%" height="15" fill="rgb(211,157,53)" fg:x="108" fg:w="1"/><text x="8.6678%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="8.4957%" y="709" width="0.0779%" height="15" fill="rgb(212,13,8)" fg:x="109" fg:w="1"/><text x="8.7457%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="8.4957%" y="693" width="0.0779%" height="15" fill="rgb(218,80,36)" fg:x="109" fg:w="1"/><text x="8.7457%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="8.4957%" y="757" width="0.1559%" height="15" fill="rgb(211,123,43)" fg:x="109" fg:w="2"/><text x="8.7457%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="8.4957%" y="741" width="0.1559%" height="15" fill="rgb(206,165,2)" fg:x="109" fg:w="2"/><text x="8.7457%" y="751.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="8.4957%" y="725" width="0.1559%" height="15" fill="rgb(248,63,35)" fg:x="109" fg:w="2"/><text x="8.7457%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="8.5737%" y="709" width="0.0779%" height="15" fill="rgb(219,133,41)" fg:x="110" fg:w="1"/><text x="8.8237%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.5737%" y="693" width="0.0779%" height="15" fill="rgb(206,175,46)" fg:x="110" fg:w="1"/><text x="8.8237%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="8.6516%" y="725" width="0.0779%" height="15" fill="rgb(224,41,35)" fg:x="111" fg:w="1"/><text x="8.9016%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="8.6516%" y="709" width="0.0779%" height="15" fill="rgb(226,113,24)" fg:x="111" fg:w="1"/><text x="8.9016%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6516%" y="693" width="0.0779%" height="15" fill="rgb(219,51,41)" fg:x="111" fg:w="1"/><text x="8.9016%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.6516%" y="677" width="0.0779%" height="15" fill="rgb(220,145,47)" fg:x="111" fg:w="1"/><text x="8.9016%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="8.6516%" y="661" width="0.0779%" height="15" fill="rgb(239,121,47)" fg:x="111" fg:w="1"/><text x="8.9016%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="8.6516%" y="645" width="0.0779%" height="15" fill="rgb(207,60,40)" fg:x="111" fg:w="1"/><text x="8.9016%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="8.6516%" y="629" width="0.0779%" height="15" fill="rgb(224,229,11)" fg:x="111" fg:w="1"/><text x="8.9016%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6516%" y="613" width="0.0779%" height="15" fill="rgb(252,28,32)" fg:x="111" fg:w="1"/><text x="8.9016%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="8.6516%" y="597" width="0.0779%" height="15" fill="rgb(207,52,49)" fg:x="111" fg:w="1"/><text x="8.9016%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="8.6516%" y="581" width="0.0779%" height="15" fill="rgb(243,51,50)" fg:x="111" fg:w="1"/><text x="8.9016%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="8.6516%" y="565" width="0.0779%" height="15" fill="rgb(212,92,21)" fg:x="111" fg:w="1"/><text x="8.9016%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="8.6516%" y="549" width="0.0779%" height="15" fill="rgb(230,183,50)" fg:x="111" fg:w="1"/><text x="8.9016%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="8.6516%" y="533" width="0.0779%" height="15" fill="rgb(225,48,9)" fg:x="111" fg:w="1"/><text x="8.9016%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.6516%" y="517" width="0.0779%" height="15" fill="rgb(254,44,4)" fg:x="111" fg:w="1"/><text x="8.9016%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.7295%" y="645" width="0.0779%" height="15" fill="rgb(252,128,37)" fg:x="112" fg:w="1"/><text x="8.9795%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.7295%" y="629" width="0.0779%" height="15" fill="rgb(227,178,8)" fg:x="112" fg:w="1"/><text x="8.9795%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="8.6516%" y="741" width="0.2338%" height="15" fill="rgb(205,206,32)" fg:x="111" fg:w="3"/><text x="8.9016%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="8.7295%" y="725" width="0.1559%" height="15" fill="rgb(220,218,22)" fg:x="112" fg:w="2"/><text x="8.9795%" y="735.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="8.7295%" y="709" width="0.1559%" height="15" fill="rgb(236,41,28)" fg:x="112" fg:w="2"/><text x="8.9795%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="8.7295%" y="693" width="0.1559%" height="15" fill="rgb(219,37,7)" fg:x="112" fg:w="2"/><text x="8.9795%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="8.7295%" y="677" width="0.1559%" height="15" fill="rgb(206,160,15)" fg:x="112" fg:w="2"/><text x="8.9795%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="8.7295%" y="661" width="0.1559%" height="15" fill="rgb(208,82,21)" fg:x="112" fg:w="2"/><text x="8.9795%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="645" width="0.0779%" height="15" fill="rgb(226,130,25)" fg:x="113" fg:w="1"/><text x="9.0575%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="629" width="0.0779%" height="15" fill="rgb(212,72,24)" fg:x="113" fg:w="1"/><text x="9.0575%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="613" width="0.0779%" height="15" fill="rgb(206,28,16)" fg:x="113" fg:w="1"/><text x="9.0575%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="597" width="0.0779%" height="15" fill="rgb(249,41,5)" fg:x="113" fg:w="1"/><text x="9.0575%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="581" width="0.0779%" height="15" fill="rgb(233,96,48)" fg:x="113" fg:w="1"/><text x="9.0575%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="8.8075%" y="565" width="0.0779%" height="15" fill="rgb(240,198,11)" fg:x="113" fg:w="1"/><text x="9.0575%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="8.8075%" y="549" width="0.0779%" height="15" fill="rgb(209,175,35)" fg:x="113" fg:w="1"/><text x="9.0575%" y="559.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="8.8854%" y="693" width="0.0779%" height="15" fill="rgb(214,40,51)" fg:x="114" fg:w="1"/><text x="9.1354%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="8.8854%" y="677" width="0.0779%" height="15" fill="rgb(252,56,4)" fg:x="114" fg:w="1"/><text x="9.1354%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="8.9634%" y="581" width="0.0779%" height="15" fill="rgb(219,131,5)" fg:x="115" fg:w="1"/><text x="9.2134%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9634%" y="565" width="0.0779%" height="15" fill="rgb(223,67,53)" fg:x="115" fg:w="1"/><text x="9.2134%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="8.9634%" y="549" width="0.0779%" height="15" fill="rgb(227,154,8)" fg:x="115" fg:w="1"/><text x="9.2134%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="8.9634%" y="693" width="0.1559%" height="15" fill="rgb(216,174,51)" fg:x="115" fg:w="2"/><text x="9.2134%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="8.9634%" y="677" width="0.1559%" height="15" fill="rgb(239,60,34)" fg:x="115" fg:w="2"/><text x="9.2134%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="8.9634%" y="661" width="0.1559%" height="15" fill="rgb(236,165,48)" fg:x="115" fg:w="2"/><text x="9.2134%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="8.9634%" y="645" width="0.1559%" height="15" fill="rgb(210,37,26)" fg:x="115" fg:w="2"/><text x="9.2134%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="8.9634%" y="629" width="0.1559%" height="15" fill="rgb(211,3,17)" fg:x="115" fg:w="2"/><text x="9.2134%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="8.9634%" y="613" width="0.1559%" height="15" fill="rgb(234,88,49)" fg:x="115" fg:w="2"/><text x="9.2134%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="8.9634%" y="597" width="0.1559%" height="15" fill="rgb(233,40,17)" fg:x="115" fg:w="2"/><text x="9.2134%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.0413%" y="581" width="0.0779%" height="15" fill="rgb(235,127,31)" fg:x="116" fg:w="1"/><text x="9.2913%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="9.1193%" y="677" width="0.0779%" height="15" fill="rgb(248,167,17)" fg:x="117" fg:w="1"/><text x="9.3693%" y="687.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="9.1193%" y="661" width="0.0779%" height="15" fill="rgb(218,179,8)" fg:x="117" fg:w="1"/><text x="9.3693%" y="671.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="9.1193%" y="645" width="0.0779%" height="15" fill="rgb(216,92,14)" fg:x="117" fg:w="1"/><text x="9.3693%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="9.1193%" y="629" width="0.0779%" height="15" fill="rgb(221,198,46)" fg:x="117" fg:w="1"/><text x="9.3693%" y="639.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="9.1193%" y="613" width="0.0779%" height="15" fill="rgb(244,7,25)" fg:x="117" fg:w="1"/><text x="9.3693%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.1193%" y="597" width="0.0779%" height="15" fill="rgb(233,75,6)" fg:x="117" fg:w="1"/><text x="9.3693%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="9.1193%" y="581" width="0.0779%" height="15" fill="rgb(240,189,41)" fg:x="117" fg:w="1"/><text x="9.3693%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1193%" y="565" width="0.0779%" height="15" fill="rgb(237,157,21)" fg:x="117" fg:w="1"/><text x="9.3693%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1193%" y="549" width="0.0779%" height="15" fill="rgb(210,136,49)" fg:x="117" fg:w="1"/><text x="9.3693%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1193%" y="533" width="0.0779%" height="15" fill="rgb(210,68,29)" fg:x="117" fg:w="1"/><text x="9.3693%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="9.1193%" y="517" width="0.0779%" height="15" fill="rgb(247,207,20)" fg:x="117" fg:w="1"/><text x="9.3693%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="9.1193%" y="501" width="0.0779%" height="15" fill="rgb(224,73,48)" fg:x="117" fg:w="1"/><text x="9.3693%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="9.1193%" y="693" width="0.1559%" height="15" fill="rgb(215,136,47)" fg:x="117" fg:w="2"/><text x="9.3693%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="9.1972%" y="677" width="0.0779%" height="15" fill="rgb(232,222,16)" fg:x="118" fg:w="1"/><text x="9.4472%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="9.1972%" y="661" width="0.0779%" height="15" fill="rgb(249,202,47)" fg:x="118" fg:w="1"/><text x="9.4472%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="9.1972%" y="645" width="0.0779%" height="15" fill="rgb(236,56,8)" fg:x="118" fg:w="1"/><text x="9.4472%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="9.1972%" y="629" width="0.0779%" height="15" fill="rgb(222,6,3)" fg:x="118" fg:w="1"/><text x="9.4472%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="9.1972%" y="613" width="0.0779%" height="15" fill="rgb(254,222,28)" fg:x="118" fg:w="1"/><text x="9.4472%" y="623.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.1972%" y="597" width="0.0779%" height="15" fill="rgb(219,57,23)" fg:x="118" fg:w="1"/><text x="9.4472%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.1972%" y="581" width="0.0779%" height="15" fill="rgb(251,106,48)" fg:x="118" fg:w="1"/><text x="9.4472%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1972%" y="565" width="0.0779%" height="15" fill="rgb(242,2,23)" fg:x="118" fg:w="1"/><text x="9.4472%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.1972%" y="549" width="0.0779%" height="15" fill="rgb(212,109,31)" fg:x="118" fg:w="1"/><text x="9.4472%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1972%" y="533" width="0.0779%" height="15" fill="rgb(241,9,22)" fg:x="118" fg:w="1"/><text x="9.4472%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="9.1972%" y="517" width="0.0779%" height="15" fill="rgb(209,64,27)" fg:x="118" fg:w="1"/><text x="9.4472%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1972%" y="501" width="0.0779%" height="15" fill="rgb(248,13,44)" fg:x="118" fg:w="1"/><text x="9.4472%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="9.1972%" y="485" width="0.0779%" height="15" fill="rgb(213,86,6)" fg:x="118" fg:w="1"/><text x="9.4472%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="9.1972%" y="469" width="0.0779%" height="15" fill="rgb(247,11,18)" fg:x="118" fg:w="1"/><text x="9.4472%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.47%)</title><rect x="8.8854%" y="741" width="0.4677%" height="15" fill="rgb(252,31,11)" fg:x="114" fg:w="6"/><text x="9.1354%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.47%)</title><rect x="8.8854%" y="725" width="0.4677%" height="15" fill="rgb(215,63,51)" fg:x="114" fg:w="6"/><text x="9.1354%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (6 samples, 0.47%)</title><rect x="8.8854%" y="709" width="0.4677%" height="15" fill="rgb(222,180,4)" fg:x="114" fg:w="6"/><text x="9.1354%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="9.2751%" y="693" width="0.0779%" height="15" fill="rgb(233,4,23)" fg:x="119" fg:w="1"/><text x="9.5251%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="9.2751%" y="677" width="0.0779%" height="15" fill="rgb(230,116,22)" fg:x="119" fg:w="1"/><text x="9.5251%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="9.2751%" y="661" width="0.0779%" height="15" fill="rgb(222,20,14)" fg:x="119" fg:w="1"/><text x="9.5251%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="9.2751%" y="645" width="0.0779%" height="15" fill="rgb(210,176,43)" fg:x="119" fg:w="1"/><text x="9.5251%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="9.2751%" y="629" width="0.0779%" height="15" fill="rgb(219,67,32)" fg:x="119" fg:w="1"/><text x="9.5251%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.2751%" y="613" width="0.0779%" height="15" fill="rgb(228,91,39)" fg:x="119" fg:w="1"/><text x="9.5251%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="9.2751%" y="597" width="0.0779%" height="15" fill="rgb(254,63,14)" fg:x="119" fg:w="1"/><text x="9.5251%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="9.2751%" y="581" width="0.0779%" height="15" fill="rgb(216,171,39)" fg:x="119" fg:w="1"/><text x="9.5251%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="9.2751%" y="565" width="0.0779%" height="15" fill="rgb(248,68,25)" fg:x="119" fg:w="1"/><text x="9.5251%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="9.2751%" y="549" width="0.0779%" height="15" fill="rgb(239,63,16)" fg:x="119" fg:w="1"/><text x="9.5251%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="9.3531%" y="709" width="0.0779%" height="15" fill="rgb(225,111,43)" fg:x="120" fg:w="1"/><text x="9.6031%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3531%" y="693" width="0.0779%" height="15" fill="rgb(246,165,17)" fg:x="120" fg:w="1"/><text x="9.6031%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="9.3531%" y="677" width="0.0779%" height="15" fill="rgb(208,124,1)" fg:x="120" fg:w="1"/><text x="9.6031%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="9.3531%" y="661" width="0.0779%" height="15" fill="rgb(234,147,33)" fg:x="120" fg:w="1"/><text x="9.6031%" y="671.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="9.4310%" y="709" width="0.0779%" height="15" fill="rgb(240,86,30)" fg:x="121" fg:w="1"/><text x="9.6810%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="9.4310%" y="693" width="0.0779%" height="15" fill="rgb(237,34,51)" fg:x="121" fg:w="1"/><text x="9.6810%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="9.4310%" y="677" width="0.0779%" height="15" fill="rgb(232,131,41)" fg:x="121" fg:w="1"/><text x="9.6810%" y="687.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="9.5090%" y="709" width="0.0779%" height="15" fill="rgb(227,129,53)" fg:x="122" fg:w="1"/><text x="9.7590%" y="719.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="9.5869%" y="661" width="0.1559%" height="15" fill="rgb(230,90,35)" fg:x="123" fg:w="2"/><text x="9.8369%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.5869%" y="645" width="0.1559%" height="15" fill="rgb(248,88,27)" fg:x="123" fg:w="2"/><text x="9.8369%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.5869%" y="629" width="0.1559%" height="15" fill="rgb(223,18,17)" fg:x="123" fg:w="2"/><text x="9.8369%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.5869%" y="613" width="0.1559%" height="15" fill="rgb(241,11,10)" fg:x="123" fg:w="2"/><text x="9.8369%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="9.7428%" y="645" width="0.0779%" height="15" fill="rgb(232,111,52)" fg:x="125" fg:w="1"/><text x="9.9928%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.8207%" y="645" width="0.1559%" height="15" fill="rgb(228,67,8)" fg:x="126" fg:w="2"/><text x="10.0707%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.8207%" y="629" width="0.1559%" height="15" fill="rgb(251,168,31)" fg:x="126" fg:w="2"/><text x="10.0707%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.8207%" y="613" width="0.1559%" height="15" fill="rgb(249,164,11)" fg:x="126" fg:w="2"/><text x="10.0707%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="9.8207%" y="597" width="0.1559%" height="15" fill="rgb(239,81,9)" fg:x="126" fg:w="2"/><text x="10.0707%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="9.8987%" y="581" width="0.0779%" height="15" fill="rgb(222,145,38)" fg:x="127" fg:w="1"/><text x="10.1487%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="9.8987%" y="565" width="0.0779%" height="15" fill="rgb(238,80,54)" fg:x="127" fg:w="1"/><text x="10.1487%" y="575.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="9.8987%" y="549" width="0.0779%" height="15" fill="rgb(237,116,16)" fg:x="127" fg:w="1"/><text x="10.1487%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="10.1325%" y="629" width="0.0779%" height="15" fill="rgb(218,135,19)" fg:x="130" fg:w="1"/><text x="10.3825%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.2104%" y="629" width="0.0779%" height="15" fill="rgb(216,207,44)" fg:x="131" fg:w="1"/><text x="10.4604%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2104%" y="613" width="0.0779%" height="15" fill="rgb(226,152,40)" fg:x="131" fg:w="1"/><text x="10.4604%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.2104%" y="597" width="0.0779%" height="15" fill="rgb(219,98,35)" fg:x="131" fg:w="1"/><text x="10.4604%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.2884%" y="629" width="0.0779%" height="15" fill="rgb(222,136,46)" fg:x="132" fg:w="1"/><text x="10.5384%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.4443%" y="613" width="0.0779%" height="15" fill="rgb(222,71,8)" fg:x="134" fg:w="1"/><text x="10.6943%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.4443%" y="597" width="0.0779%" height="15" fill="rgb(209,89,53)" fg:x="134" fg:w="1"/><text x="10.6943%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.4443%" y="581" width="0.0779%" height="15" fill="rgb(210,97,51)" fg:x="134" fg:w="1"/><text x="10.6943%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.4443%" y="565" width="0.0779%" height="15" fill="rgb(248,65,21)" fg:x="134" fg:w="1"/><text x="10.6943%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="10.6002%" y="581" width="0.0779%" height="15" fill="rgb(222,5,31)" fg:x="136" fg:w="1"/><text x="10.8502%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="9.9766%" y="645" width="0.7794%" height="15" fill="rgb(241,16,30)" fg:x="128" fg:w="10"/><text x="10.2266%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="10.3663%" y="629" width="0.3897%" height="15" fill="rgb(215,86,30)" fg:x="133" fg:w="5"/><text x="10.6163%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="10.5222%" y="613" width="0.2338%" height="15" fill="rgb(235,26,44)" fg:x="135" fg:w="3"/><text x="10.7722%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="10.5222%" y="597" width="0.2338%" height="15" fill="rgb(228,147,14)" fg:x="135" fg:w="3"/><text x="10.7722%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="10.6781%" y="581" width="0.0779%" height="15" fill="rgb(253,38,50)" fg:x="137" fg:w="1"/><text x="10.9281%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="10.6781%" y="565" width="0.0779%" height="15" fill="rgb(251,151,16)" fg:x="137" fg:w="1"/><text x="10.9281%" y="575.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="10.6781%" y="549" width="0.0779%" height="15" fill="rgb(224,64,19)" fg:x="137" fg:w="1"/><text x="10.9281%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="10.6781%" y="533" width="0.0779%" height="15" fill="rgb(235,214,47)" fg:x="137" fg:w="1"/><text x="10.9281%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.6781%" y="517" width="0.0779%" height="15" fill="rgb(218,15,19)" fg:x="137" fg:w="1"/><text x="10.9281%" y="527.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (17 samples, 1.33%)</title><rect x="9.5869%" y="677" width="1.3250%" height="15" fill="rgb(247,209,3)" fg:x="123" fg:w="17"/><text x="9.8369%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="9.7428%" y="661" width="1.1691%" height="15" fill="rgb(217,29,2)" fg:x="125" fg:w="15"/><text x="9.9928%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="10.7560%" y="645" width="0.1559%" height="15" fill="rgb(234,9,9)" fg:x="138" fg:w="2"/><text x="11.0060%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="10.7560%" y="629" width="0.1559%" height="15" fill="rgb(207,43,14)" fg:x="138" fg:w="2"/><text x="11.0060%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="10.8340%" y="613" width="0.0779%" height="15" fill="rgb(216,219,36)" fg:x="139" fg:w="1"/><text x="11.0840%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9119%" y="581" width="0.0779%" height="15" fill="rgb(238,12,26)" fg:x="140" fg:w="1"/><text x="11.1619%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9119%" y="565" width="0.0779%" height="15" fill="rgb(226,67,30)" fg:x="140" fg:w="1"/><text x="11.1619%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="677" width="0.1559%" height="15" fill="rgb(229,154,7)" fg:x="140" fg:w="2"/><text x="11.1619%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="661" width="0.1559%" height="15" fill="rgb(249,90,18)" fg:x="140" fg:w="2"/><text x="11.1619%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="645" width="0.1559%" height="15" fill="rgb(223,53,15)" fg:x="140" fg:w="2"/><text x="11.1619%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="629" width="0.1559%" height="15" fill="rgb(253,86,38)" fg:x="140" fg:w="2"/><text x="11.1619%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="613" width="0.1559%" height="15" fill="rgb(222,198,9)" fg:x="140" fg:w="2"/><text x="11.1619%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="10.9119%" y="597" width="0.1559%" height="15" fill="rgb(240,146,25)" fg:x="140" fg:w="2"/><text x="11.1619%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="10.9899%" y="581" width="0.0779%" height="15" fill="rgb(225,38,10)" fg:x="141" fg:w="1"/><text x="11.2399%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9899%" y="565" width="0.0779%" height="15" fill="rgb(246,93,4)" fg:x="141" fg:w="1"/><text x="11.2399%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9899%" y="549" width="0.0779%" height="15" fill="rgb(222,55,18)" fg:x="141" fg:w="1"/><text x="11.2399%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="11.0678%" y="645" width="0.0779%" height="15" fill="rgb(233,137,48)" fg:x="142" fg:w="1"/><text x="11.3178%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.2237%" y="629" width="0.1559%" height="15" fill="rgb(214,8,54)" fg:x="144" fg:w="2"/><text x="11.4737%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.3016%" y="613" width="0.0779%" height="15" fill="rgb(206,75,4)" fg:x="145" fg:w="1"/><text x="11.5516%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3796%" y="613" width="0.0779%" height="15" fill="rgb(238,171,14)" fg:x="146" fg:w="1"/><text x="11.6296%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.6134%" y="597" width="0.0779%" height="15" fill="rgb(233,70,41)" fg:x="149" fg:w="1"/><text x="11.8634%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="11.7693%" y="549" width="0.0779%" height="15" fill="rgb(214,68,36)" fg:x="151" fg:w="1"/><text x="12.0193%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="11.7693%" y="581" width="0.1559%" height="15" fill="rgb(223,29,5)" fg:x="151" fg:w="2"/><text x="12.0193%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="11.7693%" y="565" width="0.1559%" height="15" fill="rgb(251,22,40)" fg:x="151" fg:w="2"/><text x="12.0193%" y="575.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="11.8472%" y="549" width="0.0779%" height="15" fill="rgb(210,67,41)" fg:x="152" fg:w="1"/><text x="12.0972%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="11.9252%" y="469" width="0.0779%" height="15" fill="rgb(225,177,31)" fg:x="153" fg:w="1"/><text x="12.1752%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.0031%" y="469" width="0.0779%" height="15" fill="rgb(221,229,11)" fg:x="154" fg:w="1"/><text x="12.2531%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0031%" y="453" width="0.0779%" height="15" fill="rgb(247,172,52)" fg:x="154" fg:w="1"/><text x="12.2531%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.0031%" y="437" width="0.0779%" height="15" fill="rgb(212,73,19)" fg:x="154" fg:w="1"/><text x="12.2531%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0031%" y="421" width="0.0779%" height="15" fill="rgb(244,7,46)" fg:x="154" fg:w="1"/><text x="12.2531%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="11.9252%" y="565" width="0.2338%" height="15" fill="rgb(230,113,20)" fg:x="153" fg:w="3"/><text x="12.1752%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="11.9252%" y="549" width="0.2338%" height="15" fill="rgb(209,97,30)" fg:x="153" fg:w="3"/><text x="12.1752%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="11.9252%" y="533" width="0.2338%" height="15" fill="rgb(243,89,12)" fg:x="153" fg:w="3"/><text x="12.1752%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="11.9252%" y="517" width="0.2338%" height="15" fill="rgb(228,32,19)" fg:x="153" fg:w="3"/><text x="12.1752%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="11.9252%" y="501" width="0.2338%" height="15" fill="rgb(248,25,17)" fg:x="153" fg:w="3"/><text x="12.1752%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="11.9252%" y="485" width="0.2338%" height="15" fill="rgb(232,161,29)" fg:x="153" fg:w="3"/><text x="12.1752%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.0811%" y="469" width="0.0779%" height="15" fill="rgb(251,192,11)" fg:x="155" fg:w="1"/><text x="12.3311%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.1590%" y="565" width="0.0779%" height="15" fill="rgb(240,47,32)" fg:x="156" fg:w="1"/><text x="12.4090%" y="575.50"></text></g><g><title>engine::session::Session::flush (38 samples, 2.96%)</title><rect x="9.3531%" y="741" width="2.9618%" height="15" fill="rgb(250,16,45)" fg:x="120" fg:w="38"/><text x="9.6031%" y="751.50">eng..</text></g><g><title>engine::session::Session::save_entity_changes (38 samples, 2.96%)</title><rect x="9.3531%" y="725" width="2.9618%" height="15" fill="rgb(227,217,42)" fg:x="120" fg:w="38"/><text x="9.6031%" y="735.50">eng..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (35 samples, 2.73%)</title><rect x="9.5869%" y="709" width="2.7280%" height="15" fill="rgb(206,82,54)" fg:x="123" fg:w="35"/><text x="9.8369%" y="719.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (35 samples, 2.73%)</title><rect x="9.5869%" y="693" width="2.7280%" height="15" fill="rgb(243,145,25)" fg:x="123" fg:w="35"/><text x="9.8369%" y="703.50">en..</text></g><g><title>kernel::model::any_entity_changes (16 samples, 1.25%)</title><rect x="11.0678%" y="677" width="1.2471%" height="15" fill="rgb(207,166,24)" fg:x="142" fg:w="16"/><text x="11.3178%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (16 samples, 1.25%)</title><rect x="11.0678%" y="661" width="1.2471%" height="15" fill="rgb(215,191,44)" fg:x="142" fg:w="16"/><text x="11.3178%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 1.17%)</title><rect x="11.1458%" y="645" width="1.1691%" height="15" fill="rgb(234,218,51)" fg:x="143" fg:w="15"/><text x="11.3958%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.94%)</title><rect x="11.3796%" y="629" width="0.9353%" height="15" fill="rgb(245,133,21)" fg:x="146" fg:w="12"/><text x="11.6296%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="11.4575%" y="613" width="0.8574%" height="15" fill="rgb(230,136,45)" fg:x="147" fg:w="11"/><text x="11.7075%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.62%)</title><rect x="11.6913%" y="597" width="0.6235%" height="15" fill="rgb(247,63,43)" fg:x="150" fg:w="8"/><text x="11.9413%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="11.9252%" y="581" width="0.3897%" height="15" fill="rgb(254,223,31)" fg:x="153" fg:w="5"/><text x="12.1752%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="12.2369%" y="565" width="0.0779%" height="15" fill="rgb(236,185,0)" fg:x="157" fg:w="1"/><text x="12.4869%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="12.2369%" y="549" width="0.0779%" height="15" fill="rgb(231,139,46)" fg:x="157" fg:w="1"/><text x="12.4869%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="12.3149%" y="709" width="0.0779%" height="15" fill="rgb(236,147,31)" fg:x="158" fg:w="1"/><text x="12.5649%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="12.3149%" y="693" width="0.0779%" height="15" fill="rgb(225,222,22)" fg:x="158" fg:w="1"/><text x="12.5649%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="12.3149%" y="677" width="0.0779%" height="15" fill="rgb(225,193,14)" fg:x="158" fg:w="1"/><text x="12.5649%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="661" width="0.0779%" height="15" fill="rgb(253,193,46)" fg:x="158" fg:w="1"/><text x="12.5649%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3149%" y="645" width="0.0779%" height="15" fill="rgb(218,187,39)" fg:x="158" fg:w="1"/><text x="12.5649%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="629" width="0.0779%" height="15" fill="rgb(227,162,48)" fg:x="158" fg:w="1"/><text x="12.5649%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="613" width="0.0779%" height="15" fill="rgb(222,25,5)" fg:x="158" fg:w="1"/><text x="12.5649%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="597" width="0.0779%" height="15" fill="rgb(211,205,16)" fg:x="158" fg:w="1"/><text x="12.5649%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3149%" y="581" width="0.0779%" height="15" fill="rgb(244,191,2)" fg:x="158" fg:w="1"/><text x="12.5649%" y="591.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="565" width="0.0779%" height="15" fill="rgb(248,159,12)" fg:x="158" fg:w="1"/><text x="12.5649%" y="575.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="549" width="0.0779%" height="15" fill="rgb(235,204,17)" fg:x="158" fg:w="1"/><text x="12.5649%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="12.3149%" y="533" width="0.0779%" height="15" fill="rgb(240,21,27)" fg:x="158" fg:w="1"/><text x="12.5649%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="12.3149%" y="517" width="0.0779%" height="15" fill="rgb(224,170,31)" fg:x="158" fg:w="1"/><text x="12.5649%" y="527.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="12.3149%" y="501" width="0.0779%" height="15" fill="rgb(223,145,32)" fg:x="158" fg:w="1"/><text x="12.5649%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.3928%" y="629" width="0.1559%" height="15" fill="rgb(243,100,5)" fg:x="159" fg:w="2"/><text x="12.6428%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="12.3928%" y="613" width="0.1559%" height="15" fill="rgb(242,131,51)" fg:x="159" fg:w="2"/><text x="12.6428%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="12.3928%" y="597" width="0.1559%" height="15" fill="rgb(223,156,46)" fg:x="159" fg:w="2"/><text x="12.6428%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="12.3928%" y="581" width="0.1559%" height="15" fill="rgb(215,10,40)" fg:x="159" fg:w="2"/><text x="12.6428%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="629" width="0.0779%" height="15" fill="rgb(233,155,0)" fg:x="161" fg:w="1"/><text x="12.7987%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="613" width="0.0779%" height="15" fill="rgb(247,78,6)" fg:x="161" fg:w="1"/><text x="12.7987%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="597" width="0.0779%" height="15" fill="rgb(237,217,21)" fg:x="161" fg:w="1"/><text x="12.7987%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="581" width="0.0779%" height="15" fill="rgb(212,1,21)" fg:x="161" fg:w="1"/><text x="12.7987%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="565" width="0.0779%" height="15" fill="rgb(213,7,14)" fg:x="161" fg:w="1"/><text x="12.7987%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="12.5487%" y="549" width="0.0779%" height="15" fill="rgb(225,84,14)" fg:x="161" fg:w="1"/><text x="12.7987%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="12.5487%" y="533" width="0.0779%" height="15" fill="rgb(239,216,39)" fg:x="161" fg:w="1"/><text x="12.7987%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="12.3928%" y="677" width="0.3118%" height="15" fill="rgb(253,29,23)" fg:x="159" fg:w="4"/><text x="12.6428%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.31%)</title><rect x="12.3928%" y="661" width="0.3118%" height="15" fill="rgb(220,167,50)" fg:x="159" fg:w="4"/><text x="12.6428%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="12.3928%" y="645" width="0.3118%" height="15" fill="rgb(232,141,1)" fg:x="159" fg:w="4"/><text x="12.6428%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="12.6267%" y="629" width="0.0779%" height="15" fill="rgb(222,210,1)" fg:x="162" fg:w="1"/><text x="12.8767%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="12.6267%" y="613" width="0.0779%" height="15" fill="rgb(219,84,10)" fg:x="162" fg:w="1"/><text x="12.8767%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="12.6267%" y="597" width="0.0779%" height="15" fill="rgb(245,188,6)" fg:x="162" fg:w="1"/><text x="12.8767%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.7046%" y="629" width="0.0779%" height="15" fill="rgb(252,139,39)" fg:x="163" fg:w="1"/><text x="12.9546%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7046%" y="613" width="0.0779%" height="15" fill="rgb(218,42,26)" fg:x="163" fg:w="1"/><text x="12.9546%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7046%" y="597" width="0.0779%" height="15" fill="rgb(237,226,51)" fg:x="163" fg:w="1"/><text x="12.9546%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="12.7046%" y="581" width="0.0779%" height="15" fill="rgb(246,15,17)" fg:x="163" fg:w="1"/><text x="12.9546%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.7046%" y="565" width="0.0779%" height="15" fill="rgb(228,170,42)" fg:x="163" fg:w="1"/><text x="12.9546%" y="575.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (7 samples, 0.55%)</title><rect x="12.3928%" y="693" width="0.5456%" height="15" fill="rgb(248,118,53)" fg:x="159" fg:w="7"/><text x="12.6428%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="12.7046%" y="677" width="0.2338%" height="15" fill="rgb(207,30,10)" fg:x="163" fg:w="3"/><text x="12.9546%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (3 samples, 0.23%)</title><rect x="12.7046%" y="661" width="0.2338%" height="15" fill="rgb(217,104,38)" fg:x="163" fg:w="3"/><text x="12.9546%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (3 samples, 0.23%)</title><rect x="12.7046%" y="645" width="0.2338%" height="15" fill="rgb(211,165,26)" fg:x="163" fg:w="3"/><text x="12.9546%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7825%" y="629" width="0.1559%" height="15" fill="rgb(247,38,9)" fg:x="164" fg:w="2"/><text x="13.0325%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7825%" y="613" width="0.1559%" height="15" fill="rgb(218,187,8)" fg:x="164" fg:w="2"/><text x="13.0325%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7825%" y="597" width="0.1559%" height="15" fill="rgb(247,94,28)" fg:x="164" fg:w="2"/><text x="13.0325%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7825%" y="581" width="0.1559%" height="15" fill="rgb(218,173,30)" fg:x="164" fg:w="2"/><text x="13.0325%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="12.7825%" y="565" width="0.1559%" height="15" fill="rgb(245,45,36)" fg:x="164" fg:w="2"/><text x="13.0325%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7825%" y="549" width="0.1559%" height="15" fill="rgb(221,172,44)" fg:x="164" fg:w="2"/><text x="13.0325%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="12.7825%" y="533" width="0.1559%" height="15" fill="rgb(222,45,12)" fg:x="164" fg:w="2"/><text x="13.0325%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="12.7825%" y="517" width="0.1559%" height="15" fill="rgb(250,10,22)" fg:x="164" fg:w="2"/><text x="13.0325%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="12.8605%" y="501" width="0.0779%" height="15" fill="rgb(239,27,0)" fg:x="165" fg:w="1"/><text x="13.1105%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8605%" y="485" width="0.0779%" height="15" fill="rgb(223,118,22)" fg:x="165" fg:w="1"/><text x="13.1105%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9384%" y="677" width="0.0779%" height="15" fill="rgb(251,81,25)" fg:x="166" fg:w="1"/><text x="13.1884%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="12.9384%" y="661" width="0.0779%" height="15" fill="rgb(237,225,53)" fg:x="166" fg:w="1"/><text x="13.1884%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="12.9384%" y="645" width="0.0779%" height="15" fill="rgb(237,186,51)" fg:x="166" fg:w="1"/><text x="13.1884%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="12.9384%" y="629" width="0.0779%" height="15" fill="rgb(247,209,11)" fg:x="166" fg:w="1"/><text x="13.1884%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="12.9384%" y="613" width="0.0779%" height="15" fill="rgb(223,109,27)" fg:x="166" fg:w="1"/><text x="13.1884%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9384%" y="597" width="0.0779%" height="15" fill="rgb(246,181,13)" fg:x="166" fg:w="1"/><text x="13.1884%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="12.9384%" y="581" width="0.0779%" height="15" fill="rgb(234,57,44)" fg:x="166" fg:w="1"/><text x="13.1884%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="12.9384%" y="565" width="0.0779%" height="15" fill="rgb(211,227,50)" fg:x="166" fg:w="1"/><text x="13.1884%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="12.9384%" y="549" width="0.0779%" height="15" fill="rgb(254,57,34)" fg:x="166" fg:w="1"/><text x="13.1884%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="12.9384%" y="533" width="0.0779%" height="15" fill="rgb(227,212,26)" fg:x="166" fg:w="1"/><text x="13.1884%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="12.9384%" y="517" width="0.0779%" height="15" fill="rgb(244,169,44)" fg:x="166" fg:w="1"/><text x="13.1884%" y="527.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="12.9384%" y="501" width="0.0779%" height="15" fill="rgb(236,135,50)" fg:x="166" fg:w="1"/><text x="13.1884%" y="511.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="12.9384%" y="485" width="0.0779%" height="15" fill="rgb(241,89,30)" fg:x="166" fg:w="1"/><text x="13.1884%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (16 samples, 1.25%)</title><rect x="12.3149%" y="725" width="1.2471%" height="15" fill="rgb(206,113,34)" fg:x="158" fg:w="16"/><text x="12.5649%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (15 samples, 1.17%)</title><rect x="12.3928%" y="709" width="1.1691%" height="15" fill="rgb(218,104,52)" fg:x="159" fg:w="15"/><text x="12.6428%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (8 samples, 0.62%)</title><rect x="12.9384%" y="693" width="0.6235%" height="15" fill="rgb(223,82,32)" fg:x="166" fg:w="8"/><text x="13.1884%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (7 samples, 0.55%)</title><rect x="13.0164%" y="677" width="0.5456%" height="15" fill="rgb(249,219,30)" fg:x="167" fg:w="7"/><text x="13.2664%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.55%)</title><rect x="13.0164%" y="661" width="0.5456%" height="15" fill="rgb(233,141,21)" fg:x="167" fg:w="7"/><text x="13.2664%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.47%)</title><rect x="13.0943%" y="645" width="0.4677%" height="15" fill="rgb(252,87,44)" fg:x="168" fg:w="6"/><text x="13.3443%" y="655.50"></text></g><g><title>__libc_malloc (6 samples, 0.47%)</title><rect x="13.0943%" y="629" width="0.4677%" height="15" fill="rgb(229,48,33)" fg:x="168" fg:w="6"/><text x="13.3443%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6399%" y="629" width="0.0779%" height="15" fill="rgb(229,23,22)" fg:x="175" fg:w="1"/><text x="13.8899%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6399%" y="613" width="0.0779%" height="15" fill="rgb(244,116,16)" fg:x="175" fg:w="1"/><text x="13.8899%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6399%" y="597" width="0.0779%" height="15" fill="rgb(247,45,10)" fg:x="175" fg:w="1"/><text x="13.8899%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6399%" y="581" width="0.0779%" height="15" fill="rgb(228,60,29)" fg:x="175" fg:w="1"/><text x="13.8899%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6399%" y="565" width="0.0779%" height="15" fill="rgb(205,129,15)" fg:x="175" fg:w="1"/><text x="13.8899%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6399%" y="549" width="0.0779%" height="15" fill="rgb(206,229,4)" fg:x="175" fg:w="1"/><text x="13.8899%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.6399%" y="533" width="0.0779%" height="15" fill="rgb(249,191,30)" fg:x="175" fg:w="1"/><text x="13.8899%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6399%" y="517" width="0.0779%" height="15" fill="rgb(250,84,54)" fg:x="175" fg:w="1"/><text x="13.8899%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.6399%" y="501" width="0.0779%" height="15" fill="rgb(207,25,53)" fg:x="175" fg:w="1"/><text x="13.8899%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.6399%" y="485" width="0.0779%" height="15" fill="rgb(235,40,8)" fg:x="175" fg:w="1"/><text x="13.8899%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.6399%" y="469" width="0.0779%" height="15" fill="rgb(226,169,33)" fg:x="175" fg:w="1"/><text x="13.8899%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.6399%" y="453" width="0.0779%" height="15" fill="rgb(238,110,8)" fg:x="175" fg:w="1"/><text x="13.8899%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6399%" y="437" width="0.0779%" height="15" fill="rgb(251,206,12)" fg:x="175" fg:w="1"/><text x="13.8899%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.6399%" y="421" width="0.0779%" height="15" fill="rgb(248,171,18)" fg:x="175" fg:w="1"/><text x="13.8899%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.6399%" y="405" width="0.0779%" height="15" fill="rgb(213,65,46)" fg:x="175" fg:w="1"/><text x="13.8899%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.6399%" y="389" width="0.0779%" height="15" fill="rgb(211,154,15)" fg:x="175" fg:w="1"/><text x="13.8899%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.6399%" y="373" width="0.0779%" height="15" fill="rgb(217,75,43)" fg:x="175" fg:w="1"/><text x="13.8899%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.6399%" y="357" width="0.0779%" height="15" fill="rgb(230,32,33)" fg:x="175" fg:w="1"/><text x="13.8899%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6399%" y="341" width="0.0779%" height="15" fill="rgb(221,100,16)" fg:x="175" fg:w="1"/><text x="13.8899%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="629" width="0.0779%" height="15" fill="rgb(212,129,47)" fg:x="176" fg:w="1"/><text x="13.9678%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="613" width="0.0779%" height="15" fill="rgb(239,217,47)" fg:x="176" fg:w="1"/><text x="13.9678%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="597" width="0.0779%" height="15" fill="rgb(230,84,24)" fg:x="176" fg:w="1"/><text x="13.9678%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="581" width="0.0779%" height="15" fill="rgb(214,153,51)" fg:x="176" fg:w="1"/><text x="13.9678%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="565" width="0.0779%" height="15" fill="rgb(231,6,35)" fg:x="176" fg:w="1"/><text x="13.9678%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.7178%" y="549" width="0.0779%" height="15" fill="rgb(229,122,30)" fg:x="176" fg:w="1"/><text x="13.9678%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.7178%" y="533" width="0.0779%" height="15" fill="rgb(234,71,10)" fg:x="176" fg:w="1"/><text x="13.9678%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="13.6399%" y="677" width="0.2338%" height="15" fill="rgb(215,173,26)" fg:x="175" fg:w="3"/><text x="13.8899%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="13.6399%" y="661" width="0.2338%" height="15" fill="rgb(248,118,52)" fg:x="175" fg:w="3"/><text x="13.8899%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="13.6399%" y="645" width="0.2338%" height="15" fill="rgb(237,55,46)" fg:x="175" fg:w="3"/><text x="13.8899%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7958%" y="629" width="0.0779%" height="15" fill="rgb(243,214,43)" fg:x="177" fg:w="1"/><text x="14.0458%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7958%" y="613" width="0.0779%" height="15" fill="rgb(252,123,30)" fg:x="177" fg:w="1"/><text x="14.0458%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7958%" y="597" width="0.0779%" height="15" fill="rgb(215,73,39)" fg:x="177" fg:w="1"/><text x="14.0458%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7958%" y="581" width="0.0779%" height="15" fill="rgb(251,194,29)" fg:x="177" fg:w="1"/><text x="14.0458%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.7958%" y="565" width="0.0779%" height="15" fill="rgb(224,58,52)" fg:x="177" fg:w="1"/><text x="14.0458%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7958%" y="549" width="0.0779%" height="15" fill="rgb(248,106,46)" fg:x="177" fg:w="1"/><text x="14.0458%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7958%" y="533" width="0.0779%" height="15" fill="rgb(223,80,29)" fg:x="177" fg:w="1"/><text x="14.0458%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7958%" y="517" width="0.0779%" height="15" fill="rgb(243,137,9)" fg:x="177" fg:w="1"/><text x="14.0458%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.7958%" y="501" width="0.0779%" height="15" fill="rgb(235,121,28)" fg:x="177" fg:w="1"/><text x="14.0458%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.7958%" y="485" width="0.0779%" height="15" fill="rgb(219,121,41)" fg:x="177" fg:w="1"/><text x="14.0458%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="13.7958%" y="469" width="0.0779%" height="15" fill="rgb(251,60,6)" fg:x="177" fg:w="1"/><text x="14.0458%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="13.7958%" y="453" width="0.0779%" height="15" fill="rgb(208,12,30)" fg:x="177" fg:w="1"/><text x="14.0458%" y="463.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="13.8737%" y="661" width="0.0779%" height="15" fill="rgb(207,176,36)" fg:x="178" fg:w="1"/><text x="14.1237%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.47%)</title><rect x="13.6399%" y="709" width="0.4677%" height="15" fill="rgb(211,188,29)" fg:x="175" fg:w="6"/><text x="13.8899%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.47%)</title><rect x="13.6399%" y="693" width="0.4677%" height="15" fill="rgb(220,184,37)" fg:x="175" fg:w="6"/><text x="13.8899%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="13.8737%" y="677" width="0.2338%" height="15" fill="rgb(239,87,37)" fg:x="178" fg:w="3"/><text x="14.1237%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="13.9517%" y="661" width="0.1559%" height="15" fill="rgb(232,113,44)" fg:x="179" fg:w="2"/><text x="14.2017%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="13.9517%" y="645" width="0.1559%" height="15" fill="rgb(246,25,39)" fg:x="179" fg:w="2"/><text x="14.2017%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9517%" y="629" width="0.1559%" height="15" fill="rgb(247,30,13)" fg:x="179" fg:w="2"/><text x="14.2017%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9517%" y="613" width="0.1559%" height="15" fill="rgb(230,176,35)" fg:x="179" fg:w="2"/><text x="14.2017%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9517%" y="597" width="0.1559%" height="15" fill="rgb(222,23,18)" fg:x="179" fg:w="2"/><text x="14.2017%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9517%" y="581" width="0.1559%" height="15" fill="rgb(234,86,8)" fg:x="179" fg:w="2"/><text x="14.2017%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="13.9517%" y="565" width="0.1559%" height="15" fill="rgb(206,218,47)" fg:x="179" fg:w="2"/><text x="14.2017%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9517%" y="549" width="0.1559%" height="15" fill="rgb(229,35,31)" fg:x="179" fg:w="2"/><text x="14.2017%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="13.9517%" y="533" width="0.1559%" height="15" fill="rgb(242,81,7)" fg:x="179" fg:w="2"/><text x="14.2017%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="13.9517%" y="517" width="0.1559%" height="15" fill="rgb(231,11,35)" fg:x="179" fg:w="2"/><text x="14.2017%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.0296%" y="501" width="0.0779%" height="15" fill="rgb(219,218,17)" fg:x="180" fg:w="1"/><text x="14.2796%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="14.1076%" y="709" width="0.0779%" height="15" fill="rgb(221,83,32)" fg:x="181" fg:w="1"/><text x="14.3576%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="14.1855%" y="709" width="0.0779%" height="15" fill="rgb(233,49,54)" fg:x="182" fg:w="1"/><text x="14.4355%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="14.1855%" y="693" width="0.0779%" height="15" fill="rgb(206,18,51)" fg:x="182" fg:w="1"/><text x="14.4355%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="14.2634%" y="645" width="0.0779%" height="15" fill="rgb(249,193,15)" fg:x="183" fg:w="1"/><text x="14.5134%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2634%" y="629" width="0.0779%" height="15" fill="rgb(245,186,19)" fg:x="183" fg:w="1"/><text x="14.5134%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="14.2634%" y="661" width="0.1559%" height="15" fill="rgb(230,4,24)" fg:x="183" fg:w="2"/><text x="14.5134%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="14.3414%" y="645" width="0.0779%" height="15" fill="rgb(234,75,27)" fg:x="184" fg:w="1"/><text x="14.5914%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="14.3414%" y="629" width="0.0779%" height="15" fill="rgb(244,187,35)" fg:x="184" fg:w="1"/><text x="14.5914%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.3414%" y="613" width="0.0779%" height="15" fill="rgb(241,97,43)" fg:x="184" fg:w="1"/><text x="14.5914%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3414%" y="597" width="0.0779%" height="15" fill="rgb(236,94,2)" fg:x="184" fg:w="1"/><text x="14.5914%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3414%" y="581" width="0.0779%" height="15" fill="rgb(231,175,7)" fg:x="184" fg:w="1"/><text x="14.5914%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3414%" y="565" width="0.0779%" height="15" fill="rgb(236,89,47)" fg:x="184" fg:w="1"/><text x="14.5914%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.3414%" y="549" width="0.0779%" height="15" fill="rgb(213,191,37)" fg:x="184" fg:w="1"/><text x="14.5914%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="14.4193%" y="613" width="0.0779%" height="15" fill="rgb(252,0,34)" fg:x="185" fg:w="1"/><text x="14.6693%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4193%" y="597" width="0.0779%" height="15" fill="rgb(208,145,44)" fg:x="185" fg:w="1"/><text x="14.6693%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4193%" y="581" width="0.0779%" height="15" fill="rgb(227,95,50)" fg:x="185" fg:w="1"/><text x="14.6693%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4193%" y="565" width="0.0779%" height="15" fill="rgb(222,136,24)" fg:x="185" fg:w="1"/><text x="14.6693%" y="575.50"></text></g><g><title>plugins_core::build::Build::holding (29 samples, 2.26%)</title><rect x="12.3149%" y="741" width="2.2603%" height="15" fill="rgb(218,105,10)" fg:x="158" fg:w="29"/><text x="12.5649%" y="751.50">p..</text></g><g><title>plugins_core::tools::set_container (13 samples, 1.01%)</title><rect x="13.5620%" y="725" width="1.0133%" height="15" fill="rgb(216,65,28)" fg:x="174" fg:w="13"/><text x="13.8120%" y="735.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="14.2634%" y="709" width="0.3118%" height="15" fill="rgb(229,6,28)" fg:x="183" fg:w="4"/><text x="14.5134%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="14.2634%" y="693" width="0.3118%" height="15" fill="rgb(222,160,42)" fg:x="183" fg:w="4"/><text x="14.5134%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="14.2634%" y="677" width="0.3118%" height="15" fill="rgb(235,83,49)" fg:x="183" fg:w="4"/><text x="14.5134%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.4193%" y="661" width="0.1559%" height="15" fill="rgb(236,86,36)" fg:x="185" fg:w="2"/><text x="14.6693%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="14.4193%" y="645" width="0.1559%" height="15" fill="rgb(236,19,41)" fg:x="185" fg:w="2"/><text x="14.6693%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="14.4193%" y="629" width="0.1559%" height="15" fill="rgb(217,71,31)" fg:x="185" fg:w="2"/><text x="14.6693%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4973%" y="613" width="0.0779%" height="15" fill="rgb(236,209,25)" fg:x="186" fg:w="1"/><text x="14.7473%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4973%" y="597" width="0.0779%" height="15" fill="rgb(247,104,21)" fg:x="186" fg:w="1"/><text x="14.7473%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.4973%" y="581" width="0.0779%" height="15" fill="rgb(243,80,38)" fg:x="186" fg:w="1"/><text x="14.7473%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4973%" y="565" width="0.0779%" height="15" fill="rgb(232,109,38)" fg:x="186" fg:w="1"/><text x="14.7473%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.4973%" y="549" width="0.0779%" height="15" fill="rgb(212,177,53)" fg:x="186" fg:w="1"/><text x="14.7473%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.4973%" y="533" width="0.0779%" height="15" fill="rgb(227,30,34)" fg:x="186" fg:w="1"/><text x="14.7473%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4973%" y="517" width="0.0779%" height="15" fill="rgb(205,175,25)" fg:x="186" fg:w="1"/><text x="14.7473%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.5752%" y="661" width="0.0779%" height="15" fill="rgb(249,39,54)" fg:x="187" fg:w="1"/><text x="14.8252%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6532%" y="629" width="0.0779%" height="15" fill="rgb(215,54,37)" fg:x="188" fg:w="1"/><text x="14.9032%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.6532%" y="613" width="0.0779%" height="15" fill="rgb(205,60,46)" fg:x="188" fg:w="1"/><text x="14.9032%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6532%" y="597" width="0.0779%" height="15" fill="rgb(238,89,29)" fg:x="188" fg:w="1"/><text x="14.9032%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6532%" y="581" width="0.0779%" height="15" fill="rgb(212,48,10)" fg:x="188" fg:w="1"/><text x="14.9032%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6532%" y="565" width="0.0779%" height="15" fill="rgb(237,186,28)" fg:x="188" fg:w="1"/><text x="14.9032%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6532%" y="549" width="0.0779%" height="15" fill="rgb(237,204,4)" fg:x="188" fg:w="1"/><text x="14.9032%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6532%" y="533" width="0.0779%" height="15" fill="rgb(237,15,47)" fg:x="188" fg:w="1"/><text x="14.9032%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6532%" y="517" width="0.0779%" height="15" fill="rgb(244,110,25)" fg:x="188" fg:w="1"/><text x="14.9032%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.7311%" y="533" width="0.0779%" height="15" fill="rgb(241,12,16)" fg:x="189" fg:w="1"/><text x="14.9811%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7311%" y="517" width="0.0779%" height="15" fill="rgb(235,25,9)" fg:x="189" fg:w="1"/><text x="14.9811%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.8090%" y="501" width="0.0779%" height="15" fill="rgb(245,159,19)" fg:x="190" fg:w="1"/><text x="15.0590%" y="511.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.8090%" y="485" width="0.0779%" height="15" fill="rgb(236,63,32)" fg:x="190" fg:w="1"/><text x="15.0590%" y="495.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.39%)</title><rect x="14.5752%" y="741" width="0.3897%" height="15" fill="rgb(235,32,52)" fg:x="187" fg:w="5"/><text x="14.8252%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.39%)</title><rect x="14.5752%" y="725" width="0.3897%" height="15" fill="rgb(209,176,21)" fg:x="187" fg:w="5"/><text x="14.8252%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.39%)</title><rect x="14.5752%" y="709" width="0.3897%" height="15" fill="rgb(205,90,42)" fg:x="187" fg:w="5"/><text x="14.8252%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.39%)</title><rect x="14.5752%" y="693" width="0.3897%" height="15" fill="rgb(213,132,16)" fg:x="187" fg:w="5"/><text x="14.8252%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="14.5752%" y="677" width="0.3897%" height="15" fill="rgb(232,11,22)" fg:x="187" fg:w="5"/><text x="14.8252%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.31%)</title><rect x="14.6532%" y="661" width="0.3118%" height="15" fill="rgb(248,167,41)" fg:x="188" fg:w="4"/><text x="14.9032%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="14.6532%" y="645" width="0.3118%" height="15" fill="rgb(209,127,6)" fg:x="188" fg:w="4"/><text x="14.9032%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="14.7311%" y="629" width="0.2338%" height="15" fill="rgb(246,210,34)" fg:x="189" fg:w="3"/><text x="14.9811%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="14.7311%" y="613" width="0.2338%" height="15" fill="rgb(238,165,13)" fg:x="189" fg:w="3"/><text x="14.9811%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="14.7311%" y="597" width="0.2338%" height="15" fill="rgb(233,98,15)" fg:x="189" fg:w="3"/><text x="14.9811%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="14.7311%" y="581" width="0.2338%" height="15" fill="rgb(215,215,51)" fg:x="189" fg:w="3"/><text x="14.9811%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.23%)</title><rect x="14.7311%" y="565" width="0.2338%" height="15" fill="rgb(217,161,25)" fg:x="189" fg:w="3"/><text x="14.9811%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="14.7311%" y="549" width="0.2338%" height="15" fill="rgb(217,167,48)" fg:x="189" fg:w="3"/><text x="14.9811%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="14.8090%" y="533" width="0.1559%" height="15" fill="rgb(205,163,34)" fg:x="190" fg:w="2"/><text x="15.0590%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.8090%" y="517" width="0.1559%" height="15" fill="rgb(241,197,31)" fg:x="190" fg:w="2"/><text x="15.0590%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.8870%" y="501" width="0.0779%" height="15" fill="rgb(225,123,11)" fg:x="191" fg:w="1"/><text x="15.1370%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8870%" y="485" width="0.0779%" height="15" fill="rgb(217,4,20)" fg:x="191" fg:w="1"/><text x="15.1370%" y="495.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="14.9649%" y="741" width="0.0779%" height="15" fill="rgb(215,55,9)" fg:x="192" fg:w="1"/><text x="15.2149%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="14.9649%" y="725" width="0.0779%" height="15" fill="rgb(218,165,5)" fg:x="192" fg:w="1"/><text x="15.2149%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="14.9649%" y="709" width="0.0779%" height="15" fill="rgb(222,175,15)" fg:x="192" fg:w="1"/><text x="15.2149%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="14.9649%" y="693" width="0.0779%" height="15" fill="rgb(223,85,34)" fg:x="192" fg:w="1"/><text x="15.2149%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9649%" y="677" width="0.0779%" height="15" fill="rgb(234,228,29)" fg:x="192" fg:w="1"/><text x="15.2149%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.9649%" y="661" width="0.0779%" height="15" fill="rgb(239,7,28)" fg:x="192" fg:w="1"/><text x="15.2149%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="15.0429%" y="677" width="0.0779%" height="15" fill="rgb(252,222,53)" fg:x="193" fg:w="1"/><text x="15.2929%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="15.0429%" y="661" width="0.0779%" height="15" fill="rgb(232,146,44)" fg:x="193" fg:w="1"/><text x="15.2929%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.0429%" y="645" width="0.0779%" height="15" fill="rgb(243,223,53)" fg:x="193" fg:w="1"/><text x="15.2929%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0429%" y="629" width="0.0779%" height="15" fill="rgb(219,128,25)" fg:x="193" fg:w="1"/><text x="15.2929%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0429%" y="613" width="0.0779%" height="15" fill="rgb(223,56,32)" fg:x="193" fg:w="1"/><text x="15.2929%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0429%" y="597" width="0.0779%" height="15" fill="rgb(237,41,3)" fg:x="193" fg:w="1"/><text x="15.2929%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0429%" y="581" width="0.0779%" height="15" fill="rgb(235,138,9)" fg:x="193" fg:w="1"/><text x="15.2929%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0429%" y="565" width="0.0779%" height="15" fill="rgb(214,131,10)" fg:x="193" fg:w="1"/><text x="15.2929%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0429%" y="549" width="0.0779%" height="15" fill="rgb(229,89,7)" fg:x="193" fg:w="1"/><text x="15.2929%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.0429%" y="533" width="0.0779%" height="15" fill="rgb(240,24,42)" fg:x="193" fg:w="1"/><text x="15.2929%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="15.0429%" y="517" width="0.0779%" height="15" fill="rgb(243,188,54)" fg:x="193" fg:w="1"/><text x="15.2929%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="15.0429%" y="501" width="0.0779%" height="15" fill="rgb(246,92,22)" fg:x="193" fg:w="1"/><text x="15.2929%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="15.0429%" y="485" width="0.0779%" height="15" fill="rgb(211,176,51)" fg:x="193" fg:w="1"/><text x="15.2929%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0429%" y="469" width="0.0779%" height="15" fill="rgb(246,207,34)" fg:x="193" fg:w="1"/><text x="15.2929%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="15.0429%" y="453" width="0.0779%" height="15" fill="rgb(239,95,2)" fg:x="193" fg:w="1"/><text x="15.2929%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="15.0429%" y="437" width="0.0779%" height="15" fill="rgb(211,124,25)" fg:x="193" fg:w="1"/><text x="15.2929%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="15.0429%" y="421" width="0.0779%" height="15" fill="rgb(231,221,19)" fg:x="193" fg:w="1"/><text x="15.2929%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="15.0429%" y="405" width="0.0779%" height="15" fill="rgb(239,183,19)" fg:x="193" fg:w="1"/><text x="15.2929%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="15.0429%" y="389" width="0.0779%" height="15" fill="rgb(221,130,29)" fg:x="193" fg:w="1"/><text x="15.2929%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0429%" y="373" width="0.0779%" height="15" fill="rgb(206,130,36)" fg:x="193" fg:w="1"/><text x="15.2929%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.1988%" y="645" width="0.0779%" height="15" fill="rgb(215,70,19)" fg:x="195" fg:w="1"/><text x="15.4488%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="15.0429%" y="725" width="0.3118%" height="15" fill="rgb(244,16,43)" fg:x="193" fg:w="4"/><text x="15.2929%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="15.0429%" y="709" width="0.3118%" height="15" fill="rgb(222,115,32)" fg:x="193" fg:w="4"/><text x="15.2929%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="15.0429%" y="693" width="0.3118%" height="15" fill="rgb(247,48,25)" fg:x="193" fg:w="4"/><text x="15.2929%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="15.1208%" y="677" width="0.2338%" height="15" fill="rgb(226,180,51)" fg:x="194" fg:w="3"/><text x="15.3708%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="15.1988%" y="661" width="0.1559%" height="15" fill="rgb(217,142,42)" fg:x="195" fg:w="2"/><text x="15.4488%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="15.2767%" y="645" width="0.0779%" height="15" fill="rgb(220,178,3)" fg:x="196" fg:w="1"/><text x="15.5267%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2767%" y="629" width="0.0779%" height="15" fill="rgb(217,221,4)" fg:x="196" fg:w="1"/><text x="15.5267%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2767%" y="613" width="0.0779%" height="15" fill="rgb(237,63,43)" fg:x="196" fg:w="1"/><text x="15.5267%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2767%" y="597" width="0.0779%" height="15" fill="rgb(220,57,8)" fg:x="196" fg:w="1"/><text x="15.5267%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.2767%" y="581" width="0.0779%" height="15" fill="rgb(254,186,27)" fg:x="196" fg:w="1"/><text x="15.5267%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.2767%" y="565" width="0.0779%" height="15" fill="rgb(251,57,28)" fg:x="196" fg:w="1"/><text x="15.5267%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.2767%" y="549" width="0.0779%" height="15" fill="rgb(215,228,0)" fg:x="196" fg:w="1"/><text x="15.5267%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="15.3546%" y="661" width="0.0779%" height="15" fill="rgb(237,218,39)" fg:x="197" fg:w="1"/><text x="15.6046%" y="671.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="15.3546%" y="709" width="0.1559%" height="15" fill="rgb(207,2,54)" fg:x="197" fg:w="2"/><text x="15.6046%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="15.3546%" y="693" width="0.1559%" height="15" fill="rgb(232,76,50)" fg:x="197" fg:w="2"/><text x="15.6046%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="15.3546%" y="677" width="0.1559%" height="15" fill="rgb(211,85,31)" fg:x="197" fg:w="2"/><text x="15.6046%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="15.4326%" y="661" width="0.0779%" height="15" fill="rgb(223,210,27)" fg:x="198" fg:w="1"/><text x="15.6826%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.4326%" y="645" width="0.0779%" height="15" fill="rgb(254,36,8)" fg:x="198" fg:w="1"/><text x="15.6826%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4326%" y="629" width="0.0779%" height="15" fill="rgb(213,4,25)" fg:x="198" fg:w="1"/><text x="15.6826%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4326%" y="613" width="0.0779%" height="15" fill="rgb(224,2,39)" fg:x="198" fg:w="1"/><text x="15.6826%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4326%" y="597" width="0.0779%" height="15" fill="rgb(208,8,39)" fg:x="198" fg:w="1"/><text x="15.6826%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4326%" y="581" width="0.0779%" height="15" fill="rgb(216,226,3)" fg:x="198" fg:w="1"/><text x="15.6826%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.4326%" y="565" width="0.0779%" height="15" fill="rgb(249,139,31)" fg:x="198" fg:w="1"/><text x="15.6826%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4326%" y="549" width="0.0779%" height="15" fill="rgb(242,170,35)" fg:x="198" fg:w="1"/><text x="15.6826%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.4326%" y="533" width="0.0779%" height="15" fill="rgb(238,14,9)" fg:x="198" fg:w="1"/><text x="15.6826%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.4326%" y="517" width="0.0779%" height="15" fill="rgb(251,81,46)" fg:x="198" fg:w="1"/><text x="15.6826%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="15.5105%" y="709" width="0.0779%" height="15" fill="rgb(230,23,4)" fg:x="199" fg:w="1"/><text x="15.7605%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="15.5105%" y="693" width="0.0779%" height="15" fill="rgb(211,85,25)" fg:x="199" fg:w="1"/><text x="15.7605%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5105%" y="677" width="0.0779%" height="15" fill="rgb(252,23,31)" fg:x="199" fg:w="1"/><text x="15.7605%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="15.5105%" y="661" width="0.0779%" height="15" fill="rgb(234,163,38)" fg:x="199" fg:w="1"/><text x="15.7605%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.5105%" y="645" width="0.0779%" height="15" fill="rgb(210,190,50)" fg:x="199" fg:w="1"/><text x="15.7605%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5105%" y="629" width="0.0779%" height="15" fill="rgb(228,158,3)" fg:x="199" fg:w="1"/><text x="15.7605%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.5105%" y="613" width="0.0779%" height="15" fill="rgb(216,130,0)" fg:x="199" fg:w="1"/><text x="15.7605%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5105%" y="597" width="0.0779%" height="15" fill="rgb(224,184,10)" fg:x="199" fg:w="1"/><text x="15.7605%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5885%" y="597" width="0.0779%" height="15" fill="rgb(214,202,18)" fg:x="200" fg:w="1"/><text x="15.8385%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5885%" y="581" width="0.0779%" height="15" fill="rgb(213,229,54)" fg:x="200" fg:w="1"/><text x="15.8385%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5885%" y="565" width="0.0779%" height="15" fill="rgb(246,120,0)" fg:x="200" fg:w="1"/><text x="15.8385%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.5885%" y="549" width="0.0779%" height="15" fill="rgb(237,6,15)" fg:x="200" fg:w="1"/><text x="15.8385%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5885%" y="533" width="0.0779%" height="15" fill="rgb(252,156,15)" fg:x="200" fg:w="1"/><text x="15.8385%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="15.5885%" y="661" width="0.1559%" height="15" fill="rgb(249,78,18)" fg:x="200" fg:w="2"/><text x="15.8385%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="15.5885%" y="645" width="0.1559%" height="15" fill="rgb(230,223,44)" fg:x="200" fg:w="2"/><text x="15.8385%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="15.5885%" y="629" width="0.1559%" height="15" fill="rgb(230,222,32)" fg:x="200" fg:w="2"/><text x="15.8385%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.5885%" y="613" width="0.1559%" height="15" fill="rgb(247,54,6)" fg:x="200" fg:w="2"/><text x="15.8385%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.6664%" y="597" width="0.0779%" height="15" fill="rgb(247,115,45)" fg:x="201" fg:w="1"/><text x="15.9164%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6664%" y="581" width="0.0779%" height="15" fill="rgb(213,203,37)" fg:x="201" fg:w="1"/><text x="15.9164%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6664%" y="565" width="0.0779%" height="15" fill="rgb(248,188,18)" fg:x="201" fg:w="1"/><text x="15.9164%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6664%" y="549" width="0.0779%" height="15" fill="rgb(206,80,8)" fg:x="201" fg:w="1"/><text x="15.9164%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.6664%" y="533" width="0.0779%" height="15" fill="rgb(245,217,31)" fg:x="201" fg:w="1"/><text x="15.9164%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.6664%" y="517" width="0.0779%" height="15" fill="rgb(220,193,15)" fg:x="201" fg:w="1"/><text x="15.9164%" y="527.50"></text></g><g><title>plugins_core::build::Build::occupying (10 samples, 0.78%)</title><rect x="15.0429%" y="741" width="0.7794%" height="15" fill="rgb(226,7,19)" fg:x="193" fg:w="10"/><text x="15.2929%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (6 samples, 0.47%)</title><rect x="15.3546%" y="725" width="0.4677%" height="15" fill="rgb(222,145,31)" fg:x="197" fg:w="6"/><text x="15.6046%" y="735.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (3 samples, 0.23%)</title><rect x="15.5885%" y="709" width="0.2338%" height="15" fill="rgb(241,193,36)" fg:x="200" fg:w="3"/><text x="15.8385%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.23%)</title><rect x="15.5885%" y="693" width="0.2338%" height="15" fill="rgb(225,123,33)" fg:x="200" fg:w="3"/><text x="15.8385%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.23%)</title><rect x="15.5885%" y="677" width="0.2338%" height="15" fill="rgb(246,136,38)" fg:x="200" fg:w="3"/><text x="15.8385%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="15.7443%" y="661" width="0.0779%" height="15" fill="rgb(243,56,24)" fg:x="202" fg:w="1"/><text x="15.9943%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="15.7443%" y="645" width="0.0779%" height="15" fill="rgb(215,147,2)" fg:x="202" fg:w="1"/><text x="15.9943%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.7443%" y="629" width="0.0779%" height="15" fill="rgb(209,155,27)" fg:x="202" fg:w="1"/><text x="15.9943%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.7443%" y="613" width="0.0779%" height="15" fill="rgb(222,177,11)" fg:x="202" fg:w="1"/><text x="15.9943%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7443%" y="597" width="0.0779%" height="15" fill="rgb(212,227,15)" fg:x="202" fg:w="1"/><text x="15.9943%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7443%" y="581" width="0.0779%" height="15" fill="rgb(214,138,20)" fg:x="202" fg:w="1"/><text x="15.9943%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7443%" y="565" width="0.0779%" height="15" fill="rgb(221,170,31)" fg:x="202" fg:w="1"/><text x="15.9943%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.7443%" y="549" width="0.0779%" height="15" fill="rgb(253,207,5)" fg:x="202" fg:w="1"/><text x="15.9943%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="15.9002%" y="661" width="0.0779%" height="15" fill="rgb(212,64,37)" fg:x="204" fg:w="1"/><text x="16.1502%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="15.9002%" y="645" width="0.0779%" height="15" fill="rgb(208,113,51)" fg:x="204" fg:w="1"/><text x="16.1502%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9002%" y="629" width="0.0779%" height="15" fill="rgb(237,15,5)" fg:x="204" fg:w="1"/><text x="16.1502%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9002%" y="613" width="0.0779%" height="15" fill="rgb(238,33,18)" fg:x="204" fg:w="1"/><text x="16.1502%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.9002%" y="597" width="0.0779%" height="15" fill="rgb(253,206,50)" fg:x="204" fg:w="1"/><text x="16.1502%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9002%" y="581" width="0.0779%" height="15" fill="rgb(242,158,43)" fg:x="204" fg:w="1"/><text x="16.1502%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.9002%" y="565" width="0.0779%" height="15" fill="rgb(213,125,27)" fg:x="204" fg:w="1"/><text x="16.1502%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.9002%" y="549" width="0.0779%" height="15" fill="rgb(233,161,31)" fg:x="204" fg:w="1"/><text x="16.1502%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="15.9002%" y="533" width="0.0779%" height="15" fill="rgb(218,135,6)" fg:x="204" fg:w="1"/><text x="16.1502%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.9002%" y="517" width="0.0779%" height="15" fill="rgb(222,73,53)" fg:x="204" fg:w="1"/><text x="16.1502%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.9782%" y="645" width="0.0779%" height="15" fill="rgb(229,66,53)" fg:x="205" fg:w="1"/><text x="16.2282%" y="655.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="15.9002%" y="693" width="0.2338%" height="15" fill="rgb(208,128,19)" fg:x="204" fg:w="3"/><text x="16.1502%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="15.9002%" y="677" width="0.2338%" height="15" fill="rgb(235,70,27)" fg:x="204" fg:w="3"/><text x="16.1502%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="15.9782%" y="661" width="0.1559%" height="15" fill="rgb(241,130,30)" fg:x="205" fg:w="2"/><text x="16.2282%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="16.0561%" y="645" width="0.0779%" height="15" fill="rgb(222,57,48)" fg:x="206" fg:w="1"/><text x="16.3061%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.0561%" y="629" width="0.0779%" height="15" fill="rgb(225,204,29)" fg:x="206" fg:w="1"/><text x="16.3061%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0561%" y="613" width="0.0779%" height="15" fill="rgb(240,196,35)" fg:x="206" fg:w="1"/><text x="16.3061%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0561%" y="597" width="0.0779%" height="15" fill="rgb(215,150,16)" fg:x="206" fg:w="1"/><text x="16.3061%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0561%" y="581" width="0.0779%" height="15" fill="rgb(209,170,13)" fg:x="206" fg:w="1"/><text x="16.3061%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.0561%" y="565" width="0.0779%" height="15" fill="rgb(235,75,31)" fg:x="206" fg:w="1"/><text x="16.3061%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="15.9002%" y="725" width="0.3118%" height="15" fill="rgb(252,1,47)" fg:x="204" fg:w="4"/><text x="16.1502%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="15.9002%" y="709" width="0.3118%" height="15" fill="rgb(241,2,36)" fg:x="204" fg:w="4"/><text x="16.1502%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="16.1341%" y="693" width="0.0779%" height="15" fill="rgb(236,191,4)" fg:x="207" fg:w="1"/><text x="16.3841%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.1341%" y="677" width="0.0779%" height="15" fill="rgb(212,65,35)" fg:x="207" fg:w="1"/><text x="16.3841%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="16.1341%" y="661" width="0.0779%" height="15" fill="rgb(209,49,33)" fg:x="207" fg:w="1"/><text x="16.3841%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="16.1341%" y="645" width="0.0779%" height="15" fill="rgb(208,36,46)" fg:x="207" fg:w="1"/><text x="16.3841%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.2120%" y="693" width="0.0779%" height="15" fill="rgb(210,125,2)" fg:x="208" fg:w="1"/><text x="16.4620%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="16.2120%" y="677" width="0.0779%" height="15" fill="rgb(225,62,6)" fg:x="208" fg:w="1"/><text x="16.4620%" y="687.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (99 samples, 7.72%)</title><rect x="8.6516%" y="757" width="7.7163%" height="15" fill="rgb(210,54,27)" fg:x="111" fg:w="99"/><text x="8.9016%" y="767.50">plugins_cor..</text></g><g><title>plugins_core::build::Build::with_username (7 samples, 0.55%)</title><rect x="15.8223%" y="741" width="0.5456%" height="15" fill="rgb(249,189,52)" fg:x="203" fg:w="7"/><text x="16.0723%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (2 samples, 0.16%)</title><rect x="16.2120%" y="725" width="0.1559%" height="15" fill="rgb(225,134,40)" fg:x="208" fg:w="2"/><text x="16.4620%" y="735.50"></text></g><g><title>engine::users::model::add_username_to_key (2 samples, 0.16%)</title><rect x="16.2120%" y="709" width="0.1559%" height="15" fill="rgb(206,13,37)" fg:x="208" fg:w="2"/><text x="16.4620%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="16.2899%" y="693" width="0.0779%" height="15" fill="rgb(232,114,28)" fg:x="209" fg:w="1"/><text x="16.5399%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="16.2899%" y="677" width="0.0779%" height="15" fill="rgb(253,215,8)" fg:x="209" fg:w="1"/><text x="16.5399%" y="687.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::ser::Serialize for engine::users::model::Usernames&gt;::serialize (1 samples, 0.08%)</title><rect x="16.2899%" y="661" width="0.0779%" height="15" fill="rgb(254,64,19)" fg:x="209" fg:w="1"/><text x="16.5399%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.6017%" y="629" width="0.0779%" height="15" fill="rgb(242,18,46)" fg:x="213" fg:w="1"/><text x="16.8517%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6017%" y="613" width="0.0779%" height="15" fill="rgb(239,192,30)" fg:x="213" fg:w="1"/><text x="16.8517%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6017%" y="597" width="0.0779%" height="15" fill="rgb(232,73,14)" fg:x="213" fg:w="1"/><text x="16.8517%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.6017%" y="581" width="0.0779%" height="15" fill="rgb(225,51,9)" fg:x="213" fg:w="1"/><text x="16.8517%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.6017%" y="565" width="0.0779%" height="15" fill="rgb(242,217,54)" fg:x="213" fg:w="1"/><text x="16.8517%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="16.5238%" y="677" width="0.2338%" height="15" fill="rgb(216,93,3)" fg:x="212" fg:w="3"/><text x="16.7738%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="16.5238%" y="661" width="0.2338%" height="15" fill="rgb(230,119,33)" fg:x="212" fg:w="3"/><text x="16.7738%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="16.5238%" y="645" width="0.2338%" height="15" fill="rgb(238,170,27)" fg:x="212" fg:w="3"/><text x="16.7738%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6797%" y="629" width="0.0779%" height="15" fill="rgb(229,8,2)" fg:x="214" fg:w="1"/><text x="16.9297%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6797%" y="613" width="0.0779%" height="15" fill="rgb(205,214,42)" fg:x="214" fg:w="1"/><text x="16.9297%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.6797%" y="597" width="0.0779%" height="15" fill="rgb(245,113,1)" fg:x="214" fg:w="1"/><text x="16.9297%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6797%" y="581" width="0.0779%" height="15" fill="rgb(252,50,2)" fg:x="214" fg:w="1"/><text x="16.9297%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.6797%" y="565" width="0.0779%" height="15" fill="rgb(225,122,24)" fg:x="214" fg:w="1"/><text x="16.9297%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6797%" y="549" width="0.0779%" height="15" fill="rgb(234,129,31)" fg:x="214" fg:w="1"/><text x="16.9297%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="16.6797%" y="533" width="0.0779%" height="15" fill="rgb(219,177,4)" fg:x="214" fg:w="1"/><text x="16.9297%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::Properties as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="16.7576%" y="661" width="0.0779%" height="15" fill="rgb(225,142,27)" fg:x="215" fg:w="1"/><text x="17.0076%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7576%" y="645" width="0.0779%" height="15" fill="rgb(205,107,51)" fg:x="215" fg:w="1"/><text x="17.0076%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="16.7576%" y="629" width="0.0779%" height="15" fill="rgb(236,223,15)" fg:x="215" fg:w="1"/><text x="17.0076%" y="639.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="16.8355%" y="661" width="0.0779%" height="15" fill="rgb(235,133,11)" fg:x="216" fg:w="1"/><text x="17.0855%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="16.8355%" y="645" width="0.0779%" height="15" fill="rgb(247,172,13)" fg:x="216" fg:w="1"/><text x="17.0855%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.8355%" y="629" width="0.0779%" height="15" fill="rgb(233,191,41)" fg:x="216" fg:w="1"/><text x="17.0855%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8355%" y="613" width="0.0779%" height="15" fill="rgb(250,65,16)" fg:x="216" fg:w="1"/><text x="17.0855%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8355%" y="597" width="0.0779%" height="15" fill="rgb(206,10,27)" fg:x="216" fg:w="1"/><text x="17.0855%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8355%" y="581" width="0.0779%" height="15" fill="rgb(212,96,22)" fg:x="216" fg:w="1"/><text x="17.0855%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8355%" y="565" width="0.0779%" height="15" fill="rgb(206,50,0)" fg:x="216" fg:w="1"/><text x="17.0855%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.9135%" y="581" width="0.0779%" height="15" fill="rgb(249,105,52)" fg:x="217" fg:w="1"/><text x="17.1635%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.9135%" y="565" width="0.0779%" height="15" fill="rgb(216,93,51)" fg:x="217" fg:w="1"/><text x="17.1635%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (3 samples, 0.23%)</title><rect x="16.9135%" y="629" width="0.2338%" height="15" fill="rgb(217,172,13)" fg:x="217" fg:w="3"/><text x="17.1635%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="16.9135%" y="613" width="0.2338%" height="15" fill="rgb(235,199,38)" fg:x="217" fg:w="3"/><text x="17.1635%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="16.9135%" y="597" width="0.2338%" height="15" fill="rgb(221,97,33)" fg:x="217" fg:w="3"/><text x="17.1635%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.9914%" y="581" width="0.1559%" height="15" fill="rgb(205,156,50)" fg:x="218" fg:w="2"/><text x="17.2414%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.9914%" y="565" width="0.1559%" height="15" fill="rgb(215,142,19)" fg:x="218" fg:w="2"/><text x="17.2414%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.9914%" y="549" width="0.1559%" height="15" fill="rgb(232,170,7)" fg:x="218" fg:w="2"/><text x="17.2414%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.9914%" y="533" width="0.1559%" height="15" fill="rgb(223,50,17)" fg:x="218" fg:w="2"/><text x="17.2414%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="17.0694%" y="517" width="0.0779%" height="15" fill="rgb(230,103,46)" fg:x="219" fg:w="1"/><text x="17.3194%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.86%)</title><rect x="16.3679%" y="725" width="0.8574%" height="15" fill="rgb(254,30,34)" fg:x="210" fg:w="11"/><text x="16.6179%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.70%)</title><rect x="16.5238%" y="709" width="0.7015%" height="15" fill="rgb(235,198,1)" fg:x="212" fg:w="9"/><text x="16.7738%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (9 samples, 0.70%)</title><rect x="16.5238%" y="693" width="0.7015%" height="15" fill="rgb(217,105,47)" fg:x="212" fg:w="9"/><text x="16.7738%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (6 samples, 0.47%)</title><rect x="16.7576%" y="677" width="0.4677%" height="15" fill="rgb(231,18,12)" fg:x="215" fg:w="6"/><text x="17.0076%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (4 samples, 0.31%)</title><rect x="16.9135%" y="661" width="0.3118%" height="15" fill="rgb(218,196,1)" fg:x="217" fg:w="4"/><text x="17.1635%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (4 samples, 0.31%)</title><rect x="16.9135%" y="645" width="0.3118%" height="15" fill="rgb(210,32,3)" fg:x="217" fg:w="4"/><text x="17.1635%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1473%" y="629" width="0.0779%" height="15" fill="rgb(227,178,30)" fg:x="220" fg:w="1"/><text x="17.3973%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1473%" y="613" width="0.0779%" height="15" fill="rgb(231,140,27)" fg:x="220" fg:w="1"/><text x="17.3973%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1473%" y="597" width="0.0779%" height="15" fill="rgb(206,66,35)" fg:x="220" fg:w="1"/><text x="17.3973%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1473%" y="581" width="0.0779%" height="15" fill="rgb(212,34,2)" fg:x="220" fg:w="1"/><text x="17.3973%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.1473%" y="565" width="0.0779%" height="15" fill="rgb(207,201,33)" fg:x="220" fg:w="1"/><text x="17.3973%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1473%" y="549" width="0.0779%" height="15" fill="rgb(221,135,32)" fg:x="220" fg:w="1"/><text x="17.3973%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.1473%" y="533" width="0.0779%" height="15" fill="rgb(206,77,31)" fg:x="220" fg:w="1"/><text x="17.3973%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.1473%" y="517" width="0.0779%" height="15" fill="rgb(252,198,50)" fg:x="220" fg:w="1"/><text x="17.3973%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="17.1473%" y="501" width="0.0779%" height="15" fill="rgb(206,79,27)" fg:x="220" fg:w="1"/><text x="17.3973%" y="511.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (162 samples, 12.63%)</title><rect x="4.6765%" y="773" width="12.6267%" height="15" fill="rgb(228,108,9)" fg:x="60" fg:w="162"/><text x="4.9265%" y="783.50">&lt;tests::HoldingKeyI..</text></g><g><title>plugins_core::build::BuildSurroundings::make (12 samples, 0.94%)</title><rect x="16.3679%" y="757" width="0.9353%" height="15" fill="rgb(213,9,39)" fg:x="210" fg:w="12"/><text x="16.6179%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (12 samples, 0.94%)</title><rect x="16.3679%" y="741" width="0.9353%" height="15" fill="rgb(252,51,13)" fg:x="210" fg:w="12"/><text x="16.6179%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="17.2253%" y="725" width="0.0779%" height="15" fill="rgb(218,202,39)" fg:x="221" fg:w="1"/><text x="17.4753%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="17.2253%" y="709" width="0.0779%" height="15" fill="rgb(214,122,21)" fg:x="221" fg:w="1"/><text x="17.4753%" y="719.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="17.2253%" y="693" width="0.0779%" height="15" fill="rgb(217,205,48)" fg:x="221" fg:w="1"/><text x="17.4753%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="17.2253%" y="677" width="0.0779%" height="15" fill="rgb(230,216,13)" fg:x="221" fg:w="1"/><text x="17.4753%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.2253%" y="661" width="0.0779%" height="15" fill="rgb(249,118,4)" fg:x="221" fg:w="1"/><text x="17.4753%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3032%" y="773" width="0.0779%" height="15" fill="rgb(212,207,40)" fg:x="222" fg:w="1"/><text x="17.5532%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="17.3811%" y="773" width="0.0779%" height="15" fill="rgb(217,156,26)" fg:x="223" fg:w="1"/><text x="17.6311%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.3811%" y="757" width="0.0779%" height="15" fill="rgb(226,86,34)" fg:x="223" fg:w="1"/><text x="17.6311%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="17.3811%" y="741" width="0.0779%" height="15" fill="rgb(217,111,30)" fg:x="223" fg:w="1"/><text x="17.6311%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="17.3811%" y="725" width="0.0779%" height="15" fill="rgb(228,64,18)" fg:x="223" fg:w="1"/><text x="17.6311%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.3811%" y="709" width="0.0779%" height="15" fill="rgb(254,217,48)" fg:x="223" fg:w="1"/><text x="17.6311%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="17.6150%" y="741" width="0.0779%" height="15" fill="rgb(226,156,48)" fg:x="226" fg:w="1"/><text x="17.8650%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="17.6150%" y="725" width="0.0779%" height="15" fill="rgb(236,168,20)" fg:x="226" fg:w="1"/><text x="17.8650%" y="735.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="17.6150%" y="709" width="0.0779%" height="15" fill="rgb(239,210,33)" fg:x="226" fg:w="1"/><text x="17.8650%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6150%" y="693" width="0.0779%" height="15" fill="rgb(242,85,17)" fg:x="226" fg:w="1"/><text x="17.8650%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6150%" y="677" width="0.0779%" height="15" fill="rgb(221,196,15)" fg:x="226" fg:w="1"/><text x="17.8650%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6150%" y="661" width="0.0779%" height="15" fill="rgb(249,76,21)" fg:x="226" fg:w="1"/><text x="17.8650%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6150%" y="645" width="0.0779%" height="15" fill="rgb(243,67,29)" fg:x="226" fg:w="1"/><text x="17.8650%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6150%" y="629" width="0.0779%" height="15" fill="rgb(240,159,2)" fg:x="226" fg:w="1"/><text x="17.8650%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6150%" y="613" width="0.0779%" height="15" fill="rgb(244,64,3)" fg:x="226" fg:w="1"/><text x="17.8650%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6150%" y="597" width="0.0779%" height="15" fill="rgb(220,86,40)" fg:x="226" fg:w="1"/><text x="17.8650%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6150%" y="581" width="0.0779%" height="15" fill="rgb(222,194,51)" fg:x="226" fg:w="1"/><text x="17.8650%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.6150%" y="565" width="0.0779%" height="15" fill="rgb(207,154,19)" fg:x="226" fg:w="1"/><text x="17.8650%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.6150%" y="549" width="0.0779%" height="15" fill="rgb(206,178,36)" fg:x="226" fg:w="1"/><text x="17.8650%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.6150%" y="533" width="0.0779%" height="15" fill="rgb(218,8,24)" fg:x="226" fg:w="1"/><text x="17.8650%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.6150%" y="517" width="0.0779%" height="15" fill="rgb(226,83,41)" fg:x="226" fg:w="1"/><text x="17.8650%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6150%" y="501" width="0.0779%" height="15" fill="rgb(224,23,22)" fg:x="226" fg:w="1"/><text x="17.8650%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6929%" y="661" width="0.0779%" height="15" fill="rgb(218,198,45)" fg:x="227" fg:w="1"/><text x="17.9429%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.6929%" y="645" width="0.0779%" height="15" fill="rgb(249,147,41)" fg:x="227" fg:w="1"/><text x="17.9429%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.6929%" y="629" width="0.0779%" height="15" fill="rgb(244,224,13)" fg:x="227" fg:w="1"/><text x="17.9429%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.6929%" y="613" width="0.0779%" height="15" fill="rgb(225,97,27)" fg:x="227" fg:w="1"/><text x="17.9429%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.6929%" y="597" width="0.0779%" height="15" fill="rgb(254,64,0)" fg:x="227" fg:w="1"/><text x="17.9429%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6929%" y="581" width="0.0779%" height="15" fill="rgb(208,130,43)" fg:x="227" fg:w="1"/><text x="17.9429%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.6929%" y="565" width="0.0779%" height="15" fill="rgb(247,91,25)" fg:x="227" fg:w="1"/><text x="17.9429%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.6929%" y="549" width="0.0779%" height="15" fill="rgb(215,218,42)" fg:x="227" fg:w="1"/><text x="17.9429%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.6929%" y="533" width="0.0779%" height="15" fill="rgb(233,9,24)" fg:x="227" fg:w="1"/><text x="17.9429%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.6929%" y="517" width="0.0779%" height="15" fill="rgb(252,105,38)" fg:x="227" fg:w="1"/><text x="17.9429%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.6929%" y="501" width="0.0779%" height="15" fill="rgb(225,40,49)" fg:x="227" fg:w="1"/><text x="17.9429%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6929%" y="485" width="0.0779%" height="15" fill="rgb(232,196,19)" fg:x="227" fg:w="1"/><text x="17.9429%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="17.6929%" y="693" width="0.2338%" height="15" fill="rgb(207,35,15)" fg:x="227" fg:w="3"/><text x="17.9429%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="17.6929%" y="677" width="0.2338%" height="15" fill="rgb(238,68,36)" fg:x="227" fg:w="3"/><text x="17.9429%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.7708%" y="661" width="0.1559%" height="15" fill="rgb(205,158,20)" fg:x="228" fg:w="2"/><text x="18.0208%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.7708%" y="645" width="0.1559%" height="15" fill="rgb(232,32,22)" fg:x="228" fg:w="2"/><text x="18.0208%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="17.7708%" y="629" width="0.1559%" height="15" fill="rgb(210,169,6)" fg:x="228" fg:w="2"/><text x="18.0208%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8488%" y="613" width="0.0779%" height="15" fill="rgb(229,28,12)" fg:x="229" fg:w="1"/><text x="18.0988%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8488%" y="597" width="0.0779%" height="15" fill="rgb(229,78,10)" fg:x="229" fg:w="1"/><text x="18.0988%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8488%" y="581" width="0.0779%" height="15" fill="rgb(223,139,54)" fg:x="229" fg:w="1"/><text x="18.0988%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8488%" y="565" width="0.0779%" height="15" fill="rgb(207,110,4)" fg:x="229" fg:w="1"/><text x="18.0988%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8488%" y="549" width="0.0779%" height="15" fill="rgb(248,30,41)" fg:x="229" fg:w="1"/><text x="18.0988%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8488%" y="533" width="0.0779%" height="15" fill="rgb(235,54,25)" fg:x="229" fg:w="1"/><text x="18.0988%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8488%" y="517" width="0.0779%" height="15" fill="rgb(213,107,41)" fg:x="229" fg:w="1"/><text x="18.0988%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8488%" y="501" width="0.0779%" height="15" fill="rgb(237,102,9)" fg:x="229" fg:w="1"/><text x="18.0988%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8488%" y="485" width="0.0779%" height="15" fill="rgb(252,137,49)" fg:x="229" fg:w="1"/><text x="18.0988%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8488%" y="469" width="0.0779%" height="15" fill="rgb(233,202,33)" fg:x="229" fg:w="1"/><text x="18.0988%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8488%" y="453" width="0.0779%" height="15" fill="rgb(223,14,51)" fg:x="229" fg:w="1"/><text x="18.0988%" y="463.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="17.9267%" y="693" width="0.0779%" height="15" fill="rgb(248,70,23)" fg:x="230" fg:w="1"/><text x="18.1767%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="17.9267%" y="677" width="0.0779%" height="15" fill="rgb(209,207,47)" fg:x="230" fg:w="1"/><text x="18.1767%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="17.9267%" y="661" width="0.0779%" height="15" fill="rgb(245,124,2)" fg:x="230" fg:w="1"/><text x="18.1767%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="17.9267%" y="645" width="0.0779%" height="15" fill="rgb(249,208,11)" fg:x="230" fg:w="1"/><text x="18.1767%" y="655.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="17.9267%" y="629" width="0.0779%" height="15" fill="rgb(247,112,7)" fg:x="230" fg:w="1"/><text x="18.1767%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.0047%" y="661" width="0.0779%" height="15" fill="rgb(209,192,31)" fg:x="231" fg:w="1"/><text x="18.2547%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.0047%" y="645" width="0.0779%" height="15" fill="rgb(236,55,19)" fg:x="231" fg:w="1"/><text x="18.2547%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="18.0047%" y="629" width="0.0779%" height="15" fill="rgb(252,89,41)" fg:x="231" fg:w="1"/><text x="18.2547%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0047%" y="613" width="0.0779%" height="15" fill="rgb(220,172,14)" fg:x="231" fg:w="1"/><text x="18.2547%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0047%" y="597" width="0.0779%" height="15" fill="rgb(252,65,2)" fg:x="231" fg:w="1"/><text x="18.2547%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0047%" y="581" width="0.0779%" height="15" fill="rgb(250,20,8)" fg:x="231" fg:w="1"/><text x="18.2547%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (7 samples, 0.55%)</title><rect x="17.6150%" y="757" width="0.5456%" height="15" fill="rgb(234,149,13)" fg:x="226" fg:w="7"/><text x="17.8650%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.47%)</title><rect x="17.6929%" y="741" width="0.4677%" height="15" fill="rgb(223,219,12)" fg:x="227" fg:w="6"/><text x="17.9429%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (6 samples, 0.47%)</title><rect x="17.6929%" y="725" width="0.4677%" height="15" fill="rgb(234,13,49)" fg:x="227" fg:w="6"/><text x="17.9429%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (6 samples, 0.47%)</title><rect x="17.6929%" y="709" width="0.4677%" height="15" fill="rgb(214,41,25)" fg:x="227" fg:w="6"/><text x="17.9429%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.0047%" y="693" width="0.1559%" height="15" fill="rgb(232,198,52)" fg:x="231" fg:w="2"/><text x="18.2547%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.0047%" y="677" width="0.1559%" height="15" fill="rgb(236,111,46)" fg:x="231" fg:w="2"/><text x="18.2547%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.0826%" y="661" width="0.0779%" height="15" fill="rgb(253,30,20)" fg:x="232" fg:w="1"/><text x="18.3326%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="18.0826%" y="645" width="0.0779%" height="15" fill="rgb(247,141,17)" fg:x="232" fg:w="1"/><text x="18.3326%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="18.0826%" y="629" width="0.0779%" height="15" fill="rgb(214,195,21)" fg:x="232" fg:w="1"/><text x="18.3326%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (1 samples, 0.08%)</title><rect x="18.1606%" y="757" width="0.0779%" height="15" fill="rgb(214,98,12)" fg:x="233" fg:w="1"/><text x="18.4106%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="18.1606%" y="741" width="0.0779%" height="15" fill="rgb(239,4,26)" fg:x="233" fg:w="1"/><text x="18.4106%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.1606%" y="725" width="0.0779%" height="15" fill="rgb(234,210,35)" fg:x="233" fg:w="1"/><text x="18.4106%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.23%)</title><rect x="18.3944%" y="741" width="0.2338%" height="15" fill="rgb(252,178,27)" fg:x="236" fg:w="3"/><text x="18.6444%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.5503%" y="725" width="0.0779%" height="15" fill="rgb(217,50,1)" fg:x="238" fg:w="1"/><text x="18.8003%" y="735.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="18.6282%" y="741" width="0.1559%" height="15" fill="rgb(233,137,5)" fg:x="239" fg:w="2"/><text x="18.8782%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="18.6282%" y="725" width="0.1559%" height="15" fill="rgb(217,227,25)" fg:x="239" fg:w="2"/><text x="18.8782%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="18.6282%" y="709" width="0.1559%" height="15" fill="rgb(242,89,38)" fg:x="239" fg:w="2"/><text x="18.8782%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7062%" y="693" width="0.0779%" height="15" fill="rgb(212,190,30)" fg:x="240" fg:w="1"/><text x="18.9562%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="18.7062%" y="677" width="0.0779%" height="15" fill="rgb(222,120,8)" fg:x="240" fg:w="1"/><text x="18.9562%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.8620%" y="693" width="0.0779%" height="15" fill="rgb(227,181,9)" fg:x="242" fg:w="1"/><text x="19.1120%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.23%)</title><rect x="18.7841%" y="725" width="0.2338%" height="15" fill="rgb(222,125,29)" fg:x="241" fg:w="3"/><text x="19.0341%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="18.8620%" y="709" width="0.1559%" height="15" fill="rgb(215,153,31)" fg:x="242" fg:w="2"/><text x="19.1120%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.9400%" y="693" width="0.0779%" height="15" fill="rgb(228,77,30)" fg:x="243" fg:w="1"/><text x="19.1900%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.0959%" y="677" width="0.1559%" height="15" fill="rgb(226,110,9)" fg:x="245" fg:w="2"/><text x="19.3459%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.0959%" y="661" width="0.1559%" height="15" fill="rgb(219,111,7)" fg:x="245" fg:w="2"/><text x="19.3459%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.0959%" y="645" width="0.1559%" height="15" fill="rgb(229,167,25)" fg:x="245" fg:w="2"/><text x="19.3459%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.1738%" y="629" width="0.0779%" height="15" fill="rgb(209,77,43)" fg:x="246" fg:w="1"/><text x="19.4238%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="19.0959%" y="693" width="0.2338%" height="15" fill="rgb(233,70,39)" fg:x="245" fg:w="3"/><text x="19.3459%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.2518%" y="677" width="0.0779%" height="15" fill="rgb(207,171,44)" fg:x="247" fg:w="1"/><text x="19.5018%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.23%)</title><rect x="19.3297%" y="677" width="0.2338%" height="15" fill="rgb(244,91,6)" fg:x="248" fg:w="3"/><text x="19.5797%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4856%" y="661" width="0.0779%" height="15" fill="rgb(234,136,12)" fg:x="250" fg:w="1"/><text x="19.7356%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.6415%" y="661" width="0.0779%" height="15" fill="rgb(216,210,38)" fg:x="252" fg:w="1"/><text x="19.8915%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.6415%" y="645" width="0.0779%" height="15" fill="rgb(241,227,7)" fg:x="252" fg:w="1"/><text x="19.8915%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.6415%" y="629" width="0.0779%" height="15" fill="rgb(241,222,11)" fg:x="252" fg:w="1"/><text x="19.8915%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.7194%" y="645" width="0.0779%" height="15" fill="rgb(246,86,18)" fg:x="253" fg:w="1"/><text x="19.9694%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.7973%" y="629" width="0.0779%" height="15" fill="rgb(224,151,49)" fg:x="254" fg:w="1"/><text x="20.0473%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.7973%" y="613" width="0.0779%" height="15" fill="rgb(235,4,41)" fg:x="254" fg:w="1"/><text x="20.0473%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.7973%" y="597" width="0.0779%" height="15" fill="rgb(218,30,52)" fg:x="254" fg:w="1"/><text x="20.0473%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.7973%" y="581" width="0.0779%" height="15" fill="rgb(205,124,51)" fg:x="254" fg:w="1"/><text x="20.0473%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="19.5635%" y="677" width="0.3897%" height="15" fill="rgb(237,126,51)" fg:x="251" fg:w="5"/><text x="19.8135%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="19.7194%" y="661" width="0.2338%" height="15" fill="rgb(225,32,46)" fg:x="253" fg:w="3"/><text x="19.9694%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="19.7973%" y="645" width="0.1559%" height="15" fill="rgb(251,60,49)" fg:x="254" fg:w="2"/><text x="20.0473%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.8753%" y="629" width="0.0779%" height="15" fill="rgb(234,18,23)" fg:x="255" fg:w="1"/><text x="20.1253%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.8753%" y="613" width="0.0779%" height="15" fill="rgb(234,25,23)" fg:x="255" fg:w="1"/><text x="20.1253%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.8753%" y="597" width="0.0779%" height="15" fill="rgb(210,43,52)" fg:x="255" fg:w="1"/><text x="20.1253%" y="607.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.01%)</title><rect x="19.0959%" y="709" width="1.0133%" height="15" fill="rgb(237,198,21)" fg:x="245" fg:w="13"/><text x="19.3459%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="19.3297%" y="693" width="0.7794%" height="15" fill="rgb(211,20,34)" fg:x="248" fg:w="10"/><text x="19.5797%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.9532%" y="677" width="0.1559%" height="15" fill="rgb(221,155,50)" fg:x="256" fg:w="2"/><text x="20.2032%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.0312%" y="661" width="0.0779%" height="15" fill="rgb(213,214,53)" fg:x="257" fg:w="1"/><text x="20.2812%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.0312%" y="645" width="0.0779%" height="15" fill="rgb(215,229,48)" fg:x="257" fg:w="1"/><text x="20.2812%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.1091%" y="677" width="0.0779%" height="15" fill="rgb(243,88,5)" fg:x="258" fg:w="1"/><text x="20.3591%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="20.1871%" y="661" width="0.1559%" height="15" fill="rgb(216,199,8)" fg:x="259" fg:w="2"/><text x="20.4371%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.1871%" y="645" width="0.1559%" height="15" fill="rgb(241,22,4)" fg:x="259" fg:w="2"/><text x="20.4371%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.3429%" y="645" width="0.0779%" height="15" fill="rgb(209,190,22)" fg:x="261" fg:w="1"/><text x="20.5929%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4209%" y="629" width="0.0779%" height="15" fill="rgb(251,138,45)" fg:x="262" fg:w="1"/><text x="20.6709%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.4988%" y="613" width="0.0779%" height="15" fill="rgb(219,111,22)" fg:x="263" fg:w="1"/><text x="20.7488%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.4988%" y="597" width="0.0779%" height="15" fill="rgb(253,29,49)" fg:x="263" fg:w="1"/><text x="20.7488%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.5768%" y="597" width="0.0779%" height="15" fill="rgb(238,129,49)" fg:x="264" fg:w="1"/><text x="20.8268%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="20.1091%" y="709" width="0.6235%" height="15" fill="rgb(240,26,41)" fg:x="258" fg:w="8"/><text x="20.3591%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.62%)</title><rect x="20.1091%" y="693" width="0.6235%" height="15" fill="rgb(221,47,33)" fg:x="258" fg:w="8"/><text x="20.3591%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="20.1871%" y="677" width="0.5456%" height="15" fill="rgb(216,200,17)" fg:x="259" fg:w="7"/><text x="20.4371%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="20.3429%" y="661" width="0.3897%" height="15" fill="rgb(230,151,26)" fg:x="261" fg:w="5"/><text x="20.5929%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="20.4209%" y="645" width="0.3118%" height="15" fill="rgb(242,182,16)" fg:x="262" fg:w="4"/><text x="20.6709%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="20.4988%" y="629" width="0.2338%" height="15" fill="rgb(236,35,53)" fg:x="263" fg:w="3"/><text x="20.7488%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.5768%" y="613" width="0.1559%" height="15" fill="rgb(214,180,28)" fg:x="264" fg:w="2"/><text x="20.8268%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.6547%" y="597" width="0.0779%" height="15" fill="rgb(208,173,36)" fg:x="265" fg:w="1"/><text x="20.9047%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.6547%" y="581" width="0.0779%" height="15" fill="rgb(218,39,15)" fg:x="265" fg:w="1"/><text x="20.9047%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.7327%" y="677" width="0.0779%" height="15" fill="rgb(213,145,15)" fg:x="266" fg:w="1"/><text x="20.9827%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="20.8106%" y="645" width="0.0779%" height="15" fill="rgb(242,110,37)" fg:x="267" fg:w="1"/><text x="21.0606%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8885%" y="629" width="0.0779%" height="15" fill="rgb(247,146,22)" fg:x="268" fg:w="1"/><text x="21.1385%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="20.8106%" y="677" width="0.2338%" height="15" fill="rgb(215,191,7)" fg:x="267" fg:w="3"/><text x="21.0606%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="20.8106%" y="661" width="0.2338%" height="15" fill="rgb(240,158,1)" fg:x="267" fg:w="3"/><text x="21.0606%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="20.8885%" y="645" width="0.1559%" height="15" fill="rgb(241,78,32)" fg:x="268" fg:w="2"/><text x="21.1385%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9665%" y="629" width="0.0779%" height="15" fill="rgb(248,83,10)" fg:x="269" fg:w="1"/><text x="21.2165%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="20.9665%" y="613" width="0.0779%" height="15" fill="rgb(241,52,0)" fg:x="269" fg:w="1"/><text x="21.2165%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.9665%" y="597" width="0.0779%" height="15" fill="rgb(238,37,13)" fg:x="269" fg:w="1"/><text x="21.2165%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="21.1224%" y="645" width="0.1559%" height="15" fill="rgb(242,194,17)" fg:x="271" fg:w="2"/><text x="21.3724%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.16%)</title><rect x="21.1224%" y="629" width="0.1559%" height="15" fill="rgb(236,96,3)" fg:x="271" fg:w="2"/><text x="21.3724%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="21.2003%" y="613" width="0.0779%" height="15" fill="rgb(235,148,34)" fg:x="272" fg:w="1"/><text x="21.4503%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="21.2003%" y="597" width="0.0779%" height="15" fill="rgb(254,12,11)" fg:x="272" fg:w="1"/><text x="21.4503%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.23%)</title><rect x="21.1224%" y="661" width="0.2338%" height="15" fill="rgb(207,31,54)" fg:x="271" fg:w="3"/><text x="21.3724%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.2783%" y="645" width="0.0779%" height="15" fill="rgb(252,14,28)" fg:x="273" fg:w="1"/><text x="21.5283%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="21.3562%" y="661" width="0.0779%" height="15" fill="rgb(252,108,36)" fg:x="274" fg:w="1"/><text x="21.6062%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4341%" y="661" width="0.0779%" height="15" fill="rgb(214,149,7)" fg:x="275" fg:w="1"/><text x="21.6841%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.4341%" y="645" width="0.0779%" height="15" fill="rgb(243,94,12)" fg:x="275" fg:w="1"/><text x="21.6841%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.4341%" y="629" width="0.0779%" height="15" fill="rgb(208,36,10)" fg:x="275" fg:w="1"/><text x="21.6841%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.4341%" y="613" width="0.0779%" height="15" fill="rgb(233,185,52)" fg:x="275" fg:w="1"/><text x="21.6841%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.4341%" y="597" width="0.0779%" height="15" fill="rgb(234,50,45)" fg:x="275" fg:w="1"/><text x="21.6841%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4341%" y="581" width="0.0779%" height="15" fill="rgb(228,92,54)" fg:x="275" fg:w="1"/><text x="21.6841%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.4341%" y="565" width="0.0779%" height="15" fill="rgb(224,85,25)" fg:x="275" fg:w="1"/><text x="21.6841%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.4341%" y="549" width="0.0779%" height="15" fill="rgb(246,1,45)" fg:x="275" fg:w="1"/><text x="21.6841%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.4341%" y="533" width="0.0779%" height="15" fill="rgb(240,66,23)" fg:x="275" fg:w="1"/><text x="21.6841%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.4341%" y="517" width="0.0779%" height="15" fill="rgb(222,96,27)" fg:x="275" fg:w="1"/><text x="21.6841%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.4341%" y="501" width="0.0779%" height="15" fill="rgb(212,136,10)" fg:x="275" fg:w="1"/><text x="21.6841%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.4341%" y="485" width="0.0779%" height="15" fill="rgb(226,192,50)" fg:x="275" fg:w="1"/><text x="21.6841%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.5121%" y="645" width="0.0779%" height="15" fill="rgb(241,182,31)" fg:x="276" fg:w="1"/><text x="21.7621%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.5121%" y="629" width="0.0779%" height="15" fill="rgb(219,205,47)" fg:x="276" fg:w="1"/><text x="21.7621%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="21.5900%" y="645" width="0.0779%" height="15" fill="rgb(207,96,14)" fg:x="277" fg:w="1"/><text x="21.8400%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.5900%" y="629" width="0.0779%" height="15" fill="rgb(216,119,9)" fg:x="277" fg:w="1"/><text x="21.8400%" y="639.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="21.6680%" y="613" width="0.0779%" height="15" fill="rgb(235,62,36)" fg:x="278" fg:w="1"/><text x="21.9180%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.6680%" y="597" width="0.0779%" height="15" fill="rgb(214,41,27)" fg:x="278" fg:w="1"/><text x="21.9180%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="21.7459%" y="597" width="0.0779%" height="15" fill="rgb(214,174,37)" fg:x="279" fg:w="1"/><text x="21.9959%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (15 samples, 1.17%)</title><rect x="20.7327%" y="693" width="1.1691%" height="15" fill="rgb(212,11,25)" fg:x="266" fg:w="15"/><text x="20.9827%" y="703.50"></text></g><g><title>treediff::diff::diff (11 samples, 0.86%)</title><rect x="21.0444%" y="677" width="0.8574%" height="15" fill="rgb(217,71,35)" fg:x="270" fg:w="11"/><text x="21.2944%" y="687.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.39%)</title><rect x="21.5121%" y="661" width="0.3897%" height="15" fill="rgb(234,152,9)" fg:x="276" fg:w="5"/><text x="21.7621%" y="671.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="21.6680%" y="645" width="0.2338%" height="15" fill="rgb(228,32,51)" fg:x="278" fg:w="3"/><text x="21.9180%" y="655.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.23%)</title><rect x="21.6680%" y="629" width="0.2338%" height="15" fill="rgb(209,14,47)" fg:x="278" fg:w="3"/><text x="21.9180%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="21.7459%" y="613" width="0.1559%" height="15" fill="rgb(218,201,17)" fg:x="279" fg:w="2"/><text x="21.9959%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8239%" y="597" width="0.0779%" height="15" fill="rgb(218,98,15)" fg:x="280" fg:w="1"/><text x="22.0739%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="21.8239%" y="581" width="0.0779%" height="15" fill="rgb(233,202,29)" fg:x="280" fg:w="1"/><text x="22.0739%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="21.8239%" y="565" width="0.0779%" height="15" fill="rgb(207,196,44)" fg:x="280" fg:w="1"/><text x="22.0739%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="21.8239%" y="549" width="0.0779%" height="15" fill="rgb(218,63,34)" fg:x="280" fg:w="1"/><text x="22.0739%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="21.8239%" y="533" width="0.0779%" height="15" fill="rgb(209,10,5)" fg:x="280" fg:w="1"/><text x="22.0739%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8239%" y="517" width="0.0779%" height="15" fill="rgb(224,36,28)" fg:x="280" fg:w="1"/><text x="22.0739%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="21.8239%" y="501" width="0.0779%" height="15" fill="rgb(249,178,7)" fg:x="280" fg:w="1"/><text x="22.0739%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="21.8239%" y="485" width="0.0779%" height="15" fill="rgb(253,163,10)" fg:x="280" fg:w="1"/><text x="22.0739%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="21.8239%" y="469" width="0.0779%" height="15" fill="rgb(245,67,46)" fg:x="280" fg:w="1"/><text x="22.0739%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="21.8239%" y="453" width="0.0779%" height="15" fill="rgb(225,14,18)" fg:x="280" fg:w="1"/><text x="22.0739%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="21.8239%" y="437" width="0.0779%" height="15" fill="rgb(217,41,54)" fg:x="280" fg:w="1"/><text x="22.0739%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.8239%" y="421" width="0.0779%" height="15" fill="rgb(222,111,11)" fg:x="280" fg:w="1"/><text x="22.0739%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="21.9018%" y="693" width="0.0779%" height="15" fill="rgb(211,85,31)" fg:x="281" fg:w="1"/><text x="22.1518%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9018%" y="677" width="0.0779%" height="15" fill="rgb(223,29,26)" fg:x="281" fg:w="1"/><text x="22.1518%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4474%" y="661" width="0.0779%" height="15" fill="rgb(236,124,50)" fg:x="288" fg:w="1"/><text x="22.6974%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.4474%" y="645" width="0.0779%" height="15" fill="rgb(219,148,15)" fg:x="288" fg:w="1"/><text x="22.6974%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.4474%" y="629" width="0.0779%" height="15" fill="rgb(248,159,33)" fg:x="288" fg:w="1"/><text x="22.6974%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="22.5253%" y="661" width="0.0779%" height="15" fill="rgb(252,65,8)" fg:x="289" fg:w="1"/><text x="22.7753%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="22.6033%" y="661" width="0.0779%" height="15" fill="rgb(236,45,7)" fg:x="290" fg:w="1"/><text x="22.8533%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="22.6033%" y="645" width="0.0779%" height="15" fill="rgb(244,3,48)" fg:x="290" fg:w="1"/><text x="22.8533%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.6033%" y="629" width="0.0779%" height="15" fill="rgb(224,123,53)" fg:x="290" fg:w="1"/><text x="22.8533%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="22.9150%" y="613" width="0.1559%" height="15" fill="rgb(223,173,15)" fg:x="294" fg:w="2"/><text x="23.1650%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.9930%" y="597" width="0.0779%" height="15" fill="rgb(254,181,5)" fg:x="295" fg:w="1"/><text x="23.2430%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.9930%" y="581" width="0.0779%" height="15" fill="rgb(243,124,33)" fg:x="295" fg:w="1"/><text x="23.2430%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.31%)</title><rect x="23.0709%" y="613" width="0.3118%" height="15" fill="rgb(253,220,11)" fg:x="296" fg:w="4"/><text x="23.3209%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="23.0709%" y="597" width="0.3118%" height="15" fill="rgb(217,14,4)" fg:x="296" fg:w="4"/><text x="23.3209%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="23.2268%" y="581" width="0.1559%" height="15" fill="rgb(209,196,12)" fg:x="298" fg:w="2"/><text x="23.4768%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3048%" y="565" width="0.0779%" height="15" fill="rgb(237,108,29)" fg:x="299" fg:w="1"/><text x="23.5548%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4606%" y="581" width="0.0779%" height="15" fill="rgb(216,173,20)" fg:x="301" fg:w="1"/><text x="23.7106%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.4606%" y="565" width="0.0779%" height="15" fill="rgb(245,27,6)" fg:x="301" fg:w="1"/><text x="23.7106%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.4606%" y="549" width="0.0779%" height="15" fill="rgb(210,181,20)" fg:x="301" fg:w="1"/><text x="23.7106%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6165%" y="549" width="0.0779%" height="15" fill="rgb(235,213,1)" fg:x="303" fg:w="1"/><text x="23.8665%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6165%" y="533" width="0.0779%" height="15" fill="rgb(239,68,43)" fg:x="303" fg:w="1"/><text x="23.8665%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6165%" y="517" width="0.0779%" height="15" fill="rgb(254,137,43)" fg:x="303" fg:w="1"/><text x="23.8665%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8504%" y="517" width="0.0779%" height="15" fill="rgb(252,170,38)" fg:x="306" fg:w="1"/><text x="24.1004%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.8504%" y="501" width="0.0779%" height="15" fill="rgb(234,21,42)" fg:x="306" fg:w="1"/><text x="24.1004%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.8504%" y="485" width="0.0779%" height="15" fill="rgb(216,145,40)" fg:x="306" fg:w="1"/><text x="24.1004%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="24.0062%" y="501" width="0.0779%" height="15" fill="rgb(251,73,9)" fg:x="308" fg:w="1"/><text x="24.2562%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="24.0842%" y="485" width="0.3118%" height="15" fill="rgb(242,54,6)" fg:x="309" fg:w="4"/><text x="24.3342%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="24.0842%" y="469" width="0.3118%" height="15" fill="rgb(239,70,7)" fg:x="309" fg:w="4"/><text x="24.3342%" y="479.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="24.0842%" y="453" width="0.3118%" height="15" fill="rgb(216,159,35)" fg:x="309" fg:w="4"/><text x="24.3342%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="23.6945%" y="533" width="0.7794%" height="15" fill="rgb(224,50,39)" fg:x="304" fg:w="10"/><text x="23.9445%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="23.9283%" y="517" width="0.5456%" height="15" fill="rgb(235,9,35)" fg:x="307" fg:w="7"/><text x="24.1783%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="24.0842%" y="501" width="0.3897%" height="15" fill="rgb(239,34,21)" fg:x="309" fg:w="5"/><text x="24.3342%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.3959%" y="485" width="0.0779%" height="15" fill="rgb(218,162,43)" fg:x="313" fg:w="1"/><text x="24.6459%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (33 samples, 2.57%)</title><rect x="21.9797%" y="693" width="2.5721%" height="15" fill="rgb(219,89,33)" fg:x="282" fg:w="33"/><text x="22.2297%" y="703.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (32 samples, 2.49%)</title><rect x="22.0577%" y="677" width="2.4942%" height="15" fill="rgb(226,125,37)" fg:x="283" fg:w="32"/><text x="22.3077%" y="687.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 1.87%)</title><rect x="22.6812%" y="661" width="1.8706%" height="15" fill="rgb(233,149,30)" fg:x="291" fg:w="24"/><text x="22.9312%" y="671.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.87%)</title><rect x="22.6812%" y="645" width="1.8706%" height="15" fill="rgb(236,8,18)" fg:x="291" fg:w="24"/><text x="22.9312%" y="655.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (21 samples, 1.64%)</title><rect x="22.9150%" y="629" width="1.6368%" height="15" fill="rgb(205,176,9)" fg:x="294" fg:w="21"/><text x="23.1650%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.17%)</title><rect x="23.3827%" y="613" width="1.1691%" height="15" fill="rgb(252,103,44)" fg:x="300" fg:w="15"/><text x="23.6327%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.09%)</title><rect x="23.4606%" y="597" width="1.0912%" height="15" fill="rgb(207,68,53)" fg:x="301" fg:w="14"/><text x="23.7106%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (13 samples, 1.01%)</title><rect x="23.5386%" y="581" width="1.0133%" height="15" fill="rgb(218,193,48)" fg:x="302" fg:w="13"/><text x="23.7886%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.94%)</title><rect x="23.6165%" y="565" width="0.9353%" height="15" fill="rgb(234,121,52)" fg:x="303" fg:w="12"/><text x="23.8665%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="23.6945%" y="549" width="0.8574%" height="15" fill="rgb(227,218,49)" fg:x="304" fg:w="11"/><text x="23.9445%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_map (1 samples, 0.08%)</title><rect x="24.4739%" y="533" width="0.0779%" height="15" fill="rgb(221,8,7)" fg:x="314" fg:w="1"/><text x="24.7239%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="24.7077%" y="549" width="0.1559%" height="15" fill="rgb(217,151,36)" fg:x="317" fg:w="2"/><text x="24.9577%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="24.7077%" y="533" width="0.1559%" height="15" fill="rgb(213,71,5)" fg:x="317" fg:w="2"/><text x="24.9577%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="24.7077%" y="517" width="0.1559%" height="15" fill="rgb(225,145,43)" fg:x="317" fg:w="2"/><text x="24.9577%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.7857%" y="501" width="0.0779%" height="15" fill="rgb(235,118,19)" fg:x="318" fg:w="1"/><text x="25.0357%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="24.8636%" y="469" width="0.1559%" height="15" fill="rgb(214,102,36)" fg:x="319" fg:w="2"/><text x="25.1136%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="24.9415%" y="453" width="0.0779%" height="15" fill="rgb(220,56,43)" fg:x="320" fg:w="1"/><text x="25.1915%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9415%" y="437" width="0.0779%" height="15" fill="rgb(246,136,46)" fg:x="320" fg:w="1"/><text x="25.1915%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.9415%" y="421" width="0.0779%" height="15" fill="rgb(249,99,12)" fg:x="320" fg:w="1"/><text x="25.1915%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.9415%" y="405" width="0.0779%" height="15" fill="rgb(224,31,42)" fg:x="320" fg:w="1"/><text x="25.1915%" y="415.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.0195%" y="469" width="0.0779%" height="15" fill="rgb(208,96,21)" fg:x="321" fg:w="1"/><text x="25.2695%" y="479.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="25.0195%" y="453" width="0.0779%" height="15" fill="rgb(237,229,7)" fg:x="321" fg:w="1"/><text x="25.2695%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="24.8636%" y="533" width="0.3897%" height="15" fill="rgb(210,12,6)" fg:x="319" fg:w="5"/><text x="25.1136%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="24.8636%" y="517" width="0.3897%" height="15" fill="rgb(240,9,34)" fg:x="319" fg:w="5"/><text x="25.1136%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="24.8636%" y="501" width="0.3897%" height="15" fill="rgb(211,68,37)" fg:x="319" fg:w="5"/><text x="25.1136%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="24.8636%" y="485" width="0.3897%" height="15" fill="rgb(249,138,50)" fg:x="319" fg:w="5"/><text x="25.1136%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.0974%" y="469" width="0.1559%" height="15" fill="rgb(243,185,40)" fg:x="322" fg:w="2"/><text x="25.3474%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.0974%" y="453" width="0.1559%" height="15" fill="rgb(242,92,35)" fg:x="322" fg:w="2"/><text x="25.3474%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="25.0974%" y="437" width="0.1559%" height="15" fill="rgb(244,98,5)" fg:x="322" fg:w="2"/><text x="25.3474%" y="447.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="25.2533%" y="533" width="0.2338%" height="15" fill="rgb(228,186,29)" fg:x="324" fg:w="3"/><text x="25.5033%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="25.3313%" y="517" width="0.1559%" height="15" fill="rgb(253,7,44)" fg:x="325" fg:w="2"/><text x="25.5813%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.94%)</title><rect x="24.7077%" y="565" width="0.9353%" height="15" fill="rgb(216,11,45)" fg:x="317" fg:w="12"/><text x="24.9577%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.78%)</title><rect x="24.8636%" y="549" width="0.7794%" height="15" fill="rgb(205,67,3)" fg:x="319" fg:w="10"/><text x="25.1136%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.4871%" y="533" width="0.1559%" height="15" fill="rgb(250,18,3)" fg:x="327" fg:w="2"/><text x="25.7371%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="25.4871%" y="517" width="0.1559%" height="15" fill="rgb(241,222,43)" fg:x="327" fg:w="2"/><text x="25.7371%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.5651%" y="501" width="0.0779%" height="15" fill="rgb(233,115,3)" fg:x="328" fg:w="1"/><text x="25.8151%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="25.7210%" y="549" width="0.0779%" height="15" fill="rgb(215,165,25)" fg:x="330" fg:w="1"/><text x="25.9710%" y="559.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (16 samples, 1.25%)</title><rect x="24.6298%" y="597" width="1.2471%" height="15" fill="rgb(234,179,6)" fg:x="316" fg:w="16"/><text x="24.8798%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.17%)</title><rect x="24.7077%" y="581" width="1.1691%" height="15" fill="rgb(215,82,23)" fg:x="317" fg:w="15"/><text x="24.9577%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="25.6430%" y="565" width="0.2338%" height="15" fill="rgb(211,47,18)" fg:x="329" fg:w="3"/><text x="25.8930%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.7989%" y="549" width="0.0779%" height="15" fill="rgb(248,17,9)" fg:x="331" fg:w="1"/><text x="26.0489%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="25.8769%" y="597" width="0.0779%" height="15" fill="rgb(210,212,12)" fg:x="332" fg:w="1"/><text x="26.1269%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (23 samples, 1.79%)</title><rect x="24.5518%" y="613" width="1.7927%" height="15" fill="rgb(230,135,45)" fg:x="315" fg:w="23"/><text x="24.8018%" y="623.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.39%)</title><rect x="25.9548%" y="597" width="0.3897%" height="15" fill="rgb(214,121,41)" fg:x="333" fg:w="5"/><text x="26.2048%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.1886%" y="581" width="0.1559%" height="15" fill="rgb(239,165,45)" fg:x="336" fg:w="2"/><text x="26.4386%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="26.1886%" y="565" width="0.1559%" height="15" fill="rgb(214,85,51)" fg:x="336" fg:w="2"/><text x="26.4386%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (24 samples, 1.87%)</title><rect x="24.5518%" y="629" width="1.8706%" height="15" fill="rgb(223,90,27)" fg:x="315" fg:w="24"/><text x="24.8018%" y="639.50">&lt;..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.3445%" y="613" width="0.0779%" height="15" fill="rgb(244,84,11)" fg:x="338" fg:w="1"/><text x="26.5945%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.23%)</title><rect x="26.4224%" y="629" width="0.2338%" height="15" fill="rgb(253,41,47)" fg:x="339" fg:w="3"/><text x="26.6724%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.5783%" y="613" width="0.0779%" height="15" fill="rgb(232,39,5)" fg:x="341" fg:w="1"/><text x="26.8283%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (103 samples, 8.03%)</title><rect x="18.7841%" y="741" width="8.0281%" height="15" fill="rgb(211,93,4)" fg:x="241" fg:w="103"/><text x="19.0341%" y="751.50">engine::int..</text></g><g><title>engine::session::SavesEntities::check_for_changes (100 samples, 7.79%)</title><rect x="19.0179%" y="725" width="7.7942%" height="15" fill="rgb(219,50,49)" fg:x="244" fg:w="100"/><text x="19.2679%" y="735.50">engine::ses..</text></g><g><title>kernel::model::any_entity_changes (78 samples, 6.08%)</title><rect x="20.7327%" y="709" width="6.0795%" height="15" fill="rgb(232,80,19)" fg:x="266" fg:w="78"/><text x="20.9827%" y="719.50">kernel::..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (29 samples, 2.26%)</title><rect x="24.5518%" y="693" width="2.2603%" height="15" fill="rgb(215,227,39)" fg:x="315" fg:w="29"/><text x="24.8018%" y="703.50">s..</text></g><g><title>serde_json::de::from_trait (29 samples, 2.26%)</title><rect x="24.5518%" y="677" width="2.2603%" height="15" fill="rgb(211,99,12)" fg:x="315" fg:w="29"/><text x="24.8018%" y="687.50">s..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (29 samples, 2.26%)</title><rect x="24.5518%" y="661" width="2.2603%" height="15" fill="rgb(214,158,5)" fg:x="315" fg:w="29"/><text x="24.8018%" y="671.50">&lt;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (29 samples, 2.26%)</title><rect x="24.5518%" y="645" width="2.2603%" height="15" fill="rgb(242,19,53)" fg:x="315" fg:w="29"/><text x="24.8018%" y="655.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.6563%" y="629" width="0.1559%" height="15" fill="rgb(208,18,20)" fg:x="342" fg:w="2"/><text x="26.9063%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="26.6563%" y="613" width="0.1559%" height="15" fill="rgb(250,44,11)" fg:x="342" fg:w="2"/><text x="26.9063%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.7342%" y="597" width="0.0779%" height="15" fill="rgb(238,159,13)" fg:x="343" fg:w="1"/><text x="26.9842%" y="607.50"></text></g><g><title>engine::session::Session::close (121 samples, 9.43%)</title><rect x="17.4591%" y="773" width="9.4310%" height="15" fill="rgb(231,74,18)" fg:x="224" fg:w="121"/><text x="17.7091%" y="783.50">engine::sessi..</text></g><g><title>engine::session::Session::save_entity_changes (111 samples, 8.65%)</title><rect x="18.2385%" y="757" width="8.6516%" height="15" fill="rgb(229,219,45)" fg:x="234" fg:w="111"/><text x="18.4885%" y="767.50">engine::sess..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="26.8122%" y="741" width="0.0779%" height="15" fill="rgb(210,221,1)" fg:x="344" fg:w="1"/><text x="27.0622%" y="751.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="26.8122%" y="725" width="0.0779%" height="15" fill="rgb(209,60,51)" fg:x="344" fg:w="1"/><text x="27.0622%" y="735.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="26.8122%" y="709" width="0.0779%" height="15" fill="rgb(252,97,34)" fg:x="344" fg:w="1"/><text x="27.0622%" y="719.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="26.8122%" y="693" width="0.0779%" height="15" fill="rgb(243,211,37)" fg:x="344" fg:w="1"/><text x="27.0622%" y="703.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="26.8122%" y="677" width="0.0779%" height="15" fill="rgb(210,229,37)" fg:x="344" fg:w="1"/><text x="27.0622%" y="687.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="26.8122%" y="661" width="0.0779%" height="15" fill="rgb(220,208,43)" fg:x="344" fg:w="1"/><text x="27.0622%" y="671.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="26.8122%" y="645" width="0.0779%" height="15" fill="rgb(218,118,50)" fg:x="344" fg:w="1"/><text x="27.0622%" y="655.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="27.2019%" y="677" width="0.0779%" height="15" fill="rgb(254,169,52)" fg:x="349" fg:w="1"/><text x="27.4519%" y="687.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="27.2019%" y="661" width="0.0779%" height="15" fill="rgb(221,214,37)" fg:x="349" fg:w="1"/><text x="27.4519%" y="671.50"></text></g><g><title>&lt;plugins_core::building::parser::MakeItemParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="27.2019%" y="645" width="0.0779%" height="15" fill="rgb(254,186,32)" fg:x="349" fg:w="1"/><text x="27.4519%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.4357%" y="565" width="0.0779%" height="15" fill="rgb(215,144,43)" fg:x="352" fg:w="1"/><text x="27.6857%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.70%)</title><rect x="27.5136%" y="565" width="0.7015%" height="15" fill="rgb(252,21,46)" fg:x="353" fg:w="9"/><text x="27.7636%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.70%)</title><rect x="27.5136%" y="549" width="0.7015%" height="15" fill="rgb(207,166,46)" fg:x="353" fg:w="9"/><text x="27.7636%" y="559.50"></text></g><g><title>realloc (9 samples, 0.70%)</title><rect x="27.5136%" y="533" width="0.7015%" height="15" fill="rgb(253,37,49)" fg:x="353" fg:w="9"/><text x="27.7636%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="28.2151%" y="549" width="0.1559%" height="15" fill="rgb(222,97,20)" fg:x="362" fg:w="2"/><text x="28.4651%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="28.2151%" y="533" width="0.1559%" height="15" fill="rgb(244,181,26)" fg:x="362" fg:w="2"/><text x="28.4651%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="28.2151%" y="517" width="0.1559%" height="15" fill="rgb(241,22,29)" fg:x="362" fg:w="2"/><text x="28.4651%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="28.2931%" y="501" width="0.0779%" height="15" fill="rgb(206,200,43)" fg:x="363" fg:w="1"/><text x="28.5431%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="485" width="0.0779%" height="15" fill="rgb(226,224,43)" fg:x="363" fg:w="1"/><text x="28.5431%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2931%" y="469" width="0.0779%" height="15" fill="rgb(253,129,28)" fg:x="363" fg:w="1"/><text x="28.5431%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="453" width="0.0779%" height="15" fill="rgb(252,99,33)" fg:x="363" fg:w="1"/><text x="28.5431%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="437" width="0.0779%" height="15" fill="rgb(208,123,45)" fg:x="363" fg:w="1"/><text x="28.5431%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="421" width="0.0779%" height="15" fill="rgb(251,106,12)" fg:x="363" fg:w="1"/><text x="28.5431%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2931%" y="405" width="0.0779%" height="15" fill="rgb(240,209,35)" fg:x="363" fg:w="1"/><text x="28.5431%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="389" width="0.0779%" height="15" fill="rgb(214,52,50)" fg:x="363" fg:w="1"/><text x="28.5431%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="373" width="0.0779%" height="15" fill="rgb(234,119,4)" fg:x="363" fg:w="1"/><text x="28.5431%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="357" width="0.0779%" height="15" fill="rgb(228,181,36)" fg:x="363" fg:w="1"/><text x="28.5431%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="28.2931%" y="341" width="0.0779%" height="15" fill="rgb(213,171,42)" fg:x="363" fg:w="1"/><text x="28.5431%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="325" width="0.0779%" height="15" fill="rgb(239,14,41)" fg:x="363" fg:w="1"/><text x="28.5431%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="28.2931%" y="309" width="0.0779%" height="15" fill="rgb(239,111,46)" fg:x="363" fg:w="1"/><text x="28.5431%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="28.3710%" y="549" width="0.0779%" height="15" fill="rgb(214,72,7)" fg:x="364" fg:w="1"/><text x="28.6210%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="28.4489%" y="549" width="0.0779%" height="15" fill="rgb(221,114,1)" fg:x="365" fg:w="1"/><text x="28.6989%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="28.4489%" y="533" width="0.0779%" height="15" fill="rgb(213,143,14)" fg:x="365" fg:w="1"/><text x="28.6989%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (16 samples, 1.25%)</title><rect x="27.4357%" y="581" width="1.2471%" height="15" fill="rgb(220,221,53)" fg:x="352" fg:w="16"/><text x="27.6857%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (6 samples, 0.47%)</title><rect x="28.2151%" y="565" width="0.4677%" height="15" fill="rgb(236,189,27)" fg:x="362" fg:w="6"/><text x="28.4651%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="28.5269%" y="549" width="0.1559%" height="15" fill="rgb(252,139,49)" fg:x="366" fg:w="2"/><text x="28.7769%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="28.5269%" y="533" width="0.1559%" height="15" fill="rgb(231,158,33)" fg:x="366" fg:w="2"/><text x="28.7769%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.5269%" y="517" width="0.1559%" height="15" fill="rgb(207,201,15)" fg:x="366" fg:w="2"/><text x="28.7769%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.5269%" y="501" width="0.1559%" height="15" fill="rgb(218,43,48)" fg:x="366" fg:w="2"/><text x="28.7769%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="28.6048%" y="485" width="0.0779%" height="15" fill="rgb(244,63,52)" fg:x="367" fg:w="1"/><text x="28.8548%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="28.6048%" y="469" width="0.0779%" height="15" fill="rgb(236,60,17)" fg:x="367" fg:w="1"/><text x="28.8548%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="28.6048%" y="453" width="0.0779%" height="15" fill="rgb(205,206,29)" fg:x="367" fg:w="1"/><text x="28.8548%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.6048%" y="437" width="0.0779%" height="15" fill="rgb(205,209,35)" fg:x="367" fg:w="1"/><text x="28.8548%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.55%)</title><rect x="28.6828%" y="565" width="0.5456%" height="15" fill="rgb(227,112,14)" fg:x="368" fg:w="7"/><text x="28.9328%" y="575.50"></text></g><g><title>__libc_malloc (7 samples, 0.55%)</title><rect x="28.6828%" y="549" width="0.5456%" height="15" fill="rgb(248,151,9)" fg:x="368" fg:w="7"/><text x="28.9328%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (25 samples, 1.95%)</title><rect x="27.4357%" y="613" width="1.9486%" height="15" fill="rgb(247,45,40)" fg:x="352" fg:w="25"/><text x="27.6857%" y="623.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (25 samples, 1.95%)</title><rect x="27.4357%" y="597" width="1.9486%" height="15" fill="rgb(232,185,16)" fg:x="352" fg:w="25"/><text x="27.6857%" y="607.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (9 samples, 0.70%)</title><rect x="28.6828%" y="581" width="0.7015%" height="15" fill="rgb(215,45,44)" fg:x="368" fg:w="9"/><text x="28.9328%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="29.2284%" y="565" width="0.1559%" height="15" fill="rgb(206,69,32)" fg:x="375" fg:w="2"/><text x="29.4784%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="29.3063%" y="549" width="0.0779%" height="15" fill="rgb(233,98,50)" fg:x="376" fg:w="1"/><text x="29.5563%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="29.3063%" y="533" width="0.0779%" height="15" fill="rgb(232,217,52)" fg:x="376" fg:w="1"/><text x="29.5563%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.3063%" y="517" width="0.0779%" height="15" fill="rgb(250,42,51)" fg:x="376" fg:w="1"/><text x="29.5563%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="29.3063%" y="501" width="0.0779%" height="15" fill="rgb(241,200,26)" fg:x="376" fg:w="1"/><text x="29.5563%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="29.3063%" y="485" width="0.0779%" height="15" fill="rgb(207,10,32)" fg:x="376" fg:w="1"/><text x="29.5563%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3063%" y="469" width="0.0779%" height="15" fill="rgb(214,63,15)" fg:x="376" fg:w="1"/><text x="29.5563%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3063%" y="453" width="0.0779%" height="15" fill="rgb(234,176,14)" fg:x="376" fg:w="1"/><text x="29.5563%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3063%" y="437" width="0.0779%" height="15" fill="rgb(226,104,52)" fg:x="376" fg:w="1"/><text x="29.5563%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3063%" y="421" width="0.0779%" height="15" fill="rgb(211,222,1)" fg:x="376" fg:w="1"/><text x="29.5563%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3063%" y="405" width="0.0779%" height="15" fill="rgb(237,7,3)" fg:x="376" fg:w="1"/><text x="29.5563%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.3063%" y="389" width="0.0779%" height="15" fill="rgb(218,143,7)" fg:x="376" fg:w="1"/><text x="29.5563%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.3063%" y="373" width="0.0779%" height="15" fill="rgb(208,25,22)" fg:x="376" fg:w="1"/><text x="29.5563%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="29.3843%" y="597" width="0.0779%" height="15" fill="rgb(228,127,16)" fg:x="377" fg:w="1"/><text x="29.6343%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.3843%" y="581" width="0.0779%" height="15" fill="rgb(237,86,27)" fg:x="377" fg:w="1"/><text x="29.6343%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.4622%" y="517" width="0.0779%" height="15" fill="rgb(207,125,19)" fg:x="378" fg:w="1"/><text x="29.7122%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4622%" y="501" width="0.0779%" height="15" fill="rgb(243,195,0)" fg:x="378" fg:w="1"/><text x="29.7122%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4622%" y="485" width="0.0779%" height="15" fill="rgb(230,95,18)" fg:x="378" fg:w="1"/><text x="29.7122%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4622%" y="469" width="0.0779%" height="15" fill="rgb(232,157,21)" fg:x="378" fg:w="1"/><text x="29.7122%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4622%" y="453" width="0.0779%" height="15" fill="rgb(212,120,50)" fg:x="378" fg:w="1"/><text x="29.7122%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.4622%" y="437" width="0.0779%" height="15" fill="rgb(222,204,44)" fg:x="378" fg:w="1"/><text x="29.7122%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4622%" y="421" width="0.0779%" height="15" fill="rgb(236,6,33)" fg:x="378" fg:w="1"/><text x="29.7122%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.4622%" y="565" width="0.1559%" height="15" fill="rgb(247,11,38)" fg:x="378" fg:w="2"/><text x="29.7122%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="29.4622%" y="549" width="0.1559%" height="15" fill="rgb(215,111,0)" fg:x="378" fg:w="2"/><text x="29.7122%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="29.4622%" y="533" width="0.1559%" height="15" fill="rgb(211,65,46)" fg:x="378" fg:w="2"/><text x="29.7122%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5401%" y="517" width="0.0779%" height="15" fill="rgb(216,5,12)" fg:x="379" fg:w="1"/><text x="29.7901%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5401%" y="501" width="0.0779%" height="15" fill="rgb(226,7,2)" fg:x="379" fg:w="1"/><text x="29.7901%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5401%" y="485" width="0.0779%" height="15" fill="rgb(242,116,12)" fg:x="379" fg:w="1"/><text x="29.7901%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5401%" y="469" width="0.0779%" height="15" fill="rgb(249,209,7)" fg:x="379" fg:w="1"/><text x="29.7901%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.5401%" y="453" width="0.0779%" height="15" fill="rgb(232,73,17)" fg:x="379" fg:w="1"/><text x="29.7901%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5401%" y="437" width="0.0779%" height="15" fill="rgb(214,13,32)" fg:x="379" fg:w="1"/><text x="29.7901%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.5401%" y="421" width="0.0779%" height="15" fill="rgb(221,125,10)" fg:x="379" fg:w="1"/><text x="29.7901%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6181%" y="517" width="0.0779%" height="15" fill="rgb(246,7,44)" fg:x="380" fg:w="1"/><text x="29.8681%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.6181%" y="501" width="0.0779%" height="15" fill="rgb(239,18,35)" fg:x="380" fg:w="1"/><text x="29.8681%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6181%" y="485" width="0.0779%" height="15" fill="rgb(250,222,16)" fg:x="380" fg:w="1"/><text x="29.8681%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6181%" y="469" width="0.0779%" height="15" fill="rgb(219,100,8)" fg:x="380" fg:w="1"/><text x="29.8681%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6181%" y="453" width="0.0779%" height="15" fill="rgb(240,62,13)" fg:x="380" fg:w="1"/><text x="29.8681%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6181%" y="437" width="0.0779%" height="15" fill="rgb(253,194,2)" fg:x="380" fg:w="1"/><text x="29.8681%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.6181%" y="421" width="0.0779%" height="15" fill="rgb(235,58,31)" fg:x="380" fg:w="1"/><text x="29.8681%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.6181%" y="405" width="0.0779%" height="15" fill="rgb(231,37,11)" fg:x="380" fg:w="1"/><text x="29.8681%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="29.4622%" y="597" width="0.3118%" height="15" fill="rgb(235,133,0)" fg:x="378" fg:w="4"/><text x="29.7122%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="29.4622%" y="581" width="0.3118%" height="15" fill="rgb(212,185,40)" fg:x="378" fg:w="4"/><text x="29.7122%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.6181%" y="565" width="0.1559%" height="15" fill="rgb(216,68,42)" fg:x="380" fg:w="2"/><text x="29.8681%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="29.6181%" y="549" width="0.1559%" height="15" fill="rgb(239,81,4)" fg:x="380" fg:w="2"/><text x="29.8681%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="29.6181%" y="533" width="0.1559%" height="15" fill="rgb(206,86,6)" fg:x="380" fg:w="2"/><text x="29.8681%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6960%" y="517" width="0.0779%" height="15" fill="rgb(249,95,27)" fg:x="381" fg:w="1"/><text x="29.9460%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6960%" y="501" width="0.0779%" height="15" fill="rgb(205,155,45)" fg:x="381" fg:w="1"/><text x="29.9460%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6960%" y="485" width="0.0779%" height="15" fill="rgb(213,55,42)" fg:x="381" fg:w="1"/><text x="29.9460%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6960%" y="469" width="0.0779%" height="15" fill="rgb(249,197,4)" fg:x="381" fg:w="1"/><text x="29.9460%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.6960%" y="453" width="0.0779%" height="15" fill="rgb(212,128,32)" fg:x="381" fg:w="1"/><text x="29.9460%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6960%" y="437" width="0.0779%" height="15" fill="rgb(252,47,30)" fg:x="381" fg:w="1"/><text x="29.9460%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6960%" y="421" width="0.0779%" height="15" fill="rgb(209,79,18)" fg:x="381" fg:w="1"/><text x="29.9460%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6960%" y="405" width="0.0779%" height="15" fill="rgb(225,81,38)" fg:x="381" fg:w="1"/><text x="29.9460%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6960%" y="389" width="0.0779%" height="15" fill="rgb(205,95,16)" fg:x="381" fg:w="1"/><text x="29.9460%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.6960%" y="373" width="0.0779%" height="15" fill="rgb(214,30,4)" fg:x="381" fg:w="1"/><text x="29.9460%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.6960%" y="357" width="0.0779%" height="15" fill="rgb(232,137,22)" fg:x="381" fg:w="1"/><text x="29.9460%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="29.8519%" y="565" width="0.1559%" height="15" fill="rgb(232,156,19)" fg:x="383" fg:w="2"/><text x="30.1019%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.8519%" y="549" width="0.1559%" height="15" fill="rgb(248,157,26)" fg:x="383" fg:w="2"/><text x="30.1019%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="29.8519%" y="533" width="0.1559%" height="15" fill="rgb(242,24,3)" fg:x="383" fg:w="2"/><text x="30.1019%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.8519%" y="517" width="0.1559%" height="15" fill="rgb(218,195,48)" fg:x="383" fg:w="2"/><text x="30.1019%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9299%" y="501" width="0.0779%" height="15" fill="rgb(214,193,36)" fg:x="384" fg:w="1"/><text x="30.1799%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.9299%" y="485" width="0.0779%" height="15" fill="rgb(242,110,40)" fg:x="384" fg:w="1"/><text x="30.1799%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.9299%" y="469" width="0.0779%" height="15" fill="rgb(233,150,26)" fg:x="384" fg:w="1"/><text x="30.1799%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.9299%" y="453" width="0.0779%" height="15" fill="rgb(239,200,30)" fg:x="384" fg:w="1"/><text x="30.1799%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.9299%" y="437" width="0.0779%" height="15" fill="rgb(226,28,11)" fg:x="384" fg:w="1"/><text x="30.1799%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9299%" y="421" width="0.0779%" height="15" fill="rgb(220,26,48)" fg:x="384" fg:w="1"/><text x="30.1799%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.9299%" y="405" width="0.0779%" height="15" fill="rgb(232,10,11)" fg:x="384" fg:w="1"/><text x="30.1799%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.9299%" y="389" width="0.0779%" height="15" fill="rgb(252,143,50)" fg:x="384" fg:w="1"/><text x="30.1799%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.9299%" y="373" width="0.0779%" height="15" fill="rgb(206,58,22)" fg:x="384" fg:w="1"/><text x="30.1799%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.9299%" y="357" width="0.0779%" height="15" fill="rgb(250,9,45)" fg:x="384" fg:w="1"/><text x="30.1799%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.9299%" y="341" width="0.0779%" height="15" fill="rgb(225,148,14)" fg:x="384" fg:w="1"/><text x="30.1799%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.9299%" y="325" width="0.0779%" height="15" fill="rgb(205,178,40)" fg:x="384" fg:w="1"/><text x="30.1799%" y="335.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="30.0078%" y="565" width="0.0779%" height="15" fill="rgb(215,201,4)" fg:x="385" fg:w="1"/><text x="30.2578%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="30.0078%" y="549" width="0.0779%" height="15" fill="rgb(219,223,24)" fg:x="385" fg:w="1"/><text x="30.2578%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="30.0078%" y="533" width="0.0779%" height="15" fill="rgb(217,19,31)" fg:x="385" fg:w="1"/><text x="30.2578%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="30.0078%" y="517" width="0.0779%" height="15" fill="rgb(235,33,3)" fg:x="385" fg:w="1"/><text x="30.2578%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="30.0078%" y="501" width="0.0779%" height="15" fill="rgb(221,39,18)" fg:x="385" fg:w="1"/><text x="30.2578%" y="511.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.0078%" y="485" width="0.0779%" height="15" fill="rgb(242,162,33)" fg:x="385" fg:w="1"/><text x="30.2578%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.0078%" y="469" width="0.0779%" height="15" fill="rgb(233,215,28)" fg:x="385" fg:w="1"/><text x="30.2578%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.39%)</title><rect x="29.7740%" y="597" width="0.3897%" height="15" fill="rgb(212,117,9)" fg:x="382" fg:w="5"/><text x="30.0240%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.39%)</title><rect x="29.7740%" y="581" width="0.3897%" height="15" fill="rgb(237,70,47)" fg:x="382" fg:w="5"/><text x="30.0240%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.0857%" y="565" width="0.0779%" height="15" fill="rgb(206,177,13)" fg:x="386" fg:w="1"/><text x="30.3357%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.0857%" y="549" width="0.0779%" height="15" fill="rgb(209,174,33)" fg:x="386" fg:w="1"/><text x="30.3357%" y="559.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="30.0857%" y="533" width="0.0779%" height="15" fill="rgb(226,6,11)" fg:x="386" fg:w="1"/><text x="30.3357%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1637%" y="565" width="0.0779%" height="15" fill="rgb(240,214,6)" fg:x="387" fg:w="1"/><text x="30.4137%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1637%" y="549" width="0.0779%" height="15" fill="rgb(254,214,40)" fg:x="387" fg:w="1"/><text x="30.4137%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1637%" y="533" width="0.0779%" height="15" fill="rgb(230,187,15)" fg:x="387" fg:w="1"/><text x="30.4137%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1637%" y="517" width="0.0779%" height="15" fill="rgb(250,11,27)" fg:x="387" fg:w="1"/><text x="30.4137%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.3196%" y="485" width="0.0779%" height="15" fill="rgb(243,107,19)" fg:x="389" fg:w="1"/><text x="30.5696%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (4 samples, 0.31%)</title><rect x="30.1637%" y="597" width="0.3118%" height="15" fill="rgb(253,66,26)" fg:x="387" fg:w="4"/><text x="30.4137%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (4 samples, 0.31%)</title><rect x="30.1637%" y="581" width="0.3118%" height="15" fill="rgb(228,43,8)" fg:x="387" fg:w="4"/><text x="30.4137%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.23%)</title><rect x="30.2416%" y="565" width="0.2338%" height="15" fill="rgb(232,197,36)" fg:x="388" fg:w="3"/><text x="30.4916%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.23%)</title><rect x="30.2416%" y="549" width="0.2338%" height="15" fill="rgb(221,182,31)" fg:x="388" fg:w="3"/><text x="30.4916%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="30.2416%" y="533" width="0.2338%" height="15" fill="rgb(244,25,36)" fg:x="388" fg:w="3"/><text x="30.4916%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.23%)</title><rect x="30.2416%" y="517" width="0.2338%" height="15" fill="rgb(247,101,19)" fg:x="388" fg:w="3"/><text x="30.4916%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.3196%" y="501" width="0.1559%" height="15" fill="rgb(223,117,19)" fg:x="389" fg:w="2"/><text x="30.5696%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3975%" y="485" width="0.0779%" height="15" fill="rgb(249,63,38)" fg:x="390" fg:w="1"/><text x="30.6475%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4754%" y="549" width="0.0779%" height="15" fill="rgb(220,143,23)" fg:x="391" fg:w="1"/><text x="30.7254%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::scopes::Property)&gt; (1 samples, 0.08%)</title><rect x="30.5534%" y="533" width="0.0779%" height="15" fill="rgb(252,183,22)" fg:x="392" fg:w="1"/><text x="30.8034%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.5534%" y="517" width="0.0779%" height="15" fill="rgb(243,176,15)" fg:x="392" fg:w="1"/><text x="30.8034%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6313%" y="485" width="0.0779%" height="15" fill="rgb(244,204,46)" fg:x="393" fg:w="1"/><text x="30.8813%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6313%" y="469" width="0.0779%" height="15" fill="rgb(227,28,54)" fg:x="393" fg:w="1"/><text x="30.8813%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6313%" y="453" width="0.0779%" height="15" fill="rgb(231,10,15)" fg:x="393" fg:w="1"/><text x="30.8813%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6313%" y="437" width="0.0779%" height="15" fill="rgb(210,200,17)" fg:x="393" fg:w="1"/><text x="30.8813%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6313%" y="421" width="0.0779%" height="15" fill="rgb(251,106,46)" fg:x="393" fg:w="1"/><text x="30.8813%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6313%" y="405" width="0.0779%" height="15" fill="rgb(218,211,15)" fg:x="393" fg:w="1"/><text x="30.8813%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.6313%" y="389" width="0.0779%" height="15" fill="rgb(239,62,10)" fg:x="393" fg:w="1"/><text x="30.8813%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.6313%" y="373" width="0.0779%" height="15" fill="rgb(225,53,53)" fg:x="393" fg:w="1"/><text x="30.8813%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.6313%" y="357" width="0.0779%" height="15" fill="rgb(207,16,24)" fg:x="393" fg:w="1"/><text x="30.8813%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6313%" y="341" width="0.0779%" height="15" fill="rgb(217,52,28)" fg:x="393" fg:w="1"/><text x="30.8813%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.6313%" y="325" width="0.0779%" height="15" fill="rgb(246,1,5)" fg:x="393" fg:w="1"/><text x="30.8813%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.6313%" y="309" width="0.0779%" height="15" fill="rgb(221,29,26)" fg:x="393" fg:w="1"/><text x="30.8813%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.6313%" y="293" width="0.0779%" height="15" fill="rgb(250,133,32)" fg:x="393" fg:w="1"/><text x="30.8813%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.6313%" y="277" width="0.0779%" height="15" fill="rgb(236,63,16)" fg:x="393" fg:w="1"/><text x="30.8813%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.6313%" y="261" width="0.0779%" height="15" fill="rgb(231,159,14)" fg:x="393" fg:w="1"/><text x="30.8813%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.6313%" y="245" width="0.0779%" height="15" fill="rgb(207,102,36)" fg:x="393" fg:w="1"/><text x="30.8813%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.7093%" y="453" width="0.0779%" height="15" fill="rgb(230,224,31)" fg:x="394" fg:w="1"/><text x="30.9593%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.7093%" y="437" width="0.0779%" height="15" fill="rgb(215,182,16)" fg:x="394" fg:w="1"/><text x="30.9593%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.7093%" y="421" width="0.0779%" height="15" fill="rgb(226,113,2)" fg:x="394" fg:w="1"/><text x="30.9593%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.7093%" y="405" width="0.0779%" height="15" fill="rgb(241,18,35)" fg:x="394" fg:w="1"/><text x="30.9593%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7093%" y="389" width="0.0779%" height="15" fill="rgb(240,165,44)" fg:x="394" fg:w="1"/><text x="30.9593%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.7093%" y="373" width="0.0779%" height="15" fill="rgb(229,130,47)" fg:x="394" fg:w="1"/><text x="30.9593%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.7093%" y="357" width="0.0779%" height="15" fill="rgb(223,93,7)" fg:x="394" fg:w="1"/><text x="30.9593%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.7093%" y="341" width="0.0779%" height="15" fill="rgb(205,180,36)" fg:x="394" fg:w="1"/><text x="30.9593%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.7093%" y="325" width="0.0779%" height="15" fill="rgb(221,103,28)" fg:x="394" fg:w="1"/><text x="30.9593%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7093%" y="309" width="0.0779%" height="15" fill="rgb(212,4,3)" fg:x="394" fg:w="1"/><text x="30.9593%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.7093%" y="293" width="0.0779%" height="15" fill="rgb(209,221,53)" fg:x="394" fg:w="1"/><text x="30.9593%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.7093%" y="277" width="0.0779%" height="15" fill="rgb(233,229,52)" fg:x="394" fg:w="1"/><text x="30.9593%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.7093%" y="261" width="0.0779%" height="15" fill="rgb(254,127,37)" fg:x="394" fg:w="1"/><text x="30.9593%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.7093%" y="245" width="0.0779%" height="15" fill="rgb(207,161,26)" fg:x="394" fg:w="1"/><text x="30.9593%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.7093%" y="229" width="0.0779%" height="15" fill="rgb(223,75,5)" fg:x="394" fg:w="1"/><text x="30.9593%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7093%" y="213" width="0.0779%" height="15" fill="rgb(235,115,52)" fg:x="394" fg:w="1"/><text x="30.9593%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="30.6313%" y="501" width="0.2338%" height="15" fill="rgb(240,91,46)" fg:x="393" fg:w="3"/><text x="30.8813%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="30.7093%" y="485" width="0.1559%" height="15" fill="rgb(251,144,21)" fg:x="394" fg:w="2"/><text x="30.9593%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="30.7093%" y="469" width="0.1559%" height="15" fill="rgb(247,220,47)" fg:x="394" fg:w="2"/><text x="30.9593%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7872%" y="453" width="0.0779%" height="15" fill="rgb(253,122,1)" fg:x="395" fg:w="1"/><text x="31.0372%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (5 samples, 0.39%)</title><rect x="30.5534%" y="549" width="0.3897%" height="15" fill="rgb(221,0,24)" fg:x="392" fg:w="5"/><text x="30.8034%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (4 samples, 0.31%)</title><rect x="30.6313%" y="533" width="0.3118%" height="15" fill="rgb(220,204,54)" fg:x="393" fg:w="4"/><text x="30.8813%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="30.6313%" y="517" width="0.3118%" height="15" fill="rgb(205,96,25)" fg:x="393" fg:w="4"/><text x="30.8813%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8652%" y="501" width="0.0779%" height="15" fill="rgb(247,77,20)" fg:x="396" fg:w="1"/><text x="31.1152%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8652%" y="485" width="0.0779%" height="15" fill="rgb(245,151,8)" fg:x="396" fg:w="1"/><text x="31.1152%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8652%" y="469" width="0.0779%" height="15" fill="rgb(242,158,39)" fg:x="396" fg:w="1"/><text x="31.1152%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8652%" y="453" width="0.0779%" height="15" fill="rgb(222,214,50)" fg:x="396" fg:w="1"/><text x="31.1152%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.8652%" y="437" width="0.0779%" height="15" fill="rgb(229,60,39)" fg:x="396" fg:w="1"/><text x="31.1152%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8652%" y="421" width="0.0779%" height="15" fill="rgb(240,148,18)" fg:x="396" fg:w="1"/><text x="31.1152%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8652%" y="405" width="0.0779%" height="15" fill="rgb(215,96,11)" fg:x="396" fg:w="1"/><text x="31.1152%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8652%" y="389" width="0.0779%" height="15" fill="rgb(238,162,53)" fg:x="396" fg:w="1"/><text x="31.1152%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.8652%" y="373" width="0.0779%" height="15" fill="rgb(214,83,18)" fg:x="396" fg:w="1"/><text x="31.1152%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.8652%" y="357" width="0.0779%" height="15" fill="rgb(248,117,24)" fg:x="396" fg:w="1"/><text x="31.1152%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="30.8652%" y="341" width="0.0779%" height="15" fill="rgb(238,190,6)" fg:x="396" fg:w="1"/><text x="31.1152%" y="351.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="30.8652%" y="325" width="0.0779%" height="15" fill="rgb(213,51,6)" fg:x="396" fg:w="1"/><text x="31.1152%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9431%" y="501" width="0.0779%" height="15" fill="rgb(212,136,1)" fg:x="397" fg:w="1"/><text x="31.1931%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.9431%" y="485" width="0.0779%" height="15" fill="rgb(221,192,14)" fg:x="397" fg:w="1"/><text x="31.1931%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9431%" y="469" width="0.0779%" height="15" fill="rgb(244,38,54)" fg:x="397" fg:w="1"/><text x="31.1931%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.9431%" y="453" width="0.0779%" height="15" fill="rgb(240,45,28)" fg:x="397" fg:w="1"/><text x="31.1931%" y="463.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (9 samples, 0.70%)</title><rect x="30.4754%" y="597" width="0.7015%" height="15" fill="rgb(240,123,12)" fg:x="391" fg:w="9"/><text x="30.7254%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.70%)</title><rect x="30.4754%" y="581" width="0.7015%" height="15" fill="rgb(216,14,30)" fg:x="391" fg:w="9"/><text x="30.7254%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.70%)</title><rect x="30.4754%" y="565" width="0.7015%" height="15" fill="rgb(212,50,24)" fg:x="391" fg:w="9"/><text x="30.7254%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="30.9431%" y="549" width="0.2338%" height="15" fill="rgb(253,229,47)" fg:x="397" fg:w="3"/><text x="31.1931%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="30.9431%" y="533" width="0.2338%" height="15" fill="rgb(214,26,17)" fg:x="397" fg:w="3"/><text x="31.1931%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="30.9431%" y="517" width="0.2338%" height="15" fill="rgb(252,60,11)" fg:x="397" fg:w="3"/><text x="31.1931%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="31.0210%" y="501" width="0.1559%" height="15" fill="rgb(209,59,37)" fg:x="398" fg:w="2"/><text x="31.2710%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="31.0210%" y="485" width="0.1559%" height="15" fill="rgb(228,126,53)" fg:x="398" fg:w="2"/><text x="31.2710%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0990%" y="469" width="0.0779%" height="15" fill="rgb(233,99,2)" fg:x="399" fg:w="1"/><text x="31.3490%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="453" width="0.0779%" height="15" fill="rgb(217,106,34)" fg:x="399" fg:w="1"/><text x="31.3490%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.0990%" y="437" width="0.0779%" height="15" fill="rgb(222,46,19)" fg:x="399" fg:w="1"/><text x="31.3490%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="421" width="0.0779%" height="15" fill="rgb(251,87,31)" fg:x="399" fg:w="1"/><text x="31.3490%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0990%" y="405" width="0.0779%" height="15" fill="rgb(213,70,51)" fg:x="399" fg:w="1"/><text x="31.3490%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="389" width="0.0779%" height="15" fill="rgb(229,144,18)" fg:x="399" fg:w="1"/><text x="31.3490%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0990%" y="373" width="0.0779%" height="15" fill="rgb(254,60,26)" fg:x="399" fg:w="1"/><text x="31.3490%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0990%" y="357" width="0.0779%" height="15" fill="rgb(243,127,51)" fg:x="399" fg:w="1"/><text x="31.3490%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.0990%" y="341" width="0.0779%" height="15" fill="rgb(221,51,25)" fg:x="399" fg:w="1"/><text x="31.3490%" y="351.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (49 samples, 3.82%)</title><rect x="27.4357%" y="629" width="3.8192%" height="15" fill="rgb(205,42,7)" fg:x="352" fg:w="49"/><text x="27.6857%" y="639.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (24 samples, 1.87%)</title><rect x="29.3843%" y="613" width="1.8706%" height="15" fill="rgb(236,177,48)" fg:x="377" fg:w="24"/><text x="29.6343%" y="623.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="31.1769%" y="597" width="0.0779%" height="15" fill="rgb(226,79,31)" fg:x="400" fg:w="1"/><text x="31.4269%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="31.1769%" y="581" width="0.0779%" height="15" fill="rgb(216,170,12)" fg:x="400" fg:w="1"/><text x="31.4269%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="31.1769%" y="565" width="0.0779%" height="15" fill="rgb(208,62,51)" fg:x="400" fg:w="1"/><text x="31.4269%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="31.1769%" y="549" width="0.0779%" height="15" fill="rgb(254,129,9)" fg:x="400" fg:w="1"/><text x="31.4269%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="31.1769%" y="533" width="0.0779%" height="15" fill="rgb(243,209,31)" fg:x="400" fg:w="1"/><text x="31.4269%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="31.1769%" y="517" width="0.0779%" height="15" fill="rgb(213,159,23)" fg:x="400" fg:w="1"/><text x="31.4269%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="31.1769%" y="501" width="0.0779%" height="15" fill="rgb(249,77,39)" fg:x="400" fg:w="1"/><text x="31.4269%" y="511.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="31.1769%" y="485" width="0.0779%" height="15" fill="rgb(230,13,33)" fg:x="400" fg:w="1"/><text x="31.4269%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="31.1769%" y="469" width="0.0779%" height="15" fill="rgb(215,215,7)" fg:x="400" fg:w="1"/><text x="31.4269%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1769%" y="453" width="0.0779%" height="15" fill="rgb(222,92,25)" fg:x="400" fg:w="1"/><text x="31.4269%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1769%" y="437" width="0.0779%" height="15" fill="rgb(215,173,22)" fg:x="400" fg:w="1"/><text x="31.4269%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1769%" y="421" width="0.0779%" height="15" fill="rgb(247,205,52)" fg:x="400" fg:w="1"/><text x="31.4269%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1769%" y="405" width="0.0779%" height="15" fill="rgb(240,210,37)" fg:x="400" fg:w="1"/><text x="31.4269%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1769%" y="389" width="0.0779%" height="15" fill="rgb(224,13,10)" fg:x="400" fg:w="1"/><text x="31.4269%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1769%" y="373" width="0.0779%" height="15" fill="rgb(209,48,33)" fg:x="400" fg:w="1"/><text x="31.4269%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2549%" y="581" width="0.0779%" height="15" fill="rgb(228,219,23)" fg:x="401" fg:w="1"/><text x="31.5049%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="31.3328%" y="581" width="0.0779%" height="15" fill="rgb(239,46,49)" fg:x="402" fg:w="1"/><text x="31.5828%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="31.3328%" y="565" width="0.0779%" height="15" fill="rgb(206,172,51)" fg:x="402" fg:w="1"/><text x="31.5828%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.39%)</title><rect x="31.4108%" y="565" width="0.3897%" height="15" fill="rgb(213,212,35)" fg:x="403" fg:w="5"/><text x="31.6608%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.39%)</title><rect x="31.4108%" y="549" width="0.3897%" height="15" fill="rgb(252,40,27)" fg:x="403" fg:w="5"/><text x="31.6608%" y="559.50"></text></g><g><title>realloc (5 samples, 0.39%)</title><rect x="31.4108%" y="533" width="0.3897%" height="15" fill="rgb(212,33,41)" fg:x="403" fg:w="5"/><text x="31.6608%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="31.8005%" y="549" width="0.0779%" height="15" fill="rgb(232,160,27)" fg:x="408" fg:w="1"/><text x="32.0505%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="31.8005%" y="533" width="0.0779%" height="15" fill="rgb(244,160,20)" fg:x="408" fg:w="1"/><text x="32.0505%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="31.8784%" y="517" width="0.0779%" height="15" fill="rgb(205,66,20)" fg:x="409" fg:w="1"/><text x="32.1284%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="31.8784%" y="501" width="0.0779%" height="15" fill="rgb(236,158,6)" fg:x="409" fg:w="1"/><text x="32.1284%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="31.8784%" y="485" width="0.0779%" height="15" fill="rgb(232,25,36)" fg:x="409" fg:w="1"/><text x="32.1284%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="31.8784%" y="469" width="0.0779%" height="15" fill="rgb(220,153,35)" fg:x="409" fg:w="1"/><text x="32.1284%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="31.8784%" y="453" width="0.0779%" height="15" fill="rgb(216,5,8)" fg:x="409" fg:w="1"/><text x="32.1284%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="31.8784%" y="437" width="0.0779%" height="15" fill="rgb(240,97,3)" fg:x="409" fg:w="1"/><text x="32.1284%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="31.9564%" y="517" width="0.0779%" height="15" fill="rgb(220,99,26)" fg:x="410" fg:w="1"/><text x="32.2064%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="31.9564%" y="501" width="0.0779%" height="15" fill="rgb(237,96,2)" fg:x="410" fg:w="1"/><text x="32.2064%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.9564%" y="485" width="0.0779%" height="15" fill="rgb(217,197,47)" fg:x="410" fg:w="1"/><text x="32.2064%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (10 samples, 0.78%)</title><rect x="31.4108%" y="581" width="0.7794%" height="15" fill="rgb(252,133,54)" fg:x="403" fg:w="10"/><text x="31.6608%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.39%)</title><rect x="31.8005%" y="565" width="0.3897%" height="15" fill="rgb(233,37,30)" fg:x="408" fg:w="5"/><text x="32.0505%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.31%)</title><rect x="31.8784%" y="549" width="0.3118%" height="15" fill="rgb(239,182,12)" fg:x="409" fg:w="4"/><text x="32.1284%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="31.8784%" y="533" width="0.3118%" height="15" fill="rgb(245,83,39)" fg:x="409" fg:w="4"/><text x="32.1284%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.0343%" y="517" width="0.1559%" height="15" fill="rgb(222,109,36)" fg:x="411" fg:w="2"/><text x="32.2843%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0343%" y="501" width="0.1559%" height="15" fill="rgb(237,95,44)" fg:x="411" fg:w="2"/><text x="32.2843%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="32.0343%" y="485" width="0.1559%" height="15" fill="rgb(216,36,54)" fg:x="411" fg:w="2"/><text x="32.2843%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="32.0343%" y="469" width="0.1559%" height="15" fill="rgb(236,164,3)" fg:x="411" fg:w="2"/><text x="32.2843%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="32.0343%" y="453" width="0.1559%" height="15" fill="rgb(223,15,21)" fg:x="411" fg:w="2"/><text x="32.2843%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.0343%" y="437" width="0.1559%" height="15" fill="rgb(239,191,12)" fg:x="411" fg:w="2"/><text x="32.2843%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.0343%" y="421" width="0.1559%" height="15" fill="rgb(231,191,37)" fg:x="411" fg:w="2"/><text x="32.2843%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1902%" y="453" width="0.0779%" height="15" fill="rgb(209,155,36)" fg:x="413" fg:w="1"/><text x="32.4402%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1902%" y="437" width="0.0779%" height="15" fill="rgb(216,222,49)" fg:x="413" fg:w="1"/><text x="32.4402%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.1902%" y="421" width="0.0779%" height="15" fill="rgb(218,181,2)" fg:x="413" fg:w="1"/><text x="32.4402%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.1902%" y="469" width="0.1559%" height="15" fill="rgb(239,125,9)" fg:x="413" fg:w="2"/><text x="32.4402%" y="479.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="32.2681%" y="453" width="0.0779%" height="15" fill="rgb(233,103,7)" fg:x="414" fg:w="1"/><text x="32.5181%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="32.1902%" y="485" width="0.2338%" height="15" fill="rgb(209,223,5)" fg:x="413" fg:w="3"/><text x="32.4402%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3461%" y="469" width="0.0779%" height="15" fill="rgb(234,71,27)" fg:x="415" fg:w="1"/><text x="32.5961%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3461%" y="453" width="0.0779%" height="15" fill="rgb(251,202,16)" fg:x="415" fg:w="1"/><text x="32.5961%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3461%" y="437" width="0.0779%" height="15" fill="rgb(231,180,0)" fg:x="415" fg:w="1"/><text x="32.5961%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.3461%" y="421" width="0.0779%" height="15" fill="rgb(223,58,28)" fg:x="415" fg:w="1"/><text x="32.5961%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="32.4240%" y="389" width="0.0779%" height="15" fill="rgb(250,34,24)" fg:x="416" fg:w="1"/><text x="32.6740%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (17 samples, 1.33%)</title><rect x="31.2549%" y="613" width="1.3250%" height="15" fill="rgb(235,24,16)" fg:x="401" fg:w="17"/><text x="31.5049%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (17 samples, 1.33%)</title><rect x="31.2549%" y="597" width="1.3250%" height="15" fill="rgb(219,28,33)" fg:x="401" fg:w="17"/><text x="31.5049%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.39%)</title><rect x="32.1902%" y="581" width="0.3897%" height="15" fill="rgb(228,150,43)" fg:x="413" fg:w="5"/><text x="32.4402%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.39%)</title><rect x="32.1902%" y="565" width="0.3897%" height="15" fill="rgb(221,228,36)" fg:x="413" fg:w="5"/><text x="32.4402%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.39%)</title><rect x="32.1902%" y="549" width="0.3897%" height="15" fill="rgb(232,116,17)" fg:x="413" fg:w="5"/><text x="32.4402%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="32.1902%" y="533" width="0.3897%" height="15" fill="rgb(220,110,51)" fg:x="413" fg:w="5"/><text x="32.4402%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.39%)</title><rect x="32.1902%" y="517" width="0.3897%" height="15" fill="rgb(207,26,25)" fg:x="413" fg:w="5"/><text x="32.4402%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.39%)</title><rect x="32.1902%" y="501" width="0.3897%" height="15" fill="rgb(223,58,19)" fg:x="413" fg:w="5"/><text x="32.4402%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.4240%" y="485" width="0.1559%" height="15" fill="rgb(234,125,39)" fg:x="416" fg:w="2"/><text x="32.6740%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.4240%" y="469" width="0.1559%" height="15" fill="rgb(241,48,36)" fg:x="416" fg:w="2"/><text x="32.6740%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.4240%" y="453" width="0.1559%" height="15" fill="rgb(217,148,51)" fg:x="416" fg:w="2"/><text x="32.6740%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.4240%" y="437" width="0.1559%" height="15" fill="rgb(247,17,25)" fg:x="416" fg:w="2"/><text x="32.6740%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.4240%" y="421" width="0.1559%" height="15" fill="rgb(219,89,38)" fg:x="416" fg:w="2"/><text x="32.6740%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.4240%" y="405" width="0.1559%" height="15" fill="rgb(220,145,2)" fg:x="416" fg:w="2"/><text x="32.6740%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="32.5019%" y="389" width="0.0779%" height="15" fill="rgb(244,66,47)" fg:x="417" fg:w="1"/><text x="32.7519%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="32.5019%" y="373" width="0.0779%" height="15" fill="rgb(226,182,5)" fg:x="417" fg:w="1"/><text x="32.7519%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="32.5799%" y="565" width="0.0779%" height="15" fill="rgb(211,98,20)" fg:x="418" fg:w="1"/><text x="32.8299%" y="575.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="32.5799%" y="549" width="0.0779%" height="15" fill="rgb(217,103,52)" fg:x="418" fg:w="1"/><text x="32.8299%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.5799%" y="533" width="0.0779%" height="15" fill="rgb(208,125,52)" fg:x="418" fg:w="1"/><text x="32.8299%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.7358%" y="517" width="0.1559%" height="15" fill="rgb(244,70,13)" fg:x="420" fg:w="2"/><text x="32.9858%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.7358%" y="501" width="0.1559%" height="15" fill="rgb(253,124,3)" fg:x="420" fg:w="2"/><text x="32.9858%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.7358%" y="485" width="0.1559%" height="15" fill="rgb(222,145,32)" fg:x="420" fg:w="2"/><text x="32.9858%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.7358%" y="469" width="0.1559%" height="15" fill="rgb(232,183,47)" fg:x="420" fg:w="2"/><text x="32.9858%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8137%" y="453" width="0.0779%" height="15" fill="rgb(246,226,4)" fg:x="421" fg:w="1"/><text x="33.0637%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="32.8137%" y="437" width="0.0779%" height="15" fill="rgb(228,185,46)" fg:x="421" fg:w="1"/><text x="33.0637%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8137%" y="421" width="0.0779%" height="15" fill="rgb(213,196,4)" fg:x="421" fg:w="1"/><text x="33.0637%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.8137%" y="405" width="0.0779%" height="15" fill="rgb(212,2,45)" fg:x="421" fg:w="1"/><text x="33.0637%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.8137%" y="389" width="0.0779%" height="15" fill="rgb(217,145,50)" fg:x="421" fg:w="1"/><text x="33.0637%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.8137%" y="373" width="0.0779%" height="15" fill="rgb(242,10,46)" fg:x="421" fg:w="1"/><text x="33.0637%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.8137%" y="357" width="0.0779%" height="15" fill="rgb(252,91,48)" fg:x="421" fg:w="1"/><text x="33.0637%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8137%" y="341" width="0.0779%" height="15" fill="rgb(216,72,13)" fg:x="421" fg:w="1"/><text x="33.0637%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.8137%" y="325" width="0.0779%" height="15" fill="rgb(219,6,37)" fg:x="421" fg:w="1"/><text x="33.0637%" y="335.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.47%)</title><rect x="32.5799%" y="597" width="0.4677%" height="15" fill="rgb(236,185,40)" fg:x="418" fg:w="6"/><text x="32.8299%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.47%)</title><rect x="32.5799%" y="581" width="0.4677%" height="15" fill="rgb(208,81,48)" fg:x="418" fg:w="6"/><text x="32.8299%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (5 samples, 0.39%)</title><rect x="32.6578%" y="565" width="0.3897%" height="15" fill="rgb(211,42,33)" fg:x="419" fg:w="5"/><text x="32.9078%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (5 samples, 0.39%)</title><rect x="32.6578%" y="549" width="0.3897%" height="15" fill="rgb(211,90,39)" fg:x="419" fg:w="5"/><text x="32.9078%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.39%)</title><rect x="32.6578%" y="533" width="0.3897%" height="15" fill="rgb(218,136,12)" fg:x="419" fg:w="5"/><text x="32.9078%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8917%" y="517" width="0.1559%" height="15" fill="rgb(234,12,32)" fg:x="422" fg:w="2"/><text x="33.1417%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8917%" y="501" width="0.1559%" height="15" fill="rgb(221,164,18)" fg:x="422" fg:w="2"/><text x="33.1417%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8917%" y="485" width="0.1559%" height="15" fill="rgb(239,135,14)" fg:x="422" fg:w="2"/><text x="33.1417%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8917%" y="469" width="0.1559%" height="15" fill="rgb(226,198,47)" fg:x="422" fg:w="2"/><text x="33.1417%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="32.8917%" y="453" width="0.1559%" height="15" fill="rgb(244,121,47)" fg:x="422" fg:w="2"/><text x="33.1417%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8917%" y="437" width="0.1559%" height="15" fill="rgb(226,21,48)" fg:x="422" fg:w="2"/><text x="33.1417%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.8917%" y="421" width="0.1559%" height="15" fill="rgb(215,178,47)" fg:x="422" fg:w="2"/><text x="33.1417%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.8917%" y="405" width="0.1559%" height="15" fill="rgb(206,212,19)" fg:x="422" fg:w="2"/><text x="33.1417%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.9696%" y="389" width="0.0779%" height="15" fill="rgb(230,104,34)" fg:x="423" fg:w="1"/><text x="33.2196%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1255%" y="549" width="0.0779%" height="15" fill="rgb(210,96,51)" fg:x="425" fg:w="1"/><text x="33.3755%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1255%" y="533" width="0.0779%" height="15" fill="rgb(229,111,47)" fg:x="425" fg:w="1"/><text x="33.3755%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1255%" y="517" width="0.0779%" height="15" fill="rgb(218,174,45)" fg:x="425" fg:w="1"/><text x="33.3755%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1255%" y="501" width="0.0779%" height="15" fill="rgb(215,21,32)" fg:x="425" fg:w="1"/><text x="33.3755%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.1255%" y="485" width="0.0779%" height="15" fill="rgb(235,72,21)" fg:x="425" fg:w="1"/><text x="33.3755%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.1255%" y="469" width="0.0779%" height="15" fill="rgb(250,113,30)" fg:x="425" fg:w="1"/><text x="33.3755%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.1255%" y="453" width="0.0779%" height="15" fill="rgb(244,136,34)" fg:x="425" fg:w="1"/><text x="33.3755%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1255%" y="437" width="0.0779%" height="15" fill="rgb(213,226,47)" fg:x="425" fg:w="1"/><text x="33.3755%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.1255%" y="421" width="0.0779%" height="15" fill="rgb(224,136,40)" fg:x="425" fg:w="1"/><text x="33.3755%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.1255%" y="405" width="0.0779%" height="15" fill="rgb(253,124,12)" fg:x="425" fg:w="1"/><text x="33.3755%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.1255%" y="389" width="0.0779%" height="15" fill="rgb(210,67,8)" fg:x="425" fg:w="1"/><text x="33.3755%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.1255%" y="373" width="0.0779%" height="15" fill="rgb(210,204,0)" fg:x="425" fg:w="1"/><text x="33.3755%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.1255%" y="357" width="0.0779%" height="15" fill="rgb(217,179,22)" fg:x="425" fg:w="1"/><text x="33.3755%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.1255%" y="341" width="0.0779%" height="15" fill="rgb(237,192,33)" fg:x="425" fg:w="1"/><text x="33.3755%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.2814%" y="517" width="0.0779%" height="15" fill="rgb(211,104,28)" fg:x="427" fg:w="1"/><text x="33.5314%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="33.1255%" y="565" width="0.3118%" height="15" fill="rgb(214,75,30)" fg:x="425" fg:w="4"/><text x="33.3755%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="33.2034%" y="549" width="0.2338%" height="15" fill="rgb(220,227,12)" fg:x="426" fg:w="3"/><text x="33.4534%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="33.2034%" y="533" width="0.2338%" height="15" fill="rgb(233,134,28)" fg:x="426" fg:w="3"/><text x="33.4534%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.3593%" y="517" width="0.0779%" height="15" fill="rgb(215,146,24)" fg:x="428" fg:w="1"/><text x="33.6093%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.3593%" y="501" width="0.0779%" height="15" fill="rgb(248,227,20)" fg:x="428" fg:w="1"/><text x="33.6093%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="33.4373%" y="565" width="0.0779%" height="15" fill="rgb(250,44,42)" fg:x="429" fg:w="1"/><text x="33.6873%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.4373%" y="549" width="0.0779%" height="15" fill="rgb(219,5,35)" fg:x="429" fg:w="1"/><text x="33.6873%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="33.5152%" y="565" width="0.0779%" height="15" fill="rgb(241,132,32)" fg:x="430" fg:w="1"/><text x="33.7652%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.5152%" y="549" width="0.0779%" height="15" fill="rgb(234,212,51)" fg:x="430" fg:w="1"/><text x="33.7652%" y="559.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="33.5931%" y="565" width="0.0779%" height="15" fill="rgb(242,173,29)" fg:x="431" fg:w="1"/><text x="33.8431%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="33.5931%" y="549" width="0.0779%" height="15" fill="rgb(212,159,2)" fg:x="431" fg:w="1"/><text x="33.8431%" y="559.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="33.5931%" y="533" width="0.0779%" height="15" fill="rgb(238,165,31)" fg:x="431" fg:w="1"/><text x="33.8431%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5931%" y="517" width="0.0779%" height="15" fill="rgb(241,57,36)" fg:x="431" fg:w="1"/><text x="33.8431%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.5931%" y="501" width="0.0779%" height="15" fill="rgb(249,7,4)" fg:x="431" fg:w="1"/><text x="33.8431%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.5931%" y="485" width="0.0779%" height="15" fill="rgb(250,137,44)" fg:x="431" fg:w="1"/><text x="33.8431%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.5931%" y="469" width="0.0779%" height="15" fill="rgb(244,185,1)" fg:x="431" fg:w="1"/><text x="33.8431%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.5931%" y="453" width="0.0779%" height="15" fill="rgb(216,5,53)" fg:x="431" fg:w="1"/><text x="33.8431%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5931%" y="437" width="0.0779%" height="15" fill="rgb(234,89,21)" fg:x="431" fg:w="1"/><text x="33.8431%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.5931%" y="421" width="0.0779%" height="15" fill="rgb(250,81,43)" fg:x="431" fg:w="1"/><text x="33.8431%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.5931%" y="405" width="0.0779%" height="15" fill="rgb(243,132,11)" fg:x="431" fg:w="1"/><text x="33.8431%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.5931%" y="389" width="0.0779%" height="15" fill="rgb(253,159,28)" fg:x="431" fg:w="1"/><text x="33.8431%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.5931%" y="373" width="0.0779%" height="15" fill="rgb(237,167,34)" fg:x="431" fg:w="1"/><text x="33.8431%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.5931%" y="357" width="0.0779%" height="15" fill="rgb(237,16,50)" fg:x="431" fg:w="1"/><text x="33.8431%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="33.5931%" y="341" width="0.0779%" height="15" fill="rgb(247,125,2)" fg:x="431" fg:w="1"/><text x="33.8431%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="33.5931%" y="325" width="0.0779%" height="15" fill="rgb(254,35,3)" fg:x="431" fg:w="1"/><text x="33.8431%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="33.6711%" y="533" width="0.0779%" height="15" fill="rgb(237,209,21)" fg:x="432" fg:w="1"/><text x="33.9211%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (10 samples, 0.78%)</title><rect x="33.0475%" y="597" width="0.7794%" height="15" fill="rgb(224,122,20)" fg:x="424" fg:w="10"/><text x="33.2975%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (10 samples, 0.78%)</title><rect x="33.0475%" y="581" width="0.7794%" height="15" fill="rgb(224,11,46)" fg:x="424" fg:w="10"/><text x="33.2975%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.6711%" y="565" width="0.1559%" height="15" fill="rgb(248,21,33)" fg:x="432" fg:w="2"/><text x="33.9211%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.6711%" y="549" width="0.1559%" height="15" fill="rgb(222,144,7)" fg:x="432" fg:w="2"/><text x="33.9211%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="33.7490%" y="533" width="0.0779%" height="15" fill="rgb(205,141,37)" fg:x="433" fg:w="1"/><text x="33.9990%" y="543.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="33.7490%" y="517" width="0.0779%" height="15" fill="rgb(237,130,8)" fg:x="433" fg:w="1"/><text x="33.9990%" y="527.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="33.7490%" y="501" width="0.0779%" height="15" fill="rgb(209,179,39)" fg:x="433" fg:w="1"/><text x="33.9990%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="33.7490%" y="485" width="0.0779%" height="15" fill="rgb(207,52,17)" fg:x="433" fg:w="1"/><text x="33.9990%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="33.7490%" y="469" width="0.0779%" height="15" fill="rgb(253,158,17)" fg:x="433" fg:w="1"/><text x="33.9990%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.7490%" y="453" width="0.0779%" height="15" fill="rgb(208,19,53)" fg:x="433" fg:w="1"/><text x="33.9990%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="33.8270%" y="565" width="0.0779%" height="15" fill="rgb(233,152,13)" fg:x="434" fg:w="1"/><text x="34.0770%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.8270%" y="549" width="0.0779%" height="15" fill="rgb(231,84,1)" fg:x="434" fg:w="1"/><text x="34.0770%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="33.8270%" y="533" width="0.0779%" height="15" fill="rgb(229,142,48)" fg:x="434" fg:w="1"/><text x="34.0770%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="33.8270%" y="517" width="0.0779%" height="15" fill="rgb(248,70,29)" fg:x="434" fg:w="1"/><text x="34.0770%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="33.8270%" y="501" width="0.0779%" height="15" fill="rgb(250,85,7)" fg:x="434" fg:w="1"/><text x="34.0770%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8270%" y="485" width="0.0779%" height="15" fill="rgb(235,140,43)" fg:x="434" fg:w="1"/><text x="34.0770%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.0608%" y="485" width="0.0779%" height="15" fill="rgb(216,0,5)" fg:x="437" fg:w="1"/><text x="34.3108%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.39%)</title><rect x="33.8270%" y="597" width="0.3897%" height="15" fill="rgb(223,167,29)" fg:x="434" fg:w="5"/><text x="34.0770%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (5 samples, 0.39%)</title><rect x="33.8270%" y="581" width="0.3897%" height="15" fill="rgb(229,150,33)" fg:x="434" fg:w="5"/><text x="34.0770%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (4 samples, 0.31%)</title><rect x="33.9049%" y="565" width="0.3118%" height="15" fill="rgb(227,26,52)" fg:x="435" fg:w="4"/><text x="34.1549%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="33.9049%" y="549" width="0.3118%" height="15" fill="rgb(250,60,52)" fg:x="435" fg:w="4"/><text x="34.1549%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="33.9829%" y="533" width="0.2338%" height="15" fill="rgb(228,81,46)" fg:x="436" fg:w="3"/><text x="34.2329%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (3 samples, 0.23%)</title><rect x="33.9829%" y="517" width="0.2338%" height="15" fill="rgb(225,218,31)" fg:x="436" fg:w="3"/><text x="34.2329%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="34.0608%" y="501" width="0.1559%" height="15" fill="rgb(230,35,16)" fg:x="437" fg:w="2"/><text x="34.3108%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.1387%" y="485" width="0.0779%" height="15" fill="rgb(247,100,0)" fg:x="438" fg:w="1"/><text x="34.3887%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="34.2167%" y="501" width="0.0779%" height="15" fill="rgb(223,135,11)" fg:x="439" fg:w="1"/><text x="34.4667%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.2167%" y="485" width="0.0779%" height="15" fill="rgb(207,136,0)" fg:x="439" fg:w="1"/><text x="34.4667%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.2167%" y="469" width="0.0779%" height="15" fill="rgb(246,131,25)" fg:x="439" fg:w="1"/><text x="34.4667%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.2167%" y="453" width="0.0779%" height="15" fill="rgb(209,47,12)" fg:x="439" fg:w="1"/><text x="34.4667%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.2167%" y="437" width="0.0779%" height="15" fill="rgb(221,25,16)" fg:x="439" fg:w="1"/><text x="34.4667%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2167%" y="421" width="0.0779%" height="15" fill="rgb(223,164,33)" fg:x="439" fg:w="1"/><text x="34.4667%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.2167%" y="405" width="0.0779%" height="15" fill="rgb(220,26,23)" fg:x="439" fg:w="1"/><text x="34.4667%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="34.2946%" y="405" width="0.0779%" height="15" fill="rgb(231,224,1)" fg:x="440" fg:w="1"/><text x="34.5446%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2946%" y="389" width="0.0779%" height="15" fill="rgb(229,221,24)" fg:x="440" fg:w="1"/><text x="34.5446%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="34.2167%" y="549" width="0.2338%" height="15" fill="rgb(213,34,10)" fg:x="439" fg:w="3"/><text x="34.4667%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="34.2167%" y="533" width="0.2338%" height="15" fill="rgb(215,33,11)" fg:x="439" fg:w="3"/><text x="34.4667%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="34.2167%" y="517" width="0.2338%" height="15" fill="rgb(216,20,41)" fg:x="439" fg:w="3"/><text x="34.4667%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.2946%" y="501" width="0.1559%" height="15" fill="rgb(228,43,31)" fg:x="440" fg:w="2"/><text x="34.5446%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2946%" y="485" width="0.1559%" height="15" fill="rgb(227,83,26)" fg:x="440" fg:w="2"/><text x="34.5446%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="34.2946%" y="469" width="0.1559%" height="15" fill="rgb(217,168,19)" fg:x="440" fg:w="2"/><text x="34.5446%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2946%" y="453" width="0.1559%" height="15" fill="rgb(231,34,33)" fg:x="440" fg:w="2"/><text x="34.5446%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="34.2946%" y="437" width="0.1559%" height="15" fill="rgb(230,120,51)" fg:x="440" fg:w="2"/><text x="34.5446%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="34.2946%" y="421" width="0.1559%" height="15" fill="rgb(215,138,27)" fg:x="440" fg:w="2"/><text x="34.5446%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="34.3726%" y="405" width="0.0779%" height="15" fill="rgb(246,80,47)" fg:x="441" fg:w="1"/><text x="34.6226%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.4505%" y="501" width="0.0779%" height="15" fill="rgb(215,57,53)" fg:x="442" fg:w="1"/><text x="34.7005%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4505%" y="485" width="0.0779%" height="15" fill="rgb(229,137,5)" fg:x="442" fg:w="1"/><text x="34.7005%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4505%" y="469" width="0.0779%" height="15" fill="rgb(210,86,2)" fg:x="442" fg:w="1"/><text x="34.7005%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4505%" y="453" width="0.0779%" height="15" fill="rgb(231,226,51)" fg:x="442" fg:w="1"/><text x="34.7005%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="34.4505%" y="437" width="0.0779%" height="15" fill="rgb(216,62,29)" fg:x="442" fg:w="1"/><text x="34.7005%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="501" width="0.0779%" height="15" fill="rgb(248,202,3)" fg:x="443" fg:w="1"/><text x="34.7784%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="485" width="0.0779%" height="15" fill="rgb(225,181,7)" fg:x="443" fg:w="1"/><text x="34.7784%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="469" width="0.0779%" height="15" fill="rgb(247,170,54)" fg:x="443" fg:w="1"/><text x="34.7784%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="453" width="0.0779%" height="15" fill="rgb(236,204,33)" fg:x="443" fg:w="1"/><text x="34.7784%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="437" width="0.0779%" height="15" fill="rgb(216,45,30)" fg:x="443" fg:w="1"/><text x="34.7784%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="421" width="0.0779%" height="15" fill="rgb(213,203,16)" fg:x="443" fg:w="1"/><text x="34.7784%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="34.5284%" y="405" width="0.0779%" height="15" fill="rgb(215,46,16)" fg:x="443" fg:w="1"/><text x="34.7784%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.5284%" y="389" width="0.0779%" height="15" fill="rgb(217,162,46)" fg:x="443" fg:w="1"/><text x="34.7784%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.47%)</title><rect x="34.2167%" y="581" width="0.4677%" height="15" fill="rgb(224,189,20)" fg:x="439" fg:w="6"/><text x="34.4667%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.47%)</title><rect x="34.2167%" y="565" width="0.4677%" height="15" fill="rgb(232,35,51)" fg:x="439" fg:w="6"/><text x="34.4667%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="34.4505%" y="549" width="0.2338%" height="15" fill="rgb(243,221,46)" fg:x="442" fg:w="3"/><text x="34.7005%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="34.4505%" y="533" width="0.2338%" height="15" fill="rgb(248,16,16)" fg:x="442" fg:w="3"/><text x="34.7005%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="34.4505%" y="517" width="0.2338%" height="15" fill="rgb(220,168,13)" fg:x="442" fg:w="3"/><text x="34.7005%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6064%" y="501" width="0.0779%" height="15" fill="rgb(243,102,39)" fg:x="444" fg:w="1"/><text x="34.8564%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6064%" y="485" width="0.0779%" height="15" fill="rgb(245,82,32)" fg:x="444" fg:w="1"/><text x="34.8564%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6064%" y="469" width="0.0779%" height="15" fill="rgb(230,164,19)" fg:x="444" fg:w="1"/><text x="34.8564%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6064%" y="453" width="0.0779%" height="15" fill="rgb(221,9,41)" fg:x="444" fg:w="1"/><text x="34.8564%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="34.6064%" y="437" width="0.0779%" height="15" fill="rgb(216,93,0)" fg:x="444" fg:w="1"/><text x="34.8564%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6064%" y="421" width="0.0779%" height="15" fill="rgb(235,113,9)" fg:x="444" fg:w="1"/><text x="34.8564%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.6064%" y="405" width="0.0779%" height="15" fill="rgb(209,224,10)" fg:x="444" fg:w="1"/><text x="34.8564%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.6064%" y="389" width="0.0779%" height="15" fill="rgb(226,54,34)" fg:x="444" fg:w="1"/><text x="34.8564%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (7 samples, 0.55%)</title><rect x="34.2167%" y="597" width="0.5456%" height="15" fill="rgb(222,60,8)" fg:x="439" fg:w="7"/><text x="34.4667%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="34.6843%" y="581" width="0.0779%" height="15" fill="rgb(248,228,41)" fg:x="445" fg:w="1"/><text x="34.9343%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="34.6843%" y="565" width="0.0779%" height="15" fill="rgb(226,31,32)" fg:x="445" fg:w="1"/><text x="34.9343%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="34.6843%" y="549" width="0.0779%" height="15" fill="rgb(242,132,49)" fg:x="445" fg:w="1"/><text x="34.9343%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="34.6843%" y="533" width="0.0779%" height="15" fill="rgb(224,194,19)" fg:x="445" fg:w="1"/><text x="34.9343%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="34.6843%" y="517" width="0.0779%" height="15" fill="rgb(232,200,51)" fg:x="445" fg:w="1"/><text x="34.9343%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7623%" y="581" width="0.0779%" height="15" fill="rgb(235,60,46)" fg:x="446" fg:w="1"/><text x="35.0123%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.7623%" y="565" width="0.0779%" height="15" fill="rgb(240,109,52)" fg:x="446" fg:w="1"/><text x="35.0123%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="34.7623%" y="549" width="0.0779%" height="15" fill="rgb(215,78,37)" fg:x="446" fg:w="1"/><text x="35.0123%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="34.7623%" y="533" width="0.0779%" height="15" fill="rgb(225,141,7)" fg:x="446" fg:w="1"/><text x="35.0123%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="34.7623%" y="517" width="0.0779%" height="15" fill="rgb(216,102,54)" fg:x="446" fg:w="1"/><text x="35.0123%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="34.7623%" y="501" width="0.0779%" height="15" fill="rgb(238,143,13)" fg:x="446" fg:w="1"/><text x="35.0123%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="34.7623%" y="485" width="0.0779%" height="15" fill="rgb(219,45,51)" fg:x="446" fg:w="1"/><text x="35.0123%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (49 samples, 3.82%)</title><rect x="31.2549%" y="629" width="3.8192%" height="15" fill="rgb(242,105,46)" fg:x="401" fg:w="49"/><text x="31.5049%" y="639.50">&lt;plu..</text></g><g><title>plugins_core::tools::move_between (32 samples, 2.49%)</title><rect x="32.5799%" y="613" width="2.4942%" height="15" fill="rgb(206,154,49)" fg:x="418" fg:w="32"/><text x="32.8299%" y="623.50">pl..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (4 samples, 0.31%)</title><rect x="34.7623%" y="597" width="0.3118%" height="15" fill="rgb(239,215,4)" fg:x="446" fg:w="4"/><text x="35.0123%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="34.8402%" y="581" width="0.2338%" height="15" fill="rgb(238,82,17)" fg:x="447" fg:w="3"/><text x="35.0902%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.23%)</title><rect x="34.8402%" y="565" width="0.2338%" height="15" fill="rgb(242,49,30)" fg:x="447" fg:w="3"/><text x="35.0902%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.16%)</title><rect x="34.9182%" y="549" width="0.1559%" height="15" fill="rgb(248,5,16)" fg:x="448" fg:w="2"/><text x="35.1682%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="34.9961%" y="533" width="0.0779%" height="15" fill="rgb(237,138,32)" fg:x="449" fg:w="1"/><text x="35.2461%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="35.0740%" y="629" width="0.0779%" height="15" fill="rgb(235,79,45)" fg:x="450" fg:w="1"/><text x="35.3240%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="35.1520%" y="629" width="0.1559%" height="15" fill="rgb(213,105,25)" fg:x="451" fg:w="2"/><text x="35.4020%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="35.1520%" y="613" width="0.1559%" height="15" fill="rgb(251,131,7)" fg:x="451" fg:w="2"/><text x="35.4020%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5417%" y="613" width="0.0779%" height="15" fill="rgb(211,155,7)" fg:x="456" fg:w="1"/><text x="35.7917%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.5417%" y="597" width="0.0779%" height="15" fill="rgb(243,70,15)" fg:x="456" fg:w="1"/><text x="35.7917%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="35.5417%" y="581" width="0.0779%" height="15" fill="rgb(215,171,2)" fg:x="456" fg:w="1"/><text x="35.7917%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="35.5417%" y="565" width="0.0779%" height="15" fill="rgb(244,121,35)" fg:x="456" fg:w="1"/><text x="35.7917%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="35.5417%" y="549" width="0.0779%" height="15" fill="rgb(249,147,17)" fg:x="456" fg:w="1"/><text x="35.7917%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5417%" y="533" width="0.0779%" height="15" fill="rgb(241,193,52)" fg:x="456" fg:w="1"/><text x="35.7917%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="35.5417%" y="517" width="0.0779%" height="15" fill="rgb(217,159,39)" fg:x="456" fg:w="1"/><text x="35.7917%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="35.5417%" y="501" width="0.0779%" height="15" fill="rgb(248,110,0)" fg:x="456" fg:w="1"/><text x="35.7917%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="35.5417%" y="485" width="0.0779%" height="15" fill="rgb(233,227,0)" fg:x="456" fg:w="1"/><text x="35.7917%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="35.5417%" y="469" width="0.0779%" height="15" fill="rgb(252,55,2)" fg:x="456" fg:w="1"/><text x="35.7917%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="35.5417%" y="453" width="0.0779%" height="15" fill="rgb(224,194,24)" fg:x="456" fg:w="1"/><text x="35.7917%" y="463.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="35.8535%" y="533" width="0.0779%" height="15" fill="rgb(247,5,33)" fg:x="460" fg:w="1"/><text x="36.1035%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="35.9314%" y="485" width="0.0779%" height="15" fill="rgb(242,66,47)" fg:x="461" fg:w="1"/><text x="36.1814%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="35.9314%" y="469" width="0.0779%" height="15" fill="rgb(213,107,12)" fg:x="461" fg:w="1"/><text x="36.1814%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="35.9314%" y="453" width="0.0779%" height="15" fill="rgb(206,131,1)" fg:x="461" fg:w="1"/><text x="36.1814%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="35.9314%" y="437" width="0.0779%" height="15" fill="rgb(214,9,36)" fg:x="461" fg:w="1"/><text x="36.1814%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.23%)</title><rect x="35.9314%" y="517" width="0.2338%" height="15" fill="rgb(251,215,18)" fg:x="461" fg:w="3"/><text x="36.1814%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.23%)</title><rect x="35.9314%" y="501" width="0.2338%" height="15" fill="rgb(251,64,9)" fg:x="461" fg:w="3"/><text x="36.1814%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="36.0094%" y="485" width="0.1559%" height="15" fill="rgb(235,68,21)" fg:x="462" fg:w="2"/><text x="36.2594%" y="495.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="36.0094%" y="469" width="0.1559%" height="15" fill="rgb(240,69,38)" fg:x="462" fg:w="2"/><text x="36.2594%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="36.0094%" y="453" width="0.1559%" height="15" fill="rgb(231,18,27)" fg:x="462" fg:w="2"/><text x="36.2594%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.0094%" y="437" width="0.1559%" height="15" fill="rgb(215,154,25)" fg:x="462" fg:w="2"/><text x="36.2594%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.0094%" y="421" width="0.1559%" height="15" fill="rgb(224,33,46)" fg:x="462" fg:w="2"/><text x="36.2594%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.0094%" y="405" width="0.1559%" height="15" fill="rgb(248,191,53)" fg:x="462" fg:w="2"/><text x="36.2594%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.0094%" y="389" width="0.1559%" height="15" fill="rgb(231,3,37)" fg:x="462" fg:w="2"/><text x="36.2594%" y="399.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.0094%" y="373" width="0.1559%" height="15" fill="rgb(209,152,2)" fg:x="462" fg:w="2"/><text x="36.2594%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.0094%" y="357" width="0.1559%" height="15" fill="rgb(212,208,43)" fg:x="462" fg:w="2"/><text x="36.2594%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="36.0094%" y="341" width="0.1559%" height="15" fill="rgb(208,60,49)" fg:x="462" fg:w="2"/><text x="36.2594%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.0873%" y="325" width="0.0779%" height="15" fill="rgb(245,135,6)" fg:x="463" fg:w="1"/><text x="36.3373%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.0873%" y="309" width="0.0779%" height="15" fill="rgb(243,86,23)" fg:x="463" fg:w="1"/><text x="36.3373%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.1652%" y="389" width="0.0779%" height="15" fill="rgb(223,7,20)" fg:x="464" fg:w="1"/><text x="36.4152%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.1652%" y="373" width="0.0779%" height="15" fill="rgb(212,182,17)" fg:x="464" fg:w="1"/><text x="36.4152%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="36.1652%" y="357" width="0.0779%" height="15" fill="rgb(237,94,50)" fg:x="464" fg:w="1"/><text x="36.4152%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.1652%" y="341" width="0.0779%" height="15" fill="rgb(232,185,44)" fg:x="464" fg:w="1"/><text x="36.4152%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="36.1652%" y="325" width="0.0779%" height="15" fill="rgb(205,50,36)" fg:x="464" fg:w="1"/><text x="36.4152%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.1652%" y="309" width="0.0779%" height="15" fill="rgb(252,32,32)" fg:x="464" fg:w="1"/><text x="36.4152%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1652%" y="293" width="0.0779%" height="15" fill="rgb(241,123,33)" fg:x="464" fg:w="1"/><text x="36.4152%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.1652%" y="277" width="0.0779%" height="15" fill="rgb(212,140,16)" fg:x="464" fg:w="1"/><text x="36.4152%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="36.2432%" y="389" width="0.0779%" height="15" fill="rgb(247,132,5)" fg:x="465" fg:w="1"/><text x="36.4932%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="36.2432%" y="373" width="0.0779%" height="15" fill="rgb(209,137,38)" fg:x="465" fg:w="1"/><text x="36.4932%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (4 samples, 0.31%)</title><rect x="36.1652%" y="501" width="0.3118%" height="15" fill="rgb(248,32,42)" fg:x="464" fg:w="4"/><text x="36.4152%" y="511.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (4 samples, 0.31%)</title><rect x="36.1652%" y="485" width="0.3118%" height="15" fill="rgb(216,188,40)" fg:x="464" fg:w="4"/><text x="36.4152%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.31%)</title><rect x="36.1652%" y="469" width="0.3118%" height="15" fill="rgb(209,127,53)" fg:x="464" fg:w="4"/><text x="36.4152%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="36.1652%" y="453" width="0.3118%" height="15" fill="rgb(254,162,9)" fg:x="464" fg:w="4"/><text x="36.4152%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (4 samples, 0.31%)</title><rect x="36.1652%" y="437" width="0.3118%" height="15" fill="rgb(219,183,10)" fg:x="464" fg:w="4"/><text x="36.4152%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.31%)</title><rect x="36.1652%" y="421" width="0.3118%" height="15" fill="rgb(217,192,21)" fg:x="464" fg:w="4"/><text x="36.4152%" y="431.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (4 samples, 0.31%)</title><rect x="36.1652%" y="405" width="0.3118%" height="15" fill="rgb(251,89,27)" fg:x="464" fg:w="4"/><text x="36.4152%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="36.3211%" y="389" width="0.1559%" height="15" fill="rgb(253,55,28)" fg:x="466" fg:w="2"/><text x="36.5711%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.3211%" y="373" width="0.1559%" height="15" fill="rgb(216,159,8)" fg:x="466" fg:w="2"/><text x="36.5711%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="36.3991%" y="357" width="0.0779%" height="15" fill="rgb(231,228,44)" fg:x="467" fg:w="1"/><text x="36.6491%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3991%" y="341" width="0.0779%" height="15" fill="rgb(247,34,48)" fg:x="467" fg:w="1"/><text x="36.6491%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.3991%" y="325" width="0.0779%" height="15" fill="rgb(247,222,18)" fg:x="467" fg:w="1"/><text x="36.6491%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="36.3991%" y="309" width="0.0779%" height="15" fill="rgb(227,49,4)" fg:x="467" fg:w="1"/><text x="36.6491%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.3991%" y="293" width="0.0779%" height="15" fill="rgb(219,189,53)" fg:x="467" fg:w="1"/><text x="36.6491%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.3991%" y="277" width="0.0779%" height="15" fill="rgb(241,160,53)" fg:x="467" fg:w="1"/><text x="36.6491%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="36.3991%" y="261" width="0.0779%" height="15" fill="rgb(227,115,4)" fg:x="467" fg:w="1"/><text x="36.6491%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="36.3991%" y="245" width="0.0779%" height="15" fill="rgb(215,28,28)" fg:x="467" fg:w="1"/><text x="36.6491%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="36.3991%" y="229" width="0.0779%" height="15" fill="rgb(237,143,40)" fg:x="467" fg:w="1"/><text x="36.6491%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="36.4770%" y="373" width="0.0779%" height="15" fill="rgb(205,107,24)" fg:x="468" fg:w="1"/><text x="36.7270%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4770%" y="357" width="0.0779%" height="15" fill="rgb(209,112,35)" fg:x="468" fg:w="1"/><text x="36.7270%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="36.4770%" y="341" width="0.0779%" height="15" fill="rgb(206,135,5)" fg:x="468" fg:w="1"/><text x="36.7270%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.4770%" y="325" width="0.0779%" height="15" fill="rgb(227,217,38)" fg:x="468" fg:w="1"/><text x="36.7270%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (13 samples, 1.01%)</title><rect x="35.6976%" y="565" width="1.0133%" height="15" fill="rgb(205,0,41)" fg:x="458" fg:w="13"/><text x="35.9476%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (13 samples, 1.01%)</title><rect x="35.6976%" y="549" width="1.0133%" height="15" fill="rgb(220,20,40)" fg:x="458" fg:w="13"/><text x="35.9476%" y="559.50"></text></g><g><title>engine::internal::Entities::add_persisted (10 samples, 0.78%)</title><rect x="35.9314%" y="533" width="0.7794%" height="15" fill="rgb(216,145,3)" fg:x="461" fg:w="10"/><text x="36.1814%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (7 samples, 0.55%)</title><rect x="36.1652%" y="517" width="0.5456%" height="15" fill="rgb(207,130,51)" fg:x="464" fg:w="7"/><text x="36.4152%" y="527.50"></text></g><g><title>serde_json::de::from_trait (3 samples, 0.23%)</title><rect x="36.4770%" y="501" width="0.2338%" height="15" fill="rgb(252,93,13)" fg:x="468" fg:w="3"/><text x="36.7270%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="36.4770%" y="485" width="0.2338%" height="15" fill="rgb(210,105,15)" fg:x="468" fg:w="3"/><text x="36.7270%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="36.4770%" y="469" width="0.2338%" height="15" fill="rgb(212,126,31)" fg:x="468" fg:w="3"/><text x="36.7270%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="36.4770%" y="453" width="0.2338%" height="15" fill="rgb(241,167,46)" fg:x="468" fg:w="3"/><text x="36.7270%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="36.4770%" y="437" width="0.2338%" height="15" fill="rgb(217,143,19)" fg:x="468" fg:w="3"/><text x="36.7270%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="36.4770%" y="421" width="0.2338%" height="15" fill="rgb(235,117,33)" fg:x="468" fg:w="3"/><text x="36.7270%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="36.4770%" y="405" width="0.2338%" height="15" fill="rgb(247,95,6)" fg:x="468" fg:w="3"/><text x="36.7270%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="36.4770%" y="389" width="0.2338%" height="15" fill="rgb(243,206,43)" fg:x="468" fg:w="3"/><text x="36.7270%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="36.5549%" y="373" width="0.1559%" height="15" fill="rgb(229,65,54)" fg:x="469" fg:w="2"/><text x="36.8049%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="36.5549%" y="357" width="0.1559%" height="15" fill="rgb(247,137,34)" fg:x="469" fg:w="2"/><text x="36.8049%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="36.6329%" y="341" width="0.0779%" height="15" fill="rgb(245,174,44)" fg:x="470" fg:w="1"/><text x="36.8829%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="36.6329%" y="325" width="0.0779%" height="15" fill="rgb(223,64,15)" fg:x="470" fg:w="1"/><text x="36.8829%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7108%" y="517" width="0.0779%" height="15" fill="rgb(243,153,36)" fg:x="471" fg:w="1"/><text x="36.9608%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="36.7108%" y="501" width="0.0779%" height="15" fill="rgb(252,23,4)" fg:x="471" fg:w="1"/><text x="36.9608%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="36.7108%" y="485" width="0.0779%" height="15" fill="rgb(209,132,13)" fg:x="471" fg:w="1"/><text x="36.9608%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="36.7108%" y="469" width="0.0779%" height="15" fill="rgb(209,196,21)" fg:x="471" fg:w="1"/><text x="36.9608%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="36.7108%" y="453" width="0.0779%" height="15" fill="rgb(252,197,1)" fg:x="471" fg:w="1"/><text x="36.9608%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7108%" y="437" width="0.0779%" height="15" fill="rgb(229,42,46)" fg:x="471" fg:w="1"/><text x="36.9608%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="36.7108%" y="421" width="0.0779%" height="15" fill="rgb(219,85,8)" fg:x="471" fg:w="1"/><text x="36.9608%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="36.7108%" y="405" width="0.0779%" height="15" fill="rgb(223,185,14)" fg:x="471" fg:w="1"/><text x="36.9608%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="36.7108%" y="389" width="0.0779%" height="15" fill="rgb(217,196,18)" fg:x="471" fg:w="1"/><text x="36.9608%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="36.7108%" y="373" width="0.0779%" height="15" fill="rgb(220,122,37)" fg:x="471" fg:w="1"/><text x="36.9608%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="36.7108%" y="357" width="0.0779%" height="15" fill="rgb(236,135,33)" fg:x="471" fg:w="1"/><text x="36.9608%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7108%" y="341" width="0.0779%" height="15" fill="rgb(222,86,54)" fg:x="471" fg:w="1"/><text x="36.9608%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="36.7108%" y="565" width="0.1559%" height="15" fill="rgb(227,42,22)" fg:x="471" fg:w="2"/><text x="36.9608%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.7108%" y="549" width="0.1559%" height="15" fill="rgb(243,101,27)" fg:x="471" fg:w="2"/><text x="36.9608%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="36.7108%" y="533" width="0.1559%" height="15" fill="rgb(229,100,8)" fg:x="471" fg:w="2"/><text x="36.9608%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="36.7888%" y="517" width="0.0779%" height="15" fill="rgb(252,68,10)" fg:x="472" fg:w="1"/><text x="37.0388%" y="527.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (17 samples, 1.33%)</title><rect x="35.6196%" y="613" width="1.3250%" height="15" fill="rgb(219,19,31)" fg:x="457" fg:w="17"/><text x="35.8696%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.33%)</title><rect x="35.6196%" y="597" width="1.3250%" height="15" fill="rgb(246,150,44)" fg:x="457" fg:w="17"/><text x="35.8696%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (16 samples, 1.25%)</title><rect x="35.6976%" y="581" width="1.2471%" height="15" fill="rgb(211,14,39)" fg:x="458" fg:w="16"/><text x="35.9476%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="36.8667%" y="565" width="0.0779%" height="15" fill="rgb(221,98,29)" fg:x="473" fg:w="1"/><text x="37.1167%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="36.8667%" y="549" width="0.0779%" height="15" fill="rgb(221,70,26)" fg:x="473" fg:w="1"/><text x="37.1167%" y="559.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (22 samples, 1.71%)</title><rect x="35.3079%" y="629" width="1.7147%" height="15" fill="rgb(236,146,30)" fg:x="453" fg:w="22"/><text x="35.5579%" y="639.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="36.9447%" y="613" width="0.0779%" height="15" fill="rgb(226,94,34)" fg:x="474" fg:w="1"/><text x="37.1947%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="36.9447%" y="597" width="0.0779%" height="15" fill="rgb(248,132,21)" fg:x="474" fg:w="1"/><text x="37.1947%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="36.9447%" y="581" width="0.0779%" height="15" fill="rgb(245,43,50)" fg:x="474" fg:w="1"/><text x="37.1947%" y="591.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="36.9447%" y="565" width="0.0779%" height="15" fill="rgb(245,132,31)" fg:x="474" fg:w="1"/><text x="37.1947%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.2564%" y="597" width="0.0779%" height="15" fill="rgb(230,171,4)" fg:x="478" fg:w="1"/><text x="37.5064%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.31%)</title><rect x="37.9579%" y="485" width="0.3118%" height="15" fill="rgb(235,6,45)" fg:x="487" fg:w="4"/><text x="38.2079%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.1138%" y="469" width="0.1559%" height="15" fill="rgb(220,80,28)" fg:x="489" fg:w="2"/><text x="38.3638%" y="479.50"></text></g><g><title>__libc_free (4 samples, 0.31%)</title><rect x="38.2697%" y="485" width="0.3118%" height="15" fill="rgb(242,171,9)" fg:x="491" fg:w="4"/><text x="38.5197%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.78%)</title><rect x="37.8800%" y="501" width="0.7794%" height="15" fill="rgb(214,135,29)" fg:x="486" fg:w="10"/><text x="38.1300%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="38.5814%" y="485" width="0.0779%" height="15" fill="rgb(221,229,16)" fg:x="495" fg:w="1"/><text x="38.8314%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.86%)</title><rect x="37.8800%" y="517" width="0.8574%" height="15" fill="rgb(253,59,46)" fg:x="486" fg:w="11"/><text x="38.1300%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6594%" y="501" width="0.0779%" height="15" fill="rgb(250,147,20)" fg:x="496" fg:w="1"/><text x="38.9094%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 1.09%)</title><rect x="37.8020%" y="533" width="1.0912%" height="15" fill="rgb(236,64,48)" fg:x="485" fg:w="14"/><text x="38.0520%" y="543.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.7373%" y="517" width="0.1559%" height="15" fill="rgb(240,37,42)" fg:x="497" fg:w="2"/><text x="38.9873%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 1.40%)</title><rect x="37.6461%" y="549" width="1.4030%" height="15" fill="rgb(220,41,50)" fg:x="483" fg:w="18"/><text x="37.8961%" y="559.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.8932%" y="533" width="0.1559%" height="15" fill="rgb(216,51,14)" fg:x="499" fg:w="2"/><text x="39.1432%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 1.95%)</title><rect x="37.4903%" y="565" width="1.9486%" height="15" fill="rgb(215,83,10)" fg:x="481" fg:w="25"/><text x="37.7403%" y="575.50">&lt;..</text></g><g><title>__libc_free (5 samples, 0.39%)</title><rect x="39.0491%" y="549" width="0.3897%" height="15" fill="rgb(206,144,17)" fg:x="501" fg:w="5"/><text x="39.2991%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 2.73%)</title><rect x="37.3344%" y="581" width="2.7280%" height="15" fill="rgb(219,196,37)" fg:x="479" fg:w="35"/><text x="37.5844%" y="591.50">&lt;h..</text></g><g><title>__libc_free (8 samples, 0.62%)</title><rect x="39.4388%" y="565" width="0.6235%" height="15" fill="rgb(226,135,26)" fg:x="506" fg:w="8"/><text x="39.6888%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (36 samples, 2.81%)</title><rect x="37.3344%" y="597" width="2.8059%" height="15" fill="rgb(237,195,40)" fg:x="479" fg:w="36"/><text x="37.5844%" y="607.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.0624%" y="581" width="0.0779%" height="15" fill="rgb(228,182,42)" fg:x="514" fg:w="1"/><text x="40.3124%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="40.2962%" y="549" width="0.1559%" height="15" fill="rgb(224,135,50)" fg:x="517" fg:w="2"/><text x="40.5462%" y="559.50"></text></g><g><title>__libc_malloc (9 samples, 0.70%)</title><rect x="40.4521%" y="549" width="0.7015%" height="15" fill="rgb(236,215,34)" fg:x="519" fg:w="9"/><text x="40.7021%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 1.01%)</title><rect x="40.2182%" y="565" width="1.0133%" height="15" fill="rgb(244,213,27)" fg:x="516" fg:w="13"/><text x="40.4682%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.08%)</title><rect x="41.1535%" y="549" width="0.0779%" height="15" fill="rgb(233,37,53)" fg:x="528" fg:w="1"/><text x="41.4035%" y="559.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.31%)</title><rect x="41.2315%" y="565" width="0.3118%" height="15" fill="rgb(222,132,14)" fg:x="529" fg:w="4"/><text x="41.4815%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="41.3094%" y="549" width="0.2338%" height="15" fill="rgb(219,202,29)" fg:x="530" fg:w="3"/><text x="41.5594%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.4653%" y="533" width="0.0779%" height="15" fill="rgb(226,157,39)" fg:x="532" fg:w="1"/><text x="41.7153%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="41.4653%" y="517" width="0.0779%" height="15" fill="rgb(235,213,2)" fg:x="532" fg:w="1"/><text x="41.7153%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.5433%" y="565" width="0.0779%" height="15" fill="rgb(250,121,2)" fg:x="533" fg:w="1"/><text x="41.7933%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="41.6212%" y="565" width="0.0779%" height="15" fill="rgb(206,192,33)" fg:x="534" fg:w="1"/><text x="41.8712%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="41.6212%" y="549" width="0.0779%" height="15" fill="rgb(240,161,6)" fg:x="534" fg:w="1"/><text x="41.8712%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="41.6212%" y="533" width="0.0779%" height="15" fill="rgb(246,53,30)" fg:x="534" fg:w="1"/><text x="41.8712%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="41.6212%" y="517" width="0.0779%" height="15" fill="rgb(219,123,43)" fg:x="534" fg:w="1"/><text x="41.8712%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.6212%" y="501" width="0.0779%" height="15" fill="rgb(236,53,49)" fg:x="534" fg:w="1"/><text x="41.8712%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="41.8550%" y="517" width="0.0779%" height="15" fill="rgb(241,156,1)" fg:x="537" fg:w="1"/><text x="42.1050%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="42.0889%" y="485" width="0.0779%" height="15" fill="rgb(209,73,26)" fg:x="540" fg:w="1"/><text x="42.3389%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="42.4006%" y="437" width="0.0779%" height="15" fill="rgb(206,114,3)" fg:x="544" fg:w="1"/><text x="42.6506%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="42.4006%" y="421" width="0.0779%" height="15" fill="rgb(230,214,9)" fg:x="544" fg:w="1"/><text x="42.6506%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4006%" y="405" width="0.0779%" height="15" fill="rgb(240,184,46)" fg:x="544" fg:w="1"/><text x="42.6506%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4006%" y="389" width="0.0779%" height="15" fill="rgb(242,169,54)" fg:x="544" fg:w="1"/><text x="42.6506%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4006%" y="373" width="0.0779%" height="15" fill="rgb(207,168,50)" fg:x="544" fg:w="1"/><text x="42.6506%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.4006%" y="357" width="0.0779%" height="15" fill="rgb(240,114,2)" fg:x="544" fg:w="1"/><text x="42.6506%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.4006%" y="341" width="0.0779%" height="15" fill="rgb(211,17,40)" fg:x="544" fg:w="1"/><text x="42.6506%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.4006%" y="325" width="0.0779%" height="15" fill="rgb(235,97,36)" fg:x="544" fg:w="1"/><text x="42.6506%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4006%" y="309" width="0.0779%" height="15" fill="rgb(208,164,11)" fg:x="544" fg:w="1"/><text x="42.6506%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4006%" y="293" width="0.0779%" height="15" fill="rgb(242,11,17)" fg:x="544" fg:w="1"/><text x="42.6506%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.4006%" y="277" width="0.0779%" height="15" fill="rgb(215,86,33)" fg:x="544" fg:w="1"/><text x="42.6506%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.4006%" y="261" width="0.0779%" height="15" fill="rgb(245,185,28)" fg:x="544" fg:w="1"/><text x="42.6506%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.4006%" y="245" width="0.0779%" height="15" fill="rgb(231,89,42)" fg:x="544" fg:w="1"/><text x="42.6506%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.4006%" y="229" width="0.0779%" height="15" fill="rgb(210,18,47)" fg:x="544" fg:w="1"/><text x="42.6506%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4006%" y="213" width="0.0779%" height="15" fill="rgb(214,84,8)" fg:x="544" fg:w="1"/><text x="42.6506%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4786%" y="421" width="0.0779%" height="15" fill="rgb(214,222,23)" fg:x="545" fg:w="1"/><text x="42.7286%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.4786%" y="405" width="0.0779%" height="15" fill="rgb(213,104,21)" fg:x="545" fg:w="1"/><text x="42.7286%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="42.4786%" y="389" width="0.0779%" height="15" fill="rgb(238,138,6)" fg:x="545" fg:w="1"/><text x="42.7286%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="42.4786%" y="373" width="0.0779%" height="15" fill="rgb(205,167,50)" fg:x="545" fg:w="1"/><text x="42.7286%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="42.4786%" y="357" width="0.0779%" height="15" fill="rgb(230,105,27)" fg:x="545" fg:w="1"/><text x="42.7286%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4786%" y="341" width="0.0779%" height="15" fill="rgb(222,97,48)" fg:x="545" fg:w="1"/><text x="42.7286%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="42.4786%" y="325" width="0.0779%" height="15" fill="rgb(222,197,14)" fg:x="545" fg:w="1"/><text x="42.7286%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="42.4786%" y="309" width="0.0779%" height="15" fill="rgb(210,105,47)" fg:x="545" fg:w="1"/><text x="42.7286%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="42.4786%" y="293" width="0.0779%" height="15" fill="rgb(238,158,19)" fg:x="545" fg:w="1"/><text x="42.7286%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="42.4786%" y="277" width="0.0779%" height="15" fill="rgb(226,176,23)" fg:x="545" fg:w="1"/><text x="42.7286%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="42.4786%" y="261" width="0.0779%" height="15" fill="rgb(208,79,31)" fg:x="545" fg:w="1"/><text x="42.7286%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4786%" y="245" width="0.0779%" height="15" fill="rgb(221,154,21)" fg:x="545" fg:w="1"/><text x="42.7286%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.78%)</title><rect x="41.9330%" y="501" width="0.7794%" height="15" fill="rgb(213,61,41)" fg:x="538" fg:w="10"/><text x="42.1830%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.55%)</title><rect x="42.1668%" y="485" width="0.5456%" height="15" fill="rgb(215,28,33)" fg:x="541" fg:w="7"/><text x="42.4168%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (5 samples, 0.39%)</title><rect x="42.3227%" y="469" width="0.3897%" height="15" fill="rgb(231,139,26)" fg:x="543" fg:w="5"/><text x="42.5727%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.31%)</title><rect x="42.4006%" y="453" width="0.3118%" height="15" fill="rgb(232,159,16)" fg:x="544" fg:w="4"/><text x="42.6506%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.23%)</title><rect x="42.4786%" y="437" width="0.2338%" height="15" fill="rgb(233,80,10)" fg:x="545" fg:w="3"/><text x="42.7286%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="42.5565%" y="421" width="0.1559%" height="15" fill="rgb(208,147,29)" fg:x="546" fg:w="2"/><text x="42.8065%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="42.5565%" y="405" width="0.1559%" height="15" fill="rgb(213,10,12)" fg:x="546" fg:w="2"/><text x="42.8065%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5565%" y="389" width="0.1559%" height="15" fill="rgb(231,218,13)" fg:x="546" fg:w="2"/><text x="42.8065%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="42.5565%" y="373" width="0.1559%" height="15" fill="rgb(244,199,44)" fg:x="546" fg:w="2"/><text x="42.8065%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="42.5565%" y="357" width="0.1559%" height="15" fill="rgb(240,144,53)" fg:x="546" fg:w="2"/><text x="42.8065%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="42.5565%" y="341" width="0.1559%" height="15" fill="rgb(223,57,28)" fg:x="546" fg:w="2"/><text x="42.8065%" y="351.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="42.5565%" y="325" width="0.1559%" height="15" fill="rgb(213,134,38)" fg:x="546" fg:w="2"/><text x="42.8065%" y="335.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="42.6345%" y="309" width="0.0779%" height="15" fill="rgb(251,182,42)" fg:x="547" fg:w="1"/><text x="42.8845%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.6345%" y="293" width="0.0779%" height="15" fill="rgb(229,93,13)" fg:x="547" fg:w="1"/><text x="42.8845%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="42.6345%" y="277" width="0.0779%" height="15" fill="rgb(234,171,3)" fg:x="547" fg:w="1"/><text x="42.8845%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="42.6345%" y="261" width="0.0779%" height="15" fill="rgb(241,105,32)" fg:x="547" fg:w="1"/><text x="42.8845%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="42.6345%" y="245" width="0.0779%" height="15" fill="rgb(221,66,3)" fg:x="547" fg:w="1"/><text x="42.8845%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="42.6345%" y="229" width="0.0779%" height="15" fill="rgb(248,155,29)" fg:x="547" fg:w="1"/><text x="42.8845%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="42.6345%" y="213" width="0.0779%" height="15" fill="rgb(231,31,5)" fg:x="547" fg:w="1"/><text x="42.8845%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.6345%" y="197" width="0.0779%" height="15" fill="rgb(213,188,31)" fg:x="547" fg:w="1"/><text x="42.8845%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="42.6345%" y="181" width="0.0779%" height="15" fill="rgb(212,104,33)" fg:x="547" fg:w="1"/><text x="42.8845%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="42.6345%" y="165" width="0.0779%" height="15" fill="rgb(254,77,51)" fg:x="547" fg:w="1"/><text x="42.8845%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="42.6345%" y="149" width="0.0779%" height="15" fill="rgb(234,39,26)" fg:x="547" fg:w="1"/><text x="42.8845%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.6345%" y="133" width="0.0779%" height="15" fill="rgb(208,88,36)" fg:x="547" fg:w="1"/><text x="42.8845%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="42.6345%" y="117" width="0.0779%" height="15" fill="rgb(243,222,10)" fg:x="547" fg:w="1"/><text x="42.8845%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="42.6345%" y="101" width="0.0779%" height="15" fill="rgb(218,133,52)" fg:x="547" fg:w="1"/><text x="42.8845%" y="111.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="42.6345%" y="85" width="0.0779%" height="15" fill="rgb(222,25,26)" fg:x="547" fg:w="1"/><text x="42.8845%" y="95.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.6345%" y="69" width="0.0779%" height="15" fill="rgb(243,174,24)" fg:x="547" fg:w="1"/><text x="42.8845%" y="79.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="42.7903%" y="485" width="0.2338%" height="15" fill="rgb(233,188,52)" fg:x="549" fg:w="3"/><text x="43.0403%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.0242%" y="469" width="0.0779%" height="15" fill="rgb(208,89,14)" fg:x="552" fg:w="1"/><text x="43.2742%" y="479.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="43.1800%" y="405" width="0.0779%" height="15" fill="rgb(205,204,21)" fg:x="554" fg:w="1"/><text x="43.4300%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1800%" y="389" width="0.0779%" height="15" fill="rgb(246,39,28)" fg:x="554" fg:w="1"/><text x="43.4300%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.1800%" y="373" width="0.0779%" height="15" fill="rgb(235,71,19)" fg:x="554" fg:w="1"/><text x="43.4300%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.1800%" y="357" width="0.0779%" height="15" fill="rgb(211,62,39)" fg:x="554" fg:w="1"/><text x="43.4300%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.1800%" y="341" width="0.0779%" height="15" fill="rgb(246,118,20)" fg:x="554" fg:w="1"/><text x="43.4300%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.1800%" y="325" width="0.0779%" height="15" fill="rgb(230,82,12)" fg:x="554" fg:w="1"/><text x="43.4300%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="43.1800%" y="309" width="0.0779%" height="15" fill="rgb(205,212,34)" fg:x="554" fg:w="1"/><text x="43.4300%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="43.1800%" y="293" width="0.0779%" height="15" fill="rgb(239,90,1)" fg:x="554" fg:w="1"/><text x="43.4300%" y="303.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="43.2580%" y="389" width="0.0779%" height="15" fill="rgb(225,198,50)" fg:x="555" fg:w="1"/><text x="43.5080%" y="399.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="43.2580%" y="373" width="0.0779%" height="15" fill="rgb(227,208,48)" fg:x="555" fg:w="1"/><text x="43.5080%" y="383.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.2580%" y="357" width="0.0779%" height="15" fill="rgb(238,134,41)" fg:x="555" fg:w="1"/><text x="43.5080%" y="367.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="43.2580%" y="341" width="0.0779%" height="15" fill="rgb(241,58,39)" fg:x="555" fg:w="1"/><text x="43.5080%" y="351.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="43.2580%" y="325" width="0.0779%" height="15" fill="rgb(214,126,4)" fg:x="555" fg:w="1"/><text x="43.5080%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2580%" y="309" width="0.0779%" height="15" fill="rgb(235,149,4)" fg:x="555" fg:w="1"/><text x="43.5080%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2580%" y="293" width="0.0779%" height="15" fill="rgb(236,59,29)" fg:x="555" fg:w="1"/><text x="43.5080%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2580%" y="277" width="0.0779%" height="15" fill="rgb(246,11,33)" fg:x="555" fg:w="1"/><text x="43.5080%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2580%" y="261" width="0.0779%" height="15" fill="rgb(232,180,35)" fg:x="555" fg:w="1"/><text x="43.5080%" y="271.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.2580%" y="245" width="0.0779%" height="15" fill="rgb(220,35,37)" fg:x="555" fg:w="1"/><text x="43.5080%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2580%" y="229" width="0.0779%" height="15" fill="rgb(238,107,48)" fg:x="555" fg:w="1"/><text x="43.5080%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2580%" y="213" width="0.0779%" height="15" fill="rgb(205,65,21)" fg:x="555" fg:w="1"/><text x="43.5080%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2580%" y="197" width="0.0779%" height="15" fill="rgb(246,138,48)" fg:x="555" fg:w="1"/><text x="43.5080%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.2580%" y="181" width="0.0779%" height="15" fill="rgb(209,220,47)" fg:x="555" fg:w="1"/><text x="43.5080%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.2580%" y="165" width="0.0779%" height="15" fill="rgb(222,162,49)" fg:x="555" fg:w="1"/><text x="43.5080%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2580%" y="149" width="0.0779%" height="15" fill="rgb(243,123,11)" fg:x="555" fg:w="1"/><text x="43.5080%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="43.2580%" y="133" width="0.0779%" height="15" fill="rgb(221,229,41)" fg:x="555" fg:w="1"/><text x="43.5080%" y="143.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="43.3359%" y="389" width="0.0779%" height="15" fill="rgb(216,68,4)" fg:x="556" fg:w="1"/><text x="43.5859%" y="399.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="43.3359%" y="373" width="0.0779%" height="15" fill="rgb(207,88,35)" fg:x="556" fg:w="1"/><text x="43.5859%" y="383.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="43.3359%" y="357" width="0.0779%" height="15" fill="rgb(252,2,5)" fg:x="556" fg:w="1"/><text x="43.5859%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3359%" y="341" width="0.0779%" height="15" fill="rgb(209,173,7)" fg:x="556" fg:w="1"/><text x="43.5859%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3359%" y="325" width="0.0779%" height="15" fill="rgb(210,198,52)" fg:x="556" fg:w="1"/><text x="43.5859%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.3359%" y="309" width="0.0779%" height="15" fill="rgb(228,152,32)" fg:x="556" fg:w="1"/><text x="43.5859%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3359%" y="293" width="0.0779%" height="15" fill="rgb(249,98,29)" fg:x="556" fg:w="1"/><text x="43.5859%" y="303.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.3359%" y="277" width="0.0779%" height="15" fill="rgb(205,148,48)" fg:x="556" fg:w="1"/><text x="43.5859%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.3359%" y="261" width="0.0779%" height="15" fill="rgb(236,69,34)" fg:x="556" fg:w="1"/><text x="43.5859%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3359%" y="245" width="0.0779%" height="15" fill="rgb(220,151,41)" fg:x="556" fg:w="1"/><text x="43.5859%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.3359%" y="229" width="0.0779%" height="15" fill="rgb(254,106,24)" fg:x="556" fg:w="1"/><text x="43.5859%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="43.4139%" y="277" width="0.0779%" height="15" fill="rgb(210,37,48)" fg:x="557" fg:w="1"/><text x="43.6639%" y="287.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.23%)</title><rect x="43.4139%" y="373" width="0.2338%" height="15" fill="rgb(254,131,5)" fg:x="557" fg:w="3"/><text x="43.6639%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.23%)</title><rect x="43.4139%" y="357" width="0.2338%" height="15" fill="rgb(216,55,41)" fg:x="557" fg:w="3"/><text x="43.6639%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="43.4139%" y="341" width="0.2338%" height="15" fill="rgb(250,35,31)" fg:x="557" fg:w="3"/><text x="43.6639%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="43.4139%" y="325" width="0.2338%" height="15" fill="rgb(207,124,33)" fg:x="557" fg:w="3"/><text x="43.6639%" y="335.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (3 samples, 0.23%)</title><rect x="43.4139%" y="309" width="0.2338%" height="15" fill="rgb(249,175,17)" fg:x="557" fg:w="3"/><text x="43.6639%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="43.4139%" y="293" width="0.2338%" height="15" fill="rgb(224,175,39)" fg:x="557" fg:w="3"/><text x="43.6639%" y="303.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.4918%" y="277" width="0.1559%" height="15" fill="rgb(208,67,49)" fg:x="558" fg:w="2"/><text x="43.7418%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.4918%" y="261" width="0.1559%" height="15" fill="rgb(222,188,41)" fg:x="558" fg:w="2"/><text x="43.7418%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4918%" y="245" width="0.1559%" height="15" fill="rgb(243,213,30)" fg:x="558" fg:w="2"/><text x="43.7418%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.4918%" y="229" width="0.1559%" height="15" fill="rgb(253,100,45)" fg:x="558" fg:w="2"/><text x="43.7418%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4918%" y="213" width="0.1559%" height="15" fill="rgb(226,24,44)" fg:x="558" fg:w="2"/><text x="43.7418%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.4918%" y="197" width="0.1559%" height="15" fill="rgb(215,41,24)" fg:x="558" fg:w="2"/><text x="43.7418%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4918%" y="181" width="0.1559%" height="15" fill="rgb(254,53,33)" fg:x="558" fg:w="2"/><text x="43.7418%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.4918%" y="165" width="0.1559%" height="15" fill="rgb(242,103,10)" fg:x="558" fg:w="2"/><text x="43.7418%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4918%" y="149" width="0.1559%" height="15" fill="rgb(246,29,21)" fg:x="558" fg:w="2"/><text x="43.7418%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="43.4918%" y="133" width="0.1559%" height="15" fill="rgb(251,154,1)" fg:x="558" fg:w="2"/><text x="43.7418%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.4918%" y="117" width="0.1559%" height="15" fill="rgb(254,212,26)" fg:x="558" fg:w="2"/><text x="43.7418%" y="127.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="43.6477%" y="325" width="0.0779%" height="15" fill="rgb(251,187,46)" fg:x="560" fg:w="1"/><text x="43.8977%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (8 samples, 0.62%)</title><rect x="43.1800%" y="437" width="0.6235%" height="15" fill="rgb(224,208,14)" fg:x="554" fg:w="8"/><text x="43.4300%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.62%)</title><rect x="43.1800%" y="421" width="0.6235%" height="15" fill="rgb(222,176,26)" fg:x="554" fg:w="8"/><text x="43.4300%" y="431.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.55%)</title><rect x="43.2580%" y="405" width="0.5456%" height="15" fill="rgb(241,219,52)" fg:x="555" fg:w="7"/><text x="43.5080%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity (5 samples, 0.39%)</title><rect x="43.4139%" y="389" width="0.3897%" height="15" fill="rgb(252,198,21)" fg:x="557" fg:w="5"/><text x="43.6639%" y="399.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="43.6477%" y="373" width="0.1559%" height="15" fill="rgb(244,196,23)" fg:x="560" fg:w="2"/><text x="43.8977%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="43.6477%" y="357" width="0.1559%" height="15" fill="rgb(239,121,44)" fg:x="560" fg:w="2"/><text x="43.8977%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="43.6477%" y="341" width="0.1559%" height="15" fill="rgb(249,203,23)" fg:x="560" fg:w="2"/><text x="43.8977%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="325" width="0.0779%" height="15" fill="rgb(238,219,10)" fg:x="561" fg:w="1"/><text x="43.9756%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="309" width="0.0779%" height="15" fill="rgb(241,35,46)" fg:x="561" fg:w="1"/><text x="43.9756%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="293" width="0.0779%" height="15" fill="rgb(218,28,6)" fg:x="561" fg:w="1"/><text x="43.9756%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="277" width="0.0779%" height="15" fill="rgb(233,151,50)" fg:x="561" fg:w="1"/><text x="43.9756%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="261" width="0.0779%" height="15" fill="rgb(208,57,8)" fg:x="561" fg:w="1"/><text x="43.9756%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="245" width="0.0779%" height="15" fill="rgb(253,99,10)" fg:x="561" fg:w="1"/><text x="43.9756%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="229" width="0.0779%" height="15" fill="rgb(237,196,49)" fg:x="561" fg:w="1"/><text x="43.9756%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="213" width="0.0779%" height="15" fill="rgb(209,51,3)" fg:x="561" fg:w="1"/><text x="43.9756%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="197" width="0.0779%" height="15" fill="rgb(238,129,10)" fg:x="561" fg:w="1"/><text x="43.9756%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="181" width="0.0779%" height="15" fill="rgb(246,201,16)" fg:x="561" fg:w="1"/><text x="43.9756%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="43.7256%" y="165" width="0.0779%" height="15" fill="rgb(250,160,20)" fg:x="561" fg:w="1"/><text x="43.9756%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="43.7256%" y="149" width="0.0779%" height="15" fill="rgb(251,107,25)" fg:x="561" fg:w="1"/><text x="43.9756%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8036%" y="437" width="0.0779%" height="15" fill="rgb(212,103,39)" fg:x="562" fg:w="1"/><text x="44.0536%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.8036%" y="421" width="0.0779%" height="15" fill="rgb(207,9,29)" fg:x="562" fg:w="1"/><text x="44.0536%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="43.8036%" y="405" width="0.0779%" height="15" fill="rgb(227,84,3)" fg:x="562" fg:w="1"/><text x="44.0536%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8036%" y="389" width="0.0779%" height="15" fill="rgb(242,194,7)" fg:x="562" fg:w="1"/><text x="44.0536%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.8036%" y="373" width="0.0779%" height="15" fill="rgb(230,40,4)" fg:x="562" fg:w="1"/><text x="44.0536%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.8036%" y="357" width="0.0779%" height="15" fill="rgb(243,229,33)" fg:x="562" fg:w="1"/><text x="44.0536%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.8036%" y="341" width="0.0779%" height="15" fill="rgb(240,65,24)" fg:x="562" fg:w="1"/><text x="44.0536%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.8036%" y="325" width="0.0779%" height="15" fill="rgb(212,28,20)" fg:x="562" fg:w="1"/><text x="44.0536%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.8036%" y="309" width="0.0779%" height="15" fill="rgb(209,72,3)" fg:x="562" fg:w="1"/><text x="44.0536%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.8036%" y="293" width="0.0779%" height="15" fill="rgb(238,170,36)" fg:x="562" fg:w="1"/><text x="44.0536%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.8036%" y="277" width="0.0779%" height="15" fill="rgb(236,19,38)" fg:x="562" fg:w="1"/><text x="44.0536%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.8036%" y="261" width="0.0779%" height="15" fill="rgb(230,67,43)" fg:x="562" fg:w="1"/><text x="44.0536%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.8036%" y="245" width="0.0779%" height="15" fill="rgb(227,14,36)" fg:x="562" fg:w="1"/><text x="44.0536%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.8036%" y="229" width="0.0779%" height="15" fill="rgb(247,171,49)" fg:x="562" fg:w="1"/><text x="44.0536%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8036%" y="213" width="0.0779%" height="15" fill="rgb(235,164,51)" fg:x="562" fg:w="1"/><text x="44.0536%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (16 samples, 1.25%)</title><rect x="42.7124%" y="501" width="1.2471%" height="15" fill="rgb(246,107,20)" fg:x="548" fg:w="16"/><text x="42.9624%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (12 samples, 0.94%)</title><rect x="43.0242%" y="485" width="0.9353%" height="15" fill="rgb(226,88,18)" fg:x="552" fg:w="12"/><text x="43.2742%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (11 samples, 0.86%)</title><rect x="43.1021%" y="469" width="0.8574%" height="15" fill="rgb(235,136,9)" fg:x="553" fg:w="11"/><text x="43.3521%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (10 samples, 0.78%)</title><rect x="43.1800%" y="453" width="0.7794%" height="15" fill="rgb(209,3,34)" fg:x="554" fg:w="10"/><text x="43.4300%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.8815%" y="437" width="0.0779%" height="15" fill="rgb(213,38,19)" fg:x="563" fg:w="1"/><text x="44.1315%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8815%" y="421" width="0.0779%" height="15" fill="rgb(254,24,24)" fg:x="563" fg:w="1"/><text x="44.1315%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="43.8815%" y="405" width="0.0779%" height="15" fill="rgb(219,122,42)" fg:x="563" fg:w="1"/><text x="44.1315%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="43.8815%" y="389" width="0.0779%" height="15" fill="rgb(205,128,31)" fg:x="563" fg:w="1"/><text x="44.1315%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="43.8815%" y="373" width="0.0779%" height="15" fill="rgb(212,142,0)" fg:x="563" fg:w="1"/><text x="44.1315%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="43.9595%" y="501" width="0.1559%" height="15" fill="rgb(211,25,35)" fg:x="564" fg:w="2"/><text x="44.2095%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="44.0374%" y="485" width="0.0779%" height="15" fill="rgb(220,150,53)" fg:x="565" fg:w="1"/><text x="44.2874%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="44.0374%" y="469" width="0.0779%" height="15" fill="rgb(220,30,24)" fg:x="565" fg:w="1"/><text x="44.2874%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1154%" y="357" width="0.0779%" height="15" fill="rgb(218,86,23)" fg:x="566" fg:w="1"/><text x="44.3654%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="44.1154%" y="341" width="0.0779%" height="15" fill="rgb(206,62,27)" fg:x="566" fg:w="1"/><text x="44.3654%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="44.1154%" y="325" width="0.0779%" height="15" fill="rgb(249,174,0)" fg:x="566" fg:w="1"/><text x="44.3654%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="44.1154%" y="309" width="0.0779%" height="15" fill="rgb(246,67,27)" fg:x="566" fg:w="1"/><text x="44.3654%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="44.1154%" y="293" width="0.0779%" height="15" fill="rgb(250,195,30)" fg:x="566" fg:w="1"/><text x="44.3654%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="44.1154%" y="277" width="0.0779%" height="15" fill="rgb(251,171,50)" fg:x="566" fg:w="1"/><text x="44.3654%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.1154%" y="261" width="0.0779%" height="15" fill="rgb(236,196,10)" fg:x="566" fg:w="1"/><text x="44.3654%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.1154%" y="437" width="0.1559%" height="15" fill="rgb(249,228,52)" fg:x="566" fg:w="2"/><text x="44.3654%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.1154%" y="421" width="0.1559%" height="15" fill="rgb(219,60,51)" fg:x="566" fg:w="2"/><text x="44.3654%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.1154%" y="405" width="0.1559%" height="15" fill="rgb(240,198,24)" fg:x="566" fg:w="2"/><text x="44.3654%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.1154%" y="389" width="0.1559%" height="15" fill="rgb(240,192,40)" fg:x="566" fg:w="2"/><text x="44.3654%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.1154%" y="373" width="0.1559%" height="15" fill="rgb(219,118,5)" fg:x="566" fg:w="2"/><text x="44.3654%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="44.1933%" y="357" width="0.0779%" height="15" fill="rgb(205,202,34)" fg:x="567" fg:w="1"/><text x="44.4433%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="44.1933%" y="341" width="0.0779%" height="15" fill="rgb(234,153,26)" fg:x="567" fg:w="1"/><text x="44.4433%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="44.1154%" y="453" width="0.3118%" height="15" fill="rgb(229,26,29)" fg:x="566" fg:w="4"/><text x="44.3654%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.2712%" y="437" width="0.1559%" height="15" fill="rgb(237,115,21)" fg:x="568" fg:w="2"/><text x="44.5212%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.2712%" y="421" width="0.1559%" height="15" fill="rgb(252,144,15)" fg:x="568" fg:w="2"/><text x="44.5212%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.2712%" y="405" width="0.1559%" height="15" fill="rgb(232,26,13)" fg:x="568" fg:w="2"/><text x="44.5212%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.2712%" y="389" width="0.1559%" height="15" fill="rgb(206,44,19)" fg:x="568" fg:w="2"/><text x="44.5212%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.2712%" y="373" width="0.1559%" height="15" fill="rgb(249,159,2)" fg:x="568" fg:w="2"/><text x="44.5212%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.2712%" y="357" width="0.1559%" height="15" fill="rgb(231,5,32)" fg:x="568" fg:w="2"/><text x="44.5212%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.2712%" y="341" width="0.1559%" height="15" fill="rgb(249,210,18)" fg:x="568" fg:w="2"/><text x="44.5212%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.2712%" y="325" width="0.1559%" height="15" fill="rgb(215,223,36)" fg:x="568" fg:w="2"/><text x="44.5212%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.2712%" y="309" width="0.1559%" height="15" fill="rgb(245,185,20)" fg:x="568" fg:w="2"/><text x="44.5212%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.2712%" y="293" width="0.1559%" height="15" fill="rgb(206,224,11)" fg:x="568" fg:w="2"/><text x="44.5212%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.2712%" y="277" width="0.1559%" height="15" fill="rgb(248,73,42)" fg:x="568" fg:w="2"/><text x="44.5212%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.2712%" y="261" width="0.1559%" height="15" fill="rgb(219,149,31)" fg:x="568" fg:w="2"/><text x="44.5212%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.2712%" y="245" width="0.1559%" height="15" fill="rgb(243,104,17)" fg:x="568" fg:w="2"/><text x="44.5212%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.2712%" y="229" width="0.1559%" height="15" fill="rgb(244,117,33)" fg:x="568" fg:w="2"/><text x="44.5212%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (8 samples, 0.62%)</title><rect x="44.1154%" y="469" width="0.6235%" height="15" fill="rgb(251,25,47)" fg:x="566" fg:w="8"/><text x="44.3654%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="44.4271%" y="453" width="0.3118%" height="15" fill="rgb(249,70,13)" fg:x="570" fg:w="4"/><text x="44.6771%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="44.4271%" y="437" width="0.3118%" height="15" fill="rgb(217,133,18)" fg:x="570" fg:w="4"/><text x="44.6771%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="44.4271%" y="421" width="0.3118%" height="15" fill="rgb(248,97,28)" fg:x="570" fg:w="4"/><text x="44.6771%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="44.5830%" y="405" width="0.1559%" height="15" fill="rgb(237,193,4)" fg:x="572" fg:w="2"/><text x="44.8330%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.5830%" y="389" width="0.1559%" height="15" fill="rgb(247,198,45)" fg:x="572" fg:w="2"/><text x="44.8330%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="44.5830%" y="373" width="0.1559%" height="15" fill="rgb(245,2,20)" fg:x="572" fg:w="2"/><text x="44.8330%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="44.5830%" y="357" width="0.1559%" height="15" fill="rgb(210,71,36)" fg:x="572" fg:w="2"/><text x="44.8330%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="44.5830%" y="341" width="0.1559%" height="15" fill="rgb(238,114,30)" fg:x="572" fg:w="2"/><text x="44.8330%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="44.5830%" y="325" width="0.1559%" height="15" fill="rgb(241,200,2)" fg:x="572" fg:w="2"/><text x="44.8330%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.5830%" y="309" width="0.1559%" height="15" fill="rgb(232,106,18)" fg:x="572" fg:w="2"/><text x="44.8330%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="44.5830%" y="293" width="0.1559%" height="15" fill="rgb(211,141,18)" fg:x="572" fg:w="2"/><text x="44.8330%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="44.5830%" y="277" width="0.1559%" height="15" fill="rgb(224,9,9)" fg:x="572" fg:w="2"/><text x="44.8330%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="44.5830%" y="261" width="0.1559%" height="15" fill="rgb(249,137,46)" fg:x="572" fg:w="2"/><text x="44.8330%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="44.5830%" y="245" width="0.1559%" height="15" fill="rgb(236,44,45)" fg:x="572" fg:w="2"/><text x="44.8330%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="44.5830%" y="229" width="0.1559%" height="15" fill="rgb(205,68,40)" fg:x="572" fg:w="2"/><text x="44.8330%" y="239.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.5830%" y="213" width="0.1559%" height="15" fill="rgb(214,198,49)" fg:x="572" fg:w="2"/><text x="44.8330%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="44.7389%" y="469" width="0.1559%" height="15" fill="rgb(226,140,45)" fg:x="574" fg:w="2"/><text x="44.9889%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="44.7389%" y="453" width="0.1559%" height="15" fill="rgb(209,109,20)" fg:x="574" fg:w="2"/><text x="44.9889%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="44.7389%" y="437" width="0.1559%" height="15" fill="rgb(217,33,46)" fg:x="574" fg:w="2"/><text x="44.9889%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="44.7389%" y="421" width="0.1559%" height="15" fill="rgb(232,150,33)" fg:x="574" fg:w="2"/><text x="44.9889%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="44.7389%" y="405" width="0.1559%" height="15" fill="rgb(233,76,25)" fg:x="574" fg:w="2"/><text x="44.9889%" y="415.50"></text></g><g><title>engine::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="44.7389%" y="389" width="0.1559%" height="15" fill="rgb(254,219,23)" fg:x="574" fg:w="2"/><text x="44.9889%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="44.8168%" y="373" width="0.0779%" height="15" fill="rgb(233,108,4)" fg:x="575" fg:w="1"/><text x="45.0668%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8948%" y="469" width="0.0779%" height="15" fill="rgb(229,98,6)" fg:x="576" fg:w="1"/><text x="45.1448%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="44.9727%" y="437" width="0.0779%" height="15" fill="rgb(217,40,27)" fg:x="577" fg:w="1"/><text x="45.2227%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="44.9727%" y="421" width="0.0779%" height="15" fill="rgb(221,35,43)" fg:x="577" fg:w="1"/><text x="45.2227%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="45.1286%" y="389" width="0.0779%" height="15" fill="rgb(212,107,11)" fg:x="579" fg:w="1"/><text x="45.3786%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="45.1286%" y="373" width="0.0779%" height="15" fill="rgb(245,42,44)" fg:x="579" fg:w="1"/><text x="45.3786%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.2845%" y="357" width="0.0779%" height="15" fill="rgb(209,31,12)" fg:x="581" fg:w="1"/><text x="45.5345%" y="367.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (45 samples, 3.51%)</title><rect x="41.9330%" y="517" width="3.5074%" height="15" fill="rgb(210,228,54)" fg:x="538" fg:w="45"/><text x="42.1830%" y="527.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (17 samples, 1.33%)</title><rect x="44.1154%" y="501" width="1.3250%" height="15" fill="rgb(241,19,33)" fg:x="566" fg:w="17"/><text x="44.3654%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (17 samples, 1.33%)</title><rect x="44.1154%" y="485" width="1.3250%" height="15" fill="rgb(229,51,27)" fg:x="566" fg:w="17"/><text x="44.3654%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.47%)</title><rect x="44.9727%" y="469" width="0.4677%" height="15" fill="rgb(214,167,49)" fg:x="577" fg:w="6"/><text x="45.2227%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.47%)</title><rect x="44.9727%" y="453" width="0.4677%" height="15" fill="rgb(248,140,47)" fg:x="577" fg:w="6"/><text x="45.2227%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (5 samples, 0.39%)</title><rect x="45.0507%" y="437" width="0.3897%" height="15" fill="rgb(228,6,51)" fg:x="578" fg:w="5"/><text x="45.3007%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (5 samples, 0.39%)</title><rect x="45.0507%" y="421" width="0.3897%" height="15" fill="rgb(242,44,53)" fg:x="578" fg:w="5"/><text x="45.3007%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (4 samples, 0.31%)</title><rect x="45.1286%" y="405" width="0.3118%" height="15" fill="rgb(249,90,50)" fg:x="579" fg:w="4"/><text x="45.3786%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="45.2065%" y="389" width="0.2338%" height="15" fill="rgb(222,84,19)" fg:x="580" fg:w="3"/><text x="45.4565%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="45.2065%" y="373" width="0.2338%" height="15" fill="rgb(214,140,12)" fg:x="580" fg:w="3"/><text x="45.4565%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="45.3624%" y="357" width="0.0779%" height="15" fill="rgb(210,20,43)" fg:x="582" fg:w="1"/><text x="45.6124%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="45.4404%" y="501" width="0.0779%" height="15" fill="rgb(243,1,40)" fg:x="583" fg:w="1"/><text x="45.6904%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="45.4404%" y="485" width="0.0779%" height="15" fill="rgb(224,102,26)" fg:x="583" fg:w="1"/><text x="45.6904%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="45.4404%" y="469" width="0.0779%" height="15" fill="rgb(221,179,1)" fg:x="583" fg:w="1"/><text x="45.6904%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="45.5963%" y="453" width="0.2338%" height="15" fill="rgb(216,209,47)" fg:x="585" fg:w="3"/><text x="45.8463%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.6742%" y="437" width="0.1559%" height="15" fill="rgb(251,135,9)" fg:x="586" fg:w="2"/><text x="45.9242%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="45.6742%" y="421" width="0.1559%" height="15" fill="rgb(242,9,36)" fg:x="586" fg:w="2"/><text x="45.9242%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="45.6742%" y="405" width="0.1559%" height="15" fill="rgb(249,60,37)" fg:x="586" fg:w="2"/><text x="45.9242%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="45.6742%" y="389" width="0.1559%" height="15" fill="rgb(230,66,45)" fg:x="586" fg:w="2"/><text x="45.9242%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="45.6742%" y="373" width="0.1559%" height="15" fill="rgb(216,1,47)" fg:x="586" fg:w="2"/><text x="45.9242%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.6742%" y="357" width="0.1559%" height="15" fill="rgb(235,8,23)" fg:x="586" fg:w="2"/><text x="45.9242%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="45.6742%" y="341" width="0.1559%" height="15" fill="rgb(225,136,11)" fg:x="586" fg:w="2"/><text x="45.9242%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="45.6742%" y="325" width="0.1559%" height="15" fill="rgb(228,63,44)" fg:x="586" fg:w="2"/><text x="45.9242%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="45.6742%" y="309" width="0.1559%" height="15" fill="rgb(240,43,52)" fg:x="586" fg:w="2"/><text x="45.9242%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="45.6742%" y="293" width="0.1559%" height="15" fill="rgb(217,167,36)" fg:x="586" fg:w="2"/><text x="45.9242%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="45.6742%" y="277" width="0.1559%" height="15" fill="rgb(250,19,6)" fg:x="586" fg:w="2"/><text x="45.9242%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.6742%" y="261" width="0.1559%" height="15" fill="rgb(236,60,51)" fg:x="586" fg:w="2"/><text x="45.9242%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="45.5963%" y="469" width="0.3118%" height="15" fill="rgb(222,217,20)" fg:x="585" fg:w="4"/><text x="45.8463%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8301%" y="453" width="0.0779%" height="15" fill="rgb(242,65,52)" fg:x="588" fg:w="1"/><text x="46.0801%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="45.8301%" y="437" width="0.0779%" height="15" fill="rgb(217,5,41)" fg:x="588" fg:w="1"/><text x="46.0801%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8301%" y="421" width="0.0779%" height="15" fill="rgb(223,208,53)" fg:x="588" fg:w="1"/><text x="46.0801%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.8301%" y="405" width="0.0779%" height="15" fill="rgb(221,104,30)" fg:x="588" fg:w="1"/><text x="46.0801%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.8301%" y="389" width="0.0779%" height="15" fill="rgb(230,210,42)" fg:x="588" fg:w="1"/><text x="46.0801%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.8301%" y="373" width="0.0779%" height="15" fill="rgb(206,205,27)" fg:x="588" fg:w="1"/><text x="46.0801%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.8301%" y="357" width="0.0779%" height="15" fill="rgb(233,114,38)" fg:x="588" fg:w="1"/><text x="46.0801%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8301%" y="341" width="0.0779%" height="15" fill="rgb(216,174,36)" fg:x="588" fg:w="1"/><text x="46.0801%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.8301%" y="325" width="0.0779%" height="15" fill="rgb(211,30,9)" fg:x="588" fg:w="1"/><text x="46.0801%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.8301%" y="309" width="0.0779%" height="15" fill="rgb(216,8,21)" fg:x="588" fg:w="1"/><text x="46.0801%" y="319.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="45.8301%" y="293" width="0.0779%" height="15" fill="rgb(237,209,39)" fg:x="588" fg:w="1"/><text x="46.0801%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="45.8301%" y="277" width="0.0779%" height="15" fill="rgb(235,111,47)" fg:x="588" fg:w="1"/><text x="46.0801%" y="287.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="45.9860%" y="405" width="0.0779%" height="15" fill="rgb(216,139,9)" fg:x="590" fg:w="1"/><text x="46.2360%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9860%" y="389" width="0.0779%" height="15" fill="rgb(248,185,4)" fg:x="590" fg:w="1"/><text x="46.2360%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="45.9860%" y="373" width="0.0779%" height="15" fill="rgb(239,185,25)" fg:x="590" fg:w="1"/><text x="46.2360%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="45.9860%" y="357" width="0.0779%" height="15" fill="rgb(233,207,8)" fg:x="590" fg:w="1"/><text x="46.2360%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="45.9860%" y="341" width="0.0779%" height="15" fill="rgb(249,220,24)" fg:x="590" fg:w="1"/><text x="46.2360%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="45.9860%" y="325" width="0.0779%" height="15" fill="rgb(221,50,14)" fg:x="590" fg:w="1"/><text x="46.2360%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9860%" y="309" width="0.0779%" height="15" fill="rgb(227,79,42)" fg:x="590" fg:w="1"/><text x="46.2360%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="45.9860%" y="293" width="0.0779%" height="15" fill="rgb(228,218,49)" fg:x="590" fg:w="1"/><text x="46.2360%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="45.9860%" y="277" width="0.0779%" height="15" fill="rgb(249,18,15)" fg:x="590" fg:w="1"/><text x="46.2360%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="45.9860%" y="261" width="0.0779%" height="15" fill="rgb(212,84,27)" fg:x="590" fg:w="1"/><text x="46.2360%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="45.9860%" y="245" width="0.0779%" height="15" fill="rgb(207,83,24)" fg:x="590" fg:w="1"/><text x="46.2360%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="45.9860%" y="229" width="0.0779%" height="15" fill="rgb(219,61,7)" fg:x="590" fg:w="1"/><text x="46.2360%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.9860%" y="213" width="0.0779%" height="15" fill="rgb(211,43,29)" fg:x="590" fg:w="1"/><text x="46.2360%" y="223.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="46.1419%" y="325" width="0.0779%" height="15" fill="rgb(243,15,23)" fg:x="592" fg:w="1"/><text x="46.3919%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="46.1419%" y="341" width="0.2338%" height="15" fill="rgb(217,52,28)" fg:x="592" fg:w="3"/><text x="46.3919%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="46.2198%" y="325" width="0.1559%" height="15" fill="rgb(210,35,6)" fg:x="593" fg:w="2"/><text x="46.4698%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="46.2198%" y="309" width="0.1559%" height="15" fill="rgb(237,187,28)" fg:x="593" fg:w="2"/><text x="46.4698%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2198%" y="293" width="0.1559%" height="15" fill="rgb(231,136,24)" fg:x="593" fg:w="2"/><text x="46.4698%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2198%" y="277" width="0.1559%" height="15" fill="rgb(205,176,52)" fg:x="593" fg:w="2"/><text x="46.4698%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2198%" y="261" width="0.1559%" height="15" fill="rgb(218,65,12)" fg:x="593" fg:w="2"/><text x="46.4698%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2198%" y="245" width="0.1559%" height="15" fill="rgb(234,101,21)" fg:x="593" fg:w="2"/><text x="46.4698%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.2198%" y="229" width="0.1559%" height="15" fill="rgb(206,13,20)" fg:x="593" fg:w="2"/><text x="46.4698%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2198%" y="213" width="0.1559%" height="15" fill="rgb(236,89,44)" fg:x="593" fg:w="2"/><text x="46.4698%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2198%" y="197" width="0.1559%" height="15" fill="rgb(225,52,17)" fg:x="593" fg:w="2"/><text x="46.4698%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2198%" y="181" width="0.1559%" height="15" fill="rgb(214,27,25)" fg:x="593" fg:w="2"/><text x="46.4698%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.2198%" y="165" width="0.1559%" height="15" fill="rgb(240,141,35)" fg:x="593" fg:w="2"/><text x="46.4698%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.2198%" y="149" width="0.1559%" height="15" fill="rgb(216,126,3)" fg:x="593" fg:w="2"/><text x="46.4698%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="46.2977%" y="133" width="0.0779%" height="15" fill="rgb(249,196,23)" fg:x="594" fg:w="1"/><text x="46.5477%" y="143.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="46.2977%" y="117" width="0.0779%" height="15" fill="rgb(215,185,43)" fg:x="594" fg:w="1"/><text x="46.5477%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="46.4536%" y="213" width="0.1559%" height="15" fill="rgb(208,194,36)" fg:x="596" fg:w="2"/><text x="46.7036%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5316%" y="197" width="0.0779%" height="15" fill="rgb(245,182,12)" fg:x="597" fg:w="1"/><text x="46.7816%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="46.3757%" y="293" width="0.3118%" height="15" fill="rgb(244,222,52)" fg:x="595" fg:w="4"/><text x="46.6257%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="46.3757%" y="277" width="0.3118%" height="15" fill="rgb(236,222,51)" fg:x="595" fg:w="4"/><text x="46.6257%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="46.3757%" y="261" width="0.3118%" height="15" fill="rgb(254,71,22)" fg:x="595" fg:w="4"/><text x="46.6257%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.31%)</title><rect x="46.3757%" y="245" width="0.3118%" height="15" fill="rgb(250,104,15)" fg:x="595" fg:w="4"/><text x="46.6257%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="46.4536%" y="229" width="0.2338%" height="15" fill="rgb(229,223,46)" fg:x="596" fg:w="3"/><text x="46.7036%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6095%" y="213" width="0.0779%" height="15" fill="rgb(209,129,18)" fg:x="598" fg:w="1"/><text x="46.8595%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.6095%" y="197" width="0.0779%" height="15" fill="rgb(224,160,1)" fg:x="598" fg:w="1"/><text x="46.8595%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="46.6095%" y="181" width="0.0779%" height="15" fill="rgb(237,112,21)" fg:x="598" fg:w="1"/><text x="46.8595%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="46.6095%" y="165" width="0.0779%" height="15" fill="rgb(215,198,53)" fg:x="598" fg:w="1"/><text x="46.8595%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="46.6095%" y="149" width="0.0779%" height="15" fill="rgb(218,227,35)" fg:x="598" fg:w="1"/><text x="46.8595%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6095%" y="133" width="0.0779%" height="15" fill="rgb(232,121,22)" fg:x="598" fg:w="1"/><text x="46.8595%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="46.6095%" y="117" width="0.0779%" height="15" fill="rgb(235,52,54)" fg:x="598" fg:w="1"/><text x="46.8595%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="46.6095%" y="101" width="0.0779%" height="15" fill="rgb(219,21,44)" fg:x="598" fg:w="1"/><text x="46.8595%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="46.6095%" y="85" width="0.0779%" height="15" fill="rgb(221,51,43)" fg:x="598" fg:w="1"/><text x="46.8595%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="46.6095%" y="69" width="0.0779%" height="15" fill="rgb(225,77,42)" fg:x="598" fg:w="1"/><text x="46.8595%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="46.6095%" y="53" width="0.0779%" height="15" fill="rgb(214,117,53)" fg:x="598" fg:w="1"/><text x="46.8595%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6095%" y="37" width="0.0779%" height="15" fill="rgb(218,227,27)" fg:x="598" fg:w="1"/><text x="46.8595%" y="47.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (9 samples, 0.70%)</title><rect x="46.1419%" y="373" width="0.7015%" height="15" fill="rgb(223,214,36)" fg:x="592" fg:w="9"/><text x="46.3919%" y="383.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.70%)</title><rect x="46.1419%" y="357" width="0.7015%" height="15" fill="rgb(235,21,7)" fg:x="592" fg:w="9"/><text x="46.3919%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (6 samples, 0.47%)</title><rect x="46.3757%" y="341" width="0.4677%" height="15" fill="rgb(244,216,4)" fg:x="595" fg:w="6"/><text x="46.6257%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (6 samples, 0.47%)</title><rect x="46.3757%" y="325" width="0.4677%" height="15" fill="rgb(249,197,24)" fg:x="595" fg:w="6"/><text x="46.6257%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (6 samples, 0.47%)</title><rect x="46.3757%" y="309" width="0.4677%" height="15" fill="rgb(222,169,49)" fg:x="595" fg:w="6"/><text x="46.6257%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.6875%" y="293" width="0.1559%" height="15" fill="rgb(207,137,33)" fg:x="599" fg:w="2"/><text x="46.9375%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.6875%" y="277" width="0.1559%" height="15" fill="rgb(219,180,40)" fg:x="599" fg:w="2"/><text x="46.9375%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="46.6875%" y="261" width="0.1559%" height="15" fill="rgb(250,163,42)" fg:x="599" fg:w="2"/><text x="46.9375%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.6875%" y="245" width="0.1559%" height="15" fill="rgb(239,163,0)" fg:x="599" fg:w="2"/><text x="46.9375%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="46.6875%" y="229" width="0.1559%" height="15" fill="rgb(252,38,28)" fg:x="599" fg:w="2"/><text x="46.9375%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="46.6875%" y="213" width="0.1559%" height="15" fill="rgb(254,203,26)" fg:x="599" fg:w="2"/><text x="46.9375%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="46.7654%" y="197" width="0.0779%" height="15" fill="rgb(209,129,32)" fg:x="600" fg:w="1"/><text x="47.0154%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="46.7654%" y="181" width="0.0779%" height="15" fill="rgb(207,177,52)" fg:x="600" fg:w="1"/><text x="47.0154%" y="191.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="46.8433%" y="325" width="0.0779%" height="15" fill="rgb(230,209,36)" fg:x="601" fg:w="1"/><text x="47.0933%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8433%" y="309" width="0.0779%" height="15" fill="rgb(238,131,0)" fg:x="601" fg:w="1"/><text x="47.0933%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="46.8433%" y="293" width="0.0779%" height="15" fill="rgb(218,61,31)" fg:x="601" fg:w="1"/><text x="47.0933%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8433%" y="277" width="0.0779%" height="15" fill="rgb(232,6,53)" fg:x="601" fg:w="1"/><text x="47.0933%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="46.8433%" y="373" width="0.1559%" height="15" fill="rgb(254,100,32)" fg:x="601" fg:w="2"/><text x="47.0933%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="46.8433%" y="357" width="0.1559%" height="15" fill="rgb(229,194,49)" fg:x="601" fg:w="2"/><text x="47.0933%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="46.8433%" y="341" width="0.1559%" height="15" fill="rgb(206,208,39)" fg:x="601" fg:w="2"/><text x="47.0933%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="46.9213%" y="325" width="0.0779%" height="15" fill="rgb(246,226,14)" fg:x="602" fg:w="1"/><text x="47.1713%" y="335.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.23%)</title><rect x="46.9992%" y="373" width="0.2338%" height="15" fill="rgb(226,48,32)" fg:x="603" fg:w="3"/><text x="47.2492%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.0772%" y="357" width="0.1559%" height="15" fill="rgb(252,43,54)" fg:x="604" fg:w="2"/><text x="47.3272%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.0772%" y="341" width="0.1559%" height="15" fill="rgb(207,124,0)" fg:x="604" fg:w="2"/><text x="47.3272%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="47.0772%" y="325" width="0.1559%" height="15" fill="rgb(248,188,30)" fg:x="604" fg:w="2"/><text x="47.3272%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.0772%" y="309" width="0.1559%" height="15" fill="rgb(232,14,43)" fg:x="604" fg:w="2"/><text x="47.3272%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.2330%" y="261" width="0.0779%" height="15" fill="rgb(218,52,29)" fg:x="606" fg:w="1"/><text x="47.4830%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="47.2330%" y="245" width="0.0779%" height="15" fill="rgb(218,176,50)" fg:x="606" fg:w="1"/><text x="47.4830%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.3889%" y="213" width="0.0779%" height="15" fill="rgb(213,112,0)" fg:x="608" fg:w="1"/><text x="47.6389%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3889%" y="197" width="0.0779%" height="15" fill="rgb(244,216,8)" fg:x="608" fg:w="1"/><text x="47.6389%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.3889%" y="181" width="0.0779%" height="15" fill="rgb(224,148,53)" fg:x="608" fg:w="1"/><text x="47.6389%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.3889%" y="165" width="0.0779%" height="15" fill="rgb(241,133,40)" fg:x="608" fg:w="1"/><text x="47.6389%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="47.3889%" y="149" width="0.0779%" height="15" fill="rgb(232,17,44)" fg:x="608" fg:w="1"/><text x="47.6389%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="47.4669%" y="213" width="0.0779%" height="15" fill="rgb(213,32,25)" fg:x="609" fg:w="1"/><text x="47.7169%" y="223.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="47.5448%" y="213" width="0.0779%" height="15" fill="rgb(249,115,27)" fg:x="610" fg:w="1"/><text x="47.7948%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.5448%" y="197" width="0.0779%" height="15" fill="rgb(241,50,1)" fg:x="610" fg:w="1"/><text x="47.7948%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.5448%" y="181" width="0.0779%" height="15" fill="rgb(244,175,40)" fg:x="610" fg:w="1"/><text x="47.7948%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.5448%" y="165" width="0.0779%" height="15" fill="rgb(230,94,34)" fg:x="610" fg:w="1"/><text x="47.7948%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.5448%" y="149" width="0.0779%" height="15" fill="rgb(223,185,29)" fg:x="610" fg:w="1"/><text x="47.7948%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.39%)</title><rect x="47.3110%" y="245" width="0.3897%" height="15" fill="rgb(225,193,15)" fg:x="607" fg:w="5"/><text x="47.5610%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="47.3110%" y="229" width="0.3897%" height="15" fill="rgb(252,121,38)" fg:x="607" fg:w="5"/><text x="47.5610%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6228%" y="213" width="0.0779%" height="15" fill="rgb(232,44,12)" fg:x="611" fg:w="1"/><text x="47.8728%" y="223.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.6228%" y="197" width="0.0779%" height="15" fill="rgb(226,45,54)" fg:x="611" fg:w="1"/><text x="47.8728%" y="207.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.6228%" y="181" width="0.0779%" height="15" fill="rgb(209,67,17)" fg:x="611" fg:w="1"/><text x="47.8728%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="47.7007%" y="245" width="0.0779%" height="15" fill="rgb(219,108,52)" fg:x="612" fg:w="1"/><text x="47.9507%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.7007%" y="229" width="0.0779%" height="15" fill="rgb(216,118,19)" fg:x="612" fg:w="1"/><text x="47.9507%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="47.7007%" y="213" width="0.0779%" height="15" fill="rgb(228,120,40)" fg:x="612" fg:w="1"/><text x="47.9507%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="47.7007%" y="197" width="0.0779%" height="15" fill="rgb(221,218,34)" fg:x="612" fg:w="1"/><text x="47.9507%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="47.7007%" y="181" width="0.0779%" height="15" fill="rgb(235,89,14)" fg:x="612" fg:w="1"/><text x="47.9507%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="47.7007%" y="165" width="0.0779%" height="15" fill="rgb(248,89,7)" fg:x="612" fg:w="1"/><text x="47.9507%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.7786%" y="213" width="0.0779%" height="15" fill="rgb(212,114,34)" fg:x="613" fg:w="1"/><text x="48.0286%" y="223.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (9 samples, 0.70%)</title><rect x="47.2330%" y="357" width="0.7015%" height="15" fill="rgb(246,88,32)" fg:x="606" fg:w="9"/><text x="47.4830%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (9 samples, 0.70%)</title><rect x="47.2330%" y="341" width="0.7015%" height="15" fill="rgb(237,135,0)" fg:x="606" fg:w="9"/><text x="47.4830%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (9 samples, 0.70%)</title><rect x="47.2330%" y="325" width="0.7015%" height="15" fill="rgb(220,201,54)" fg:x="606" fg:w="9"/><text x="47.4830%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.70%)</title><rect x="47.2330%" y="309" width="0.7015%" height="15" fill="rgb(210,142,36)" fg:x="606" fg:w="9"/><text x="47.4830%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (9 samples, 0.70%)</title><rect x="47.2330%" y="293" width="0.7015%" height="15" fill="rgb(247,189,26)" fg:x="606" fg:w="9"/><text x="47.4830%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (9 samples, 0.70%)</title><rect x="47.2330%" y="277" width="0.7015%" height="15" fill="rgb(223,89,24)" fg:x="606" fg:w="9"/><text x="47.4830%" y="287.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (8 samples, 0.62%)</title><rect x="47.3110%" y="261" width="0.6235%" height="15" fill="rgb(205,90,19)" fg:x="607" fg:w="8"/><text x="47.5610%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="47.7786%" y="245" width="0.1559%" height="15" fill="rgb(234,57,40)" fg:x="613" fg:w="2"/><text x="48.0286%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="47.7786%" y="229" width="0.1559%" height="15" fill="rgb(213,109,10)" fg:x="613" fg:w="2"/><text x="48.0286%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.8566%" y="213" width="0.0779%" height="15" fill="rgb(214,189,23)" fg:x="614" fg:w="1"/><text x="48.1066%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8566%" y="197" width="0.0779%" height="15" fill="rgb(234,200,10)" fg:x="614" fg:w="1"/><text x="48.1066%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.8566%" y="181" width="0.0779%" height="15" fill="rgb(221,148,16)" fg:x="614" fg:w="1"/><text x="48.1066%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.8566%" y="165" width="0.0779%" height="15" fill="rgb(230,115,10)" fg:x="614" fg:w="1"/><text x="48.1066%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8566%" y="149" width="0.0779%" height="15" fill="rgb(220,106,42)" fg:x="614" fg:w="1"/><text x="48.1066%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.8566%" y="133" width="0.0779%" height="15" fill="rgb(225,105,39)" fg:x="614" fg:w="1"/><text x="48.1066%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.8566%" y="117" width="0.0779%" height="15" fill="rgb(211,161,38)" fg:x="614" fg:w="1"/><text x="48.1066%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8566%" y="101" width="0.0779%" height="15" fill="rgb(213,23,19)" fg:x="614" fg:w="1"/><text x="48.1066%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.8566%" y="85" width="0.0779%" height="15" fill="rgb(240,2,33)" fg:x="614" fg:w="1"/><text x="48.1066%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="47.8566%" y="69" width="0.0779%" height="15" fill="rgb(221,29,45)" fg:x="614" fg:w="1"/><text x="48.1066%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="47.8566%" y="53" width="0.0779%" height="15" fill="rgb(242,10,19)" fg:x="614" fg:w="1"/><text x="48.1066%" y="63.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="47.8566%" y="37" width="0.0779%" height="15" fill="rgb(250,84,37)" fg:x="614" fg:w="1"/><text x="48.1066%" y="47.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.0904%" y="309" width="0.1559%" height="15" fill="rgb(214,136,7)" fg:x="617" fg:w="2"/><text x="48.3404%" y="319.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="48.3242%" y="293" width="0.0779%" height="15" fill="rgb(231,189,12)" fg:x="620" fg:w="1"/><text x="48.5742%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.4801%" y="213" width="0.0779%" height="15" fill="rgb(244,40,16)" fg:x="622" fg:w="1"/><text x="48.7301%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (35 samples, 2.73%)</title><rect x="45.9080%" y="469" width="2.7280%" height="15" fill="rgb(217,29,15)" fg:x="589" fg:w="35"/><text x="46.1580%" y="479.50">&lt;p..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 2.73%)</title><rect x="45.9080%" y="453" width="2.7280%" height="15" fill="rgb(235,172,33)" fg:x="589" fg:w="35"/><text x="46.1580%" y="463.50">&lt;a..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (34 samples, 2.65%)</title><rect x="45.9860%" y="437" width="2.6500%" height="15" fill="rgb(206,148,28)" fg:x="590" fg:w="34"/><text x="46.2360%" y="447.50">&lt;c..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (34 samples, 2.65%)</title><rect x="45.9860%" y="421" width="2.6500%" height="15" fill="rgb(251,167,37)" fg:x="590" fg:w="34"/><text x="46.2360%" y="431.50">&lt;e..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (33 samples, 2.57%)</title><rect x="46.0639%" y="405" width="2.5721%" height="15" fill="rgb(229,94,52)" fg:x="591" fg:w="33"/><text x="46.3139%" y="415.50">&lt;e..</text></g><g><title>engine::internal::Entities::add_persisted (32 samples, 2.49%)</title><rect x="46.1419%" y="389" width="2.4942%" height="15" fill="rgb(216,132,9)" fg:x="592" fg:w="32"/><text x="46.3919%" y="399.50">en..</text></g><g><title>kernel::model::deserialize_entity (18 samples, 1.40%)</title><rect x="47.2330%" y="373" width="1.4030%" height="15" fill="rgb(208,110,29)" fg:x="606" fg:w="18"/><text x="47.4830%" y="383.50"></text></g><g><title>serde_json::de::from_trait (9 samples, 0.70%)</title><rect x="47.9345%" y="357" width="0.7015%" height="15" fill="rgb(241,23,8)" fg:x="615" fg:w="9"/><text x="48.1845%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9 samples, 0.70%)</title><rect x="47.9345%" y="341" width="0.7015%" height="15" fill="rgb(208,26,35)" fg:x="615" fg:w="9"/><text x="48.1845%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.70%)</title><rect x="47.9345%" y="325" width="0.7015%" height="15" fill="rgb(242,165,34)" fg:x="615" fg:w="9"/><text x="48.1845%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="48.2463%" y="309" width="0.3897%" height="15" fill="rgb(222,222,33)" fg:x="619" fg:w="5"/><text x="48.4963%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="48.4022%" y="293" width="0.2338%" height="15" fill="rgb(227,16,52)" fg:x="621" fg:w="3"/><text x="48.6522%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="48.4022%" y="277" width="0.2338%" height="15" fill="rgb(213,93,12)" fg:x="621" fg:w="3"/><text x="48.6522%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="48.4022%" y="261" width="0.2338%" height="15" fill="rgb(238,41,5)" fg:x="621" fg:w="3"/><text x="48.6522%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="48.4022%" y="245" width="0.2338%" height="15" fill="rgb(211,60,15)" fg:x="621" fg:w="3"/><text x="48.6522%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="48.4022%" y="229" width="0.2338%" height="15" fill="rgb(209,11,34)" fg:x="621" fg:w="3"/><text x="48.6522%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="48.5581%" y="213" width="0.0779%" height="15" fill="rgb(254,155,53)" fg:x="623" fg:w="1"/><text x="48.8081%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5581%" y="197" width="0.0779%" height="15" fill="rgb(236,174,8)" fg:x="623" fg:w="1"/><text x="48.8081%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="48.6360%" y="469" width="0.0779%" height="15" fill="rgb(229,31,27)" fg:x="624" fg:w="1"/><text x="48.8860%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.6360%" y="453" width="0.0779%" height="15" fill="rgb(242,226,26)" fg:x="624" fg:w="1"/><text x="48.8860%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="48.6360%" y="437" width="0.0779%" height="15" fill="rgb(234,32,40)" fg:x="624" fg:w="1"/><text x="48.8860%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="48.6360%" y="421" width="0.0779%" height="15" fill="rgb(249,226,47)" fg:x="624" fg:w="1"/><text x="48.8860%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="48.6360%" y="405" width="0.0779%" height="15" fill="rgb(212,6,26)" fg:x="624" fg:w="1"/><text x="48.8860%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="48.8698%" y="437" width="0.1559%" height="15" fill="rgb(249,202,29)" fg:x="627" fg:w="2"/><text x="49.1198%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="48.8698%" y="421" width="0.1559%" height="15" fill="rgb(226,106,4)" fg:x="627" fg:w="2"/><text x="49.1198%" y="431.50"></text></g><g><title>plugins_core::tools::get_contained_keys (47 samples, 3.66%)</title><rect x="45.4404%" y="517" width="3.6633%" height="15" fill="rgb(251,2,27)" fg:x="583" fg:w="47"/><text x="45.6904%" y="527.50">plug..</text></g><g><title>kernel::model::entry::Entry::scope (46 samples, 3.59%)</title><rect x="45.5183%" y="501" width="3.5853%" height="15" fill="rgb(236,208,0)" fg:x="584" fg:w="46"/><text x="45.7683%" y="511.50">kern..</text></g><g><title>kernel::model::entity::Entity::load_scope (46 samples, 3.59%)</title><rect x="45.5183%" y="485" width="3.5853%" height="15" fill="rgb(211,66,17)" fg:x="584" fg:w="46"/><text x="45.7683%" y="495.50">kern..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="48.7140%" y="469" width="0.3897%" height="15" fill="rgb(216,129,9)" fg:x="625" fg:w="5"/><text x="48.9640%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="48.7140%" y="453" width="0.3897%" height="15" fill="rgb(215,130,23)" fg:x="625" fg:w="5"/><text x="48.9640%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.0257%" y="437" width="0.0779%" height="15" fill="rgb(253,157,11)" fg:x="629" fg:w="1"/><text x="49.2757%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.0257%" y="421" width="0.0779%" height="15" fill="rgb(224,25,14)" fg:x="629" fg:w="1"/><text x="49.2757%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1037%" y="501" width="0.0779%" height="15" fill="rgb(238,16,7)" fg:x="630" fg:w="1"/><text x="49.3537%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1816%" y="469" width="0.0779%" height="15" fill="rgb(228,74,11)" fg:x="631" fg:w="1"/><text x="49.4316%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1816%" y="453" width="0.0779%" height="15" fill="rgb(239,221,27)" fg:x="631" fg:w="1"/><text x="49.4316%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="49.1816%" y="437" width="0.0779%" height="15" fill="rgb(229,166,18)" fg:x="631" fg:w="1"/><text x="49.4316%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.1816%" y="421" width="0.0779%" height="15" fill="rgb(254,94,46)" fg:x="631" fg:w="1"/><text x="49.4316%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.2595%" y="469" width="0.0779%" height="15" fill="rgb(241,79,19)" fg:x="632" fg:w="1"/><text x="49.5095%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4154%" y="437" width="0.0779%" height="15" fill="rgb(228,99,51)" fg:x="634" fg:w="1"/><text x="49.6654%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (101 samples, 7.87%)</title><rect x="41.6991%" y="549" width="7.8722%" height="15" fill="rgb(211,15,6)" fg:x="535" fg:w="101"/><text x="41.9491%" y="559.50">&lt;alloc::vec..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (101 samples, 7.87%)</title><rect x="41.6991%" y="533" width="7.8722%" height="15" fill="rgb(245,107,54)" fg:x="535" fg:w="101"/><text x="41.9491%" y="543.50">&lt;core::iter..</text></g><g><title>plugins_core::tools::get_occupant_keys (6 samples, 0.47%)</title><rect x="49.1037%" y="517" width="0.4677%" height="15" fill="rgb(243,3,2)" fg:x="630" fg:w="6"/><text x="49.3537%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.39%)</title><rect x="49.1816%" y="501" width="0.3897%" height="15" fill="rgb(206,122,10)" fg:x="631" fg:w="5"/><text x="49.4316%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.39%)</title><rect x="49.1816%" y="485" width="0.3897%" height="15" fill="rgb(224,88,4)" fg:x="631" fg:w="5"/><text x="49.4316%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="49.3375%" y="469" width="0.2338%" height="15" fill="rgb(230,1,41)" fg:x="633" fg:w="3"/><text x="49.5875%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="49.3375%" y="453" width="0.2338%" height="15" fill="rgb(230,1,31)" fg:x="633" fg:w="3"/><text x="49.5875%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="49.4934%" y="437" width="0.0779%" height="15" fill="rgb(232,67,19)" fg:x="635" fg:w="1"/><text x="49.7434%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="49.4934%" y="421" width="0.0779%" height="15" fill="rgb(222,206,20)" fg:x="635" fg:w="1"/><text x="49.7434%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="49.4934%" y="405" width="0.0779%" height="15" fill="rgb(217,225,19)" fg:x="635" fg:w="1"/><text x="49.7434%" y="415.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="49.4934%" y="389" width="0.0779%" height="15" fill="rgb(234,13,33)" fg:x="635" fg:w="1"/><text x="49.7434%" y="399.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="49.4934%" y="373" width="0.0779%" height="15" fill="rgb(254,5,1)" fg:x="635" fg:w="1"/><text x="49.7434%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8051%" y="325" width="0.0779%" height="15" fill="rgb(211,121,41)" fg:x="639" fg:w="1"/><text x="50.0551%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.8051%" y="501" width="0.1559%" height="15" fill="rgb(213,199,35)" fg:x="639" fg:w="2"/><text x="50.0551%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="49.8051%" y="485" width="0.1559%" height="15" fill="rgb(240,118,22)" fg:x="639" fg:w="2"/><text x="50.0551%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="49.8051%" y="469" width="0.1559%" height="15" fill="rgb(238,184,25)" fg:x="639" fg:w="2"/><text x="50.0551%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="49.8051%" y="453" width="0.1559%" height="15" fill="rgb(210,165,6)" fg:x="639" fg:w="2"/><text x="50.0551%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="49.8051%" y="437" width="0.1559%" height="15" fill="rgb(235,149,5)" fg:x="639" fg:w="2"/><text x="50.0551%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="49.8051%" y="421" width="0.1559%" height="15" fill="rgb(221,63,5)" fg:x="639" fg:w="2"/><text x="50.0551%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="49.8051%" y="405" width="0.1559%" height="15" fill="rgb(250,44,41)" fg:x="639" fg:w="2"/><text x="50.0551%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="49.8051%" y="389" width="0.1559%" height="15" fill="rgb(235,112,47)" fg:x="639" fg:w="2"/><text x="50.0551%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="49.8051%" y="373" width="0.1559%" height="15" fill="rgb(252,176,34)" fg:x="639" fg:w="2"/><text x="50.0551%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="49.8051%" y="357" width="0.1559%" height="15" fill="rgb(234,50,19)" fg:x="639" fg:w="2"/><text x="50.0551%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="49.8051%" y="341" width="0.1559%" height="15" fill="rgb(241,195,31)" fg:x="639" fg:w="2"/><text x="50.0551%" y="351.50"></text></g><g><title>criterion::stats::univariate::sample::Sample&lt;A&gt;::percentiles (1 samples, 0.08%)</title><rect x="49.8831%" y="325" width="0.0779%" height="15" fill="rgb(212,93,11)" fg:x="640" fg:w="1"/><text x="50.1331%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="50.1169%" y="341" width="0.0779%" height="15" fill="rgb(254,98,51)" fg:x="643" fg:w="1"/><text x="50.3669%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="50.1169%" y="325" width="0.0779%" height="15" fill="rgb(246,18,45)" fg:x="643" fg:w="1"/><text x="50.3669%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="50.1169%" y="309" width="0.0779%" height="15" fill="rgb(215,148,23)" fg:x="643" fg:w="1"/><text x="50.3669%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="50.1169%" y="293" width="0.0779%" height="15" fill="rgb(227,22,7)" fg:x="643" fg:w="1"/><text x="50.3669%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.1169%" y="277" width="0.0779%" height="15" fill="rgb(207,210,37)" fg:x="643" fg:w="1"/><text x="50.3669%" y="287.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.31%)</title><rect x="49.9610%" y="501" width="0.3118%" height="15" fill="rgb(247,147,42)" fg:x="641" fg:w="4"/><text x="50.2110%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.31%)</title><rect x="49.9610%" y="485" width="0.3118%" height="15" fill="rgb(226,213,14)" fg:x="641" fg:w="4"/><text x="50.2110%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.31%)</title><rect x="49.9610%" y="469" width="0.3118%" height="15" fill="rgb(223,18,10)" fg:x="641" fg:w="4"/><text x="50.2110%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="49.9610%" y="453" width="0.3118%" height="15" fill="rgb(253,34,22)" fg:x="641" fg:w="4"/><text x="50.2110%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="49.9610%" y="437" width="0.3118%" height="15" fill="rgb(222,90,31)" fg:x="641" fg:w="4"/><text x="50.2110%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.31%)</title><rect x="49.9610%" y="421" width="0.3118%" height="15" fill="rgb(220,182,30)" fg:x="641" fg:w="4"/><text x="50.2110%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.31%)</title><rect x="49.9610%" y="405" width="0.3118%" height="15" fill="rgb(229,170,12)" fg:x="641" fg:w="4"/><text x="50.2110%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.23%)</title><rect x="50.0390%" y="389" width="0.2338%" height="15" fill="rgb(210,101,21)" fg:x="642" fg:w="3"/><text x="50.2890%" y="399.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="50.1169%" y="373" width="0.1559%" height="15" fill="rgb(237,177,31)" fg:x="643" fg:w="2"/><text x="50.3669%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="50.1169%" y="357" width="0.1559%" height="15" fill="rgb(215,91,34)" fg:x="643" fg:w="2"/><text x="50.3669%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.1949%" y="341" width="0.0779%" height="15" fill="rgb(229,206,16)" fg:x="644" fg:w="1"/><text x="50.4449%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="50.1949%" y="325" width="0.0779%" height="15" fill="rgb(235,207,10)" fg:x="644" fg:w="1"/><text x="50.4449%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="50.1949%" y="309" width="0.0779%" height="15" fill="rgb(247,18,10)" fg:x="644" fg:w="1"/><text x="50.4449%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="50.1949%" y="293" width="0.0779%" height="15" fill="rgb(232,4,6)" fg:x="644" fg:w="1"/><text x="50.4449%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="50.1949%" y="277" width="0.0779%" height="15" fill="rgb(247,93,45)" fg:x="644" fg:w="1"/><text x="50.4449%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="50.1949%" y="261" width="0.0779%" height="15" fill="rgb(240,181,18)" fg:x="644" fg:w="1"/><text x="50.4449%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.1949%" y="245" width="0.0779%" height="15" fill="rgb(208,224,0)" fg:x="644" fg:w="1"/><text x="50.4449%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="50.1949%" y="229" width="0.0779%" height="15" fill="rgb(224,207,54)" fg:x="644" fg:w="1"/><text x="50.4449%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="50.1949%" y="213" width="0.0779%" height="15" fill="rgb(217,152,29)" fg:x="644" fg:w="1"/><text x="50.4449%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="50.1949%" y="197" width="0.0779%" height="15" fill="rgb(243,78,27)" fg:x="644" fg:w="1"/><text x="50.4449%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="50.1949%" y="181" width="0.0779%" height="15" fill="rgb(228,111,9)" fg:x="644" fg:w="1"/><text x="50.4449%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="50.1949%" y="165" width="0.0779%" height="15" fill="rgb(230,213,21)" fg:x="644" fg:w="1"/><text x="50.4449%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="50.1949%" y="149" width="0.0779%" height="15" fill="rgb(248,50,36)" fg:x="644" fg:w="1"/><text x="50.4449%" y="159.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="50.1949%" y="133" width="0.0779%" height="15" fill="rgb(226,19,31)" fg:x="644" fg:w="1"/><text x="50.4449%" y="143.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="50.1949%" y="117" width="0.0779%" height="15" fill="rgb(205,132,21)" fg:x="644" fg:w="1"/><text x="50.4449%" y="127.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.0522%" y="389" width="0.0779%" height="15" fill="rgb(207,42,19)" fg:x="655" fg:w="1"/><text x="51.3022%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.0522%" y="373" width="0.0779%" height="15" fill="rgb(229,69,35)" fg:x="655" fg:w="1"/><text x="51.3022%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.9096%" y="341" width="0.0779%" height="15" fill="rgb(226,96,11)" fg:x="666" fg:w="1"/><text x="52.1596%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="51.9096%" y="325" width="0.0779%" height="15" fill="rgb(236,133,54)" fg:x="666" fg:w="1"/><text x="52.1596%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="52.3772%" y="293" width="0.0779%" height="15" fill="rgb(247,166,21)" fg:x="672" fg:w="1"/><text x="52.6272%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="52.3772%" y="277" width="0.0779%" height="15" fill="rgb(220,132,12)" fg:x="672" fg:w="1"/><text x="52.6272%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="53.1567%" y="165" width="0.1559%" height="15" fill="rgb(233,27,30)" fg:x="682" fg:w="2"/><text x="53.4067%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2346%" y="149" width="0.0779%" height="15" fill="rgb(246,161,27)" fg:x="683" fg:w="1"/><text x="53.4846%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.2346%" y="133" width="0.0779%" height="15" fill="rgb(240,56,3)" fg:x="683" fg:w="1"/><text x="53.4846%" y="143.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (9 samples, 0.70%)</title><rect x="53.0008%" y="197" width="0.7015%" height="15" fill="rgb(242,190,9)" fg:x="680" fg:w="9"/><text x="53.2508%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="53.1567%" y="181" width="0.5456%" height="15" fill="rgb(234,3,52)" fg:x="682" fg:w="7"/><text x="53.4067%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.39%)</title><rect x="53.3125%" y="165" width="0.3897%" height="15" fill="rgb(220,221,19)" fg:x="684" fg:w="5"/><text x="53.5625%" y="175.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="53.4684%" y="149" width="0.2338%" height="15" fill="rgb(247,178,30)" fg:x="686" fg:w="3"/><text x="53.7184%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="53.7023%" y="197" width="0.1559%" height="15" fill="rgb(234,212,27)" fg:x="689" fg:w="2"/><text x="53.9523%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 1.17%)</title><rect x="52.7670%" y="213" width="1.1691%" height="15" fill="rgb(226,199,38)" fg:x="677" fg:w="15"/><text x="53.0170%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="53.8581%" y="197" width="0.0779%" height="15" fill="rgb(248,114,22)" fg:x="691" fg:w="1"/><text x="54.1081%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="53.8581%" y="181" width="0.0779%" height="15" fill="rgb(221,180,4)" fg:x="691" fg:w="1"/><text x="54.1081%" y="191.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (18 samples, 1.40%)</title><rect x="52.6890%" y="245" width="1.4030%" height="15" fill="rgb(220,229,24)" fg:x="676" fg:w="18"/><text x="52.9390%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (17 samples, 1.33%)</title><rect x="52.7670%" y="229" width="1.3250%" height="15" fill="rgb(226,184,27)" fg:x="677" fg:w="17"/><text x="53.0170%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="53.9361%" y="213" width="0.1559%" height="15" fill="rgb(232,99,15)" fg:x="692" fg:w="2"/><text x="54.1861%" y="223.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="53.9361%" y="197" width="0.1559%" height="15" fill="rgb(250,167,16)" fg:x="692" fg:w="2"/><text x="54.1861%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.56%)</title><rect x="52.6111%" y="261" width="1.5588%" height="15" fill="rgb(243,113,6)" fg:x="675" fg:w="20"/><text x="52.8611%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.0920%" y="245" width="0.0779%" height="15" fill="rgb(244,147,52)" fg:x="694" fg:w="1"/><text x="54.3420%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.0920%" y="229" width="0.0779%" height="15" fill="rgb(235,59,50)" fg:x="694" fg:w="1"/><text x="54.3420%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (24 samples, 1.87%)</title><rect x="52.4552%" y="293" width="1.8706%" height="15" fill="rgb(250,188,6)" fg:x="673" fg:w="24"/><text x="52.7052%" y="303.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (22 samples, 1.71%)</title><rect x="52.6111%" y="277" width="1.7147%" height="15" fill="rgb(236,173,11)" fg:x="675" fg:w="22"/><text x="52.8611%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="54.1699%" y="261" width="0.1559%" height="15" fill="rgb(233,64,3)" fg:x="695" fg:w="2"/><text x="54.4199%" y="271.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.1699%" y="245" width="0.1559%" height="15" fill="rgb(207,92,7)" fg:x="695" fg:w="2"/><text x="54.4199%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.26%)</title><rect x="52.2993%" y="309" width="2.2603%" height="15" fill="rgb(221,30,19)" fg:x="671" fg:w="29"/><text x="52.5493%" y="319.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="54.3258%" y="293" width="0.2338%" height="15" fill="rgb(245,22,49)" fg:x="697" fg:w="3"/><text x="54.5758%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="54.4037%" y="277" width="0.1559%" height="15" fill="rgb(218,39,20)" fg:x="698" fg:w="2"/><text x="54.6537%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="54.4817%" y="261" width="0.0779%" height="15" fill="rgb(222,144,21)" fg:x="699" fg:w="1"/><text x="54.7317%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (33 samples, 2.57%)</title><rect x="52.1434%" y="325" width="2.5721%" height="15" fill="rgb(222,78,51)" fg:x="669" fg:w="33"/><text x="52.3934%" y="335.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="54.5596%" y="309" width="0.1559%" height="15" fill="rgb(248,213,53)" fg:x="700" fg:w="2"/><text x="54.8096%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.5596%" y="293" width="0.1559%" height="15" fill="rgb(245,28,34)" fg:x="700" fg:w="2"/><text x="54.8096%" y="303.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="54.7935%" y="245" width="0.0779%" height="15" fill="rgb(229,186,26)" fg:x="703" fg:w="1"/><text x="55.0435%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="54.7935%" y="229" width="0.0779%" height="15" fill="rgb(224,0,41)" fg:x="703" fg:w="1"/><text x="55.0435%" y="239.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (38 samples, 2.96%)</title><rect x="51.9875%" y="341" width="2.9618%" height="15" fill="rgb(223,136,51)" fg:x="667" fg:w="38"/><text x="52.2375%" y="351.50">&lt;rp..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="54.7155%" y="325" width="0.2338%" height="15" fill="rgb(234,50,9)" fg:x="702" fg:w="3"/><text x="54.9655%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="54.7155%" y="309" width="0.2338%" height="15" fill="rgb(242,164,20)" fg:x="702" fg:w="3"/><text x="54.9655%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (3 samples, 0.23%)</title><rect x="54.7155%" y="293" width="0.2338%" height="15" fill="rgb(230,169,22)" fg:x="702" fg:w="3"/><text x="54.9655%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="54.7155%" y="277" width="0.2338%" height="15" fill="rgb(228,82,26)" fg:x="702" fg:w="3"/><text x="54.9655%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="54.7155%" y="261" width="0.2338%" height="15" fill="rgb(244,220,31)" fg:x="702" fg:w="3"/><text x="54.9655%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8714%" y="245" width="0.0779%" height="15" fill="rgb(214,35,25)" fg:x="704" fg:w="1"/><text x="55.1214%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="54.8714%" y="229" width="0.0779%" height="15" fill="rgb(245,162,54)" fg:x="704" fg:w="1"/><text x="55.1214%" y="239.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="54.9493%" y="341" width="0.1559%" height="15" fill="rgb(210,43,24)" fg:x="705" fg:w="2"/><text x="55.1993%" y="351.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="54.9493%" y="325" width="0.1559%" height="15" fill="rgb(226,145,51)" fg:x="705" fg:w="2"/><text x="55.1993%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 3.59%)</title><rect x="51.5978%" y="357" width="3.5853%" height="15" fill="rgb(237,52,53)" fg:x="662" fg:w="46"/><text x="51.8478%" y="367.50">&lt;cor..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.1052%" y="341" width="0.0779%" height="15" fill="rgb(216,226,7)" fg:x="707" fg:w="1"/><text x="55.3552%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (55 samples, 4.29%)</title><rect x="51.1302%" y="389" width="4.2868%" height="15" fill="rgb(206,223,18)" fg:x="656" fg:w="55"/><text x="51.3802%" y="399.50">&lt;rpc_..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (50 samples, 3.90%)</title><rect x="51.5199%" y="373" width="3.8971%" height="15" fill="rgb(221,1,10)" fg:x="661" fg:w="50"/><text x="51.7699%" y="383.50">&lt;std..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="55.1832%" y="357" width="0.2338%" height="15" fill="rgb(221,151,42)" fg:x="708" fg:w="3"/><text x="55.4332%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="55.2611%" y="341" width="0.1559%" height="15" fill="rgb(205,183,46)" fg:x="709" fg:w="2"/><text x="55.5111%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.23%)</title><rect x="55.4170%" y="389" width="0.2338%" height="15" fill="rgb(239,229,1)" fg:x="711" fg:w="3"/><text x="55.6670%" y="399.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="55.4949%" y="373" width="0.1559%" height="15" fill="rgb(236,192,23)" fg:x="712" fg:w="2"/><text x="55.7449%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.8846%" y="373" width="0.0779%" height="15" fill="rgb(215,146,3)" fg:x="717" fg:w="1"/><text x="56.1346%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 5.30%)</title><rect x="50.8184%" y="405" width="5.3001%" height="15" fill="rgb(235,52,27)" fg:x="652" fg:w="68"/><text x="51.0684%" y="415.50">&lt;core:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.47%)</title><rect x="55.6508%" y="389" width="0.4677%" height="15" fill="rgb(236,45,20)" fg:x="714" fg:w="6"/><text x="55.9008%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.9626%" y="373" width="0.1559%" height="15" fill="rgb(235,86,41)" fg:x="718" fg:w="2"/><text x="56.2126%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (73 samples, 5.69%)</title><rect x="50.5846%" y="437" width="5.6898%" height="15" fill="rgb(235,27,27)" fg:x="649" fg:w="73"/><text x="50.8346%" y="447.50">&lt;rpc_pr..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (70 samples, 5.46%)</title><rect x="50.8184%" y="421" width="5.4560%" height="15" fill="rgb(232,4,34)" fg:x="652" fg:w="70"/><text x="51.0684%" y="431.50">&lt;std::c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="56.1185%" y="405" width="0.1559%" height="15" fill="rgb(215,22,10)" fg:x="720" fg:w="2"/><text x="56.3685%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.1964%" y="389" width="0.0779%" height="15" fill="rgb(230,228,27)" fg:x="721" fg:w="1"/><text x="56.4464%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.23%)</title><rect x="56.3523%" y="421" width="0.2338%" height="15" fill="rgb(216,26,51)" fg:x="723" fg:w="3"/><text x="56.6023%" y="431.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (82 samples, 6.39%)</title><rect x="50.2728%" y="485" width="6.3913%" height="15" fill="rgb(225,180,50)" fg:x="645" fg:w="82"/><text x="50.5228%" y="495.50">&lt;rpc_pro..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (82 samples, 6.39%)</title><rect x="50.2728%" y="469" width="6.3913%" height="15" fill="rgb(236,211,2)" fg:x="645" fg:w="82"/><text x="50.5228%" y="479.50">&lt;std::co..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (81 samples, 6.31%)</title><rect x="50.3507%" y="453" width="6.3133%" height="15" fill="rgb(250,51,20)" fg:x="646" fg:w="81"/><text x="50.6007%" y="463.50">&lt;core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.39%)</title><rect x="56.2744%" y="437" width="0.3897%" height="15" fill="rgb(232,70,37)" fg:x="722" fg:w="5"/><text x="56.5244%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5861%" y="421" width="0.0779%" height="15" fill="rgb(226,183,39)" fg:x="726" fg:w="1"/><text x="56.8361%" y="431.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="56.9758%" y="437" width="0.3118%" height="15" fill="rgb(232,228,21)" fg:x="731" fg:w="4"/><text x="57.2258%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="57.2876%" y="437" width="0.0779%" height="15" fill="rgb(251,118,32)" fg:x="735" fg:w="1"/><text x="57.5376%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="57.3655%" y="437" width="0.2338%" height="15" fill="rgb(235,172,38)" fg:x="736" fg:w="3"/><text x="57.6155%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.5214%" y="421" width="0.0779%" height="15" fill="rgb(235,63,18)" fg:x="738" fg:w="1"/><text x="57.7714%" y="431.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="57.5994%" y="437" width="0.1559%" height="15" fill="rgb(225,4,7)" fg:x="739" fg:w="2"/><text x="57.8494%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="57.6773%" y="421" width="0.0779%" height="15" fill="rgb(231,61,1)" fg:x="740" fg:w="1"/><text x="57.9273%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.6773%" y="405" width="0.0779%" height="15" fill="rgb(241,155,22)" fg:x="740" fg:w="1"/><text x="57.9273%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (2 samples, 0.16%)</title><rect x="57.7553%" y="437" width="0.1559%" height="15" fill="rgb(209,100,26)" fg:x="741" fg:w="2"/><text x="58.0053%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="57.8332%" y="421" width="0.0779%" height="15" fill="rgb(248,181,15)" fg:x="742" fg:w="1"/><text x="58.0832%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.8332%" y="405" width="0.0779%" height="15" fill="rgb(214,94,31)" fg:x="742" fg:w="1"/><text x="58.0832%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.9111%" y="405" width="0.0779%" height="15" fill="rgb(207,16,42)" fg:x="743" fg:w="1"/><text x="58.1611%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (4 samples, 0.31%)</title><rect x="57.9111%" y="437" width="0.3118%" height="15" fill="rgb(208,127,13)" fg:x="743" fg:w="4"/><text x="58.1611%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.31%)</title><rect x="57.9111%" y="421" width="0.3118%" height="15" fill="rgb(220,211,18)" fg:x="743" fg:w="4"/><text x="58.1611%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="57.9891%" y="405" width="0.2338%" height="15" fill="rgb(221,55,38)" fg:x="744" fg:w="3"/><text x="58.2391%" y="415.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="58.3009%" y="421" width="0.1559%" height="15" fill="rgb(252,219,45)" fg:x="748" fg:w="2"/><text x="58.5509%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="58.4567%" y="421" width="0.1559%" height="15" fill="rgb(248,53,35)" fg:x="750" fg:w="2"/><text x="58.7067%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.5347%" y="405" width="0.0779%" height="15" fill="rgb(210,87,2)" fg:x="751" fg:w="1"/><text x="58.7847%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.5347%" y="389" width="0.0779%" height="15" fill="rgb(239,133,9)" fg:x="751" fg:w="1"/><text x="58.7847%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="58.6126%" y="389" width="0.2338%" height="15" fill="rgb(214,114,5)" fg:x="752" fg:w="3"/><text x="58.8626%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="58.7685%" y="373" width="0.0779%" height="15" fill="rgb(206,124,24)" fg:x="754" fg:w="1"/><text x="59.0185%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.7685%" y="357" width="0.0779%" height="15" fill="rgb(212,57,33)" fg:x="754" fg:w="1"/><text x="59.0185%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.0023%" y="309" width="0.0779%" height="15" fill="rgb(246,21,20)" fg:x="757" fg:w="1"/><text x="59.2523%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="58.8465%" y="357" width="0.3118%" height="15" fill="rgb(253,210,39)" fg:x="755" fg:w="4"/><text x="59.0965%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="58.8465%" y="341" width="0.3118%" height="15" fill="rgb(209,187,24)" fg:x="755" fg:w="4"/><text x="59.0965%" y="351.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.31%)</title><rect x="58.8465%" y="325" width="0.3118%" height="15" fill="rgb(246,136,17)" fg:x="755" fg:w="4"/><text x="59.0965%" y="335.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="59.0803%" y="309" width="0.0779%" height="15" fill="rgb(211,0,30)" fg:x="758" fg:w="1"/><text x="59.3303%" y="319.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.39%)</title><rect x="58.8465%" y="389" width="0.3897%" height="15" fill="rgb(216,199,7)" fg:x="755" fg:w="5"/><text x="59.0965%" y="399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="58.8465%" y="373" width="0.3897%" height="15" fill="rgb(207,210,19)" fg:x="755" fg:w="5"/><text x="59.0965%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1582%" y="357" width="0.0779%" height="15" fill="rgb(237,187,39)" fg:x="759" fg:w="1"/><text x="59.4082%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="59.3141%" y="373" width="0.0779%" height="15" fill="rgb(243,194,42)" fg:x="761" fg:w="1"/><text x="59.5641%" y="383.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="59.6259%" y="357" width="0.2338%" height="15" fill="rgb(225,194,19)" fg:x="765" fg:w="3"/><text x="59.8759%" y="367.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="59.7038%" y="341" width="0.1559%" height="15" fill="rgb(224,192,14)" fg:x="766" fg:w="2"/><text x="59.9538%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7818%" y="325" width="0.0779%" height="15" fill="rgb(252,21,18)" fg:x="767" fg:w="1"/><text x="60.0318%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="59.9376%" y="341" width="0.0779%" height="15" fill="rgb(229,69,19)" fg:x="769" fg:w="1"/><text x="60.1876%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.0156%" y="325" width="0.1559%" height="15" fill="rgb(251,31,53)" fg:x="770" fg:w="2"/><text x="60.2656%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.0935%" y="309" width="0.0779%" height="15" fill="rgb(218,39,50)" fg:x="771" fg:w="1"/><text x="60.3435%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.0935%" y="293" width="0.0779%" height="15" fill="rgb(231,50,17)" fg:x="771" fg:w="1"/><text x="60.3435%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="60.2494%" y="309" width="0.0779%" height="15" fill="rgb(223,217,31)" fg:x="773" fg:w="1"/><text x="60.4994%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.23%)</title><rect x="60.4832%" y="293" width="0.2338%" height="15" fill="rgb(225,91,12)" fg:x="776" fg:w="3"/><text x="60.7332%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="60.5612%" y="277" width="0.1559%" height="15" fill="rgb(242,58,43)" fg:x="777" fg:w="2"/><text x="60.8112%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="60.5612%" y="261" width="0.1559%" height="15" fill="rgb(242,32,21)" fg:x="777" fg:w="2"/><text x="60.8112%" y="271.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="60.8730%" y="277" width="0.3118%" height="15" fill="rgb(211,127,1)" fg:x="781" fg:w="4"/><text x="61.1230%" y="287.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.0288%" y="261" width="0.1559%" height="15" fill="rgb(231,93,13)" fg:x="783" fg:w="2"/><text x="61.2788%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="61.0288%" y="245" width="0.1559%" height="15" fill="rgb(218,83,4)" fg:x="783" fg:w="2"/><text x="61.2788%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.0288%" y="229" width="0.1559%" height="15" fill="rgb(230,218,10)" fg:x="783" fg:w="2"/><text x="61.2788%" y="239.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (12 samples, 0.94%)</title><rect x="60.3274%" y="309" width="0.9353%" height="15" fill="rgb(235,127,18)" fg:x="774" fg:w="12"/><text x="60.5774%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="60.7171%" y="293" width="0.5456%" height="15" fill="rgb(213,137,46)" fg:x="779" fg:w="7"/><text x="60.9671%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.1847%" y="277" width="0.0779%" height="15" fill="rgb(235,179,24)" fg:x="785" fg:w="1"/><text x="61.4347%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (18 samples, 1.40%)</title><rect x="60.0156%" y="341" width="1.4030%" height="15" fill="rgb(247,58,49)" fg:x="770" fg:w="18"/><text x="60.2656%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.25%)</title><rect x="60.1715%" y="325" width="1.2471%" height="15" fill="rgb(242,222,5)" fg:x="772" fg:w="16"/><text x="60.4215%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2627%" y="309" width="0.1559%" height="15" fill="rgb(230,16,48)" fg:x="786" fg:w="2"/><text x="61.5127%" y="319.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (37 samples, 2.88%)</title><rect x="58.6126%" y="405" width="2.8839%" height="15" fill="rgb(241,192,16)" fg:x="752" fg:w="37"/><text x="58.8626%" y="415.50">&lt;s..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (29 samples, 2.26%)</title><rect x="59.2362%" y="389" width="2.2603%" height="15" fill="rgb(209,25,37)" fg:x="760" fg:w="29"/><text x="59.4862%" y="399.50">s..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (27 samples, 2.10%)</title><rect x="59.3920%" y="373" width="2.1044%" height="15" fill="rgb(229,215,13)" fg:x="762" fg:w="27"/><text x="59.6420%" y="383.50">&lt;..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 1.64%)</title><rect x="59.8597%" y="357" width="1.6368%" height="15" fill="rgb(213,199,8)" fg:x="768" fg:w="21"/><text x="60.1097%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.4186%" y="341" width="0.0779%" height="15" fill="rgb(226,151,19)" fg:x="788" fg:w="1"/><text x="61.6686%" y="351.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (151 samples, 11.77%)</title><rect x="50.2728%" y="501" width="11.7693%" height="15" fill="rgb(254,183,12)" fg:x="645" fg:w="151"/><text x="50.5228%" y="511.50">&lt;rpc_proto::Json ..</text></g><g><title>kernel::model::EntityPtr::to_json_value (69 samples, 5.38%)</title><rect x="56.6641%" y="485" width="5.3780%" height="15" fill="rgb(245,8,3)" fg:x="727" fg:w="69"/><text x="56.9141%" y="495.50">kernel:..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (69 samples, 5.38%)</title><rect x="56.6641%" y="469" width="5.3780%" height="15" fill="rgb(229,159,35)" fg:x="727" fg:w="69"/><text x="56.9141%" y="479.50">kernel:..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (66 samples, 5.14%)</title><rect x="56.8979%" y="453" width="5.1442%" height="15" fill="rgb(209,145,1)" fg:x="730" fg:w="66"/><text x="57.1479%" y="463.50">&lt;serde..</text></g><g><title>serde::ser::Serializer::collect_map (49 samples, 3.82%)</title><rect x="58.2229%" y="437" width="3.8192%" height="15" fill="rgb(228,183,16)" fg:x="747" fg:w="49"/><text x="58.4729%" y="447.50">serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (44 samples, 3.43%)</title><rect x="58.6126%" y="421" width="3.4295%" height="15" fill="rgb(222,68,0)" fg:x="752" fg:w="44"/><text x="58.8626%" y="431.50">ser..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (7 samples, 0.55%)</title><rect x="61.4965%" y="405" width="0.5456%" height="15" fill="rgb(209,130,50)" fg:x="789" fg:w="7"/><text x="61.7465%" y="415.50"></text></g><g><title>__libc_malloc (6 samples, 0.47%)</title><rect x="61.5744%" y="389" width="0.4677%" height="15" fill="rgb(228,176,44)" fg:x="790" fg:w="6"/><text x="61.8244%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (264 samples, 20.58%)</title><rect x="41.6991%" y="565" width="20.5768%" height="15" fill="rgb(221,164,2)" fg:x="535" fg:w="264"/><text x="41.9491%" y="575.50">core::iter::adapters::try_process</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (163 samples, 12.70%)</title><rect x="49.5713%" y="549" width="12.7046%" height="15" fill="rgb(249,199,49)" fg:x="636" fg:w="163"/><text x="49.8213%" y="559.50">alloc::vec::in_plac..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (162 samples, 12.63%)</title><rect x="49.6493%" y="533" width="12.6267%" height="15" fill="rgb(228,205,53)" fg:x="637" fg:w="162"/><text x="49.8993%" y="543.50">&lt;core::iter::adapte..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (162 samples, 12.63%)</title><rect x="49.6493%" y="517" width="12.6267%" height="15" fill="rgb(235,77,20)" fg:x="637" fg:w="162"/><text x="49.8993%" y="527.50">plugins_rpc::sessio..</text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="62.0421%" y="501" width="0.2338%" height="15" fill="rgb(227,147,34)" fg:x="796" fg:w="3"/><text x="62.2921%" y="511.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (285 samples, 22.21%)</title><rect x="40.1403%" y="581" width="22.2136%" height="15" fill="rgb(226,203,52)" fg:x="515" fg:w="285"/><text x="40.3903%" y="591.50">&lt;plugins_rpc::sessions::SessionServ..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.2759%" y="565" width="0.0779%" height="15" fill="rgb(226,186,23)" fg:x="799" fg:w="1"/><text x="62.5259%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="62.2759%" y="549" width="0.0779%" height="15" fill="rgb(236,13,30)" fg:x="799" fg:w="1"/><text x="62.5259%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.3539%" y="581" width="0.0779%" height="15" fill="rgb(228,121,22)" fg:x="800" fg:w="1"/><text x="62.6039%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="62.4318%" y="581" width="0.0779%" height="15" fill="rgb(248,222,26)" fg:x="801" fg:w="1"/><text x="62.6818%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="62.4318%" y="565" width="0.0779%" height="15" fill="rgb(251,72,25)" fg:x="801" fg:w="1"/><text x="62.6818%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.5097%" y="533" width="0.0779%" height="15" fill="rgb(223,114,24)" fg:x="802" fg:w="1"/><text x="62.7597%" y="543.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (453 samples, 35.31%)</title><rect x="27.3578%" y="645" width="35.3079%" height="15" fill="rgb(232,190,43)" fg:x="351" fg:w="453"/><text x="27.6078%" y="655.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Pe..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (329 samples, 25.64%)</title><rect x="37.0226%" y="629" width="25.6430%" height="15" fill="rgb(208,90,0)" fg:x="475" fg:w="329"/><text x="37.2726%" y="639.50">kernel::plugins::SessionPlugins::have_sur..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (328 samples, 25.57%)</title><rect x="37.1005%" y="613" width="25.5651%" height="15" fill="rgb(234,149,31)" fg:x="476" fg:w="328"/><text x="37.3505%" y="623.50">&lt;plugins_dynlib::DynamicPlugin as kernel:..</text></g><g><title>plugins_rpc::querying::have_surroundings (289 samples, 22.53%)</title><rect x="40.1403%" y="597" width="22.5253%" height="15" fill="rgb(235,188,36)" fg:x="515" fg:w="289"/><text x="40.3903%" y="607.50">plugins_rpc::querying::have_surround..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="62.5097%" y="581" width="0.1559%" height="15" fill="rgb(219,59,51)" fg:x="802" fg:w="2"/><text x="62.7597%" y="591.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="62.5097%" y="565" width="0.1559%" height="15" fill="rgb(236,101,40)" fg:x="802" fg:w="2"/><text x="62.7597%" y="575.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="62.5097%" y="549" width="0.1559%" height="15" fill="rgb(235,33,7)" fg:x="802" fg:w="2"/><text x="62.7597%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="62.5877%" y="533" width="0.0779%" height="15" fill="rgb(213,169,26)" fg:x="803" fg:w="1"/><text x="62.8377%" y="543.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="62.6656%" y="597" width="0.0779%" height="15" fill="rgb(218,99,34)" fg:x="804" fg:w="1"/><text x="62.9156%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.7436%" y="533" width="0.0779%" height="15" fill="rgb(210,57,24)" fg:x="805" fg:w="1"/><text x="62.9936%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8215%" y="501" width="0.0779%" height="15" fill="rgb(231,181,54)" fg:x="806" fg:w="1"/><text x="63.0715%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8215%" y="485" width="0.0779%" height="15" fill="rgb(251,188,48)" fg:x="806" fg:w="1"/><text x="63.0715%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8215%" y="469" width="0.0779%" height="15" fill="rgb(243,12,45)" fg:x="806" fg:w="1"/><text x="63.0715%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8215%" y="453" width="0.0779%" height="15" fill="rgb(250,197,9)" fg:x="806" fg:w="1"/><text x="63.0715%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8215%" y="437" width="0.0779%" height="15" fill="rgb(235,149,35)" fg:x="806" fg:w="1"/><text x="63.0715%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.8215%" y="421" width="0.0779%" height="15" fill="rgb(219,27,19)" fg:x="806" fg:w="1"/><text x="63.0715%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.8215%" y="405" width="0.0779%" height="15" fill="rgb(244,78,31)" fg:x="806" fg:w="1"/><text x="63.0715%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.23%)</title><rect x="62.7436%" y="581" width="0.2338%" height="15" fill="rgb(241,13,4)" fg:x="805" fg:w="3"/><text x="62.9936%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.23%)</title><rect x="62.7436%" y="565" width="0.2338%" height="15" fill="rgb(212,194,26)" fg:x="805" fg:w="3"/><text x="62.9936%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="62.7436%" y="549" width="0.2338%" height="15" fill="rgb(236,80,11)" fg:x="805" fg:w="3"/><text x="62.9936%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="62.8215%" y="533" width="0.1559%" height="15" fill="rgb(206,1,24)" fg:x="806" fg:w="2"/><text x="63.0715%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="62.8215%" y="517" width="0.1559%" height="15" fill="rgb(238,215,50)" fg:x="806" fg:w="2"/><text x="63.0715%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.8995%" y="501" width="0.0779%" height="15" fill="rgb(254,126,32)" fg:x="807" fg:w="1"/><text x="63.1495%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.8995%" y="485" width="0.0779%" height="15" fill="rgb(206,111,53)" fg:x="807" fg:w="1"/><text x="63.1495%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="62.9774%" y="565" width="0.0779%" height="15" fill="rgb(218,72,44)" fg:x="808" fg:w="1"/><text x="63.2274%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="62.9774%" y="581" width="0.1559%" height="15" fill="rgb(238,25,3)" fg:x="808" fg:w="2"/><text x="63.2274%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="63.0553%" y="565" width="0.0779%" height="15" fill="rgb(250,191,7)" fg:x="809" fg:w="1"/><text x="63.3053%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="63.0553%" y="549" width="0.0779%" height="15" fill="rgb(238,56,30)" fg:x="809" fg:w="1"/><text x="63.3053%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.0553%" y="533" width="0.0779%" height="15" fill="rgb(210,27,45)" fg:x="809" fg:w="1"/><text x="63.3053%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.0553%" y="517" width="0.0779%" height="15" fill="rgb(207,10,50)" fg:x="809" fg:w="1"/><text x="63.3053%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.0553%" y="501" width="0.0779%" height="15" fill="rgb(249,30,23)" fg:x="809" fg:w="1"/><text x="63.3053%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.0553%" y="485" width="0.0779%" height="15" fill="rgb(250,80,12)" fg:x="809" fg:w="1"/><text x="63.3053%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.2112%" y="389" width="0.0779%" height="15" fill="rgb(210,221,37)" fg:x="811" fg:w="1"/><text x="63.4612%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.2112%" y="373" width="0.0779%" height="15" fill="rgb(205,96,24)" fg:x="811" fg:w="1"/><text x="63.4612%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="63.2112%" y="357" width="0.0779%" height="15" fill="rgb(247,104,22)" fg:x="811" fg:w="1"/><text x="63.4612%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="63.2112%" y="341" width="0.0779%" height="15" fill="rgb(222,61,53)" fg:x="811" fg:w="1"/><text x="63.4612%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.2112%" y="453" width="0.1559%" height="15" fill="rgb(241,11,53)" fg:x="811" fg:w="2"/><text x="63.4612%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.2112%" y="437" width="0.1559%" height="15" fill="rgb(230,111,47)" fg:x="811" fg:w="2"/><text x="63.4612%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="63.2112%" y="421" width="0.1559%" height="15" fill="rgb(218,187,29)" fg:x="811" fg:w="2"/><text x="63.4612%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.2112%" y="405" width="0.1559%" height="15" fill="rgb(210,121,46)" fg:x="811" fg:w="2"/><text x="63.4612%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.2892%" y="389" width="0.0779%" height="15" fill="rgb(250,43,19)" fg:x="812" fg:w="1"/><text x="63.5392%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.3671%" y="453" width="0.0779%" height="15" fill="rgb(238,61,12)" fg:x="813" fg:w="1"/><text x="63.6171%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.3671%" y="437" width="0.0779%" height="15" fill="rgb(251,198,9)" fg:x="813" fg:w="1"/><text x="63.6171%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.3671%" y="421" width="0.0779%" height="15" fill="rgb(214,192,38)" fg:x="813" fg:w="1"/><text x="63.6171%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="63.3671%" y="405" width="0.0779%" height="15" fill="rgb(214,73,19)" fg:x="813" fg:w="1"/><text x="63.6171%" y="415.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (5 samples, 0.39%)</title><rect x="63.1333%" y="501" width="0.3897%" height="15" fill="rgb(249,222,49)" fg:x="810" fg:w="5"/><text x="63.3833%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="63.1333%" y="485" width="0.3897%" height="15" fill="rgb(231,181,54)" fg:x="810" fg:w="5"/><text x="63.3833%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (5 samples, 0.39%)</title><rect x="63.1333%" y="469" width="0.3897%" height="15" fill="rgb(240,1,13)" fg:x="810" fg:w="5"/><text x="63.3833%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.4451%" y="453" width="0.0779%" height="15" fill="rgb(225,21,16)" fg:x="814" fg:w="1"/><text x="63.6951%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.4451%" y="437" width="0.0779%" height="15" fill="rgb(246,176,50)" fg:x="814" fg:w="1"/><text x="63.6951%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="63.4451%" y="421" width="0.0779%" height="15" fill="rgb(208,96,50)" fg:x="814" fg:w="1"/><text x="63.6951%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.4451%" y="405" width="0.0779%" height="15" fill="rgb(240,219,19)" fg:x="814" fg:w="1"/><text x="63.6951%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="63.4451%" y="389" width="0.0779%" height="15" fill="rgb(234,73,5)" fg:x="814" fg:w="1"/><text x="63.6951%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.4451%" y="373" width="0.0779%" height="15" fill="rgb(225,52,53)" fg:x="814" fg:w="1"/><text x="63.6951%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="63.4451%" y="357" width="0.0779%" height="15" fill="rgb(250,12,14)" fg:x="814" fg:w="1"/><text x="63.6951%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.55%)</title><rect x="63.1333%" y="565" width="0.5456%" height="15" fill="rgb(242,185,54)" fg:x="810" fg:w="7"/><text x="63.3833%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.55%)</title><rect x="63.1333%" y="549" width="0.5456%" height="15" fill="rgb(211,206,31)" fg:x="810" fg:w="7"/><text x="63.3833%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="63.1333%" y="533" width="0.5456%" height="15" fill="rgb(252,10,33)" fg:x="810" fg:w="7"/><text x="63.3833%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="63.1333%" y="517" width="0.5456%" height="15" fill="rgb(216,26,7)" fg:x="810" fg:w="7"/><text x="63.3833%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.5230%" y="501" width="0.1559%" height="15" fill="rgb(228,112,40)" fg:x="815" fg:w="2"/><text x="63.7730%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.5230%" y="485" width="0.1559%" height="15" fill="rgb(212,21,16)" fg:x="815" fg:w="2"/><text x="63.7730%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.6009%" y="469" width="0.0779%" height="15" fill="rgb(249,3,29)" fg:x="816" fg:w="1"/><text x="63.8509%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="63.6789%" y="517" width="0.0779%" height="15" fill="rgb(221,42,51)" fg:x="817" fg:w="1"/><text x="63.9289%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="63.6789%" y="501" width="0.0779%" height="15" fill="rgb(225,90,21)" fg:x="817" fg:w="1"/><text x="63.9289%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7568%" y="517" width="0.0779%" height="15" fill="rgb(242,131,5)" fg:x="818" fg:w="1"/><text x="64.0068%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7568%" y="501" width="0.0779%" height="15" fill="rgb(220,187,28)" fg:x="818" fg:w="1"/><text x="64.0068%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.7568%" y="485" width="0.0779%" height="15" fill="rgb(210,75,48)" fg:x="818" fg:w="1"/><text x="64.0068%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (19 samples, 1.48%)</title><rect x="62.6656%" y="613" width="1.4809%" height="15" fill="rgb(211,91,40)" fg:x="804" fg:w="19"/><text x="62.9156%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (18 samples, 1.40%)</title><rect x="62.7436%" y="597" width="1.4030%" height="15" fill="rgb(205,43,18)" fg:x="805" fg:w="18"/><text x="62.9936%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (13 samples, 1.01%)</title><rect x="63.1333%" y="581" width="1.0133%" height="15" fill="rgb(207,123,11)" fg:x="810" fg:w="13"/><text x="63.3833%" y="591.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.47%)</title><rect x="63.6789%" y="565" width="0.4677%" height="15" fill="rgb(235,89,39)" fg:x="817" fg:w="6"/><text x="63.9289%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.47%)</title><rect x="63.6789%" y="549" width="0.4677%" height="15" fill="rgb(245,217,27)" fg:x="817" fg:w="6"/><text x="63.9289%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="63.6789%" y="533" width="0.4677%" height="15" fill="rgb(216,55,17)" fg:x="817" fg:w="6"/><text x="63.9289%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.31%)</title><rect x="63.8348%" y="517" width="0.3118%" height="15" fill="rgb(252,116,44)" fg:x="819" fg:w="4"/><text x="64.0848%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="63.8348%" y="501" width="0.3118%" height="15" fill="rgb(229,153,4)" fg:x="819" fg:w="4"/><text x="64.0848%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="63.9127%" y="485" width="0.2338%" height="15" fill="rgb(222,24,35)" fg:x="820" fg:w="3"/><text x="64.1627%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="63.9127%" y="469" width="0.2338%" height="15" fill="rgb(214,26,20)" fg:x="820" fg:w="3"/><text x="64.1627%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="63.9127%" y="453" width="0.2338%" height="15" fill="rgb(215,14,45)" fg:x="820" fg:w="3"/><text x="64.1627%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="63.9127%" y="437" width="0.2338%" height="15" fill="rgb(217,212,50)" fg:x="820" fg:w="3"/><text x="64.1627%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="63.9127%" y="421" width="0.2338%" height="15" fill="rgb(230,172,52)" fg:x="820" fg:w="3"/><text x="64.1627%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.9906%" y="405" width="0.1559%" height="15" fill="rgb(210,48,36)" fg:x="821" fg:w="2"/><text x="64.2406%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.9906%" y="389" width="0.1559%" height="15" fill="rgb(216,213,32)" fg:x="821" fg:w="2"/><text x="64.2406%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="63.9906%" y="373" width="0.1559%" height="15" fill="rgb(237,202,41)" fg:x="821" fg:w="2"/><text x="64.2406%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.9906%" y="357" width="0.1559%" height="15" fill="rgb(209,14,29)" fg:x="821" fg:w="2"/><text x="64.2406%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="64.0686%" y="341" width="0.0779%" height="15" fill="rgb(219,29,3)" fg:x="822" fg:w="1"/><text x="64.3186%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="64.0686%" y="325" width="0.0779%" height="15" fill="rgb(229,13,49)" fg:x="822" fg:w="1"/><text x="64.3186%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (20 samples, 1.56%)</title><rect x="62.6656%" y="629" width="1.5588%" height="15" fill="rgb(210,206,2)" fg:x="804" fg:w="20"/><text x="62.9156%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="64.1465%" y="613" width="0.0779%" height="15" fill="rgb(216,154,46)" fg:x="823" fg:w="1"/><text x="64.3965%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.4583%" y="533" width="0.0779%" height="15" fill="rgb(211,170,52)" fg:x="827" fg:w="1"/><text x="64.7083%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.4583%" y="517" width="0.0779%" height="15" fill="rgb(233,109,47)" fg:x="827" fg:w="1"/><text x="64.7083%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.4583%" y="565" width="0.1559%" height="15" fill="rgb(208,212,30)" fg:x="827" fg:w="2"/><text x="64.7083%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="64.4583%" y="549" width="0.1559%" height="15" fill="rgb(215,190,19)" fg:x="827" fg:w="2"/><text x="64.7083%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5362%" y="533" width="0.0779%" height="15" fill="rgb(207,164,53)" fg:x="828" fg:w="1"/><text x="64.7862%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.5362%" y="517" width="0.0779%" height="15" fill="rgb(213,87,49)" fg:x="828" fg:w="1"/><text x="64.7862%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.5362%" y="501" width="0.0779%" height="15" fill="rgb(241,216,24)" fg:x="828" fg:w="1"/><text x="64.7862%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.5362%" y="485" width="0.0779%" height="15" fill="rgb(241,123,45)" fg:x="828" fg:w="1"/><text x="64.7862%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.5362%" y="469" width="0.0779%" height="15" fill="rgb(220,36,15)" fg:x="828" fg:w="1"/><text x="64.7862%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.5362%" y="453" width="0.0779%" height="15" fill="rgb(215,202,9)" fg:x="828" fg:w="1"/><text x="64.7862%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.5362%" y="437" width="0.0779%" height="15" fill="rgb(252,71,26)" fg:x="828" fg:w="1"/><text x="64.7862%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.6921%" y="533" width="0.0779%" height="15" fill="rgb(243,195,19)" fg:x="830" fg:w="1"/><text x="64.9421%" y="543.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.23%)</title><rect x="64.6142%" y="549" width="0.2338%" height="15" fill="rgb(207,167,27)" fg:x="829" fg:w="3"/><text x="64.8642%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7701%" y="533" width="0.0779%" height="15" fill="rgb(250,146,54)" fg:x="831" fg:w="1"/><text x="65.0201%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7701%" y="517" width="0.0779%" height="15" fill="rgb(245,79,9)" fg:x="831" fg:w="1"/><text x="65.0201%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.8480%" y="549" width="0.0779%" height="15" fill="rgb(234,197,22)" fg:x="832" fg:w="1"/><text x="65.0980%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (10 samples, 0.78%)</title><rect x="64.2245%" y="629" width="0.7794%" height="15" fill="rgb(221,52,48)" fg:x="824" fg:w="10"/><text x="64.4745%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (9 samples, 0.70%)</title><rect x="64.3024%" y="613" width="0.7015%" height="15" fill="rgb(235,80,0)" fg:x="825" fg:w="9"/><text x="64.5524%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.62%)</title><rect x="64.3804%" y="597" width="0.6235%" height="15" fill="rgb(221,117,53)" fg:x="826" fg:w="8"/><text x="64.6304%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (8 samples, 0.62%)</title><rect x="64.3804%" y="581" width="0.6235%" height="15" fill="rgb(239,48,47)" fg:x="826" fg:w="8"/><text x="64.6304%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="64.6142%" y="565" width="0.3897%" height="15" fill="rgb(227,191,52)" fg:x="829" fg:w="5"/><text x="64.8642%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.9260%" y="549" width="0.0779%" height="15" fill="rgb(241,118,1)" fg:x="833" fg:w="1"/><text x="65.1760%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.9260%" y="533" width="0.0779%" height="15" fill="rgb(240,85,3)" fg:x="833" fg:w="1"/><text x="65.1760%" y="543.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (484 samples, 37.72%)</title><rect x="27.3578%" y="661" width="37.7241%" height="15" fill="rgb(237,68,37)" fg:x="351" fg:w="484"/><text x="27.6078%" y="671.50">&lt;engine::perform::StandardPerformer as kernel::scopes::Perfor..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (31 samples, 2.42%)</title><rect x="62.6656%" y="645" width="2.4162%" height="15" fill="rgb(212,9,20)" fg:x="804" fg:w="31"/><text x="62.9156%" y="655.50">en..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="65.0039%" y="629" width="0.0779%" height="15" fill="rgb(218,84,17)" fg:x="834" fg:w="1"/><text x="65.2539%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="65.0039%" y="613" width="0.0779%" height="15" fill="rgb(235,147,20)" fg:x="834" fg:w="1"/><text x="65.2539%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="65.0039%" y="597" width="0.0779%" height="15" fill="rgb(208,224,1)" fg:x="834" fg:w="1"/><text x="65.2539%" y="607.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="65.0039%" y="581" width="0.0779%" height="15" fill="rgb(232,97,50)" fg:x="834" fg:w="1"/><text x="65.2539%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="565" width="0.0779%" height="15" fill="rgb(238,15,45)" fg:x="834" fg:w="1"/><text x="65.2539%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0039%" y="549" width="0.0779%" height="15" fill="rgb(231,46,18)" fg:x="834" fg:w="1"/><text x="65.2539%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="533" width="0.0779%" height="15" fill="rgb(254,169,10)" fg:x="834" fg:w="1"/><text x="65.2539%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="517" width="0.0779%" height="15" fill="rgb(243,169,30)" fg:x="834" fg:w="1"/><text x="65.2539%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="501" width="0.0779%" height="15" fill="rgb(236,90,49)" fg:x="834" fg:w="1"/><text x="65.2539%" y="511.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0039%" y="485" width="0.0779%" height="15" fill="rgb(218,80,15)" fg:x="834" fg:w="1"/><text x="65.2539%" y="495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="469" width="0.0779%" height="15" fill="rgb(222,115,37)" fg:x="834" fg:w="1"/><text x="65.2539%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="453" width="0.0779%" height="15" fill="rgb(227,0,6)" fg:x="834" fg:w="1"/><text x="65.2539%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="437" width="0.0779%" height="15" fill="rgb(217,189,13)" fg:x="834" fg:w="1"/><text x="65.2539%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.0039%" y="421" width="0.0779%" height="15" fill="rgb(220,74,19)" fg:x="834" fg:w="1"/><text x="65.2539%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="405" width="0.0779%" height="15" fill="rgb(224,81,18)" fg:x="834" fg:w="1"/><text x="65.2539%" y="415.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="65.0039%" y="389" width="0.0779%" height="15" fill="rgb(245,178,48)" fg:x="834" fg:w="1"/><text x="65.2539%" y="399.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="65.0039%" y="373" width="0.0779%" height="15" fill="rgb(207,78,24)" fg:x="834" fg:w="1"/><text x="65.2539%" y="383.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.0039%" y="357" width="0.0779%" height="15" fill="rgb(223,222,30)" fg:x="834" fg:w="1"/><text x="65.2539%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="65.0039%" y="341" width="0.0779%" height="15" fill="rgb(234,101,12)" fg:x="834" fg:w="1"/><text x="65.2539%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="65.0039%" y="325" width="0.0779%" height="15" fill="rgb(209,80,46)" fg:x="834" fg:w="1"/><text x="65.2539%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="65.0039%" y="309" width="0.0779%" height="15" fill="rgb(228,79,14)" fg:x="834" fg:w="1"/><text x="65.2539%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="65.0039%" y="293" width="0.0779%" height="15" fill="rgb(220,219,34)" fg:x="834" fg:w="1"/><text x="65.2539%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="65.0039%" y="277" width="0.0779%" height="15" fill="rgb(207,80,21)" fg:x="834" fg:w="1"/><text x="65.2539%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.0039%" y="261" width="0.0779%" height="15" fill="rgb(210,154,44)" fg:x="834" fg:w="1"/><text x="65.2539%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="65.0039%" y="245" width="0.0779%" height="15" fill="rgb(246,44,39)" fg:x="834" fg:w="1"/><text x="65.2539%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="65.0039%" y="229" width="0.0779%" height="15" fill="rgb(252,175,13)" fg:x="834" fg:w="1"/><text x="65.2539%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="65.0039%" y="213" width="0.0779%" height="15" fill="rgb(211,50,39)" fg:x="834" fg:w="1"/><text x="65.2539%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="65.0039%" y="197" width="0.0779%" height="15" fill="rgb(231,204,27)" fg:x="834" fg:w="1"/><text x="65.2539%" y="207.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="65.0039%" y="181" width="0.0779%" height="15" fill="rgb(253,26,34)" fg:x="834" fg:w="1"/><text x="65.2539%" y="191.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (486 samples, 37.88%)</title><rect x="27.2798%" y="677" width="37.8800%" height="15" fill="rgb(207,139,38)" fg:x="350" fg:w="486"/><text x="27.5298%" y="687.50">&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Ev..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="65.0818%" y="661" width="0.0779%" height="15" fill="rgb(248,54,27)" fg:x="835" fg:w="1"/><text x="65.3318%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="65.0818%" y="645" width="0.0779%" height="15" fill="rgb(234,25,33)" fg:x="835" fg:w="1"/><text x="65.3318%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="65.0818%" y="629" width="0.0779%" height="15" fill="rgb(249,107,47)" fg:x="835" fg:w="1"/><text x="65.3318%" y="639.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::Evaluator&gt;::evaluate (3 samples, 0.23%)</title><rect x="65.1598%" y="677" width="0.2338%" height="15" fill="rgb(230,190,31)" fg:x="836" fg:w="3"/><text x="65.4098%" y="687.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (3 samples, 0.23%)</title><rect x="65.1598%" y="661" width="0.2338%" height="15" fill="rgb(238,173,45)" fg:x="836" fg:w="3"/><text x="65.4098%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3 samples, 0.23%)</title><rect x="65.1598%" y="645" width="0.2338%" height="15" fill="rgb(222,16,50)" fg:x="836" fg:w="3"/><text x="65.4098%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2 samples, 0.16%)</title><rect x="65.2377%" y="629" width="0.1559%" height="15" fill="rgb(251,204,47)" fg:x="837" fg:w="2"/><text x="65.4877%" y="639.50"></text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="65.3936%" y="677" width="0.0779%" height="15" fill="rgb(225,12,3)" fg:x="839" fg:w="1"/><text x="65.6436%" y="687.50"></text></g><g><title>&lt;plugins_core::moving::parser::GoActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="65.3936%" y="661" width="0.0779%" height="15" fill="rgb(214,208,22)" fg:x="839" fg:w="1"/><text x="65.6436%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="65.3936%" y="645" width="0.0779%" height="15" fill="rgb(240,57,32)" fg:x="839" fg:w="1"/><text x="65.6436%" y="655.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (494 samples, 38.50%)</title><rect x="27.0460%" y="741" width="38.5035%" height="15" fill="rgb(243,113,48)" fg:x="347" fg:w="494"/><text x="27.2960%" y="751.50">&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;..</text></g><g><title>core::iter::adapters::try_process (494 samples, 38.50%)</title><rect x="27.0460%" y="725" width="38.5035%" height="15" fill="rgb(225,135,30)" fg:x="347" fg:w="494"/><text x="27.2960%" y="735.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (494 samples, 38.50%)</title><rect x="27.0460%" y="709" width="38.5035%" height="15" fill="rgb(222,3,53)" fg:x="347" fg:w="494"/><text x="27.2960%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (493 samples, 38.43%)</title><rect x="27.1239%" y="693" width="38.4256%" height="15" fill="rgb(243,142,2)" fg:x="348" fg:w="493"/><text x="27.3739%" y="703.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::ite..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="65.4716%" y="677" width="0.0779%" height="15" fill="rgb(233,67,14)" fg:x="840" fg:w="1"/><text x="65.7216%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.5495%" y="629" width="0.0779%" height="15" fill="rgb(245,125,36)" fg:x="841" fg:w="1"/><text x="65.7995%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.5495%" y="613" width="0.0779%" height="15" fill="rgb(225,199,6)" fg:x="841" fg:w="1"/><text x="65.7995%" y="623.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="65.5495%" y="597" width="0.0779%" height="15" fill="rgb(244,71,6)" fg:x="841" fg:w="1"/><text x="65.7995%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="65.5495%" y="581" width="0.0779%" height="15" fill="rgb(225,62,9)" fg:x="841" fg:w="1"/><text x="65.7995%" y="591.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="65.5495%" y="565" width="0.0779%" height="15" fill="rgb(246,139,53)" fg:x="841" fg:w="1"/><text x="65.7995%" y="575.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="65.5495%" y="549" width="0.0779%" height="15" fill="rgb(243,161,46)" fg:x="841" fg:w="1"/><text x="65.7995%" y="559.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="65.5495%" y="533" width="0.0779%" height="15" fill="rgb(236,153,7)" fg:x="841" fg:w="1"/><text x="65.7995%" y="543.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="65.5495%" y="517" width="0.0779%" height="15" fill="rgb(248,42,35)" fg:x="841" fg:w="1"/><text x="65.7995%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="65.5495%" y="501" width="0.0779%" height="15" fill="rgb(250,17,31)" fg:x="841" fg:w="1"/><text x="65.7995%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="65.5495%" y="485" width="0.0779%" height="15" fill="rgb(248,138,14)" fg:x="841" fg:w="1"/><text x="65.7995%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="65.5495%" y="469" width="0.0779%" height="15" fill="rgb(228,161,3)" fg:x="841" fg:w="1"/><text x="65.7995%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="65.5495%" y="453" width="0.0779%" height="15" fill="rgb(248,116,17)" fg:x="841" fg:w="1"/><text x="65.7995%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="65.5495%" y="437" width="0.0779%" height="15" fill="rgb(207,78,24)" fg:x="841" fg:w="1"/><text x="65.7995%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="65.5495%" y="421" width="0.0779%" height="15" fill="rgb(234,99,48)" fg:x="841" fg:w="1"/><text x="65.7995%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="65.5495%" y="405" width="0.0779%" height="15" fill="rgb(242,22,26)" fg:x="841" fg:w="1"/><text x="65.7995%" y="415.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="65.5495%" y="741" width="0.1559%" height="15" fill="rgb(227,78,32)" fg:x="841" fg:w="2"/><text x="65.7995%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="65.5495%" y="725" width="0.1559%" height="15" fill="rgb(226,189,43)" fg:x="841" fg:w="2"/><text x="65.7995%" y="735.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="65.5495%" y="709" width="0.1559%" height="15" fill="rgb(227,218,35)" fg:x="841" fg:w="2"/><text x="65.7995%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="65.5495%" y="693" width="0.1559%" height="15" fill="rgb(206,111,40)" fg:x="841" fg:w="2"/><text x="65.7995%" y="703.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="65.5495%" y="677" width="0.1559%" height="15" fill="rgb(208,217,22)" fg:x="841" fg:w="2"/><text x="65.7995%" y="687.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="65.5495%" y="661" width="0.1559%" height="15" fill="rgb(248,20,20)" fg:x="841" fg:w="2"/><text x="65.7995%" y="671.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (2 samples, 0.16%)</title><rect x="65.5495%" y="645" width="0.1559%" height="15" fill="rgb(239,155,16)" fg:x="841" fg:w="2"/><text x="65.7995%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="65.6274%" y="629" width="0.0779%" height="15" fill="rgb(238,171,46)" fg:x="842" fg:w="1"/><text x="65.8774%" y="639.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (499 samples, 38.89%)</title><rect x="26.8901%" y="773" width="38.8932%" height="15" fill="rgb(248,11,36)" fg:x="345" fg:w="499"/><text x="27.1401%" y="783.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (499 samples, 38.89%)</title><rect x="26.8901%" y="757" width="38.8932%" height="15" fill="rgb(220,148,37)" fg:x="345" fg:w="499"/><text x="27.1401%" y="767.50">engine::perform::StandardPerformer::evaluate_and_perform</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="65.7054%" y="741" width="0.0779%" height="15" fill="rgb(218,144,42)" fg:x="843" fg:w="1"/><text x="65.9554%" y="751.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="65.7054%" y="725" width="0.0779%" height="15" fill="rgb(245,20,20)" fg:x="843" fg:w="1"/><text x="65.9554%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="65.7054%" y="709" width="0.0779%" height="15" fill="rgb(240,111,48)" fg:x="843" fg:w="1"/><text x="65.9554%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="65.7054%" y="693" width="0.0779%" height="15" fill="rgb(237,225,32)" fg:x="843" fg:w="1"/><text x="65.9554%" y="703.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="65.7054%" y="677" width="0.0779%" height="15" fill="rgb(228,161,46)" fg:x="843" fg:w="1"/><text x="65.9554%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (845 samples, 65.86%)</title><rect x="0.0000%" y="821" width="65.8613%" height="15" fill="rgb(235,196,21)" fg:x="0" fg:w="845"/><text x="0.2500%" y="831.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (845 samples, 65.86%)</title><rect x="0.0000%" y="805" width="65.8613%" height="15" fill="rgb(250,133,21)" fg:x="0" fg:w="845"/><text x="0.2500%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (845 samples, 65.86%)</title><rect x="0.0000%" y="789" width="65.8613%" height="15" fill="rgb(236,94,32)" fg:x="0" fg:w="845"/><text x="0.2500%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="65.7833%" y="773" width="0.0779%" height="15" fill="rgb(219,176,25)" fg:x="844" fg:w="1"/><text x="66.0333%" y="783.50"></text></g><g><title>engine::domain::Domain::new (1 samples, 0.08%)</title><rect x="65.7833%" y="757" width="0.0779%" height="15" fill="rgb(211,17,43)" fg:x="844" fg:w="1"/><text x="66.0333%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.16%)</title><rect x="65.8613%" y="757" width="0.1559%" height="15" fill="rgb(220,75,23)" fg:x="845" fg:w="2"/><text x="66.1113%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="65.8613%" y="741" width="0.1559%" height="15" fill="rgb(215,122,32)" fg:x="845" fg:w="2"/><text x="66.1113%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="65.9392%" y="725" width="0.0779%" height="15" fill="rgb(218,57,38)" fg:x="846" fg:w="1"/><text x="66.1892%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.0171%" y="725" width="0.0779%" height="15" fill="rgb(233,208,46)" fg:x="847" fg:w="1"/><text x="66.2671%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="677" width="0.0779%" height="15" fill="rgb(221,35,50)" fg:x="849" fg:w="1"/><text x="66.4230%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;kernel::model::entity::ScopeValue&gt;&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="661" width="0.0779%" height="15" fill="rgb(229,213,29)" fg:x="849" fg:w="1"/><text x="66.4230%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="645" width="0.0779%" height="15" fill="rgb(229,110,40)" fg:x="849" fg:w="1"/><text x="66.4230%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="629" width="0.0779%" height="15" fill="rgb(247,206,19)" fg:x="849" fg:w="1"/><text x="66.4230%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="613" width="0.0779%" height="15" fill="rgb(216,229,45)" fg:x="849" fg:w="1"/><text x="66.4230%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="66.1730%" y="597" width="0.0779%" height="15" fill="rgb(205,184,31)" fg:x="849" fg:w="1"/><text x="66.4230%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.1730%" y="581" width="0.0779%" height="15" fill="rgb(213,91,10)" fg:x="849" fg:w="1"/><text x="66.4230%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.1730%" y="565" width="0.0779%" height="15" fill="rgb(250,49,8)" fg:x="849" fg:w="1"/><text x="66.4230%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.2510%" y="629" width="0.0779%" height="15" fill="rgb(207,26,8)" fg:x="850" fg:w="1"/><text x="66.5010%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2510%" y="613" width="0.0779%" height="15" fill="rgb(224,2,13)" fg:x="850" fg:w="1"/><text x="66.5010%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="66.0951%" y="709" width="0.3897%" height="15" fill="rgb(219,108,27)" fg:x="848" fg:w="5"/><text x="66.3451%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.39%)</title><rect x="66.0951%" y="693" width="0.3897%" height="15" fill="rgb(240,89,32)" fg:x="848" fg:w="5"/><text x="66.3451%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="66.2510%" y="677" width="0.2338%" height="15" fill="rgb(248,205,3)" fg:x="850" fg:w="3"/><text x="66.5010%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="66.2510%" y="661" width="0.2338%" height="15" fill="rgb(236,197,47)" fg:x="850" fg:w="3"/><text x="66.5010%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="66.2510%" y="645" width="0.2338%" height="15" fill="rgb(244,185,52)" fg:x="850" fg:w="3"/><text x="66.5010%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.3289%" y="629" width="0.1559%" height="15" fill="rgb(210,206,23)" fg:x="851" fg:w="2"/><text x="66.5789%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="66.3289%" y="613" width="0.1559%" height="15" fill="rgb(251,177,30)" fg:x="851" fg:w="2"/><text x="66.5789%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="66.4069%" y="597" width="0.0779%" height="15" fill="rgb(243,27,45)" fg:x="852" fg:w="1"/><text x="66.6569%" y="607.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.70%)</title><rect x="65.8613%" y="773" width="0.7015%" height="15" fill="rgb(248,141,51)" fg:x="845" fg:w="9"/><text x="66.1113%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::internal::Entities&gt;&gt; (7 samples, 0.55%)</title><rect x="66.0171%" y="757" width="0.5456%" height="15" fill="rgb(235,102,15)" fg:x="847" fg:w="7"/><text x="66.2671%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.55%)</title><rect x="66.0171%" y="741" width="0.5456%" height="15" fill="rgb(214,164,53)" fg:x="847" fg:w="7"/><text x="66.2671%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (6 samples, 0.47%)</title><rect x="66.0951%" y="725" width="0.4677%" height="15" fill="rgb(228,18,51)" fg:x="848" fg:w="6"/><text x="66.3451%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.4848%" y="709" width="0.0779%" height="15" fill="rgb(205,211,11)" fg:x="853" fg:w="1"/><text x="66.7348%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorageFactory as engine::storage::EntityStorageFactory&gt;::create_storage (1 samples, 0.08%)</title><rect x="66.5627%" y="757" width="0.0779%" height="15" fill="rgb(208,63,6)" fg:x="854" fg:w="1"/><text x="66.8127%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.5627%" y="741" width="0.0779%" height="15" fill="rgb(245,76,14)" fg:x="854" fg:w="1"/><text x="66.8127%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="66.7186%" y="693" width="0.1559%" height="15" fill="rgb(234,176,34)" fg:x="856" fg:w="2"/><text x="66.9686%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="66.7186%" y="677" width="0.1559%" height="15" fill="rgb(243,156,42)" fg:x="856" fg:w="2"/><text x="66.9686%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="66.7186%" y="661" width="0.1559%" height="15" fill="rgb(237,182,10)" fg:x="856" fg:w="2"/><text x="66.9686%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.7186%" y="645" width="0.1559%" height="15" fill="rgb(244,117,0)" fg:x="856" fg:w="2"/><text x="66.9686%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7186%" y="629" width="0.1559%" height="15" fill="rgb(239,91,50)" fg:x="856" fg:w="2"/><text x="66.9686%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="66.7186%" y="613" width="0.1559%" height="15" fill="rgb(206,38,9)" fg:x="856" fg:w="2"/><text x="66.9686%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7186%" y="597" width="0.1559%" height="15" fill="rgb(205,25,10)" fg:x="856" fg:w="2"/><text x="66.9686%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.7186%" y="581" width="0.1559%" height="15" fill="rgb(206,224,7)" fg:x="856" fg:w="2"/><text x="66.9686%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.7186%" y="565" width="0.1559%" height="15" fill="rgb(227,157,10)" fg:x="856" fg:w="2"/><text x="66.9686%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="66.7966%" y="549" width="0.0779%" height="15" fill="rgb(214,157,37)" fg:x="857" fg:w="1"/><text x="67.0466%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="66.7966%" y="533" width="0.0779%" height="15" fill="rgb(209,180,35)" fg:x="857" fg:w="1"/><text x="67.0466%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.9525%" y="533" width="0.0779%" height="15" fill="rgb(216,174,49)" fg:x="859" fg:w="1"/><text x="67.2025%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.9525%" y="517" width="0.0779%" height="15" fill="rgb(205,96,20)" fg:x="859" fg:w="1"/><text x="67.2025%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.9525%" y="501" width="0.0779%" height="15" fill="rgb(214,220,39)" fg:x="859" fg:w="1"/><text x="67.2025%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.9525%" y="485" width="0.0779%" height="15" fill="rgb(245,126,30)" fg:x="859" fg:w="1"/><text x="67.2025%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="66.9525%" y="469" width="0.0779%" height="15" fill="rgb(215,88,33)" fg:x="859" fg:w="1"/><text x="67.2025%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="66.9525%" y="453" width="0.0779%" height="15" fill="rgb(210,1,49)" fg:x="859" fg:w="1"/><text x="67.2025%" y="463.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="66.9525%" y="437" width="0.0779%" height="15" fill="rgb(207,133,3)" fg:x="859" fg:w="1"/><text x="67.2025%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.23%)</title><rect x="66.8745%" y="677" width="0.2338%" height="15" fill="rgb(231,47,43)" fg:x="858" fg:w="3"/><text x="67.1245%" y="687.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.23%)</title><rect x="66.8745%" y="661" width="0.2338%" height="15" fill="rgb(245,64,1)" fg:x="858" fg:w="3"/><text x="67.1245%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="66.8745%" y="645" width="0.2338%" height="15" fill="rgb(253,145,20)" fg:x="858" fg:w="3"/><text x="67.1245%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="66.8745%" y="629" width="0.2338%" height="15" fill="rgb(211,39,18)" fg:x="858" fg:w="3"/><text x="67.1245%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.9525%" y="613" width="0.1559%" height="15" fill="rgb(223,225,18)" fg:x="859" fg:w="2"/><text x="67.2025%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="66.9525%" y="597" width="0.1559%" height="15" fill="rgb(210,202,44)" fg:x="859" fg:w="2"/><text x="67.2025%" y="607.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="66.9525%" y="581" width="0.1559%" height="15" fill="rgb(231,138,36)" fg:x="859" fg:w="2"/><text x="67.2025%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="66.9525%" y="565" width="0.1559%" height="15" fill="rgb(237,115,25)" fg:x="859" fg:w="2"/><text x="67.2025%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="66.9525%" y="549" width="0.1559%" height="15" fill="rgb(215,53,48)" fg:x="859" fg:w="2"/><text x="67.2025%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0304%" y="533" width="0.0779%" height="15" fill="rgb(243,193,24)" fg:x="860" fg:w="1"/><text x="67.2804%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.0304%" y="517" width="0.0779%" height="15" fill="rgb(210,106,28)" fg:x="860" fg:w="1"/><text x="67.2804%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0304%" y="501" width="0.0779%" height="15" fill="rgb(249,192,0)" fg:x="860" fg:w="1"/><text x="67.2804%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.55%)</title><rect x="66.6407%" y="741" width="0.5456%" height="15" fill="rgb(224,96,21)" fg:x="855" fg:w="7"/><text x="66.8907%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (7 samples, 0.55%)</title><rect x="66.6407%" y="725" width="0.5456%" height="15" fill="rgb(243,160,19)" fg:x="855" fg:w="7"/><text x="66.8907%" y="735.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.55%)</title><rect x="66.6407%" y="709" width="0.5456%" height="15" fill="rgb(219,205,50)" fg:x="855" fg:w="7"/><text x="66.8907%" y="719.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.31%)</title><rect x="66.8745%" y="693" width="0.3118%" height="15" fill="rgb(218,175,44)" fg:x="858" fg:w="4"/><text x="67.1245%" y="703.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="67.1083%" y="677" width="0.0779%" height="15" fill="rgb(251,84,47)" fg:x="861" fg:w="1"/><text x="67.3583%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1083%" y="661" width="0.0779%" height="15" fill="rgb(241,14,16)" fg:x="861" fg:w="1"/><text x="67.3583%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="67.1083%" y="645" width="0.0779%" height="15" fill="rgb(207,142,28)" fg:x="861" fg:w="1"/><text x="67.3583%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="67.1083%" y="629" width="0.0779%" height="15" fill="rgb(208,116,22)" fg:x="861" fg:w="1"/><text x="67.3583%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.1083%" y="613" width="0.0779%" height="15" fill="rgb(210,0,43)" fg:x="861" fg:w="1"/><text x="67.3583%" y="623.50"></text></g><g><title>libloading::library_filename (2 samples, 0.16%)</title><rect x="67.1863%" y="709" width="0.1559%" height="15" fill="rgb(246,33,21)" fg:x="862" fg:w="2"/><text x="67.4363%" y="719.50"></text></g><g><title>std::sys::unix::os_str::Buf::push_slice (1 samples, 0.08%)</title><rect x="67.2642%" y="693" width="0.0779%" height="15" fill="rgb(208,158,54)" fg:x="863" fg:w="1"/><text x="67.5142%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="67.2642%" y="677" width="0.0779%" height="15" fill="rgb(218,99,29)" fg:x="863" fg:w="1"/><text x="67.5142%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="67.2642%" y="661" width="0.0779%" height="15" fill="rgb(226,29,7)" fg:x="863" fg:w="1"/><text x="67.5142%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="67.2642%" y="645" width="0.0779%" height="15" fill="rgb(206,178,46)" fg:x="863" fg:w="1"/><text x="67.5142%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="67.2642%" y="629" width="0.0779%" height="15" fill="rgb(205,169,32)" fg:x="863" fg:w="1"/><text x="67.5142%" y="639.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="67.3422%" y="693" width="0.1559%" height="15" fill="rgb(217,4,13)" fg:x="864" fg:w="2"/><text x="67.5922%" y="703.50"></text></g><g><title>__asprintf (2 samples, 0.16%)</title><rect x="67.3422%" y="677" width="0.1559%" height="15" fill="rgb(210,140,37)" fg:x="864" fg:w="2"/><text x="67.5922%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.4201%" y="661" width="0.0779%" height="15" fill="rgb(229,80,10)" fg:x="865" fg:w="1"/><text x="67.6701%" y="671.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (15 samples, 1.17%)</title><rect x="66.5627%" y="773" width="1.1691%" height="15" fill="rgb(212,175,34)" fg:x="854" fg:w="15"/><text x="66.8127%" y="783.50"></text></g><g><title>engine::session::Session::new (14 samples, 1.09%)</title><rect x="66.6407%" y="757" width="1.0912%" height="15" fill="rgb(216,207,24)" fg:x="855" fg:w="14"/><text x="66.8907%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (7 samples, 0.55%)</title><rect x="67.1863%" y="741" width="0.5456%" height="15" fill="rgb(234,163,3)" fg:x="862" fg:w="7"/><text x="67.4363%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (7 samples, 0.55%)</title><rect x="67.1863%" y="725" width="0.5456%" height="15" fill="rgb(248,101,16)" fg:x="862" fg:w="7"/><text x="67.4363%" y="735.50"></text></g><g><title>libloading::os::unix::Library::open (5 samples, 0.39%)</title><rect x="67.3422%" y="709" width="0.3897%" height="15" fill="rgb(209,152,54)" fg:x="864" fg:w="5"/><text x="67.5922%" y="719.50"></text></g><g><title>dlopen (3 samples, 0.23%)</title><rect x="67.4981%" y="693" width="0.2338%" height="15" fill="rgb(229,124,51)" fg:x="866" fg:w="3"/><text x="67.7481%" y="703.50"></text></g><g><title>_dl_catch_error (3 samples, 0.23%)</title><rect x="67.4981%" y="677" width="0.2338%" height="15" fill="rgb(219,83,18)" fg:x="866" fg:w="3"/><text x="67.7481%" y="687.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="67.4981%" y="661" width="0.2338%" height="15" fill="rgb(206,29,38)" fg:x="866" fg:w="3"/><text x="67.7481%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="67.4981%" y="645" width="0.2338%" height="15" fill="rgb(245,123,23)" fg:x="866" fg:w="3"/><text x="67.7481%" y="655.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.23%)</title><rect x="67.4981%" y="629" width="0.2338%" height="15" fill="rgb(238,50,33)" fg:x="866" fg:w="3"/><text x="67.7481%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.7319%" y="709" width="0.0779%" height="15" fill="rgb(234,165,23)" fg:x="869" fg:w="1"/><text x="67.9819%" y="719.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="67.7319%" y="725" width="0.1559%" height="15" fill="rgb(211,82,31)" fg:x="869" fg:w="2"/><text x="67.9819%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="67.8098%" y="709" width="0.0779%" height="15" fill="rgb(224,166,46)" fg:x="870" fg:w="1"/><text x="68.0598%" y="719.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="67.8878%" y="693" width="0.0779%" height="15" fill="rgb(211,13,8)" fg:x="871" fg:w="1"/><text x="68.1378%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="67.8878%" y="677" width="0.0779%" height="15" fill="rgb(212,7,42)" fg:x="871" fg:w="1"/><text x="68.1378%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="67.8878%" y="661" width="0.0779%" height="15" fill="rgb(249,102,19)" fg:x="871" fg:w="1"/><text x="68.1378%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="67.8878%" y="645" width="0.0779%" height="15" fill="rgb(225,41,13)" fg:x="871" fg:w="1"/><text x="68.1378%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.8878%" y="629" width="0.0779%" height="15" fill="rgb(220,65,27)" fg:x="871" fg:w="1"/><text x="68.1378%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="67.8878%" y="613" width="0.0779%" height="15" fill="rgb(206,4,41)" fg:x="871" fg:w="1"/><text x="68.1378%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="67.8878%" y="597" width="0.0779%" height="15" fill="rgb(219,60,39)" fg:x="871" fg:w="1"/><text x="68.1378%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.8878%" y="581" width="0.0779%" height="15" fill="rgb(226,4,38)" fg:x="871" fg:w="1"/><text x="68.1378%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="67.9657%" y="661" width="0.0779%" height="15" fill="rgb(250,52,3)" fg:x="872" fg:w="1"/><text x="68.2157%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="67.9657%" y="645" width="0.0779%" height="15" fill="rgb(234,93,0)" fg:x="872" fg:w="1"/><text x="68.2157%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="67.9657%" y="629" width="0.0779%" height="15" fill="rgb(251,47,47)" fg:x="872" fg:w="1"/><text x="68.2157%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="67.9657%" y="613" width="0.0779%" height="15" fill="rgb(205,166,47)" fg:x="872" fg:w="1"/><text x="68.2157%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="67.9657%" y="677" width="0.1559%" height="15" fill="rgb(231,148,8)" fg:x="872" fg:w="2"/><text x="68.2157%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.0436%" y="661" width="0.0779%" height="15" fill="rgb(244,185,19)" fg:x="873" fg:w="1"/><text x="68.2936%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.1216%" y="661" width="0.0779%" height="15" fill="rgb(224,201,45)" fg:x="874" fg:w="1"/><text x="68.3716%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="68.3554%" y="613" width="0.1559%" height="15" fill="rgb(240,77,39)" fg:x="877" fg:w="2"/><text x="68.6054%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.4334%" y="597" width="0.0779%" height="15" fill="rgb(248,211,29)" fg:x="878" fg:w="1"/><text x="68.6834%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.4334%" y="581" width="0.0779%" height="15" fill="rgb(232,214,46)" fg:x="878" fg:w="1"/><text x="68.6834%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="68.3554%" y="645" width="0.2338%" height="15" fill="rgb(213,99,54)" fg:x="877" fg:w="3"/><text x="68.6054%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="68.3554%" y="629" width="0.2338%" height="15" fill="rgb(240,19,46)" fg:x="877" fg:w="3"/><text x="68.6054%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.5113%" y="613" width="0.0779%" height="15" fill="rgb(243,89,10)" fg:x="879" fg:w="1"/><text x="68.7613%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.5113%" y="597" width="0.0779%" height="15" fill="rgb(249,28,32)" fg:x="879" fg:w="1"/><text x="68.7613%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.5892%" y="645" width="0.0779%" height="15" fill="rgb(253,30,9)" fg:x="880" fg:w="1"/><text x="68.8392%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.5892%" y="629" width="0.0779%" height="15" fill="rgb(217,2,26)" fg:x="880" fg:w="1"/><text x="68.8392%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.5892%" y="613" width="0.0779%" height="15" fill="rgb(220,28,10)" fg:x="880" fg:w="1"/><text x="68.8392%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.5892%" y="597" width="0.0779%" height="15" fill="rgb(228,167,49)" fg:x="880" fg:w="1"/><text x="68.8392%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.6672%" y="629" width="0.0779%" height="15" fill="rgb(238,212,3)" fg:x="881" fg:w="1"/><text x="68.9172%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="68.6672%" y="645" width="0.1559%" height="15" fill="rgb(229,134,44)" fg:x="881" fg:w="2"/><text x="68.9172%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.7451%" y="629" width="0.0779%" height="15" fill="rgb(208,71,4)" fg:x="882" fg:w="1"/><text x="68.9951%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.7451%" y="613" width="0.0779%" height="15" fill="rgb(221,205,45)" fg:x="882" fg:w="1"/><text x="68.9951%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="68.7451%" y="597" width="0.0779%" height="15" fill="rgb(215,132,38)" fg:x="882" fg:w="1"/><text x="68.9951%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="68.7451%" y="581" width="0.0779%" height="15" fill="rgb(227,158,6)" fg:x="882" fg:w="1"/><text x="68.9951%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.7451%" y="565" width="0.0779%" height="15" fill="rgb(250,10,38)" fg:x="882" fg:w="1"/><text x="68.9951%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="68.1995%" y="661" width="0.7015%" height="15" fill="rgb(225,171,40)" fg:x="875" fg:w="9"/><text x="68.4495%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.8231%" y="645" width="0.0779%" height="15" fill="rgb(238,17,43)" fg:x="883" fg:w="1"/><text x="69.0731%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.8231%" y="629" width="0.0779%" height="15" fill="rgb(208,145,4)" fg:x="883" fg:w="1"/><text x="69.0731%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.8231%" y="613" width="0.0779%" height="15" fill="rgb(232,82,7)" fg:x="883" fg:w="1"/><text x="69.0731%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (13 samples, 1.01%)</title><rect x="67.9657%" y="693" width="1.0133%" height="15" fill="rgb(205,166,38)" fg:x="872" fg:w="13"/><text x="68.2157%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.86%)</title><rect x="68.1216%" y="677" width="0.8574%" height="15" fill="rgb(240,228,4)" fg:x="874" fg:w="11"/><text x="68.3716%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="68.9010%" y="661" width="0.0779%" height="15" fill="rgb(233,121,40)" fg:x="884" fg:w="1"/><text x="69.1510%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="68.9010%" y="645" width="0.0779%" height="15" fill="rgb(243,84,30)" fg:x="884" fg:w="1"/><text x="69.1510%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="68.9010%" y="629" width="0.0779%" height="15" fill="rgb(235,81,48)" fg:x="884" fg:w="1"/><text x="69.1510%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="68.9010%" y="613" width="0.0779%" height="15" fill="rgb(218,137,0)" fg:x="884" fg:w="1"/><text x="69.1510%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="68.9010%" y="597" width="0.0779%" height="15" fill="rgb(223,151,48)" fg:x="884" fg:w="1"/><text x="69.1510%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="68.9010%" y="581" width="0.0779%" height="15" fill="rgb(247,30,19)" fg:x="884" fg:w="1"/><text x="69.1510%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="69.0569%" y="613" width="0.0779%" height="15" fill="rgb(205,129,29)" fg:x="886" fg:w="1"/><text x="69.3069%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.0569%" y="597" width="0.0779%" height="15" fill="rgb(222,29,2)" fg:x="886" fg:w="1"/><text x="69.3069%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="68.9790%" y="693" width="0.2338%" height="15" fill="rgb(232,145,33)" fg:x="885" fg:w="3"/><text x="69.2290%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.23%)</title><rect x="68.9790%" y="677" width="0.2338%" height="15" fill="rgb(217,30,31)" fg:x="885" fg:w="3"/><text x="69.2290%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.0569%" y="661" width="0.1559%" height="15" fill="rgb(243,22,52)" fg:x="886" fg:w="2"/><text x="69.3069%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.0569%" y="645" width="0.1559%" height="15" fill="rgb(254,228,14)" fg:x="886" fg:w="2"/><text x="69.3069%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.0569%" y="629" width="0.1559%" height="15" fill="rgb(231,45,50)" fg:x="886" fg:w="2"/><text x="69.3069%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.1348%" y="613" width="0.0779%" height="15" fill="rgb(248,125,3)" fg:x="887" fg:w="1"/><text x="69.3848%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.1348%" y="597" width="0.0779%" height="15" fill="rgb(213,76,9)" fg:x="887" fg:w="1"/><text x="69.3848%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.3687%" y="645" width="0.0779%" height="15" fill="rgb(238,108,21)" fg:x="890" fg:w="1"/><text x="69.6187%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5246%" y="597" width="0.0779%" height="15" fill="rgb(229,214,19)" fg:x="892" fg:w="1"/><text x="69.7746%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.5246%" y="581" width="0.0779%" height="15" fill="rgb(252,201,5)" fg:x="892" fg:w="1"/><text x="69.7746%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.5246%" y="565" width="0.0779%" height="15" fill="rgb(233,165,49)" fg:x="892" fg:w="1"/><text x="69.7746%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6025%" y="533" width="0.0779%" height="15" fill="rgb(208,165,19)" fg:x="893" fg:w="1"/><text x="69.8525%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6025%" y="517" width="0.0779%" height="15" fill="rgb(216,220,31)" fg:x="893" fg:w="1"/><text x="69.8525%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6025%" y="501" width="0.0779%" height="15" fill="rgb(214,8,31)" fg:x="893" fg:w="1"/><text x="69.8525%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6804%" y="501" width="0.0779%" height="15" fill="rgb(220,32,32)" fg:x="894" fg:w="1"/><text x="69.9304%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.6804%" y="485" width="0.0779%" height="15" fill="rgb(237,172,34)" fg:x="894" fg:w="1"/><text x="69.9304%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.6804%" y="469" width="0.0779%" height="15" fill="rgb(240,209,5)" fg:x="894" fg:w="1"/><text x="69.9304%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="69.8363%" y="485" width="0.0779%" height="15" fill="rgb(221,219,1)" fg:x="896" fg:w="1"/><text x="70.0863%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="69.4466%" y="613" width="0.5456%" height="15" fill="rgb(237,90,36)" fg:x="891" fg:w="7"/><text x="69.6966%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="69.6025%" y="597" width="0.3897%" height="15" fill="rgb(245,14,51)" fg:x="893" fg:w="5"/><text x="69.8525%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="69.6025%" y="581" width="0.3897%" height="15" fill="rgb(211,71,49)" fg:x="893" fg:w="5"/><text x="69.8525%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.39%)</title><rect x="69.6025%" y="565" width="0.3897%" height="15" fill="rgb(230,223,9)" fg:x="893" fg:w="5"/><text x="69.8525%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="69.6025%" y="549" width="0.3897%" height="15" fill="rgb(212,33,31)" fg:x="893" fg:w="5"/><text x="69.8525%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="69.6804%" y="533" width="0.3118%" height="15" fill="rgb(218,141,5)" fg:x="894" fg:w="4"/><text x="69.9304%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="69.6804%" y="517" width="0.3118%" height="15" fill="rgb(239,194,8)" fg:x="894" fg:w="4"/><text x="69.9304%" y="527.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="69.7584%" y="501" width="0.2338%" height="15" fill="rgb(225,119,29)" fg:x="895" fg:w="3"/><text x="70.0084%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="69.9143%" y="485" width="0.0779%" height="15" fill="rgb(233,32,3)" fg:x="897" fg:w="1"/><text x="70.1643%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9143%" y="469" width="0.0779%" height="15" fill="rgb(248,126,40)" fg:x="897" fg:w="1"/><text x="70.1643%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="69.9143%" y="453" width="0.0779%" height="15" fill="rgb(213,102,53)" fg:x="897" fg:w="1"/><text x="70.1643%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9143%" y="437" width="0.0779%" height="15" fill="rgb(212,69,15)" fg:x="897" fg:w="1"/><text x="70.1643%" y="447.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (28 samples, 2.18%)</title><rect x="67.8878%" y="725" width="2.1824%" height="15" fill="rgb(253,39,34)" fg:x="871" fg:w="28"/><text x="68.1378%" y="735.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (28 samples, 2.18%)</title><rect x="67.8878%" y="709" width="2.1824%" height="15" fill="rgb(205,189,54)" fg:x="871" fg:w="28"/><text x="68.1378%" y="719.50">e..</text></g><g><title>kernel::model::any_entity_changes (11 samples, 0.86%)</title><rect x="69.2128%" y="693" width="0.8574%" height="15" fill="rgb(234,229,45)" fg:x="888" fg:w="11"/><text x="69.4628%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (11 samples, 0.86%)</title><rect x="69.2128%" y="677" width="0.8574%" height="15" fill="rgb(243,79,48)" fg:x="888" fg:w="11"/><text x="69.4628%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.86%)</title><rect x="69.2128%" y="661" width="0.8574%" height="15" fill="rgb(206,71,50)" fg:x="888" fg:w="11"/><text x="69.4628%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.62%)</title><rect x="69.4466%" y="645" width="0.6235%" height="15" fill="rgb(209,32,17)" fg:x="891" fg:w="8"/><text x="69.6966%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (8 samples, 0.62%)</title><rect x="69.4466%" y="629" width="0.6235%" height="15" fill="rgb(219,229,6)" fg:x="891" fg:w="8"/><text x="69.6966%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="69.9922%" y="613" width="0.0779%" height="15" fill="rgb(226,25,27)" fg:x="898" fg:w="1"/><text x="70.2422%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9922%" y="597" width="0.0779%" height="15" fill="rgb(218,185,23)" fg:x="898" fg:w="1"/><text x="70.2422%" y="607.50"></text></g><g><title>engine::session::Session::flush (31 samples, 2.42%)</title><rect x="67.7319%" y="757" width="2.4162%" height="15" fill="rgb(242,123,5)" fg:x="869" fg:w="31"/><text x="67.9819%" y="767.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (31 samples, 2.42%)</title><rect x="67.7319%" y="741" width="2.4162%" height="15" fill="rgb(215,53,19)" fg:x="869" fg:w="31"/><text x="67.9819%" y="751.50">en..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="70.0701%" y="725" width="0.0779%" height="15" fill="rgb(233,20,30)" fg:x="899" fg:w="1"/><text x="70.3201%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="70.0701%" y="709" width="0.0779%" height="15" fill="rgb(209,67,20)" fg:x="899" fg:w="1"/><text x="70.3201%" y="719.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="70.0701%" y="693" width="0.0779%" height="15" fill="rgb(227,181,50)" fg:x="899" fg:w="1"/><text x="70.3201%" y="703.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="70.0701%" y="677" width="0.0779%" height="15" fill="rgb(252,75,38)" fg:x="899" fg:w="1"/><text x="70.3201%" y="687.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="70.0701%" y="661" width="0.0779%" height="15" fill="rgb(235,9,33)" fg:x="899" fg:w="1"/><text x="70.3201%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.0701%" y="645" width="0.0779%" height="15" fill="rgb(208,87,30)" fg:x="899" fg:w="1"/><text x="70.3201%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="70.0701%" y="629" width="0.0779%" height="15" fill="rgb(215,199,39)" fg:x="899" fg:w="1"/><text x="70.3201%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="70.0701%" y="613" width="0.0779%" height="15" fill="rgb(246,208,12)" fg:x="899" fg:w="1"/><text x="70.3201%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="70.0701%" y="597" width="0.0779%" height="15" fill="rgb(206,195,10)" fg:x="899" fg:w="1"/><text x="70.3201%" y="607.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="70.0701%" y="581" width="0.0779%" height="15" fill="rgb(244,1,30)" fg:x="899" fg:w="1"/><text x="70.3201%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.0701%" y="565" width="0.0779%" height="15" fill="rgb(230,83,5)" fg:x="899" fg:w="1"/><text x="70.3201%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="70.0701%" y="549" width="0.0779%" height="15" fill="rgb(239,62,17)" fg:x="899" fg:w="1"/><text x="70.3201%" y="559.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="70.0701%" y="533" width="0.0779%" height="15" fill="rgb(252,193,41)" fg:x="899" fg:w="1"/><text x="70.3201%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="70.0701%" y="517" width="0.0779%" height="15" fill="rgb(216,142,19)" fg:x="899" fg:w="1"/><text x="70.3201%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="70.0701%" y="501" width="0.0779%" height="15" fill="rgb(240,81,38)" fg:x="899" fg:w="1"/><text x="70.3201%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="70.0701%" y="485" width="0.0779%" height="15" fill="rgb(240,109,40)" fg:x="899" fg:w="1"/><text x="70.3201%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.0701%" y="469" width="0.0779%" height="15" fill="rgb(230,123,10)" fg:x="899" fg:w="1"/><text x="70.3201%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="70.0701%" y="453" width="0.0779%" height="15" fill="rgb(253,42,32)" fg:x="899" fg:w="1"/><text x="70.3201%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="70.0701%" y="437" width="0.0779%" height="15" fill="rgb(218,154,8)" fg:x="899" fg:w="1"/><text x="70.3201%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="70.0701%" y="421" width="0.0779%" height="15" fill="rgb(216,197,10)" fg:x="899" fg:w="1"/><text x="70.3201%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="70.0701%" y="405" width="0.0779%" height="15" fill="rgb(223,107,12)" fg:x="899" fg:w="1"/><text x="70.3201%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="70.0701%" y="389" width="0.0779%" height="15" fill="rgb(241,174,42)" fg:x="899" fg:w="1"/><text x="70.3201%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="70.0701%" y="373" width="0.0779%" height="15" fill="rgb(231,78,20)" fg:x="899" fg:w="1"/><text x="70.3201%" y="383.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="70.0701%" y="357" width="0.0779%" height="15" fill="rgb(230,208,49)" fg:x="899" fg:w="1"/><text x="70.3201%" y="367.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="70.0701%" y="341" width="0.0779%" height="15" fill="rgb(238,11,34)" fg:x="899" fg:w="1"/><text x="70.3201%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="70.1481%" y="725" width="0.0779%" height="15" fill="rgb(210,130,26)" fg:x="900" fg:w="1"/><text x="70.3981%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1481%" y="709" width="0.0779%" height="15" fill="rgb(242,131,11)" fg:x="900" fg:w="1"/><text x="70.3981%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="70.2260%" y="725" width="0.0779%" height="15" fill="rgb(237,38,28)" fg:x="901" fg:w="1"/><text x="70.4760%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="70.2260%" y="709" width="0.0779%" height="15" fill="rgb(244,180,43)" fg:x="901" fg:w="1"/><text x="70.4760%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.2260%" y="693" width="0.0779%" height="15" fill="rgb(214,171,19)" fg:x="901" fg:w="1"/><text x="70.4760%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="70.2260%" y="677" width="0.0779%" height="15" fill="rgb(252,101,45)" fg:x="901" fg:w="1"/><text x="70.4760%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="70.2260%" y="661" width="0.0779%" height="15" fill="rgb(211,96,33)" fg:x="901" fg:w="1"/><text x="70.4760%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2260%" y="645" width="0.0779%" height="15" fill="rgb(207,80,25)" fg:x="901" fg:w="1"/><text x="70.4760%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2260%" y="629" width="0.0779%" height="15" fill="rgb(225,15,35)" fg:x="901" fg:w="1"/><text x="70.4760%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.2260%" y="613" width="0.0779%" height="15" fill="rgb(214,93,43)" fg:x="901" fg:w="1"/><text x="70.4760%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.2260%" y="597" width="0.0779%" height="15" fill="rgb(248,42,37)" fg:x="901" fg:w="1"/><text x="70.4760%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.2260%" y="581" width="0.0779%" height="15" fill="rgb(217,135,32)" fg:x="901" fg:w="1"/><text x="70.4760%" y="591.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="70.3040%" y="725" width="0.0779%" height="15" fill="rgb(216,74,28)" fg:x="902" fg:w="1"/><text x="70.5540%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="70.3040%" y="709" width="0.0779%" height="15" fill="rgb(247,108,16)" fg:x="902" fg:w="1"/><text x="70.5540%" y="719.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="70.3040%" y="693" width="0.0779%" height="15" fill="rgb(205,219,30)" fg:x="902" fg:w="1"/><text x="70.5540%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="70.3040%" y="677" width="0.0779%" height="15" fill="rgb(241,122,9)" fg:x="902" fg:w="1"/><text x="70.5540%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="70.3040%" y="661" width="0.0779%" height="15" fill="rgb(216,148,50)" fg:x="902" fg:w="1"/><text x="70.5540%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="70.3040%" y="645" width="0.0779%" height="15" fill="rgb(226,154,2)" fg:x="902" fg:w="1"/><text x="70.5540%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="70.3819%" y="677" width="0.0779%" height="15" fill="rgb(220,128,1)" fg:x="903" fg:w="1"/><text x="70.6319%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="70.3819%" y="661" width="0.0779%" height="15" fill="rgb(245,185,29)" fg:x="903" fg:w="1"/><text x="70.6319%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="70.3819%" y="645" width="0.0779%" height="15" fill="rgb(243,161,2)" fg:x="903" fg:w="1"/><text x="70.6319%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.3819%" y="629" width="0.0779%" height="15" fill="rgb(249,215,17)" fg:x="903" fg:w="1"/><text x="70.6319%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3819%" y="613" width="0.0779%" height="15" fill="rgb(237,67,11)" fg:x="903" fg:w="1"/><text x="70.6319%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.3819%" y="597" width="0.0779%" height="15" fill="rgb(239,17,24)" fg:x="903" fg:w="1"/><text x="70.6319%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.3819%" y="581" width="0.0779%" height="15" fill="rgb(215,97,29)" fg:x="903" fg:w="1"/><text x="70.6319%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="629" width="0.0779%" height="15" fill="rgb(253,228,42)" fg:x="904" fg:w="1"/><text x="70.7099%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="613" width="0.0779%" height="15" fill="rgb(240,85,2)" fg:x="904" fg:w="1"/><text x="70.7099%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="597" width="0.0779%" height="15" fill="rgb(214,155,4)" fg:x="904" fg:w="1"/><text x="70.7099%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="581" width="0.0779%" height="15" fill="rgb(247,120,22)" fg:x="904" fg:w="1"/><text x="70.7099%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="565" width="0.0779%" height="15" fill="rgb(211,208,6)" fg:x="904" fg:w="1"/><text x="70.7099%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="549" width="0.0779%" height="15" fill="rgb(235,99,41)" fg:x="904" fg:w="1"/><text x="70.7099%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4599%" y="533" width="0.0779%" height="15" fill="rgb(223,28,8)" fg:x="904" fg:w="1"/><text x="70.7099%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.5378%" y="597" width="0.0779%" height="15" fill="rgb(212,71,20)" fg:x="905" fg:w="1"/><text x="70.7878%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5378%" y="581" width="0.0779%" height="15" fill="rgb(206,85,3)" fg:x="905" fg:w="1"/><text x="70.7878%" y="591.50"></text></g><g><title>plugins_core::build::Build::holding (7 samples, 0.55%)</title><rect x="70.1481%" y="757" width="0.5456%" height="15" fill="rgb(244,180,11)" fg:x="900" fg:w="7"/><text x="70.3981%" y="767.50"></text></g><g><title>plugins_core::tools::set_container (7 samples, 0.55%)</title><rect x="70.1481%" y="741" width="0.5456%" height="15" fill="rgb(223,16,21)" fg:x="900" fg:w="7"/><text x="70.3981%" y="751.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="70.3819%" y="725" width="0.3118%" height="15" fill="rgb(238,85,42)" fg:x="903" fg:w="4"/><text x="70.6319%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="70.3819%" y="709" width="0.3118%" height="15" fill="rgb(205,85,8)" fg:x="903" fg:w="4"/><text x="70.6319%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="70.3819%" y="693" width="0.3118%" height="15" fill="rgb(217,190,15)" fg:x="903" fg:w="4"/><text x="70.6319%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="70.4599%" y="677" width="0.2338%" height="15" fill="rgb(243,192,23)" fg:x="904" fg:w="3"/><text x="70.7099%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="70.4599%" y="661" width="0.2338%" height="15" fill="rgb(223,220,37)" fg:x="904" fg:w="3"/><text x="70.7099%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="70.4599%" y="645" width="0.2338%" height="15" fill="rgb(208,41,17)" fg:x="904" fg:w="3"/><text x="70.7099%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="70.5378%" y="629" width="0.1559%" height="15" fill="rgb(224,188,7)" fg:x="905" fg:w="2"/><text x="70.7878%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.5378%" y="613" width="0.1559%" height="15" fill="rgb(236,16,50)" fg:x="905" fg:w="2"/><text x="70.7878%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6157%" y="597" width="0.0779%" height="15" fill="rgb(238,6,24)" fg:x="906" fg:w="1"/><text x="70.8657%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6157%" y="581" width="0.0779%" height="15" fill="rgb(253,67,45)" fg:x="906" fg:w="1"/><text x="70.8657%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="70.6157%" y="565" width="0.0779%" height="15" fill="rgb(210,89,32)" fg:x="906" fg:w="1"/><text x="70.8657%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6157%" y="549" width="0.0779%" height="15" fill="rgb(208,89,9)" fg:x="906" fg:w="1"/><text x="70.8657%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.6157%" y="533" width="0.0779%" height="15" fill="rgb(222,180,44)" fg:x="906" fg:w="1"/><text x="70.8657%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.6157%" y="517" width="0.0779%" height="15" fill="rgb(250,181,46)" fg:x="906" fg:w="1"/><text x="70.8657%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="70.6937%" y="757" width="0.0779%" height="15" fill="rgb(210,190,26)" fg:x="907" fg:w="1"/><text x="70.9437%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="70.6937%" y="741" width="0.0779%" height="15" fill="rgb(253,49,13)" fg:x="907" fg:w="1"/><text x="70.9437%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="70.6937%" y="725" width="0.0779%" height="15" fill="rgb(240,184,42)" fg:x="907" fg:w="1"/><text x="70.9437%" y="735.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="70.6937%" y="709" width="0.0779%" height="15" fill="rgb(246,59,37)" fg:x="907" fg:w="1"/><text x="70.9437%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="70.6937%" y="693" width="0.0779%" height="15" fill="rgb(207,134,54)" fg:x="907" fg:w="1"/><text x="70.9437%" y="703.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="70.6937%" y="677" width="0.0779%" height="15" fill="rgb(250,122,24)" fg:x="907" fg:w="1"/><text x="70.9437%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="70.6937%" y="661" width="0.0779%" height="15" fill="rgb(239,206,3)" fg:x="907" fg:w="1"/><text x="70.9437%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.6937%" y="645" width="0.0779%" height="15" fill="rgb(253,220,32)" fg:x="907" fg:w="1"/><text x="70.9437%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6937%" y="629" width="0.0779%" height="15" fill="rgb(209,217,48)" fg:x="907" fg:w="1"/><text x="70.9437%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6937%" y="613" width="0.0779%" height="15" fill="rgb(242,91,39)" fg:x="907" fg:w="1"/><text x="70.9437%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6937%" y="597" width="0.0779%" height="15" fill="rgb(228,4,13)" fg:x="907" fg:w="1"/><text x="70.9437%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.6937%" y="581" width="0.0779%" height="15" fill="rgb(223,133,4)" fg:x="907" fg:w="1"/><text x="70.9437%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7716%" y="677" width="0.0779%" height="15" fill="rgb(215,105,30)" fg:x="908" fg:w="1"/><text x="71.0216%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.8496%" y="565" width="0.0779%" height="15" fill="rgb(230,9,4)" fg:x="909" fg:w="1"/><text x="71.0996%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8496%" y="549" width="0.0779%" height="15" fill="rgb(248,15,2)" fg:x="909" fg:w="1"/><text x="71.0996%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.8496%" y="533" width="0.0779%" height="15" fill="rgb(208,210,22)" fg:x="909" fg:w="1"/><text x="71.0996%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.8496%" y="517" width="0.0779%" height="15" fill="rgb(208,112,41)" fg:x="909" fg:w="1"/><text x="71.0996%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.8496%" y="501" width="0.0779%" height="15" fill="rgb(232,83,14)" fg:x="909" fg:w="1"/><text x="71.0996%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.8496%" y="485" width="0.0779%" height="15" fill="rgb(229,65,11)" fg:x="909" fg:w="1"/><text x="71.0996%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="70.8496%" y="469" width="0.0779%" height="15" fill="rgb(228,126,24)" fg:x="909" fg:w="1"/><text x="71.0996%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="70.8496%" y="453" width="0.0779%" height="15" fill="rgb(218,66,33)" fg:x="909" fg:w="1"/><text x="71.0996%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.8496%" y="645" width="0.1559%" height="15" fill="rgb(251,49,52)" fg:x="909" fg:w="2"/><text x="71.0996%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.8496%" y="629" width="0.1559%" height="15" fill="rgb(219,46,37)" fg:x="909" fg:w="2"/><text x="71.0996%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.8496%" y="613" width="0.1559%" height="15" fill="rgb(213,53,49)" fg:x="909" fg:w="2"/><text x="71.0996%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.8496%" y="597" width="0.1559%" height="15" fill="rgb(214,134,1)" fg:x="909" fg:w="2"/><text x="71.0996%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.8496%" y="581" width="0.1559%" height="15" fill="rgb(208,139,43)" fg:x="909" fg:w="2"/><text x="71.0996%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.9275%" y="565" width="0.0779%" height="15" fill="rgb(231,105,35)" fg:x="910" fg:w="1"/><text x="71.1775%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.31%)</title><rect x="70.7716%" y="741" width="0.3118%" height="15" fill="rgb(247,189,9)" fg:x="908" fg:w="4"/><text x="71.0216%" y="751.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.31%)</title><rect x="70.7716%" y="725" width="0.3118%" height="15" fill="rgb(252,48,51)" fg:x="908" fg:w="4"/><text x="71.0216%" y="735.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.31%)</title><rect x="70.7716%" y="709" width="0.3118%" height="15" fill="rgb(209,121,1)" fg:x="908" fg:w="4"/><text x="71.0216%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="70.7716%" y="693" width="0.3118%" height="15" fill="rgb(231,40,26)" fg:x="908" fg:w="4"/><text x="71.0216%" y="703.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="70.8496%" y="677" width="0.2338%" height="15" fill="rgb(251,8,13)" fg:x="909" fg:w="3"/><text x="71.0996%" y="687.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="70.8496%" y="661" width="0.2338%" height="15" fill="rgb(231,110,2)" fg:x="909" fg:w="3"/><text x="71.0996%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0055%" y="645" width="0.0779%" height="15" fill="rgb(216,153,22)" fg:x="911" fg:w="1"/><text x="71.2555%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0055%" y="629" width="0.0779%" height="15" fill="rgb(249,116,49)" fg:x="911" fg:w="1"/><text x="71.2555%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0055%" y="613" width="0.0779%" height="15" fill="rgb(230,89,2)" fg:x="911" fg:w="1"/><text x="71.2555%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0055%" y="597" width="0.0779%" height="15" fill="rgb(231,125,23)" fg:x="911" fg:w="1"/><text x="71.2555%" y="607.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.0055%" y="581" width="0.0779%" height="15" fill="rgb(212,217,18)" fg:x="911" fg:w="1"/><text x="71.2555%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0055%" y="565" width="0.0779%" height="15" fill="rgb(210,21,33)" fg:x="911" fg:w="1"/><text x="71.2555%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="71.0055%" y="549" width="0.0779%" height="15" fill="rgb(241,97,9)" fg:x="911" fg:w="1"/><text x="71.2555%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.0055%" y="533" width="0.0779%" height="15" fill="rgb(221,35,31)" fg:x="911" fg:w="1"/><text x="71.2555%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.0055%" y="517" width="0.0779%" height="15" fill="rgb(251,23,23)" fg:x="911" fg:w="1"/><text x="71.2555%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0834%" y="693" width="0.0779%" height="15" fill="rgb(227,165,2)" fg:x="912" fg:w="1"/><text x="71.3334%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0834%" y="677" width="0.0779%" height="15" fill="rgb(242,24,2)" fg:x="912" fg:w="1"/><text x="71.3334%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.0834%" y="661" width="0.0779%" height="15" fill="rgb(242,138,51)" fg:x="912" fg:w="1"/><text x="71.3334%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.0834%" y="645" width="0.0779%" height="15" fill="rgb(220,219,5)" fg:x="912" fg:w="1"/><text x="71.3334%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.0834%" y="629" width="0.0779%" height="15" fill="rgb(247,53,29)" fg:x="912" fg:w="1"/><text x="71.3334%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.0834%" y="613" width="0.0779%" height="15" fill="rgb(233,43,39)" fg:x="912" fg:w="1"/><text x="71.3334%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0834%" y="597" width="0.0779%" height="15" fill="rgb(230,128,54)" fg:x="912" fg:w="1"/><text x="71.3334%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.0834%" y="581" width="0.0779%" height="15" fill="rgb(218,20,12)" fg:x="912" fg:w="1"/><text x="71.3334%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.0834%" y="565" width="0.0779%" height="15" fill="rgb(206,51,14)" fg:x="912" fg:w="1"/><text x="71.3334%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.0834%" y="549" width="0.0779%" height="15" fill="rgb(223,16,35)" fg:x="912" fg:w="1"/><text x="71.3334%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.0834%" y="533" width="0.0779%" height="15" fill="rgb(226,165,37)" fg:x="912" fg:w="1"/><text x="71.3334%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.0834%" y="517" width="0.0779%" height="15" fill="rgb(240,26,21)" fg:x="912" fg:w="1"/><text x="71.3334%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.0834%" y="501" width="0.0779%" height="15" fill="rgb(240,72,46)" fg:x="912" fg:w="1"/><text x="71.3334%" y="511.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="71.1613%" y="693" width="0.0779%" height="15" fill="rgb(211,33,41)" fg:x="913" fg:w="1"/><text x="71.4113%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="71.1613%" y="677" width="0.0779%" height="15" fill="rgb(224,157,46)" fg:x="913" fg:w="1"/><text x="71.4113%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="71.2393%" y="677" width="0.0779%" height="15" fill="rgb(223,59,19)" fg:x="914" fg:w="1"/><text x="71.4893%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="71.2393%" y="661" width="0.0779%" height="15" fill="rgb(239,187,1)" fg:x="914" fg:w="1"/><text x="71.4893%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.3172%" y="677" width="0.0779%" height="15" fill="rgb(226,95,9)" fg:x="915" fg:w="1"/><text x="71.5672%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="71.3172%" y="661" width="0.0779%" height="15" fill="rgb(234,61,54)" fg:x="915" fg:w="1"/><text x="71.5672%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.3952%" y="661" width="0.0779%" height="15" fill="rgb(205,209,47)" fg:x="916" fg:w="1"/><text x="71.6452%" y="671.50"></text></g><g><title>plugins_core::build::Build::leads_to (4 samples, 0.31%)</title><rect x="71.2393%" y="693" width="0.3118%" height="15" fill="rgb(228,7,43)" fg:x="914" fg:w="4"/><text x="71.4893%" y="703.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="71.3952%" y="677" width="0.1559%" height="15" fill="rgb(240,217,52)" fg:x="916" fg:w="2"/><text x="71.6452%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="71.4731%" y="661" width="0.0779%" height="15" fill="rgb(211,178,21)" fg:x="917" fg:w="1"/><text x="71.7231%" y="671.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="71.4731%" y="645" width="0.0779%" height="15" fill="rgb(205,25,34)" fg:x="917" fg:w="1"/><text x="71.7231%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="71.4731%" y="629" width="0.0779%" height="15" fill="rgb(209,57,11)" fg:x="917" fg:w="1"/><text x="71.7231%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4731%" y="613" width="0.0779%" height="15" fill="rgb(221,99,2)" fg:x="917" fg:w="1"/><text x="71.7231%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.4731%" y="597" width="0.0779%" height="15" fill="rgb(232,79,22)" fg:x="917" fg:w="1"/><text x="71.7231%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.4731%" y="581" width="0.0779%" height="15" fill="rgb(221,145,32)" fg:x="917" fg:w="1"/><text x="71.7231%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.4731%" y="565" width="0.0779%" height="15" fill="rgb(236,133,36)" fg:x="917" fg:w="1"/><text x="71.7231%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.4731%" y="549" width="0.0779%" height="15" fill="rgb(208,224,44)" fg:x="917" fg:w="1"/><text x="71.7231%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4731%" y="533" width="0.0779%" height="15" fill="rgb(235,143,15)" fg:x="917" fg:w="1"/><text x="71.7231%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.4731%" y="517" width="0.0779%" height="15" fill="rgb(249,83,27)" fg:x="917" fg:w="1"/><text x="71.7231%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.4731%" y="501" width="0.0779%" height="15" fill="rgb(238,226,19)" fg:x="917" fg:w="1"/><text x="71.7231%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.4731%" y="485" width="0.0779%" height="15" fill="rgb(226,206,27)" fg:x="917" fg:w="1"/><text x="71.7231%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.4731%" y="469" width="0.0779%" height="15" fill="rgb(251,182,9)" fg:x="917" fg:w="1"/><text x="71.7231%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.4731%" y="453" width="0.0779%" height="15" fill="rgb(212,140,41)" fg:x="917" fg:w="1"/><text x="71.7231%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.4731%" y="437" width="0.0779%" height="15" fill="rgb(220,106,18)" fg:x="917" fg:w="1"/><text x="71.7231%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.55%)</title><rect x="71.0834%" y="741" width="0.5456%" height="15" fill="rgb(252,46,41)" fg:x="912" fg:w="7"/><text x="71.3334%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.55%)</title><rect x="71.0834%" y="725" width="0.5456%" height="15" fill="rgb(209,222,15)" fg:x="912" fg:w="7"/><text x="71.3334%" y="735.50"></text></g><g><title>plugins_core::build::QuickThing::make (7 samples, 0.55%)</title><rect x="71.0834%" y="709" width="0.5456%" height="15" fill="rgb(233,83,50)" fg:x="912" fg:w="7"/><text x="71.3334%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="71.5511%" y="693" width="0.0779%" height="15" fill="rgb(205,212,0)" fg:x="918" fg:w="1"/><text x="71.8011%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="71.5511%" y="677" width="0.0779%" height="15" fill="rgb(235,117,51)" fg:x="918" fg:w="1"/><text x="71.8011%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="71.5511%" y="661" width="0.0779%" height="15" fill="rgb(233,133,48)" fg:x="918" fg:w="1"/><text x="71.8011%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="71.5511%" y="645" width="0.0779%" height="15" fill="rgb(219,3,2)" fg:x="918" fg:w="1"/><text x="71.8011%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5511%" y="629" width="0.0779%" height="15" fill="rgb(225,80,52)" fg:x="918" fg:w="1"/><text x="71.8011%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5511%" y="613" width="0.0779%" height="15" fill="rgb(235,195,42)" fg:x="918" fg:w="1"/><text x="71.8011%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="71.5511%" y="597" width="0.0779%" height="15" fill="rgb(240,207,46)" fg:x="918" fg:w="1"/><text x="71.8011%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.5511%" y="581" width="0.0779%" height="15" fill="rgb(236,112,50)" fg:x="918" fg:w="1"/><text x="71.8011%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="71.5511%" y="565" width="0.0779%" height="15" fill="rgb(249,151,27)" fg:x="918" fg:w="1"/><text x="71.8011%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="71.5511%" y="549" width="0.0779%" height="15" fill="rgb(253,223,52)" fg:x="918" fg:w="1"/><text x="71.8011%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="71.6290%" y="709" width="0.0779%" height="15" fill="rgb(215,55,33)" fg:x="919" fg:w="1"/><text x="71.8790%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6290%" y="693" width="0.0779%" height="15" fill="rgb(207,24,17)" fg:x="919" fg:w="1"/><text x="71.8790%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.6290%" y="677" width="0.0779%" height="15" fill="rgb(218,169,32)" fg:x="919" fg:w="1"/><text x="71.8790%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.6290%" y="661" width="0.0779%" height="15" fill="rgb(209,210,6)" fg:x="919" fg:w="1"/><text x="71.8790%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.6290%" y="645" width="0.0779%" height="15" fill="rgb(225,208,8)" fg:x="919" fg:w="1"/><text x="71.8790%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.6290%" y="629" width="0.0779%" height="15" fill="rgb(238,14,32)" fg:x="919" fg:w="1"/><text x="71.8790%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6290%" y="613" width="0.0779%" height="15" fill="rgb(211,137,3)" fg:x="919" fg:w="1"/><text x="71.8790%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.6290%" y="597" width="0.0779%" height="15" fill="rgb(207,171,19)" fg:x="919" fg:w="1"/><text x="71.8790%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.6290%" y="581" width="0.0779%" height="15" fill="rgb(250,80,8)" fg:x="919" fg:w="1"/><text x="71.8790%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.6290%" y="565" width="0.0779%" height="15" fill="rgb(209,103,53)" fg:x="919" fg:w="1"/><text x="71.8790%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.6290%" y="549" width="0.0779%" height="15" fill="rgb(233,198,10)" fg:x="919" fg:w="1"/><text x="71.8790%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.6290%" y="533" width="0.0779%" height="15" fill="rgb(236,125,25)" fg:x="919" fg:w="1"/><text x="71.8790%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.6290%" y="517" width="0.0779%" height="15" fill="rgb(254,182,48)" fg:x="919" fg:w="1"/><text x="71.8790%" y="527.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="71.7069%" y="709" width="0.0779%" height="15" fill="rgb(216,108,44)" fg:x="920" fg:w="1"/><text x="71.9569%" y="719.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="71.7069%" y="693" width="0.0779%" height="15" fill="rgb(222,72,39)" fg:x="920" fg:w="1"/><text x="71.9569%" y="703.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="71.7069%" y="677" width="0.0779%" height="15" fill="rgb(252,70,39)" fg:x="920" fg:w="1"/><text x="71.9569%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="71.7069%" y="661" width="0.0779%" height="15" fill="rgb(243,99,34)" fg:x="920" fg:w="1"/><text x="71.9569%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="71.7069%" y="645" width="0.0779%" height="15" fill="rgb(252,109,12)" fg:x="920" fg:w="1"/><text x="71.9569%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7069%" y="629" width="0.0779%" height="15" fill="rgb(211,186,10)" fg:x="920" fg:w="1"/><text x="71.9569%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="71.8628%" y="677" width="0.0779%" height="15" fill="rgb(246,90,8)" fg:x="922" fg:w="1"/><text x="72.1128%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="71.8628%" y="661" width="0.0779%" height="15" fill="rgb(226,91,24)" fg:x="922" fg:w="1"/><text x="72.1128%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="71.8628%" y="645" width="0.0779%" height="15" fill="rgb(216,28,44)" fg:x="922" fg:w="1"/><text x="72.1128%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="71.8628%" y="629" width="0.0779%" height="15" fill="rgb(229,36,0)" fg:x="922" fg:w="1"/><text x="72.1128%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="71.8628%" y="613" width="0.0779%" height="15" fill="rgb(245,97,18)" fg:x="922" fg:w="1"/><text x="72.1128%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="71.8628%" y="597" width="0.0779%" height="15" fill="rgb(241,97,54)" fg:x="922" fg:w="1"/><text x="72.1128%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="71.8628%" y="581" width="0.0779%" height="15" fill="rgb(234,125,17)" fg:x="922" fg:w="1"/><text x="72.1128%" y="591.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.23%)</title><rect x="71.9408%" y="661" width="0.2338%" height="15" fill="rgb(228,172,39)" fg:x="923" fg:w="3"/><text x="72.1908%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.0187%" y="645" width="0.1559%" height="15" fill="rgb(227,169,1)" fg:x="924" fg:w="2"/><text x="72.2687%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.0966%" y="629" width="0.0779%" height="15" fill="rgb(206,13,35)" fg:x="925" fg:w="1"/><text x="72.3466%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.0966%" y="613" width="0.0779%" height="15" fill="rgb(211,117,30)" fg:x="925" fg:w="1"/><text x="72.3466%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.0966%" y="597" width="0.0779%" height="15" fill="rgb(230,198,4)" fg:x="925" fg:w="1"/><text x="72.3466%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.2525%" y="645" width="0.0779%" height="15" fill="rgb(213,87,54)" fg:x="927" fg:w="1"/><text x="72.5025%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="72.3305%" y="597" width="0.1559%" height="15" fill="rgb(248,43,22)" fg:x="928" fg:w="2"/><text x="72.5805%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="72.3305%" y="581" width="0.1559%" height="15" fill="rgb(213,175,48)" fg:x="928" fg:w="2"/><text x="72.5805%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.23%)</title><rect x="72.3305%" y="629" width="0.2338%" height="15" fill="rgb(252,55,9)" fg:x="928" fg:w="3"/><text x="72.5805%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="72.3305%" y="613" width="0.2338%" height="15" fill="rgb(231,72,33)" fg:x="928" fg:w="3"/><text x="72.5805%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.4864%" y="597" width="0.0779%" height="15" fill="rgb(213,2,54)" fg:x="930" fg:w="1"/><text x="72.7364%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.4864%" y="581" width="0.0779%" height="15" fill="rgb(208,88,25)" fg:x="930" fg:w="1"/><text x="72.7364%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.5643%" y="629" width="0.0779%" height="15" fill="rgb(215,117,13)" fg:x="931" fg:w="1"/><text x="72.8143%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.5643%" y="613" width="0.0779%" height="15" fill="rgb(243,147,21)" fg:x="931" fg:w="1"/><text x="72.8143%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.6422%" y="613" width="0.0779%" height="15" fill="rgb(208,215,36)" fg:x="932" fg:w="1"/><text x="72.8922%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="72.7202%" y="597" width="0.0779%" height="15" fill="rgb(238,187,24)" fg:x="933" fg:w="1"/><text x="72.9702%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.7202%" y="581" width="0.0779%" height="15" fill="rgb(214,173,11)" fg:x="933" fg:w="1"/><text x="72.9702%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.7202%" y="565" width="0.0779%" height="15" fill="rgb(222,71,20)" fg:x="933" fg:w="1"/><text x="72.9702%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.7202%" y="549" width="0.0779%" height="15" fill="rgb(242,125,4)" fg:x="933" fg:w="1"/><text x="72.9702%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="72.7981%" y="581" width="0.0779%" height="15" fill="rgb(217,101,52)" fg:x="934" fg:w="1"/><text x="73.0481%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="72.7981%" y="565" width="0.0779%" height="15" fill="rgb(223,2,50)" fg:x="934" fg:w="1"/><text x="73.0481%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="72.7202%" y="613" width="0.2338%" height="15" fill="rgb(225,197,9)" fg:x="933" fg:w="3"/><text x="72.9702%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="72.7981%" y="597" width="0.1559%" height="15" fill="rgb(234,76,27)" fg:x="934" fg:w="2"/><text x="73.0481%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.8761%" y="581" width="0.0779%" height="15" fill="rgb(213,161,26)" fg:x="935" fg:w="1"/><text x="73.1261%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.8761%" y="565" width="0.0779%" height="15" fill="rgb(210,228,2)" fg:x="935" fg:w="1"/><text x="73.1261%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.8761%" y="549" width="0.0779%" height="15" fill="rgb(235,4,16)" fg:x="935" fg:w="1"/><text x="73.1261%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="72.6422%" y="629" width="0.3897%" height="15" fill="rgb(235,83,42)" fg:x="932" fg:w="5"/><text x="72.8922%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="72.9540%" y="613" width="0.0779%" height="15" fill="rgb(207,116,39)" fg:x="936" fg:w="1"/><text x="73.2040%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="72.9540%" y="597" width="0.0779%" height="15" fill="rgb(253,206,9)" fg:x="936" fg:w="1"/><text x="73.2040%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="72.9540%" y="581" width="0.0779%" height="15" fill="rgb(234,32,47)" fg:x="936" fg:w="1"/><text x="73.2040%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.78%)</title><rect x="72.3305%" y="645" width="0.7794%" height="15" fill="rgb(247,40,39)" fg:x="928" fg:w="10"/><text x="72.5805%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.0320%" y="629" width="0.0779%" height="15" fill="rgb(236,199,13)" fg:x="937" fg:w="1"/><text x="73.2820%" y="639.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (16 samples, 1.25%)</title><rect x="71.9408%" y="677" width="1.2471%" height="15" fill="rgb(240,127,44)" fg:x="923" fg:w="16"/><text x="72.1908%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (13 samples, 1.01%)</title><rect x="72.1746%" y="661" width="1.0133%" height="15" fill="rgb(248,220,47)" fg:x="926" fg:w="13"/><text x="72.4246%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="73.1099%" y="645" width="0.0779%" height="15" fill="rgb(240,78,9)" fg:x="938" fg:w="1"/><text x="73.3599%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1878%" y="645" width="0.0779%" height="15" fill="rgb(245,119,5)" fg:x="939" fg:w="1"/><text x="73.4378%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.2658%" y="645" width="0.0779%" height="15" fill="rgb(238,175,31)" fg:x="940" fg:w="1"/><text x="73.5158%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3437%" y="629" width="0.0779%" height="15" fill="rgb(232,140,42)" fg:x="941" fg:w="1"/><text x="73.5937%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="73.4996%" y="597" width="0.0779%" height="15" fill="rgb(218,179,7)" fg:x="943" fg:w="1"/><text x="73.7496%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4996%" y="581" width="0.0779%" height="15" fill="rgb(232,79,27)" fg:x="943" fg:w="1"/><text x="73.7496%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.4996%" y="565" width="0.0779%" height="15" fill="rgb(247,11,19)" fg:x="943" fg:w="1"/><text x="73.7496%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4996%" y="549" width="0.0779%" height="15" fill="rgb(216,171,54)" fg:x="943" fg:w="1"/><text x="73.7496%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.47%)</title><rect x="73.1878%" y="677" width="0.4677%" height="15" fill="rgb(233,158,36)" fg:x="939" fg:w="6"/><text x="73.4378%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.47%)</title><rect x="73.1878%" y="661" width="0.4677%" height="15" fill="rgb(215,48,47)" fg:x="939" fg:w="6"/><text x="73.4378%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="73.3437%" y="645" width="0.3118%" height="15" fill="rgb(230,223,15)" fg:x="941" fg:w="4"/><text x="73.5937%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="73.4217%" y="629" width="0.2338%" height="15" fill="rgb(234,49,19)" fg:x="942" fg:w="3"/><text x="73.6717%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.4996%" y="613" width="0.1559%" height="15" fill="rgb(232,89,25)" fg:x="943" fg:w="2"/><text x="73.7496%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.5776%" y="597" width="0.0779%" height="15" fill="rgb(237,206,28)" fg:x="944" fg:w="1"/><text x="73.8276%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.5776%" y="581" width="0.0779%" height="15" fill="rgb(249,68,37)" fg:x="944" fg:w="1"/><text x="73.8276%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.5776%" y="565" width="0.0779%" height="15" fill="rgb(226,99,43)" fg:x="944" fg:w="1"/><text x="73.8276%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.5776%" y="549" width="0.0779%" height="15" fill="rgb(216,46,28)" fg:x="944" fg:w="1"/><text x="73.8276%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.8114%" y="629" width="0.0779%" height="15" fill="rgb(216,33,9)" fg:x="947" fg:w="1"/><text x="74.0614%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="73.8893%" y="629" width="0.0779%" height="15" fill="rgb(216,129,4)" fg:x="948" fg:w="1"/><text x="74.1393%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="73.9673%" y="581" width="0.0779%" height="15" fill="rgb(216,106,3)" fg:x="949" fg:w="1"/><text x="74.2173%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="73.9673%" y="565" width="0.0779%" height="15" fill="rgb(217,79,45)" fg:x="949" fg:w="1"/><text x="74.2173%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="73.9673%" y="549" width="0.0779%" height="15" fill="rgb(239,98,13)" fg:x="949" fg:w="1"/><text x="74.2173%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="74.1231%" y="469" width="0.0779%" height="15" fill="rgb(221,115,4)" fg:x="951" fg:w="1"/><text x="74.3731%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (32 samples, 2.49%)</title><rect x="71.7849%" y="709" width="2.4942%" height="15" fill="rgb(215,85,0)" fg:x="921" fg:w="32"/><text x="72.0349%" y="719.50">en..</text></g><g><title>engine::session::SavesEntities::check_for_changes (31 samples, 2.42%)</title><rect x="71.8628%" y="693" width="2.4162%" height="15" fill="rgb(230,62,15)" fg:x="922" fg:w="31"/><text x="72.1128%" y="703.50">en..</text></g><g><title>kernel::model::any_entity_changes (8 samples, 0.62%)</title><rect x="73.6555%" y="677" width="0.6235%" height="15" fill="rgb(247,162,2)" fg:x="945" fg:w="8"/><text x="73.9055%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (8 samples, 0.62%)</title><rect x="73.6555%" y="661" width="0.6235%" height="15" fill="rgb(212,112,32)" fg:x="945" fg:w="8"/><text x="73.9055%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.47%)</title><rect x="73.8114%" y="645" width="0.4677%" height="15" fill="rgb(216,137,9)" fg:x="947" fg:w="6"/><text x="74.0614%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.31%)</title><rect x="73.9673%" y="629" width="0.3118%" height="15" fill="rgb(250,149,33)" fg:x="949" fg:w="4"/><text x="74.2173%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="73.9673%" y="613" width="0.3118%" height="15" fill="rgb(246,124,31)" fg:x="949" fg:w="4"/><text x="74.2173%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="73.9673%" y="597" width="0.3118%" height="15" fill="rgb(216,210,22)" fg:x="949" fg:w="4"/><text x="74.2173%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="74.0452%" y="581" width="0.2338%" height="15" fill="rgb(228,128,36)" fg:x="950" fg:w="3"/><text x="74.2952%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.23%)</title><rect x="74.0452%" y="565" width="0.2338%" height="15" fill="rgb(231,41,0)" fg:x="950" fg:w="3"/><text x="74.2952%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.1231%" y="549" width="0.1559%" height="15" fill="rgb(232,61,26)" fg:x="951" fg:w="2"/><text x="74.3731%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.1231%" y="533" width="0.1559%" height="15" fill="rgb(217,60,9)" fg:x="951" fg:w="2"/><text x="74.3731%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.1231%" y="517" width="0.1559%" height="15" fill="rgb(233,41,35)" fg:x="951" fg:w="2"/><text x="74.3731%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="74.1231%" y="501" width="0.1559%" height="15" fill="rgb(253,139,43)" fg:x="951" fg:w="2"/><text x="74.3731%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="74.1231%" y="485" width="0.1559%" height="15" fill="rgb(245,100,51)" fg:x="951" fg:w="2"/><text x="74.3731%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="74.2011%" y="469" width="0.0779%" height="15" fill="rgb(250,208,18)" fg:x="952" fg:w="1"/><text x="74.4511%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2011%" y="453" width="0.0779%" height="15" fill="rgb(245,33,2)" fg:x="952" fg:w="1"/><text x="74.4511%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.2011%" y="437" width="0.0779%" height="15" fill="rgb(244,171,31)" fg:x="952" fg:w="1"/><text x="74.4511%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2011%" y="421" width="0.0779%" height="15" fill="rgb(229,1,43)" fg:x="952" fg:w="1"/><text x="74.4511%" y="431.50"></text></g><g><title>engine::session::Session::flush (35 samples, 2.73%)</title><rect x="71.6290%" y="741" width="2.7280%" height="15" fill="rgb(223,153,28)" fg:x="919" fg:w="35"/><text x="71.8790%" y="751.50">en..</text></g><g><title>engine::session::Session::save_entity_changes (35 samples, 2.73%)</title><rect x="71.6290%" y="725" width="2.7280%" height="15" fill="rgb(241,4,46)" fg:x="919" fg:w="35"/><text x="71.8790%" y="735.50">en..</text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="74.2790%" y="709" width="0.0779%" height="15" fill="rgb(230,81,11)" fg:x="953" fg:w="1"/><text x="74.5290%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="74.2790%" y="693" width="0.0779%" height="15" fill="rgb(253,204,39)" fg:x="953" fg:w="1"/><text x="74.5290%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="74.2790%" y="677" width="0.0779%" height="15" fill="rgb(250,96,8)" fg:x="953" fg:w="1"/><text x="74.5290%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="74.2790%" y="661" width="0.0779%" height="15" fill="rgb(219,89,54)" fg:x="953" fg:w="1"/><text x="74.5290%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.2790%" y="645" width="0.0779%" height="15" fill="rgb(235,136,39)" fg:x="953" fg:w="1"/><text x="74.5290%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.2790%" y="629" width="0.0779%" height="15" fill="rgb(230,155,37)" fg:x="953" fg:w="1"/><text x="74.5290%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="74.2790%" y="613" width="0.0779%" height="15" fill="rgb(235,199,50)" fg:x="953" fg:w="1"/><text x="74.5290%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="74.2790%" y="597" width="0.0779%" height="15" fill="rgb(227,81,32)" fg:x="953" fg:w="1"/><text x="74.5290%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="74.2790%" y="581" width="0.0779%" height="15" fill="rgb(225,6,28)" fg:x="953" fg:w="1"/><text x="74.5290%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="74.2790%" y="565" width="0.0779%" height="15" fill="rgb(207,211,17)" fg:x="953" fg:w="1"/><text x="74.5290%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.2790%" y="549" width="0.0779%" height="15" fill="rgb(228,31,49)" fg:x="953" fg:w="1"/><text x="74.5290%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="74.2790%" y="533" width="0.0779%" height="15" fill="rgb(230,185,3)" fg:x="953" fg:w="1"/><text x="74.5290%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="74.2790%" y="517" width="0.0779%" height="15" fill="rgb(206,167,15)" fg:x="953" fg:w="1"/><text x="74.5290%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="74.2790%" y="501" width="0.0779%" height="15" fill="rgb(234,2,36)" fg:x="953" fg:w="1"/><text x="74.5290%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="74.2790%" y="485" width="0.0779%" height="15" fill="rgb(239,160,29)" fg:x="953" fg:w="1"/><text x="74.5290%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="74.2790%" y="469" width="0.0779%" height="15" fill="rgb(236,117,2)" fg:x="953" fg:w="1"/><text x="74.5290%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.2790%" y="453" width="0.0779%" height="15" fill="rgb(215,117,37)" fg:x="953" fg:w="1"/><text x="74.5290%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="74.2790%" y="437" width="0.0779%" height="15" fill="rgb(244,48,36)" fg:x="953" fg:w="1"/><text x="74.5290%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="74.2790%" y="421" width="0.0779%" height="15" fill="rgb(223,101,37)" fg:x="953" fg:w="1"/><text x="74.5290%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="74.2790%" y="405" width="0.0779%" height="15" fill="rgb(205,200,1)" fg:x="953" fg:w="1"/><text x="74.5290%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="74.2790%" y="389" width="0.0779%" height="15" fill="rgb(209,193,20)" fg:x="953" fg:w="1"/><text x="74.5290%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.2790%" y="373" width="0.0779%" height="15" fill="rgb(214,63,13)" fg:x="953" fg:w="1"/><text x="74.5290%" y="383.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.3570%" y="629" width="0.1559%" height="15" fill="rgb(253,113,46)" fg:x="954" fg:w="2"/><text x="74.6070%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="74.3570%" y="725" width="0.2338%" height="15" fill="rgb(237,103,34)" fg:x="954" fg:w="3"/><text x="74.6070%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="74.3570%" y="709" width="0.2338%" height="15" fill="rgb(223,38,25)" fg:x="954" fg:w="3"/><text x="74.6070%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.23%)</title><rect x="74.3570%" y="693" width="0.2338%" height="15" fill="rgb(251,32,32)" fg:x="954" fg:w="3"/><text x="74.6070%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.23%)</title><rect x="74.3570%" y="677" width="0.2338%" height="15" fill="rgb(228,65,22)" fg:x="954" fg:w="3"/><text x="74.6070%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.23%)</title><rect x="74.3570%" y="661" width="0.2338%" height="15" fill="rgb(205,11,46)" fg:x="954" fg:w="3"/><text x="74.6070%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.23%)</title><rect x="74.3570%" y="645" width="0.2338%" height="15" fill="rgb(220,35,2)" fg:x="954" fg:w="3"/><text x="74.6070%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.5129%" y="629" width="0.0779%" height="15" fill="rgb(217,151,17)" fg:x="956" fg:w="1"/><text x="74.7629%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="74.5129%" y="613" width="0.0779%" height="15" fill="rgb(243,227,35)" fg:x="956" fg:w="1"/><text x="74.7629%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="74.5908%" y="709" width="0.0779%" height="15" fill="rgb(214,0,34)" fg:x="957" fg:w="1"/><text x="74.8408%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="74.5908%" y="693" width="0.0779%" height="15" fill="rgb(209,42,37)" fg:x="957" fg:w="1"/><text x="74.8408%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.5908%" y="677" width="0.0779%" height="15" fill="rgb(251,176,30)" fg:x="957" fg:w="1"/><text x="74.8408%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.5908%" y="661" width="0.0779%" height="15" fill="rgb(223,64,40)" fg:x="957" fg:w="1"/><text x="74.8408%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.5908%" y="645" width="0.0779%" height="15" fill="rgb(227,180,23)" fg:x="957" fg:w="1"/><text x="74.8408%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5908%" y="629" width="0.0779%" height="15" fill="rgb(220,137,31)" fg:x="957" fg:w="1"/><text x="74.8408%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5908%" y="613" width="0.0779%" height="15" fill="rgb(245,124,25)" fg:x="957" fg:w="1"/><text x="74.8408%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5908%" y="597" width="0.0779%" height="15" fill="rgb(217,157,5)" fg:x="957" fg:w="1"/><text x="74.8408%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5908%" y="581" width="0.0779%" height="15" fill="rgb(225,59,2)" fg:x="957" fg:w="1"/><text x="74.8408%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.5908%" y="565" width="0.0779%" height="15" fill="rgb(220,182,9)" fg:x="957" fg:w="1"/><text x="74.8408%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5908%" y="549" width="0.0779%" height="15" fill="rgb(249,54,24)" fg:x="957" fg:w="1"/><text x="74.8408%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5908%" y="533" width="0.0779%" height="15" fill="rgb(216,89,17)" fg:x="957" fg:w="1"/><text x="74.8408%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5908%" y="517" width="0.0779%" height="15" fill="rgb(245,20,45)" fg:x="957" fg:w="1"/><text x="74.8408%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5908%" y="501" width="0.0779%" height="15" fill="rgb(230,83,14)" fg:x="957" fg:w="1"/><text x="74.8408%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5908%" y="485" width="0.0779%" height="15" fill="rgb(246,109,11)" fg:x="957" fg:w="1"/><text x="74.8408%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="74.5908%" y="469" width="0.0779%" height="15" fill="rgb(235,85,23)" fg:x="957" fg:w="1"/><text x="74.8408%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="74.6687%" y="709" width="0.0779%" height="15" fill="rgb(215,101,36)" fg:x="958" fg:w="1"/><text x="74.9187%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="74.6687%" y="693" width="0.0779%" height="15" fill="rgb(228,140,31)" fg:x="958" fg:w="1"/><text x="74.9187%" y="703.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6687%" y="677" width="0.0779%" height="15" fill="rgb(234,162,37)" fg:x="958" fg:w="1"/><text x="74.9187%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6687%" y="661" width="0.0779%" height="15" fill="rgb(221,0,24)" fg:x="958" fg:w="1"/><text x="74.9187%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="74.6687%" y="645" width="0.0779%" height="15" fill="rgb(230,161,41)" fg:x="958" fg:w="1"/><text x="74.9187%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="74.6687%" y="629" width="0.0779%" height="15" fill="rgb(224,46,24)" fg:x="958" fg:w="1"/><text x="74.9187%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.6687%" y="613" width="0.0779%" height="15" fill="rgb(205,59,32)" fg:x="958" fg:w="1"/><text x="74.9187%" y="623.50"></text></g><g><title>kernel::model::scopes::Props::property_named (1 samples, 0.08%)</title><rect x="74.7467%" y="645" width="0.0779%" height="15" fill="rgb(239,31,20)" fg:x="959" fg:w="1"/><text x="74.9967%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.8246%" y="549" width="0.0779%" height="15" fill="rgb(233,149,44)" fg:x="960" fg:w="1"/><text x="75.0746%" y="559.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="74.8246%" y="533" width="0.0779%" height="15" fill="rgb(243,47,26)" fg:x="960" fg:w="1"/><text x="75.0746%" y="543.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.8246%" y="517" width="0.0779%" height="15" fill="rgb(233,107,5)" fg:x="960" fg:w="1"/><text x="75.0746%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="74.7467%" y="661" width="0.2338%" height="15" fill="rgb(248,140,33)" fg:x="959" fg:w="3"/><text x="74.9967%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="74.8246%" y="645" width="0.1559%" height="15" fill="rgb(228,178,19)" fg:x="960" fg:w="2"/><text x="75.0746%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="74.8246%" y="629" width="0.1559%" height="15" fill="rgb(224,39,49)" fg:x="960" fg:w="2"/><text x="75.0746%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="74.8246%" y="613" width="0.1559%" height="15" fill="rgb(246,56,47)" fg:x="960" fg:w="2"/><text x="75.0746%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.8246%" y="597" width="0.1559%" height="15" fill="rgb(220,73,27)" fg:x="960" fg:w="2"/><text x="75.0746%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.8246%" y="581" width="0.1559%" height="15" fill="rgb(239,112,21)" fg:x="960" fg:w="2"/><text x="75.0746%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.8246%" y="565" width="0.1559%" height="15" fill="rgb(253,14,51)" fg:x="960" fg:w="2"/><text x="75.0746%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9026%" y="549" width="0.0779%" height="15" fill="rgb(215,58,12)" fg:x="961" fg:w="1"/><text x="75.1526%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.9026%" y="533" width="0.0779%" height="15" fill="rgb(207,181,19)" fg:x="961" fg:w="1"/><text x="75.1526%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.9026%" y="517" width="0.0779%" height="15" fill="rgb(211,214,34)" fg:x="961" fg:w="1"/><text x="75.1526%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.9026%" y="501" width="0.0779%" height="15" fill="rgb(243,124,39)" fg:x="961" fg:w="1"/><text x="75.1526%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.9026%" y="485" width="0.0779%" height="15" fill="rgb(248,135,21)" fg:x="961" fg:w="1"/><text x="75.1526%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9026%" y="469" width="0.0779%" height="15" fill="rgb(245,218,3)" fg:x="961" fg:w="1"/><text x="75.1526%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.9026%" y="453" width="0.0779%" height="15" fill="rgb(225,144,22)" fg:x="961" fg:w="1"/><text x="75.1526%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.9026%" y="437" width="0.0779%" height="15" fill="rgb(250,90,15)" fg:x="961" fg:w="1"/><text x="75.1526%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.9026%" y="421" width="0.0779%" height="15" fill="rgb(224,64,29)" fg:x="961" fg:w="1"/><text x="75.1526%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.9026%" y="405" width="0.0779%" height="15" fill="rgb(217,50,47)" fg:x="961" fg:w="1"/><text x="75.1526%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.9026%" y="389" width="0.0779%" height="15" fill="rgb(231,159,47)" fg:x="961" fg:w="1"/><text x="75.1526%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.9026%" y="373" width="0.0779%" height="15" fill="rgb(213,89,29)" fg:x="961" fg:w="1"/><text x="75.1526%" y="383.50"></text></g><g><title>plugins_core::build::Build::holding (9 samples, 0.70%)</title><rect x="74.3570%" y="741" width="0.7015%" height="15" fill="rgb(243,90,23)" fg:x="954" fg:w="9"/><text x="74.6070%" y="751.50"></text></g><g><title>plugins_core::tools::set_container (6 samples, 0.47%)</title><rect x="74.5908%" y="725" width="0.4677%" height="15" fill="rgb(213,21,6)" fg:x="957" fg:w="6"/><text x="74.8408%" y="735.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.31%)</title><rect x="74.7467%" y="709" width="0.3118%" height="15" fill="rgb(237,139,17)" fg:x="959" fg:w="4"/><text x="74.9967%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="74.7467%" y="693" width="0.3118%" height="15" fill="rgb(250,147,17)" fg:x="959" fg:w="4"/><text x="74.9967%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="74.7467%" y="677" width="0.3118%" height="15" fill="rgb(212,208,42)" fg:x="959" fg:w="4"/><text x="74.9967%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.9805%" y="661" width="0.0779%" height="15" fill="rgb(215,229,40)" fg:x="962" fg:w="1"/><text x="75.2305%" y="671.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="74.9805%" y="645" width="0.0779%" height="15" fill="rgb(206,204,1)" fg:x="962" fg:w="1"/><text x="75.2305%" y="655.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="74.9805%" y="629" width="0.0779%" height="15" fill="rgb(230,62,32)" fg:x="962" fg:w="1"/><text x="75.2305%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9805%" y="613" width="0.0779%" height="15" fill="rgb(223,22,42)" fg:x="962" fg:w="1"/><text x="75.2305%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9805%" y="597" width="0.0779%" height="15" fill="rgb(244,6,23)" fg:x="962" fg:w="1"/><text x="75.2305%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.9805%" y="581" width="0.0779%" height="15" fill="rgb(240,221,42)" fg:x="962" fg:w="1"/><text x="75.2305%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.9805%" y="565" width="0.0779%" height="15" fill="rgb(222,74,7)" fg:x="962" fg:w="1"/><text x="75.2305%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="75.0585%" y="741" width="0.0779%" height="15" fill="rgb(227,191,38)" fg:x="963" fg:w="1"/><text x="75.3085%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="75.0585%" y="725" width="0.0779%" height="15" fill="rgb(227,89,34)" fg:x="963" fg:w="1"/><text x="75.3085%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="75.0585%" y="709" width="0.0779%" height="15" fill="rgb(215,153,25)" fg:x="963" fg:w="1"/><text x="75.3085%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="75.0585%" y="693" width="0.0779%" height="15" fill="rgb(215,153,46)" fg:x="963" fg:w="1"/><text x="75.3085%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.0585%" y="677" width="0.0779%" height="15" fill="rgb(242,38,52)" fg:x="963" fg:w="1"/><text x="75.3085%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="75.0585%" y="661" width="0.0779%" height="15" fill="rgb(218,112,4)" fg:x="963" fg:w="1"/><text x="75.3085%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.0585%" y="645" width="0.0779%" height="15" fill="rgb(231,210,31)" fg:x="963" fg:w="1"/><text x="75.3085%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0585%" y="629" width="0.0779%" height="15" fill="rgb(245,223,36)" fg:x="963" fg:w="1"/><text x="75.3085%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0585%" y="613" width="0.0779%" height="15" fill="rgb(246,41,2)" fg:x="963" fg:w="1"/><text x="75.3085%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.0585%" y="597" width="0.0779%" height="15" fill="rgb(227,51,31)" fg:x="963" fg:w="1"/><text x="75.3085%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.0585%" y="581" width="0.0779%" height="15" fill="rgb(222,95,26)" fg:x="963" fg:w="1"/><text x="75.3085%" y="591.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="75.0585%" y="565" width="0.0779%" height="15" fill="rgb(224,190,1)" fg:x="963" fg:w="1"/><text x="75.3085%" y="575.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="75.1364%" y="741" width="0.0779%" height="15" fill="rgb(209,90,42)" fg:x="964" fg:w="1"/><text x="75.3864%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="75.1364%" y="725" width="0.0779%" height="15" fill="rgb(232,225,50)" fg:x="964" fg:w="1"/><text x="75.3864%" y="735.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="75.1364%" y="709" width="0.0779%" height="15" fill="rgb(239,89,47)" fg:x="964" fg:w="1"/><text x="75.3864%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="75.1364%" y="693" width="0.0779%" height="15" fill="rgb(230,212,50)" fg:x="964" fg:w="1"/><text x="75.3864%" y="703.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1364%" y="677" width="0.0779%" height="15" fill="rgb(252,1,27)" fg:x="964" fg:w="1"/><text x="75.3864%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1364%" y="661" width="0.0779%" height="15" fill="rgb(237,179,41)" fg:x="964" fg:w="1"/><text x="75.3864%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.1364%" y="645" width="0.0779%" height="15" fill="rgb(214,151,37)" fg:x="964" fg:w="1"/><text x="75.3864%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.1364%" y="629" width="0.0779%" height="15" fill="rgb(211,74,11)" fg:x="964" fg:w="1"/><text x="75.3864%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.1364%" y="613" width="0.0779%" height="15" fill="rgb(242,21,21)" fg:x="964" fg:w="1"/><text x="75.3864%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="75.1364%" y="597" width="0.0779%" height="15" fill="rgb(226,106,43)" fg:x="964" fg:w="1"/><text x="75.3864%" y="607.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="75.2143%" y="661" width="0.0779%" height="15" fill="rgb(229,162,39)" fg:x="965" fg:w="1"/><text x="75.4643%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.2143%" y="645" width="0.0779%" height="15" fill="rgb(228,159,25)" fg:x="965" fg:w="1"/><text x="75.4643%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.2143%" y="629" width="0.0779%" height="15" fill="rgb(237,32,23)" fg:x="965" fg:w="1"/><text x="75.4643%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.2143%" y="613" width="0.0779%" height="15" fill="rgb(212,35,32)" fg:x="965" fg:w="1"/><text x="75.4643%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.2923%" y="629" width="0.0779%" height="15" fill="rgb(215,199,1)" fg:x="966" fg:w="1"/><text x="75.5423%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2923%" y="613" width="0.0779%" height="15" fill="rgb(215,67,13)" fg:x="966" fg:w="1"/><text x="75.5423%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2923%" y="597" width="0.0779%" height="15" fill="rgb(216,20,47)" fg:x="966" fg:w="1"/><text x="75.5423%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.2923%" y="581" width="0.0779%" height="15" fill="rgb(249,183,48)" fg:x="966" fg:w="1"/><text x="75.5423%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.2923%" y="565" width="0.0779%" height="15" fill="rgb(208,86,37)" fg:x="966" fg:w="1"/><text x="75.5423%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.23%)</title><rect x="75.2143%" y="725" width="0.2338%" height="15" fill="rgb(251,192,7)" fg:x="965" fg:w="3"/><text x="75.4643%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.23%)</title><rect x="75.2143%" y="709" width="0.2338%" height="15" fill="rgb(234,196,3)" fg:x="965" fg:w="3"/><text x="75.4643%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.23%)</title><rect x="75.2143%" y="693" width="0.2338%" height="15" fill="rgb(229,150,39)" fg:x="965" fg:w="3"/><text x="75.4643%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (3 samples, 0.23%)</title><rect x="75.2143%" y="677" width="0.2338%" height="15" fill="rgb(226,19,29)" fg:x="965" fg:w="3"/><text x="75.4643%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (2 samples, 0.16%)</title><rect x="75.2923%" y="661" width="0.1559%" height="15" fill="rgb(226,222,2)" fg:x="966" fg:w="2"/><text x="75.5423%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="75.2923%" y="645" width="0.1559%" height="15" fill="rgb(235,85,29)" fg:x="966" fg:w="2"/><text x="75.5423%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="629" width="0.0779%" height="15" fill="rgb(237,194,43)" fg:x="967" fg:w="1"/><text x="75.6202%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="613" width="0.0779%" height="15" fill="rgb(211,4,42)" fg:x="967" fg:w="1"/><text x="75.6202%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="597" width="0.0779%" height="15" fill="rgb(221,80,37)" fg:x="967" fg:w="1"/><text x="75.6202%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="581" width="0.0779%" height="15" fill="rgb(222,47,31)" fg:x="967" fg:w="1"/><text x="75.6202%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="565" width="0.0779%" height="15" fill="rgb(249,82,52)" fg:x="967" fg:w="1"/><text x="75.6202%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="549" width="0.0779%" height="15" fill="rgb(218,203,2)" fg:x="967" fg:w="1"/><text x="75.6202%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="75.3702%" y="533" width="0.0779%" height="15" fill="rgb(210,175,14)" fg:x="967" fg:w="1"/><text x="75.6202%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="75.3702%" y="517" width="0.0779%" height="15" fill="rgb(216,210,12)" fg:x="967" fg:w="1"/><text x="75.6202%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="75.4482%" y="709" width="0.0779%" height="15" fill="rgb(229,120,18)" fg:x="968" fg:w="1"/><text x="75.6982%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="75.4482%" y="693" width="0.0779%" height="15" fill="rgb(231,174,12)" fg:x="968" fg:w="1"/><text x="75.6982%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="75.4482%" y="677" width="0.0779%" height="15" fill="rgb(214,101,53)" fg:x="968" fg:w="1"/><text x="75.6982%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="75.4482%" y="661" width="0.0779%" height="15" fill="rgb(246,89,43)" fg:x="968" fg:w="1"/><text x="75.6982%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.4482%" y="645" width="0.0779%" height="15" fill="rgb(222,9,51)" fg:x="968" fg:w="1"/><text x="75.6982%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.4482%" y="629" width="0.0779%" height="15" fill="rgb(252,221,9)" fg:x="968" fg:w="1"/><text x="75.6982%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4482%" y="613" width="0.0779%" height="15" fill="rgb(248,28,15)" fg:x="968" fg:w="1"/><text x="75.6982%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4482%" y="597" width="0.0779%" height="15" fill="rgb(213,54,52)" fg:x="968" fg:w="1"/><text x="75.6982%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4482%" y="581" width="0.0779%" height="15" fill="rgb(240,3,45)" fg:x="968" fg:w="1"/><text x="75.6982%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4482%" y="565" width="0.0779%" height="15" fill="rgb(239,138,24)" fg:x="968" fg:w="1"/><text x="75.6982%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.4482%" y="549" width="0.0779%" height="15" fill="rgb(233,45,54)" fg:x="968" fg:w="1"/><text x="75.6982%" y="559.50"></text></g><g><title>plugins_core::build::Build::occupying (5 samples, 0.39%)</title><rect x="75.2143%" y="741" width="0.3897%" height="15" fill="rgb(220,131,2)" fg:x="965" fg:w="5"/><text x="75.4643%" y="751.50"></text></g><g><title>plugins_core::tools::set_occupying (2 samples, 0.16%)</title><rect x="75.4482%" y="725" width="0.1559%" height="15" fill="rgb(240,154,36)" fg:x="968" fg:w="2"/><text x="75.6982%" y="735.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="75.5261%" y="709" width="0.0779%" height="15" fill="rgb(251,221,1)" fg:x="969" fg:w="1"/><text x="75.7761%" y="719.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.5261%" y="693" width="0.0779%" height="15" fill="rgb(225,217,1)" fg:x="969" fg:w="1"/><text x="75.7761%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="75.5261%" y="677" width="0.0779%" height="15" fill="rgb(241,105,49)" fg:x="969" fg:w="1"/><text x="75.7761%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="75.5261%" y="661" width="0.0779%" height="15" fill="rgb(215,44,32)" fg:x="969" fg:w="1"/><text x="75.7761%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="75.6041%" y="677" width="0.0779%" height="15" fill="rgb(213,222,14)" fg:x="970" fg:w="1"/><text x="75.8541%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="75.6041%" y="661" width="0.0779%" height="15" fill="rgb(207,99,52)" fg:x="970" fg:w="1"/><text x="75.8541%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="75.6041%" y="645" width="0.0779%" height="15" fill="rgb(214,208,52)" fg:x="970" fg:w="1"/><text x="75.8541%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="75.6041%" y="629" width="0.0779%" height="15" fill="rgb(244,169,0)" fg:x="970" fg:w="1"/><text x="75.8541%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6041%" y="613" width="0.0779%" height="15" fill="rgb(216,193,37)" fg:x="970" fg:w="1"/><text x="75.8541%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6041%" y="597" width="0.0779%" height="15" fill="rgb(212,158,10)" fg:x="970" fg:w="1"/><text x="75.8541%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.6041%" y="581" width="0.0779%" height="15" fill="rgb(213,110,20)" fg:x="970" fg:w="1"/><text x="75.8541%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="75.6041%" y="725" width="0.1559%" height="15" fill="rgb(226,5,42)" fg:x="970" fg:w="2"/><text x="75.8541%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="75.6041%" y="709" width="0.1559%" height="15" fill="rgb(211,93,8)" fg:x="970" fg:w="2"/><text x="75.8541%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="75.6041%" y="693" width="0.1559%" height="15" fill="rgb(240,208,12)" fg:x="970" fg:w="2"/><text x="75.8541%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="75.6820%" y="677" width="0.0779%" height="15" fill="rgb(233,127,50)" fg:x="971" fg:w="1"/><text x="75.9320%" y="687.50"></text></g><g><title>kernel::model::scopes::save_props (1 samples, 0.08%)</title><rect x="75.6820%" y="661" width="0.0779%" height="15" fill="rgb(227,199,53)" fg:x="971" fg:w="1"/><text x="75.9320%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (1 samples, 0.08%)</title><rect x="75.6820%" y="645" width="0.0779%" height="15" fill="rgb(235,199,10)" fg:x="971" fg:w="1"/><text x="75.9320%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6820%" y="629" width="0.0779%" height="15" fill="rgb(228,148,35)" fg:x="971" fg:w="1"/><text x="75.9320%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6820%" y="613" width="0.0779%" height="15" fill="rgb(217,87,19)" fg:x="971" fg:w="1"/><text x="75.9320%" y="623.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6820%" y="597" width="0.0779%" height="15" fill="rgb(239,9,32)" fg:x="971" fg:w="1"/><text x="75.9320%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6820%" y="581" width="0.0779%" height="15" fill="rgb(229,101,29)" fg:x="971" fg:w="1"/><text x="75.9320%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="75.6820%" y="565" width="0.0779%" height="15" fill="rgb(208,143,26)" fg:x="971" fg:w="1"/><text x="75.9320%" y="575.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::ser::Serialize for kernel::model::scopes::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="75.6820%" y="549" width="0.0779%" height="15" fill="rgb(214,10,2)" fg:x="971" fg:w="1"/><text x="75.9320%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="75.6820%" y="533" width="0.0779%" height="15" fill="rgb(254,203,30)" fg:x="971" fg:w="1"/><text x="75.9320%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6820%" y="517" width="0.0779%" height="15" fill="rgb(242,45,3)" fg:x="971" fg:w="1"/><text x="75.9320%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.6820%" y="501" width="0.0779%" height="15" fill="rgb(209,146,51)" fg:x="971" fg:w="1"/><text x="75.9320%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.6820%" y="485" width="0.0779%" height="15" fill="rgb(222,80,5)" fg:x="971" fg:w="1"/><text x="75.9320%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (65 samples, 5.07%)</title><rect x="70.7716%" y="757" width="5.0663%" height="15" fill="rgb(252,80,35)" fg:x="908" fg:w="65"/><text x="71.0216%" y="767.50">plugin..</text></g><g><title>plugins_core::build::Build::with_username (3 samples, 0.23%)</title><rect x="75.6041%" y="741" width="0.2338%" height="15" fill="rgb(246,125,28)" fg:x="970" fg:w="3"/><text x="75.8541%" y="751.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (1 samples, 0.08%)</title><rect x="75.7599%" y="725" width="0.0779%" height="15" fill="rgb(224,143,51)" fg:x="972" fg:w="1"/><text x="76.0099%" y="735.50"></text></g><g><title>engine::users::model::add_username_to_key (1 samples, 0.08%)</title><rect x="75.7599%" y="709" width="0.0779%" height="15" fill="rgb(205,24,17)" fg:x="972" fg:w="1"/><text x="76.0099%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="75.7599%" y="693" width="0.0779%" height="15" fill="rgb(253,128,30)" fg:x="972" fg:w="1"/><text x="76.0099%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="75.7599%" y="677" width="0.0779%" height="15" fill="rgb(214,153,25)" fg:x="972" fg:w="1"/><text x="76.0099%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="75.7599%" y="661" width="0.0779%" height="15" fill="rgb(214,4,28)" fg:x="972" fg:w="1"/><text x="76.0099%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.7599%" y="645" width="0.0779%" height="15" fill="rgb(235,179,52)" fg:x="972" fg:w="1"/><text x="76.0099%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.9158%" y="629" width="0.0779%" height="15" fill="rgb(233,27,42)" fg:x="974" fg:w="1"/><text x="76.1658%" y="639.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (107 samples, 8.34%)</title><rect x="67.7319%" y="773" width="8.3398%" height="15" fill="rgb(238,35,25)" fg:x="869" fg:w="107"/><text x="67.9819%" y="783.50">&lt;tests::Hold..</text></g><g><title>plugins_core::build::BuildSurroundings::make (3 samples, 0.23%)</title><rect x="75.8379%" y="757" width="0.2338%" height="15" fill="rgb(227,44,31)" fg:x="973" fg:w="3"/><text x="76.0879%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (3 samples, 0.23%)</title><rect x="75.8379%" y="741" width="0.2338%" height="15" fill="rgb(232,201,13)" fg:x="973" fg:w="3"/><text x="76.0879%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="75.9158%" y="725" width="0.1559%" height="15" fill="rgb(224,172,52)" fg:x="974" fg:w="2"/><text x="76.1658%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="75.9158%" y="709" width="0.1559%" height="15" fill="rgb(214,27,26)" fg:x="974" fg:w="2"/><text x="76.1658%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="75.9158%" y="693" width="0.1559%" height="15" fill="rgb(210,185,52)" fg:x="974" fg:w="2"/><text x="76.1658%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="75.9158%" y="677" width="0.1559%" height="15" fill="rgb(249,59,32)" fg:x="974" fg:w="2"/><text x="76.1658%" y="687.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="75.9158%" y="661" width="0.1559%" height="15" fill="rgb(242,209,18)" fg:x="974" fg:w="2"/><text x="76.1658%" y="671.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="75.9158%" y="645" width="0.1559%" height="15" fill="rgb(229,0,18)" fg:x="974" fg:w="2"/><text x="76.1658%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9938%" y="629" width="0.0779%" height="15" fill="rgb(217,138,29)" fg:x="975" fg:w="1"/><text x="76.2438%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9938%" y="613" width="0.0779%" height="15" fill="rgb(215,72,42)" fg:x="975" fg:w="1"/><text x="76.2438%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.9938%" y="597" width="0.0779%" height="15" fill="rgb(254,115,11)" fg:x="975" fg:w="1"/><text x="76.2438%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9938%" y="581" width="0.0779%" height="15" fill="rgb(205,133,39)" fg:x="975" fg:w="1"/><text x="76.2438%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.9938%" y="565" width="0.0779%" height="15" fill="rgb(211,36,27)" fg:x="975" fg:w="1"/><text x="76.2438%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.9938%" y="549" width="0.0779%" height="15" fill="rgb(221,48,10)" fg:x="975" fg:w="1"/><text x="76.2438%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::moving::model::Occupyable&gt;&gt; (1 samples, 0.08%)</title><rect x="76.1496%" y="725" width="0.0779%" height="15" fill="rgb(230,172,50)" fg:x="977" fg:w="1"/><text x="76.3996%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.2276%" y="693" width="0.0779%" height="15" fill="rgb(249,72,18)" fg:x="978" fg:w="1"/><text x="76.4776%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2276%" y="677" width="0.0779%" height="15" fill="rgb(237,58,48)" fg:x="978" fg:w="1"/><text x="76.4776%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="76.2276%" y="661" width="0.0779%" height="15" fill="rgb(242,123,3)" fg:x="978" fg:w="1"/><text x="76.4776%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="76.2276%" y="645" width="0.0779%" height="15" fill="rgb(232,111,32)" fg:x="978" fg:w="1"/><text x="76.4776%" y="655.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (3 samples, 0.23%)</title><rect x="76.1496%" y="757" width="0.2338%" height="15" fill="rgb(229,108,3)" fg:x="977" fg:w="3"/><text x="76.3996%" y="767.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (3 samples, 0.23%)</title><rect x="76.1496%" y="741" width="0.2338%" height="15" fill="rgb(222,158,10)" fg:x="977" fg:w="3"/><text x="76.3996%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="76.2276%" y="725" width="0.1559%" height="15" fill="rgb(205,34,49)" fg:x="978" fg:w="2"/><text x="76.4776%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="76.2276%" y="709" width="0.1559%" height="15" fill="rgb(232,21,14)" fg:x="978" fg:w="2"/><text x="76.4776%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3055%" y="693" width="0.0779%" height="15" fill="rgb(229,127,44)" fg:x="979" fg:w="1"/><text x="76.5555%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3055%" y="677" width="0.0779%" height="15" fill="rgb(232,171,4)" fg:x="979" fg:w="1"/><text x="76.5555%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="76.3055%" y="661" width="0.0779%" height="15" fill="rgb(250,92,16)" fg:x="979" fg:w="1"/><text x="76.5555%" y="671.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.3055%" y="645" width="0.0779%" height="15" fill="rgb(230,103,38)" fg:x="979" fg:w="1"/><text x="76.5555%" y="655.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="76.3055%" y="629" width="0.0779%" height="15" fill="rgb(253,167,9)" fg:x="979" fg:w="1"/><text x="76.5555%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.3055%" y="613" width="0.0779%" height="15" fill="rgb(222,118,11)" fg:x="979" fg:w="1"/><text x="76.5555%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.3055%" y="597" width="0.0779%" height="15" fill="rgb(240,202,0)" fg:x="979" fg:w="1"/><text x="76.5555%" y="607.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="76.3055%" y="581" width="0.0779%" height="15" fill="rgb(236,124,4)" fg:x="979" fg:w="1"/><text x="76.5555%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="76.3835%" y="741" width="0.0779%" height="15" fill="rgb(244,128,18)" fg:x="980" fg:w="1"/><text x="76.6335%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.3835%" y="725" width="0.0779%" height="15" fill="rgb(231,206,5)" fg:x="980" fg:w="1"/><text x="76.6335%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::EnteredSpan&gt; (1 samples, 0.08%)</title><rect x="76.4614%" y="693" width="0.0779%" height="15" fill="rgb(237,111,8)" fg:x="981" fg:w="1"/><text x="76.7114%" y="703.50"></text></g><g><title>engine::identifiers::model::get_gid (3 samples, 0.23%)</title><rect x="76.4614%" y="741" width="0.2338%" height="15" fill="rgb(225,127,3)" fg:x="981" fg:w="3"/><text x="76.7114%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.23%)</title><rect x="76.4614%" y="725" width="0.2338%" height="15" fill="rgb(222,85,48)" fg:x="981" fg:w="3"/><text x="76.7114%" y="735.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="76.4614%" y="709" width="0.2338%" height="15" fill="rgb(221,108,37)" fg:x="981" fg:w="3"/><text x="76.7114%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="76.5394%" y="693" width="0.1559%" height="15" fill="rgb(226,169,36)" fg:x="982" fg:w="2"/><text x="76.7894%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="76.6173%" y="677" width="0.0779%" height="15" fill="rgb(237,76,12)" fg:x="983" fg:w="1"/><text x="76.8673%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6173%" y="661" width="0.0779%" height="15" fill="rgb(210,227,32)" fg:x="983" fg:w="1"/><text x="76.8673%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="76.7732%" y="725" width="0.0779%" height="15" fill="rgb(214,117,20)" fg:x="985" fg:w="1"/><text x="77.0232%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="76.7732%" y="709" width="0.0779%" height="15" fill="rgb(234,119,41)" fg:x="985" fg:w="1"/><text x="77.0232%" y="719.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="76.7732%" y="693" width="0.0779%" height="15" fill="rgb(230,130,47)" fg:x="985" fg:w="1"/><text x="77.0232%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="76.8511%" y="693" width="0.0779%" height="15" fill="rgb(215,21,41)" fg:x="986" fg:w="1"/><text x="77.1011%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="76.8511%" y="677" width="0.0779%" height="15" fill="rgb(226,26,53)" fg:x="986" fg:w="1"/><text x="77.1011%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="76.8511%" y="661" width="0.0779%" height="15" fill="rgb(221,92,23)" fg:x="986" fg:w="1"/><text x="77.1011%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="76.8511%" y="645" width="0.0779%" height="15" fill="rgb(213,156,21)" fg:x="986" fg:w="1"/><text x="77.1011%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="76.8511%" y="629" width="0.0779%" height="15" fill="rgb(254,166,29)" fg:x="986" fg:w="1"/><text x="77.1011%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="76.9291%" y="677" width="0.0779%" height="15" fill="rgb(213,71,1)" fg:x="987" fg:w="1"/><text x="77.1791%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.0070%" y="677" width="0.0779%" height="15" fill="rgb(245,8,13)" fg:x="988" fg:w="1"/><text x="77.2570%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.0070%" y="661" width="0.0779%" height="15" fill="rgb(213,32,32)" fg:x="988" fg:w="1"/><text x="77.2570%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.0850%" y="661" width="0.0779%" height="15" fill="rgb(251,86,50)" fg:x="989" fg:w="1"/><text x="77.3350%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.1629%" y="645" width="0.0779%" height="15" fill="rgb(252,92,41)" fg:x="990" fg:w="1"/><text x="77.4129%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.1629%" y="629" width="0.0779%" height="15" fill="rgb(234,70,35)" fg:x="990" fg:w="1"/><text x="77.4129%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.1629%" y="613" width="0.0779%" height="15" fill="rgb(210,157,19)" fg:x="990" fg:w="1"/><text x="77.4129%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.3188%" y="613" width="0.0779%" height="15" fill="rgb(206,20,45)" fg:x="992" fg:w="1"/><text x="77.5688%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.3188%" y="597" width="0.0779%" height="15" fill="rgb(207,34,7)" fg:x="992" fg:w="1"/><text x="77.5688%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.3188%" y="581" width="0.0779%" height="15" fill="rgb(253,151,14)" fg:x="992" fg:w="1"/><text x="77.5688%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.3188%" y="565" width="0.0779%" height="15" fill="rgb(252,1,18)" fg:x="992" fg:w="1"/><text x="77.5688%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="77.3967%" y="597" width="0.0779%" height="15" fill="rgb(214,77,52)" fg:x="993" fg:w="1"/><text x="77.6467%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.3967%" y="581" width="0.0779%" height="15" fill="rgb(254,106,35)" fg:x="993" fg:w="1"/><text x="77.6467%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.47%)</title><rect x="77.0850%" y="677" width="0.4677%" height="15" fill="rgb(212,67,40)" fg:x="989" fg:w="6"/><text x="77.3350%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.39%)</title><rect x="77.1629%" y="661" width="0.3897%" height="15" fill="rgb(228,76,23)" fg:x="990" fg:w="5"/><text x="77.4129%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.31%)</title><rect x="77.2408%" y="645" width="0.3118%" height="15" fill="rgb(250,198,5)" fg:x="991" fg:w="4"/><text x="77.4908%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.23%)</title><rect x="77.3188%" y="629" width="0.2338%" height="15" fill="rgb(209,20,25)" fg:x="992" fg:w="3"/><text x="77.5688%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="77.3967%" y="613" width="0.1559%" height="15" fill="rgb(236,32,4)" fg:x="993" fg:w="2"/><text x="77.6467%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="77.4747%" y="597" width="0.0779%" height="15" fill="rgb(215,31,6)" fg:x="994" fg:w="1"/><text x="77.7247%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.4747%" y="581" width="0.0779%" height="15" fill="rgb(207,186,49)" fg:x="994" fg:w="1"/><text x="77.7247%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.4747%" y="565" width="0.0779%" height="15" fill="rgb(211,212,49)" fg:x="994" fg:w="1"/><text x="77.7247%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.4747%" y="549" width="0.0779%" height="15" fill="rgb(229,51,41)" fg:x="994" fg:w="1"/><text x="77.7247%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (10 samples, 0.78%)</title><rect x="76.8511%" y="709" width="0.7794%" height="15" fill="rgb(205,225,36)" fg:x="986" fg:w="10"/><text x="77.1011%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.70%)</title><rect x="76.9291%" y="693" width="0.7015%" height="15" fill="rgb(209,213,45)" fg:x="987" fg:w="9"/><text x="77.1791%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="77.5526%" y="677" width="0.0779%" height="15" fill="rgb(219,35,49)" fg:x="995" fg:w="1"/><text x="77.8026%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="77.5526%" y="661" width="0.0779%" height="15" fill="rgb(215,205,22)" fg:x="995" fg:w="1"/><text x="77.8026%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="77.5526%" y="645" width="0.0779%" height="15" fill="rgb(248,204,34)" fg:x="995" fg:w="1"/><text x="77.8026%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="77.5526%" y="629" width="0.0779%" height="15" fill="rgb(219,223,31)" fg:x="995" fg:w="1"/><text x="77.8026%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="77.5526%" y="613" width="0.0779%" height="15" fill="rgb(236,14,8)" fg:x="995" fg:w="1"/><text x="77.8026%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="77.5526%" y="597" width="0.0779%" height="15" fill="rgb(243,129,23)" fg:x="995" fg:w="1"/><text x="77.8026%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::Item&gt; (1 samples, 0.08%)</title><rect x="77.6306%" y="709" width="0.0779%" height="15" fill="rgb(205,204,5)" fg:x="996" fg:w="1"/><text x="77.8806%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.7085%" y="677" width="0.0779%" height="15" fill="rgb(244,115,32)" fg:x="997" fg:w="1"/><text x="77.9585%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.8644%" y="645" width="0.0779%" height="15" fill="rgb(229,123,14)" fg:x="999" fg:w="1"/><text x="78.1144%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.9423%" y="645" width="0.0779%" height="15" fill="rgb(250,85,1)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9423%" y="629" width="0.0779%" height="15" fill="rgb(209,141,54)" fg:x="1000" fg:w="1"/><text x="78.1923%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.0203%" y="629" width="0.0779%" height="15" fill="rgb(244,107,39)" fg:x="1001" fg:w="1"/><text x="78.2703%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.0982%" y="629" width="0.0779%" height="15" fill="rgb(230,68,26)" fg:x="1002" fg:w="1"/><text x="78.3482%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.0982%" y="613" width="0.0779%" height="15" fill="rgb(220,178,33)" fg:x="1002" fg:w="1"/><text x="78.3482%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.0982%" y="597" width="0.0779%" height="15" fill="rgb(220,77,53)" fg:x="1002" fg:w="1"/><text x="78.3482%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.62%)</title><rect x="77.7085%" y="709" width="0.6235%" height="15" fill="rgb(224,108,19)" fg:x="997" fg:w="8"/><text x="77.9585%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (8 samples, 0.62%)</title><rect x="77.7085%" y="693" width="0.6235%" height="15" fill="rgb(223,203,27)" fg:x="997" fg:w="8"/><text x="77.9585%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="77.7864%" y="677" width="0.5456%" height="15" fill="rgb(211,32,46)" fg:x="998" fg:w="7"/><text x="78.0364%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.55%)</title><rect x="77.7864%" y="661" width="0.5456%" height="15" fill="rgb(240,101,27)" fg:x="998" fg:w="7"/><text x="78.0364%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="78.0203%" y="645" width="0.3118%" height="15" fill="rgb(217,210,11)" fg:x="1001" fg:w="4"/><text x="78.2703%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.1761%" y="629" width="0.1559%" height="15" fill="rgb(236,130,21)" fg:x="1003" fg:w="2"/><text x="78.4261%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.1761%" y="613" width="0.1559%" height="15" fill="rgb(250,136,8)" fg:x="1003" fg:w="2"/><text x="78.4261%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.1761%" y="597" width="0.1559%" height="15" fill="rgb(243,223,36)" fg:x="1003" fg:w="2"/><text x="78.4261%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.4100%" y="645" width="0.0779%" height="15" fill="rgb(246,184,8)" fg:x="1006" fg:w="1"/><text x="78.6600%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.6438%" y="597" width="0.0779%" height="15" fill="rgb(222,158,36)" fg:x="1009" fg:w="1"/><text x="78.8938%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.39%)</title><rect x="78.4100%" y="677" width="0.3897%" height="15" fill="rgb(210,220,19)" fg:x="1006" fg:w="5"/><text x="78.6600%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.39%)</title><rect x="78.4100%" y="661" width="0.3897%" height="15" fill="rgb(246,44,38)" fg:x="1006" fg:w="5"/><text x="78.6600%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.31%)</title><rect x="78.4879%" y="645" width="0.3118%" height="15" fill="rgb(246,186,14)" fg:x="1007" fg:w="4"/><text x="78.7379%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.23%)</title><rect x="78.5659%" y="629" width="0.2338%" height="15" fill="rgb(233,193,20)" fg:x="1008" fg:w="3"/><text x="78.8159%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="78.6438%" y="613" width="0.1559%" height="15" fill="rgb(215,60,5)" fg:x="1009" fg:w="2"/><text x="78.8938%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="78.7217%" y="597" width="0.0779%" height="15" fill="rgb(207,128,10)" fg:x="1010" fg:w="1"/><text x="78.9717%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7217%" y="581" width="0.0779%" height="15" fill="rgb(238,84,54)" fg:x="1010" fg:w="1"/><text x="78.9717%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="78.7217%" y="565" width="0.0779%" height="15" fill="rgb(213,130,11)" fg:x="1010" fg:w="1"/><text x="78.9717%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::ChangeType&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.7997%" y="677" width="0.0779%" height="15" fill="rgb(235,62,9)" fg:x="1011" fg:w="1"/><text x="79.0497%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7997%" y="661" width="0.0779%" height="15" fill="rgb(222,64,24)" fg:x="1011" fg:w="1"/><text x="79.0497%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="661" width="0.0779%" height="15" fill="rgb(238,193,42)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="645" width="0.0779%" height="15" fill="rgb(243,204,46)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="629" width="0.0779%" height="15" fill="rgb(243,196,11)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="613" width="0.0779%" height="15" fill="rgb(232,77,22)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="597" width="0.0779%" height="15" fill="rgb(215,80,25)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="78.8776%" y="581" width="0.0779%" height="15" fill="rgb(210,173,7)" fg:x="1012" fg:w="1"/><text x="79.1276%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="78.9556%" y="661" width="0.2338%" height="15" fill="rgb(207,101,10)" fg:x="1013" fg:w="3"/><text x="79.2056%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="79.0335%" y="645" width="0.1559%" height="15" fill="rgb(246,57,48)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.0335%" y="629" width="0.1559%" height="15" fill="rgb(236,184,40)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="79.0335%" y="613" width="0.1559%" height="15" fill="rgb(210,205,13)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="79.0335%" y="597" width="0.1559%" height="15" fill="rgb(231,129,42)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="79.0335%" y="581" width="0.1559%" height="15" fill="rgb(220,229,54)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="79.0335%" y="565" width="0.1559%" height="15" fill="rgb(230,192,26)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="79.0335%" y="549" width="0.1559%" height="15" fill="rgb(253,18,30)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="79.0335%" y="533" width="0.1559%" height="15" fill="rgb(216,62,53)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="79.0335%" y="517" width="0.1559%" height="15" fill="rgb(230,79,29)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="79.0335%" y="501" width="0.1559%" height="15" fill="rgb(242,26,26)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="79.0335%" y="485" width="0.1559%" height="15" fill="rgb(227,125,21)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="79.0335%" y="469" width="0.1559%" height="15" fill="rgb(229,93,26)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="79.0335%" y="453" width="0.1559%" height="15" fill="rgb(227,228,8)" fg:x="1014" fg:w="2"/><text x="79.2835%" y="463.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (11 samples, 0.86%)</title><rect x="78.4100%" y="693" width="0.8574%" height="15" fill="rgb(233,56,0)" fg:x="1006" fg:w="11"/><text x="78.6600%" y="703.50"></text></g><g><title>treediff::diff::diff (5 samples, 0.39%)</title><rect x="78.8776%" y="677" width="0.3897%" height="15" fill="rgb(225,185,17)" fg:x="1012" fg:w="5"/><text x="79.1276%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="79.1894%" y="661" width="0.0779%" height="15" fill="rgb(238,202,30)" fg:x="1016" fg:w="1"/><text x="79.4394%" y="671.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="79.1894%" y="645" width="0.0779%" height="15" fill="rgb(236,60,13)" fg:x="1016" fg:w="1"/><text x="79.4394%" y="655.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="79.1894%" y="629" width="0.0779%" height="15" fill="rgb(244,92,0)" fg:x="1016" fg:w="1"/><text x="79.4394%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1894%" y="613" width="0.0779%" height="15" fill="rgb(225,57,15)" fg:x="1016" fg:w="1"/><text x="79.4394%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="79.2673%" y="661" width="0.0779%" height="15" fill="rgb(228,5,28)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.2673%" y="645" width="0.0779%" height="15" fill="rgb(252,34,51)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.2673%" y="629" width="0.0779%" height="15" fill="rgb(235,58,7)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="79.2673%" y="613" width="0.0779%" height="15" fill="rgb(250,132,20)" fg:x="1017" fg:w="1"/><text x="79.5173%" y="623.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="79.3453%" y="661" width="0.0779%" height="15" fill="rgb(217,164,0)" fg:x="1018" fg:w="1"/><text x="79.5953%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="79.3453%" y="645" width="0.0779%" height="15" fill="rgb(208,220,35)" fg:x="1018" fg:w="1"/><text x="79.5953%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.3453%" y="629" width="0.0779%" height="15" fill="rgb(227,42,51)" fg:x="1018" fg:w="1"/><text x="79.5953%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="79.3453%" y="613" width="0.0779%" height="15" fill="rgb(225,146,38)" fg:x="1018" fg:w="1"/><text x="79.5953%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="79.6571%" y="613" width="0.0779%" height="15" fill="rgb(252,108,37)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="79.6571%" y="597" width="0.0779%" height="15" fill="rgb(244,101,24)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="79.6571%" y="581" width="0.0779%" height="15" fill="rgb(213,161,50)" fg:x="1022" fg:w="1"/><text x="79.9071%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.8909%" y="581" width="0.1559%" height="15" fill="rgb(248,159,19)" fg:x="1025" fg:w="2"/><text x="80.1409%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="79.8909%" y="565" width="0.1559%" height="15" fill="rgb(233,179,15)" fg:x="1025" fg:w="2"/><text x="80.1409%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.9688%" y="549" width="0.0779%" height="15" fill="rgb(248,178,3)" fg:x="1026" fg:w="1"/><text x="80.2188%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.1247%" y="517" width="0.1559%" height="15" fill="rgb(245,190,41)" fg:x="1028" fg:w="2"/><text x="80.3747%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="80.2027%" y="501" width="0.0779%" height="15" fill="rgb(218,151,19)" fg:x="1029" fg:w="1"/><text x="80.4527%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.2027%" y="485" width="0.0779%" height="15" fill="rgb(245,25,44)" fg:x="1029" fg:w="1"/><text x="80.4527%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="80.3585%" y="501" width="0.1559%" height="15" fill="rgb(235,172,47)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.3585%" y="485" width="0.1559%" height="15" fill="rgb(246,33,12)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="80.3585%" y="469" width="0.1559%" height="15" fill="rgb(214,124,7)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.3585%" y="453" width="0.1559%" height="15" fill="rgb(246,186,18)" fg:x="1031" fg:w="2"/><text x="80.6085%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.01%)</title><rect x="79.5791%" y="629" width="1.0133%" height="15" fill="rgb(231,94,1)" fg:x="1021" fg:w="13"/><text x="79.8291%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.86%)</title><rect x="79.7350%" y="613" width="0.8574%" height="15" fill="rgb(208,33,48)" fg:x="1023" fg:w="11"/><text x="79.9850%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.70%)</title><rect x="79.8909%" y="597" width="0.7015%" height="15" fill="rgb(208,195,44)" fg:x="1025" fg:w="9"/><text x="80.1409%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="80.0468%" y="581" width="0.5456%" height="15" fill="rgb(226,13,52)" fg:x="1027" fg:w="7"/><text x="80.2968%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="80.0468%" y="565" width="0.5456%" height="15" fill="rgb(217,219,45)" fg:x="1027" fg:w="7"/><text x="80.2968%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="80.0468%" y="549" width="0.5456%" height="15" fill="rgb(223,45,25)" fg:x="1027" fg:w="7"/><text x="80.2968%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.47%)</title><rect x="80.1247%" y="533" width="0.4677%" height="15" fill="rgb(241,163,0)" fg:x="1028" fg:w="6"/><text x="80.3747%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="80.2806%" y="517" width="0.3118%" height="15" fill="rgb(216,68,47)" fg:x="1030" fg:w="4"/><text x="80.5306%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.5144%" y="501" width="0.0779%" height="15" fill="rgb(236,119,45)" fg:x="1033" fg:w="1"/><text x="80.7644%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (19 samples, 1.48%)</title><rect x="79.2673%" y="693" width="1.4809%" height="15" fill="rgb(209,188,24)" fg:x="1017" fg:w="19"/><text x="79.5173%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.48%)</title><rect x="79.2673%" y="677" width="1.4809%" height="15" fill="rgb(221,118,7)" fg:x="1017" fg:w="19"/><text x="79.5173%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 1.33%)</title><rect x="79.4232%" y="661" width="1.3250%" height="15" fill="rgb(213,148,43)" fg:x="1019" fg:w="17"/><text x="79.6732%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.17%)</title><rect x="79.5791%" y="645" width="1.1691%" height="15" fill="rgb(231,21,43)" fg:x="1021" fg:w="15"/><text x="79.8291%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="80.5924%" y="629" width="0.1559%" height="15" fill="rgb(232,213,43)" fg:x="1034" fg:w="2"/><text x="80.8424%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="80.5924%" y="613" width="0.1559%" height="15" fill="rgb(239,145,50)" fg:x="1034" fg:w="2"/><text x="80.8424%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="80.8262%" y="501" width="0.0779%" height="15" fill="rgb(222,131,18)" fg:x="1037" fg:w="1"/><text x="81.0762%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="80.8262%" y="549" width="0.1559%" height="15" fill="rgb(243,181,13)" fg:x="1037" fg:w="2"/><text x="81.0762%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="80.8262%" y="533" width="0.1559%" height="15" fill="rgb(212,74,41)" fg:x="1037" fg:w="2"/><text x="81.0762%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="80.8262%" y="517" width="0.1559%" height="15" fill="rgb(237,143,34)" fg:x="1037" fg:w="2"/><text x="81.0762%" y="527.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="80.9041%" y="501" width="0.0779%" height="15" fill="rgb(228,139,0)" fg:x="1038" fg:w="1"/><text x="81.1541%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="80.9821%" y="533" width="0.1559%" height="15" fill="rgb(227,214,11)" fg:x="1039" fg:w="2"/><text x="81.2321%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="81.0600%" y="517" width="0.0779%" height="15" fill="rgb(228,118,39)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="527.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="81.0600%" y="501" width="0.0779%" height="15" fill="rgb(207,117,22)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="81.0600%" y="485" width="0.0779%" height="15" fill="rgb(225,91,8)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0600%" y="469" width="0.0779%" height="15" fill="rgb(230,219,48)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.0600%" y="453" width="0.0779%" height="15" fill="rgb(244,0,23)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.0600%" y="437" width="0.0779%" height="15" fill="rgb(206,212,23)" fg:x="1040" fg:w="1"/><text x="81.3100%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="80.8262%" y="597" width="0.4677%" height="15" fill="rgb(254,62,10)" fg:x="1037" fg:w="6"/><text x="81.0762%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.47%)</title><rect x="80.8262%" y="581" width="0.4677%" height="15" fill="rgb(236,58,8)" fg:x="1037" fg:w="6"/><text x="81.0762%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.47%)</title><rect x="80.8262%" y="565" width="0.4677%" height="15" fill="rgb(232,212,17)" fg:x="1037" fg:w="6"/><text x="81.0762%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="80.9821%" y="549" width="0.3118%" height="15" fill="rgb(206,132,9)" fg:x="1039" fg:w="4"/><text x="81.2321%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="81.1380%" y="533" width="0.1559%" height="15" fill="rgb(234,97,28)" fg:x="1041" fg:w="2"/><text x="81.3880%" y="543.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="81.2159%" y="517" width="0.0779%" height="15" fill="rgb(254,144,9)" fg:x="1042" fg:w="1"/><text x="81.4659%" y="527.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (2 samples, 0.16%)</title><rect x="81.2938%" y="581" width="0.1559%" height="15" fill="rgb(244,204,43)" fg:x="1043" fg:w="2"/><text x="81.5438%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (11 samples, 0.86%)</title><rect x="80.7482%" y="629" width="0.8574%" height="15" fill="rgb(248,177,16)" fg:x="1036" fg:w="11"/><text x="80.9982%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.78%)</title><rect x="80.8262%" y="613" width="0.7794%" height="15" fill="rgb(219,110,15)" fg:x="1037" fg:w="10"/><text x="81.0762%" y="623.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (4 samples, 0.31%)</title><rect x="81.2938%" y="597" width="0.3118%" height="15" fill="rgb(212,203,25)" fg:x="1043" fg:w="4"/><text x="81.5438%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="81.4497%" y="581" width="0.1559%" height="15" fill="rgb(205,50,1)" fg:x="1045" fg:w="2"/><text x="81.6997%" y="591.50"></text></g><g><title>engine::session::Session::close (72 samples, 5.61%)</title><rect x="76.0717%" y="773" width="5.6118%" height="15" fill="rgb(222,152,41)" fg:x="976" fg:w="72"/><text x="76.3217%" y="783.50">engine:..</text></g><g><title>engine::session::Session::save_entity_changes (68 samples, 5.30%)</title><rect x="76.3835%" y="757" width="5.3001%" height="15" fill="rgb(236,83,3)" fg:x="980" fg:w="68"/><text x="76.6335%" y="767.50">engine..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (64 samples, 4.99%)</title><rect x="76.6952%" y="741" width="4.9883%" height="15" fill="rgb(214,30,54)" fg:x="984" fg:w="64"/><text x="76.9452%" y="751.50">engine..</text></g><g><title>engine::session::SavesEntities::check_for_changes (62 samples, 4.83%)</title><rect x="76.8511%" y="725" width="4.8324%" height="15" fill="rgb(250,117,31)" fg:x="986" fg:w="62"/><text x="77.1011%" y="735.50">engine..</text></g><g><title>kernel::model::any_entity_changes (43 samples, 3.35%)</title><rect x="78.3320%" y="709" width="3.3515%" height="15" fill="rgb(228,77,14)" fg:x="1005" fg:w="43"/><text x="78.5820%" y="719.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (12 samples, 0.94%)</title><rect x="80.7482%" y="693" width="0.9353%" height="15" fill="rgb(241,3,28)" fg:x="1036" fg:w="12"/><text x="80.9982%" y="703.50"></text></g><g><title>serde_json::de::from_trait (12 samples, 0.94%)</title><rect x="80.7482%" y="677" width="0.9353%" height="15" fill="rgb(221,175,52)" fg:x="1036" fg:w="12"/><text x="80.9982%" y="687.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (12 samples, 0.94%)</title><rect x="80.7482%" y="661" width="0.9353%" height="15" fill="rgb(237,91,6)" fg:x="1036" fg:w="12"/><text x="80.9982%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.94%)</title><rect x="80.7482%" y="645" width="0.9353%" height="15" fill="rgb(246,46,42)" fg:x="1036" fg:w="12"/><text x="80.9982%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6056%" y="629" width="0.0779%" height="15" fill="rgb(235,199,0)" fg:x="1047" fg:w="1"/><text x="81.8556%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.6056%" y="613" width="0.0779%" height="15" fill="rgb(224,44,40)" fg:x="1047" fg:w="1"/><text x="81.8556%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.6056%" y="597" width="0.0779%" height="15" fill="rgb(209,24,35)" fg:x="1047" fg:w="1"/><text x="81.8556%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="81.7615%" y="565" width="0.1559%" height="15" fill="rgb(244,46,22)" fg:x="1049" fg:w="2"/><text x="82.0115%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="81.7615%" y="549" width="0.1559%" height="15" fill="rgb(235,99,8)" fg:x="1049" fg:w="2"/><text x="82.0115%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="81.7615%" y="533" width="0.1559%" height="15" fill="rgb(218,127,36)" fg:x="1049" fg:w="2"/><text x="82.0115%" y="543.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="82.0733%" y="517" width="0.0779%" height="15" fill="rgb(238,47,46)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="82.0733%" y="501" width="0.0779%" height="15" fill="rgb(233,65,17)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="82.0733%" y="485" width="0.0779%" height="15" fill="rgb(239,22,33)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="82.0733%" y="469" width="0.0779%" height="15" fill="rgb(243,66,43)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="82.0733%" y="453" width="0.0779%" height="15" fill="rgb(235,210,28)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="82.0733%" y="437" width="0.0779%" height="15" fill="rgb(205,191,50)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.0733%" y="421" width="0.0779%" height="15" fill="rgb(251,217,19)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.0733%" y="405" width="0.0779%" height="15" fill="rgb(205,174,37)" fg:x="1053" fg:w="1"/><text x="82.3233%" y="415.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.55%)</title><rect x="81.7615%" y="581" width="0.5456%" height="15" fill="rgb(212,158,42)" fg:x="1049" fg:w="7"/><text x="82.0115%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (5 samples, 0.39%)</title><rect x="81.9174%" y="565" width="0.3897%" height="15" fill="rgb(212,208,51)" fg:x="1051" fg:w="5"/><text x="82.1674%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.39%)</title><rect x="81.9174%" y="549" width="0.3897%" height="15" fill="rgb(225,198,20)" fg:x="1051" fg:w="5"/><text x="82.1674%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (5 samples, 0.39%)</title><rect x="81.9174%" y="533" width="0.3897%" height="15" fill="rgb(247,41,44)" fg:x="1051" fg:w="5"/><text x="82.1674%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.1512%" y="517" width="0.1559%" height="15" fill="rgb(228,33,41)" fg:x="1054" fg:w="2"/><text x="82.4012%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.1512%" y="501" width="0.1559%" height="15" fill="rgb(215,47,52)" fg:x="1054" fg:w="2"/><text x="82.4012%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="82.2292%" y="485" width="0.0779%" height="15" fill="rgb(248,106,37)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="82.2292%" y="469" width="0.0779%" height="15" fill="rgb(238,91,29)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="82.2292%" y="453" width="0.0779%" height="15" fill="rgb(226,111,40)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.2292%" y="437" width="0.0779%" height="15" fill="rgb(229,159,36)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.2292%" y="421" width="0.0779%" height="15" fill="rgb(221,109,4)" fg:x="1055" fg:w="1"/><text x="82.4792%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3071%" y="565" width="0.0779%" height="15" fill="rgb(236,56,25)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3071%" y="549" width="0.0779%" height="15" fill="rgb(244,113,23)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3071%" y="533" width="0.0779%" height="15" fill="rgb(249,132,2)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.3071%" y="517" width="0.0779%" height="15" fill="rgb(205,185,21)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.3071%" y="501" width="0.0779%" height="15" fill="rgb(245,130,2)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.3071%" y="485" width="0.0779%" height="15" fill="rgb(246,71,26)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.3071%" y="469" width="0.0779%" height="15" fill="rgb(234,194,6)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3071%" y="453" width="0.0779%" height="15" fill="rgb(206,24,32)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.3071%" y="437" width="0.0779%" height="15" fill="rgb(233,7,54)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.3071%" y="421" width="0.0779%" height="15" fill="rgb(252,46,1)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.3071%" y="405" width="0.0779%" height="15" fill="rgb(216,113,53)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.3071%" y="389" width="0.0779%" height="15" fill="rgb(215,40,24)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.3071%" y="373" width="0.0779%" height="15" fill="rgb(233,222,8)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.3071%" y="357" width="0.0779%" height="15" fill="rgb(248,73,28)" fg:x="1056" fg:w="1"/><text x="82.5571%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3850%" y="565" width="0.0779%" height="15" fill="rgb(247,126,28)" fg:x="1057" fg:w="1"/><text x="82.6350%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (11 samples, 0.86%)</title><rect x="81.7615%" y="613" width="0.8574%" height="15" fill="rgb(242,173,54)" fg:x="1049" fg:w="11"/><text x="82.0115%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (11 samples, 0.86%)</title><rect x="81.7615%" y="597" width="0.8574%" height="15" fill="rgb(244,186,22)" fg:x="1049" fg:w="11"/><text x="82.0115%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.31%)</title><rect x="82.3071%" y="581" width="0.3118%" height="15" fill="rgb(231,187,4)" fg:x="1056" fg:w="4"/><text x="82.5571%" y="591.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="82.4630%" y="565" width="0.1559%" height="15" fill="rgb(252,66,47)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="575.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="82.4630%" y="549" width="0.1559%" height="15" fill="rgb(240,228,28)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="82.4630%" y="533" width="0.1559%" height="15" fill="rgb(237,63,43)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.4630%" y="517" width="0.1559%" height="15" fill="rgb(214,1,44)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="82.4630%" y="501" width="0.1559%" height="15" fill="rgb(212,2,46)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="82.4630%" y="485" width="0.1559%" height="15" fill="rgb(213,142,5)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="82.4630%" y="469" width="0.1559%" height="15" fill="rgb(229,135,1)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="82.4630%" y="453" width="0.1559%" height="15" fill="rgb(252,98,38)" fg:x="1058" fg:w="2"/><text x="82.7130%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5409%" y="437" width="0.0779%" height="15" fill="rgb(206,89,40)" fg:x="1059" fg:w="1"/><text x="82.7909%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5409%" y="421" width="0.0779%" height="15" fill="rgb(219,73,36)" fg:x="1059" fg:w="1"/><text x="82.7909%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.5409%" y="405" width="0.0779%" height="15" fill="rgb(207,168,32)" fg:x="1059" fg:w="1"/><text x="82.7909%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.6189%" y="517" width="0.0779%" height="15" fill="rgb(215,113,21)" fg:x="1060" fg:w="1"/><text x="82.8689%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6189%" y="501" width="0.0779%" height="15" fill="rgb(217,144,43)" fg:x="1060" fg:w="1"/><text x="82.8689%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6189%" y="485" width="0.0779%" height="15" fill="rgb(249,48,50)" fg:x="1060" fg:w="1"/><text x="82.8689%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.6189%" y="469" width="0.0779%" height="15" fill="rgb(242,1,26)" fg:x="1060" fg:w="1"/><text x="82.8689%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (3 samples, 0.23%)</title><rect x="82.6189%" y="565" width="0.2338%" height="15" fill="rgb(231,167,42)" fg:x="1060" fg:w="3"/><text x="82.8689%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="82.6189%" y="549" width="0.2338%" height="15" fill="rgb(242,177,45)" fg:x="1060" fg:w="3"/><text x="82.8689%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="82.6189%" y="533" width="0.2338%" height="15" fill="rgb(232,121,42)" fg:x="1060" fg:w="3"/><text x="82.8689%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.6968%" y="517" width="0.1559%" height="15" fill="rgb(205,8,42)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="501" width="0.1559%" height="15" fill="rgb(238,199,24)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.6968%" y="485" width="0.1559%" height="15" fill="rgb(228,112,2)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="469" width="0.1559%" height="15" fill="rgb(215,115,33)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="82.6968%" y="453" width="0.1559%" height="15" fill="rgb(230,209,34)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="437" width="0.1559%" height="15" fill="rgb(246,76,12)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.6968%" y="421" width="0.1559%" height="15" fill="rgb(240,110,9)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="405" width="0.1559%" height="15" fill="rgb(224,94,46)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="82.6968%" y="389" width="0.1559%" height="15" fill="rgb(247,150,22)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="82.6968%" y="373" width="0.1559%" height="15" fill="rgb(249,85,13)" fg:x="1061" fg:w="2"/><text x="82.9468%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.7747%" y="357" width="0.0779%" height="15" fill="rgb(208,77,41)" fg:x="1062" fg:w="1"/><text x="83.0247%" y="367.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (4 samples, 0.31%)</title><rect x="82.6189%" y="597" width="0.3118%" height="15" fill="rgb(240,42,44)" fg:x="1060" fg:w="4"/><text x="82.8689%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.31%)</title><rect x="82.6189%" y="581" width="0.3118%" height="15" fill="rgb(222,10,51)" fg:x="1060" fg:w="4"/><text x="82.8689%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="82.8527%" y="565" width="0.0779%" height="15" fill="rgb(208,146,53)" fg:x="1063" fg:w="1"/><text x="83.1027%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="82.8527%" y="549" width="0.0779%" height="15" fill="rgb(236,162,23)" fg:x="1063" fg:w="1"/><text x="83.1027%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="82.8527%" y="533" width="0.0779%" height="15" fill="rgb(218,66,21)" fg:x="1063" fg:w="1"/><text x="83.1027%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="82.9306%" y="597" width="0.0779%" height="15" fill="rgb(233,6,47)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="607.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9306%" y="581" width="0.0779%" height="15" fill="rgb(236,59,51)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9306%" y="565" width="0.0779%" height="15" fill="rgb(242,12,46)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="82.9306%" y="549" width="0.0779%" height="15" fill="rgb(243,142,19)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="82.9306%" y="533" width="0.0779%" height="15" fill="rgb(217,28,17)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="82.9306%" y="517" width="0.0779%" height="15" fill="rgb(228,2,27)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="82.9306%" y="501" width="0.0779%" height="15" fill="rgb(214,221,4)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9306%" y="485" width="0.0779%" height="15" fill="rgb(224,69,26)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="82.9306%" y="469" width="0.0779%" height="15" fill="rgb(219,70,4)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="82.9306%" y="453" width="0.0779%" height="15" fill="rgb(218,157,39)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="82.9306%" y="437" width="0.0779%" height="15" fill="rgb(238,36,28)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="82.9306%" y="421" width="0.0779%" height="15" fill="rgb(232,29,0)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="82.9306%" y="405" width="0.0779%" height="15" fill="rgb(243,138,46)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.9306%" y="389" width="0.0779%" height="15" fill="rgb(232,186,41)" fg:x="1064" fg:w="1"/><text x="83.1806%" y="399.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="83.0086%" y="597" width="0.1559%" height="15" fill="rgb(252,166,17)" fg:x="1065" fg:w="2"/><text x="83.2586%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (2 samples, 0.16%)</title><rect x="83.0086%" y="581" width="0.1559%" height="15" fill="rgb(228,179,12)" fg:x="1065" fg:w="2"/><text x="83.2586%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="83.0086%" y="565" width="0.1559%" height="15" fill="rgb(254,205,53)" fg:x="1065" fg:w="2"/><text x="83.2586%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="83.0086%" y="549" width="0.1559%" height="15" fill="rgb(224,163,47)" fg:x="1065" fg:w="2"/><text x="83.2586%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0865%" y="533" width="0.0779%" height="15" fill="rgb(208,43,47)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.0865%" y="517" width="0.0779%" height="15" fill="rgb(224,198,38)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.0865%" y="501" width="0.0779%" height="15" fill="rgb(234,12,40)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.0865%" y="485" width="0.0779%" height="15" fill="rgb(237,212,39)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.0865%" y="469" width="0.0779%" height="15" fill="rgb(253,2,33)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0865%" y="453" width="0.0779%" height="15" fill="rgb(251,29,16)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.0865%" y="437" width="0.0779%" height="15" fill="rgb(214,38,29)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.0865%" y="421" width="0.0779%" height="15" fill="rgb(226,226,29)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.0865%" y="405" width="0.0779%" height="15" fill="rgb(236,79,42)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.0865%" y="389" width="0.0779%" height="15" fill="rgb(222,12,36)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.0865%" y="373" width="0.0779%" height="15" fill="rgb(232,123,44)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0865%" y="357" width="0.0779%" height="15" fill="rgb(234,93,50)" fg:x="1066" fg:w="1"/><text x="83.3365%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="83.1645%" y="581" width="0.0779%" height="15" fill="rgb(210,86,49)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="83.1645%" y="565" width="0.0779%" height="15" fill="rgb(224,91,54)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="83.1645%" y="549" width="0.0779%" height="15" fill="rgb(239,169,9)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="83.1645%" y="533" width="0.0779%" height="15" fill="rgb(238,29,17)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="83.1645%" y="517" width="0.0779%" height="15" fill="rgb(227,160,22)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.1645%" y="501" width="0.0779%" height="15" fill="rgb(231,129,52)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="485" width="0.0779%" height="15" fill="rgb(241,184,9)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.1645%" y="469" width="0.0779%" height="15" fill="rgb(217,43,48)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="453" width="0.0779%" height="15" fill="rgb(213,49,1)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="437" width="0.0779%" height="15" fill="rgb(223,79,39)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="421" width="0.0779%" height="15" fill="rgb(228,227,46)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.1645%" y="405" width="0.0779%" height="15" fill="rgb(245,89,41)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="389" width="0.0779%" height="15" fill="rgb(253,83,21)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="373" width="0.0779%" height="15" fill="rgb(229,116,51)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="83.1645%" y="357" width="0.0779%" height="15" fill="rgb(246,67,26)" fg:x="1067" fg:w="1"/><text x="83.4145%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.2424%" y="549" width="0.0779%" height="15" fill="rgb(250,117,20)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="83.2424%" y="533" width="0.0779%" height="15" fill="rgb(207,88,17)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="83.2424%" y="517" width="0.0779%" height="15" fill="rgb(212,98,36)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="83.2424%" y="501" width="0.0779%" height="15" fill="rgb(221,72,6)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.2424%" y="485" width="0.0779%" height="15" fill="rgb(235,129,19)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.2424%" y="469" width="0.0779%" height="15" fill="rgb(237,200,6)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.2424%" y="453" width="0.0779%" height="15" fill="rgb(239,69,54)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.2424%" y="437" width="0.0779%" height="15" fill="rgb(214,68,45)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.2424%" y="421" width="0.0779%" height="15" fill="rgb(254,160,8)" fg:x="1068" fg:w="1"/><text x="83.4924%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.23%)</title><rect x="83.1645%" y="597" width="0.2338%" height="15" fill="rgb(215,226,31)" fg:x="1067" fg:w="3"/><text x="83.4145%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="83.2424%" y="581" width="0.1559%" height="15" fill="rgb(253,6,35)" fg:x="1068" fg:w="2"/><text x="83.4924%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="83.2424%" y="565" width="0.1559%" height="15" fill="rgb(219,96,42)" fg:x="1068" fg:w="2"/><text x="83.4924%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.3203%" y="549" width="0.0779%" height="15" fill="rgb(207,170,13)" fg:x="1069" fg:w="1"/><text x="83.5703%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="83.3983%" y="581" width="0.0779%" height="15" fill="rgb(239,101,5)" fg:x="1070" fg:w="1"/><text x="83.6483%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.3983%" y="565" width="0.0779%" height="15" fill="rgb(228,183,34)" fg:x="1070" fg:w="1"/><text x="83.6483%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::scopes::Action&gt;::perform (23 samples, 1.79%)</title><rect x="81.7615%" y="629" width="1.7927%" height="15" fill="rgb(205,28,31)" fg:x="1049" fg:w="23"/><text x="82.0115%" y="639.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (12 samples, 0.94%)</title><rect x="82.6189%" y="613" width="0.9353%" height="15" fill="rgb(214,118,50)" fg:x="1060" fg:w="12"/><text x="82.8689%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="83.3983%" y="597" width="0.1559%" height="15" fill="rgb(213,108,51)" fg:x="1070" fg:w="2"/><text x="83.6483%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.4762%" y="581" width="0.0779%" height="15" fill="rgb(238,56,37)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="83.4762%" y="565" width="0.0779%" height="15" fill="rgb(214,136,28)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="83.4762%" y="549" width="0.0779%" height="15" fill="rgb(221,201,54)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="83.4762%" y="533" width="0.0779%" height="15" fill="rgb(228,216,39)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="83.4762%" y="517" width="0.0779%" height="15" fill="rgb(207,229,49)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="527.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="83.4762%" y="501" width="0.0779%" height="15" fill="rgb(224,23,43)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="83.4762%" y="485" width="0.0779%" height="15" fill="rgb(247,97,18)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="83.4762%" y="469" width="0.0779%" height="15" fill="rgb(232,53,32)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.4762%" y="453" width="0.0779%" height="15" fill="rgb(247,38,23)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.4762%" y="437" width="0.0779%" height="15" fill="rgb(228,101,52)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="83.4762%" y="421" width="0.0779%" height="15" fill="rgb(231,45,36)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="83.4762%" y="405" width="0.0779%" height="15" fill="rgb(221,183,50)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="83.4762%" y="389" width="0.0779%" height="15" fill="rgb(251,132,12)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="83.4762%" y="373" width="0.0779%" height="15" fill="rgb(252,50,16)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="83.4762%" y="357" width="0.0779%" height="15" fill="rgb(224,60,15)" fg:x="1071" fg:w="1"/><text x="83.7262%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.5542%" y="581" width="0.0779%" height="15" fill="rgb(254,2,34)" fg:x="1072" fg:w="1"/><text x="83.8042%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7101%" y="565" width="0.0779%" height="15" fill="rgb(232,154,8)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7101%" y="549" width="0.0779%" height="15" fill="rgb(235,190,52)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7101%" y="533" width="0.0779%" height="15" fill="rgb(213,218,38)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.7101%" y="517" width="0.0779%" height="15" fill="rgb(237,50,37)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.7101%" y="501" width="0.0779%" height="15" fill="rgb(235,51,35)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.7101%" y="485" width="0.0779%" height="15" fill="rgb(244,40,52)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.7101%" y="469" width="0.0779%" height="15" fill="rgb(217,225,45)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7101%" y="453" width="0.0779%" height="15" fill="rgb(247,191,36)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.7101%" y="437" width="0.0779%" height="15" fill="rgb(251,144,31)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.7101%" y="421" width="0.0779%" height="15" fill="rgb(227,155,41)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.7101%" y="405" width="0.0779%" height="15" fill="rgb(236,121,36)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.7101%" y="389" width="0.0779%" height="15" fill="rgb(221,128,28)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.7101%" y="373" width="0.0779%" height="15" fill="rgb(249,67,50)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.7101%" y="357" width="0.0779%" height="15" fill="rgb(241,126,38)" fg:x="1074" fg:w="1"/><text x="83.9601%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="83.7880%" y="565" width="0.1559%" height="15" fill="rgb(239,33,14)" fg:x="1075" fg:w="2"/><text x="84.0380%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="83.7880%" y="549" width="0.1559%" height="15" fill="rgb(207,221,54)" fg:x="1075" fg:w="2"/><text x="84.0380%" y="559.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="83.7880%" y="533" width="0.1559%" height="15" fill="rgb(242,138,43)" fg:x="1075" fg:w="2"/><text x="84.0380%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="83.9439%" y="549" width="0.0779%" height="15" fill="rgb(231,118,19)" fg:x="1077" fg:w="1"/><text x="84.1939%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="83.9439%" y="533" width="0.0779%" height="15" fill="rgb(214,128,54)" fg:x="1077" fg:w="1"/><text x="84.1939%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.9439%" y="517" width="0.0779%" height="15" fill="rgb(236,136,6)" fg:x="1077" fg:w="1"/><text x="84.1939%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (7 samples, 0.55%)</title><rect x="83.6321%" y="581" width="0.5456%" height="15" fill="rgb(247,30,38)" fg:x="1073" fg:w="7"/><text x="83.8821%" y="591.50"></text></g><g><title>plugins_core::tools::contained_by (3 samples, 0.23%)</title><rect x="83.9439%" y="565" width="0.2338%" height="15" fill="rgb(249,189,40)" fg:x="1077" fg:w="3"/><text x="84.1939%" y="575.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="84.0218%" y="549" width="0.1559%" height="15" fill="rgb(247,179,7)" fg:x="1078" fg:w="2"/><text x="84.2718%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="84.0218%" y="533" width="0.1559%" height="15" fill="rgb(239,46,52)" fg:x="1078" fg:w="2"/><text x="84.2718%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0998%" y="517" width="0.0779%" height="15" fill="rgb(225,28,52)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0998%" y="501" width="0.0779%" height="15" fill="rgb(217,208,44)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0998%" y="485" width="0.0779%" height="15" fill="rgb(224,11,34)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0998%" y="469" width="0.0779%" height="15" fill="rgb(205,134,17)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.0998%" y="453" width="0.0779%" height="15" fill="rgb(237,125,9)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0998%" y="437" width="0.0779%" height="15" fill="rgb(208,139,47)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.0998%" y="421" width="0.0779%" height="15" fill="rgb(242,5,5)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.0998%" y="405" width="0.0779%" height="15" fill="rgb(218,78,2)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.0998%" y="389" width="0.0779%" height="15" fill="rgb(217,75,16)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.0998%" y="373" width="0.0779%" height="15" fill="rgb(212,56,17)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="84.0998%" y="357" width="0.0779%" height="15" fill="rgb(228,61,29)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="84.0998%" y="341" width="0.0779%" height="15" fill="rgb(247,202,38)" fg:x="1079" fg:w="1"/><text x="84.3498%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="84.1777%" y="549" width="0.0779%" height="15" fill="rgb(211,216,43)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.1777%" y="533" width="0.0779%" height="15" fill="rgb(220,7,49)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="543.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="84.1777%" y="517" width="0.0779%" height="15" fill="rgb(219,158,7)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="527.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="84.1777%" y="501" width="0.0779%" height="15" fill="rgb(206,127,9)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1777%" y="485" width="0.0779%" height="15" fill="rgb(206,103,43)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1777%" y="469" width="0.0779%" height="15" fill="rgb(240,108,41)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1777%" y="453" width="0.0779%" height="15" fill="rgb(252,212,6)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1777%" y="437" width="0.0779%" height="15" fill="rgb(248,105,31)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.1777%" y="421" width="0.0779%" height="15" fill="rgb(241,123,4)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1777%" y="405" width="0.0779%" height="15" fill="rgb(223,74,37)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1777%" y="389" width="0.0779%" height="15" fill="rgb(251,219,28)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1777%" y="373" width="0.0779%" height="15" fill="rgb(218,36,31)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.1777%" y="357" width="0.0779%" height="15" fill="rgb(229,40,15)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.1777%" y="341" width="0.0779%" height="15" fill="rgb(208,138,37)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="84.1777%" y="325" width="0.0779%" height="15" fill="rgb(208,40,52)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.1777%" y="309" width="0.0779%" height="15" fill="rgb(246,181,48)" fg:x="1080" fg:w="1"/><text x="84.4277%" y="319.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (10 samples, 0.78%)</title><rect x="83.5542%" y="613" width="0.7794%" height="15" fill="rgb(253,178,36)" fg:x="1072" fg:w="10"/><text x="83.8042%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (10 samples, 0.78%)</title><rect x="83.5542%" y="597" width="0.7794%" height="15" fill="rgb(210,170,6)" fg:x="1072" fg:w="10"/><text x="83.8042%" y="607.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="84.1777%" y="581" width="0.1559%" height="15" fill="rgb(243,62,22)" fg:x="1080" fg:w="2"/><text x="84.4277%" y="591.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="84.1777%" y="565" width="0.1559%" height="15" fill="rgb(213,145,26)" fg:x="1080" fg:w="2"/><text x="84.4277%" y="575.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="84.2557%" y="549" width="0.0779%" height="15" fill="rgb(237,177,23)" fg:x="1081" fg:w="1"/><text x="84.5057%" y="559.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="84.2557%" y="533" width="0.0779%" height="15" fill="rgb(252,5,24)" fg:x="1081" fg:w="1"/><text x="84.5057%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="84.3336%" y="597" width="0.0779%" height="15" fill="rgb(230,108,54)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="84.3336%" y="581" width="0.0779%" height="15" fill="rgb(252,192,41)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="84.3336%" y="565" width="0.0779%" height="15" fill="rgb(218,125,20)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="575.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="84.3336%" y="549" width="0.0779%" height="15" fill="rgb(230,223,15)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="559.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="84.3336%" y="533" width="0.0779%" height="15" fill="rgb(239,99,47)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3336%" y="517" width="0.0779%" height="15" fill="rgb(222,214,23)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3336%" y="501" width="0.0779%" height="15" fill="rgb(250,98,43)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3336%" y="485" width="0.0779%" height="15" fill="rgb(226,140,11)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3336%" y="469" width="0.0779%" height="15" fill="rgb(239,2,22)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="479.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="84.3336%" y="453" width="0.0779%" height="15" fill="rgb(209,106,26)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3336%" y="437" width="0.0779%" height="15" fill="rgb(209,135,11)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="84.3336%" y="421" width="0.0779%" height="15" fill="rgb(241,58,6)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="84.3336%" y="405" width="0.0779%" height="15" fill="rgb(214,78,1)" fg:x="1082" fg:w="1"/><text x="84.5836%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4115%" y="517" width="0.0779%" height="15" fill="rgb(229,135,33)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4115%" y="501" width="0.0779%" height="15" fill="rgb(245,87,50)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4115%" y="485" width="0.0779%" height="15" fill="rgb(222,222,8)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4115%" y="469" width="0.0779%" height="15" fill="rgb(214,97,50)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4115%" y="453" width="0.0779%" height="15" fill="rgb(244,161,51)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4115%" y="437" width="0.0779%" height="15" fill="rgb(225,17,4)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4115%" y="421" width="0.0779%" height="15" fill="rgb(238,10,13)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4115%" y="405" width="0.0779%" height="15" fill="rgb(239,169,14)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4115%" y="389" width="0.0779%" height="15" fill="rgb(213,105,25)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4115%" y="373" width="0.0779%" height="15" fill="rgb(233,4,17)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4115%" y="357" width="0.0779%" height="15" fill="rgb(212,5,35)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4115%" y="341" width="0.0779%" height="15" fill="rgb(216,3,14)" fg:x="1083" fg:w="1"/><text x="84.6615%" y="351.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.23%)</title><rect x="84.4115%" y="597" width="0.2338%" height="15" fill="rgb(240,105,33)" fg:x="1083" fg:w="3"/><text x="84.6615%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="84.4115%" y="581" width="0.2338%" height="15" fill="rgb(216,73,0)" fg:x="1083" fg:w="3"/><text x="84.6615%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="84.4115%" y="565" width="0.2338%" height="15" fill="rgb(217,153,48)" fg:x="1083" fg:w="3"/><text x="84.6615%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="84.4115%" y="549" width="0.2338%" height="15" fill="rgb(218,180,8)" fg:x="1083" fg:w="3"/><text x="84.6615%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.23%)</title><rect x="84.4115%" y="533" width="0.2338%" height="15" fill="rgb(252,168,2)" fg:x="1083" fg:w="3"/><text x="84.6615%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.4895%" y="517" width="0.1559%" height="15" fill="rgb(224,116,33)" fg:x="1084" fg:w="2"/><text x="84.7395%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.5674%" y="501" width="0.0779%" height="15" fill="rgb(229,205,17)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.5674%" y="485" width="0.0779%" height="15" fill="rgb(234,1,41)" fg:x="1085" fg:w="1"/><text x="84.8174%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7233%" y="549" width="0.0779%" height="15" fill="rgb(244,185,8)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.7233%" y="533" width="0.0779%" height="15" fill="rgb(248,51,21)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7233%" y="517" width="0.0779%" height="15" fill="rgb(248,157,31)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.7233%" y="501" width="0.0779%" height="15" fill="rgb(210,34,47)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.7233%" y="485" width="0.0779%" height="15" fill="rgb(227,139,53)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.7233%" y="469" width="0.0779%" height="15" fill="rgb(232,211,37)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.7233%" y="453" width="0.0779%" height="15" fill="rgb(236,133,10)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7233%" y="437" width="0.0779%" height="15" fill="rgb(243,202,25)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.7233%" y="421" width="0.0779%" height="15" fill="rgb(224,59,9)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.7233%" y="405" width="0.0779%" height="15" fill="rgb(206,146,16)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.7233%" y="389" width="0.0779%" height="15" fill="rgb(220,47,2)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.7233%" y="373" width="0.0779%" height="15" fill="rgb(225,124,51)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.7233%" y="357" width="0.0779%" height="15" fill="rgb(241,220,50)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.7233%" y="341" width="0.0779%" height="15" fill="rgb(232,168,5)" fg:x="1087" fg:w="1"/><text x="84.9733%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8012%" y="517" width="0.0779%" height="15" fill="rgb(243,90,22)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8012%" y="501" width="0.0779%" height="15" fill="rgb(223,153,32)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.8012%" y="485" width="0.0779%" height="15" fill="rgb(243,124,20)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.8012%" y="469" width="0.0779%" height="15" fill="rgb(246,168,39)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.8012%" y="453" width="0.0779%" height="15" fill="rgb(222,165,54)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8012%" y="437" width="0.0779%" height="15" fill="rgb(251,142,27)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.8012%" y="421" width="0.0779%" height="15" fill="rgb(207,168,50)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.8012%" y="405" width="0.0779%" height="15" fill="rgb(250,139,25)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.8012%" y="389" width="0.0779%" height="15" fill="rgb(214,194,48)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.8012%" y="373" width="0.0779%" height="15" fill="rgb(227,138,47)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.8012%" y="357" width="0.0779%" height="15" fill="rgb(250,162,5)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.8012%" y="341" width="0.0779%" height="15" fill="rgb(229,74,25)" fg:x="1088" fg:w="1"/><text x="85.0512%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="84.7233%" y="565" width="0.2338%" height="15" fill="rgb(221,124,34)" fg:x="1087" fg:w="3"/><text x="84.9733%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="84.8012%" y="549" width="0.1559%" height="15" fill="rgb(225,94,25)" fg:x="1088" fg:w="2"/><text x="85.0512%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="84.8012%" y="533" width="0.1559%" height="15" fill="rgb(210,100,12)" fg:x="1088" fg:w="2"/><text x="85.0512%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.8792%" y="517" width="0.0779%" height="15" fill="rgb(206,62,48)" fg:x="1089" fg:w="1"/><text x="85.1292%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="84.8792%" y="501" width="0.0779%" height="15" fill="rgb(222,181,9)" fg:x="1089" fg:w="1"/><text x="85.1292%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="84.9571%" y="565" width="0.0779%" height="15" fill="rgb(248,42,38)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="84.9571%" y="549" width="0.0779%" height="15" fill="rgb(213,40,6)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.9571%" y="533" width="0.0779%" height="15" fill="rgb(211,108,15)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="84.9571%" y="517" width="0.0779%" height="15" fill="rgb(249,62,9)" fg:x="1090" fg:w="1"/><text x="85.2071%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0351%" y="565" width="0.0779%" height="15" fill="rgb(233,26,54)" fg:x="1091" fg:w="1"/><text x="85.2851%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.1130%" y="533" width="0.0779%" height="15" fill="rgb(210,175,26)" fg:x="1092" fg:w="1"/><text x="85.3630%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="85.1130%" y="565" width="0.1559%" height="15" fill="rgb(210,43,33)" fg:x="1092" fg:w="2"/><text x="85.3630%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="85.1130%" y="549" width="0.1559%" height="15" fill="rgb(224,46,17)" fg:x="1092" fg:w="2"/><text x="85.3630%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.1910%" y="533" width="0.0779%" height="15" fill="rgb(254,24,38)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="543.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="85.1910%" y="517" width="0.0779%" height="15" fill="rgb(248,32,0)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.1910%" y="501" width="0.0779%" height="15" fill="rgb(224,37,41)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.1910%" y="485" width="0.0779%" height="15" fill="rgb(252,70,22)" fg:x="1093" fg:w="1"/><text x="85.4410%" y="495.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (9 samples, 0.70%)</title><rect x="84.6454%" y="597" width="0.7015%" height="15" fill="rgb(241,123,50)" fg:x="1086" fg:w="9"/><text x="84.8954%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::replace_scope (9 samples, 0.70%)</title><rect x="84.6454%" y="581" width="0.7015%" height="15" fill="rgb(246,138,33)" fg:x="1086" fg:w="9"/><text x="84.8954%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="85.2689%" y="565" width="0.0779%" height="15" fill="rgb(218,39,32)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="85.2689%" y="549" width="0.0779%" height="15" fill="rgb(241,229,10)" fg:x="1094" fg:w="1"/><text x="85.5189%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="85.3468%" y="597" width="0.0779%" height="15" fill="rgb(212,160,10)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="85.3468%" y="581" width="0.0779%" height="15" fill="rgb(227,48,51)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="591.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.3468%" y="565" width="0.0779%" height="15" fill="rgb(238,159,21)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.3468%" y="549" width="0.0779%" height="15" fill="rgb(216,1,10)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="559.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="85.3468%" y="533" width="0.0779%" height="15" fill="rgb(209,228,25)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="543.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.3468%" y="517" width="0.0779%" height="15" fill="rgb(234,160,10)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3468%" y="501" width="0.0779%" height="15" fill="rgb(212,66,25)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3468%" y="485" width="0.0779%" height="15" fill="rgb(254,121,18)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3468%" y="469" width="0.0779%" height="15" fill="rgb(219,127,1)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3468%" y="453" width="0.0779%" height="15" fill="rgb(219,224,42)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3468%" y="437" width="0.0779%" height="15" fill="rgb(253,130,22)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3468%" y="421" width="0.0779%" height="15" fill="rgb(253,39,28)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.3468%" y="405" width="0.0779%" height="15" fill="rgb(231,126,37)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3468%" y="389" width="0.0779%" height="15" fill="rgb(251,145,14)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.3468%" y="373" width="0.0779%" height="15" fill="rgb(229,164,30)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="85.3468%" y="357" width="0.0779%" height="15" fill="rgb(233,227,54)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="85.3468%" y="341" width="0.0779%" height="15" fill="rgb(240,94,22)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="85.3468%" y="325" width="0.0779%" height="15" fill="rgb(217,56,16)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3468%" y="309" width="0.0779%" height="15" fill="rgb(229,133,38)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="85.3468%" y="293" width="0.0779%" height="15" fill="rgb(225,139,35)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="85.3468%" y="277" width="0.0779%" height="15" fill="rgb(223,100,16)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="85.3468%" y="261" width="0.0779%" height="15" fill="rgb(207,43,50)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="85.3468%" y="245" width="0.0779%" height="15" fill="rgb(237,221,9)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="85.3468%" y="229" width="0.0779%" height="15" fill="rgb(236,134,24)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.3468%" y="213" width="0.0779%" height="15" fill="rgb(222,173,4)" fg:x="1095" fg:w="1"/><text x="85.5968%" y="223.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::scopes::Action&gt;::perform (25 samples, 1.95%)</title><rect x="83.5542%" y="629" width="1.9486%" height="15" fill="rgb(234,144,52)" fg:x="1072" fg:w="25"/><text x="83.8042%" y="639.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (15 samples, 1.17%)</title><rect x="84.3336%" y="613" width="1.1691%" height="15" fill="rgb(223,41,7)" fg:x="1082" fg:w="15"/><text x="84.5836%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="85.4248%" y="597" width="0.0779%" height="15" fill="rgb(226,143,9)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="85.4248%" y="581" width="0.0779%" height="15" fill="rgb(234,43,37)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="591.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.4248%" y="565" width="0.0779%" height="15" fill="rgb(224,188,11)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="575.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="85.4248%" y="549" width="0.0779%" height="15" fill="rgb(233,113,28)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="85.4248%" y="533" width="0.0779%" height="15" fill="rgb(215,16,1)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="543.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="85.4248%" y="517" width="0.0779%" height="15" fill="rgb(238,74,38)" fg:x="1096" fg:w="1"/><text x="85.6748%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="85.5027%" y="597" width="0.0779%" height="15" fill="rgb(221,66,35)" fg:x="1097" fg:w="1"/><text x="85.7527%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.5807%" y="597" width="0.0779%" height="15" fill="rgb(251,225,2)" fg:x="1098" fg:w="1"/><text x="85.8307%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="85.7366%" y="517" width="0.0779%" height="15" fill="rgb(240,169,18)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="527.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="85.7366%" y="501" width="0.0779%" height="15" fill="rgb(243,130,50)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="85.7366%" y="485" width="0.0779%" height="15" fill="rgb(228,75,13)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7366%" y="469" width="0.0779%" height="15" fill="rgb(252,95,35)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7366%" y="453" width="0.0779%" height="15" fill="rgb(222,180,54)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7366%" y="437" width="0.0779%" height="15" fill="rgb(250,110,34)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7366%" y="421" width="0.0779%" height="15" fill="rgb(208,100,21)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="431.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.7366%" y="405" width="0.0779%" height="15" fill="rgb(209,123,47)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7366%" y="389" width="0.0779%" height="15" fill="rgb(237,147,9)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.7366%" y="373" width="0.0779%" height="15" fill="rgb(228,206,23)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.7366%" y="357" width="0.0779%" height="15" fill="rgb(217,174,46)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.7366%" y="341" width="0.0779%" height="15" fill="rgb(231,126,21)" fg:x="1100" fg:w="1"/><text x="85.9866%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="85.7366%" y="565" width="0.1559%" height="15" fill="rgb(245,26,1)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="85.7366%" y="549" width="0.1559%" height="15" fill="rgb(224,138,39)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="559.50"></text></g><g><title>engine::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="85.7366%" y="533" width="0.1559%" height="15" fill="rgb(208,97,3)" fg:x="1100" fg:w="2"/><text x="85.9866%" y="543.50"></text></g><g><title>kernel::model::deserialize_entity (1 samples, 0.08%)</title><rect x="85.8145%" y="517" width="0.0779%" height="15" fill="rgb(222,77,29)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="85.8145%" y="501" width="0.0779%" height="15" fill="rgb(243,188,36)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.8145%" y="485" width="0.0779%" height="15" fill="rgb(218,214,3)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="85.8145%" y="469" width="0.0779%" height="15" fill="rgb(211,183,45)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="85.8145%" y="453" width="0.0779%" height="15" fill="rgb(230,218,25)" fg:x="1101" fg:w="1"/><text x="86.0645%" y="463.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (6 samples, 0.47%)</title><rect x="85.5027%" y="629" width="0.4677%" height="15" fill="rgb(233,86,6)" fg:x="1097" fg:w="6"/><text x="85.7527%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (6 samples, 0.47%)</title><rect x="85.5027%" y="613" width="0.4677%" height="15" fill="rgb(220,59,24)" fg:x="1097" fg:w="6"/><text x="85.7527%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.31%)</title><rect x="85.6586%" y="597" width="0.3118%" height="15" fill="rgb(227,60,1)" fg:x="1099" fg:w="4"/><text x="85.9086%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="85.6586%" y="581" width="0.3118%" height="15" fill="rgb(216,212,54)" fg:x="1099" fg:w="4"/><text x="85.9086%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8924%" y="565" width="0.0779%" height="15" fill="rgb(227,81,54)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8924%" y="549" width="0.0779%" height="15" fill="rgb(206,204,43)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="85.8924%" y="533" width="0.0779%" height="15" fill="rgb(219,29,26)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.8924%" y="517" width="0.0779%" height="15" fill="rgb(252,40,36)" fg:x="1102" fg:w="1"/><text x="86.1424%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.23%)</title><rect x="86.1263%" y="501" width="0.2338%" height="15" fill="rgb(224,205,39)" fg:x="1105" fg:w="3"/><text x="86.3763%" y="511.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.2042%" y="485" width="0.1559%" height="15" fill="rgb(222,13,21)" fg:x="1106" fg:w="2"/><text x="86.4542%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.47%)</title><rect x="86.0483%" y="517" width="0.4677%" height="15" fill="rgb(243,139,6)" fg:x="1104" fg:w="6"/><text x="86.2983%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="86.3601%" y="501" width="0.1559%" height="15" fill="rgb(237,101,11)" fg:x="1108" fg:w="2"/><text x="86.6101%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.55%)</title><rect x="86.0483%" y="533" width="0.5456%" height="15" fill="rgb(254,49,28)" fg:x="1104" fg:w="7"/><text x="86.2983%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.5160%" y="517" width="0.0779%" height="15" fill="rgb(223,41,21)" fg:x="1110" fg:w="1"/><text x="86.7660%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.70%)</title><rect x="86.0483%" y="549" width="0.7015%" height="15" fill="rgb(225,103,29)" fg:x="1104" fg:w="9"/><text x="86.2983%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (2 samples, 0.16%)</title><rect x="86.5939%" y="533" width="0.1559%" height="15" fill="rgb(244,82,43)" fg:x="1111" fg:w="2"/><text x="86.8439%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="86.5939%" y="517" width="0.1559%" height="15" fill="rgb(217,39,3)" fg:x="1111" fg:w="2"/><text x="86.8439%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.6719%" y="501" width="0.0779%" height="15" fill="rgb(239,128,25)" fg:x="1112" fg:w="1"/><text x="86.9219%" y="511.50"></text></g><g><title>__libc_free (3 samples, 0.23%)</title><rect x="86.7498%" y="549" width="0.2338%" height="15" fill="rgb(210,192,37)" fg:x="1113" fg:w="3"/><text x="86.9998%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.01%)</title><rect x="86.0483%" y="565" width="1.0133%" height="15" fill="rgb(219,98,18)" fg:x="1104" fg:w="13"/><text x="86.2983%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;rpc_proto::JsonValue&gt; (1 samples, 0.08%)</title><rect x="86.9836%" y="549" width="0.0779%" height="15" fill="rgb(224,228,38)" fg:x="1116" fg:w="1"/><text x="87.2336%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;dynlib_sys::DynMessage&gt; (15 samples, 1.17%)</title><rect x="85.9704%" y="597" width="1.1691%" height="15" fill="rgb(241,129,43)" fg:x="1103" fg:w="15"/><text x="86.2204%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 1.17%)</title><rect x="85.9704%" y="581" width="1.1691%" height="15" fill="rgb(223,8,51)" fg:x="1103" fg:w="15"/><text x="86.2204%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.0616%" y="565" width="0.0779%" height="15" fill="rgb(233,76,24)" fg:x="1117" fg:w="1"/><text x="87.3116%" y="575.50"></text></g><g><title>__libc_malloc (4 samples, 0.31%)</title><rect x="87.2954%" y="549" width="0.3118%" height="15" fill="rgb(219,115,10)" fg:x="1120" fg:w="4"/><text x="87.5454%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="87.2954%" y="565" width="0.3897%" height="15" fill="rgb(222,137,12)" fg:x="1120" fg:w="5"/><text x="87.5454%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="87.6072%" y="549" width="0.0779%" height="15" fill="rgb(216,192,16)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="559.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="87.6072%" y="533" width="0.0779%" height="15" fill="rgb(247,6,27)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.6072%" y="517" width="0.0779%" height="15" fill="rgb(254,39,44)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6072%" y="501" width="0.0779%" height="15" fill="rgb(251,116,35)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.6072%" y="485" width="0.0779%" height="15" fill="rgb(208,61,44)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.6072%" y="469" width="0.0779%" height="15" fill="rgb(250,34,5)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.6072%" y="453" width="0.0779%" height="15" fill="rgb(241,40,15)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.6072%" y="437" width="0.0779%" height="15" fill="rgb(229,182,2)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.6072%" y="421" width="0.0779%" height="15" fill="rgb(244,148,52)" fg:x="1124" fg:w="1"/><text x="87.8572%" y="431.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (1 samples, 0.08%)</title><rect x="87.6851%" y="565" width="0.0779%" height="15" fill="rgb(225,211,4)" fg:x="1125" fg:w="1"/><text x="87.9351%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="87.6851%" y="549" width="0.0779%" height="15" fill="rgb(208,222,47)" fg:x="1125" fg:w="1"/><text x="87.9351%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="87.6851%" y="533" width="0.0779%" height="15" fill="rgb(233,162,0)" fg:x="1125" fg:w="1"/><text x="87.9351%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="87.7631%" y="565" width="0.2338%" height="15" fill="rgb(241,54,13)" fg:x="1126" fg:w="3"/><text x="88.0131%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.23%)</title><rect x="87.7631%" y="549" width="0.2338%" height="15" fill="rgb(213,89,18)" fg:x="1126" fg:w="3"/><text x="88.0131%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.9189%" y="533" width="0.0779%" height="15" fill="rgb(215,170,37)" fg:x="1128" fg:w="1"/><text x="88.1689%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="88.1528%" y="437" width="0.0779%" height="15" fill="rgb(216,133,15)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="447.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="88.1528%" y="421" width="0.0779%" height="15" fill="rgb(230,42,19)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1528%" y="405" width="0.0779%" height="15" fill="rgb(221,103,41)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1528%" y="389" width="0.0779%" height="15" fill="rgb(220,142,31)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.1528%" y="373" width="0.0779%" height="15" fill="rgb(239,218,4)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.1528%" y="357" width="0.0779%" height="15" fill="rgb(232,16,4)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.1528%" y="341" width="0.0779%" height="15" fill="rgb(226,213,25)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.1528%" y="325" width="0.0779%" height="15" fill="rgb(235,135,19)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="88.1528%" y="309" width="0.0779%" height="15" fill="rgb(240,107,29)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="88.1528%" y="293" width="0.0779%" height="15" fill="rgb(206,164,44)" fg:x="1131" fg:w="1"/><text x="88.4028%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.23%)</title><rect x="88.0748%" y="501" width="0.2338%" height="15" fill="rgb(210,23,48)" fg:x="1130" fg:w="3"/><text x="88.3248%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.23%)</title><rect x="88.0748%" y="485" width="0.2338%" height="15" fill="rgb(212,138,25)" fg:x="1130" fg:w="3"/><text x="88.3248%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (3 samples, 0.23%)</title><rect x="88.0748%" y="469" width="0.2338%" height="15" fill="rgb(224,152,3)" fg:x="1130" fg:w="3"/><text x="88.3248%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="88.1528%" y="453" width="0.1559%" height="15" fill="rgb(214,38,23)" fg:x="1131" fg:w="2"/><text x="88.4028%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.2307%" y="437" width="0.0779%" height="15" fill="rgb(215,161,10)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.2307%" y="421" width="0.0779%" height="15" fill="rgb(240,185,7)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.2307%" y="405" width="0.0779%" height="15" fill="rgb(244,104,25)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.2307%" y="389" width="0.0779%" height="15" fill="rgb(242,140,44)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="399.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.08%)</title><rect x="88.2307%" y="373" width="0.0779%" height="15" fill="rgb(245,30,19)" fg:x="1132" fg:w="1"/><text x="88.4807%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.3087%" y="501" width="0.0779%" height="15" fill="rgb(219,208,35)" fg:x="1133" fg:w="1"/><text x="88.5587%" y="511.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.5425%" y="309" width="0.0779%" height="15" fill="rgb(235,200,7)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.5425%" y="293" width="0.0779%" height="15" fill="rgb(220,193,10)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="303.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (1 samples, 0.08%)</title><rect x="88.5425%" y="277" width="0.0779%" height="15" fill="rgb(212,216,39)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.5425%" y="261" width="0.0779%" height="15" fill="rgb(212,134,19)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.5425%" y="245" width="0.0779%" height="15" fill="rgb(230,57,24)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.5425%" y="229" width="0.0779%" height="15" fill="rgb(238,209,37)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="88.5425%" y="213" width="0.0779%" height="15" fill="rgb(247,11,45)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="88.5425%" y="197" width="0.0779%" height="15" fill="rgb(222,126,6)" fg:x="1136" fg:w="1"/><text x="88.7925%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="88.5425%" y="437" width="0.1559%" height="15" fill="rgb(245,77,24)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="88.5425%" y="421" width="0.1559%" height="15" fill="rgb(227,14,24)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="431.50"></text></g><g><title>engine::internal::Entities::add_persisted (2 samples, 0.16%)</title><rect x="88.5425%" y="405" width="0.1559%" height="15" fill="rgb(211,112,42)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="415.50"></text></g><g><title>kernel::model::deserialize_entity (2 samples, 0.16%)</title><rect x="88.5425%" y="389" width="0.1559%" height="15" fill="rgb(230,103,42)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="399.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="88.5425%" y="373" width="0.1559%" height="15" fill="rgb(228,125,42)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="383.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="88.5425%" y="357" width="0.1559%" height="15" fill="rgb(243,33,6)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="88.5425%" y="341" width="0.1559%" height="15" fill="rgb(231,2,40)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="88.5425%" y="325" width="0.1559%" height="15" fill="rgb(224,200,53)" fg:x="1136" fg:w="2"/><text x="88.7925%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.6204%" y="309" width="0.0779%" height="15" fill="rgb(215,116,36)" fg:x="1137" fg:w="1"/><text x="88.8704%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.6204%" y="293" width="0.0779%" height="15" fill="rgb(240,23,51)" fg:x="1137" fg:w="1"/><text x="88.8704%" y="303.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (5 samples, 0.39%)</title><rect x="88.3866%" y="501" width="0.3897%" height="15" fill="rgb(221,72,5)" fg:x="1134" fg:w="5"/><text x="88.6366%" y="511.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys::{{closure}} (5 samples, 0.39%)</title><rect x="88.3866%" y="485" width="0.3897%" height="15" fill="rgb(245,142,9)" fg:x="1134" fg:w="5"/><text x="88.6366%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::maybe_scope (5 samples, 0.39%)</title><rect x="88.3866%" y="469" width="0.3897%" height="15" fill="rgb(207,34,16)" fg:x="1134" fg:w="5"/><text x="88.6366%" y="479.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="88.4645%" y="453" width="0.3118%" height="15" fill="rgb(252,101,12)" fg:x="1135" fg:w="4"/><text x="88.7145%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.6984%" y="437" width="0.0779%" height="15" fill="rgb(239,89,37)" fg:x="1138" fg:w="1"/><text x="88.9484%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6984%" y="421" width="0.0779%" height="15" fill="rgb(252,227,37)" fg:x="1138" fg:w="1"/><text x="88.9484%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.6984%" y="405" width="0.0779%" height="15" fill="rgb(212,164,17)" fg:x="1138" fg:w="1"/><text x="88.9484%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="88.7763%" y="453" width="0.1559%" height="15" fill="rgb(240,86,13)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.7763%" y="437" width="0.1559%" height="15" fill="rgb(233,183,32)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="88.7763%" y="421" width="0.1559%" height="15" fill="rgb(205,201,38)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="88.7763%" y="405" width="0.1559%" height="15" fill="rgb(210,122,38)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="88.7763%" y="389" width="0.1559%" height="15" fill="rgb(241,174,26)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="88.7763%" y="373" width="0.1559%" height="15" fill="rgb(219,89,7)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.7763%" y="357" width="0.1559%" height="15" fill="rgb(246,9,24)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="88.7763%" y="341" width="0.1559%" height="15" fill="rgb(205,132,21)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="88.7763%" y="325" width="0.1559%" height="15" fill="rgb(210,11,17)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="88.7763%" y="309" width="0.1559%" height="15" fill="rgb(226,138,14)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="88.7763%" y="293" width="0.1559%" height="15" fill="rgb(224,108,44)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="303.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="88.7763%" y="277" width="0.1559%" height="15" fill="rgb(247,114,36)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="88.7763%" y="261" width="0.1559%" height="15" fill="rgb(231,183,14)" fg:x="1139" fg:w="2"/><text x="89.0263%" y="271.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="88.7763%" y="469" width="0.2338%" height="15" fill="rgb(218,168,4)" fg:x="1139" fg:w="3"/><text x="89.0263%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9322%" y="453" width="0.0779%" height="15" fill="rgb(210,8,3)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9322%" y="437" width="0.0779%" height="15" fill="rgb(216,165,0)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9322%" y="421" width="0.0779%" height="15" fill="rgb(245,120,5)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9322%" y="405" width="0.0779%" height="15" fill="rgb(249,121,32)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9322%" y="389" width="0.0779%" height="15" fill="rgb(211,55,33)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9322%" y="373" width="0.0779%" height="15" fill="rgb(254,46,35)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.9322%" y="357" width="0.0779%" height="15" fill="rgb(213,213,19)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.9322%" y="341" width="0.0779%" height="15" fill="rgb(207,152,44)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.9322%" y="325" width="0.0779%" height="15" fill="rgb(227,195,36)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.9322%" y="309" width="0.0779%" height="15" fill="rgb(210,137,36)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.9322%" y="293" width="0.0779%" height="15" fill="rgb(253,47,47)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.9322%" y="277" width="0.0779%" height="15" fill="rgb(230,147,18)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.9322%" y="261" width="0.0779%" height="15" fill="rgb(247,33,49)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.9322%" y="245" width="0.0779%" height="15" fill="rgb(239,26,29)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.9322%" y="229" width="0.0779%" height="15" fill="rgb(245,145,52)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9322%" y="213" width="0.0779%" height="15" fill="rgb(224,139,32)" fg:x="1141" fg:w="1"/><text x="89.1822%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="89.0101%" y="469" width="0.0779%" height="15" fill="rgb(238,202,19)" fg:x="1142" fg:w="1"/><text x="89.2601%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.2440%" y="389" width="0.0779%" height="15" fill="rgb(249,211,53)" fg:x="1145" fg:w="1"/><text x="89.4940%" y="399.50"></text></g><g><title>plugins_core::tools::get_adjacent_keys (18 samples, 1.40%)</title><rect x="88.0748%" y="517" width="1.4030%" height="15" fill="rgb(237,229,33)" fg:x="1130" fg:w="18"/><text x="88.3248%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.70%)</title><rect x="88.7763%" y="501" width="0.7015%" height="15" fill="rgb(208,97,40)" fg:x="1139" fg:w="9"/><text x="89.0263%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (9 samples, 0.70%)</title><rect x="88.7763%" y="485" width="0.7015%" height="15" fill="rgb(254,36,16)" fg:x="1139" fg:w="9"/><text x="89.0263%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.39%)</title><rect x="89.0881%" y="469" width="0.3897%" height="15" fill="rgb(221,7,12)" fg:x="1143" fg:w="5"/><text x="89.3381%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.39%)</title><rect x="89.0881%" y="453" width="0.3897%" height="15" fill="rgb(205,11,12)" fg:x="1143" fg:w="5"/><text x="89.3381%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (4 samples, 0.31%)</title><rect x="89.1660%" y="437" width="0.3118%" height="15" fill="rgb(227,72,28)" fg:x="1144" fg:w="4"/><text x="89.4160%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (4 samples, 0.31%)</title><rect x="89.1660%" y="421" width="0.3118%" height="15" fill="rgb(228,7,34)" fg:x="1144" fg:w="4"/><text x="89.4160%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.23%)</title><rect x="89.2440%" y="405" width="0.2338%" height="15" fill="rgb(230,52,42)" fg:x="1145" fg:w="3"/><text x="89.4940%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="89.3219%" y="389" width="0.1559%" height="15" fill="rgb(219,177,53)" fg:x="1146" fg:w="2"/><text x="89.5719%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="89.3219%" y="373" width="0.1559%" height="15" fill="rgb(243,196,34)" fg:x="1146" fg:w="2"/><text x="89.5719%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="89.3998%" y="357" width="0.0779%" height="15" fill="rgb(213,66,49)" fg:x="1147" fg:w="1"/><text x="89.6498%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7116%" y="453" width="0.1559%" height="15" fill="rgb(233,11,50)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.7116%" y="437" width="0.1559%" height="15" fill="rgb(235,190,6)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="89.7116%" y="421" width="0.1559%" height="15" fill="rgb(212,64,44)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.7116%" y="405" width="0.1559%" height="15" fill="rgb(206,95,44)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="89.7116%" y="389" width="0.1559%" height="15" fill="rgb(227,136,25)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="89.7116%" y="373" width="0.1559%" height="15" fill="rgb(206,178,17)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="89.7116%" y="357" width="0.1559%" height="15" fill="rgb(208,168,35)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="89.7116%" y="341" width="0.1559%" height="15" fill="rgb(213,210,40)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.7116%" y="325" width="0.1559%" height="15" fill="rgb(236,60,6)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="89.7116%" y="309" width="0.1559%" height="15" fill="rgb(220,186,36)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="89.7116%" y="293" width="0.1559%" height="15" fill="rgb(225,120,49)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="89.7116%" y="277" width="0.1559%" height="15" fill="rgb(250,115,20)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="89.7116%" y="261" width="0.1559%" height="15" fill="rgb(207,214,23)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="89.7116%" y="245" width="0.1559%" height="15" fill="rgb(240,9,18)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="89.7116%" y="229" width="0.1559%" height="15" fill="rgb(232,170,48)" fg:x="1151" fg:w="2"/><text x="89.9616%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.23%)</title><rect x="89.7116%" y="469" width="0.2338%" height="15" fill="rgb(236,149,23)" fg:x="1151" fg:w="3"/><text x="89.9616%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8675%" y="453" width="0.0779%" height="15" fill="rgb(210,125,42)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.8675%" y="437" width="0.0779%" height="15" fill="rgb(207,201,52)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8675%" y="421" width="0.0779%" height="15" fill="rgb(250,187,37)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.8675%" y="405" width="0.0779%" height="15" fill="rgb(214,186,2)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.8675%" y="389" width="0.0779%" height="15" fill="rgb(207,189,15)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.8675%" y="373" width="0.0779%" height="15" fill="rgb(221,99,21)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.8675%" y="357" width="0.0779%" height="15" fill="rgb(212,67,18)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8675%" y="341" width="0.0779%" height="15" fill="rgb(226,24,24)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.8675%" y="325" width="0.0779%" height="15" fill="rgb(252,123,31)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.8675%" y="309" width="0.0779%" height="15" fill="rgb(251,227,47)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.8675%" y="293" width="0.0779%" height="15" fill="rgb(233,84,53)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.8675%" y="277" width="0.0779%" height="15" fill="rgb(228,57,19)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.8675%" y="261" width="0.0779%" height="15" fill="rgb(251,81,5)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.8675%" y="245" width="0.0779%" height="15" fill="rgb(236,211,27)" fg:x="1153" fg:w="1"/><text x="90.1175%" y="255.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="90.0234%" y="389" width="0.0779%" height="15" fill="rgb(218,21,6)" fg:x="1155" fg:w="1"/><text x="90.2734%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1013%" y="373" width="0.0779%" height="15" fill="rgb(239,104,19)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1013%" y="357" width="0.0779%" height="15" fill="rgb(234,179,27)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.1013%" y="341" width="0.0779%" height="15" fill="rgb(221,154,39)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.1013%" y="325" width="0.0779%" height="15" fill="rgb(228,190,1)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.1013%" y="309" width="0.0779%" height="15" fill="rgb(244,122,33)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.1013%" y="293" width="0.0779%" height="15" fill="rgb(227,56,37)" fg:x="1156" fg:w="1"/><text x="90.3513%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.2572%" y="293" width="0.0779%" height="15" fill="rgb(207,158,16)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2572%" y="277" width="0.0779%" height="15" fill="rgb(251,222,30)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2572%" y="261" width="0.0779%" height="15" fill="rgb(240,22,49)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2572%" y="245" width="0.0779%" height="15" fill="rgb(224,207,37)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.2572%" y="229" width="0.0779%" height="15" fill="rgb(249,188,40)" fg:x="1158" fg:w="1"/><text x="90.5072%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="90.2572%" y="341" width="0.1559%" height="15" fill="rgb(254,141,11)" fg:x="1158" fg:w="2"/><text x="90.5072%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (2 samples, 0.16%)</title><rect x="90.2572%" y="325" width="0.1559%" height="15" fill="rgb(231,177,6)" fg:x="1158" fg:w="2"/><text x="90.5072%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (2 samples, 0.16%)</title><rect x="90.2572%" y="309" width="0.1559%" height="15" fill="rgb(241,6,16)" fg:x="1158" fg:w="2"/><text x="90.5072%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3352%" y="293" width="0.0779%" height="15" fill="rgb(230,50,14)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3352%" y="277" width="0.0779%" height="15" fill="rgb(254,36,3)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.3352%" y="261" width="0.0779%" height="15" fill="rgb(226,149,37)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.3352%" y="245" width="0.0779%" height="15" fill="rgb(253,49,27)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="255.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="90.3352%" y="229" width="0.0779%" height="15" fill="rgb(249,182,52)" fg:x="1159" fg:w="1"/><text x="90.5852%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.4131%" y="213" width="0.0779%" height="15" fill="rgb(223,42,15)" fg:x="1160" fg:w="1"/><text x="90.6631%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="90.4131%" y="293" width="0.1559%" height="15" fill="rgb(232,31,42)" fg:x="1160" fg:w="2"/><text x="90.6631%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.4131%" y="277" width="0.1559%" height="15" fill="rgb(233,56,46)" fg:x="1160" fg:w="2"/><text x="90.6631%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.4131%" y="261" width="0.1559%" height="15" fill="rgb(241,143,21)" fg:x="1160" fg:w="2"/><text x="90.6631%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.4131%" y="245" width="0.1559%" height="15" fill="rgb(251,222,15)" fg:x="1160" fg:w="2"/><text x="90.6631%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="90.4131%" y="229" width="0.1559%" height="15" fill="rgb(242,101,40)" fg:x="1160" fg:w="2"/><text x="90.6631%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4910%" y="213" width="0.0779%" height="15" fill="rgb(247,60,44)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.4910%" y="197" width="0.0779%" height="15" fill="rgb(254,48,47)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.4910%" y="181" width="0.0779%" height="15" fill="rgb(253,30,33)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.4910%" y="165" width="0.0779%" height="15" fill="rgb(253,214,47)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.4910%" y="149" width="0.0779%" height="15" fill="rgb(241,108,29)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4910%" y="133" width="0.0779%" height="15" fill="rgb(240,36,2)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.4910%" y="117" width="0.0779%" height="15" fill="rgb(243,198,24)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.4910%" y="101" width="0.0779%" height="15" fill="rgb(225,98,27)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.4910%" y="85" width="0.0779%" height="15" fill="rgb(208,86,30)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.4910%" y="69" width="0.0779%" height="15" fill="rgb(242,157,11)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.4910%" y="53" width="0.0779%" height="15" fill="rgb(244,84,16)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.4910%" y="37" width="0.0779%" height="15" fill="rgb(247,20,46)" fg:x="1161" fg:w="1"/><text x="90.7410%" y="47.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.47%)</title><rect x="90.1793%" y="373" width="0.4677%" height="15" fill="rgb(240,157,20)" fg:x="1157" fg:w="6"/><text x="90.4293%" y="383.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.39%)</title><rect x="90.2572%" y="357" width="0.3897%" height="15" fill="rgb(212,151,38)" fg:x="1158" fg:w="5"/><text x="90.5072%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::name (3 samples, 0.23%)</title><rect x="90.4131%" y="341" width="0.2338%" height="15" fill="rgb(233,197,14)" fg:x="1160" fg:w="3"/><text x="90.6631%" y="351.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="90.4131%" y="325" width="0.2338%" height="15" fill="rgb(226,148,28)" fg:x="1160" fg:w="3"/><text x="90.6631%" y="335.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="90.4131%" y="309" width="0.2338%" height="15" fill="rgb(244,141,30)" fg:x="1160" fg:w="3"/><text x="90.6631%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="90.5690%" y="293" width="0.0779%" height="15" fill="rgb(215,73,38)" fg:x="1162" fg:w="1"/><text x="90.8190%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.8028%" y="325" width="0.0779%" height="15" fill="rgb(230,148,29)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8028%" y="309" width="0.0779%" height="15" fill="rgb(250,41,52)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8028%" y="293" width="0.0779%" height="15" fill="rgb(215,48,1)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8028%" y="277" width="0.0779%" height="15" fill="rgb(205,223,38)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="90.8028%" y="261" width="0.0779%" height="15" fill="rgb(213,51,8)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8028%" y="245" width="0.0779%" height="15" fill="rgb(248,53,11)" fg:x="1165" fg:w="1"/><text x="91.0528%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (4 samples, 0.31%)</title><rect x="90.6469%" y="373" width="0.3118%" height="15" fill="rgb(218,140,4)" fg:x="1163" fg:w="4"/><text x="90.8969%" y="383.50"></text></g><g><title>kernel::model::scopes::load_props (3 samples, 0.23%)</title><rect x="90.7249%" y="357" width="0.2338%" height="15" fill="rgb(248,161,31)" fg:x="1164" fg:w="3"/><text x="90.9749%" y="367.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (3 samples, 0.23%)</title><rect x="90.7249%" y="341" width="0.2338%" height="15" fill="rgb(239,88,32)" fg:x="1164" fg:w="3"/><text x="90.9749%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8807%" y="325" width="0.0779%" height="15" fill="rgb(234,14,28)" fg:x="1166" fg:w="1"/><text x="91.1307%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8807%" y="309" width="0.0779%" height="15" fill="rgb(235,173,11)" fg:x="1166" fg:w="1"/><text x="91.1307%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="90.8807%" y="293" width="0.0779%" height="15" fill="rgb(222,70,2)" fg:x="1166" fg:w="1"/><text x="91.1307%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="90.8807%" y="277" width="0.0779%" height="15" fill="rgb(228,196,41)" fg:x="1166" fg:w="1"/><text x="91.1307%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8807%" y="261" width="0.0779%" height="15" fill="rgb(249,19,9)" fg:x="1166" fg:w="1"/><text x="91.1307%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9587%" y="357" width="0.0779%" height="15" fill="rgb(221,16,43)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.9587%" y="341" width="0.0779%" height="15" fill="rgb(225,207,6)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.9587%" y="325" width="0.0779%" height="15" fill="rgb(249,32,32)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.9587%" y="309" width="0.0779%" height="15" fill="rgb(232,163,43)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.9587%" y="293" width="0.0779%" height="15" fill="rgb(236,158,54)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="90.9587%" y="277" width="0.0779%" height="15" fill="rgb(205,126,44)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="90.9587%" y="261" width="0.0779%" height="15" fill="rgb(210,162,12)" fg:x="1167" fg:w="1"/><text x="91.2087%" y="271.50"></text></g><g><title>engine::internal::EntityMap::add_entity (3 samples, 0.23%)</title><rect x="90.9587%" y="373" width="0.2338%" height="15" fill="rgb(218,156,48)" fg:x="1167" fg:w="3"/><text x="91.2087%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.0366%" y="357" width="0.1559%" height="15" fill="rgb(248,210,3)" fg:x="1168" fg:w="2"/><text x="91.2866%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.0366%" y="341" width="0.1559%" height="15" fill="rgb(212,43,27)" fg:x="1168" fg:w="2"/><text x="91.2866%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="91.0366%" y="325" width="0.1559%" height="15" fill="rgb(241,52,6)" fg:x="1168" fg:w="2"/><text x="91.2866%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.0366%" y="309" width="0.1559%" height="15" fill="rgb(222,178,35)" fg:x="1168" fg:w="2"/><text x="91.2866%" y="319.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.2705%" y="149" width="0.0779%" height="15" fill="rgb(205,121,46)" fg:x="1171" fg:w="1"/><text x="91.5205%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2705%" y="133" width="0.0779%" height="15" fill="rgb(249,67,1)" fg:x="1171" fg:w="1"/><text x="91.5205%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="91.2705%" y="117" width="0.0779%" height="15" fill="rgb(238,168,42)" fg:x="1171" fg:w="1"/><text x="91.5205%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.2705%" y="101" width="0.0779%" height="15" fill="rgb(205,36,48)" fg:x="1171" fg:w="1"/><text x="91.5205%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.2705%" y="85" width="0.0779%" height="15" fill="rgb(240,85,12)" fg:x="1171" fg:w="1"/><text x="91.5205%" y="95.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.23%)</title><rect x="91.1925%" y="213" width="0.2338%" height="15" fill="rgb(245,27,39)" fg:x="1170" fg:w="3"/><text x="91.4425%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.1925%" y="197" width="0.2338%" height="15" fill="rgb(218,129,34)" fg:x="1170" fg:w="3"/><text x="91.4425%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.2705%" y="181" width="0.1559%" height="15" fill="rgb(221,157,12)" fg:x="1171" fg:w="2"/><text x="91.5205%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.2705%" y="165" width="0.1559%" height="15" fill="rgb(213,206,20)" fg:x="1171" fg:w="2"/><text x="91.5205%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3484%" y="149" width="0.0779%" height="15" fill="rgb(227,115,30)" fg:x="1172" fg:w="1"/><text x="91.5984%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3484%" y="133" width="0.0779%" height="15" fill="rgb(221,40,47)" fg:x="1172" fg:w="1"/><text x="91.5984%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.31%)</title><rect x="91.1925%" y="245" width="0.3118%" height="15" fill="rgb(239,96,49)" fg:x="1170" fg:w="4"/><text x="91.4425%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.31%)</title><rect x="91.1925%" y="229" width="0.3118%" height="15" fill="rgb(223,24,38)" fg:x="1170" fg:w="4"/><text x="91.4425%" y="239.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="91.4263%" y="213" width="0.0779%" height="15" fill="rgb(242,35,45)" fg:x="1173" fg:w="1"/><text x="91.6763%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.5043%" y="165" width="0.0779%" height="15" fill="rgb(236,20,9)" fg:x="1174" fg:w="1"/><text x="91.7543%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.5043%" y="149" width="0.0779%" height="15" fill="rgb(239,124,8)" fg:x="1174" fg:w="1"/><text x="91.7543%" y="159.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.5043%" y="133" width="0.0779%" height="15" fill="rgb(228,92,29)" fg:x="1174" fg:w="1"/><text x="91.7543%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.5822%" y="117" width="0.0779%" height="15" fill="rgb(251,53,39)" fg:x="1175" fg:w="1"/><text x="91.8322%" y="127.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5822%" y="101" width="0.0779%" height="15" fill="rgb(224,44,10)" fg:x="1175" fg:w="1"/><text x="91.8322%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="91.5822%" y="85" width="0.0779%" height="15" fill="rgb(254,10,15)" fg:x="1175" fg:w="1"/><text x="91.8322%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="91.5822%" y="69" width="0.0779%" height="15" fill="rgb(245,173,6)" fg:x="1175" fg:w="1"/><text x="91.8322%" y="79.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="91.5822%" y="53" width="0.0779%" height="15" fill="rgb(228,74,0)" fg:x="1175" fg:w="1"/><text x="91.8322%" y="63.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (7 samples, 0.55%)</title><rect x="91.1925%" y="357" width="0.5456%" height="15" fill="rgb(206,138,29)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (7 samples, 0.55%)</title><rect x="91.1925%" y="341" width="0.5456%" height="15" fill="rgb(253,27,43)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.55%)</title><rect x="91.1925%" y="325" width="0.5456%" height="15" fill="rgb(231,73,0)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="91.1925%" y="309" width="0.5456%" height="15" fill="rgb(218,9,23)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (7 samples, 0.55%)</title><rect x="91.1925%" y="293" width="0.5456%" height="15" fill="rgb(251,55,29)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.55%)</title><rect x="91.1925%" y="277" width="0.5456%" height="15" fill="rgb(223,180,22)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="287.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (7 samples, 0.55%)</title><rect x="91.1925%" y="261" width="0.5456%" height="15" fill="rgb(223,29,21)" fg:x="1170" fg:w="7"/><text x="91.4425%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="91.5043%" y="245" width="0.2338%" height="15" fill="rgb(251,103,37)" fg:x="1174" fg:w="3"/><text x="91.7543%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.5043%" y="229" width="0.2338%" height="15" fill="rgb(214,11,21)" fg:x="1174" fg:w="3"/><text x="91.7543%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.23%)</title><rect x="91.5043%" y="213" width="0.2338%" height="15" fill="rgb(205,137,13)" fg:x="1174" fg:w="3"/><text x="91.7543%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="91.5043%" y="197" width="0.2338%" height="15" fill="rgb(225,58,47)" fg:x="1174" fg:w="3"/><text x="91.7543%" y="207.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.5043%" y="181" width="0.2338%" height="15" fill="rgb(222,197,14)" fg:x="1174" fg:w="3"/><text x="91.7543%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="91.5822%" y="165" width="0.1559%" height="15" fill="rgb(215,210,33)" fg:x="1175" fg:w="2"/><text x="91.8322%" y="175.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="91.5822%" y="149" width="0.1559%" height="15" fill="rgb(242,13,9)" fg:x="1175" fg:w="2"/><text x="91.8322%" y="159.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.5822%" y="133" width="0.1559%" height="15" fill="rgb(218,31,39)" fg:x="1175" fg:w="2"/><text x="91.8322%" y="143.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.6602%" y="117" width="0.0779%" height="15" fill="rgb(211,214,23)" fg:x="1176" fg:w="1"/><text x="91.9102%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.8161%" y="309" width="0.0779%" height="15" fill="rgb(237,92,14)" fg:x="1178" fg:w="1"/><text x="92.0661%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.9719%" y="277" width="0.0779%" height="15" fill="rgb(220,78,5)" fg:x="1180" fg:w="1"/><text x="92.2219%" y="287.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (28 samples, 2.18%)</title><rect x="89.9454%" y="469" width="2.1824%" height="15" fill="rgb(237,23,21)" fg:x="1154" fg:w="28"/><text x="90.1954%" y="479.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 2.18%)</title><rect x="89.9454%" y="453" width="2.1824%" height="15" fill="rgb(251,207,51)" fg:x="1154" fg:w="28"/><text x="90.1954%" y="463.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 samples, 2.10%)</title><rect x="90.0234%" y="437" width="2.1044%" height="15" fill="rgb(249,206,18)" fg:x="1155" fg:w="27"/><text x="90.2734%" y="447.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (27 samples, 2.10%)</title><rect x="90.0234%" y="421" width="2.1044%" height="15" fill="rgb(236,20,19)" fg:x="1155" fg:w="27"/><text x="90.2734%" y="431.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (27 samples, 2.10%)</title><rect x="90.0234%" y="405" width="2.1044%" height="15" fill="rgb(214,227,29)" fg:x="1155" fg:w="27"/><text x="90.2734%" y="415.50">&lt;..</text></g><g><title>engine::internal::Entities::add_persisted (26 samples, 2.03%)</title><rect x="90.1013%" y="389" width="2.0265%" height="15" fill="rgb(209,183,4)" fg:x="1156" fg:w="26"/><text x="90.3513%" y="399.50">e..</text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.94%)</title><rect x="91.1925%" y="373" width="0.9353%" height="15" fill="rgb(233,111,23)" fg:x="1170" fg:w="12"/><text x="91.4425%" y="383.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.39%)</title><rect x="91.7381%" y="357" width="0.3897%" height="15" fill="rgb(238,121,27)" fg:x="1177" fg:w="5"/><text x="91.9881%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.39%)</title><rect x="91.7381%" y="341" width="0.3897%" height="15" fill="rgb(236,120,41)" fg:x="1177" fg:w="5"/><text x="91.9881%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.39%)</title><rect x="91.7381%" y="325" width="0.3897%" height="15" fill="rgb(241,143,10)" fg:x="1177" fg:w="5"/><text x="91.9881%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.23%)</title><rect x="91.8940%" y="309" width="0.2338%" height="15" fill="rgb(224,86,31)" fg:x="1179" fg:w="3"/><text x="92.1440%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.23%)</title><rect x="91.8940%" y="293" width="0.2338%" height="15" fill="rgb(236,212,27)" fg:x="1179" fg:w="3"/><text x="92.1440%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0499%" y="277" width="0.0779%" height="15" fill="rgb(219,43,51)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0499%" y="261" width="0.0779%" height="15" fill="rgb(232,216,8)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0499%" y="245" width="0.0779%" height="15" fill="rgb(206,222,39)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0499%" y="229" width="0.0779%" height="15" fill="rgb(209,149,48)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0499%" y="213" width="0.0779%" height="15" fill="rgb(229,155,21)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0499%" y="197" width="0.0779%" height="15" fill="rgb(246,152,26)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0499%" y="181" width="0.0779%" height="15" fill="rgb(206,70,42)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.0499%" y="165" width="0.0779%" height="15" fill="rgb(236,9,11)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.0499%" y="149" width="0.0779%" height="15" fill="rgb(238,145,47)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="159.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="92.0499%" y="133" width="0.0779%" height="15" fill="rgb(252,189,7)" fg:x="1181" fg:w="1"/><text x="92.2999%" y="143.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.1278%" y="469" width="0.1559%" height="15" fill="rgb(254,168,51)" fg:x="1182" fg:w="2"/><text x="92.3778%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::ScopeValue&gt; (1 samples, 0.08%)</title><rect x="92.2837%" y="469" width="0.0779%" height="15" fill="rgb(227,105,46)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="92.2837%" y="453" width="0.0779%" height="15" fill="rgb(227,74,30)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="92.2837%" y="437" width="0.0779%" height="15" fill="rgb(206,212,44)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="92.2837%" y="421" width="0.0779%" height="15" fill="rgb(252,69,11)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="92.2837%" y="405" width="0.0779%" height="15" fill="rgb(239,116,0)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.2837%" y="389" width="0.0779%" height="15" fill="rgb(246,189,23)" fg:x="1184" fg:w="1"/><text x="92.5337%" y="399.50"></text></g><g><title>plugins_core::tools::get_contained_keys (39 samples, 3.04%)</title><rect x="89.4778%" y="517" width="3.0398%" height="15" fill="rgb(229,50,41)" fg:x="1148" fg:w="39"/><text x="89.7278%" y="527.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (37 samples, 2.88%)</title><rect x="89.6337%" y="501" width="2.8839%" height="15" fill="rgb(214,66,37)" fg:x="1150" fg:w="37"/><text x="89.8837%" y="511.50">ke..</text></g><g><title>kernel::model::entity::Entity::load_scope (37 samples, 2.88%)</title><rect x="89.6337%" y="485" width="2.8839%" height="15" fill="rgb(226,28,6)" fg:x="1150" fg:w="37"/><text x="89.8837%" y="495.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.3617%" y="469" width="0.1559%" height="15" fill="rgb(239,154,0)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.3617%" y="453" width="0.1559%" height="15" fill="rgb(233,97,11)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="92.3617%" y="437" width="0.1559%" height="15" fill="rgb(236,215,16)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="92.3617%" y="421" width="0.1559%" height="15" fill="rgb(246,188,29)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="92.3617%" y="405" width="0.1559%" height="15" fill="rgb(207,7,29)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="92.3617%" y="389" width="0.1559%" height="15" fill="rgb(238,112,43)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="92.3617%" y="373" width="0.1559%" height="15" fill="rgb(230,110,32)" fg:x="1185" fg:w="2"/><text x="92.6117%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.4396%" y="357" width="0.0779%" height="15" fill="rgb(218,197,32)" fg:x="1186" fg:w="1"/><text x="92.6896%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.5175%" y="469" width="0.0779%" height="15" fill="rgb(252,61,9)" fg:x="1187" fg:w="1"/><text x="92.7675%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="92.5955%" y="405" width="0.0779%" height="15" fill="rgb(244,140,14)" fg:x="1188" fg:w="1"/><text x="92.8455%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5955%" y="389" width="0.0779%" height="15" fill="rgb(216,14,47)" fg:x="1188" fg:w="1"/><text x="92.8455%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5955%" y="373" width="0.0779%" height="15" fill="rgb(224,130,52)" fg:x="1188" fg:w="1"/><text x="92.8455%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="92.5955%" y="437" width="0.1559%" height="15" fill="rgb(210,229,51)" fg:x="1188" fg:w="2"/><text x="92.8455%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="92.5955%" y="421" width="0.1559%" height="15" fill="rgb(242,13,9)" fg:x="1188" fg:w="2"/><text x="92.8455%" y="431.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="92.6734%" y="405" width="0.0779%" height="15" fill="rgb(252,71,50)" fg:x="1189" fg:w="1"/><text x="92.9234%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (62 samples, 4.83%)</title><rect x="87.9969%" y="549" width="4.8324%" height="15" fill="rgb(218,225,6)" fg:x="1129" fg:w="62"/><text x="88.2469%" y="559.50">&lt;alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (61 samples, 4.75%)</title><rect x="88.0748%" y="533" width="4.7545%" height="15" fill="rgb(219,27,35)" fg:x="1130" fg:w="61"/><text x="88.3248%" y="543.50">&lt;core:..</text></g><g><title>plugins_core::tools::get_occupant_keys (4 samples, 0.31%)</title><rect x="92.5175%" y="517" width="0.3118%" height="15" fill="rgb(226,30,1)" fg:x="1187" fg:w="4"/><text x="92.7675%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (4 samples, 0.31%)</title><rect x="92.5175%" y="501" width="0.3118%" height="15" fill="rgb(227,164,34)" fg:x="1187" fg:w="4"/><text x="92.7675%" y="511.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (4 samples, 0.31%)</title><rect x="92.5175%" y="485" width="0.3118%" height="15" fill="rgb(206,103,4)" fg:x="1187" fg:w="4"/><text x="92.7675%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.23%)</title><rect x="92.5955%" y="469" width="0.2338%" height="15" fill="rgb(214,166,19)" fg:x="1188" fg:w="3"/><text x="92.8455%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.23%)</title><rect x="92.5955%" y="453" width="0.2338%" height="15" fill="rgb(240,56,20)" fg:x="1188" fg:w="3"/><text x="92.8455%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7514%" y="437" width="0.0779%" height="15" fill="rgb(224,25,3)" fg:x="1190" fg:w="1"/><text x="93.0014%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7514%" y="421" width="0.0779%" height="15" fill="rgb(216,206,54)" fg:x="1190" fg:w="1"/><text x="93.0014%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="92.9072%" y="421" width="0.2338%" height="15" fill="rgb(225,142,10)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.23%)</title><rect x="92.9072%" y="405" width="0.2338%" height="15" fill="rgb(246,9,18)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.23%)</title><rect x="92.9072%" y="389" width="0.2338%" height="15" fill="rgb(247,140,18)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.23%)</title><rect x="92.9072%" y="373" width="0.2338%" height="15" fill="rgb(239,184,22)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.23%)</title><rect x="92.9072%" y="357" width="0.2338%" height="15" fill="rgb(227,94,44)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="367.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.23%)</title><rect x="92.9072%" y="341" width="0.2338%" height="15" fill="rgb(219,43,3)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="351.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="92.9072%" y="325" width="0.2338%" height="15" fill="rgb(210,76,31)" fg:x="1192" fg:w="3"/><text x="93.1572%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="92.9072%" y="501" width="0.3118%" height="15" fill="rgb(225,85,12)" fg:x="1192" fg:w="4"/><text x="93.1572%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.31%)</title><rect x="92.9072%" y="485" width="0.3118%" height="15" fill="rgb(214,191,28)" fg:x="1192" fg:w="4"/><text x="93.1572%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.31%)</title><rect x="92.9072%" y="469" width="0.3118%" height="15" fill="rgb(214,43,14)" fg:x="1192" fg:w="4"/><text x="93.1572%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.31%)</title><rect x="92.9072%" y="453" width="0.3118%" height="15" fill="rgb(253,117,5)" fg:x="1192" fg:w="4"/><text x="93.1572%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.31%)</title><rect x="92.9072%" y="437" width="0.3118%" height="15" fill="rgb(208,124,26)" fg:x="1192" fg:w="4"/><text x="93.1572%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="93.1411%" y="421" width="0.0779%" height="15" fill="rgb(228,208,39)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.1411%" y="405" width="0.0779%" height="15" fill="rgb(206,180,39)" fg:x="1195" fg:w="1"/><text x="93.3911%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="93.2970%" y="181" width="0.0779%" height="15" fill="rgb(205,111,37)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="93.2970%" y="165" width="0.0779%" height="15" fill="rgb(208,121,24)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="93.2970%" y="149" width="0.0779%" height="15" fill="rgb(218,215,32)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="159.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="93.2970%" y="133" width="0.0779%" height="15" fill="rgb(244,168,53)" fg:x="1197" fg:w="1"/><text x="93.5470%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.2970%" y="357" width="0.1559%" height="15" fill="rgb(214,9,36)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="93.2970%" y="341" width="0.1559%" height="15" fill="rgb(231,4,34)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="351.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="93.2970%" y="325" width="0.1559%" height="15" fill="rgb(210,83,51)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="93.2970%" y="309" width="0.1559%" height="15" fill="rgb(224,112,1)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="93.2970%" y="293" width="0.1559%" height="15" fill="rgb(216,33,41)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="93.2970%" y="277" width="0.1559%" height="15" fill="rgb(215,179,42)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="93.2970%" y="261" width="0.1559%" height="15" fill="rgb(205,81,48)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="93.2970%" y="245" width="0.1559%" height="15" fill="rgb(246,17,30)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="93.2970%" y="229" width="0.1559%" height="15" fill="rgb(226,19,16)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="93.2970%" y="213" width="0.1559%" height="15" fill="rgb(207,3,14)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="93.2970%" y="197" width="0.1559%" height="15" fill="rgb(226,77,12)" fg:x="1197" fg:w="2"/><text x="93.5470%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.3749%" y="181" width="0.0779%" height="15" fill="rgb(226,76,25)" fg:x="1198" fg:w="1"/><text x="93.6249%" y="191.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="93.4528%" y="341" width="0.0779%" height="15" fill="rgb(217,216,25)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="351.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="93.4528%" y="325" width="0.0779%" height="15" fill="rgb(247,127,42)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="93.4528%" y="309" width="0.0779%" height="15" fill="rgb(226,10,34)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="319.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="93.4528%" y="293" width="0.0779%" height="15" fill="rgb(249,78,0)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="93.4528%" y="277" width="0.0779%" height="15" fill="rgb(226,218,38)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="93.4528%" y="261" width="0.0779%" height="15" fill="rgb(240,92,1)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4528%" y="245" width="0.0779%" height="15" fill="rgb(237,224,33)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.4528%" y="229" width="0.0779%" height="15" fill="rgb(211,46,1)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.4528%" y="213" width="0.0779%" height="15" fill="rgb(239,190,4)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.4528%" y="197" width="0.0779%" height="15" fill="rgb(221,50,22)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.4528%" y="181" width="0.0779%" height="15" fill="rgb(207,176,8)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.4528%" y="165" width="0.0779%" height="15" fill="rgb(244,114,50)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="93.4528%" y="149" width="0.0779%" height="15" fill="rgb(226,206,19)" fg:x="1199" fg:w="1"/><text x="93.7028%" y="159.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.39%)</title><rect x="93.2190%" y="501" width="0.3897%" height="15" fill="rgb(208,199,16)" fg:x="1196" fg:w="5"/><text x="93.4690%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::new (4 samples, 0.31%)</title><rect x="93.2970%" y="485" width="0.3118%" height="15" fill="rgb(208,38,14)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (4 samples, 0.31%)</title><rect x="93.2970%" y="469" width="0.3118%" height="15" fill="rgb(221,211,49)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.31%)</title><rect x="93.2970%" y="453" width="0.3118%" height="15" fill="rgb(227,214,34)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="463.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="93.2970%" y="437" width="0.3118%" height="15" fill="rgb(234,5,54)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.31%)</title><rect x="93.2970%" y="421" width="0.3118%" height="15" fill="rgb(236,215,22)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="431.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (4 samples, 0.31%)</title><rect x="93.2970%" y="405" width="0.3118%" height="15" fill="rgb(244,0,11)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (4 samples, 0.31%)</title><rect x="93.2970%" y="389" width="0.3118%" height="15" fill="rgb(212,140,16)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="399.50"></text></g><g><title>core::fmt::write (4 samples, 0.31%)</title><rect x="93.2970%" y="373" width="0.3118%" height="15" fill="rgb(238,101,37)" fg:x="1197" fg:w="4"/><text x="93.5470%" y="383.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="93.4528%" y="357" width="0.1559%" height="15" fill="rgb(247,46,3)" fg:x="1199" fg:w="2"/><text x="93.7028%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5308%" y="341" width="0.0779%" height="15" fill="rgb(208,106,19)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="93.5308%" y="325" width="0.0779%" height="15" fill="rgb(240,227,15)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="335.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="93.5308%" y="309" width="0.0779%" height="15" fill="rgb(226,173,6)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="93.5308%" y="293" width="0.0779%" height="15" fill="rgb(213,191,1)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="93.5308%" y="277" width="0.0779%" height="15" fill="rgb(246,51,36)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="93.5308%" y="261" width="0.0779%" height="15" fill="rgb(238,40,32)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.5308%" y="245" width="0.0779%" height="15" fill="rgb(208,126,27)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="93.5308%" y="229" width="0.0779%" height="15" fill="rgb(227,117,38)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="93.5308%" y="213" width="0.0779%" height="15" fill="rgb(232,16,1)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="93.5308%" y="197" width="0.0779%" height="15" fill="rgb(212,111,31)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="93.5308%" y="181" width="0.0779%" height="15" fill="rgb(253,227,2)" fg:x="1200" fg:w="1"/><text x="93.7808%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.16%)</title><rect x="95.2455%" y="165" width="0.1559%" height="15" fill="rgb(216,122,17)" fg:x="1222" fg:w="2"/><text x="95.4955%" y="175.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.3235%" y="149" width="0.0779%" height="15" fill="rgb(227,37,2)" fg:x="1223" fg:w="1"/><text x="95.5735%" y="159.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.3235%" y="133" width="0.0779%" height="15" fill="rgb(244,113,40)" fg:x="1223" fg:w="1"/><text x="95.5735%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.3235%" y="117" width="0.0779%" height="15" fill="rgb(217,193,34)" fg:x="1223" fg:w="1"/><text x="95.5735%" y="127.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4014%" y="149" width="0.0779%" height="15" fill="rgb(212,223,15)" fg:x="1224" fg:w="1"/><text x="95.6514%" y="159.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (6 samples, 0.47%)</title><rect x="95.0896%" y="197" width="0.4677%" height="15" fill="rgb(238,143,18)" fg:x="1220" fg:w="6"/><text x="95.3396%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.31%)</title><rect x="95.2455%" y="181" width="0.3118%" height="15" fill="rgb(231,18,49)" fg:x="1222" fg:w="4"/><text x="95.4955%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="95.4014%" y="165" width="0.1559%" height="15" fill="rgb(249,122,4)" fg:x="1224" fg:w="2"/><text x="95.6514%" y="175.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="95.4793%" y="149" width="0.0779%" height="15" fill="rgb(245,138,54)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="159.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="95.4793%" y="133" width="0.0779%" height="15" fill="rgb(218,130,18)" fg:x="1225" fg:w="1"/><text x="95.7293%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.78%)</title><rect x="94.8558%" y="213" width="0.7794%" height="15" fill="rgb(235,94,13)" fg:x="1217" fg:w="10"/><text x="95.1058%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.5573%" y="197" width="0.0779%" height="15" fill="rgb(247,143,5)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.5573%" y="181" width="0.0779%" height="15" fill="rgb(212,59,54)" fg:x="1226" fg:w="1"/><text x="95.8073%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.94%)</title><rect x="94.7779%" y="261" width="0.9353%" height="15" fill="rgb(206,121,24)" fg:x="1216" fg:w="12"/><text x="95.0279%" y="271.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (12 samples, 0.94%)</title><rect x="94.7779%" y="245" width="0.9353%" height="15" fill="rgb(235,38,8)" fg:x="1216" fg:w="12"/><text x="95.0279%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (11 samples, 0.86%)</title><rect x="94.8558%" y="229" width="0.8574%" height="15" fill="rgb(227,102,26)" fg:x="1217" fg:w="11"/><text x="95.1058%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.6352%" y="213" width="0.0779%" height="15" fill="rgb(240,183,46)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.6352%" y="197" width="0.0779%" height="15" fill="rgb(208,177,23)" fg:x="1227" fg:w="1"/><text x="95.8852%" y="207.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (14 samples, 1.09%)</title><rect x="94.6999%" y="293" width="1.0912%" height="15" fill="rgb(216,152,5)" fg:x="1215" fg:w="14"/><text x="94.9499%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (13 samples, 1.01%)</title><rect x="94.7779%" y="277" width="1.0133%" height="15" fill="rgb(238,199,2)" fg:x="1216" fg:w="13"/><text x="95.0279%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="95.7132%" y="261" width="0.0779%" height="15" fill="rgb(235,142,28)" fg:x="1228" fg:w="1"/><text x="95.9632%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.7132%" y="245" width="0.0779%" height="15" fill="rgb(225,97,25)" fg:x="1228" fg:w="1"/><text x="95.9632%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (18 samples, 1.40%)</title><rect x="94.5440%" y="325" width="1.4030%" height="15" fill="rgb(208,75,46)" fg:x="1213" fg:w="18"/><text x="94.7940%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 1.40%)</title><rect x="94.5440%" y="309" width="1.4030%" height="15" fill="rgb(240,136,15)" fg:x="1213" fg:w="18"/><text x="94.7940%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="95.7911%" y="293" width="0.1559%" height="15" fill="rgb(235,36,27)" fg:x="1229" fg:w="2"/><text x="96.0411%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="95.7911%" y="277" width="0.1559%" height="15" fill="rgb(231,132,23)" fg:x="1229" fg:w="2"/><text x="96.0411%" y="287.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (19 samples, 1.48%)</title><rect x="94.5440%" y="341" width="1.4809%" height="15" fill="rgb(205,208,20)" fg:x="1213" fg:w="19"/><text x="94.7940%" y="351.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9470%" y="325" width="0.0779%" height="15" fill="rgb(215,26,40)" fg:x="1231" fg:w="1"/><text x="96.1970%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.9470%" y="309" width="0.0779%" height="15" fill="rgb(238,183,34)" fg:x="1231" fg:w="1"/><text x="96.1970%" y="319.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (1 samples, 0.08%)</title><rect x="95.9470%" y="293" width="0.0779%" height="15" fill="rgb(207,96,10)" fg:x="1231" fg:w="1"/><text x="96.1970%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="95.9470%" y="277" width="0.0779%" height="15" fill="rgb(218,88,6)" fg:x="1231" fg:w="1"/><text x="96.1970%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="95.9470%" y="261" width="0.0779%" height="15" fill="rgb(217,22,49)" fg:x="1231" fg:w="1"/><text x="96.1970%" y="271.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="96.0249%" y="341" width="0.1559%" height="15" fill="rgb(240,195,14)" fg:x="1232" fg:w="2"/><text x="96.2749%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="96.1808%" y="325" width="0.0779%" height="15" fill="rgb(229,48,27)" fg:x="1234" fg:w="1"/><text x="96.4308%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="96.1808%" y="309" width="0.0779%" height="15" fill="rgb(220,194,45)" fg:x="1234" fg:w="1"/><text x="96.4308%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 1.95%)</title><rect x="94.3882%" y="357" width="1.9486%" height="15" fill="rgb(252,60,20)" fg:x="1211" fg:w="25"/><text x="94.6382%" y="367.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.1808%" y="341" width="0.1559%" height="15" fill="rgb(244,169,33)" fg:x="1234" fg:w="2"/><text x="96.4308%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.2588%" y="325" width="0.0779%" height="15" fill="rgb(234,141,34)" fg:x="1235" fg:w="1"/><text x="96.5088%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (27 samples, 2.10%)</title><rect x="94.3102%" y="373" width="2.1044%" height="15" fill="rgb(241,141,9)" fg:x="1210" fg:w="27"/><text x="94.5602%" y="383.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="96.3367%" y="357" width="0.0779%" height="15" fill="rgb(246,27,36)" fg:x="1236" fg:w="1"/><text x="96.5867%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3367%" y="341" width="0.0779%" height="15" fill="rgb(216,188,42)" fg:x="1236" fg:w="1"/><text x="96.5867%" y="351.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (29 samples, 2.26%)</title><rect x="94.2323%" y="389" width="2.2603%" height="15" fill="rgb(234,205,22)" fg:x="1209" fg:w="29"/><text x="94.4823%" y="399.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="96.4147%" y="373" width="0.0779%" height="15" fill="rgb(210,202,32)" fg:x="1237" fg:w="1"/><text x="96.6647%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (33 samples, 2.57%)</title><rect x="93.9984%" y="405" width="2.5721%" height="15" fill="rgb(217,0,48)" fg:x="1206" fg:w="33"/><text x="94.2484%" y="415.50">&lt;c..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4926%" y="389" width="0.0779%" height="15" fill="rgb(207,115,37)" fg:x="1238" fg:w="1"/><text x="96.7426%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.4926%" y="373" width="0.0779%" height="15" fill="rgb(237,221,44)" fg:x="1238" fg:w="1"/><text x="96.7426%" y="383.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (36 samples, 2.81%)</title><rect x="93.9205%" y="437" width="2.8059%" height="15" fill="rgb(249,78,2)" fg:x="1205" fg:w="36"/><text x="94.1705%" y="447.50">&lt;r..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (35 samples, 2.73%)</title><rect x="93.9984%" y="421" width="2.7280%" height="15" fill="rgb(211,169,23)" fg:x="1206" fg:w="35"/><text x="94.2484%" y="431.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="96.5705%" y="405" width="0.1559%" height="15" fill="rgb(207,116,29)" fg:x="1239" fg:w="2"/><text x="96.8205%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6485%" y="389" width="0.0779%" height="15" fill="rgb(240,84,33)" fg:x="1240" fg:w="1"/><text x="96.8985%" y="399.50"></text></g><g><title>&lt;rpc_proto::JsonValue as core::convert::From&lt;serde_json::value::Value&gt;&gt;::from (41 samples, 3.20%)</title><rect x="93.6867%" y="485" width="3.1956%" height="15" fill="rgb(229,224,31)" fg:x="1202" fg:w="41"/><text x="93.9367%" y="495.50">&lt;rp..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (41 samples, 3.20%)</title><rect x="93.6867%" y="469" width="3.1956%" height="15" fill="rgb(227,90,31)" fg:x="1202" fg:w="41"/><text x="93.9367%" y="479.50">&lt;st..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 3.12%)</title><rect x="93.7646%" y="453" width="3.1177%" height="15" fill="rgb(249,22,41)" fg:x="1203" fg:w="40"/><text x="94.0146%" y="463.50">&lt;co..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="96.7264%" y="437" width="0.1559%" height="15" fill="rgb(239,65,11)" fg:x="1241" fg:w="2"/><text x="96.9764%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.8044%" y="421" width="0.0779%" height="15" fill="rgb(205,5,23)" fg:x="1242" fg:w="1"/><text x="97.0544%" y="431.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="96.8823%" y="453" width="0.0779%" height="15" fill="rgb(254,78,52)" fg:x="1243" fg:w="1"/><text x="97.1323%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.23%)</title><rect x="96.9602%" y="437" width="0.2338%" height="15" fill="rgb(214,156,33)" fg:x="1244" fg:w="3"/><text x="97.2102%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.1941%" y="437" width="0.1559%" height="15" fill="rgb(208,20,30)" fg:x="1247" fg:w="2"/><text x="97.4441%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.2720%" y="421" width="0.0779%" height="15" fill="rgb(223,133,18)" fg:x="1248" fg:w="1"/><text x="97.5220%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.2720%" y="405" width="0.0779%" height="15" fill="rgb(222,91,41)" fg:x="1248" fg:w="1"/><text x="97.5220%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.3500%" y="405" width="0.0779%" height="15" fill="rgb(247,137,48)" fg:x="1249" fg:w="1"/><text x="97.6000%" y="415.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (2 samples, 0.16%)</title><rect x="97.3500%" y="437" width="0.1559%" height="15" fill="rgb(239,156,11)" fg:x="1249" fg:w="2"/><text x="97.6000%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="97.3500%" y="421" width="0.1559%" height="15" fill="rgb(244,56,26)" fg:x="1249" fg:w="2"/><text x="97.6000%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4279%" y="405" width="0.0779%" height="15" fill="rgb(205,131,49)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.4279%" y="389" width="0.0779%" height="15" fill="rgb(224,0,2)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="97.4279%" y="373" width="0.0779%" height="15" fill="rgb(247,59,36)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="97.4279%" y="357" width="0.0779%" height="15" fill="rgb(215,4,47)" fg:x="1250" fg:w="1"/><text x="97.6779%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="97.5838%" y="389" width="0.1559%" height="15" fill="rgb(242,72,42)" fg:x="1252" fg:w="2"/><text x="97.8338%" y="399.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.6617%" y="373" width="0.0779%" height="15" fill="rgb(232,145,44)" fg:x="1253" fg:w="1"/><text x="97.9117%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.6617%" y="357" width="0.0779%" height="15" fill="rgb(205,108,43)" fg:x="1253" fg:w="1"/><text x="97.9117%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="97.8176%" y="341" width="0.0779%" height="15" fill="rgb(215,190,17)" fg:x="1255" fg:w="1"/><text x="98.0676%" y="351.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8956%" y="325" width="0.0779%" height="15" fill="rgb(223,90,34)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="335.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.8956%" y="309" width="0.0779%" height="15" fill="rgb(216,25,0)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="319.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="97.8956%" y="293" width="0.0779%" height="15" fill="rgb(223,51,28)" fg:x="1256" fg:w="1"/><text x="98.1456%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9735%" y="293" width="0.0779%" height="15" fill="rgb(227,131,7)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="97.9735%" y="277" width="0.0779%" height="15" fill="rgb(216,72,36)" fg:x="1257" fg:w="1"/><text x="98.2235%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="98.1294%" y="277" width="0.0779%" height="15" fill="rgb(243,158,40)" fg:x="1259" fg:w="1"/><text x="98.3794%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.55%)</title><rect x="97.7397%" y="373" width="0.5456%" height="15" fill="rgb(218,60,54)" fg:x="1254" fg:w="7"/><text x="97.9897%" y="383.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.55%)</title><rect x="97.7397%" y="357" width="0.5456%" height="15" fill="rgb(230,15,46)" fg:x="1254" fg:w="7"/><text x="97.9897%" y="367.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.39%)</title><rect x="97.8956%" y="341" width="0.3897%" height="15" fill="rgb(250,22,26)" fg:x="1256" fg:w="5"/><text x="98.1456%" y="351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.31%)</title><rect x="97.9735%" y="325" width="0.3118%" height="15" fill="rgb(239,194,40)" fg:x="1257" fg:w="4"/><text x="98.2235%" y="335.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.31%)</title><rect x="97.9735%" y="309" width="0.3118%" height="15" fill="rgb(219,62,9)" fg:x="1257" fg:w="4"/><text x="98.2235%" y="319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.23%)</title><rect x="98.0514%" y="293" width="0.2338%" height="15" fill="rgb(228,45,21)" fg:x="1258" fg:w="3"/><text x="98.3014%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2073%" y="277" width="0.0779%" height="15" fill="rgb(242,56,44)" fg:x="1260" fg:w="1"/><text x="98.4573%" y="287.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.78%)</title><rect x="97.5838%" y="405" width="0.7794%" height="15" fill="rgb(239,170,14)" fg:x="1252" fg:w="10"/><text x="97.8338%" y="415.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.62%)</title><rect x="97.7397%" y="389" width="0.6235%" height="15" fill="rgb(236,150,13)" fg:x="1254" fg:w="8"/><text x="97.9897%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.2853%" y="373" width="0.0779%" height="15" fill="rgb(228,15,30)" fg:x="1261" fg:w="1"/><text x="98.5353%" y="383.50"></text></g><g><title>&lt;rpc_proto::Json as core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt;&gt;::try_from (62 samples, 4.83%)</title><rect x="93.6087%" y="501" width="4.8324%" height="15" fill="rgb(217,43,28)" fg:x="1201" fg:w="62"/><text x="93.8587%" y="511.50">&lt;rpc_p..</text></g><g><title>kernel::model::EntityPtr::to_json_value (20 samples, 1.56%)</title><rect x="96.8823%" y="485" width="1.5588%" height="15" fill="rgb(246,223,1)" fg:x="1243" fg:w="20"/><text x="97.1323%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.56%)</title><rect x="96.8823%" y="469" width="1.5588%" height="15" fill="rgb(247,103,7)" fg:x="1243" fg:w="20"/><text x="97.1323%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.48%)</title><rect x="96.9602%" y="453" width="1.4809%" height="15" fill="rgb(205,105,39)" fg:x="1244" fg:w="19"/><text x="97.2102%" y="463.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.94%)</title><rect x="97.5058%" y="437" width="0.9353%" height="15" fill="rgb(216,134,18)" fg:x="1251" fg:w="12"/><text x="97.7558%" y="447.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.94%)</title><rect x="97.5058%" y="421" width="0.9353%" height="15" fill="rgb(226,139,50)" fg:x="1251" fg:w="12"/><text x="97.7558%" y="431.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="98.3632%" y="405" width="0.0779%" height="15" fill="rgb(251,152,38)" fg:x="1262" fg:w="1"/><text x="98.6132%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.3632%" y="389" width="0.0779%" height="15" fill="rgb(222,63,15)" fg:x="1262" fg:w="1"/><text x="98.6132%" y="399.50"></text></g><g><title>core::iter::adapters::try_process (135 samples, 10.52%)</title><rect x="87.9969%" y="565" width="10.5222%" height="15" fill="rgb(212,198,28)" fg:x="1129" fg:w="135"/><text x="88.2469%" y="575.50">core::iter::ada..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (73 samples, 5.69%)</title><rect x="92.8293%" y="549" width="5.6898%" height="15" fill="rgb(216,93,38)" fg:x="1191" fg:w="73"/><text x="93.0793%" y="559.50">alloc::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 5.69%)</title><rect x="92.8293%" y="533" width="5.6898%" height="15" fill="rgb(247,202,44)" fg:x="1191" fg:w="73"/><text x="93.0793%" y="543.50">&lt;core::..</text></g><g><title>plugins_rpc::sessions::SessionServices::lookup_one (72 samples, 5.61%)</title><rect x="92.9072%" y="517" width="5.6118%" height="15" fill="rgb(237,204,46)" fg:x="1192" fg:w="72"/><text x="93.1572%" y="527.50">plugins..</text></g><g><title>rpc_proto::&lt;impl core::convert::From&lt;&amp;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::from (1 samples, 0.08%)</title><rect x="98.4412%" y="501" width="0.0779%" height="15" fill="rgb(224,98,48)" fg:x="1263" fg:w="1"/><text x="98.6912%" y="511.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="98.4412%" y="485" width="0.0779%" height="15" fill="rgb(247,105,21)" fg:x="1263" fg:w="1"/><text x="98.6912%" y="495.50"></text></g><g><title>&lt;plugins_rpc::sessions::SessionServices as plugins_rpc::sessions::Services&gt;::lookup (146 samples, 11.38%)</title><rect x="87.2954%" y="581" width="11.3796%" height="15" fill="rgb(212,137,52)" fg:x="1120" fg:w="146"/><text x="87.5454%" y="591.50">&lt;plugins_rpc::ses..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="98.5191%" y="565" width="0.1559%" height="15" fill="rgb(223,76,33)" fg:x="1264" fg:w="2"/><text x="98.7691%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="98.5191%" y="549" width="0.1559%" height="15" fill="rgb(209,156,27)" fg:x="1264" fg:w="2"/><text x="98.7691%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="98.5970%" y="533" width="0.0779%" height="15" fill="rgb(249,81,54)" fg:x="1265" fg:w="1"/><text x="98.8470%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.6750%" y="581" width="0.0779%" height="15" fill="rgb(241,46,29)" fg:x="1266" fg:w="1"/><text x="98.9250%" y="591.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (220 samples, 17.15%)</title><rect x="81.7615%" y="645" width="17.1473%" height="15" fill="rgb(213,193,39)" fg:x="1049" fg:w="220"/><text x="82.0115%" y="655.50">&lt;engine::perform::StandardP..</text></g><g><title>kernel::plugins::SessionPlugins::have_surroundings (166 samples, 12.94%)</title><rect x="85.9704%" y="629" width="12.9384%" height="15" fill="rgb(214,85,16)" fg:x="1103" fg:w="166"/><text x="86.2204%" y="639.50">kernel::plugins::Se..</text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::have_surroundings (166 samples, 12.94%)</title><rect x="85.9704%" y="613" width="12.9384%" height="15" fill="rgb(216,184,17)" fg:x="1103" fg:w="166"/><text x="86.2204%" y="623.50">&lt;plugins_dynlib::Dy..</text></g><g><title>plugins_rpc::querying::have_surroundings (151 samples, 11.77%)</title><rect x="87.1395%" y="597" width="11.7693%" height="15" fill="rgb(254,219,29)" fg:x="1118" fg:w="151"/><text x="87.3895%" y="607.50">plugins_rpc::quer..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="98.7529%" y="581" width="0.1559%" height="15" fill="rgb(209,148,34)" fg:x="1267" fg:w="2"/><text x="99.0029%" y="591.50"></text></g><g><title>rpc_proto::&lt;impl core::convert::Into&lt;rpc_proto::EntityKey&gt; for kernel::model::base::EntityKey&gt;::into (2 samples, 0.16%)</title><rect x="98.7529%" y="565" width="0.1559%" height="15" fill="rgb(253,215,11)" fg:x="1267" fg:w="2"/><text x="99.0029%" y="575.50"></text></g><g><title>kernel::model::base::&lt;impl core::convert::From&lt;kernel::model::base::EntityKey&gt; for alloc::string::String&gt;::from (2 samples, 0.16%)</title><rect x="98.7529%" y="549" width="0.1559%" height="15" fill="rgb(232,126,20)" fg:x="1267" fg:w="2"/><text x="99.0029%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::scopes::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.9088%" y="581" width="0.0779%" height="15" fill="rgb(248,118,51)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="591.50"></text></g><g><title>kernel::model::scopes::load_props (1 samples, 0.08%)</title><rect x="98.9088%" y="565" width="0.0779%" height="15" fill="rgb(226,121,21)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="575.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="98.9088%" y="549" width="0.0779%" height="15" fill="rgb(216,128,16)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="98.9088%" y="533" width="0.0779%" height="15" fill="rgb(205,17,9)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9088%" y="517" width="0.0779%" height="15" fill="rgb(206,197,21)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9088%" y="501" width="0.0779%" height="15" fill="rgb(212,202,9)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9088%" y="485" width="0.0779%" height="15" fill="rgb(241,131,50)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="98.9088%" y="469" width="0.0779%" height="15" fill="rgb(228,115,51)" fg:x="1269" fg:w="1"/><text x="99.1588%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9867%" y="453" width="0.0779%" height="15" fill="rgb(237,209,8)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9867%" y="437" width="0.0779%" height="15" fill="rgb(241,121,28)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9867%" y="421" width="0.0779%" height="15" fill="rgb(238,194,51)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9867%" y="405" width="0.0779%" height="15" fill="rgb(208,41,39)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9867%" y="389" width="0.0779%" height="15" fill="rgb(223,95,44)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9867%" y="373" width="0.0779%" height="15" fill="rgb(253,98,40)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="383.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="98.9867%" y="357" width="0.0779%" height="15" fill="rgb(210,5,12)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="98.9867%" y="341" width="0.0779%" height="15" fill="rgb(233,201,23)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="351.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="98.9867%" y="325" width="0.0779%" height="15" fill="rgb(251,68,15)" fg:x="1270" fg:w="1"/><text x="99.2367%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (2 samples, 0.16%)</title><rect x="98.9867%" y="565" width="0.1559%" height="15" fill="rgb(243,10,46)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="575.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (2 samples, 0.16%)</title><rect x="98.9867%" y="549" width="0.1559%" height="15" fill="rgb(253,130,44)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="98.9867%" y="533" width="0.1559%" height="15" fill="rgb(244,5,26)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.9867%" y="517" width="0.1559%" height="15" fill="rgb(220,126,20)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="527.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9867%" y="501" width="0.1559%" height="15" fill="rgb(212,188,29)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="98.9867%" y="485" width="0.1559%" height="15" fill="rgb(227,194,48)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="98.9867%" y="469" width="0.1559%" height="15" fill="rgb(245,64,28)" fg:x="1270" fg:w="2"/><text x="99.2367%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0647%" y="453" width="0.0779%" height="15" fill="rgb(205,44,7)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0647%" y="437" width="0.0779%" height="15" fill="rgb(213,193,11)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.0647%" y="421" width="0.0779%" height="15" fill="rgb(238,157,6)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="99.0647%" y="405" width="0.0779%" height="15" fill="rgb(222,73,7)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="99.0647%" y="389" width="0.0779%" height="15" fill="rgb(224,78,15)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0647%" y="373" width="0.0779%" height="15" fill="rgb(218,149,46)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.0647%" y="357" width="0.0779%" height="15" fill="rgb(218,175,44)" fg:x="1271" fg:w="1"/><text x="99.3147%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.39%)</title><rect x="98.9088%" y="613" width="0.3897%" height="15" fill="rgb(215,183,45)" fg:x="1269" fg:w="5"/><text x="99.1588%" y="623.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.39%)</title><rect x="98.9088%" y="597" width="0.3897%" height="15" fill="rgb(226,116,37)" fg:x="1269" fg:w="5"/><text x="99.1588%" y="607.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.31%)</title><rect x="98.9867%" y="581" width="0.3118%" height="15" fill="rgb(252,224,12)" fg:x="1270" fg:w="4"/><text x="99.2367%" y="591.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="99.1426%" y="565" width="0.1559%" height="15" fill="rgb(232,212,21)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1426%" y="549" width="0.1559%" height="15" fill="rgb(226,191,16)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1426%" y="533" width="0.1559%" height="15" fill="rgb(231,156,11)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1426%" y="517" width="0.1559%" height="15" fill="rgb(225,134,49)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="99.1426%" y="501" width="0.1559%" height="15" fill="rgb(254,55,32)" fg:x="1272" fg:w="2"/><text x="99.3926%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.2206%" y="485" width="0.0779%" height="15" fill="rgb(242,195,29)" fg:x="1273" fg:w="1"/><text x="99.4706%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2206%" y="469" width="0.0779%" height="15" fill="rgb(210,155,20)" fg:x="1273" fg:w="1"/><text x="99.4706%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2206%" y="453" width="0.0779%" height="15" fill="rgb(243,170,23)" fg:x="1273" fg:w="1"/><text x="99.4706%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.2206%" y="437" width="0.0779%" height="15" fill="rgb(242,197,51)" fg:x="1273" fg:w="1"/><text x="99.4706%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2985%" y="485" width="0.0779%" height="15" fill="rgb(248,48,13)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="99.2985%" y="469" width="0.0779%" height="15" fill="rgb(221,185,15)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="99.2985%" y="453" width="0.0779%" height="15" fill="rgb(244,49,7)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="99.2985%" y="437" width="0.0779%" height="15" fill="rgb(213,182,52)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="99.2985%" y="421" width="0.0779%" height="15" fill="rgb(209,15,45)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="99.2985%" y="405" width="0.0779%" height="15" fill="rgb(233,23,44)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2985%" y="389" width="0.0779%" height="15" fill="rgb(220,182,30)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="99.2985%" y="373" width="0.0779%" height="15" fill="rgb(219,116,33)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="99.2985%" y="357" width="0.0779%" height="15" fill="rgb(231,15,21)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="99.2985%" y="341" width="0.0779%" height="15" fill="rgb(238,119,25)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="99.2985%" y="325" width="0.0779%" height="15" fill="rgb(232,30,39)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="99.2985%" y="309" width="0.0779%" height="15" fill="rgb(241,26,30)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="99.2985%" y="293" width="0.0779%" height="15" fill="rgb(234,154,4)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="303.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="99.2985%" y="277" width="0.0779%" height="15" fill="rgb(229,199,39)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="287.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="99.2985%" y="261" width="0.0779%" height="15" fill="rgb(236,213,10)" fg:x="1274" fg:w="1"/><text x="99.5485%" y="271.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (7 samples, 0.55%)</title><rect x="98.9088%" y="629" width="0.5456%" height="15" fill="rgb(247,28,19)" fg:x="1269" fg:w="7"/><text x="99.1588%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="99.2985%" y="613" width="0.1559%" height="15" fill="rgb(239,199,24)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="623.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="99.2985%" y="597" width="0.1559%" height="15" fill="rgb(246,122,13)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="99.2985%" y="581" width="0.1559%" height="15" fill="rgb(210,203,29)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="591.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.2985%" y="565" width="0.1559%" height="15" fill="rgb(218,4,50)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="99.2985%" y="549" width="0.1559%" height="15" fill="rgb(236,142,48)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="99.2985%" y="533" width="0.1559%" height="15" fill="rgb(245,173,2)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="99.2985%" y="517" width="0.1559%" height="15" fill="rgb(244,196,18)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="99.2985%" y="501" width="0.1559%" height="15" fill="rgb(221,27,33)" fg:x="1274" fg:w="2"/><text x="99.5485%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.3765%" y="485" width="0.0779%" height="15" fill="rgb(210,206,16)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="99.3765%" y="469" width="0.0779%" height="15" fill="rgb(238,161,34)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="99.3765%" y="453" width="0.0779%" height="15" fill="rgb(243,118,39)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="99.3765%" y="437" width="0.0779%" height="15" fill="rgb(234,126,9)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="447.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="99.3765%" y="421" width="0.0779%" height="15" fill="rgb(234,167,42)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="99.3765%" y="405" width="0.0779%" height="15" fill="rgb(238,54,48)" fg:x="1275" fg:w="1"/><text x="99.6265%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.4544%" y="597" width="0.0779%" height="15" fill="rgb(226,105,2)" fg:x="1276" fg:w="1"/><text x="99.7044%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="99.4544%" y="581" width="0.0779%" height="15" fill="rgb(223,95,23)" fg:x="1276" fg:w="1"/><text x="99.7044%" y="591.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::scopes::Performer&gt;::perform (229 samples, 17.85%)</title><rect x="81.7615%" y="661" width="17.8488%" height="15" fill="rgb(249,212,19)" fg:x="1049" fg:w="229"/><text x="82.0115%" y="671.50">&lt;engine::perform::StandardPe..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (9 samples, 0.70%)</title><rect x="98.9088%" y="645" width="0.7015%" height="15" fill="rgb(234,158,54)" fg:x="1269" fg:w="9"/><text x="99.1588%" y="655.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (2 samples, 0.16%)</title><rect x="99.4544%" y="629" width="0.1559%" height="15" fill="rgb(247,114,32)" fg:x="1276" fg:w="2"/><text x="99.7044%" y="639.50"></text></g><g><title>engine::users::model::username_to_key (2 samples, 0.16%)</title><rect x="99.4544%" y="613" width="0.1559%" height="15" fill="rgb(250,68,44)" fg:x="1276" fg:w="2"/><text x="99.7044%" y="623.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="99.5323%" y="597" width="0.0779%" height="15" fill="rgb(242,3,15)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="607.50"></text></g><g><title>kernel::model::entity::Entity::load_scope (1 samples, 0.08%)</title><rect x="99.5323%" y="581" width="0.0779%" height="15" fill="rgb(223,110,32)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5323%" y="565" width="0.0779%" height="15" fill="rgb(216,26,54)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="575.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5323%" y="549" width="0.0779%" height="15" fill="rgb(209,145,42)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5323%" y="533" width="0.0779%" height="15" fill="rgb(240,111,53)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="99.5323%" y="517" width="0.0779%" height="15" fill="rgb(209,101,4)" fg:x="1277" fg:w="1"/><text x="99.7823%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="99.6103%" y="613" width="0.0779%" height="15" fill="rgb(231,74,29)" fg:x="1278" fg:w="1"/><text x="99.8603%" y="623.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.6103%" y="661" width="0.1559%" height="15" fill="rgb(223,12,12)" fg:x="1278" fg:w="2"/><text x="99.8603%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.6103%" y="645" width="0.1559%" height="15" fill="rgb(207,162,2)" fg:x="1278" fg:w="2"/><text x="99.8603%" y="655.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (2 samples, 0.16%)</title><rect x="99.6103%" y="629" width="0.1559%" height="15" fill="rgb(230,152,0)" fg:x="1278" fg:w="2"/><text x="99.8603%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.6882%" y="613" width="0.0779%" height="15" fill="rgb(254,156,19)" fg:x="1279" fg:w="1"/><text x="99.9382%" y="623.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (233 samples, 18.16%)</title><rect x="81.6836%" y="741" width="18.1606%" height="15" fill="rgb(250,28,0)" fg:x="1048" fg:w="233"/><text x="81.9336%" y="751.50">&lt;kernel::plugins::SessionPlu..</text></g><g><title>core::iter::adapters::try_process (233 samples, 18.16%)</title><rect x="81.6836%" y="725" width="18.1606%" height="15" fill="rgb(253,27,5)" fg:x="1048" fg:w="233"/><text x="81.9336%" y="735.50">core::iter::adapters::try_pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (233 samples, 18.16%)</title><rect x="81.6836%" y="709" width="18.1606%" height="15" fill="rgb(244,154,7)" fg:x="1048" fg:w="233"/><text x="81.9336%" y="719.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (233 samples, 18.16%)</title><rect x="81.6836%" y="693" width="18.1606%" height="15" fill="rgb(242,108,21)" fg:x="1048" fg:w="233"/><text x="81.9336%" y="703.50">&lt;core::iter::adapters::map::..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (233 samples, 18.16%)</title><rect x="81.6836%" y="677" width="18.1606%" height="15" fill="rgb(254,200,38)" fg:x="1048" fg:w="233"/><text x="81.9336%" y="687.50">&lt;plugins_core::carrying::Car..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.7662%" y="661" width="0.0779%" height="15" fill="rgb(250,145,41)" fg:x="1280" fg:w="1"/><text x="100.0162%" y="671.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.8441%" y="741" width="0.0779%" height="15" fill="rgb(235,136,31)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="751.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="99.8441%" y="725" width="0.0779%" height="15" fill="rgb(215,13,18)" fg:x="1281" fg:w="1"/><text x="100.0941%" y="735.50"></text></g><g><title>all (1,283 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(238,199,12)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1135.50"></text></g><g><title>simple-5e588292 (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(242,179,49)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1119.50">simple-5e588292</text></g><g><title>_start (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(214,10,44)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1103.50">_start</text></g><g><title>__libc_start_main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(229,181,11)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1087.50">__libc_start_main</text></g><g><title>main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(244,155,10)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1071.50">main</text></g><g><title>std::rt::lang_start_internal (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(254,13,48)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1055.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(210,164,6)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1039.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,283 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(216,187,40)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1023.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,283 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(208,143,21)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="1007.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,283 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(211,73,41)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="991.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,283 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(244,69,21)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,283 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(230,152,32)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,283 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(208,110,18)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="943.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,283 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(214,201,49)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="927.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,283 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(253,153,27)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="911.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,283 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(238,61,11)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="895.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,283 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(227,84,2)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="879.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,283 samples, 100.00%)</title><rect x="0.0000%" y="853" width="100.0000%" height="15" fill="rgb(233,52,8)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="863.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,283 samples, 100.00%)</title><rect x="0.0000%" y="837" width="100.0000%" height="15" fill="rgb(209,136,13)" fg:x="0" fg:w="1283"/><text x="0.2500%" y="847.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (438 samples, 34.14%)</title><rect x="65.8613%" y="821" width="34.1387%" height="15" fill="rgb(229,86,25)" fg:x="845" fg:w="438"/><text x="66.1113%" y="831.50">&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::rout..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (438 samples, 34.14%)</title><rect x="65.8613%" y="805" width="34.1387%" height="15" fill="rgb(235,47,16)" fg:x="845" fg:w="438"/><text x="66.1113%" y="815.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (438 samples, 34.14%)</title><rect x="65.8613%" y="789" width="34.1387%" height="15" fill="rgb(231,186,4)" fg:x="845" fg:w="438"/><text x="66.1113%" y="799.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (235 samples, 18.32%)</title><rect x="81.6836%" y="773" width="18.3164%" height="15" fill="rgb(209,213,23)" fg:x="1048" fg:w="235"/><text x="81.9336%" y="783.50">engine::session::Session::eva..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (235 samples, 18.32%)</title><rect x="81.6836%" y="757" width="18.3164%" height="15" fill="rgb(212,142,47)" fg:x="1048" fg:w="235"/><text x="81.9336%" y="767.50">engine::perform::StandardPerf..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="99.9221%" y="741" width="0.0779%" height="15" fill="rgb(251,86,24)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="751.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="99.9221%" y="725" width="0.0779%" height="15" fill="rgb(206,217,17)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="735.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="99.9221%" y="709" width="0.0779%" height="15" fill="rgb(248,92,38)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="99.9221%" y="693" width="0.0779%" height="15" fill="rgb(214,25,29)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="703.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="99.9221%" y="677" width="0.0779%" height="15" fill="rgb(245,117,13)" fg:x="1282" fg:w="1"/><text x="100.1721%" y="687.50"></text></g></svg></svg>