<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1206" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1189.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1189.00"> </text><svg id="frames" x="10" width="1180" total_samples="1243"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.2414%" y="773" width="0.1609%" height="15" fill="rgb(244,92,0)" fg:x="3" fg:w="2"/><text x="0.4914%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.40%)</title><rect x="0.1609%" y="789" width="0.4023%" height="15" fill="rgb(225,57,15)" fg:x="2" fg:w="5"/><text x="0.4109%" y="799.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="0.4023%" y="773" width="0.1609%" height="15" fill="rgb(228,5,28)" fg:x="5" fg:w="2"/><text x="0.6523%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.5632%" y="757" width="0.0805%" height="15" fill="rgb(252,34,51)" fg:x="7" fg:w="1"/><text x="0.8132%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.8850%" y="693" width="0.0805%" height="15" fill="rgb(235,58,7)" fg:x="11" fg:w="1"/><text x="1.1350%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.40%)</title><rect x="0.9654%" y="693" width="0.4023%" height="15" fill="rgb(250,132,20)" fg:x="12" fg:w="5"/><text x="1.2154%" y="703.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="1.1263%" y="677" width="0.2414%" height="15" fill="rgb(217,164,0)" fg:x="14" fg:w="3"/><text x="1.3763%" y="687.50"></text></g><g><title>__libc_free (4 samples, 0.32%)</title><rect x="1.3677%" y="677" width="0.3218%" height="15" fill="rgb(208,220,35)" fg:x="17" fg:w="4"/><text x="1.6177%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="1.6895%" y="677" width="0.1609%" height="15" fill="rgb(227,42,51)" fg:x="21" fg:w="2"/><text x="1.9395%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.7699%" y="661" width="0.0805%" height="15" fill="rgb(225,146,38)" fg:x="22" fg:w="1"/><text x="2.0199%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.9308%" y="661" width="0.0805%" height="15" fill="rgb(252,108,37)" fg:x="24" fg:w="1"/><text x="2.1808%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 1.77%)</title><rect x="0.8045%" y="709" width="1.7699%" height="15" fill="rgb(244,101,24)" fg:x="10" fg:w="22"/><text x="1.0545%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="1.3677%" y="693" width="1.2068%" height="15" fill="rgb(213,161,50)" fg:x="17" fg:w="15"/><text x="1.6177%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="1.8504%" y="677" width="0.7241%" height="15" fill="rgb(248,159,19)" fg:x="23" fg:w="9"/><text x="2.1004%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="2.0113%" y="661" width="0.5632%" height="15" fill="rgb(233,179,15)" fg:x="25" fg:w="7"/><text x="2.2613%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="2.1722%" y="645" width="0.4023%" height="15" fill="rgb(248,178,3)" fg:x="27" fg:w="5"/><text x="2.4222%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.3331%" y="629" width="0.2414%" height="15" fill="rgb(245,190,41)" fg:x="29" fg:w="3"/><text x="2.5831%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4940%" y="613" width="0.0805%" height="15" fill="rgb(218,151,19)" fg:x="31" fg:w="1"/><text x="2.7440%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 2.01%)</title><rect x="0.6436%" y="725" width="2.0113%" height="15" fill="rgb(245,25,44)" fg:x="8" fg:w="25"/><text x="0.8936%" y="735.50">&lt;..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.5744%" y="709" width="0.0805%" height="15" fill="rgb(235,172,47)" fg:x="32" fg:w="1"/><text x="2.8244%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.17%)</title><rect x="0.5632%" y="773" width="2.1722%" height="15" fill="rgb(246,33,12)" fg:x="7" fg:w="27"/><text x="0.8132%" y="783.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (26 samples, 2.09%)</title><rect x="0.6436%" y="757" width="2.0917%" height="15" fill="rgb(214,124,7)" fg:x="8" fg:w="26"/><text x="0.8936%" y="767.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 2.09%)</title><rect x="0.6436%" y="741" width="2.0917%" height="15" fill="rgb(246,186,18)" fg:x="8" fg:w="26"/><text x="0.8936%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="2.6549%" y="725" width="0.0805%" height="15" fill="rgb(231,94,1)" fg:x="33" fg:w="1"/><text x="2.9049%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (28 samples, 2.25%)</title><rect x="0.5632%" y="789" width="2.2526%" height="15" fill="rgb(208,33,48)" fg:x="7" fg:w="28"/><text x="0.8132%" y="799.50">c..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7353%" y="773" width="0.0805%" height="15" fill="rgb(208,195,44)" fg:x="34" fg:w="1"/><text x="2.9853%" y="783.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 2.74%)</title><rect x="0.1609%" y="805" width="2.7353%" height="15" fill="rgb(226,13,52)" fg:x="2" fg:w="34"/><text x="0.4109%" y="815.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::storage::InMemoryStorage&gt; (1 samples, 0.08%)</title><rect x="2.8158%" y="789" width="0.0805%" height="15" fill="rgb(217,219,45)" fg:x="35" fg:w="1"/><text x="3.0658%" y="799.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="2.8158%" y="773" width="0.0805%" height="15" fill="rgb(223,45,25)" fg:x="35" fg:w="1"/><text x="3.0658%" y="783.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="3.0571%" y="757" width="0.0805%" height="15" fill="rgb(241,163,0)" fg:x="38" fg:w="1"/><text x="3.3071%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.0571%" y="741" width="0.0805%" height="15" fill="rgb(216,68,47)" fg:x="38" fg:w="1"/><text x="3.3071%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.2180%" y="709" width="0.0805%" height="15" fill="rgb(236,119,45)" fg:x="40" fg:w="1"/><text x="3.4680%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="3.2985%" y="709" width="0.0805%" height="15" fill="rgb(209,188,24)" fg:x="41" fg:w="1"/><text x="3.5485%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="3.2985%" y="693" width="0.0805%" height="15" fill="rgb(221,118,7)" fg:x="41" fg:w="1"/><text x="3.5485%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="3.2985%" y="677" width="0.0805%" height="15" fill="rgb(213,148,43)" fg:x="41" fg:w="1"/><text x="3.5485%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="3.2985%" y="661" width="0.0805%" height="15" fill="rgb(231,21,43)" fg:x="41" fg:w="1"/><text x="3.5485%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.2985%" y="645" width="0.0805%" height="15" fill="rgb(232,213,43)" fg:x="41" fg:w="1"/><text x="3.5485%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="3.2985%" y="629" width="0.0805%" height="15" fill="rgb(239,145,50)" fg:x="41" fg:w="1"/><text x="3.5485%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="3.2985%" y="613" width="0.0805%" height="15" fill="rgb(222,131,18)" fg:x="41" fg:w="1"/><text x="3.5485%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="3.2985%" y="597" width="0.0805%" height="15" fill="rgb(243,181,13)" fg:x="41" fg:w="1"/><text x="3.5485%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="3.2985%" y="581" width="0.0805%" height="15" fill="rgb(212,74,41)" fg:x="41" fg:w="1"/><text x="3.5485%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="3.2985%" y="565" width="0.0805%" height="15" fill="rgb(237,143,34)" fg:x="41" fg:w="1"/><text x="3.5485%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.2985%" y="549" width="0.0805%" height="15" fill="rgb(228,139,0)" fg:x="41" fg:w="1"/><text x="3.5485%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="3.2985%" y="533" width="0.0805%" height="15" fill="rgb(227,214,11)" fg:x="41" fg:w="1"/><text x="3.5485%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="3.2985%" y="517" width="0.0805%" height="15" fill="rgb(228,118,39)" fg:x="41" fg:w="1"/><text x="3.5485%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="3.2985%" y="501" width="0.0805%" height="15" fill="rgb(207,117,22)" fg:x="41" fg:w="1"/><text x="3.5485%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.08%)</title><rect x="3.2985%" y="485" width="0.0805%" height="15" fill="rgb(225,91,8)" fg:x="41" fg:w="1"/><text x="3.5485%" y="495.50"></text></g><g><title>dlerror (2 samples, 0.16%)</title><rect x="3.4594%" y="693" width="0.1609%" height="15" fill="rgb(230,219,48)" fg:x="43" fg:w="2"/><text x="3.7094%" y="703.50"></text></g><g><title>__asprintf (1 samples, 0.08%)</title><rect x="3.5398%" y="677" width="0.0805%" height="15" fill="rgb(244,0,23)" fg:x="44" fg:w="1"/><text x="3.7898%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (23 samples, 1.85%)</title><rect x="3.2180%" y="725" width="1.8504%" height="15" fill="rgb(206,212,23)" fg:x="40" fg:w="23"/><text x="3.4680%" y="735.50">&lt;..</text></g><g><title>libloading::safe::Library::new (21 samples, 1.69%)</title><rect x="3.3789%" y="709" width="1.6895%" height="15" fill="rgb(254,62,10)" fg:x="42" fg:w="21"/><text x="3.6289%" y="719.50"></text></g><g><title>dlopen (18 samples, 1.45%)</title><rect x="3.6203%" y="693" width="1.4481%" height="15" fill="rgb(236,58,8)" fg:x="45" fg:w="18"/><text x="3.8703%" y="703.50"></text></g><g><title>_dl_catch_error (17 samples, 1.37%)</title><rect x="3.7007%" y="677" width="1.3677%" height="15" fill="rgb(232,212,17)" fg:x="46" fg:w="17"/><text x="3.9507%" y="687.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.37%)</title><rect x="3.7007%" y="661" width="1.3677%" height="15" fill="rgb(206,132,9)" fg:x="46" fg:w="17"/><text x="3.9507%" y="671.50"></text></g><g><title>_dl_catch_exception (17 samples, 1.37%)</title><rect x="3.7007%" y="645" width="1.3677%" height="15" fill="rgb(234,97,28)" fg:x="46" fg:w="17"/><text x="3.9507%" y="655.50"></text></g><g><title>_dl_catch_exception (16 samples, 1.29%)</title><rect x="3.7812%" y="629" width="1.2872%" height="15" fill="rgb(254,144,9)" fg:x="47" fg:w="16"/><text x="4.0312%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (25 samples, 2.01%)</title><rect x="3.1376%" y="741" width="2.0113%" height="15" fill="rgb(244,204,43)" fg:x="39" fg:w="25"/><text x="3.3876%" y="751.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="5.0684%" y="725" width="0.0805%" height="15" fill="rgb(248,177,16)" fg:x="63" fg:w="1"/><text x="5.3184%" y="735.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="5.0684%" y="709" width="0.0805%" height="15" fill="rgb(219,110,15)" fg:x="63" fg:w="1"/><text x="5.3184%" y="719.50"></text></g><g><title>engine::session::Session::initialize (28 samples, 2.25%)</title><rect x="3.1376%" y="757" width="2.2526%" height="15" fill="rgb(212,203,25)" fg:x="39" fg:w="28"/><text x="3.3876%" y="767.50">e..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (3 samples, 0.24%)</title><rect x="5.1488%" y="741" width="0.2414%" height="15" fill="rgb(205,50,1)" fg:x="64" fg:w="3"/><text x="5.3988%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="5.1488%" y="725" width="0.2414%" height="15" fill="rgb(222,152,41)" fg:x="64" fg:w="3"/><text x="5.3988%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="5.2293%" y="709" width="0.1609%" height="15" fill="rgb(236,83,3)" fg:x="65" fg:w="2"/><text x="5.4793%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="5.2293%" y="693" width="0.1609%" height="15" fill="rgb(214,30,54)" fg:x="65" fg:w="2"/><text x="5.4793%" y="703.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="5.2293%" y="677" width="0.1609%" height="15" fill="rgb(250,117,31)" fg:x="65" fg:w="2"/><text x="5.4793%" y="687.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (33 samples, 2.65%)</title><rect x="2.8962%" y="805" width="2.6549%" height="15" fill="rgb(228,77,14)" fg:x="36" fg:w="33"/><text x="3.1462%" y="815.50">&lt;e..</text></g><g><title>engine::domain::Domain::open_session_with_middleware (33 samples, 2.65%)</title><rect x="2.8962%" y="789" width="2.6549%" height="15" fill="rgb(241,3,28)" fg:x="36" fg:w="33"/><text x="3.1462%" y="799.50">en..</text></g><g><title>engine::session::Session::new (32 samples, 2.57%)</title><rect x="2.9767%" y="773" width="2.5744%" height="15" fill="rgb(221,175,52)" fg:x="37" fg:w="32"/><text x="3.2267%" y="783.50">en..</text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="5.3902%" y="757" width="0.1609%" height="15" fill="rgb(237,91,6)" fg:x="67" fg:w="2"/><text x="5.6402%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="5.3902%" y="741" width="0.1609%" height="15" fill="rgb(246,46,42)" fg:x="67" fg:w="2"/><text x="5.6402%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="5.7120%" y="789" width="0.1609%" height="15" fill="rgb(235,199,0)" fg:x="71" fg:w="2"/><text x="5.9620%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::surround::Surroundings&gt; (1 samples, 0.08%)</title><rect x="5.8729%" y="789" width="0.0805%" height="15" fill="rgb(224,44,40)" fg:x="73" fg:w="1"/><text x="6.1229%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="5.8729%" y="773" width="0.0805%" height="15" fill="rgb(209,24,35)" fg:x="73" fg:w="1"/><text x="6.1229%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="5.9533%" y="773" width="0.0805%" height="15" fill="rgb(244,46,22)" fg:x="74" fg:w="1"/><text x="6.2033%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.9533%" y="757" width="0.0805%" height="15" fill="rgb(235,99,8)" fg:x="74" fg:w="1"/><text x="6.2033%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="5.9533%" y="741" width="0.0805%" height="15" fill="rgb(218,127,36)" fg:x="74" fg:w="1"/><text x="6.2033%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="5.9533%" y="725" width="0.0805%" height="15" fill="rgb(238,47,46)" fg:x="74" fg:w="1"/><text x="6.2033%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="5.9533%" y="709" width="0.0805%" height="15" fill="rgb(233,65,17)" fg:x="74" fg:w="1"/><text x="6.2033%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="5.9533%" y="693" width="0.0805%" height="15" fill="rgb(239,22,33)" fg:x="74" fg:w="1"/><text x="6.2033%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.9533%" y="677" width="0.0805%" height="15" fill="rgb(243,66,43)" fg:x="74" fg:w="1"/><text x="6.2033%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="5.9533%" y="661" width="0.0805%" height="15" fill="rgb(235,210,28)" fg:x="74" fg:w="1"/><text x="6.2033%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="5.9533%" y="645" width="0.0805%" height="15" fill="rgb(205,191,50)" fg:x="74" fg:w="1"/><text x="6.2033%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="5.9533%" y="629" width="0.0805%" height="15" fill="rgb(251,217,19)" fg:x="74" fg:w="1"/><text x="6.2033%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="5.9533%" y="613" width="0.0805%" height="15" fill="rgb(205,174,37)" fg:x="74" fg:w="1"/><text x="6.2033%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="5.9533%" y="597" width="0.0805%" height="15" fill="rgb(212,158,42)" fg:x="74" fg:w="1"/><text x="6.2033%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="5.9533%" y="581" width="0.0805%" height="15" fill="rgb(212,208,51)" fg:x="74" fg:w="1"/><text x="6.2033%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.1142%" y="741" width="0.0805%" height="15" fill="rgb(225,198,20)" fg:x="76" fg:w="1"/><text x="6.3642%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.1142%" y="725" width="0.0805%" height="15" fill="rgb(247,41,44)" fg:x="76" fg:w="1"/><text x="6.3642%" y="735.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="6.1947%" y="741" width="0.1609%" height="15" fill="rgb(228,33,41)" fg:x="77" fg:w="2"/><text x="6.4447%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="6.1947%" y="725" width="0.1609%" height="15" fill="rgb(215,47,52)" fg:x="77" fg:w="2"/><text x="6.4447%" y="735.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="6.1947%" y="709" width="0.1609%" height="15" fill="rgb(248,106,37)" fg:x="77" fg:w="2"/><text x="6.4447%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="6.1947%" y="693" width="0.1609%" height="15" fill="rgb(238,91,29)" fg:x="77" fg:w="2"/><text x="6.4447%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.2751%" y="677" width="0.0805%" height="15" fill="rgb(226,111,40)" fg:x="78" fg:w="1"/><text x="6.5251%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.2751%" y="661" width="0.0805%" height="15" fill="rgb(229,159,36)" fg:x="78" fg:w="1"/><text x="6.5251%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.2751%" y="645" width="0.0805%" height="15" fill="rgb(221,109,4)" fg:x="78" fg:w="1"/><text x="6.5251%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.2751%" y="629" width="0.0805%" height="15" fill="rgb(236,56,25)" fg:x="78" fg:w="1"/><text x="6.5251%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.2751%" y="613" width="0.0805%" height="15" fill="rgb(244,113,23)" fg:x="78" fg:w="1"/><text x="6.5251%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.2751%" y="597" width="0.0805%" height="15" fill="rgb(249,132,2)" fg:x="78" fg:w="1"/><text x="6.5251%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="6.3556%" y="725" width="0.0805%" height="15" fill="rgb(205,185,21)" fg:x="79" fg:w="1"/><text x="6.6056%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4360%" y="709" width="0.0805%" height="15" fill="rgb(245,130,2)" fg:x="80" fg:w="1"/><text x="6.6860%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="6.4360%" y="693" width="0.0805%" height="15" fill="rgb(246,71,26)" fg:x="80" fg:w="1"/><text x="6.6860%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="6.4360%" y="677" width="0.0805%" height="15" fill="rgb(234,194,6)" fg:x="80" fg:w="1"/><text x="6.6860%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="6.4360%" y="661" width="0.0805%" height="15" fill="rgb(206,24,32)" fg:x="80" fg:w="1"/><text x="6.6860%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="6.4360%" y="645" width="0.0805%" height="15" fill="rgb(233,7,54)" fg:x="80" fg:w="1"/><text x="6.6860%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="6.4360%" y="629" width="0.0805%" height="15" fill="rgb(252,46,1)" fg:x="80" fg:w="1"/><text x="6.6860%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="6.4360%" y="613" width="0.0805%" height="15" fill="rgb(216,113,53)" fg:x="80" fg:w="1"/><text x="6.6860%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.5165%" y="677" width="0.1609%" height="15" fill="rgb(215,40,24)" fg:x="81" fg:w="2"/><text x="6.7665%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.5165%" y="661" width="0.1609%" height="15" fill="rgb(233,222,8)" fg:x="81" fg:w="2"/><text x="6.7665%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.5969%" y="645" width="0.0805%" height="15" fill="rgb(248,73,28)" fg:x="82" fg:w="1"/><text x="6.8469%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="6.5969%" y="629" width="0.0805%" height="15" fill="rgb(247,126,28)" fg:x="82" fg:w="1"/><text x="6.8469%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="6.5165%" y="693" width="0.2414%" height="15" fill="rgb(242,173,54)" fg:x="81" fg:w="3"/><text x="6.7665%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="6.6774%" y="677" width="0.0805%" height="15" fill="rgb(244,186,22)" fg:x="83" fg:w="1"/><text x="6.9274%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.6774%" y="661" width="0.0805%" height="15" fill="rgb(231,187,4)" fg:x="83" fg:w="1"/><text x="6.9274%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="6.9187%" y="677" width="0.1609%" height="15" fill="rgb(252,66,47)" fg:x="86" fg:w="2"/><text x="7.1687%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="6.9187%" y="661" width="0.1609%" height="15" fill="rgb(240,228,28)" fg:x="86" fg:w="2"/><text x="7.1687%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="6.9992%" y="645" width="0.0805%" height="15" fill="rgb(237,63,43)" fg:x="87" fg:w="1"/><text x="7.2492%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.2405%" y="629" width="0.1609%" height="15" fill="rgb(214,1,44)" fg:x="90" fg:w="2"/><text x="7.4905%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.2405%" y="613" width="0.1609%" height="15" fill="rgb(212,2,46)" fg:x="90" fg:w="2"/><text x="7.4905%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.3210%" y="597" width="0.0805%" height="15" fill="rgb(213,142,5)" fg:x="91" fg:w="1"/><text x="7.5710%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="7.3210%" y="581" width="0.0805%" height="15" fill="rgb(229,135,1)" fg:x="91" fg:w="1"/><text x="7.5710%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="7.3210%" y="565" width="0.0805%" height="15" fill="rgb(252,98,38)" fg:x="91" fg:w="1"/><text x="7.5710%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="7.3210%" y="549" width="0.0805%" height="15" fill="rgb(206,89,40)" fg:x="91" fg:w="1"/><text x="7.5710%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="7.3210%" y="533" width="0.0805%" height="15" fill="rgb(219,73,36)" fg:x="91" fg:w="1"/><text x="7.5710%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="7.4014%" y="629" width="0.0805%" height="15" fill="rgb(207,168,32)" fg:x="92" fg:w="1"/><text x="7.6514%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="7.4014%" y="613" width="0.0805%" height="15" fill="rgb(215,113,21)" fg:x="92" fg:w="1"/><text x="7.6514%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="7.2405%" y="661" width="0.3218%" height="15" fill="rgb(217,144,43)" fg:x="90" fg:w="4"/><text x="7.4905%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="7.2405%" y="645" width="0.3218%" height="15" fill="rgb(249,48,50)" fg:x="90" fg:w="4"/><text x="7.4905%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="7.4819%" y="629" width="0.0805%" height="15" fill="rgb(242,1,26)" fg:x="93" fg:w="1"/><text x="7.7319%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.4819%" y="613" width="0.0805%" height="15" fill="rgb(231,167,42)" fg:x="93" fg:w="1"/><text x="7.7319%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="7.5623%" y="661" width="0.2414%" height="15" fill="rgb(242,177,45)" fg:x="94" fg:w="3"/><text x="7.8123%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.6428%" y="645" width="0.1609%" height="15" fill="rgb(232,121,42)" fg:x="95" fg:w="2"/><text x="7.8928%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="7.6428%" y="629" width="0.1609%" height="15" fill="rgb(205,8,42)" fg:x="95" fg:w="2"/><text x="7.8928%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="7.6428%" y="613" width="0.1609%" height="15" fill="rgb(238,199,24)" fg:x="95" fg:w="2"/><text x="7.8928%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="7.8842%" y="645" width="0.1609%" height="15" fill="rgb(228,112,2)" fg:x="98" fg:w="2"/><text x="8.1342%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="7.8842%" y="629" width="0.1609%" height="15" fill="rgb(215,115,33)" fg:x="98" fg:w="2"/><text x="8.1342%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="7.9646%" y="613" width="0.0805%" height="15" fill="rgb(230,209,34)" fg:x="99" fg:w="1"/><text x="8.2146%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="7.9646%" y="597" width="0.0805%" height="15" fill="rgb(246,76,12)" fg:x="99" fg:w="1"/><text x="8.2146%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="8.1255%" y="613" width="0.2414%" height="15" fill="rgb(240,110,9)" fg:x="101" fg:w="3"/><text x="8.3755%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.2060%" y="597" width="0.1609%" height="15" fill="rgb(224,94,46)" fg:x="102" fg:w="2"/><text x="8.4560%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2864%" y="581" width="0.0805%" height="15" fill="rgb(247,150,22)" fg:x="103" fg:w="1"/><text x="8.5364%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2864%" y="565" width="0.0805%" height="15" fill="rgb(249,85,13)" fg:x="103" fg:w="1"/><text x="8.5364%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.3669%" y="597" width="0.0805%" height="15" fill="rgb(208,77,41)" fg:x="104" fg:w="1"/><text x="8.6169%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.3669%" y="581" width="0.0805%" height="15" fill="rgb(240,42,44)" fg:x="104" fg:w="1"/><text x="8.6169%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.3669%" y="565" width="0.0805%" height="15" fill="rgb(222,10,51)" fg:x="104" fg:w="1"/><text x="8.6169%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.4473%" y="597" width="0.1609%" height="15" fill="rgb(208,146,53)" fg:x="105" fg:w="2"/><text x="8.6973%" y="607.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.4473%" y="581" width="0.1609%" height="15" fill="rgb(236,162,23)" fg:x="105" fg:w="2"/><text x="8.6973%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.4473%" y="565" width="0.1609%" height="15" fill="rgb(218,66,21)" fg:x="105" fg:w="2"/><text x="8.6973%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="8.4473%" y="549" width="0.1609%" height="15" fill="rgb(233,6,47)" fg:x="105" fg:w="2"/><text x="8.6973%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="8.4473%" y="533" width="0.1609%" height="15" fill="rgb(236,59,51)" fg:x="105" fg:w="2"/><text x="8.6973%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="8.4473%" y="517" width="0.1609%" height="15" fill="rgb(242,12,46)" fg:x="105" fg:w="2"/><text x="8.6973%" y="527.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="8.4473%" y="501" width="0.1609%" height="15" fill="rgb(243,142,19)" fg:x="105" fg:w="2"/><text x="8.6973%" y="511.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.6082%" y="597" width="0.0805%" height="15" fill="rgb(217,28,17)" fg:x="107" fg:w="1"/><text x="8.8582%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="8.3669%" y="613" width="0.4023%" height="15" fill="rgb(228,2,27)" fg:x="104" fg:w="5"/><text x="8.6169%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.6887%" y="597" width="0.0805%" height="15" fill="rgb(214,221,4)" fg:x="108" fg:w="1"/><text x="8.9387%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.6887%" y="581" width="0.0805%" height="15" fill="rgb(224,69,26)" fg:x="108" fg:w="1"/><text x="8.9387%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.6887%" y="565" width="0.0805%" height="15" fill="rgb(219,70,4)" fg:x="108" fg:w="1"/><text x="8.9387%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.0451%" y="645" width="0.8045%" height="15" fill="rgb(218,157,39)" fg:x="100" fg:w="10"/><text x="8.2951%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="8.0451%" y="629" width="0.8045%" height="15" fill="rgb(238,36,28)" fg:x="100" fg:w="10"/><text x="8.2951%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7691%" y="613" width="0.0805%" height="15" fill="rgb(232,29,0)" fg:x="109" fg:w="1"/><text x="9.0191%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7691%" y="597" width="0.0805%" height="15" fill="rgb(243,138,46)" fg:x="109" fg:w="1"/><text x="9.0191%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7691%" y="581" width="0.0805%" height="15" fill="rgb(232,186,41)" fg:x="109" fg:w="1"/><text x="9.0191%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (14 samples, 1.13%)</title><rect x="7.8037%" y="661" width="1.1263%" height="15" fill="rgb(252,166,17)" fg:x="97" fg:w="14"/><text x="8.0537%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.8496%" y="645" width="0.0805%" height="15" fill="rgb(228,179,12)" fg:x="110" fg:w="1"/><text x="9.0996%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.8496%" y="629" width="0.0805%" height="15" fill="rgb(254,205,53)" fg:x="110" fg:w="1"/><text x="9.0996%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.8496%" y="613" width="0.0805%" height="15" fill="rgb(224,163,47)" fg:x="110" fg:w="1"/><text x="9.0996%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="7.0796%" y="677" width="1.9308%" height="15" fill="rgb(208,43,47)" fg:x="88" fg:w="24"/><text x="7.3296%" y="687.50">s..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.9300%" y="661" width="0.0805%" height="15" fill="rgb(224,198,38)" fg:x="111" fg:w="1"/><text x="9.1800%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9300%" y="645" width="0.0805%" height="15" fill="rgb(234,12,40)" fg:x="111" fg:w="1"/><text x="9.1800%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (33 samples, 2.65%)</title><rect x="6.5165%" y="709" width="2.6549%" height="15" fill="rgb(237,212,39)" fg:x="81" fg:w="33"/><text x="6.7665%" y="719.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.41%)</title><rect x="6.7578%" y="693" width="2.4135%" height="15" fill="rgb(253,2,33)" fg:x="84" fg:w="30"/><text x="7.0078%" y="703.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.0105%" y="677" width="0.1609%" height="15" fill="rgb(251,29,16)" fg:x="112" fg:w="2"/><text x="9.2605%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="9.0105%" y="661" width="0.1609%" height="15" fill="rgb(214,38,29)" fg:x="112" fg:w="2"/><text x="9.2605%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.0909%" y="645" width="0.0805%" height="15" fill="rgb(226,226,29)" fg:x="113" fg:w="1"/><text x="9.3409%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="9.1714%" y="677" width="0.0805%" height="15" fill="rgb(236,79,42)" fg:x="114" fg:w="1"/><text x="9.4214%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.2518%" y="661" width="0.0805%" height="15" fill="rgb(222,12,36)" fg:x="115" fg:w="1"/><text x="9.5018%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="9.3323%" y="661" width="0.1609%" height="15" fill="rgb(232,123,44)" fg:x="116" fg:w="2"/><text x="9.5823%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.4932%" y="645" width="0.0805%" height="15" fill="rgb(234,93,50)" fg:x="118" fg:w="1"/><text x="9.7432%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.6541%" y="629" width="0.0805%" height="15" fill="rgb(210,86,49)" fg:x="120" fg:w="1"/><text x="9.9041%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.72%)</title><rect x="9.1714%" y="709" width="0.7241%" height="15" fill="rgb(224,91,54)" fg:x="114" fg:w="9"/><text x="9.4214%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (9 samples, 0.72%)</title><rect x="9.1714%" y="693" width="0.7241%" height="15" fill="rgb(239,169,9)" fg:x="114" fg:w="9"/><text x="9.4214%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="9.2518%" y="677" width="0.6436%" height="15" fill="rgb(238,29,17)" fg:x="115" fg:w="8"/><text x="9.5018%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="9.4932%" y="661" width="0.4023%" height="15" fill="rgb(227,160,22)" fg:x="118" fg:w="5"/><text x="9.7432%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="9.5736%" y="645" width="0.3218%" height="15" fill="rgb(231,129,52)" fg:x="119" fg:w="4"/><text x="9.8236%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="9.7345%" y="629" width="0.1609%" height="15" fill="rgb(241,184,9)" fg:x="121" fg:w="2"/><text x="9.9845%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="9.8150%" y="613" width="0.0805%" height="15" fill="rgb(217,43,48)" fg:x="122" fg:w="1"/><text x="10.0650%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="9.8150%" y="597" width="0.0805%" height="15" fill="rgb(213,49,1)" fg:x="122" fg:w="1"/><text x="10.0650%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1368%" y="661" width="0.0805%" height="15" fill="rgb(223,79,39)" fg:x="126" fg:w="1"/><text x="10.3868%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.1368%" y="645" width="0.0805%" height="15" fill="rgb(228,227,46)" fg:x="126" fg:w="1"/><text x="10.3868%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="10.1368%" y="629" width="0.0805%" height="15" fill="rgb(245,89,41)" fg:x="126" fg:w="1"/><text x="10.3868%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2172%" y="661" width="0.0805%" height="15" fill="rgb(253,83,21)" fg:x="127" fg:w="1"/><text x="10.4672%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2172%" y="645" width="0.0805%" height="15" fill="rgb(229,116,51)" fg:x="127" fg:w="1"/><text x="10.4672%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.2172%" y="629" width="0.0805%" height="15" fill="rgb(246,67,26)" fg:x="127" fg:w="1"/><text x="10.4672%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="10.2977%" y="661" width="0.0805%" height="15" fill="rgb(250,117,20)" fg:x="128" fg:w="1"/><text x="10.5477%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="10.2977%" y="645" width="0.0805%" height="15" fill="rgb(207,88,17)" fg:x="128" fg:w="1"/><text x="10.5477%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="10.4586%" y="581" width="0.0805%" height="15" fill="rgb(212,98,36)" fg:x="130" fg:w="1"/><text x="10.7086%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="10.4586%" y="565" width="0.0805%" height="15" fill="rgb(221,72,6)" fg:x="130" fg:w="1"/><text x="10.7086%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.4586%" y="549" width="0.0805%" height="15" fill="rgb(235,129,19)" fg:x="130" fg:w="1"/><text x="10.7086%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="10.4586%" y="613" width="0.1609%" height="15" fill="rgb(237,200,6)" fg:x="130" fg:w="2"/><text x="10.7086%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="10.4586%" y="597" width="0.1609%" height="15" fill="rgb(239,69,54)" fg:x="130" fg:w="2"/><text x="10.7086%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.5390%" y="581" width="0.0805%" height="15" fill="rgb(214,68,45)" fg:x="131" fg:w="1"/><text x="10.7890%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="10.6999%" y="597" width="0.0805%" height="15" fill="rgb(254,160,8)" fg:x="133" fg:w="1"/><text x="10.9499%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8608%" y="581" width="0.0805%" height="15" fill="rgb(215,226,31)" fg:x="135" fg:w="1"/><text x="11.1108%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="10.8608%" y="565" width="0.0805%" height="15" fill="rgb(253,6,35)" fg:x="135" fg:w="1"/><text x="11.1108%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="10.8608%" y="549" width="0.0805%" height="15" fill="rgb(219,96,42)" fg:x="135" fg:w="1"/><text x="11.1108%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0217%" y="549" width="0.0805%" height="15" fill="rgb(207,170,13)" fg:x="137" fg:w="1"/><text x="11.2717%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.0217%" y="533" width="0.0805%" height="15" fill="rgb(239,101,5)" fg:x="137" fg:w="1"/><text x="11.2717%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="11.1022%" y="533" width="0.0805%" height="15" fill="rgb(228,183,34)" fg:x="138" fg:w="1"/><text x="11.3522%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="11.1826%" y="501" width="0.1609%" height="15" fill="rgb(205,28,31)" fg:x="139" fg:w="2"/><text x="11.4326%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.1826%" y="485" width="0.1609%" height="15" fill="rgb(214,118,50)" fg:x="139" fg:w="2"/><text x="11.4326%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.1826%" y="469" width="0.1609%" height="15" fill="rgb(213,108,51)" fg:x="139" fg:w="2"/><text x="11.4326%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.1826%" y="453" width="0.1609%" height="15" fill="rgb(238,56,37)" fg:x="139" fg:w="2"/><text x="11.4326%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="11.1826%" y="533" width="0.2414%" height="15" fill="rgb(214,136,28)" fg:x="139" fg:w="3"/><text x="11.4326%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="11.1826%" y="517" width="0.2414%" height="15" fill="rgb(221,201,54)" fg:x="139" fg:w="3"/><text x="11.4326%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.3435%" y="501" width="0.0805%" height="15" fill="rgb(228,216,39)" fg:x="141" fg:w="1"/><text x="11.5935%" y="511.50"></text></g><g><title>engine::session::Session::flush (69 samples, 5.55%)</title><rect x="5.9533%" y="789" width="5.5511%" height="15" fill="rgb(207,229,49)" fg:x="74" fg:w="69"/><text x="6.2033%" y="799.50">engine:..</text></g><g><title>engine::session::state::State::close (68 samples, 5.47%)</title><rect x="6.0338%" y="773" width="5.4706%" height="15" fill="rgb(224,23,43)" fg:x="75" fg:w="68"/><text x="6.2838%" y="783.50">engine:..</text></g><g><title>engine::session::state::State::flush_entities (68 samples, 5.47%)</title><rect x="6.0338%" y="757" width="5.4706%" height="15" fill="rgb(247,97,18)" fg:x="75" fg:w="68"/><text x="6.2838%" y="767.50">engine:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (64 samples, 5.15%)</title><rect x="6.3556%" y="741" width="5.1488%" height="15" fill="rgb(232,53,32)" fg:x="79" fg:w="64"/><text x="6.6056%" y="751.50">engine..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (63 samples, 5.07%)</title><rect x="6.4360%" y="725" width="5.0684%" height="15" fill="rgb(247,38,23)" fg:x="80" fg:w="63"/><text x="6.6860%" y="735.50">engine..</text></g><g><title>kernel::model::any_entity_changes (20 samples, 1.61%)</title><rect x="9.8954%" y="709" width="1.6090%" height="15" fill="rgb(228,101,52)" fg:x="123" fg:w="20"/><text x="10.1454%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (20 samples, 1.61%)</title><rect x="9.8954%" y="693" width="1.6090%" height="15" fill="rgb(231,45,36)" fg:x="123" fg:w="20"/><text x="10.1454%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 1.53%)</title><rect x="9.9759%" y="677" width="1.5286%" height="15" fill="rgb(221,183,50)" fg:x="124" fg:w="19"/><text x="10.2259%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (14 samples, 1.13%)</title><rect x="10.3781%" y="661" width="1.1263%" height="15" fill="rgb(251,132,12)" fg:x="129" fg:w="14"/><text x="10.6281%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 1.05%)</title><rect x="10.4586%" y="645" width="1.0459%" height="15" fill="rgb(252,50,16)" fg:x="130" fg:w="13"/><text x="10.7086%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="10.4586%" y="629" width="1.0459%" height="15" fill="rgb(224,60,15)" fg:x="130" fg:w="13"/><text x="10.7086%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="10.6195%" y="613" width="0.8850%" height="15" fill="rgb(254,2,34)" fg:x="132" fg:w="11"/><text x="10.8695%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="10.7804%" y="597" width="0.7241%" height="15" fill="rgb(232,154,8)" fg:x="134" fg:w="9"/><text x="11.0304%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="10.9413%" y="581" width="0.5632%" height="15" fill="rgb(235,190,52)" fg:x="136" fg:w="7"/><text x="11.1913%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="11.0217%" y="565" width="0.4827%" height="15" fill="rgb(213,218,38)" fg:x="137" fg:w="6"/><text x="11.2717%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="11.1022%" y="549" width="0.4023%" height="15" fill="rgb(237,50,37)" fg:x="138" fg:w="5"/><text x="11.3522%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4240%" y="533" width="0.0805%" height="15" fill="rgb(235,51,35)" fg:x="142" fg:w="1"/><text x="11.6740%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="11.5849%" y="757" width="0.1609%" height="15" fill="rgb(244,40,52)" fg:x="144" fg:w="2"/><text x="11.8349%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (2 samples, 0.16%)</title><rect x="11.5849%" y="741" width="0.1609%" height="15" fill="rgb(217,225,45)" fg:x="144" fg:w="2"/><text x="11.8349%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="11.5849%" y="725" width="0.1609%" height="15" fill="rgb(247,191,36)" fg:x="144" fg:w="2"/><text x="11.8349%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="11.5849%" y="709" width="0.1609%" height="15" fill="rgb(251,144,31)" fg:x="144" fg:w="2"/><text x="11.8349%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="11.5849%" y="693" width="0.1609%" height="15" fill="rgb(227,155,41)" fg:x="144" fg:w="2"/><text x="11.8349%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="11.5849%" y="677" width="0.1609%" height="15" fill="rgb(236,121,36)" fg:x="144" fg:w="2"/><text x="11.8349%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="11.5849%" y="661" width="0.1609%" height="15" fill="rgb(221,128,28)" fg:x="144" fg:w="2"/><text x="11.8349%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="11.5849%" y="645" width="0.1609%" height="15" fill="rgb(249,67,50)" fg:x="144" fg:w="2"/><text x="11.8349%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="11.5849%" y="629" width="0.1609%" height="15" fill="rgb(241,126,38)" fg:x="144" fg:w="2"/><text x="11.8349%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="11.5849%" y="613" width="0.1609%" height="15" fill="rgb(239,33,14)" fg:x="144" fg:w="2"/><text x="11.8349%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="11.6653%" y="597" width="0.0805%" height="15" fill="rgb(207,221,54)" fg:x="145" fg:w="1"/><text x="11.9153%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="11.6653%" y="581" width="0.0805%" height="15" fill="rgb(242,138,43)" fg:x="145" fg:w="1"/><text x="11.9153%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="11.6653%" y="565" width="0.0805%" height="15" fill="rgb(231,118,19)" fg:x="145" fg:w="1"/><text x="11.9153%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6653%" y="549" width="0.0805%" height="15" fill="rgb(214,128,54)" fg:x="145" fg:w="1"/><text x="11.9153%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="11.7458%" y="757" width="0.0805%" height="15" fill="rgb(236,136,6)" fg:x="146" fg:w="1"/><text x="11.9958%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="11.7458%" y="741" width="0.0805%" height="15" fill="rgb(247,30,38)" fg:x="146" fg:w="1"/><text x="11.9958%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="11.7458%" y="725" width="0.0805%" height="15" fill="rgb(249,189,40)" fg:x="146" fg:w="1"/><text x="11.9958%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7458%" y="709" width="0.0805%" height="15" fill="rgb(247,179,7)" fg:x="146" fg:w="1"/><text x="11.9958%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7458%" y="693" width="0.0805%" height="15" fill="rgb(239,46,52)" fg:x="146" fg:w="1"/><text x="11.9958%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="11.7458%" y="677" width="0.0805%" height="15" fill="rgb(225,28,52)" fg:x="146" fg:w="1"/><text x="11.9958%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.7458%" y="661" width="0.0805%" height="15" fill="rgb(217,208,44)" fg:x="146" fg:w="1"/><text x="11.9958%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (17 samples, 1.37%)</title><rect x="11.5044%" y="773" width="1.3677%" height="15" fill="rgb(224,11,34)" fg:x="143" fg:w="17"/><text x="11.7544%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (13 samples, 1.05%)</title><rect x="11.8262%" y="757" width="1.0459%" height="15" fill="rgb(205,134,17)" fg:x="147" fg:w="13"/><text x="12.0762%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (13 samples, 1.05%)</title><rect x="11.8262%" y="741" width="1.0459%" height="15" fill="rgb(237,125,9)" fg:x="147" fg:w="13"/><text x="12.0762%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 1.05%)</title><rect x="11.8262%" y="725" width="1.0459%" height="15" fill="rgb(208,139,47)" fg:x="147" fg:w="13"/><text x="12.0762%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 1.05%)</title><rect x="11.8262%" y="709" width="1.0459%" height="15" fill="rgb(242,5,5)" fg:x="147" fg:w="13"/><text x="12.0762%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 1.05%)</title><rect x="11.8262%" y="693" width="1.0459%" height="15" fill="rgb(218,78,2)" fg:x="147" fg:w="13"/><text x="12.0762%" y="703.50"></text></g><g><title>__libc_malloc (12 samples, 0.97%)</title><rect x="11.9067%" y="677" width="0.9654%" height="15" fill="rgb(217,75,16)" fg:x="148" fg:w="12"/><text x="12.1567%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="13.0330%" y="757" width="0.0805%" height="15" fill="rgb(212,56,17)" fg:x="162" fg:w="1"/><text x="13.2830%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="13.0330%" y="741" width="0.0805%" height="15" fill="rgb(228,61,29)" fg:x="162" fg:w="1"/><text x="13.2830%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.0330%" y="725" width="0.0805%" height="15" fill="rgb(247,202,38)" fg:x="162" fg:w="1"/><text x="13.2830%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1939%" y="709" width="0.0805%" height="15" fill="rgb(211,216,43)" fg:x="164" fg:w="1"/><text x="13.4439%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.1939%" y="693" width="0.0805%" height="15" fill="rgb(220,7,49)" fg:x="164" fg:w="1"/><text x="13.4439%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.1939%" y="677" width="0.0805%" height="15" fill="rgb(219,158,7)" fg:x="164" fg:w="1"/><text x="13.4439%" y="687.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.1134%" y="757" width="0.2414%" height="15" fill="rgb(206,127,9)" fg:x="163" fg:w="3"/><text x="13.3634%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (3 samples, 0.24%)</title><rect x="13.1134%" y="741" width="0.2414%" height="15" fill="rgb(206,103,43)" fg:x="163" fg:w="3"/><text x="13.3634%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="13.1939%" y="725" width="0.1609%" height="15" fill="rgb(240,108,41)" fg:x="164" fg:w="2"/><text x="13.4439%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="13.2743%" y="709" width="0.0805%" height="15" fill="rgb(252,212,6)" fg:x="165" fg:w="1"/><text x="13.5243%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="13.3548%" y="741" width="0.0805%" height="15" fill="rgb(248,105,31)" fg:x="166" fg:w="1"/><text x="13.6048%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="13.3548%" y="725" width="0.0805%" height="15" fill="rgb(241,123,4)" fg:x="166" fg:w="1"/><text x="13.6048%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="13.3548%" y="709" width="0.0805%" height="15" fill="rgb(223,74,37)" fg:x="166" fg:w="1"/><text x="13.6048%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.3548%" y="693" width="0.0805%" height="15" fill="rgb(251,219,28)" fg:x="166" fg:w="1"/><text x="13.6048%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.3548%" y="677" width="0.0805%" height="15" fill="rgb(218,36,31)" fg:x="166" fg:w="1"/><text x="13.6048%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.3548%" y="661" width="0.0805%" height="15" fill="rgb(229,40,15)" fg:x="166" fg:w="1"/><text x="13.6048%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="13.3548%" y="645" width="0.0805%" height="15" fill="rgb(208,138,37)" fg:x="166" fg:w="1"/><text x="13.6048%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.3548%" y="629" width="0.0805%" height="15" fill="rgb(208,40,52)" fg:x="166" fg:w="1"/><text x="13.6048%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.3548%" y="613" width="0.0805%" height="15" fill="rgb(246,181,48)" fg:x="166" fg:w="1"/><text x="13.6048%" y="623.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="13.3548%" y="757" width="0.1609%" height="15" fill="rgb(253,178,36)" fg:x="166" fg:w="2"/><text x="13.6048%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="13.4352%" y="741" width="0.0805%" height="15" fill="rgb(210,170,6)" fg:x="167" fg:w="1"/><text x="13.6852%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.4352%" y="725" width="0.0805%" height="15" fill="rgb(243,62,22)" fg:x="167" fg:w="1"/><text x="13.6852%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.4352%" y="709" width="0.0805%" height="15" fill="rgb(213,145,26)" fg:x="167" fg:w="1"/><text x="13.6852%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="13.5157%" y="709" width="0.0805%" height="15" fill="rgb(237,177,23)" fg:x="168" fg:w="1"/><text x="13.7657%" y="719.50"></text></g><g><title>plugins_core::build::Build::holding (27 samples, 2.17%)</title><rect x="11.5044%" y="789" width="2.1722%" height="15" fill="rgb(252,5,24)" fg:x="143" fg:w="27"/><text x="11.7544%" y="799.50">p..</text></g><g><title>plugins_core::tools::set_container (10 samples, 0.80%)</title><rect x="12.8721%" y="773" width="0.8045%" height="15" fill="rgb(230,108,54)" fg:x="160" fg:w="10"/><text x="13.1221%" y="783.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="13.5157%" y="757" width="0.1609%" height="15" fill="rgb(252,192,41)" fg:x="168" fg:w="2"/><text x="13.7657%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="13.5157%" y="741" width="0.1609%" height="15" fill="rgb(218,125,20)" fg:x="168" fg:w="2"/><text x="13.7657%" y="751.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="13.5157%" y="725" width="0.1609%" height="15" fill="rgb(230,223,15)" fg:x="168" fg:w="2"/><text x="13.7657%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5961%" y="709" width="0.0805%" height="15" fill="rgb(239,99,47)" fg:x="169" fg:w="1"/><text x="13.8461%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="13.5961%" y="693" width="0.0805%" height="15" fill="rgb(222,214,23)" fg:x="169" fg:w="1"/><text x="13.8461%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="13.5961%" y="677" width="0.0805%" height="15" fill="rgb(250,98,43)" fg:x="169" fg:w="1"/><text x="13.8461%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5961%" y="661" width="0.0805%" height="15" fill="rgb(226,140,11)" fg:x="169" fg:w="1"/><text x="13.8461%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="13.5961%" y="645" width="0.0805%" height="15" fill="rgb(239,2,22)" fg:x="169" fg:w="1"/><text x="13.8461%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="13.5961%" y="629" width="0.0805%" height="15" fill="rgb(209,106,26)" fg:x="169" fg:w="1"/><text x="13.8461%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6766%" y="549" width="0.0805%" height="15" fill="rgb(209,135,11)" fg:x="170" fg:w="1"/><text x="13.9266%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.6766%" y="533" width="0.0805%" height="15" fill="rgb(241,58,6)" fg:x="170" fg:w="1"/><text x="13.9266%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.6766%" y="517" width="0.0805%" height="15" fill="rgb(214,78,1)" fg:x="170" fg:w="1"/><text x="13.9266%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.6766%" y="501" width="0.0805%" height="15" fill="rgb(229,135,33)" fg:x="170" fg:w="1"/><text x="13.9266%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.6766%" y="485" width="0.0805%" height="15" fill="rgb(245,87,50)" fg:x="170" fg:w="1"/><text x="13.9266%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.6766%" y="469" width="0.0805%" height="15" fill="rgb(222,222,8)" fg:x="170" fg:w="1"/><text x="13.9266%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6766%" y="453" width="0.0805%" height="15" fill="rgb(214,97,50)" fg:x="170" fg:w="1"/><text x="13.9266%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.6766%" y="437" width="0.0805%" height="15" fill="rgb(244,161,51)" fg:x="170" fg:w="1"/><text x="13.9266%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.6766%" y="421" width="0.0805%" height="15" fill="rgb(225,17,4)" fg:x="170" fg:w="1"/><text x="13.9266%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.6766%" y="405" width="0.0805%" height="15" fill="rgb(238,10,13)" fg:x="170" fg:w="1"/><text x="13.9266%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.6766%" y="389" width="0.0805%" height="15" fill="rgb(239,169,14)" fg:x="170" fg:w="1"/><text x="13.9266%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.6766%" y="373" width="0.0805%" height="15" fill="rgb(213,105,25)" fg:x="170" fg:w="1"/><text x="13.9266%" y="383.50"></text></g><g><title>__rdl_realloc (1 samples, 0.08%)</title><rect x="13.8375%" y="245" width="0.0805%" height="15" fill="rgb(233,4,17)" fg:x="172" fg:w="1"/><text x="14.0875%" y="255.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.24%)</title><rect x="13.7570%" y="533" width="0.2414%" height="15" fill="rgb(212,5,35)" fg:x="171" fg:w="3"/><text x="14.0070%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="13.7570%" y="517" width="0.2414%" height="15" fill="rgb(216,3,14)" fg:x="171" fg:w="3"/><text x="14.0070%" y="527.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="13.8375%" y="501" width="0.1609%" height="15" fill="rgb(240,105,33)" fg:x="172" fg:w="2"/><text x="14.0875%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="13.8375%" y="485" width="0.1609%" height="15" fill="rgb(216,73,0)" fg:x="172" fg:w="2"/><text x="14.0875%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8375%" y="469" width="0.1609%" height="15" fill="rgb(217,153,48)" fg:x="172" fg:w="2"/><text x="14.0875%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="13.8375%" y="453" width="0.1609%" height="15" fill="rgb(218,180,8)" fg:x="172" fg:w="2"/><text x="14.0875%" y="463.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="13.8375%" y="437" width="0.1609%" height="15" fill="rgb(252,168,2)" fg:x="172" fg:w="2"/><text x="14.0875%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="13.8375%" y="421" width="0.1609%" height="15" fill="rgb(224,116,33)" fg:x="172" fg:w="2"/><text x="14.0875%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="13.8375%" y="405" width="0.1609%" height="15" fill="rgb(229,205,17)" fg:x="172" fg:w="2"/><text x="14.0875%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="13.8375%" y="389" width="0.1609%" height="15" fill="rgb(234,1,41)" fg:x="172" fg:w="2"/><text x="14.0875%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.8375%" y="373" width="0.1609%" height="15" fill="rgb(244,185,8)" fg:x="172" fg:w="2"/><text x="14.0875%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="13.8375%" y="357" width="0.1609%" height="15" fill="rgb(248,51,21)" fg:x="172" fg:w="2"/><text x="14.0875%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="13.8375%" y="341" width="0.1609%" height="15" fill="rgb(248,157,31)" fg:x="172" fg:w="2"/><text x="14.0875%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="13.8375%" y="325" width="0.1609%" height="15" fill="rgb(210,34,47)" fg:x="172" fg:w="2"/><text x="14.0875%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="13.8375%" y="309" width="0.1609%" height="15" fill="rgb(227,139,53)" fg:x="172" fg:w="2"/><text x="14.0875%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="13.8375%" y="293" width="0.1609%" height="15" fill="rgb(232,211,37)" fg:x="172" fg:w="2"/><text x="14.0875%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="13.8375%" y="277" width="0.1609%" height="15" fill="rgb(236,133,10)" fg:x="172" fg:w="2"/><text x="14.0875%" y="287.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="13.8375%" y="261" width="0.1609%" height="15" fill="rgb(243,202,25)" fg:x="172" fg:w="2"/><text x="14.0875%" y="271.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.9179%" y="245" width="0.0805%" height="15" fill="rgb(224,59,9)" fg:x="173" fg:w="1"/><text x="14.1679%" y="255.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (5 samples, 0.40%)</title><rect x="13.6766%" y="757" width="0.4023%" height="15" fill="rgb(206,146,16)" fg:x="170" fg:w="5"/><text x="13.9266%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (5 samples, 0.40%)</title><rect x="13.6766%" y="741" width="0.4023%" height="15" fill="rgb(220,47,2)" fg:x="170" fg:w="5"/><text x="13.9266%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="13.6766%" y="725" width="0.4023%" height="15" fill="rgb(225,124,51)" fg:x="170" fg:w="5"/><text x="13.9266%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="709" width="0.4023%" height="15" fill="rgb(241,220,50)" fg:x="170" fg:w="5"/><text x="13.9266%" y="719.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="13.6766%" y="693" width="0.4023%" height="15" fill="rgb(232,168,5)" fg:x="170" fg:w="5"/><text x="13.9266%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="677" width="0.4023%" height="15" fill="rgb(243,90,22)" fg:x="170" fg:w="5"/><text x="13.9266%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="661" width="0.4023%" height="15" fill="rgb(223,153,32)" fg:x="170" fg:w="5"/><text x="13.9266%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="645" width="0.4023%" height="15" fill="rgb(243,124,20)" fg:x="170" fg:w="5"/><text x="13.9266%" y="655.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="13.6766%" y="629" width="0.4023%" height="15" fill="rgb(246,168,39)" fg:x="170" fg:w="5"/><text x="13.9266%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="613" width="0.4023%" height="15" fill="rgb(222,165,54)" fg:x="170" fg:w="5"/><text x="13.9266%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="597" width="0.4023%" height="15" fill="rgb(251,142,27)" fg:x="170" fg:w="5"/><text x="13.9266%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (5 samples, 0.40%)</title><rect x="13.6766%" y="581" width="0.4023%" height="15" fill="rgb(207,168,50)" fg:x="170" fg:w="5"/><text x="13.9266%" y="591.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="13.6766%" y="565" width="0.4023%" height="15" fill="rgb(250,139,25)" fg:x="170" fg:w="5"/><text x="13.9266%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.32%)</title><rect x="13.7570%" y="549" width="0.3218%" height="15" fill="rgb(214,194,48)" fg:x="171" fg:w="4"/><text x="14.0070%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.9984%" y="533" width="0.0805%" height="15" fill="rgb(227,138,47)" fg:x="174" fg:w="1"/><text x="14.2484%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="13.9984%" y="517" width="0.0805%" height="15" fill="rgb(250,162,5)" fg:x="174" fg:w="1"/><text x="14.2484%" y="527.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="13.9984%" y="501" width="0.0805%" height="15" fill="rgb(229,74,25)" fg:x="174" fg:w="1"/><text x="14.2484%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="13.9984%" y="485" width="0.0805%" height="15" fill="rgb(221,124,34)" fg:x="174" fg:w="1"/><text x="14.2484%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="13.9984%" y="469" width="0.0805%" height="15" fill="rgb(225,94,25)" fg:x="174" fg:w="1"/><text x="14.2484%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="13.9984%" y="453" width="0.0805%" height="15" fill="rgb(210,100,12)" fg:x="174" fg:w="1"/><text x="14.2484%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.9984%" y="437" width="0.0805%" height="15" fill="rgb(206,62,48)" fg:x="174" fg:w="1"/><text x="14.2484%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="13.9984%" y="421" width="0.0805%" height="15" fill="rgb(222,181,9)" fg:x="174" fg:w="1"/><text x="14.2484%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="13.9984%" y="405" width="0.0805%" height="15" fill="rgb(248,42,38)" fg:x="174" fg:w="1"/><text x="14.2484%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="13.9984%" y="389" width="0.0805%" height="15" fill="rgb(213,40,6)" fg:x="174" fg:w="1"/><text x="14.2484%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="13.9984%" y="373" width="0.0805%" height="15" fill="rgb(211,108,15)" fg:x="174" fg:w="1"/><text x="14.2484%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="13.9984%" y="357" width="0.0805%" height="15" fill="rgb(249,62,9)" fg:x="174" fg:w="1"/><text x="14.2484%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="13.9984%" y="341" width="0.0805%" height="15" fill="rgb(233,26,54)" fg:x="174" fg:w="1"/><text x="14.2484%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="13.9984%" y="325" width="0.0805%" height="15" fill="rgb(210,175,26)" fg:x="174" fg:w="1"/><text x="14.2484%" y="335.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="13.9984%" y="309" width="0.0805%" height="15" fill="rgb(210,43,33)" fg:x="174" fg:w="1"/><text x="14.2484%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="14.0788%" y="757" width="0.0805%" height="15" fill="rgb(224,46,17)" fg:x="175" fg:w="1"/><text x="14.3288%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.0788%" y="741" width="0.0805%" height="15" fill="rgb(254,24,38)" fg:x="175" fg:w="1"/><text x="14.3288%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.0788%" y="725" width="0.0805%" height="15" fill="rgb(248,32,0)" fg:x="175" fg:w="1"/><text x="14.3288%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0788%" y="709" width="0.0805%" height="15" fill="rgb(224,37,41)" fg:x="175" fg:w="1"/><text x="14.3288%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0788%" y="693" width="0.0805%" height="15" fill="rgb(252,70,22)" fg:x="175" fg:w="1"/><text x="14.3288%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.0788%" y="677" width="0.0805%" height="15" fill="rgb(241,123,50)" fg:x="175" fg:w="1"/><text x="14.3288%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0788%" y="661" width="0.0805%" height="15" fill="rgb(246,138,33)" fg:x="175" fg:w="1"/><text x="14.3288%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.0788%" y="645" width="0.0805%" height="15" fill="rgb(218,39,32)" fg:x="175" fg:w="1"/><text x="14.3288%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.0788%" y="629" width="0.0805%" height="15" fill="rgb(241,229,10)" fg:x="175" fg:w="1"/><text x="14.3288%" y="639.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="14.1593%" y="709" width="0.1609%" height="15" fill="rgb(212,160,10)" fg:x="176" fg:w="2"/><text x="14.4093%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1593%" y="693" width="0.1609%" height="15" fill="rgb(227,48,51)" fg:x="176" fg:w="2"/><text x="14.4093%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="14.1593%" y="741" width="0.2414%" height="15" fill="rgb(238,159,21)" fg:x="176" fg:w="3"/><text x="14.4093%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="14.1593%" y="725" width="0.2414%" height="15" fill="rgb(216,1,10)" fg:x="176" fg:w="3"/><text x="14.4093%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3202%" y="709" width="0.0805%" height="15" fill="rgb(209,228,25)" fg:x="178" fg:w="1"/><text x="14.5702%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3202%" y="693" width="0.0805%" height="15" fill="rgb(234,160,10)" fg:x="178" fg:w="1"/><text x="14.5702%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.3202%" y="677" width="0.0805%" height="15" fill="rgb(212,66,25)" fg:x="178" fg:w="1"/><text x="14.5702%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.3202%" y="661" width="0.0805%" height="15" fill="rgb(254,121,18)" fg:x="178" fg:w="1"/><text x="14.5702%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="14.3202%" y="645" width="0.0805%" height="15" fill="rgb(219,127,1)" fg:x="178" fg:w="1"/><text x="14.5702%" y="655.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="14.3202%" y="629" width="0.0805%" height="15" fill="rgb(219,224,42)" fg:x="178" fg:w="1"/><text x="14.5702%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="14.3202%" y="613" width="0.0805%" height="15" fill="rgb(253,130,22)" fg:x="178" fg:w="1"/><text x="14.5702%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="14.4006%" y="725" width="0.0805%" height="15" fill="rgb(253,39,28)" fg:x="179" fg:w="1"/><text x="14.6506%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.4006%" y="709" width="0.0805%" height="15" fill="rgb(231,126,37)" fg:x="179" fg:w="1"/><text x="14.6506%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.4006%" y="693" width="0.0805%" height="15" fill="rgb(251,145,14)" fg:x="179" fg:w="1"/><text x="14.6506%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4006%" y="677" width="0.0805%" height="15" fill="rgb(229,164,30)" fg:x="179" fg:w="1"/><text x="14.6506%" y="687.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (5 samples, 0.40%)</title><rect x="14.1593%" y="757" width="0.4023%" height="15" fill="rgb(233,227,54)" fg:x="176" fg:w="5"/><text x="14.4093%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.4006%" y="741" width="0.1609%" height="15" fill="rgb(240,94,22)" fg:x="179" fg:w="2"/><text x="14.6506%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.4811%" y="725" width="0.0805%" height="15" fill="rgb(217,56,16)" fg:x="180" fg:w="1"/><text x="14.7311%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="14.6420%" y="709" width="0.0805%" height="15" fill="rgb(229,133,38)" fg:x="182" fg:w="1"/><text x="14.8920%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="14.6420%" y="693" width="0.0805%" height="15" fill="rgb(225,139,35)" fg:x="182" fg:w="1"/><text x="14.8920%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.6420%" y="677" width="0.0805%" height="15" fill="rgb(223,100,16)" fg:x="182" fg:w="1"/><text x="14.8920%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6420%" y="661" width="0.0805%" height="15" fill="rgb(207,43,50)" fg:x="182" fg:w="1"/><text x="14.8920%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.7224%" y="677" width="0.0805%" height="15" fill="rgb(237,221,9)" fg:x="183" fg:w="1"/><text x="14.9724%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.7224%" y="661" width="0.0805%" height="15" fill="rgb(236,134,24)" fg:x="183" fg:w="1"/><text x="14.9724%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (15 samples, 1.21%)</title><rect x="13.6766%" y="789" width="1.2068%" height="15" fill="rgb(222,173,4)" fg:x="170" fg:w="15"/><text x="13.9266%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (15 samples, 1.21%)</title><rect x="13.6766%" y="773" width="1.2068%" height="15" fill="rgb(234,144,52)" fg:x="170" fg:w="15"/><text x="13.9266%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="14.5615%" y="757" width="0.3218%" height="15" fill="rgb(223,41,7)" fg:x="181" fg:w="4"/><text x="14.8115%" y="767.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="14.5615%" y="741" width="0.3218%" height="15" fill="rgb(226,143,9)" fg:x="181" fg:w="4"/><text x="14.8115%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="14.6420%" y="725" width="0.2414%" height="15" fill="rgb(234,43,37)" fg:x="182" fg:w="3"/><text x="14.8920%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="14.7224%" y="709" width="0.1609%" height="15" fill="rgb(224,188,11)" fg:x="183" fg:w="2"/><text x="14.9724%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.7224%" y="693" width="0.1609%" height="15" fill="rgb(233,113,28)" fg:x="183" fg:w="2"/><text x="14.9724%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8029%" y="677" width="0.0805%" height="15" fill="rgb(215,16,1)" fg:x="184" fg:w="1"/><text x="15.0529%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.8029%" y="661" width="0.0805%" height="15" fill="rgb(238,74,38)" fg:x="184" fg:w="1"/><text x="15.0529%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="14.8029%" y="645" width="0.0805%" height="15" fill="rgb(221,66,35)" fg:x="184" fg:w="1"/><text x="15.0529%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.8029%" y="629" width="0.0805%" height="15" fill="rgb(251,225,2)" fg:x="184" fg:w="1"/><text x="15.0529%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8029%" y="613" width="0.0805%" height="15" fill="rgb(240,169,18)" fg:x="184" fg:w="1"/><text x="15.0529%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8029%" y="597" width="0.0805%" height="15" fill="rgb(243,130,50)" fg:x="184" fg:w="1"/><text x="15.0529%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.8029%" y="581" width="0.0805%" height="15" fill="rgb(228,75,13)" fg:x="184" fg:w="1"/><text x="15.0529%" y="591.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="14.8833%" y="757" width="0.0805%" height="15" fill="rgb(252,95,35)" fg:x="185" fg:w="1"/><text x="15.1333%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.8833%" y="741" width="0.0805%" height="15" fill="rgb(222,180,54)" fg:x="185" fg:w="1"/><text x="15.1333%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="14.8833%" y="725" width="0.0805%" height="15" fill="rgb(250,110,34)" fg:x="185" fg:w="1"/><text x="15.1333%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="14.8833%" y="709" width="0.0805%" height="15" fill="rgb(208,100,21)" fg:x="185" fg:w="1"/><text x="15.1333%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="14.9638%" y="725" width="0.0805%" height="15" fill="rgb(209,123,47)" fg:x="186" fg:w="1"/><text x="15.2138%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="14.9638%" y="709" width="0.0805%" height="15" fill="rgb(237,147,9)" fg:x="186" fg:w="1"/><text x="15.2138%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.9638%" y="693" width="0.0805%" height="15" fill="rgb(228,206,23)" fg:x="186" fg:w="1"/><text x="15.2138%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.9638%" y="677" width="0.0805%" height="15" fill="rgb(217,174,46)" fg:x="186" fg:w="1"/><text x="15.2138%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.0442%" y="725" width="0.0805%" height="15" fill="rgb(231,126,21)" fg:x="187" fg:w="1"/><text x="15.2942%" y="735.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="14.8833%" y="789" width="0.3218%" height="15" fill="rgb(245,26,1)" fg:x="185" fg:w="4"/><text x="15.1333%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="14.8833%" y="773" width="0.3218%" height="15" fill="rgb(224,138,39)" fg:x="185" fg:w="4"/><text x="15.1333%" y="783.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="14.9638%" y="757" width="0.2414%" height="15" fill="rgb(208,97,3)" fg:x="186" fg:w="3"/><text x="15.2138%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="14.9638%" y="741" width="0.2414%" height="15" fill="rgb(222,77,29)" fg:x="186" fg:w="3"/><text x="15.2138%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1247%" y="725" width="0.0805%" height="15" fill="rgb(243,188,36)" fg:x="188" fg:w="1"/><text x="15.3747%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1247%" y="709" width="0.0805%" height="15" fill="rgb(218,214,3)" fg:x="188" fg:w="1"/><text x="15.3747%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1247%" y="693" width="0.0805%" height="15" fill="rgb(211,183,45)" fg:x="188" fg:w="1"/><text x="15.3747%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.1247%" y="677" width="0.0805%" height="15" fill="rgb(230,218,25)" fg:x="188" fg:w="1"/><text x="15.3747%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.1247%" y="661" width="0.0805%" height="15" fill="rgb(233,86,6)" fg:x="188" fg:w="1"/><text x="15.3747%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="15.1247%" y="645" width="0.0805%" height="15" fill="rgb(220,59,24)" fg:x="188" fg:w="1"/><text x="15.3747%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="15.1247%" y="629" width="0.0805%" height="15" fill="rgb(227,60,1)" fg:x="188" fg:w="1"/><text x="15.3747%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="15.2856%" y="773" width="0.0805%" height="15" fill="rgb(216,212,54)" fg:x="190" fg:w="1"/><text x="15.5356%" y="783.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="15.3660%" y="741" width="0.0805%" height="15" fill="rgb(227,81,54)" fg:x="191" fg:w="1"/><text x="15.6160%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.3660%" y="725" width="0.0805%" height="15" fill="rgb(206,204,43)" fg:x="191" fg:w="1"/><text x="15.6160%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4465%" y="693" width="0.0805%" height="15" fill="rgb(219,29,26)" fg:x="192" fg:w="1"/><text x="15.6965%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4465%" y="677" width="0.0805%" height="15" fill="rgb(252,40,36)" fg:x="192" fg:w="1"/><text x="15.6965%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4465%" y="661" width="0.0805%" height="15" fill="rgb(224,205,39)" fg:x="192" fg:w="1"/><text x="15.6965%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.4465%" y="645" width="0.0805%" height="15" fill="rgb(222,13,21)" fg:x="192" fg:w="1"/><text x="15.6965%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.4465%" y="709" width="0.1609%" height="15" fill="rgb(243,139,6)" fg:x="192" fg:w="2"/><text x="15.6965%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.5270%" y="693" width="0.0805%" height="15" fill="rgb(237,101,11)" fg:x="193" fg:w="1"/><text x="15.7770%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="15.3660%" y="773" width="0.3218%" height="15" fill="rgb(254,49,28)" fg:x="191" fg:w="4"/><text x="15.6160%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="15.3660%" y="757" width="0.3218%" height="15" fill="rgb(223,41,21)" fg:x="191" fg:w="4"/><text x="15.6160%" y="767.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.4465%" y="741" width="0.2414%" height="15" fill="rgb(225,103,29)" fg:x="192" fg:w="3"/><text x="15.6965%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.4465%" y="725" width="0.2414%" height="15" fill="rgb(244,82,43)" fg:x="192" fg:w="3"/><text x="15.6965%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6074%" y="709" width="0.0805%" height="15" fill="rgb(217,39,3)" fg:x="194" fg:w="1"/><text x="15.8574%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6074%" y="693" width="0.0805%" height="15" fill="rgb(239,128,25)" fg:x="194" fg:w="1"/><text x="15.8574%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="15.6074%" y="677" width="0.0805%" height="15" fill="rgb(210,192,37)" fg:x="194" fg:w="1"/><text x="15.8574%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.6074%" y="661" width="0.0805%" height="15" fill="rgb(219,98,18)" fg:x="194" fg:w="1"/><text x="15.8574%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="15.6074%" y="645" width="0.0805%" height="15" fill="rgb(224,228,38)" fg:x="194" fg:w="1"/><text x="15.8574%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;engine::users::model::Usernames&gt;&gt; (1 samples, 0.08%)</title><rect x="15.6879%" y="741" width="0.0805%" height="15" fill="rgb(241,129,43)" fg:x="195" fg:w="1"/><text x="15.9379%" y="751.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="15.6879%" y="725" width="0.0805%" height="15" fill="rgb(223,8,51)" fg:x="195" fg:w="1"/><text x="15.9379%" y="735.50"></text></g><g><title>&lt;engine::users::model::Usernames as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="15.7683%" y="725" width="0.0805%" height="15" fill="rgb(233,76,24)" fg:x="196" fg:w="1"/><text x="16.0183%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="15.7683%" y="709" width="0.0805%" height="15" fill="rgb(219,115,10)" fg:x="196" fg:w="1"/><text x="16.0183%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="15.7683%" y="693" width="0.0805%" height="15" fill="rgb(222,137,12)" fg:x="196" fg:w="1"/><text x="16.0183%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::add_username_to_key (3 samples, 0.24%)</title><rect x="15.6879%" y="773" width="0.2414%" height="15" fill="rgb(216,192,16)" fg:x="195" fg:w="3"/><text x="15.9379%" y="783.50"></text></g><g><title>engine::users::model::add_username_to_key (3 samples, 0.24%)</title><rect x="15.6879%" y="757" width="0.2414%" height="15" fill="rgb(247,6,27)" fg:x="195" fg:w="3"/><text x="15.9379%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="15.7683%" y="741" width="0.1609%" height="15" fill="rgb(254,39,44)" fg:x="196" fg:w="2"/><text x="16.0183%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.8488%" y="725" width="0.0805%" height="15" fill="rgb(251,116,35)" fg:x="197" fg:w="1"/><text x="16.0988%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="15.9292%" y="725" width="0.0805%" height="15" fill="rgb(208,61,44)" fg:x="198" fg:w="1"/><text x="16.1792%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="15.9292%" y="709" width="0.0805%" height="15" fill="rgb(250,34,5)" fg:x="198" fg:w="1"/><text x="16.1792%" y="719.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="16.0097%" y="725" width="0.1609%" height="15" fill="rgb(241,40,15)" fg:x="199" fg:w="2"/><text x="16.2597%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="16.0901%" y="709" width="0.0805%" height="15" fill="rgb(229,182,2)" fg:x="200" fg:w="1"/><text x="16.3401%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="16.0901%" y="693" width="0.0805%" height="15" fill="rgb(244,148,52)" fg:x="200" fg:w="1"/><text x="16.3401%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.0901%" y="677" width="0.0805%" height="15" fill="rgb(225,211,4)" fg:x="200" fg:w="1"/><text x="16.3401%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0901%" y="661" width="0.0805%" height="15" fill="rgb(208,222,47)" fg:x="200" fg:w="1"/><text x="16.3401%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.0901%" y="645" width="0.0805%" height="15" fill="rgb(233,162,0)" fg:x="200" fg:w="1"/><text x="16.3401%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0901%" y="629" width="0.0805%" height="15" fill="rgb(241,54,13)" fg:x="200" fg:w="1"/><text x="16.3401%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="16.0901%" y="613" width="0.0805%" height="15" fill="rgb(213,89,18)" fg:x="200" fg:w="1"/><text x="16.3401%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0901%" y="597" width="0.0805%" height="15" fill="rgb(215,170,37)" fg:x="200" fg:w="1"/><text x="16.3401%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.0901%" y="581" width="0.0805%" height="15" fill="rgb(216,133,15)" fg:x="200" fg:w="1"/><text x="16.3401%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0901%" y="565" width="0.0805%" height="15" fill="rgb(230,42,19)" fg:x="200" fg:w="1"/><text x="16.3401%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.1706%" y="645" width="0.0805%" height="15" fill="rgb(221,103,41)" fg:x="201" fg:w="1"/><text x="16.4206%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.1706%" y="693" width="0.1609%" height="15" fill="rgb(220,142,31)" fg:x="201" fg:w="2"/><text x="16.4206%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.1706%" y="677" width="0.1609%" height="15" fill="rgb(239,218,4)" fg:x="201" fg:w="2"/><text x="16.4206%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.1706%" y="661" width="0.1609%" height="15" fill="rgb(232,16,4)" fg:x="201" fg:w="2"/><text x="16.4206%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.2510%" y="645" width="0.0805%" height="15" fill="rgb(226,213,25)" fg:x="202" fg:w="1"/><text x="16.5010%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.2510%" y="629" width="0.0805%" height="15" fill="rgb(235,135,19)" fg:x="202" fg:w="1"/><text x="16.5010%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.2510%" y="613" width="0.0805%" height="15" fill="rgb(240,107,29)" fg:x="202" fg:w="1"/><text x="16.5010%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.2510%" y="597" width="0.0805%" height="15" fill="rgb(206,164,44)" fg:x="202" fg:w="1"/><text x="16.5010%" y="607.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="16.3315%" y="677" width="0.0805%" height="15" fill="rgb(210,23,48)" fg:x="203" fg:w="1"/><text x="16.5815%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.3315%" y="661" width="0.0805%" height="15" fill="rgb(212,138,25)" fg:x="203" fg:w="1"/><text x="16.5815%" y="671.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.3315%" y="645" width="0.0805%" height="15" fill="rgb(224,152,3)" fg:x="203" fg:w="1"/><text x="16.5815%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3315%" y="629" width="0.0805%" height="15" fill="rgb(214,38,23)" fg:x="203" fg:w="1"/><text x="16.5815%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.3315%" y="613" width="0.0805%" height="15" fill="rgb(215,161,10)" fg:x="203" fg:w="1"/><text x="16.5815%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="16.3315%" y="693" width="0.1609%" height="15" fill="rgb(240,185,7)" fg:x="203" fg:w="2"/><text x="16.5815%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.4119%" y="677" width="0.0805%" height="15" fill="rgb(244,104,25)" fg:x="204" fg:w="1"/><text x="16.6619%" y="687.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="16.4119%" y="661" width="0.0805%" height="15" fill="rgb(242,140,44)" fg:x="204" fg:w="1"/><text x="16.6619%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="16.1706%" y="709" width="0.4023%" height="15" fill="rgb(245,30,19)" fg:x="201" fg:w="5"/><text x="16.4206%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="16.4924%" y="693" width="0.0805%" height="15" fill="rgb(219,208,35)" fg:x="205" fg:w="1"/><text x="16.7424%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="16.4924%" y="677" width="0.0805%" height="15" fill="rgb(235,200,7)" fg:x="205" fg:w="1"/><text x="16.7424%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="16.4924%" y="661" width="0.0805%" height="15" fill="rgb(220,193,10)" fg:x="205" fg:w="1"/><text x="16.7424%" y="671.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="16.4924%" y="645" width="0.0805%" height="15" fill="rgb(212,216,39)" fg:x="205" fg:w="1"/><text x="16.7424%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="16.4924%" y="629" width="0.0805%" height="15" fill="rgb(212,134,19)" fg:x="205" fg:w="1"/><text x="16.7424%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="16.4924%" y="613" width="0.0805%" height="15" fill="rgb(230,57,24)" fg:x="205" fg:w="1"/><text x="16.7424%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="16.4924%" y="597" width="0.0805%" height="15" fill="rgb(238,209,37)" fg:x="205" fg:w="1"/><text x="16.7424%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="16.5728%" y="709" width="0.1609%" height="15" fill="rgb(247,11,45)" fg:x="206" fg:w="2"/><text x="16.8228%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="16.5728%" y="693" width="0.1609%" height="15" fill="rgb(222,126,6)" fg:x="206" fg:w="2"/><text x="16.8228%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="16.5728%" y="677" width="0.1609%" height="15" fill="rgb(245,77,24)" fg:x="206" fg:w="2"/><text x="16.8228%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="16.7337%" y="693" width="0.0805%" height="15" fill="rgb(227,14,24)" fg:x="208" fg:w="1"/><text x="16.9837%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="16.7337%" y="677" width="0.0805%" height="15" fill="rgb(211,112,42)" fg:x="208" fg:w="1"/><text x="16.9837%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.7337%" y="661" width="0.0805%" height="15" fill="rgb(230,103,42)" fg:x="208" fg:w="1"/><text x="16.9837%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="613" width="0.0805%" height="15" fill="rgb(228,125,42)" fg:x="209" fg:w="1"/><text x="17.0642%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="597" width="0.0805%" height="15" fill="rgb(243,33,6)" fg:x="209" fg:w="1"/><text x="17.0642%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="581" width="0.0805%" height="15" fill="rgb(231,2,40)" fg:x="209" fg:w="1"/><text x="17.0642%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="565" width="0.0805%" height="15" fill="rgb(224,200,53)" fg:x="209" fg:w="1"/><text x="17.0642%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.8142%" y="549" width="0.0805%" height="15" fill="rgb(215,116,36)" fg:x="209" fg:w="1"/><text x="17.0642%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.8142%" y="533" width="0.0805%" height="15" fill="rgb(240,23,51)" fg:x="209" fg:w="1"/><text x="17.0642%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.8142%" y="661" width="0.1609%" height="15" fill="rgb(221,72,5)" fg:x="209" fg:w="2"/><text x="17.0642%" y="671.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.8142%" y="645" width="0.1609%" height="15" fill="rgb(245,142,9)" fg:x="209" fg:w="2"/><text x="17.0642%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.8142%" y="629" width="0.1609%" height="15" fill="rgb(207,34,16)" fg:x="209" fg:w="2"/><text x="17.0642%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.8946%" y="613" width="0.0805%" height="15" fill="rgb(252,101,12)" fg:x="210" fg:w="1"/><text x="17.1446%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="16.8946%" y="597" width="0.0805%" height="15" fill="rgb(239,89,37)" fg:x="210" fg:w="1"/><text x="17.1446%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.8946%" y="581" width="0.0805%" height="15" fill="rgb(252,227,37)" fg:x="210" fg:w="1"/><text x="17.1446%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.8946%" y="565" width="0.0805%" height="15" fill="rgb(212,164,17)" fg:x="210" fg:w="1"/><text x="17.1446%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.9751%" y="565" width="0.1609%" height="15" fill="rgb(240,86,13)" fg:x="211" fg:w="2"/><text x="17.2251%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.0555%" y="549" width="0.0805%" height="15" fill="rgb(233,183,32)" fg:x="212" fg:w="1"/><text x="17.3055%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.0555%" y="533" width="0.0805%" height="15" fill="rgb(205,201,38)" fg:x="212" fg:w="1"/><text x="17.3055%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.9751%" y="613" width="0.2414%" height="15" fill="rgb(210,122,38)" fg:x="211" fg:w="3"/><text x="17.2251%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.9751%" y="597" width="0.2414%" height="15" fill="rgb(241,174,26)" fg:x="211" fg:w="3"/><text x="17.2251%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="16.9751%" y="581" width="0.2414%" height="15" fill="rgb(219,89,7)" fg:x="211" fg:w="3"/><text x="17.2251%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.1360%" y="565" width="0.0805%" height="15" fill="rgb(246,9,24)" fg:x="213" fg:w="1"/><text x="17.3860%" y="575.50"></text></g><g><title>plugins_core::build::Build::leads_to (14 samples, 1.13%)</title><rect x="16.1706%" y="725" width="1.1263%" height="15" fill="rgb(205,132,21)" fg:x="201" fg:w="14"/><text x="16.4206%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (7 samples, 0.56%)</title><rect x="16.7337%" y="709" width="0.5632%" height="15" fill="rgb(210,11,17)" fg:x="208" fg:w="7"/><text x="16.9837%" y="719.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="16.8142%" y="693" width="0.4827%" height="15" fill="rgb(226,138,14)" fg:x="209" fg:w="6"/><text x="17.0642%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="16.8142%" y="677" width="0.4827%" height="15" fill="rgb(224,108,44)" fg:x="209" fg:w="6"/><text x="17.0642%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="16.9751%" y="661" width="0.3218%" height="15" fill="rgb(247,114,36)" fg:x="211" fg:w="4"/><text x="17.2251%" y="671.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="16.9751%" y="645" width="0.3218%" height="15" fill="rgb(231,183,14)" fg:x="211" fg:w="4"/><text x="17.2251%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="16.9751%" y="629" width="0.3218%" height="15" fill="rgb(218,168,4)" fg:x="211" fg:w="4"/><text x="17.2251%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2164%" y="613" width="0.0805%" height="15" fill="rgb(210,8,3)" fg:x="214" fg:w="1"/><text x="17.4664%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2164%" y="597" width="0.0805%" height="15" fill="rgb(216,165,0)" fg:x="214" fg:w="1"/><text x="17.4664%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2164%" y="581" width="0.0805%" height="15" fill="rgb(245,120,5)" fg:x="214" fg:w="1"/><text x="17.4664%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2164%" y="565" width="0.0805%" height="15" fill="rgb(249,121,32)" fg:x="214" fg:w="1"/><text x="17.4664%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.2164%" y="549" width="0.0805%" height="15" fill="rgb(211,55,33)" fg:x="214" fg:w="1"/><text x="17.4664%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2164%" y="533" width="0.0805%" height="15" fill="rgb(254,46,35)" fg:x="214" fg:w="1"/><text x="17.4664%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2164%" y="517" width="0.0805%" height="15" fill="rgb(213,213,19)" fg:x="214" fg:w="1"/><text x="17.4664%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.2164%" y="501" width="0.0805%" height="15" fill="rgb(207,152,44)" fg:x="214" fg:w="1"/><text x="17.4664%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.2164%" y="485" width="0.0805%" height="15" fill="rgb(227,195,36)" fg:x="214" fg:w="1"/><text x="17.4664%" y="495.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="17.2969%" y="693" width="0.0805%" height="15" fill="rgb(210,137,36)" fg:x="215" fg:w="1"/><text x="17.5469%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="17.2969%" y="677" width="0.0805%" height="15" fill="rgb(253,47,47)" fg:x="215" fg:w="1"/><text x="17.5469%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="17.2969%" y="661" width="0.0805%" height="15" fill="rgb(230,147,18)" fg:x="215" fg:w="1"/><text x="17.5469%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="17.2969%" y="645" width="0.0805%" height="15" fill="rgb(247,33,49)" fg:x="215" fg:w="1"/><text x="17.5469%" y="655.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 1.53%)</title><rect x="15.9292%" y="773" width="1.5286%" height="15" fill="rgb(239,26,29)" fg:x="198" fg:w="19"/><text x="16.1792%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 1.53%)</title><rect x="15.9292%" y="757" width="1.5286%" height="15" fill="rgb(245,145,52)" fg:x="198" fg:w="19"/><text x="16.1792%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (19 samples, 1.53%)</title><rect x="15.9292%" y="741" width="1.5286%" height="15" fill="rgb(224,139,32)" fg:x="198" fg:w="19"/><text x="16.1792%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="17.2969%" y="725" width="0.1609%" height="15" fill="rgb(238,202,19)" fg:x="215" fg:w="2"/><text x="17.5469%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="17.2969%" y="709" width="0.1609%" height="15" fill="rgb(249,211,53)" fg:x="215" fg:w="2"/><text x="17.5469%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.3773%" y="693" width="0.0805%" height="15" fill="rgb(237,229,33)" fg:x="216" fg:w="1"/><text x="17.6273%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.3773%" y="677" width="0.0805%" height="15" fill="rgb(208,97,40)" fg:x="216" fg:w="1"/><text x="17.6273%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3773%" y="661" width="0.0805%" height="15" fill="rgb(254,36,16)" fg:x="216" fg:w="1"/><text x="17.6273%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.3773%" y="645" width="0.0805%" height="15" fill="rgb(221,7,12)" fg:x="216" fg:w="1"/><text x="17.6273%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4578%" y="773" width="0.0805%" height="15" fill="rgb(205,11,12)" fg:x="217" fg:w="1"/><text x="17.7078%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="17.4578%" y="757" width="0.0805%" height="15" fill="rgb(227,72,28)" fg:x="217" fg:w="1"/><text x="17.7078%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (3 samples, 0.24%)</title><rect x="17.5382%" y="757" width="0.2414%" height="15" fill="rgb(228,7,34)" fg:x="218" fg:w="3"/><text x="17.7882%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.5382%" y="741" width="0.2414%" height="15" fill="rgb(230,52,42)" fg:x="218" fg:w="3"/><text x="17.7882%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.24%)</title><rect x="17.5382%" y="725" width="0.2414%" height="15" fill="rgb(219,177,53)" fg:x="218" fg:w="3"/><text x="17.7882%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="17.6187%" y="709" width="0.1609%" height="15" fill="rgb(243,196,34)" fg:x="219" fg:w="2"/><text x="17.8687%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6991%" y="693" width="0.0805%" height="15" fill="rgb(213,66,49)" fg:x="220" fg:w="1"/><text x="17.9491%" y="703.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="17.7796%" y="741" width="0.0805%" height="15" fill="rgb(233,11,50)" fg:x="221" fg:w="1"/><text x="18.0296%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="17.8600%" y="709" width="0.1609%" height="15" fill="rgb(235,190,6)" fg:x="222" fg:w="2"/><text x="18.1100%" y="719.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="18.0209%" y="709" width="0.2414%" height="15" fill="rgb(212,64,44)" fg:x="224" fg:w="3"/><text x="18.2709%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="18.1014%" y="693" width="0.1609%" height="15" fill="rgb(206,95,44)" fg:x="225" fg:w="2"/><text x="18.3514%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (2 samples, 0.16%)</title><rect x="18.1014%" y="677" width="0.1609%" height="15" fill="rgb(227,136,25)" fg:x="225" fg:w="2"/><text x="18.3514%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="18.1818%" y="661" width="0.0805%" height="15" fill="rgb(206,178,17)" fg:x="226" fg:w="1"/><text x="18.4318%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="18.1818%" y="645" width="0.0805%" height="15" fill="rgb(208,168,35)" fg:x="226" fg:w="1"/><text x="18.4318%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="18.1818%" y="629" width="0.0805%" height="15" fill="rgb(213,210,40)" fg:x="226" fg:w="1"/><text x="18.4318%" y="639.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="18.4232%" y="677" width="0.0805%" height="15" fill="rgb(236,60,6)" fg:x="229" fg:w="1"/><text x="18.6732%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="18.4232%" y="661" width="0.0805%" height="15" fill="rgb(220,186,36)" fg:x="229" fg:w="1"/><text x="18.6732%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="18.4232%" y="645" width="0.0805%" height="15" fill="rgb(225,120,49)" fg:x="229" fg:w="1"/><text x="18.6732%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="18.4232%" y="629" width="0.0805%" height="15" fill="rgb(250,115,20)" fg:x="229" fg:w="1"/><text x="18.6732%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.4232%" y="613" width="0.0805%" height="15" fill="rgb(207,214,23)" fg:x="229" fg:w="1"/><text x="18.6732%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="18.5036%" y="661" width="0.0805%" height="15" fill="rgb(240,9,18)" fg:x="230" fg:w="1"/><text x="18.7536%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="18.5841%" y="661" width="0.0805%" height="15" fill="rgb(232,170,48)" fg:x="231" fg:w="1"/><text x="18.8341%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="18.5841%" y="645" width="0.0805%" height="15" fill="rgb(236,149,23)" fg:x="231" fg:w="1"/><text x="18.8341%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="18.5841%" y="629" width="0.0805%" height="15" fill="rgb(210,125,42)" fg:x="231" fg:w="1"/><text x="18.8341%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="18.5841%" y="613" width="0.0805%" height="15" fill="rgb(207,201,52)" fg:x="231" fg:w="1"/><text x="18.8341%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="18.5841%" y="597" width="0.0805%" height="15" fill="rgb(250,187,37)" fg:x="231" fg:w="1"/><text x="18.8341%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="18.6645%" y="645" width="0.4023%" height="15" fill="rgb(214,186,2)" fg:x="232" fg:w="5"/><text x="18.9145%" y="655.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="18.6645%" y="629" width="0.4023%" height="15" fill="rgb(207,189,15)" fg:x="232" fg:w="5"/><text x="18.9145%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="18.7450%" y="613" width="0.3218%" height="15" fill="rgb(221,99,21)" fg:x="233" fg:w="4"/><text x="18.9950%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="18.8254%" y="597" width="0.2414%" height="15" fill="rgb(212,67,18)" fg:x="234" fg:w="3"/><text x="19.0754%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="18.9059%" y="581" width="0.1609%" height="15" fill="rgb(226,24,24)" fg:x="235" fg:w="2"/><text x="19.1559%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="18.9059%" y="565" width="0.1609%" height="15" fill="rgb(252,123,31)" fg:x="235" fg:w="2"/><text x="19.1559%" y="575.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="18.9059%" y="549" width="0.1609%" height="15" fill="rgb(251,227,47)" fg:x="235" fg:w="2"/><text x="19.1559%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="19.3081%" y="629" width="0.0805%" height="15" fill="rgb(233,84,53)" fg:x="240" fg:w="1"/><text x="19.5581%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="19.3081%" y="613" width="0.0805%" height="15" fill="rgb(228,57,19)" fg:x="240" fg:w="1"/><text x="19.5581%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.3081%" y="597" width="0.0805%" height="15" fill="rgb(251,81,5)" fg:x="240" fg:w="1"/><text x="19.5581%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.3886%" y="613" width="0.0805%" height="15" fill="rgb(236,211,27)" fg:x="241" fg:w="1"/><text x="19.6386%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.4690%" y="613" width="0.0805%" height="15" fill="rgb(218,21,6)" fg:x="242" fg:w="1"/><text x="19.7190%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.4690%" y="597" width="0.0805%" height="15" fill="rgb(239,104,19)" fg:x="242" fg:w="1"/><text x="19.7190%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4690%" y="581" width="0.0805%" height="15" fill="rgb(234,179,27)" fg:x="242" fg:w="1"/><text x="19.7190%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.5495%" y="597" width="0.0805%" height="15" fill="rgb(221,154,39)" fg:x="243" fg:w="1"/><text x="19.7995%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.5495%" y="581" width="0.0805%" height="15" fill="rgb(228,190,1)" fg:x="243" fg:w="1"/><text x="19.7995%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.5495%" y="565" width="0.0805%" height="15" fill="rgb(244,122,33)" fg:x="243" fg:w="1"/><text x="19.7995%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.5495%" y="549" width="0.0805%" height="15" fill="rgb(227,56,37)" fg:x="243" fg:w="1"/><text x="19.7995%" y="559.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="19.6299%" y="581" width="0.0805%" height="15" fill="rgb(207,158,16)" fg:x="244" fg:w="1"/><text x="19.8799%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="19.6299%" y="565" width="0.0805%" height="15" fill="rgb(251,222,30)" fg:x="244" fg:w="1"/><text x="19.8799%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.6299%" y="549" width="0.0805%" height="15" fill="rgb(240,22,49)" fg:x="244" fg:w="1"/><text x="19.8799%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="19.7104%" y="565" width="0.0805%" height="15" fill="rgb(224,207,37)" fg:x="245" fg:w="1"/><text x="19.9604%" y="575.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="19.5495%" y="613" width="0.4827%" height="15" fill="rgb(249,188,40)" fg:x="243" fg:w="6"/><text x="19.7995%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="19.6299%" y="597" width="0.4023%" height="15" fill="rgb(254,141,11)" fg:x="244" fg:w="5"/><text x="19.8799%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="19.7104%" y="581" width="0.3218%" height="15" fill="rgb(231,177,6)" fg:x="245" fg:w="4"/><text x="19.9604%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="19.7908%" y="565" width="0.2414%" height="15" fill="rgb(241,6,16)" fg:x="246" fg:w="3"/><text x="20.0408%" y="575.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="19.7908%" y="549" width="0.2414%" height="15" fill="rgb(230,50,14)" fg:x="246" fg:w="3"/><text x="20.0408%" y="559.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="19.8713%" y="533" width="0.1609%" height="15" fill="rgb(254,36,3)" fg:x="247" fg:w="2"/><text x="20.1213%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="19.8713%" y="517" width="0.1609%" height="15" fill="rgb(226,149,37)" fg:x="247" fg:w="2"/><text x="20.1213%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="19.9517%" y="501" width="0.0805%" height="15" fill="rgb(253,49,27)" fg:x="248" fg:w="1"/><text x="20.2017%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="19.9517%" y="485" width="0.0805%" height="15" fill="rgb(249,182,52)" fg:x="248" fg:w="1"/><text x="20.2017%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="19.9517%" y="469" width="0.0805%" height="15" fill="rgb(223,42,15)" fg:x="248" fg:w="1"/><text x="20.2017%" y="479.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="19.0668%" y="645" width="1.2872%" height="15" fill="rgb(232,31,42)" fg:x="237" fg:w="16"/><text x="19.3168%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="19.3886%" y="629" width="0.9654%" height="15" fill="rgb(233,56,46)" fg:x="241" fg:w="12"/><text x="19.6386%" y="639.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="20.0322%" y="613" width="0.3218%" height="15" fill="rgb(241,143,21)" fg:x="249" fg:w="4"/><text x="20.2822%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (3 samples, 0.24%)</title><rect x="20.1126%" y="597" width="0.2414%" height="15" fill="rgb(251,222,15)" fg:x="250" fg:w="3"/><text x="20.3626%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.2735%" y="581" width="0.0805%" height="15" fill="rgb(242,101,40)" fg:x="252" fg:w="1"/><text x="20.5235%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.09%)</title><rect x="18.6645%" y="661" width="2.0917%" height="15" fill="rgb(247,60,44)" fg:x="232" fg:w="26"/><text x="18.9145%" y="671.50">s..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="20.3540%" y="645" width="0.4023%" height="15" fill="rgb(254,48,47)" fg:x="253" fg:w="5"/><text x="20.6040%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.5953%" y="629" width="0.1609%" height="15" fill="rgb(253,30,33)" fg:x="256" fg:w="2"/><text x="20.8453%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="20.5953%" y="613" width="0.1609%" height="15" fill="rgb(253,214,47)" fg:x="256" fg:w="2"/><text x="20.8453%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="20.5953%" y="597" width="0.1609%" height="15" fill="rgb(241,108,29)" fg:x="256" fg:w="2"/><text x="20.8453%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="20.5953%" y="581" width="0.1609%" height="15" fill="rgb(240,36,2)" fg:x="256" fg:w="2"/><text x="20.8453%" y="591.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="20.5953%" y="565" width="0.1609%" height="15" fill="rgb(243,198,24)" fg:x="256" fg:w="2"/><text x="20.8453%" y="575.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (29 samples, 2.33%)</title><rect x="18.5036%" y="677" width="2.3331%" height="15" fill="rgb(225,98,27)" fg:x="230" fg:w="29"/><text x="18.7536%" y="687.50">&lt;..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.7562%" y="661" width="0.0805%" height="15" fill="rgb(208,86,30)" fg:x="258" fg:w="1"/><text x="21.0062%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="20.8367%" y="645" width="0.0805%" height="15" fill="rgb(242,157,11)" fg:x="259" fg:w="1"/><text x="21.0867%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="20.9171%" y="645" width="0.2414%" height="15" fill="rgb(244,84,16)" fg:x="260" fg:w="3"/><text x="21.1671%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="20.9976%" y="629" width="0.1609%" height="15" fill="rgb(247,20,46)" fg:x="261" fg:w="2"/><text x="21.2476%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="21.2389%" y="597" width="0.1609%" height="15" fill="rgb(240,157,20)" fg:x="264" fg:w="2"/><text x="21.4889%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3194%" y="581" width="0.0805%" height="15" fill="rgb(212,151,38)" fg:x="265" fg:w="1"/><text x="21.5694%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="21.3998%" y="597" width="0.0805%" height="15" fill="rgb(233,197,14)" fg:x="266" fg:w="1"/><text x="21.6498%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="21.3998%" y="581" width="0.0805%" height="15" fill="rgb(226,148,28)" fg:x="266" fg:w="1"/><text x="21.6498%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.3998%" y="565" width="0.0805%" height="15" fill="rgb(244,141,30)" fg:x="266" fg:w="1"/><text x="21.6498%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="20.8367%" y="677" width="0.8045%" height="15" fill="rgb(215,73,38)" fg:x="259" fg:w="10"/><text x="21.0867%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.80%)</title><rect x="20.8367%" y="661" width="0.8045%" height="15" fill="rgb(230,148,29)" fg:x="259" fg:w="10"/><text x="21.0867%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="21.1585%" y="645" width="0.4827%" height="15" fill="rgb(250,41,52)" fg:x="263" fg:w="6"/><text x="21.4085%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="21.2389%" y="629" width="0.4023%" height="15" fill="rgb(215,48,1)" fg:x="264" fg:w="5"/><text x="21.4889%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="21.2389%" y="613" width="0.4023%" height="15" fill="rgb(205,223,38)" fg:x="264" fg:w="5"/><text x="21.4889%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="21.4803%" y="597" width="0.1609%" height="15" fill="rgb(213,51,8)" fg:x="267" fg:w="2"/><text x="21.7303%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="21.5607%" y="581" width="0.0805%" height="15" fill="rgb(248,53,11)" fg:x="268" fg:w="1"/><text x="21.8107%" y="591.50"></text></g><g><title>treediff::tools::record::mk (1 samples, 0.08%)</title><rect x="21.6412%" y="629" width="0.0805%" height="15" fill="rgb(218,140,4)" fg:x="269" fg:w="1"/><text x="21.8912%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (2 samples, 0.16%)</title><rect x="21.6412%" y="661" width="0.1609%" height="15" fill="rgb(248,161,31)" fg:x="269" fg:w="2"/><text x="21.8912%" y="671.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="21.6412%" y="645" width="0.1609%" height="15" fill="rgb(239,88,32)" fg:x="269" fg:w="2"/><text x="21.8912%" y="655.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="21.7216%" y="629" width="0.0805%" height="15" fill="rgb(234,14,28)" fg:x="270" fg:w="1"/><text x="21.9716%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="21.7216%" y="613" width="0.0805%" height="15" fill="rgb(235,173,11)" fg:x="270" fg:w="1"/><text x="21.9716%" y="623.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="21.8825%" y="629" width="0.2414%" height="15" fill="rgb(222,70,2)" fg:x="272" fg:w="3"/><text x="22.1325%" y="639.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (6 samples, 0.48%)</title><rect x="22.1239%" y="629" width="0.4827%" height="15" fill="rgb(228,196,41)" fg:x="275" fg:w="6"/><text x="22.3739%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="22.2043%" y="613" width="0.4023%" height="15" fill="rgb(249,19,9)" fg:x="276" fg:w="5"/><text x="22.4543%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="22.2848%" y="597" width="0.3218%" height="15" fill="rgb(221,16,43)" fg:x="277" fg:w="4"/><text x="22.5348%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.5261%" y="581" width="0.0805%" height="15" fill="rgb(225,207,6)" fg:x="280" fg:w="1"/><text x="22.7761%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="22.5261%" y="565" width="0.0805%" height="15" fill="rgb(249,32,32)" fg:x="280" fg:w="1"/><text x="22.7761%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="22.6870%" y="597" width="0.0805%" height="15" fill="rgb(232,163,43)" fg:x="282" fg:w="1"/><text x="22.9370%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7675%" y="581" width="0.0805%" height="15" fill="rgb(236,158,54)" fg:x="283" fg:w="1"/><text x="23.0175%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="22.7675%" y="565" width="0.0805%" height="15" fill="rgb(205,126,44)" fg:x="283" fg:w="1"/><text x="23.0175%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="22.8479%" y="581" width="0.0805%" height="15" fill="rgb(210,162,12)" fg:x="284" fg:w="1"/><text x="23.0979%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8479%" y="565" width="0.0805%" height="15" fill="rgb(218,156,48)" fg:x="284" fg:w="1"/><text x="23.0979%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="22.8479%" y="549" width="0.0805%" height="15" fill="rgb(248,210,3)" fg:x="284" fg:w="1"/><text x="23.0979%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="22.8479%" y="533" width="0.0805%" height="15" fill="rgb(212,43,27)" fg:x="284" fg:w="1"/><text x="23.0979%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="22.8479%" y="517" width="0.0805%" height="15" fill="rgb(241,52,6)" fg:x="284" fg:w="1"/><text x="23.0979%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.0088%" y="549" width="0.1609%" height="15" fill="rgb(222,178,35)" fg:x="286" fg:w="2"/><text x="23.2588%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="23.0088%" y="533" width="0.1609%" height="15" fill="rgb(205,121,46)" fg:x="286" fg:w="2"/><text x="23.2588%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="23.0893%" y="517" width="0.0805%" height="15" fill="rgb(249,67,1)" fg:x="287" fg:w="1"/><text x="23.3393%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.1698%" y="549" width="0.0805%" height="15" fill="rgb(238,168,42)" fg:x="288" fg:w="1"/><text x="23.4198%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="23.1698%" y="533" width="0.0805%" height="15" fill="rgb(205,36,48)" fg:x="288" fg:w="1"/><text x="23.4198%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3307%" y="485" width="0.0805%" height="15" fill="rgb(240,85,12)" fg:x="290" fg:w="1"/><text x="23.5807%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.3307%" y="469" width="0.0805%" height="15" fill="rgb(245,27,39)" fg:x="290" fg:w="1"/><text x="23.5807%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.3307%" y="453" width="0.0805%" height="15" fill="rgb(218,129,34)" fg:x="290" fg:w="1"/><text x="23.5807%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="23.3307%" y="533" width="0.3218%" height="15" fill="rgb(221,157,12)" fg:x="290" fg:w="4"/><text x="23.5807%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="23.3307%" y="517" width="0.3218%" height="15" fill="rgb(213,206,20)" fg:x="290" fg:w="4"/><text x="23.5807%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="23.3307%" y="501" width="0.3218%" height="15" fill="rgb(227,115,30)" fg:x="290" fg:w="4"/><text x="23.5807%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="23.4111%" y="485" width="0.2414%" height="15" fill="rgb(221,40,47)" fg:x="291" fg:w="3"/><text x="23.6611%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="23.4111%" y="469" width="0.2414%" height="15" fill="rgb(239,96,49)" fg:x="291" fg:w="3"/><text x="23.6611%" y="479.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="23.4111%" y="453" width="0.2414%" height="15" fill="rgb(223,24,38)" fg:x="291" fg:w="3"/><text x="23.6611%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="23.5720%" y="437" width="0.0805%" height="15" fill="rgb(242,35,45)" fg:x="293" fg:w="1"/><text x="23.8220%" y="447.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (9 samples, 0.72%)</title><rect x="23.0088%" y="565" width="0.7241%" height="15" fill="rgb(236,20,9)" fg:x="286" fg:w="9"/><text x="23.2588%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="23.2502%" y="549" width="0.4827%" height="15" fill="rgb(239,124,8)" fg:x="289" fg:w="6"/><text x="23.5002%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.6525%" y="533" width="0.0805%" height="15" fill="rgb(228,92,29)" fg:x="294" fg:w="1"/><text x="23.9025%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (13 samples, 1.05%)</title><rect x="22.7675%" y="597" width="1.0459%" height="15" fill="rgb(251,53,39)" fg:x="283" fg:w="13"/><text x="23.0175%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.88%)</title><rect x="22.9284%" y="581" width="0.8850%" height="15" fill="rgb(224,44,10)" fg:x="285" fg:w="11"/><text x="23.1784%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="23.7329%" y="565" width="0.0805%" height="15" fill="rgb(254,10,15)" fg:x="295" fg:w="1"/><text x="23.9829%" y="575.50"></text></g><g><title>engine::session::Session::flush (79 samples, 6.36%)</title><rect x="17.5382%" y="773" width="6.3556%" height="15" fill="rgb(245,173,6)" fg:x="218" fg:w="79"/><text x="17.7882%" y="783.50">engine::..</text></g><g><title>engine::session::Session::save_changes (76 samples, 6.11%)</title><rect x="17.7796%" y="757" width="6.1142%" height="15" fill="rgb(228,74,0)" fg:x="221" fg:w="76"/><text x="18.0296%" y="767.50">engine::..</text></g><g><title>engine::session::state::State::close (75 samples, 6.03%)</title><rect x="17.8600%" y="741" width="6.0338%" height="15" fill="rgb(206,138,29)" fg:x="222" fg:w="75"/><text x="18.1100%" y="751.50">engine::..</text></g><g><title>engine::session::state::State::flush_entities (75 samples, 6.03%)</title><rect x="17.8600%" y="725" width="6.0338%" height="15" fill="rgb(253,27,43)" fg:x="222" fg:w="75"/><text x="18.1100%" y="735.50">engine::..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (70 samples, 5.63%)</title><rect x="18.2623%" y="709" width="5.6315%" height="15" fill="rgb(231,73,0)" fg:x="227" fg:w="70"/><text x="18.5123%" y="719.50">engine:..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (69 samples, 5.55%)</title><rect x="18.3427%" y="693" width="5.5511%" height="15" fill="rgb(218,9,23)" fg:x="228" fg:w="69"/><text x="18.5927%" y="703.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (28 samples, 2.25%)</title><rect x="21.6412%" y="677" width="2.2526%" height="15" fill="rgb(251,55,29)" fg:x="269" fg:w="28"/><text x="21.8912%" y="687.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (26 samples, 2.09%)</title><rect x="21.8021%" y="661" width="2.0917%" height="15" fill="rgb(223,180,22)" fg:x="271" fg:w="26"/><text x="22.0521%" y="671.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 2.01%)</title><rect x="21.8825%" y="645" width="2.0113%" height="15" fill="rgb(223,29,21)" fg:x="272" fg:w="25"/><text x="22.1325%" y="655.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.29%)</title><rect x="22.6066%" y="629" width="1.2872%" height="15" fill="rgb(251,103,37)" fg:x="281" fg:w="16"/><text x="22.8566%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.29%)</title><rect x="22.6066%" y="613" width="1.2872%" height="15" fill="rgb(214,11,21)" fg:x="281" fg:w="16"/><text x="22.8566%" y="623.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="23.8134%" y="597" width="0.0805%" height="15" fill="rgb(205,137,13)" fg:x="296" fg:w="1"/><text x="24.0634%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="23.9743%" y="757" width="0.0805%" height="15" fill="rgb(225,58,47)" fg:x="298" fg:w="1"/><text x="24.2243%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (1 samples, 0.08%)</title><rect x="24.0547%" y="757" width="0.0805%" height="15" fill="rgb(222,197,14)" fg:x="299" fg:w="1"/><text x="24.3047%" y="767.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="24.0547%" y="741" width="0.0805%" height="15" fill="rgb(215,210,33)" fg:x="299" fg:w="1"/><text x="24.3047%" y="751.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="24.0547%" y="725" width="0.0805%" height="15" fill="rgb(242,13,9)" fg:x="299" fg:w="1"/><text x="24.3047%" y="735.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (4 samples, 0.32%)</title><rect x="23.8938%" y="773" width="0.3218%" height="15" fill="rgb(218,31,39)" fg:x="297" fg:w="4"/><text x="24.1438%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="24.1352%" y="757" width="0.0805%" height="15" fill="rgb(211,214,23)" fg:x="300" fg:w="1"/><text x="24.3852%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="24.1352%" y="741" width="0.0805%" height="15" fill="rgb(237,92,14)" fg:x="300" fg:w="1"/><text x="24.3852%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="24.2961%" y="741" width="0.1609%" height="15" fill="rgb(220,78,5)" fg:x="302" fg:w="2"/><text x="24.5461%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="24.3765%" y="725" width="0.0805%" height="15" fill="rgb(237,23,21)" fg:x="303" fg:w="1"/><text x="24.6265%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="24.3765%" y="709" width="0.0805%" height="15" fill="rgb(251,207,51)" fg:x="303" fg:w="1"/><text x="24.6265%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="693" width="0.0805%" height="15" fill="rgb(249,206,18)" fg:x="303" fg:w="1"/><text x="24.6265%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.3765%" y="677" width="0.0805%" height="15" fill="rgb(236,20,19)" fg:x="303" fg:w="1"/><text x="24.6265%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="661" width="0.0805%" height="15" fill="rgb(214,227,29)" fg:x="303" fg:w="1"/><text x="24.6265%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="645" width="0.0805%" height="15" fill="rgb(209,183,4)" fg:x="303" fg:w="1"/><text x="24.6265%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="629" width="0.0805%" height="15" fill="rgb(233,111,23)" fg:x="303" fg:w="1"/><text x="24.6265%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="24.3765%" y="613" width="0.0805%" height="15" fill="rgb(238,121,27)" fg:x="303" fg:w="1"/><text x="24.6265%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="597" width="0.0805%" height="15" fill="rgb(236,120,41)" fg:x="303" fg:w="1"/><text x="24.6265%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="581" width="0.0805%" height="15" fill="rgb(241,143,10)" fg:x="303" fg:w="1"/><text x="24.6265%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="24.3765%" y="565" width="0.0805%" height="15" fill="rgb(224,86,31)" fg:x="303" fg:w="1"/><text x="24.6265%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.4570%" y="645" width="0.0805%" height="15" fill="rgb(236,212,27)" fg:x="304" fg:w="1"/><text x="24.7070%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.4570%" y="693" width="0.1609%" height="15" fill="rgb(219,43,51)" fg:x="304" fg:w="2"/><text x="24.7070%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="24.4570%" y="677" width="0.1609%" height="15" fill="rgb(232,216,8)" fg:x="304" fg:w="2"/><text x="24.7070%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="24.4570%" y="661" width="0.1609%" height="15" fill="rgb(206,222,39)" fg:x="304" fg:w="2"/><text x="24.7070%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="24.5374%" y="645" width="0.0805%" height="15" fill="rgb(209,149,48)" fg:x="305" fg:w="1"/><text x="24.7874%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.5374%" y="629" width="0.0805%" height="15" fill="rgb(229,155,21)" fg:x="305" fg:w="1"/><text x="24.7874%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.5374%" y="613" width="0.0805%" height="15" fill="rgb(246,152,26)" fg:x="305" fg:w="1"/><text x="24.7874%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="24.6179%" y="661" width="0.0805%" height="15" fill="rgb(206,70,42)" fg:x="306" fg:w="1"/><text x="24.8679%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="24.6179%" y="645" width="0.0805%" height="15" fill="rgb(236,9,11)" fg:x="306" fg:w="1"/><text x="24.8679%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="24.4570%" y="741" width="0.4023%" height="15" fill="rgb(238,145,47)" fg:x="304" fg:w="5"/><text x="24.7070%" y="751.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="24.4570%" y="725" width="0.4023%" height="15" fill="rgb(252,189,7)" fg:x="304" fg:w="5"/><text x="24.7070%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="24.4570%" y="709" width="0.4023%" height="15" fill="rgb(254,168,51)" fg:x="304" fg:w="5"/><text x="24.7070%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="24.6179%" y="693" width="0.2414%" height="15" fill="rgb(227,105,46)" fg:x="306" fg:w="3"/><text x="24.8679%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="24.6179%" y="677" width="0.2414%" height="15" fill="rgb(227,74,30)" fg:x="306" fg:w="3"/><text x="24.8679%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.6983%" y="661" width="0.1609%" height="15" fill="rgb(206,212,44)" fg:x="307" fg:w="2"/><text x="24.9483%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.6983%" y="645" width="0.1609%" height="15" fill="rgb(252,69,11)" fg:x="307" fg:w="2"/><text x="24.9483%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="24.6983%" y="629" width="0.1609%" height="15" fill="rgb(239,116,0)" fg:x="307" fg:w="2"/><text x="24.9483%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.6983%" y="613" width="0.1609%" height="15" fill="rgb(246,189,23)" fg:x="307" fg:w="2"/><text x="24.9483%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.6983%" y="597" width="0.1609%" height="15" fill="rgb(229,50,41)" fg:x="307" fg:w="2"/><text x="24.9483%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.6983%" y="581" width="0.1609%" height="15" fill="rgb(214,66,37)" fg:x="307" fg:w="2"/><text x="24.9483%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.7788%" y="565" width="0.0805%" height="15" fill="rgb(226,28,6)" fg:x="308" fg:w="1"/><text x="25.0288%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="24.7788%" y="549" width="0.0805%" height="15" fill="rgb(239,154,0)" fg:x="308" fg:w="1"/><text x="25.0288%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="24.8592%" y="725" width="0.1609%" height="15" fill="rgb(233,97,11)" fg:x="309" fg:w="2"/><text x="25.1092%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="24.8592%" y="709" width="0.1609%" height="15" fill="rgb(236,215,16)" fg:x="309" fg:w="2"/><text x="25.1092%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="24.8592%" y="693" width="0.1609%" height="15" fill="rgb(246,188,29)" fg:x="309" fg:w="2"/><text x="25.1092%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="24.8592%" y="677" width="0.1609%" height="15" fill="rgb(207,7,29)" fg:x="309" fg:w="2"/><text x="25.1092%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="24.9397%" y="661" width="0.0805%" height="15" fill="rgb(238,112,43)" fg:x="310" fg:w="1"/><text x="25.1897%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (3 samples, 0.24%)</title><rect x="24.8592%" y="741" width="0.2414%" height="15" fill="rgb(230,110,32)" fg:x="309" fg:w="3"/><text x="25.1092%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.0201%" y="725" width="0.0805%" height="15" fill="rgb(218,197,32)" fg:x="311" fg:w="1"/><text x="25.2701%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="25.0201%" y="709" width="0.0805%" height="15" fill="rgb(252,61,9)" fg:x="311" fg:w="1"/><text x="25.2701%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.0201%" y="693" width="0.0805%" height="15" fill="rgb(244,140,14)" fg:x="311" fg:w="1"/><text x="25.2701%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.0201%" y="677" width="0.0805%" height="15" fill="rgb(216,14,47)" fg:x="311" fg:w="1"/><text x="25.2701%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (11 samples, 0.88%)</title><rect x="24.2961%" y="757" width="0.8850%" height="15" fill="rgb(224,130,52)" fg:x="302" fg:w="11"/><text x="24.5461%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="25.1006%" y="741" width="0.0805%" height="15" fill="rgb(210,229,51)" fg:x="312" fg:w="1"/><text x="25.3506%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="25.1006%" y="725" width="0.0805%" height="15" fill="rgb(242,13,9)" fg:x="312" fg:w="1"/><text x="25.3506%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="25.1006%" y="709" width="0.0805%" height="15" fill="rgb(252,71,50)" fg:x="312" fg:w="1"/><text x="25.3506%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="25.1006%" y="693" width="0.0805%" height="15" fill="rgb(218,225,6)" fg:x="312" fg:w="1"/><text x="25.3506%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.1006%" y="677" width="0.0805%" height="15" fill="rgb(219,27,35)" fg:x="312" fg:w="1"/><text x="25.3506%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1006%" y="661" width="0.0805%" height="15" fill="rgb(226,30,1)" fg:x="312" fg:w="1"/><text x="25.3506%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.1006%" y="645" width="0.0805%" height="15" fill="rgb(227,164,34)" fg:x="312" fg:w="1"/><text x="25.3506%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1006%" y="629" width="0.0805%" height="15" fill="rgb(206,103,4)" fg:x="312" fg:w="1"/><text x="25.3506%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="25.1006%" y="613" width="0.0805%" height="15" fill="rgb(214,166,19)" fg:x="312" fg:w="1"/><text x="25.3506%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="25.1006%" y="597" width="0.0805%" height="15" fill="rgb(240,56,20)" fg:x="312" fg:w="1"/><text x="25.3506%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="25.1006%" y="581" width="0.0805%" height="15" fill="rgb(224,25,3)" fg:x="312" fg:w="1"/><text x="25.3506%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="25.1006%" y="565" width="0.0805%" height="15" fill="rgb(216,206,54)" fg:x="312" fg:w="1"/><text x="25.3506%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1006%" y="549" width="0.0805%" height="15" fill="rgb(225,142,10)" fg:x="312" fg:w="1"/><text x="25.3506%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="25.1006%" y="533" width="0.0805%" height="15" fill="rgb(246,9,18)" fg:x="312" fg:w="1"/><text x="25.3506%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="25.1006%" y="517" width="0.0805%" height="15" fill="rgb(247,140,18)" fg:x="312" fg:w="1"/><text x="25.3506%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="25.1006%" y="501" width="0.0805%" height="15" fill="rgb(239,184,22)" fg:x="312" fg:w="1"/><text x="25.3506%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="25.1006%" y="485" width="0.0805%" height="15" fill="rgb(227,94,44)" fg:x="312" fg:w="1"/><text x="25.3506%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="25.1006%" y="469" width="0.0805%" height="15" fill="rgb(219,43,3)" fg:x="312" fg:w="1"/><text x="25.3506%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.1006%" y="453" width="0.0805%" height="15" fill="rgb(210,76,31)" fg:x="312" fg:w="1"/><text x="25.3506%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.1810%" y="741" width="0.0805%" height="15" fill="rgb(225,85,12)" fg:x="313" fg:w="1"/><text x="25.4310%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3419%" y="613" width="0.0805%" height="15" fill="rgb(214,191,28)" fg:x="315" fg:w="1"/><text x="25.5919%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.3419%" y="597" width="0.0805%" height="15" fill="rgb(214,43,14)" fg:x="315" fg:w="1"/><text x="25.5919%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3419%" y="581" width="0.0805%" height="15" fill="rgb(253,117,5)" fg:x="315" fg:w="1"/><text x="25.5919%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3419%" y="661" width="0.1609%" height="15" fill="rgb(208,124,26)" fg:x="315" fg:w="2"/><text x="25.5919%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3419%" y="645" width="0.1609%" height="15" fill="rgb(228,208,39)" fg:x="315" fg:w="2"/><text x="25.5919%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="25.3419%" y="629" width="0.1609%" height="15" fill="rgb(206,180,39)" fg:x="315" fg:w="2"/><text x="25.5919%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4224%" y="613" width="0.0805%" height="15" fill="rgb(205,111,37)" fg:x="316" fg:w="1"/><text x="25.6724%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="25.3419%" y="709" width="0.2414%" height="15" fill="rgb(208,121,24)" fg:x="315" fg:w="3"/><text x="25.5919%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="25.3419%" y="693" width="0.2414%" height="15" fill="rgb(218,215,32)" fg:x="315" fg:w="3"/><text x="25.5919%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="25.3419%" y="677" width="0.2414%" height="15" fill="rgb(244,168,53)" fg:x="315" fg:w="3"/><text x="25.5919%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5028%" y="661" width="0.0805%" height="15" fill="rgb(214,9,36)" fg:x="317" fg:w="1"/><text x="25.7528%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="645" width="0.0805%" height="15" fill="rgb(231,4,34)" fg:x="317" fg:w="1"/><text x="25.7528%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5028%" y="629" width="0.0805%" height="15" fill="rgb(210,83,51)" fg:x="317" fg:w="1"/><text x="25.7528%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="613" width="0.0805%" height="15" fill="rgb(224,112,1)" fg:x="317" fg:w="1"/><text x="25.7528%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.5028%" y="597" width="0.0805%" height="15" fill="rgb(216,33,41)" fg:x="317" fg:w="1"/><text x="25.7528%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="581" width="0.0805%" height="15" fill="rgb(215,179,42)" fg:x="317" fg:w="1"/><text x="25.7528%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.5028%" y="565" width="0.0805%" height="15" fill="rgb(205,81,48)" fg:x="317" fg:w="1"/><text x="25.7528%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.5028%" y="549" width="0.0805%" height="15" fill="rgb(246,17,30)" fg:x="317" fg:w="1"/><text x="25.7528%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.5028%" y="533" width="0.0805%" height="15" fill="rgb(226,19,16)" fg:x="317" fg:w="1"/><text x="25.7528%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6637%" y="661" width="0.0805%" height="15" fill="rgb(207,3,14)" fg:x="319" fg:w="1"/><text x="25.9137%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6637%" y="645" width="0.0805%" height="15" fill="rgb(226,77,12)" fg:x="319" fg:w="1"/><text x="25.9137%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6637%" y="629" width="0.0805%" height="15" fill="rgb(226,76,25)" fg:x="319" fg:w="1"/><text x="25.9137%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="25.6637%" y="613" width="0.0805%" height="15" fill="rgb(217,216,25)" fg:x="319" fg:w="1"/><text x="25.9137%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.7442%" y="661" width="0.0805%" height="15" fill="rgb(247,127,42)" fg:x="320" fg:w="1"/><text x="25.9942%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.7442%" y="645" width="0.0805%" height="15" fill="rgb(226,10,34)" fg:x="320" fg:w="1"/><text x="25.9942%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.7442%" y="629" width="0.0805%" height="15" fill="rgb(249,78,0)" fg:x="320" fg:w="1"/><text x="25.9942%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="25.7442%" y="613" width="0.0805%" height="15" fill="rgb(226,218,38)" fg:x="320" fg:w="1"/><text x="25.9942%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.7442%" y="597" width="0.0805%" height="15" fill="rgb(240,92,1)" fg:x="320" fg:w="1"/><text x="25.9942%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="25.2615%" y="741" width="0.7241%" height="15" fill="rgb(237,224,33)" fg:x="314" fg:w="9"/><text x="25.5115%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (8 samples, 0.64%)</title><rect x="25.3419%" y="725" width="0.6436%" height="15" fill="rgb(211,46,1)" fg:x="315" fg:w="8"/><text x="25.5919%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="25.5833%" y="709" width="0.4023%" height="15" fill="rgb(239,190,4)" fg:x="318" fg:w="5"/><text x="25.8333%" y="719.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="25.5833%" y="693" width="0.4023%" height="15" fill="rgb(221,50,22)" fg:x="318" fg:w="5"/><text x="25.8333%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="25.5833%" y="677" width="0.4023%" height="15" fill="rgb(207,176,8)" fg:x="318" fg:w="5"/><text x="25.8333%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8246%" y="661" width="0.1609%" height="15" fill="rgb(244,114,50)" fg:x="321" fg:w="2"/><text x="26.0746%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8246%" y="645" width="0.1609%" height="15" fill="rgb(226,206,19)" fg:x="321" fg:w="2"/><text x="26.0746%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8246%" y="629" width="0.1609%" height="15" fill="rgb(208,199,16)" fg:x="321" fg:w="2"/><text x="26.0746%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8246%" y="613" width="0.1609%" height="15" fill="rgb(208,38,14)" fg:x="321" fg:w="2"/><text x="26.0746%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="25.8246%" y="597" width="0.1609%" height="15" fill="rgb(221,211,49)" fg:x="321" fg:w="2"/><text x="26.0746%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8246%" y="581" width="0.1609%" height="15" fill="rgb(227,214,34)" fg:x="321" fg:w="2"/><text x="26.0746%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="25.8246%" y="565" width="0.1609%" height="15" fill="rgb(234,5,54)" fg:x="321" fg:w="2"/><text x="26.0746%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="25.8246%" y="549" width="0.1609%" height="15" fill="rgb(236,215,22)" fg:x="321" fg:w="2"/><text x="26.0746%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="25.9051%" y="533" width="0.0805%" height="15" fill="rgb(244,0,11)" fg:x="322" fg:w="1"/><text x="26.1551%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9051%" y="517" width="0.0805%" height="15" fill="rgb(212,140,16)" fg:x="322" fg:w="1"/><text x="26.1551%" y="527.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="25.9855%" y="741" width="0.0805%" height="15" fill="rgb(238,101,37)" fg:x="323" fg:w="1"/><text x="26.2355%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9855%" y="725" width="0.0805%" height="15" fill="rgb(247,46,3)" fg:x="323" fg:w="1"/><text x="26.2355%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9855%" y="709" width="0.0805%" height="15" fill="rgb(208,106,19)" fg:x="323" fg:w="1"/><text x="26.2355%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.9855%" y="693" width="0.0805%" height="15" fill="rgb(240,227,15)" fg:x="323" fg:w="1"/><text x="26.2355%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="25.9855%" y="677" width="0.0805%" height="15" fill="rgb(226,173,6)" fg:x="323" fg:w="1"/><text x="26.2355%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="25.9855%" y="661" width="0.0805%" height="15" fill="rgb(213,191,1)" fg:x="323" fg:w="1"/><text x="26.2355%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="25.9855%" y="645" width="0.0805%" height="15" fill="rgb(246,51,36)" fg:x="323" fg:w="1"/><text x="26.2355%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="26.0660%" y="693" width="0.0805%" height="15" fill="rgb(238,40,32)" fg:x="324" fg:w="1"/><text x="26.3160%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="26.0660%" y="677" width="0.0805%" height="15" fill="rgb(208,126,27)" fg:x="324" fg:w="1"/><text x="26.3160%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.0660%" y="661" width="0.0805%" height="15" fill="rgb(227,117,38)" fg:x="324" fg:w="1"/><text x="26.3160%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.0660%" y="645" width="0.0805%" height="15" fill="rgb(232,16,1)" fg:x="324" fg:w="1"/><text x="26.3160%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.0660%" y="629" width="0.0805%" height="15" fill="rgb(212,111,31)" fg:x="324" fg:w="1"/><text x="26.3160%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="26.0660%" y="613" width="0.0805%" height="15" fill="rgb(253,227,2)" fg:x="324" fg:w="1"/><text x="26.3160%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.0660%" y="597" width="0.0805%" height="15" fill="rgb(216,122,17)" fg:x="324" fg:w="1"/><text x="26.3160%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="26.0660%" y="581" width="0.0805%" height="15" fill="rgb(227,37,2)" fg:x="324" fg:w="1"/><text x="26.3160%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="26.0660%" y="565" width="0.0805%" height="15" fill="rgb(244,113,40)" fg:x="324" fg:w="1"/><text x="26.3160%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.0660%" y="549" width="0.0805%" height="15" fill="rgb(217,193,34)" fg:x="324" fg:w="1"/><text x="26.3160%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.0660%" y="533" width="0.0805%" height="15" fill="rgb(212,223,15)" fg:x="324" fg:w="1"/><text x="26.3160%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1464%" y="645" width="0.0805%" height="15" fill="rgb(238,143,18)" fg:x="325" fg:w="1"/><text x="26.3964%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1464%" y="629" width="0.0805%" height="15" fill="rgb(231,18,49)" fg:x="325" fg:w="1"/><text x="26.3964%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1464%" y="613" width="0.0805%" height="15" fill="rgb(249,122,4)" fg:x="325" fg:w="1"/><text x="26.3964%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="26.1464%" y="597" width="0.0805%" height="15" fill="rgb(245,138,54)" fg:x="325" fg:w="1"/><text x="26.3964%" y="607.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="26.0660%" y="725" width="0.2414%" height="15" fill="rgb(218,130,18)" fg:x="324" fg:w="3"/><text x="26.3160%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="26.0660%" y="709" width="0.2414%" height="15" fill="rgb(235,94,13)" fg:x="324" fg:w="3"/><text x="26.3160%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="26.1464%" y="693" width="0.1609%" height="15" fill="rgb(247,143,5)" fg:x="325" fg:w="2"/><text x="26.3964%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="26.1464%" y="677" width="0.1609%" height="15" fill="rgb(212,59,54)" fg:x="325" fg:w="2"/><text x="26.3964%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="26.1464%" y="661" width="0.1609%" height="15" fill="rgb(206,121,24)" fg:x="325" fg:w="2"/><text x="26.3964%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.2269%" y="645" width="0.0805%" height="15" fill="rgb(235,38,8)" fg:x="326" fg:w="1"/><text x="26.4769%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.2269%" y="629" width="0.0805%" height="15" fill="rgb(227,102,26)" fg:x="326" fg:w="1"/><text x="26.4769%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.2269%" y="613" width="0.0805%" height="15" fill="rgb(240,183,46)" fg:x="326" fg:w="1"/><text x="26.4769%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (27 samples, 2.17%)</title><rect x="24.2156%" y="773" width="2.1722%" height="15" fill="rgb(208,177,23)" fg:x="301" fg:w="27"/><text x="24.4656%" y="783.50">p..</text></g><g><title>plugins_core::tools::set_container (15 samples, 1.21%)</title><rect x="25.1810%" y="757" width="1.2068%" height="15" fill="rgb(216,152,5)" fg:x="313" fg:w="15"/><text x="25.4310%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="26.0660%" y="741" width="0.3218%" height="15" fill="rgb(238,199,2)" fg:x="324" fg:w="4"/><text x="26.3160%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="26.3073%" y="725" width="0.0805%" height="15" fill="rgb(235,142,28)" fg:x="327" fg:w="1"/><text x="26.5573%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="26.3073%" y="709" width="0.0805%" height="15" fill="rgb(225,97,25)" fg:x="327" fg:w="1"/><text x="26.5573%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="26.3073%" y="693" width="0.0805%" height="15" fill="rgb(208,75,46)" fg:x="327" fg:w="1"/><text x="26.5573%" y="703.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="26.3073%" y="677" width="0.0805%" height="15" fill="rgb(240,136,15)" fg:x="327" fg:w="1"/><text x="26.5573%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="26.3073%" y="661" width="0.0805%" height="15" fill="rgb(235,36,27)" fg:x="327" fg:w="1"/><text x="26.5573%" y="671.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="26.3073%" y="645" width="0.0805%" height="15" fill="rgb(231,132,23)" fg:x="327" fg:w="1"/><text x="26.5573%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="26.3073%" y="629" width="0.0805%" height="15" fill="rgb(205,208,20)" fg:x="327" fg:w="1"/><text x="26.5573%" y="639.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="26.3073%" y="613" width="0.0805%" height="15" fill="rgb(215,26,40)" fg:x="327" fg:w="1"/><text x="26.5573%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="26.3073%" y="597" width="0.0805%" height="15" fill="rgb(238,183,34)" fg:x="327" fg:w="1"/><text x="26.5573%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="26.3073%" y="581" width="0.0805%" height="15" fill="rgb(207,96,10)" fg:x="327" fg:w="1"/><text x="26.5573%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="26.3073%" y="565" width="0.0805%" height="15" fill="rgb(218,88,6)" fg:x="327" fg:w="1"/><text x="26.5573%" y="575.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="26.3073%" y="549" width="0.0805%" height="15" fill="rgb(217,22,49)" fg:x="327" fg:w="1"/><text x="26.5573%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.3878%" y="693" width="0.2414%" height="15" fill="rgb(240,195,14)" fg:x="328" fg:w="3"/><text x="26.6378%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.3878%" y="677" width="0.2414%" height="15" fill="rgb(229,48,27)" fg:x="328" fg:w="3"/><text x="26.6378%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.3878%" y="661" width="0.2414%" height="15" fill="rgb(220,194,45)" fg:x="328" fg:w="3"/><text x="26.6378%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="26.3878%" y="645" width="0.2414%" height="15" fill="rgb(252,60,20)" fg:x="328" fg:w="3"/><text x="26.6378%" y="655.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="26.3878%" y="629" width="0.2414%" height="15" fill="rgb(244,169,33)" fg:x="328" fg:w="3"/><text x="26.6378%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="26.3878%" y="741" width="0.3218%" height="15" fill="rgb(234,141,34)" fg:x="328" fg:w="4"/><text x="26.6378%" y="751.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="26.3878%" y="725" width="0.3218%" height="15" fill="rgb(241,141,9)" fg:x="328" fg:w="4"/><text x="26.6378%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="26.3878%" y="709" width="0.3218%" height="15" fill="rgb(246,27,36)" fg:x="328" fg:w="4"/><text x="26.6378%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.6291%" y="693" width="0.0805%" height="15" fill="rgb(216,188,42)" fg:x="331" fg:w="1"/><text x="26.8791%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="26.6291%" y="677" width="0.0805%" height="15" fill="rgb(234,205,22)" fg:x="331" fg:w="1"/><text x="26.8791%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="26.6291%" y="661" width="0.0805%" height="15" fill="rgb(210,202,32)" fg:x="331" fg:w="1"/><text x="26.8791%" y="671.50"></text></g><g><title>plugins_core::build::Build::into_entry (5 samples, 0.40%)</title><rect x="26.3878%" y="773" width="0.4023%" height="15" fill="rgb(217,0,48)" fg:x="328" fg:w="5"/><text x="26.6378%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="26.3878%" y="757" width="0.4023%" height="15" fill="rgb(207,115,37)" fg:x="328" fg:w="5"/><text x="26.6378%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="26.7096%" y="741" width="0.0805%" height="15" fill="rgb(237,221,44)" fg:x="332" fg:w="1"/><text x="26.9596%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="26.7900%" y="709" width="0.0805%" height="15" fill="rgb(249,78,2)" fg:x="333" fg:w="1"/><text x="27.0400%" y="719.50"></text></g><g><title>plugins_core::build::Build::named (3 samples, 0.24%)</title><rect x="26.7900%" y="773" width="0.2414%" height="15" fill="rgb(211,169,23)" fg:x="333" fg:w="3"/><text x="27.0400%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (3 samples, 0.24%)</title><rect x="26.7900%" y="757" width="0.2414%" height="15" fill="rgb(207,116,29)" fg:x="333" fg:w="3"/><text x="27.0400%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="26.7900%" y="741" width="0.2414%" height="15" fill="rgb(240,84,33)" fg:x="333" fg:w="3"/><text x="27.0400%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="26.7900%" y="725" width="0.2414%" height="15" fill="rgb(229,224,31)" fg:x="333" fg:w="3"/><text x="27.0400%" y="735.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8705%" y="709" width="0.1609%" height="15" fill="rgb(227,90,31)" fg:x="334" fg:w="2"/><text x="27.1205%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="26.8705%" y="693" width="0.1609%" height="15" fill="rgb(249,22,41)" fg:x="334" fg:w="2"/><text x="27.1205%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="26.8705%" y="677" width="0.1609%" height="15" fill="rgb(239,65,11)" fg:x="334" fg:w="2"/><text x="27.1205%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9509%" y="661" width="0.0805%" height="15" fill="rgb(205,5,23)" fg:x="335" fg:w="1"/><text x="27.2009%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.9509%" y="645" width="0.0805%" height="15" fill="rgb(254,78,52)" fg:x="335" fg:w="1"/><text x="27.2009%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="26.9509%" y="629" width="0.0805%" height="15" fill="rgb(214,156,33)" fg:x="335" fg:w="1"/><text x="27.2009%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.9509%" y="613" width="0.0805%" height="15" fill="rgb(208,20,30)" fg:x="335" fg:w="1"/><text x="27.2009%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9509%" y="597" width="0.0805%" height="15" fill="rgb(223,133,18)" fg:x="335" fg:w="1"/><text x="27.2009%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.9509%" y="581" width="0.0805%" height="15" fill="rgb(222,91,41)" fg:x="335" fg:w="1"/><text x="27.2009%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.9509%" y="565" width="0.0805%" height="15" fill="rgb(247,137,48)" fg:x="335" fg:w="1"/><text x="27.2009%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="27.0314%" y="725" width="0.0805%" height="15" fill="rgb(239,156,11)" fg:x="336" fg:w="1"/><text x="27.2814%" y="735.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="27.0314%" y="709" width="0.0805%" height="15" fill="rgb(244,56,26)" fg:x="336" fg:w="1"/><text x="27.2814%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="27.0314%" y="741" width="0.1609%" height="15" fill="rgb(205,131,49)" fg:x="336" fg:w="2"/><text x="27.2814%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="27.1118%" y="725" width="0.0805%" height="15" fill="rgb(224,0,2)" fg:x="337" fg:w="1"/><text x="27.3618%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="27.1118%" y="709" width="0.0805%" height="15" fill="rgb(247,59,36)" fg:x="337" fg:w="1"/><text x="27.3618%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="693" width="0.0805%" height="15" fill="rgb(215,4,47)" fg:x="337" fg:w="1"/><text x="27.3618%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.1118%" y="677" width="0.0805%" height="15" fill="rgb(242,72,42)" fg:x="337" fg:w="1"/><text x="27.3618%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="661" width="0.0805%" height="15" fill="rgb(232,145,44)" fg:x="337" fg:w="1"/><text x="27.3618%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="645" width="0.0805%" height="15" fill="rgb(205,108,43)" fg:x="337" fg:w="1"/><text x="27.3618%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="629" width="0.0805%" height="15" fill="rgb(215,190,17)" fg:x="337" fg:w="1"/><text x="27.3618%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.1118%" y="613" width="0.0805%" height="15" fill="rgb(223,90,34)" fg:x="337" fg:w="1"/><text x="27.3618%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="597" width="0.0805%" height="15" fill="rgb(216,25,0)" fg:x="337" fg:w="1"/><text x="27.3618%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="581" width="0.0805%" height="15" fill="rgb(223,51,28)" fg:x="337" fg:w="1"/><text x="27.3618%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="27.1118%" y="565" width="0.0805%" height="15" fill="rgb(227,131,7)" fg:x="337" fg:w="1"/><text x="27.3618%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="27.1118%" y="549" width="0.0805%" height="15" fill="rgb(216,72,36)" fg:x="337" fg:w="1"/><text x="27.3618%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="27.1118%" y="533" width="0.0805%" height="15" fill="rgb(243,158,40)" fg:x="337" fg:w="1"/><text x="27.3618%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="27.1923%" y="597" width="0.0805%" height="15" fill="rgb(218,60,54)" fg:x="338" fg:w="1"/><text x="27.4423%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="27.1923%" y="741" width="0.1609%" height="15" fill="rgb(230,15,46)" fg:x="338" fg:w="2"/><text x="27.4423%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="27.1923%" y="725" width="0.1609%" height="15" fill="rgb(250,22,26)" fg:x="338" fg:w="2"/><text x="27.4423%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.1923%" y="709" width="0.1609%" height="15" fill="rgb(239,194,40)" fg:x="338" fg:w="2"/><text x="27.4423%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.1923%" y="693" width="0.1609%" height="15" fill="rgb(219,62,9)" fg:x="338" fg:w="2"/><text x="27.4423%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.1923%" y="677" width="0.1609%" height="15" fill="rgb(228,45,21)" fg:x="338" fg:w="2"/><text x="27.4423%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="27.1923%" y="661" width="0.1609%" height="15" fill="rgb(242,56,44)" fg:x="338" fg:w="2"/><text x="27.4423%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.1923%" y="645" width="0.1609%" height="15" fill="rgb(239,170,14)" fg:x="338" fg:w="2"/><text x="27.4423%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="27.1923%" y="629" width="0.1609%" height="15" fill="rgb(236,150,13)" fg:x="338" fg:w="2"/><text x="27.4423%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="27.1923%" y="613" width="0.1609%" height="15" fill="rgb(228,15,30)" fg:x="338" fg:w="2"/><text x="27.4423%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.2727%" y="597" width="0.0805%" height="15" fill="rgb(217,43,28)" fg:x="339" fg:w="1"/><text x="27.5227%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.2727%" y="581" width="0.0805%" height="15" fill="rgb(246,223,1)" fg:x="339" fg:w="1"/><text x="27.5227%" y="591.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="27.2727%" y="565" width="0.0805%" height="15" fill="rgb(247,103,7)" fg:x="339" fg:w="1"/><text x="27.5227%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3532%" y="741" width="0.0805%" height="15" fill="rgb(205,105,39)" fg:x="340" fg:w="1"/><text x="27.6032%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="27.4336%" y="741" width="0.0805%" height="15" fill="rgb(216,134,18)" fg:x="341" fg:w="1"/><text x="27.6836%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.4336%" y="725" width="0.0805%" height="15" fill="rgb(226,139,50)" fg:x="341" fg:w="1"/><text x="27.6836%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.5141%" y="693" width="0.0805%" height="15" fill="rgb(251,152,38)" fg:x="342" fg:w="1"/><text x="27.7641%" y="703.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="27.5141%" y="741" width="0.1609%" height="15" fill="rgb(222,63,15)" fg:x="342" fg:w="2"/><text x="27.7641%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="27.5141%" y="725" width="0.1609%" height="15" fill="rgb(212,198,28)" fg:x="342" fg:w="2"/><text x="27.7641%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="27.5141%" y="709" width="0.1609%" height="15" fill="rgb(216,93,38)" fg:x="342" fg:w="2"/><text x="27.7641%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5945%" y="693" width="0.0805%" height="15" fill="rgb(247,202,44)" fg:x="343" fg:w="1"/><text x="27.8445%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5945%" y="677" width="0.0805%" height="15" fill="rgb(237,204,46)" fg:x="343" fg:w="1"/><text x="27.8445%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.5945%" y="661" width="0.0805%" height="15" fill="rgb(224,98,48)" fg:x="343" fg:w="1"/><text x="27.8445%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.5945%" y="645" width="0.0805%" height="15" fill="rgb(247,105,21)" fg:x="343" fg:w="1"/><text x="27.8445%" y="655.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="27.6750%" y="693" width="0.2414%" height="15" fill="rgb(212,137,52)" fg:x="344" fg:w="3"/><text x="27.9250%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="27.6750%" y="677" width="0.2414%" height="15" fill="rgb(223,76,33)" fg:x="344" fg:w="3"/><text x="27.9250%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6750%" y="661" width="0.2414%" height="15" fill="rgb(209,156,27)" fg:x="344" fg:w="3"/><text x="27.9250%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6750%" y="645" width="0.2414%" height="15" fill="rgb(249,81,54)" fg:x="344" fg:w="3"/><text x="27.9250%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="27.6750%" y="629" width="0.2414%" height="15" fill="rgb(241,46,29)" fg:x="344" fg:w="3"/><text x="27.9250%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6750%" y="613" width="0.2414%" height="15" fill="rgb(213,193,39)" fg:x="344" fg:w="3"/><text x="27.9250%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="27.6750%" y="597" width="0.2414%" height="15" fill="rgb(214,85,16)" fg:x="344" fg:w="3"/><text x="27.9250%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="27.6750%" y="581" width="0.2414%" height="15" fill="rgb(216,184,17)" fg:x="344" fg:w="3"/><text x="27.9250%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8359%" y="565" width="0.0805%" height="15" fill="rgb(254,219,29)" fg:x="346" fg:w="1"/><text x="28.0859%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8359%" y="549" width="0.0805%" height="15" fill="rgb(209,148,34)" fg:x="346" fg:w="1"/><text x="28.0859%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="27.8359%" y="533" width="0.0805%" height="15" fill="rgb(253,215,11)" fg:x="346" fg:w="1"/><text x="28.0859%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="27.8359%" y="517" width="0.0805%" height="15" fill="rgb(232,126,20)" fg:x="346" fg:w="1"/><text x="28.0859%" y="527.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="27.8359%" y="501" width="0.0805%" height="15" fill="rgb(248,118,51)" fg:x="346" fg:w="1"/><text x="28.0859%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9163%" y="581" width="0.0805%" height="15" fill="rgb(226,121,21)" fg:x="347" fg:w="1"/><text x="28.1663%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (13 samples, 1.05%)</title><rect x="27.0314%" y="757" width="1.0459%" height="15" fill="rgb(216,128,16)" fg:x="336" fg:w="13"/><text x="27.2814%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="27.6750%" y="741" width="0.4023%" height="15" fill="rgb(205,17,9)" fg:x="344" fg:w="5"/><text x="27.9250%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="27.6750%" y="725" width="0.4023%" height="15" fill="rgb(206,197,21)" fg:x="344" fg:w="5"/><text x="27.9250%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (5 samples, 0.40%)</title><rect x="27.6750%" y="709" width="0.4023%" height="15" fill="rgb(212,202,9)" fg:x="344" fg:w="5"/><text x="27.9250%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="27.9163%" y="693" width="0.1609%" height="15" fill="rgb(241,131,50)" fg:x="347" fg:w="2"/><text x="28.1663%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="27.9163%" y="677" width="0.1609%" height="15" fill="rgb(228,115,51)" fg:x="347" fg:w="2"/><text x="28.1663%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="27.9163%" y="661" width="0.1609%" height="15" fill="rgb(237,209,8)" fg:x="347" fg:w="2"/><text x="28.1663%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.9163%" y="645" width="0.1609%" height="15" fill="rgb(241,121,28)" fg:x="347" fg:w="2"/><text x="28.1663%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="27.9163%" y="629" width="0.1609%" height="15" fill="rgb(238,194,51)" fg:x="347" fg:w="2"/><text x="28.1663%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="27.9163%" y="613" width="0.1609%" height="15" fill="rgb(208,41,39)" fg:x="347" fg:w="2"/><text x="28.1663%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="27.9163%" y="597" width="0.1609%" height="15" fill="rgb(223,95,44)" fg:x="347" fg:w="2"/><text x="28.1663%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (1 samples, 0.08%)</title><rect x="27.9968%" y="581" width="0.0805%" height="15" fill="rgb(253,98,40)" fg:x="348" fg:w="1"/><text x="28.2468%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.9968%" y="565" width="0.0805%" height="15" fill="rgb(210,5,12)" fg:x="348" fg:w="1"/><text x="28.2468%" y="575.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="27.9968%" y="549" width="0.0805%" height="15" fill="rgb(233,201,23)" fg:x="348" fg:w="1"/><text x="28.2468%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="27.9968%" y="533" width="0.0805%" height="15" fill="rgb(251,68,15)" fg:x="348" fg:w="1"/><text x="28.2468%" y="543.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="27.9968%" y="517" width="0.0805%" height="15" fill="rgb(243,10,46)" fg:x="348" fg:w="1"/><text x="28.2468%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="28.1577%" y="741" width="0.1609%" height="15" fill="rgb(253,130,44)" fg:x="350" fg:w="2"/><text x="28.4077%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="28.2381%" y="725" width="0.0805%" height="15" fill="rgb(244,5,26)" fg:x="351" fg:w="1"/><text x="28.4881%" y="735.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3990%" y="693" width="0.0805%" height="15" fill="rgb(220,126,20)" fg:x="353" fg:w="1"/><text x="28.6490%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.3990%" y="677" width="0.0805%" height="15" fill="rgb(212,188,29)" fg:x="353" fg:w="1"/><text x="28.6490%" y="687.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="28.3990%" y="725" width="0.1609%" height="15" fill="rgb(227,194,48)" fg:x="353" fg:w="2"/><text x="28.6490%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="28.3990%" y="709" width="0.1609%" height="15" fill="rgb(245,64,28)" fg:x="353" fg:w="2"/><text x="28.6490%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="28.4795%" y="693" width="0.0805%" height="15" fill="rgb(205,44,7)" fg:x="354" fg:w="1"/><text x="28.7295%" y="703.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="28.4795%" y="677" width="0.0805%" height="15" fill="rgb(213,193,11)" fg:x="354" fg:w="1"/><text x="28.7295%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_struct (1 samples, 0.08%)</title><rect x="28.4795%" y="661" width="0.0805%" height="15" fill="rgb(238,157,6)" fg:x="354" fg:w="1"/><text x="28.7295%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="28.3186%" y="741" width="0.3218%" height="15" fill="rgb(222,73,7)" fg:x="352" fg:w="4"/><text x="28.5686%" y="751.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupying&gt;::serialize (1 samples, 0.08%)</title><rect x="28.5599%" y="725" width="0.0805%" height="15" fill="rgb(224,78,15)" fg:x="355" fg:w="1"/><text x="28.8099%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.5599%" y="709" width="0.0805%" height="15" fill="rgb(218,149,46)" fg:x="355" fg:w="1"/><text x="28.8099%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="28.5599%" y="693" width="0.0805%" height="15" fill="rgb(218,175,44)" fg:x="355" fg:w="1"/><text x="28.8099%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.5599%" y="677" width="0.0805%" height="15" fill="rgb(215,183,45)" fg:x="355" fg:w="1"/><text x="28.8099%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.5599%" y="661" width="0.0805%" height="15" fill="rgb(226,116,37)" fg:x="355" fg:w="1"/><text x="28.8099%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.5599%" y="645" width="0.0805%" height="15" fill="rgb(252,224,12)" fg:x="355" fg:w="1"/><text x="28.8099%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="28.5599%" y="629" width="0.0805%" height="15" fill="rgb(232,212,21)" fg:x="355" fg:w="1"/><text x="28.8099%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7208%" y="629" width="0.0805%" height="15" fill="rgb(226,191,16)" fg:x="357" fg:w="1"/><text x="28.9708%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7208%" y="613" width="0.0805%" height="15" fill="rgb(231,156,11)" fg:x="357" fg:w="1"/><text x="28.9708%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.7208%" y="597" width="0.0805%" height="15" fill="rgb(225,134,49)" fg:x="357" fg:w="1"/><text x="28.9708%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7208%" y="581" width="0.0805%" height="15" fill="rgb(254,55,32)" fg:x="357" fg:w="1"/><text x="28.9708%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.7208%" y="565" width="0.0805%" height="15" fill="rgb(242,195,29)" fg:x="357" fg:w="1"/><text x="28.9708%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.7208%" y="549" width="0.0805%" height="15" fill="rgb(210,155,20)" fg:x="357" fg:w="1"/><text x="28.9708%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.7208%" y="533" width="0.0805%" height="15" fill="rgb(243,170,23)" fg:x="357" fg:w="1"/><text x="28.9708%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.7208%" y="517" width="0.0805%" height="15" fill="rgb(242,197,51)" fg:x="357" fg:w="1"/><text x="28.9708%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.7208%" y="501" width="0.0805%" height="15" fill="rgb(248,48,13)" fg:x="357" fg:w="1"/><text x="28.9708%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.7208%" y="485" width="0.0805%" height="15" fill="rgb(221,185,15)" fg:x="357" fg:w="1"/><text x="28.9708%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.7208%" y="469" width="0.0805%" height="15" fill="rgb(244,49,7)" fg:x="357" fg:w="1"/><text x="28.9708%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.7208%" y="453" width="0.0805%" height="15" fill="rgb(213,182,52)" fg:x="357" fg:w="1"/><text x="28.9708%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.7208%" y="437" width="0.0805%" height="15" fill="rgb(209,15,45)" fg:x="357" fg:w="1"/><text x="28.9708%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.7208%" y="421" width="0.0805%" height="15" fill="rgb(233,23,44)" fg:x="357" fg:w="1"/><text x="28.9708%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.7208%" y="405" width="0.0805%" height="15" fill="rgb(220,182,30)" fg:x="357" fg:w="1"/><text x="28.9708%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.7208%" y="645" width="0.1609%" height="15" fill="rgb(219,116,33)" fg:x="357" fg:w="2"/><text x="28.9708%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="28.8013%" y="629" width="0.0805%" height="15" fill="rgb(231,15,21)" fg:x="358" fg:w="1"/><text x="29.0513%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.8817%" y="549" width="0.0805%" height="15" fill="rgb(238,119,25)" fg:x="359" fg:w="1"/><text x="29.1317%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="28.8817%" y="533" width="0.0805%" height="15" fill="rgb(232,30,39)" fg:x="359" fg:w="1"/><text x="29.1317%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.9622%" y="549" width="0.0805%" height="15" fill="rgb(241,26,30)" fg:x="360" fg:w="1"/><text x="29.2122%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.9622%" y="533" width="0.0805%" height="15" fill="rgb(234,154,4)" fg:x="360" fg:w="1"/><text x="29.2122%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="28.7208%" y="693" width="0.4023%" height="15" fill="rgb(229,199,39)" fg:x="357" fg:w="5"/><text x="28.9708%" y="703.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="28.7208%" y="677" width="0.4023%" height="15" fill="rgb(236,213,10)" fg:x="357" fg:w="5"/><text x="28.9708%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="28.7208%" y="661" width="0.4023%" height="15" fill="rgb(247,28,19)" fg:x="357" fg:w="5"/><text x="28.9708%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.8817%" y="645" width="0.2414%" height="15" fill="rgb(239,199,24)" fg:x="359" fg:w="3"/><text x="29.1317%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.8817%" y="629" width="0.2414%" height="15" fill="rgb(246,122,13)" fg:x="359" fg:w="3"/><text x="29.1317%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="28.8817%" y="613" width="0.2414%" height="15" fill="rgb(210,203,29)" fg:x="359" fg:w="3"/><text x="29.1317%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.8817%" y="597" width="0.2414%" height="15" fill="rgb(218,4,50)" fg:x="359" fg:w="3"/><text x="29.1317%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.8817%" y="581" width="0.2414%" height="15" fill="rgb(236,142,48)" fg:x="359" fg:w="3"/><text x="29.1317%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.8817%" y="565" width="0.2414%" height="15" fill="rgb(245,173,2)" fg:x="359" fg:w="3"/><text x="29.1317%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.0426%" y="549" width="0.0805%" height="15" fill="rgb(244,196,18)" fg:x="361" fg:w="1"/><text x="29.2926%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.0426%" y="533" width="0.0805%" height="15" fill="rgb(221,27,33)" fg:x="361" fg:w="1"/><text x="29.2926%" y="543.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="29.0426%" y="517" width="0.0805%" height="15" fill="rgb(210,206,16)" fg:x="361" fg:w="1"/><text x="29.2926%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.1231%" y="645" width="0.0805%" height="15" fill="rgb(238,161,34)" fg:x="362" fg:w="1"/><text x="29.3731%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="29.1231%" y="629" width="0.0805%" height="15" fill="rgb(243,118,39)" fg:x="362" fg:w="1"/><text x="29.3731%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.1231%" y="613" width="0.0805%" height="15" fill="rgb(234,126,9)" fg:x="362" fg:w="1"/><text x="29.3731%" y="623.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (175 samples, 14.08%)</title><rect x="15.2051%" y="789" width="14.0788%" height="15" fill="rgb(234,167,42)" fg:x="189" fg:w="175"/><text x="15.4551%" y="799.50">plugins_core::build::..</text></g><g><title>plugins_core::build::Build::occupying (28 samples, 2.25%)</title><rect x="27.0314%" y="773" width="2.2526%" height="15" fill="rgb(238,54,48)" fg:x="336" fg:w="28"/><text x="27.2814%" y="783.50">p..</text></g><g><title>plugins_core::tools::set_occupying (15 samples, 1.21%)</title><rect x="28.0772%" y="757" width="1.2068%" height="15" fill="rgb(226,105,2)" fg:x="349" fg:w="15"/><text x="28.3272%" y="767.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (8 samples, 0.64%)</title><rect x="28.6404%" y="741" width="0.6436%" height="15" fill="rgb(223,95,23)" fg:x="356" fg:w="8"/><text x="28.8904%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="28.6404%" y="725" width="0.6436%" height="15" fill="rgb(249,212,19)" fg:x="356" fg:w="8"/><text x="28.8904%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="28.7208%" y="709" width="0.5632%" height="15" fill="rgb(234,158,54)" fg:x="357" fg:w="7"/><text x="28.9708%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.1231%" y="693" width="0.1609%" height="15" fill="rgb(247,114,32)" fg:x="362" fg:w="2"/><text x="29.3731%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.1231%" y="677" width="0.1609%" height="15" fill="rgb(250,68,44)" fg:x="362" fg:w="2"/><text x="29.3731%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.1231%" y="661" width="0.1609%" height="15" fill="rgb(242,3,15)" fg:x="362" fg:w="2"/><text x="29.3731%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.2035%" y="645" width="0.0805%" height="15" fill="rgb(223,110,32)" fg:x="363" fg:w="1"/><text x="29.4535%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.2035%" y="629" width="0.0805%" height="15" fill="rgb(216,26,54)" fg:x="363" fg:w="1"/><text x="29.4535%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.2035%" y="613" width="0.0805%" height="15" fill="rgb(209,145,42)" fg:x="363" fg:w="1"/><text x="29.4535%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.2035%" y="597" width="0.0805%" height="15" fill="rgb(240,111,53)" fg:x="363" fg:w="1"/><text x="29.4535%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.2035%" y="581" width="0.0805%" height="15" fill="rgb(209,101,4)" fg:x="363" fg:w="1"/><text x="29.4535%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.2035%" y="565" width="0.0805%" height="15" fill="rgb(231,74,29)" fg:x="363" fg:w="1"/><text x="29.4535%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.2035%" y="549" width="0.0805%" height="15" fill="rgb(223,12,12)" fg:x="363" fg:w="1"/><text x="29.4535%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="29.2840%" y="757" width="0.0805%" height="15" fill="rgb(207,162,2)" fg:x="364" fg:w="1"/><text x="29.5340%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="29.2840%" y="741" width="0.0805%" height="15" fill="rgb(230,152,0)" fg:x="364" fg:w="1"/><text x="29.5340%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.2840%" y="725" width="0.0805%" height="15" fill="rgb(254,156,19)" fg:x="364" fg:w="1"/><text x="29.5340%" y="735.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="29.2840%" y="709" width="0.0805%" height="15" fill="rgb(250,28,0)" fg:x="364" fg:w="1"/><text x="29.5340%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="29.2840%" y="693" width="0.0805%" height="15" fill="rgb(253,27,5)" fg:x="364" fg:w="1"/><text x="29.5340%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2840%" y="677" width="0.0805%" height="15" fill="rgb(244,154,7)" fg:x="364" fg:w="1"/><text x="29.5340%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.2840%" y="661" width="0.0805%" height="15" fill="rgb(242,108,21)" fg:x="364" fg:w="1"/><text x="29.5340%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.2840%" y="645" width="0.0805%" height="15" fill="rgb(254,200,38)" fg:x="364" fg:w="1"/><text x="29.5340%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.2840%" y="629" width="0.0805%" height="15" fill="rgb(250,145,41)" fg:x="364" fg:w="1"/><text x="29.5340%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.2840%" y="613" width="0.0805%" height="15" fill="rgb(235,136,31)" fg:x="364" fg:w="1"/><text x="29.5340%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.2840%" y="597" width="0.0805%" height="15" fill="rgb(215,13,18)" fg:x="364" fg:w="1"/><text x="29.5340%" y="607.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="29.2840%" y="581" width="0.0805%" height="15" fill="rgb(238,199,12)" fg:x="364" fg:w="1"/><text x="29.5340%" y="591.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.2840%" y="565" width="0.0805%" height="15" fill="rgb(242,179,49)" fg:x="364" fg:w="1"/><text x="29.5340%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::EntityBuilder as core::convert::TryInto&lt;kernel::model::entity::Entity&gt;&gt;::try_into (2 samples, 0.16%)</title><rect x="29.3644%" y="757" width="0.1609%" height="15" fill="rgb(214,10,44)" fg:x="365" fg:w="2"/><text x="29.6144%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.4449%" y="741" width="0.0805%" height="15" fill="rgb(229,181,11)" fg:x="366" fg:w="1"/><text x="29.6949%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="29.5253%" y="741" width="0.0805%" height="15" fill="rgb(244,155,10)" fg:x="367" fg:w="1"/><text x="29.7753%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.5253%" y="725" width="0.0805%" height="15" fill="rgb(254,13,48)" fg:x="367" fg:w="1"/><text x="29.7753%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.5253%" y="709" width="0.0805%" height="15" fill="rgb(210,164,6)" fg:x="367" fg:w="1"/><text x="29.7753%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5253%" y="693" width="0.0805%" height="15" fill="rgb(216,187,40)" fg:x="367" fg:w="1"/><text x="29.7753%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5253%" y="677" width="0.0805%" height="15" fill="rgb(208,143,21)" fg:x="367" fg:w="1"/><text x="29.7753%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.5253%" y="661" width="0.0805%" height="15" fill="rgb(211,73,41)" fg:x="367" fg:w="1"/><text x="29.7753%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.5253%" y="645" width="0.0805%" height="15" fill="rgb(244,69,21)" fg:x="367" fg:w="1"/><text x="29.7753%" y="655.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="29.5253%" y="629" width="0.0805%" height="15" fill="rgb(230,152,32)" fg:x="367" fg:w="1"/><text x="29.7753%" y="639.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (6 samples, 0.48%)</title><rect x="29.2840%" y="789" width="0.4827%" height="15" fill="rgb(208,110,18)" fg:x="364" fg:w="6"/><text x="29.5340%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (6 samples, 0.48%)</title><rect x="29.2840%" y="773" width="0.4827%" height="15" fill="rgb(214,201,49)" fg:x="364" fg:w="6"/><text x="29.5340%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="29.5253%" y="757" width="0.2414%" height="15" fill="rgb(253,153,27)" fg:x="367" fg:w="3"/><text x="29.7753%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="29.6058%" y="741" width="0.1609%" height="15" fill="rgb(238,61,11)" fg:x="368" fg:w="2"/><text x="29.8558%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.6058%" y="725" width="0.1609%" height="15" fill="rgb(227,84,2)" fg:x="368" fg:w="2"/><text x="29.8558%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.6058%" y="709" width="0.1609%" height="15" fill="rgb(233,52,8)" fg:x="368" fg:w="2"/><text x="29.8558%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.6862%" y="693" width="0.0805%" height="15" fill="rgb(209,136,13)" fg:x="369" fg:w="1"/><text x="29.9362%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="29.7667%" y="741" width="0.0805%" height="15" fill="rgb(229,86,25)" fg:x="370" fg:w="1"/><text x="30.0167%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.7667%" y="725" width="0.0805%" height="15" fill="rgb(235,47,16)" fg:x="370" fg:w="1"/><text x="30.0167%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.7667%" y="709" width="0.0805%" height="15" fill="rgb(231,186,4)" fg:x="370" fg:w="1"/><text x="30.0167%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="693" width="0.0805%" height="15" fill="rgb(209,213,23)" fg:x="370" fg:w="1"/><text x="30.0167%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.7667%" y="677" width="0.0805%" height="15" fill="rgb(212,142,47)" fg:x="370" fg:w="1"/><text x="30.0167%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="661" width="0.0805%" height="15" fill="rgb(251,86,24)" fg:x="370" fg:w="1"/><text x="30.0167%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="645" width="0.0805%" height="15" fill="rgb(206,217,17)" fg:x="370" fg:w="1"/><text x="30.0167%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="629" width="0.0805%" height="15" fill="rgb(248,92,38)" fg:x="370" fg:w="1"/><text x="30.0167%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.7667%" y="613" width="0.0805%" height="15" fill="rgb(214,25,29)" fg:x="370" fg:w="1"/><text x="30.0167%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="597" width="0.0805%" height="15" fill="rgb(245,117,13)" fg:x="370" fg:w="1"/><text x="30.0167%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.7667%" y="581" width="0.0805%" height="15" fill="rgb(205,169,9)" fg:x="370" fg:w="1"/><text x="30.0167%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="29.7667%" y="565" width="0.0805%" height="15" fill="rgb(223,134,38)" fg:x="370" fg:w="1"/><text x="30.0167%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="29.8471%" y="693" width="0.0805%" height="15" fill="rgb(249,129,49)" fg:x="371" fg:w="1"/><text x="30.0971%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="29.8471%" y="741" width="0.1609%" height="15" fill="rgb(229,157,45)" fg:x="371" fg:w="2"/><text x="30.0971%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="29.8471%" y="725" width="0.1609%" height="15" fill="rgb(232,159,11)" fg:x="371" fg:w="2"/><text x="30.0971%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="29.8471%" y="709" width="0.1609%" height="15" fill="rgb(230,134,26)" fg:x="371" fg:w="2"/><text x="30.0971%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9276%" y="693" width="0.0805%" height="15" fill="rgb(234,149,40)" fg:x="372" fg:w="1"/><text x="30.1776%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9276%" y="677" width="0.0805%" height="15" fill="rgb(221,122,15)" fg:x="372" fg:w="1"/><text x="30.1776%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.9276%" y="661" width="0.0805%" height="15" fill="rgb(228,127,0)" fg:x="372" fg:w="1"/><text x="30.1776%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9276%" y="645" width="0.0805%" height="15" fill="rgb(248,37,7)" fg:x="372" fg:w="1"/><text x="30.1776%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.9276%" y="629" width="0.0805%" height="15" fill="rgb(215,140,49)" fg:x="372" fg:w="1"/><text x="30.1776%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.9276%" y="613" width="0.0805%" height="15" fill="rgb(236,65,39)" fg:x="372" fg:w="1"/><text x="30.1776%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.9276%" y="597" width="0.0805%" height="15" fill="rgb(253,102,38)" fg:x="372" fg:w="1"/><text x="30.1776%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.0080%" y="709" width="0.0805%" height="15" fill="rgb(244,100,34)" fg:x="373" fg:w="1"/><text x="30.2580%" y="719.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="30.0080%" y="741" width="0.1609%" height="15" fill="rgb(210,179,47)" fg:x="373" fg:w="2"/><text x="30.2580%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.0080%" y="725" width="0.1609%" height="15" fill="rgb(231,41,37)" fg:x="373" fg:w="2"/><text x="30.2580%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0885%" y="709" width="0.0805%" height="15" fill="rgb(226,209,17)" fg:x="374" fg:w="1"/><text x="30.3385%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.0885%" y="693" width="0.0805%" height="15" fill="rgb(231,154,20)" fg:x="374" fg:w="1"/><text x="30.3385%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.0885%" y="677" width="0.0805%" height="15" fill="rgb(216,134,24)" fg:x="374" fg:w="1"/><text x="30.3385%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="30.0885%" y="661" width="0.0805%" height="15" fill="rgb(224,71,42)" fg:x="374" fg:w="1"/><text x="30.3385%" y="671.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.1689%" y="693" width="0.0805%" height="15" fill="rgb(250,65,23)" fg:x="375" fg:w="1"/><text x="30.4189%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.1689%" y="677" width="0.0805%" height="15" fill="rgb(209,160,35)" fg:x="375" fg:w="1"/><text x="30.4189%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1689%" y="661" width="0.0805%" height="15" fill="rgb(215,8,11)" fg:x="375" fg:w="1"/><text x="30.4189%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1689%" y="645" width="0.0805%" height="15" fill="rgb(227,27,12)" fg:x="375" fg:w="1"/><text x="30.4189%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1689%" y="629" width="0.0805%" height="15" fill="rgb(226,111,41)" fg:x="375" fg:w="1"/><text x="30.4189%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1689%" y="613" width="0.0805%" height="15" fill="rgb(212,195,15)" fg:x="375" fg:w="1"/><text x="30.4189%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.1689%" y="597" width="0.0805%" height="15" fill="rgb(216,191,17)" fg:x="375" fg:w="1"/><text x="30.4189%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1689%" y="581" width="0.0805%" height="15" fill="rgb(215,57,44)" fg:x="375" fg:w="1"/><text x="30.4189%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.1689%" y="565" width="0.0805%" height="15" fill="rgb(209,38,4)" fg:x="375" fg:w="1"/><text x="30.4189%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.1689%" y="549" width="0.0805%" height="15" fill="rgb(238,49,31)" fg:x="375" fg:w="1"/><text x="30.4189%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.1689%" y="533" width="0.0805%" height="15" fill="rgb(219,48,39)" fg:x="375" fg:w="1"/><text x="30.4189%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.1689%" y="517" width="0.0805%" height="15" fill="rgb(252,223,43)" fg:x="375" fg:w="1"/><text x="30.4189%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1689%" y="501" width="0.0805%" height="15" fill="rgb(247,205,46)" fg:x="375" fg:w="1"/><text x="30.4189%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.1689%" y="485" width="0.0805%" height="15" fill="rgb(231,16,40)" fg:x="375" fg:w="1"/><text x="30.4189%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.1689%" y="469" width="0.0805%" height="15" fill="rgb(231,115,5)" fg:x="375" fg:w="1"/><text x="30.4189%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.1689%" y="453" width="0.0805%" height="15" fill="rgb(206,127,43)" fg:x="375" fg:w="1"/><text x="30.4189%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.1689%" y="437" width="0.0805%" height="15" fill="rgb(218,101,9)" fg:x="375" fg:w="1"/><text x="30.4189%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.1689%" y="421" width="0.0805%" height="15" fill="rgb(235,138,50)" fg:x="375" fg:w="1"/><text x="30.4189%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.1689%" y="405" width="0.0805%" height="15" fill="rgb(214,197,52)" fg:x="375" fg:w="1"/><text x="30.4189%" y="415.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="30.1689%" y="725" width="0.1609%" height="15" fill="rgb(230,80,19)" fg:x="375" fg:w="2"/><text x="30.4189%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="30.1689%" y="709" width="0.1609%" height="15" fill="rgb(224,77,16)" fg:x="375" fg:w="2"/><text x="30.4189%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.2494%" y="693" width="0.0805%" height="15" fill="rgb(246,4,13)" fg:x="376" fg:w="1"/><text x="30.4994%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.2494%" y="677" width="0.0805%" height="15" fill="rgb(220,177,26)" fg:x="376" fg:w="1"/><text x="30.4994%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.2494%" y="661" width="0.0805%" height="15" fill="rgb(215,114,45)" fg:x="376" fg:w="1"/><text x="30.4994%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.2494%" y="645" width="0.0805%" height="15" fill="rgb(215,71,54)" fg:x="376" fg:w="1"/><text x="30.4994%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (8 samples, 0.64%)</title><rect x="29.7667%" y="757" width="0.6436%" height="15" fill="rgb(211,155,22)" fg:x="370" fg:w="8"/><text x="30.0167%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="30.1689%" y="741" width="0.2414%" height="15" fill="rgb(245,206,18)" fg:x="375" fg:w="3"/><text x="30.4189%" y="751.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="30.3298%" y="725" width="0.0805%" height="15" fill="rgb(248,216,48)" fg:x="377" fg:w="1"/><text x="30.5798%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="30.3298%" y="709" width="0.0805%" height="15" fill="rgb(244,84,45)" fg:x="377" fg:w="1"/><text x="30.5798%" y="719.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="30.3298%" y="693" width="0.0805%" height="15" fill="rgb(245,13,45)" fg:x="377" fg:w="1"/><text x="30.5798%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="30.3298%" y="677" width="0.0805%" height="15" fill="rgb(247,163,2)" fg:x="377" fg:w="1"/><text x="30.5798%" y="687.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="30.4103%" y="757" width="0.0805%" height="15" fill="rgb(211,175,10)" fg:x="378" fg:w="1"/><text x="30.6603%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="30.4103%" y="741" width="0.0805%" height="15" fill="rgb(215,186,31)" fg:x="378" fg:w="1"/><text x="30.6603%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="30.4103%" y="725" width="0.0805%" height="15" fill="rgb(207,42,11)" fg:x="378" fg:w="1"/><text x="30.6603%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.4103%" y="709" width="0.0805%" height="15" fill="rgb(224,197,20)" fg:x="378" fg:w="1"/><text x="30.6603%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.4103%" y="693" width="0.0805%" height="15" fill="rgb(244,119,36)" fg:x="378" fg:w="1"/><text x="30.6603%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.4103%" y="677" width="0.0805%" height="15" fill="rgb(250,60,27)" fg:x="378" fg:w="1"/><text x="30.6603%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4103%" y="661" width="0.0805%" height="15" fill="rgb(252,202,1)" fg:x="378" fg:w="1"/><text x="30.6603%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="30.4103%" y="645" width="0.0805%" height="15" fill="rgb(206,53,25)" fg:x="378" fg:w="1"/><text x="30.6603%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4103%" y="629" width="0.0805%" height="15" fill="rgb(210,88,4)" fg:x="378" fg:w="1"/><text x="30.6603%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.4103%" y="613" width="0.0805%" height="15" fill="rgb(211,144,28)" fg:x="378" fg:w="1"/><text x="30.6603%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.4103%" y="597" width="0.0805%" height="15" fill="rgb(247,81,32)" fg:x="378" fg:w="1"/><text x="30.6603%" y="607.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (10 samples, 0.80%)</title><rect x="29.7667%" y="789" width="0.8045%" height="15" fill="rgb(225,192,11)" fg:x="370" fg:w="10"/><text x="30.0167%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (10 samples, 0.80%)</title><rect x="29.7667%" y="773" width="0.8045%" height="15" fill="rgb(232,212,27)" fg:x="370" fg:w="10"/><text x="30.0167%" y="783.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="30.4907%" y="757" width="0.0805%" height="15" fill="rgb(239,3,29)" fg:x="379" fg:w="1"/><text x="30.7407%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="30.4907%" y="741" width="0.0805%" height="15" fill="rgb(252,225,29)" fg:x="379" fg:w="1"/><text x="30.7407%" y="751.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="30.4907%" y="725" width="0.0805%" height="15" fill="rgb(205,151,9)" fg:x="379" fg:w="1"/><text x="30.7407%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="30.4907%" y="709" width="0.0805%" height="15" fill="rgb(216,171,47)" fg:x="379" fg:w="1"/><text x="30.7407%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4907%" y="693" width="0.0805%" height="15" fill="rgb(206,181,1)" fg:x="379" fg:w="1"/><text x="30.7407%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4907%" y="677" width="0.0805%" height="15" fill="rgb(232,218,10)" fg:x="379" fg:w="1"/><text x="30.7407%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4907%" y="661" width="0.0805%" height="15" fill="rgb(244,222,51)" fg:x="379" fg:w="1"/><text x="30.7407%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.4907%" y="645" width="0.0805%" height="15" fill="rgb(252,215,16)" fg:x="379" fg:w="1"/><text x="30.7407%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.4907%" y="629" width="0.0805%" height="15" fill="rgb(212,130,13)" fg:x="379" fg:w="1"/><text x="30.7407%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.4907%" y="613" width="0.0805%" height="15" fill="rgb(227,103,37)" fg:x="379" fg:w="1"/><text x="30.7407%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.4907%" y="597" width="0.0805%" height="15" fill="rgb(249,48,15)" fg:x="379" fg:w="1"/><text x="30.7407%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4907%" y="581" width="0.0805%" height="15" fill="rgb(225,96,9)" fg:x="379" fg:w="1"/><text x="30.7407%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.4907%" y="565" width="0.0805%" height="15" fill="rgb(213,81,41)" fg:x="379" fg:w="1"/><text x="30.7407%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.4907%" y="549" width="0.0805%" height="15" fill="rgb(230,15,12)" fg:x="379" fg:w="1"/><text x="30.7407%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.4907%" y="533" width="0.0805%" height="15" fill="rgb(218,106,37)" fg:x="379" fg:w="1"/><text x="30.7407%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.4907%" y="517" width="0.0805%" height="15" fill="rgb(223,172,47)" fg:x="379" fg:w="1"/><text x="30.7407%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.4907%" y="501" width="0.0805%" height="15" fill="rgb(246,180,49)" fg:x="379" fg:w="1"/><text x="30.7407%" y="511.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="30.4907%" y="485" width="0.0805%" height="15" fill="rgb(231,63,37)" fg:x="379" fg:w="1"/><text x="30.7407%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="30.4907%" y="469" width="0.0805%" height="15" fill="rgb(235,70,40)" fg:x="379" fg:w="1"/><text x="30.7407%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="30.7321%" y="741" width="0.0805%" height="15" fill="rgb(250,54,26)" fg:x="382" fg:w="1"/><text x="30.9821%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="30.7321%" y="725" width="0.0805%" height="15" fill="rgb(214,190,1)" fg:x="382" fg:w="1"/><text x="30.9821%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="30.7321%" y="757" width="0.1609%" height="15" fill="rgb(212,40,35)" fg:x="382" fg:w="2"/><text x="30.9821%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="30.8126%" y="741" width="0.0805%" height="15" fill="rgb(239,183,47)" fg:x="383" fg:w="1"/><text x="31.0626%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="30.8126%" y="725" width="0.0805%" height="15" fill="rgb(211,171,49)" fg:x="383" fg:w="1"/><text x="31.0626%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="709" width="0.0805%" height="15" fill="rgb(249,186,27)" fg:x="383" fg:w="1"/><text x="31.0626%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.8126%" y="693" width="0.0805%" height="15" fill="rgb(223,23,48)" fg:x="383" fg:w="1"/><text x="31.0626%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="677" width="0.0805%" height="15" fill="rgb(209,203,21)" fg:x="383" fg:w="1"/><text x="31.0626%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="661" width="0.0805%" height="15" fill="rgb(229,33,27)" fg:x="383" fg:w="1"/><text x="31.0626%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="645" width="0.0805%" height="15" fill="rgb(207,8,53)" fg:x="383" fg:w="1"/><text x="31.0626%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="30.8126%" y="629" width="0.0805%" height="15" fill="rgb(221,42,0)" fg:x="383" fg:w="1"/><text x="31.0626%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="30.8126%" y="613" width="0.0805%" height="15" fill="rgb(223,115,3)" fg:x="383" fg:w="1"/><text x="31.0626%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="30.8930%" y="757" width="0.0805%" height="15" fill="rgb(239,35,26)" fg:x="384" fg:w="1"/><text x="31.1430%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.8930%" y="741" width="0.0805%" height="15" fill="rgb(233,22,9)" fg:x="384" fg:w="1"/><text x="31.1430%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.8930%" y="725" width="0.0805%" height="15" fill="rgb(236,221,48)" fg:x="384" fg:w="1"/><text x="31.1430%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.8930%" y="709" width="0.0805%" height="15" fill="rgb(235,52,30)" fg:x="384" fg:w="1"/><text x="31.1430%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8930%" y="693" width="0.0805%" height="15" fill="rgb(238,133,51)" fg:x="384" fg:w="1"/><text x="31.1430%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.8930%" y="677" width="0.0805%" height="15" fill="rgb(213,122,23)" fg:x="384" fg:w="1"/><text x="31.1430%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="30.8930%" y="661" width="0.0805%" height="15" fill="rgb(225,8,15)" fg:x="384" fg:w="1"/><text x="31.1430%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="30.8930%" y="645" width="0.0805%" height="15" fill="rgb(219,126,35)" fg:x="384" fg:w="1"/><text x="31.1430%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="30.8930%" y="629" width="0.0805%" height="15" fill="rgb(246,113,21)" fg:x="384" fg:w="1"/><text x="31.1430%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8930%" y="613" width="0.0805%" height="15" fill="rgb(241,193,32)" fg:x="384" fg:w="1"/><text x="31.1430%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="30.8930%" y="597" width="0.0805%" height="15" fill="rgb(218,99,18)" fg:x="384" fg:w="1"/><text x="31.1430%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="30.8930%" y="581" width="0.0805%" height="15" fill="rgb(225,114,4)" fg:x="384" fg:w="1"/><text x="31.1430%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="30.8930%" y="565" width="0.0805%" height="15" fill="rgb(235,0,15)" fg:x="384" fg:w="1"/><text x="31.1430%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="30.8930%" y="549" width="0.0805%" height="15" fill="rgb(247,45,27)" fg:x="384" fg:w="1"/><text x="31.1430%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="30.8930%" y="533" width="0.0805%" height="15" fill="rgb(249,88,53)" fg:x="384" fg:w="1"/><text x="31.1430%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8930%" y="517" width="0.0805%" height="15" fill="rgb(207,58,45)" fg:x="384" fg:w="1"/><text x="31.1430%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.0539%" y="709" width="0.0805%" height="15" fill="rgb(216,7,11)" fg:x="386" fg:w="1"/><text x="31.3039%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.0539%" y="693" width="0.0805%" height="15" fill="rgb(230,40,33)" fg:x="386" fg:w="1"/><text x="31.3039%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0539%" y="677" width="0.0805%" height="15" fill="rgb(232,24,46)" fg:x="386" fg:w="1"/><text x="31.3039%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0539%" y="661" width="0.0805%" height="15" fill="rgb(219,222,45)" fg:x="386" fg:w="1"/><text x="31.3039%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.0539%" y="645" width="0.0805%" height="15" fill="rgb(229,85,44)" fg:x="386" fg:w="1"/><text x="31.3039%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0539%" y="629" width="0.0805%" height="15" fill="rgb(243,71,36)" fg:x="386" fg:w="1"/><text x="31.3039%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="31.1344%" y="693" width="0.0805%" height="15" fill="rgb(230,203,45)" fg:x="387" fg:w="1"/><text x="31.3844%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.1344%" y="677" width="0.0805%" height="15" fill="rgb(224,77,49)" fg:x="387" fg:w="1"/><text x="31.3844%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="31.0539%" y="725" width="0.3218%" height="15" fill="rgb(210,186,47)" fg:x="386" fg:w="4"/><text x="31.3039%" y="735.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.1344%" y="709" width="0.2414%" height="15" fill="rgb(232,146,10)" fg:x="387" fg:w="3"/><text x="31.3844%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.2148%" y="693" width="0.1609%" height="15" fill="rgb(236,185,51)" fg:x="388" fg:w="2"/><text x="31.4648%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="677" width="0.0805%" height="15" fill="rgb(223,206,43)" fg:x="389" fg:w="1"/><text x="31.5453%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="661" width="0.0805%" height="15" fill="rgb(227,212,9)" fg:x="389" fg:w="1"/><text x="31.5453%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="645" width="0.0805%" height="15" fill="rgb(205,82,3)" fg:x="389" fg:w="1"/><text x="31.5453%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="629" width="0.0805%" height="15" fill="rgb(214,2,27)" fg:x="389" fg:w="1"/><text x="31.5453%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="613" width="0.0805%" height="15" fill="rgb(241,37,22)" fg:x="389" fg:w="1"/><text x="31.5453%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="31.2953%" y="597" width="0.0805%" height="15" fill="rgb(219,182,1)" fg:x="389" fg:w="1"/><text x="31.5453%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.2953%" y="581" width="0.0805%" height="15" fill="rgb(208,224,23)" fg:x="389" fg:w="1"/><text x="31.5453%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.2953%" y="565" width="0.0805%" height="15" fill="rgb(219,121,32)" fg:x="389" fg:w="1"/><text x="31.5453%" y="575.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="30.9735%" y="741" width="0.4827%" height="15" fill="rgb(253,13,40)" fg:x="385" fg:w="6"/><text x="31.2235%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.3757%" y="725" width="0.0805%" height="15" fill="rgb(233,6,28)" fg:x="390" fg:w="1"/><text x="31.6257%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="30.5712%" y="773" width="0.9654%" height="15" fill="rgb(233,73,8)" fg:x="380" fg:w="12"/><text x="30.8212%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="30.9735%" y="757" width="0.5632%" height="15" fill="rgb(223,48,27)" fg:x="385" fg:w="7"/><text x="31.2235%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.4562%" y="741" width="0.0805%" height="15" fill="rgb(231,98,37)" fg:x="391" fg:w="1"/><text x="31.7062%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.4562%" y="725" width="0.0805%" height="15" fill="rgb(249,43,32)" fg:x="391" fg:w="1"/><text x="31.7062%" y="735.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="31.5366%" y="741" width="0.0805%" height="15" fill="rgb(246,184,20)" fg:x="392" fg:w="1"/><text x="31.7866%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.5366%" y="725" width="0.0805%" height="15" fill="rgb(251,216,0)" fg:x="392" fg:w="1"/><text x="31.7866%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.5366%" y="709" width="0.0805%" height="15" fill="rgb(238,41,42)" fg:x="392" fg:w="1"/><text x="31.7866%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.5366%" y="693" width="0.0805%" height="15" fill="rgb(227,224,50)" fg:x="392" fg:w="1"/><text x="31.7866%" y="703.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="31.5366%" y="773" width="0.1609%" height="15" fill="rgb(237,189,18)" fg:x="392" fg:w="2"/><text x="31.7866%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="31.5366%" y="757" width="0.1609%" height="15" fill="rgb(238,108,6)" fg:x="392" fg:w="2"/><text x="31.7866%" y="767.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="31.6171%" y="741" width="0.0805%" height="15" fill="rgb(214,197,53)" fg:x="393" fg:w="1"/><text x="31.8671%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="31.6171%" y="725" width="0.0805%" height="15" fill="rgb(206,183,15)" fg:x="393" fg:w="1"/><text x="31.8671%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.6171%" y="709" width="0.0805%" height="15" fill="rgb(208,130,32)" fg:x="393" fg:w="1"/><text x="31.8671%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.6171%" y="693" width="0.0805%" height="15" fill="rgb(226,128,52)" fg:x="393" fg:w="1"/><text x="31.8671%" y="703.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (326 samples, 26.23%)</title><rect x="5.5511%" y="805" width="26.2269%" height="15" fill="rgb(231,183,21)" fg:x="69" fg:w="326"/><text x="5.8011%" y="815.50">&lt;tests::HoldingKeyInVessel as tests::World..</text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (15 samples, 1.21%)</title><rect x="30.5712%" y="789" width="1.2068%" height="15" fill="rgb(216,8,35)" fg:x="380" fg:w="15"/><text x="30.8212%" y="799.50"></text></g><g><title>plugins_core::build::Build::new_world (1 samples, 0.08%)</title><rect x="31.6975%" y="773" width="0.0805%" height="15" fill="rgb(224,221,8)" fg:x="394" fg:w="1"/><text x="31.9475%" y="783.50"></text></g><g><title>kernel::model::entity::build_entity (1 samples, 0.08%)</title><rect x="31.6975%" y="757" width="0.0805%" height="15" fill="rgb(210,111,33)" fg:x="394" fg:w="1"/><text x="31.9475%" y="767.50"></text></g><g><title>kernel::model::entity::EntityBuilder::new (1 samples, 0.08%)</title><rect x="31.6975%" y="741" width="0.0805%" height="15" fill="rgb(232,211,38)" fg:x="394" fg:w="1"/><text x="31.9475%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.7780%" y="805" width="0.0805%" height="15" fill="rgb(216,190,27)" fg:x="395" fg:w="1"/><text x="32.0280%" y="815.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="31.9389%" y="789" width="0.0805%" height="15" fill="rgb(237,215,27)" fg:x="397" fg:w="1"/><text x="32.1889%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.9389%" y="773" width="0.0805%" height="15" fill="rgb(251,121,39)" fg:x="397" fg:w="1"/><text x="32.1889%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.1802%" y="645" width="0.0805%" height="15" fill="rgb(244,21,14)" fg:x="400" fg:w="1"/><text x="32.4302%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.1802%" y="629" width="0.0805%" height="15" fill="rgb(221,192,22)" fg:x="400" fg:w="1"/><text x="32.4302%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.1802%" y="613" width="0.0805%" height="15" fill="rgb(251,190,28)" fg:x="400" fg:w="1"/><text x="32.4302%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.1802%" y="597" width="0.0805%" height="15" fill="rgb(217,4,51)" fg:x="400" fg:w="1"/><text x="32.4302%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.1802%" y="581" width="0.0805%" height="15" fill="rgb(215,183,49)" fg:x="400" fg:w="1"/><text x="32.4302%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.1802%" y="565" width="0.0805%" height="15" fill="rgb(249,28,49)" fg:x="400" fg:w="1"/><text x="32.4302%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="32.1802%" y="549" width="0.0805%" height="15" fill="rgb(214,42,20)" fg:x="400" fg:w="1"/><text x="32.4302%" y="559.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.2607%" y="645" width="0.0805%" height="15" fill="rgb(222,77,27)" fg:x="401" fg:w="1"/><text x="32.5107%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.2607%" y="629" width="0.0805%" height="15" fill="rgb(252,198,32)" fg:x="401" fg:w="1"/><text x="32.5107%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.2607%" y="613" width="0.0805%" height="15" fill="rgb(207,140,50)" fg:x="401" fg:w="1"/><text x="32.5107%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.2607%" y="597" width="0.0805%" height="15" fill="rgb(251,170,16)" fg:x="401" fg:w="1"/><text x="32.5107%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.2607%" y="581" width="0.0805%" height="15" fill="rgb(249,111,45)" fg:x="401" fg:w="1"/><text x="32.5107%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.2607%" y="565" width="0.0805%" height="15" fill="rgb(241,99,35)" fg:x="401" fg:w="1"/><text x="32.5107%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.2607%" y="549" width="0.0805%" height="15" fill="rgb(216,188,17)" fg:x="401" fg:w="1"/><text x="32.5107%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.2607%" y="533" width="0.0805%" height="15" fill="rgb(254,209,53)" fg:x="401" fg:w="1"/><text x="32.5107%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.2607%" y="517" width="0.0805%" height="15" fill="rgb(231,105,41)" fg:x="401" fg:w="1"/><text x="32.5107%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.2607%" y="501" width="0.0805%" height="15" fill="rgb(242,93,23)" fg:x="401" fg:w="1"/><text x="32.5107%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.2607%" y="485" width="0.0805%" height="15" fill="rgb(218,159,11)" fg:x="401" fg:w="1"/><text x="32.5107%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.2607%" y="469" width="0.0805%" height="15" fill="rgb(209,90,32)" fg:x="401" fg:w="1"/><text x="32.5107%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="32.2607%" y="453" width="0.0805%" height="15" fill="rgb(253,118,46)" fg:x="401" fg:w="1"/><text x="32.5107%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="32.2607%" y="437" width="0.0805%" height="15" fill="rgb(219,121,2)" fg:x="401" fg:w="1"/><text x="32.5107%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="32.2607%" y="421" width="0.0805%" height="15" fill="rgb(207,57,47)" fg:x="401" fg:w="1"/><text x="32.5107%" y="431.50"></text></g><g><title>alloc::fmt::format::format_inner (5 samples, 0.40%)</title><rect x="32.0193%" y="789" width="0.4023%" height="15" fill="rgb(235,113,43)" fg:x="398" fg:w="5"/><text x="32.2693%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.40%)</title><rect x="32.0193%" y="773" width="0.4023%" height="15" fill="rgb(238,30,50)" fg:x="398" fg:w="5"/><text x="32.2693%" y="783.50"></text></g><g><title>core::fmt::write (5 samples, 0.40%)</title><rect x="32.0193%" y="757" width="0.4023%" height="15" fill="rgb(237,47,29)" fg:x="398" fg:w="5"/><text x="32.2693%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (5 samples, 0.40%)</title><rect x="32.0193%" y="741" width="0.4023%" height="15" fill="rgb(245,102,24)" fg:x="398" fg:w="5"/><text x="32.2693%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (5 samples, 0.40%)</title><rect x="32.0193%" y="725" width="0.4023%" height="15" fill="rgb(245,152,9)" fg:x="398" fg:w="5"/><text x="32.2693%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (5 samples, 0.40%)</title><rect x="32.0193%" y="709" width="0.4023%" height="15" fill="rgb(223,213,17)" fg:x="398" fg:w="5"/><text x="32.2693%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (4 samples, 0.32%)</title><rect x="32.0998%" y="693" width="0.3218%" height="15" fill="rgb(241,164,4)" fg:x="399" fg:w="4"/><text x="32.3498%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="32.1802%" y="677" width="0.2414%" height="15" fill="rgb(205,209,31)" fg:x="400" fg:w="3"/><text x="32.4302%" y="687.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="32.1802%" y="661" width="0.2414%" height="15" fill="rgb(248,173,2)" fg:x="400" fg:w="3"/><text x="32.4302%" y="671.50"></text></g><g><title>core::fmt::run (1 samples, 0.08%)</title><rect x="32.3411%" y="645" width="0.0805%" height="15" fill="rgb(207,67,32)" fg:x="402" fg:w="1"/><text x="32.5911%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.3411%" y="629" width="0.0805%" height="15" fill="rgb(239,109,13)" fg:x="402" fg:w="1"/><text x="32.5911%" y="639.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.08%)</title><rect x="32.3411%" y="613" width="0.0805%" height="15" fill="rgb(233,123,24)" fg:x="402" fg:w="1"/><text x="32.5911%" y="623.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="32.3411%" y="597" width="0.0805%" height="15" fill="rgb(232,120,19)" fg:x="402" fg:w="1"/><text x="32.5911%" y="607.50"></text></g><g><title>core::str::count::count_chars (1 samples, 0.08%)</title><rect x="32.3411%" y="581" width="0.0805%" height="15" fill="rgb(225,17,50)" fg:x="402" fg:w="1"/><text x="32.5911%" y="591.50"></text></g><g><title>core::str::count::char_count_general_case (1 samples, 0.08%)</title><rect x="32.3411%" y="565" width="0.0805%" height="15" fill="rgb(239,216,13)" fg:x="402" fg:w="1"/><text x="32.5911%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.08%)</title><rect x="32.3411%" y="549" width="0.0805%" height="15" fill="rgb(232,213,26)" fg:x="402" fg:w="1"/><text x="32.5911%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="32.3411%" y="533" width="0.0805%" height="15" fill="rgb(244,59,39)" fg:x="402" fg:w="1"/><text x="32.5911%" y="543.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="32.3411%" y="517" width="0.0805%" height="15" fill="rgb(234,61,35)" fg:x="402" fg:w="1"/><text x="32.5911%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="32.3411%" y="501" width="0.0805%" height="15" fill="rgb(245,94,24)" fg:x="402" fg:w="1"/><text x="32.5911%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="32.3411%" y="485" width="0.0805%" height="15" fill="rgb(238,190,44)" fg:x="402" fg:w="1"/><text x="32.5911%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="32.3411%" y="469" width="0.0805%" height="15" fill="rgb(205,145,25)" fg:x="402" fg:w="1"/><text x="32.5911%" y="479.50"></text></g><g><title>engine::session::should_force_rollback (2 samples, 0.16%)</title><rect x="32.4216%" y="789" width="0.1609%" height="15" fill="rgb(229,158,41)" fg:x="403" fg:w="2"/><text x="32.6716%" y="799.50"></text></g><g><title>std::env::_var (2 samples, 0.16%)</title><rect x="32.4216%" y="773" width="0.1609%" height="15" fill="rgb(224,121,5)" fg:x="403" fg:w="2"/><text x="32.6716%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="32.5020%" y="757" width="0.0805%" height="15" fill="rgb(238,168,35)" fg:x="404" fg:w="1"/><text x="32.7520%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="32.5020%" y="741" width="0.0805%" height="15" fill="rgb(231,11,42)" fg:x="404" fg:w="1"/><text x="32.7520%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="32.5020%" y="725" width="0.0805%" height="15" fill="rgb(241,105,19)" fg:x="404" fg:w="1"/><text x="32.7520%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="32.5020%" y="709" width="0.0805%" height="15" fill="rgb(253,210,20)" fg:x="404" fg:w="1"/><text x="32.7520%" y="719.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (1 samples, 0.08%)</title><rect x="32.5020%" y="693" width="0.0805%" height="15" fill="rgb(215,72,52)" fg:x="404" fg:w="1"/><text x="32.7520%" y="703.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.08%)</title><rect x="32.5020%" y="677" width="0.0805%" height="15" fill="rgb(223,225,30)" fg:x="404" fg:w="1"/><text x="32.7520%" y="687.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.08%)</title><rect x="32.5020%" y="661" width="0.0805%" height="15" fill="rgb(220,138,44)" fg:x="404" fg:w="1"/><text x="32.7520%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="32.8238%" y="741" width="0.1609%" height="15" fill="rgb(206,128,12)" fg:x="408" fg:w="2"/><text x="33.0738%" y="751.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (2 samples, 0.16%)</title><rect x="32.8238%" y="725" width="0.1609%" height="15" fill="rgb(245,194,0)" fg:x="408" fg:w="2"/><text x="33.0738%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="32.9043%" y="709" width="0.0805%" height="15" fill="rgb(235,175,41)" fg:x="409" fg:w="1"/><text x="33.1543%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="32.9043%" y="693" width="0.0805%" height="15" fill="rgb(216,15,48)" fg:x="409" fg:w="1"/><text x="33.1543%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (4 samples, 0.32%)</title><rect x="32.7434%" y="757" width="0.3218%" height="15" fill="rgb(223,179,5)" fg:x="407" fg:w="4"/><text x="32.9934%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.9847%" y="741" width="0.0805%" height="15" fill="rgb(220,80,15)" fg:x="410" fg:w="1"/><text x="33.2347%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.9847%" y="725" width="0.0805%" height="15" fill="rgb(228,20,30)" fg:x="410" fg:w="1"/><text x="33.2347%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="709" width="0.0805%" height="15" fill="rgb(229,194,27)" fg:x="410" fg:w="1"/><text x="33.2347%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9847%" y="693" width="0.0805%" height="15" fill="rgb(238,202,32)" fg:x="410" fg:w="1"/><text x="33.2347%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="677" width="0.0805%" height="15" fill="rgb(207,82,27)" fg:x="410" fg:w="1"/><text x="33.2347%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="661" width="0.0805%" height="15" fill="rgb(246,122,46)" fg:x="410" fg:w="1"/><text x="33.2347%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="645" width="0.0805%" height="15" fill="rgb(220,101,26)" fg:x="410" fg:w="1"/><text x="33.2347%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9847%" y="629" width="0.0805%" height="15" fill="rgb(251,63,9)" fg:x="410" fg:w="1"/><text x="33.2347%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="613" width="0.0805%" height="15" fill="rgb(235,186,5)" fg:x="410" fg:w="1"/><text x="33.2347%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="597" width="0.0805%" height="15" fill="rgb(241,139,37)" fg:x="410" fg:w="1"/><text x="33.2347%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="581" width="0.0805%" height="15" fill="rgb(252,177,51)" fg:x="410" fg:w="1"/><text x="33.2347%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9847%" y="565" width="0.0805%" height="15" fill="rgb(214,131,22)" fg:x="410" fg:w="1"/><text x="33.2347%" y="575.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="549" width="0.0805%" height="15" fill="rgb(246,53,19)" fg:x="410" fg:w="1"/><text x="33.2347%" y="559.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="533" width="0.0805%" height="15" fill="rgb(231,158,27)" fg:x="410" fg:w="1"/><text x="33.2347%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="517" width="0.0805%" height="15" fill="rgb(226,166,46)" fg:x="410" fg:w="1"/><text x="33.2347%" y="527.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9847%" y="501" width="0.0805%" height="15" fill="rgb(218,178,26)" fg:x="410" fg:w="1"/><text x="33.2347%" y="511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9847%" y="485" width="0.0805%" height="15" fill="rgb(206,25,39)" fg:x="410" fg:w="1"/><text x="33.2347%" y="495.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="32.9847%" y="469" width="0.0805%" height="15" fill="rgb(232,218,41)" fg:x="410" fg:w="1"/><text x="33.2347%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="33.1456%" y="677" width="0.0805%" height="15" fill="rgb(212,151,15)" fg:x="412" fg:w="1"/><text x="33.3956%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.1456%" y="661" width="0.0805%" height="15" fill="rgb(213,49,22)" fg:x="412" fg:w="1"/><text x="33.3956%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2261%" y="677" width="0.0805%" height="15" fill="rgb(247,116,21)" fg:x="413" fg:w="1"/><text x="33.4761%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.2261%" y="661" width="0.0805%" height="15" fill="rgb(248,98,14)" fg:x="413" fg:w="1"/><text x="33.4761%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.2261%" y="645" width="0.0805%" height="15" fill="rgb(247,72,6)" fg:x="413" fg:w="1"/><text x="33.4761%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.2261%" y="629" width="0.0805%" height="15" fill="rgb(213,9,22)" fg:x="413" fg:w="1"/><text x="33.4761%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.2261%" y="613" width="0.0805%" height="15" fill="rgb(213,122,30)" fg:x="413" fg:w="1"/><text x="33.4761%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="33.2261%" y="597" width="0.0805%" height="15" fill="rgb(244,11,30)" fg:x="413" fg:w="1"/><text x="33.4761%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="33.2261%" y="581" width="0.0805%" height="15" fill="rgb(236,102,26)" fg:x="413" fg:w="1"/><text x="33.4761%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="33.1456%" y="709" width="0.3218%" height="15" fill="rgb(231,166,37)" fg:x="412" fg:w="4"/><text x="33.3956%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="33.1456%" y="693" width="0.3218%" height="15" fill="rgb(220,224,29)" fg:x="412" fg:w="4"/><text x="33.3956%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.3065%" y="677" width="0.1609%" height="15" fill="rgb(227,30,40)" fg:x="414" fg:w="2"/><text x="33.5565%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="33.3065%" y="661" width="0.1609%" height="15" fill="rgb(235,8,36)" fg:x="414" fg:w="2"/><text x="33.5565%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.3065%" y="645" width="0.1609%" height="15" fill="rgb(232,175,19)" fg:x="414" fg:w="2"/><text x="33.5565%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.3065%" y="629" width="0.1609%" height="15" fill="rgb(217,114,10)" fg:x="414" fg:w="2"/><text x="33.5565%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.3065%" y="613" width="0.1609%" height="15" fill="rgb(214,112,41)" fg:x="414" fg:w="2"/><text x="33.5565%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.3065%" y="597" width="0.1609%" height="15" fill="rgb(226,69,34)" fg:x="414" fg:w="2"/><text x="33.5565%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.3065%" y="581" width="0.1609%" height="15" fill="rgb(219,23,46)" fg:x="414" fg:w="2"/><text x="33.5565%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.3065%" y="565" width="0.1609%" height="15" fill="rgb(233,3,8)" fg:x="414" fg:w="2"/><text x="33.5565%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.3065%" y="549" width="0.1609%" height="15" fill="rgb(251,34,42)" fg:x="414" fg:w="2"/><text x="33.5565%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="33.3065%" y="533" width="0.1609%" height="15" fill="rgb(215,84,9)" fg:x="414" fg:w="2"/><text x="33.5565%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="33.3065%" y="517" width="0.1609%" height="15" fill="rgb(231,75,52)" fg:x="414" fg:w="2"/><text x="33.5565%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="33.3065%" y="501" width="0.1609%" height="15" fill="rgb(247,201,31)" fg:x="414" fg:w="2"/><text x="33.5565%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="33.3065%" y="485" width="0.1609%" height="15" fill="rgb(215,171,37)" fg:x="414" fg:w="2"/><text x="33.5565%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="33.3065%" y="469" width="0.1609%" height="15" fill="rgb(208,208,44)" fg:x="414" fg:w="2"/><text x="33.5565%" y="479.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (3 samples, 0.24%)</title><rect x="33.4674%" y="709" width="0.2414%" height="15" fill="rgb(247,146,54)" fg:x="416" fg:w="3"/><text x="33.7174%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="33.4674%" y="693" width="0.2414%" height="15" fill="rgb(209,0,40)" fg:x="416" fg:w="3"/><text x="33.7174%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.24%)</title><rect x="33.4674%" y="677" width="0.2414%" height="15" fill="rgb(221,59,4)" fg:x="416" fg:w="3"/><text x="33.7174%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="33.5479%" y="661" width="0.1609%" height="15" fill="rgb(227,153,47)" fg:x="417" fg:w="2"/><text x="33.7979%" y="671.50"></text></g><g><title>kernel::model::&lt;impl core::convert::From&lt;&amp;kernel::model::EntityPtr&gt; for kernel::model::entity::EntityRef&gt;::from (2 samples, 0.16%)</title><rect x="33.5479%" y="645" width="0.1609%" height="15" fill="rgb(253,225,10)" fg:x="417" fg:w="2"/><text x="33.7979%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6283%" y="629" width="0.0805%" height="15" fill="rgb(237,201,24)" fg:x="418" fg:w="1"/><text x="33.8783%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="33.6283%" y="613" width="0.0805%" height="15" fill="rgb(238,23,27)" fg:x="418" fg:w="1"/><text x="33.8783%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="33.6283%" y="597" width="0.0805%" height="15" fill="rgb(236,54,50)" fg:x="418" fg:w="1"/><text x="33.8783%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="33.6283%" y="581" width="0.0805%" height="15" fill="rgb(216,106,0)" fg:x="418" fg:w="1"/><text x="33.8783%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="33.6283%" y="565" width="0.0805%" height="15" fill="rgb(234,179,35)" fg:x="418" fg:w="1"/><text x="33.8783%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6283%" y="549" width="0.0805%" height="15" fill="rgb(210,35,8)" fg:x="418" fg:w="1"/><text x="33.8783%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="33.6283%" y="533" width="0.0805%" height="15" fill="rgb(238,144,16)" fg:x="418" fg:w="1"/><text x="33.8783%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="33.6283%" y="517" width="0.0805%" height="15" fill="rgb(244,54,7)" fg:x="418" fg:w="1"/><text x="33.8783%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="33.6283%" y="501" width="0.0805%" height="15" fill="rgb(233,225,40)" fg:x="418" fg:w="1"/><text x="33.8783%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="33.6283%" y="485" width="0.0805%" height="15" fill="rgb(249,227,23)" fg:x="418" fg:w="1"/><text x="33.8783%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="33.6283%" y="469" width="0.0805%" height="15" fill="rgb(215,42,44)" fg:x="418" fg:w="1"/><text x="33.8783%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="33.6283%" y="453" width="0.0805%" height="15" fill="rgb(220,145,40)" fg:x="418" fg:w="1"/><text x="33.8783%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.8697%" y="677" width="0.0805%" height="15" fill="rgb(228,218,40)" fg:x="421" fg:w="1"/><text x="34.1197%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="33.9501%" y="677" width="0.1609%" height="15" fill="rgb(217,52,54)" fg:x="422" fg:w="2"/><text x="34.2001%" y="687.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="33.9501%" y="661" width="0.1609%" height="15" fill="rgb(223,90,22)" fg:x="422" fg:w="2"/><text x="34.2001%" y="671.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="33.9501%" y="645" width="0.1609%" height="15" fill="rgb(232,114,35)" fg:x="422" fg:w="2"/><text x="34.2001%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="33.9501%" y="629" width="0.1609%" height="15" fill="rgb(227,223,50)" fg:x="422" fg:w="2"/><text x="34.2001%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="33.9501%" y="613" width="0.1609%" height="15" fill="rgb(249,175,7)" fg:x="422" fg:w="2"/><text x="34.2001%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0306%" y="597" width="0.0805%" height="15" fill="rgb(249,173,15)" fg:x="423" fg:w="1"/><text x="34.2806%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.1110%" y="677" width="0.0805%" height="15" fill="rgb(240,131,6)" fg:x="424" fg:w="1"/><text x="34.3610%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="34.1110%" y="661" width="0.0805%" height="15" fill="rgb(246,117,16)" fg:x="424" fg:w="1"/><text x="34.3610%" y="671.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (21 samples, 1.69%)</title><rect x="32.5825%" y="773" width="1.6895%" height="15" fill="rgb(209,32,16)" fg:x="405" fg:w="21"/><text x="32.8325%" y="783.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (15 samples, 1.21%)</title><rect x="33.0652%" y="757" width="1.2068%" height="15" fill="rgb(207,45,44)" fg:x="411" fg:w="15"/><text x="33.3152%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.21%)</title><rect x="33.0652%" y="741" width="1.2068%" height="15" fill="rgb(210,66,3)" fg:x="411" fg:w="15"/><text x="33.3152%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.21%)</title><rect x="33.0652%" y="725" width="1.2068%" height="15" fill="rgb(246,133,30)" fg:x="411" fg:w="15"/><text x="33.3152%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (7 samples, 0.56%)</title><rect x="33.7088%" y="709" width="0.5632%" height="15" fill="rgb(224,37,17)" fg:x="419" fg:w="7"/><text x="33.9588%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (7 samples, 0.56%)</title><rect x="33.7088%" y="693" width="0.5632%" height="15" fill="rgb(237,218,18)" fg:x="419" fg:w="7"/><text x="33.9588%" y="703.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="34.1915%" y="677" width="0.0805%" height="15" fill="rgb(240,57,8)" fg:x="425" fg:w="1"/><text x="34.4415%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::actions::Raised&gt; (1 samples, 0.08%)</title><rect x="34.2719%" y="773" width="0.0805%" height="15" fill="rgb(231,51,38)" fg:x="426" fg:w="1"/><text x="34.5219%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.2719%" y="757" width="0.0805%" height="15" fill="rgb(230,89,50)" fg:x="426" fg:w="1"/><text x="34.5219%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.3524%" y="757" width="0.1609%" height="15" fill="rgb(234,103,34)" fg:x="427" fg:w="2"/><text x="34.6024%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="34.5133%" y="757" width="0.0805%" height="15" fill="rgb(220,45,48)" fg:x="429" fg:w="1"/><text x="34.7633%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="34.5133%" y="741" width="0.0805%" height="15" fill="rgb(250,210,3)" fg:x="429" fg:w="1"/><text x="34.7633%" y="751.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="34.5133%" y="725" width="0.0805%" height="15" fill="rgb(210,118,12)" fg:x="429" fg:w="1"/><text x="34.7633%" y="735.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="34.5133%" y="709" width="0.0805%" height="15" fill="rgb(238,154,21)" fg:x="429" fg:w="1"/><text x="34.7633%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="34.5937%" y="709" width="0.1609%" height="15" fill="rgb(227,220,4)" fg:x="430" fg:w="2"/><text x="34.8437%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (4 samples, 0.32%)</title><rect x="34.7546%" y="693" width="0.3218%" height="15" fill="rgb(207,179,27)" fg:x="432" fg:w="4"/><text x="35.0046%" y="703.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.8351%" y="677" width="0.2414%" height="15" fill="rgb(240,111,30)" fg:x="433" fg:w="3"/><text x="35.0851%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.9155%" y="661" width="0.1609%" height="15" fill="rgb(251,29,1)" fg:x="434" fg:w="2"/><text x="35.1655%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.9960%" y="645" width="0.0805%" height="15" fill="rgb(224,141,39)" fg:x="435" fg:w="1"/><text x="35.2460%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="34.7546%" y="709" width="0.4023%" height="15" fill="rgb(207,98,26)" fg:x="432" fg:w="5"/><text x="35.0046%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.0764%" y="693" width="0.0805%" height="15" fill="rgb(221,37,6)" fg:x="436" fg:w="1"/><text x="35.3264%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="35.0764%" y="677" width="0.0805%" height="15" fill="rgb(217,32,44)" fg:x="436" fg:w="1"/><text x="35.3264%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="35.2373%" y="693" width="0.5632%" height="15" fill="rgb(253,149,2)" fg:x="438" fg:w="7"/><text x="35.4873%" y="703.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="35.3178%" y="677" width="0.4827%" height="15" fill="rgb(220,165,39)" fg:x="439" fg:w="6"/><text x="35.5678%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="35.3178%" y="661" width="0.4827%" height="15" fill="rgb(235,33,48)" fg:x="439" fg:w="6"/><text x="35.5678%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="35.4787%" y="645" width="0.3218%" height="15" fill="rgb(221,89,6)" fg:x="441" fg:w="4"/><text x="35.7287%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="35.6396%" y="629" width="0.1609%" height="15" fill="rgb(215,214,6)" fg:x="443" fg:w="2"/><text x="35.8896%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="35.6396%" y="613" width="0.1609%" height="15" fill="rgb(241,1,30)" fg:x="443" fg:w="2"/><text x="35.8896%" y="623.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="35.6396%" y="597" width="0.1609%" height="15" fill="rgb(211,140,32)" fg:x="443" fg:w="2"/><text x="35.8896%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="35.8005%" y="645" width="0.0805%" height="15" fill="rgb(232,48,21)" fg:x="445" fg:w="1"/><text x="36.0505%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="35.8005%" y="629" width="0.0805%" height="15" fill="rgb(252,217,9)" fg:x="445" fg:w="1"/><text x="36.0505%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="35.8809%" y="645" width="0.1609%" height="15" fill="rgb(206,123,34)" fg:x="446" fg:w="2"/><text x="36.1309%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="35.8809%" y="629" width="0.1609%" height="15" fill="rgb(245,161,38)" fg:x="446" fg:w="2"/><text x="36.1309%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.8809%" y="613" width="0.1609%" height="15" fill="rgb(233,205,7)" fg:x="446" fg:w="2"/><text x="36.1309%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.8809%" y="597" width="0.1609%" height="15" fill="rgb(217,119,18)" fg:x="446" fg:w="2"/><text x="36.1309%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="35.9614%" y="581" width="0.0805%" height="15" fill="rgb(252,126,3)" fg:x="447" fg:w="1"/><text x="36.2114%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (4 samples, 0.32%)</title><rect x="35.8005%" y="677" width="0.3218%" height="15" fill="rgb(252,188,15)" fg:x="445" fg:w="4"/><text x="36.0505%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="35.8005%" y="661" width="0.3218%" height="15" fill="rgb(228,1,48)" fg:x="445" fg:w="4"/><text x="36.0505%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.0418%" y="645" width="0.0805%" height="15" fill="rgb(205,187,8)" fg:x="448" fg:w="1"/><text x="36.2918%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="36.1223%" y="677" width="0.2414%" height="15" fill="rgb(205,105,50)" fg:x="449" fg:w="3"/><text x="36.3723%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="36.1223%" y="661" width="0.2414%" height="15" fill="rgb(211,31,46)" fg:x="449" fg:w="3"/><text x="36.3723%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="36.2027%" y="645" width="0.1609%" height="15" fill="rgb(213,126,5)" fg:x="450" fg:w="2"/><text x="36.4527%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.2832%" y="629" width="0.0805%" height="15" fill="rgb(231,87,9)" fg:x="451" fg:w="1"/><text x="36.5332%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="36.2832%" y="613" width="0.0805%" height="15" fill="rgb(219,224,20)" fg:x="451" fg:w="1"/><text x="36.5332%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="36.2832%" y="597" width="0.0805%" height="15" fill="rgb(230,84,21)" fg:x="451" fg:w="1"/><text x="36.5332%" y="607.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="36.2832%" y="581" width="0.0805%" height="15" fill="rgb(224,169,42)" fg:x="451" fg:w="1"/><text x="36.5332%" y="591.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.6854%" y="661" width="0.0805%" height="15" fill="rgb(227,182,13)" fg:x="456" fg:w="1"/><text x="36.9354%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="36.7659%" y="645" width="0.2414%" height="15" fill="rgb(249,57,41)" fg:x="457" fg:w="3"/><text x="37.0159%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.8463%" y="629" width="0.1609%" height="15" fill="rgb(214,93,52)" fg:x="458" fg:w="2"/><text x="37.0963%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.9268%" y="613" width="0.0805%" height="15" fill="rgb(229,161,34)" fg:x="459" fg:w="1"/><text x="37.1768%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.9268%" y="597" width="0.0805%" height="15" fill="rgb(227,193,17)" fg:x="459" fg:w="1"/><text x="37.1768%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="37.0072%" y="629" width="0.0805%" height="15" fill="rgb(242,164,46)" fg:x="460" fg:w="1"/><text x="37.2572%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.0072%" y="613" width="0.0805%" height="15" fill="rgb(242,142,47)" fg:x="460" fg:w="1"/><text x="37.2572%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="37.0877%" y="613" width="0.0805%" height="15" fill="rgb(208,23,18)" fg:x="461" fg:w="1"/><text x="37.3377%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.0877%" y="597" width="0.0805%" height="15" fill="rgb(219,54,38)" fg:x="461" fg:w="1"/><text x="37.3377%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.0877%" y="581" width="0.0805%" height="15" fill="rgb(206,97,35)" fg:x="461" fg:w="1"/><text x="37.3377%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0877%" y="565" width="0.0805%" height="15" fill="rgb(208,76,8)" fg:x="461" fg:w="1"/><text x="37.3377%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (6 samples, 0.48%)</title><rect x="37.1681%" y="613" width="0.4827%" height="15" fill="rgb(220,92,28)" fg:x="462" fg:w="6"/><text x="37.4181%" y="623.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="37.2486%" y="597" width="0.4023%" height="15" fill="rgb(209,158,39)" fg:x="463" fg:w="5"/><text x="37.4986%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="37.4899%" y="581" width="0.1609%" height="15" fill="rgb(238,175,9)" fg:x="466" fg:w="2"/><text x="37.7399%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="37.4899%" y="565" width="0.1609%" height="15" fill="rgb(240,116,17)" fg:x="466" fg:w="2"/><text x="37.7399%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="37.4899%" y="549" width="0.1609%" height="15" fill="rgb(208,7,2)" fg:x="466" fg:w="2"/><text x="37.7399%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="37.4899%" y="533" width="0.1609%" height="15" fill="rgb(252,52,4)" fg:x="466" fg:w="2"/><text x="37.7399%" y="543.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="37.4899%" y="517" width="0.1609%" height="15" fill="rgb(222,68,34)" fg:x="466" fg:w="2"/><text x="37.7399%" y="527.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="37.6508%" y="613" width="0.0805%" height="15" fill="rgb(242,154,35)" fg:x="468" fg:w="1"/><text x="37.9008%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.80%)</title><rect x="37.0877%" y="629" width="0.8045%" height="15" fill="rgb(210,125,54)" fg:x="461" fg:w="10"/><text x="37.3377%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="37.7313%" y="613" width="0.1609%" height="15" fill="rgb(247,121,18)" fg:x="469" fg:w="2"/><text x="37.9813%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8117%" y="597" width="0.0805%" height="15" fill="rgb(223,48,51)" fg:x="470" fg:w="1"/><text x="38.0617%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (24 samples, 1.93%)</title><rect x="36.3636%" y="677" width="1.9308%" height="15" fill="rgb(211,156,48)" fg:x="452" fg:w="24"/><text x="36.6136%" y="687.50">s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (19 samples, 1.53%)</title><rect x="36.7659%" y="661" width="1.5286%" height="15" fill="rgb(236,56,31)" fg:x="457" fg:w="19"/><text x="37.0159%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="37.0072%" y="645" width="1.2872%" height="15" fill="rgb(247,157,52)" fg:x="460" fg:w="16"/><text x="37.2572%" y="655.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="37.8922%" y="629" width="0.4023%" height="15" fill="rgb(244,121,39)" fg:x="471" fg:w="5"/><text x="38.1422%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="37.8922%" y="613" width="0.4023%" height="15" fill="rgb(239,4,40)" fg:x="471" fg:w="5"/><text x="38.1422%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="37.8922%" y="597" width="0.4023%" height="15" fill="rgb(213,204,45)" fg:x="471" fg:w="5"/><text x="38.1422%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="37.8922%" y="581" width="0.4023%" height="15" fill="rgb(242,107,0)" fg:x="471" fg:w="5"/><text x="38.1422%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="37.8922%" y="565" width="0.4023%" height="15" fill="rgb(215,152,25)" fg:x="471" fg:w="5"/><text x="38.1422%" y="575.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="37.8922%" y="549" width="0.4023%" height="15" fill="rgb(233,151,6)" fg:x="471" fg:w="5"/><text x="38.1422%" y="559.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (33 samples, 2.65%)</title><rect x="35.8005%" y="693" width="2.6549%" height="15" fill="rgb(206,126,44)" fg:x="445" fg:w="33"/><text x="36.0505%" y="703.50">se..</text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="38.2944%" y="677" width="0.1609%" height="15" fill="rgb(209,145,15)" fg:x="476" fg:w="2"/><text x="38.5444%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="38.3749%" y="661" width="0.0805%" height="15" fill="rgb(235,214,8)" fg:x="477" fg:w="1"/><text x="38.6249%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="38.3749%" y="645" width="0.0805%" height="15" fill="rgb(216,140,51)" fg:x="477" fg:w="1"/><text x="38.6249%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (53 samples, 4.26%)</title><rect x="34.5937%" y="725" width="4.2639%" height="15" fill="rgb(213,83,34)" fg:x="430" fg:w="53"/><text x="34.8437%" y="735.50">&lt;serd..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (46 samples, 3.70%)</title><rect x="35.1569%" y="709" width="3.7007%" height="15" fill="rgb(218,186,44)" fg:x="437" fg:w="46"/><text x="35.4069%" y="719.50">serd..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="38.4553%" y="693" width="0.4023%" height="15" fill="rgb(225,147,10)" fg:x="478" fg:w="5"/><text x="38.7053%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="38.4553%" y="677" width="0.4023%" height="15" fill="rgb(209,214,20)" fg:x="478" fg:w="5"/><text x="38.7053%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5 samples, 0.40%)</title><rect x="38.4553%" y="661" width="0.4023%" height="15" fill="rgb(252,61,32)" fg:x="478" fg:w="5"/><text x="38.7053%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="38.6967%" y="645" width="0.1609%" height="15" fill="rgb(237,204,10)" fg:x="481" fg:w="2"/><text x="38.9467%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="38.6967%" y="629" width="0.1609%" height="15" fill="rgb(246,118,16)" fg:x="481" fg:w="2"/><text x="38.9467%" y="639.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="38.6967%" y="613" width="0.1609%" height="15" fill="rgb(214,50,9)" fg:x="481" fg:w="2"/><text x="38.9467%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="38.9381%" y="693" width="0.1609%" height="15" fill="rgb(212,41,1)" fg:x="484" fg:w="2"/><text x="39.1881%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0990%" y="693" width="0.0805%" height="15" fill="rgb(228,172,32)" fg:x="486" fg:w="1"/><text x="39.3490%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.2599%" y="677" width="0.1609%" height="15" fill="rgb(231,85,38)" fg:x="488" fg:w="2"/><text x="39.5099%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4208%" y="677" width="0.0805%" height="15" fill="rgb(223,120,31)" fg:x="490" fg:w="1"/><text x="39.6708%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.5012%" y="661" width="0.0805%" height="15" fill="rgb(254,174,9)" fg:x="491" fg:w="1"/><text x="39.7512%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.5012%" y="645" width="0.0805%" height="15" fill="rgb(243,197,0)" fg:x="491" fg:w="1"/><text x="39.7512%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.5817%" y="645" width="0.1609%" height="15" fill="rgb(226,186,17)" fg:x="492" fg:w="2"/><text x="39.8317%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="38.8576%" y="725" width="0.9654%" height="15" fill="rgb(229,38,38)" fg:x="483" fg:w="12"/><text x="39.1076%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="38.8576%" y="709" width="0.9654%" height="15" fill="rgb(238,82,14)" fg:x="483" fg:w="12"/><text x="39.1076%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="39.1794%" y="693" width="0.6436%" height="15" fill="rgb(230,154,54)" fg:x="487" fg:w="8"/><text x="39.4294%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="39.5012%" y="677" width="0.3218%" height="15" fill="rgb(243,84,17)" fg:x="491" fg:w="4"/><text x="39.7512%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="39.5817%" y="661" width="0.2414%" height="15" fill="rgb(226,41,37)" fg:x="492" fg:w="3"/><text x="39.8317%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.7426%" y="645" width="0.0805%" height="15" fill="rgb(219,20,18)" fg:x="494" fg:w="1"/><text x="39.9926%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="39.7426%" y="629" width="0.0805%" height="15" fill="rgb(243,173,39)" fg:x="494" fg:w="1"/><text x="39.9926%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.7426%" y="613" width="0.0805%" height="15" fill="rgb(245,79,20)" fg:x="494" fg:w="1"/><text x="39.9926%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.9035%" y="661" width="0.0805%" height="15" fill="rgb(229,101,45)" fg:x="496" fg:w="1"/><text x="40.1535%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="39.9839%" y="661" width="0.1609%" height="15" fill="rgb(215,123,52)" fg:x="497" fg:w="2"/><text x="40.2339%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.1448%" y="645" width="0.0805%" height="15" fill="rgb(215,11,33)" fg:x="499" fg:w="1"/><text x="40.3948%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.3057%" y="629" width="0.0805%" height="15" fill="rgb(245,105,20)" fg:x="501" fg:w="1"/><text x="40.5557%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.3057%" y="613" width="0.0805%" height="15" fill="rgb(231,132,30)" fg:x="501" fg:w="1"/><text x="40.5557%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.4666%" y="613" width="0.0805%" height="15" fill="rgb(224,62,21)" fg:x="503" fg:w="1"/><text x="40.7166%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="40.5471%" y="613" width="0.0805%" height="15" fill="rgb(209,221,38)" fg:x="504" fg:w="1"/><text x="40.7971%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.5471%" y="597" width="0.0805%" height="15" fill="rgb(229,200,30)" fg:x="504" fg:w="1"/><text x="40.7971%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="40.6275%" y="613" width="0.0805%" height="15" fill="rgb(237,142,41)" fg:x="505" fg:w="1"/><text x="40.8775%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="40.6275%" y="597" width="0.0805%" height="15" fill="rgb(238,37,22)" fg:x="505" fg:w="1"/><text x="40.8775%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="39.8230%" y="693" width="1.2068%" height="15" fill="rgb(234,182,17)" fg:x="495" fg:w="15"/><text x="40.0730%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (15 samples, 1.21%)</title><rect x="39.8230%" y="677" width="1.2068%" height="15" fill="rgb(237,58,48)" fg:x="495" fg:w="15"/><text x="40.0730%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.88%)</title><rect x="40.1448%" y="661" width="0.8850%" height="15" fill="rgb(226,112,37)" fg:x="499" fg:w="11"/><text x="40.3948%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.80%)</title><rect x="40.2253%" y="645" width="0.8045%" height="15" fill="rgb(230,201,20)" fg:x="500" fg:w="10"/><text x="40.4753%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="40.3862%" y="629" width="0.6436%" height="15" fill="rgb(252,95,39)" fg:x="502" fg:w="8"/><text x="40.6362%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="40.7080%" y="613" width="0.3218%" height="15" fill="rgb(240,150,33)" fg:x="506" fg:w="4"/><text x="40.9580%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="40.7884%" y="597" width="0.2414%" height="15" fill="rgb(208,202,37)" fg:x="507" fg:w="3"/><text x="41.0384%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="40.8689%" y="581" width="0.1609%" height="15" fill="rgb(251,37,12)" fg:x="508" fg:w="2"/><text x="41.1189%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="40.9493%" y="565" width="0.0805%" height="15" fill="rgb(247,150,26)" fg:x="509" fg:w="1"/><text x="41.1993%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;treediff::tools::record::Recorder&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="41.0298%" y="693" width="0.1609%" height="15" fill="rgb(232,28,8)" fg:x="510" fg:w="2"/><text x="41.2798%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.1102%" y="677" width="0.0805%" height="15" fill="rgb(226,121,34)" fg:x="511" fg:w="1"/><text x="41.3602%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="41.1907%" y="677" width="0.2414%" height="15" fill="rgb(237,23,13)" fg:x="512" fg:w="3"/><text x="41.4407%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="41.1907%" y="661" width="0.2414%" height="15" fill="rgb(214,42,29)" fg:x="512" fg:w="3"/><text x="41.4407%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.3516%" y="645" width="0.0805%" height="15" fill="rgb(246,204,29)" fg:x="514" fg:w="1"/><text x="41.6016%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.3516%" y="629" width="0.0805%" height="15" fill="rgb(242,28,40)" fg:x="514" fg:w="1"/><text x="41.6016%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.3516%" y="613" width="0.0805%" height="15" fill="rgb(243,64,49)" fg:x="514" fg:w="1"/><text x="41.6016%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.3516%" y="597" width="0.0805%" height="15" fill="rgb(226,93,13)" fg:x="514" fg:w="1"/><text x="41.6016%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.3516%" y="581" width="0.0805%" height="15" fill="rgb(241,113,26)" fg:x="514" fg:w="1"/><text x="41.6016%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.4320%" y="677" width="0.0805%" height="15" fill="rgb(209,209,0)" fg:x="515" fg:w="1"/><text x="41.6820%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.5125%" y="677" width="0.1609%" height="15" fill="rgb(251,183,50)" fg:x="516" fg:w="2"/><text x="41.7625%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.5125%" y="661" width="0.1609%" height="15" fill="rgb(248,24,43)" fg:x="516" fg:w="2"/><text x="41.7625%" y="671.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="41.6734%" y="677" width="0.1609%" height="15" fill="rgb(218,102,9)" fg:x="518" fg:w="2"/><text x="41.9234%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.8343%" y="677" width="0.0805%" height="15" fill="rgb(249,209,39)" fg:x="520" fg:w="1"/><text x="42.0843%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.8343%" y="661" width="0.0805%" height="15" fill="rgb(210,37,6)" fg:x="520" fg:w="1"/><text x="42.0843%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="41.9147%" y="661" width="0.0805%" height="15" fill="rgb(212,99,4)" fg:x="521" fg:w="1"/><text x="42.1647%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.9147%" y="645" width="0.0805%" height="15" fill="rgb(253,59,46)" fg:x="521" fg:w="1"/><text x="42.1647%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.9952%" y="661" width="0.1609%" height="15" fill="rgb(229,96,9)" fg:x="522" fg:w="2"/><text x="42.2452%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="41.9952%" y="645" width="0.1609%" height="15" fill="rgb(207,103,49)" fg:x="522" fg:w="2"/><text x="42.2452%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="41.9952%" y="629" width="0.1609%" height="15" fill="rgb(250,226,20)" fg:x="522" fg:w="2"/><text x="42.2452%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="41.9952%" y="613" width="0.1609%" height="15" fill="rgb(238,220,11)" fg:x="522" fg:w="2"/><text x="42.2452%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="41.9952%" y="597" width="0.1609%" height="15" fill="rgb(236,74,15)" fg:x="522" fg:w="2"/><text x="42.2452%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.9952%" y="581" width="0.1609%" height="15" fill="rgb(218,43,40)" fg:x="522" fg:w="2"/><text x="42.2452%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="41.9952%" y="565" width="0.1609%" height="15" fill="rgb(245,206,37)" fg:x="522" fg:w="2"/><text x="42.2452%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="41.9952%" y="549" width="0.1609%" height="15" fill="rgb(206,30,3)" fg:x="522" fg:w="2"/><text x="42.2452%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="41.9952%" y="533" width="0.1609%" height="15" fill="rgb(211,29,35)" fg:x="522" fg:w="2"/><text x="42.2452%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="41.9952%" y="517" width="0.1609%" height="15" fill="rgb(218,49,50)" fg:x="522" fg:w="2"/><text x="42.2452%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="41.9952%" y="501" width="0.1609%" height="15" fill="rgb(211,114,30)" fg:x="522" fg:w="2"/><text x="42.2452%" y="511.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="41.9952%" y="485" width="0.1609%" height="15" fill="rgb(238,70,33)" fg:x="522" fg:w="2"/><text x="42.2452%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.1561%" y="661" width="0.0805%" height="15" fill="rgb(238,141,50)" fg:x="524" fg:w="1"/><text x="42.4061%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.1561%" y="645" width="0.0805%" height="15" fill="rgb(205,69,6)" fg:x="524" fg:w="1"/><text x="42.4061%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.2365%" y="661" width="0.0805%" height="15" fill="rgb(229,65,0)" fg:x="525" fg:w="1"/><text x="42.4865%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.2365%" y="645" width="0.0805%" height="15" fill="rgb(211,3,37)" fg:x="525" fg:w="1"/><text x="42.4865%" y="655.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (2 samples, 0.16%)</title><rect x="42.3170%" y="661" width="0.1609%" height="15" fill="rgb(223,196,42)" fg:x="526" fg:w="2"/><text x="42.5670%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.4779%" y="645" width="0.0805%" height="15" fill="rgb(227,191,15)" fg:x="528" fg:w="1"/><text x="42.7279%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.08%)</title><rect x="42.4779%" y="629" width="0.0805%" height="15" fill="rgb(229,210,53)" fg:x="528" fg:w="1"/><text x="42.7279%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="42.4779%" y="613" width="0.0805%" height="15" fill="rgb(250,203,10)" fg:x="528" fg:w="1"/><text x="42.7279%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="42.4779%" y="597" width="0.0805%" height="15" fill="rgb(247,8,37)" fg:x="528" fg:w="1"/><text x="42.7279%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="42.5583%" y="645" width="0.0805%" height="15" fill="rgb(240,52,9)" fg:x="529" fg:w="1"/><text x="42.8083%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="42.6388%" y="645" width="0.0805%" height="15" fill="rgb(243,100,52)" fg:x="530" fg:w="1"/><text x="42.8888%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7997%" y="629" width="0.0805%" height="15" fill="rgb(224,149,30)" fg:x="532" fg:w="1"/><text x="43.0497%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.7997%" y="613" width="0.0805%" height="15" fill="rgb(232,27,45)" fg:x="532" fg:w="1"/><text x="43.0497%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.7997%" y="597" width="0.0805%" height="15" fill="rgb(242,161,36)" fg:x="532" fg:w="1"/><text x="43.0497%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (3 samples, 0.24%)</title><rect x="42.8801%" y="613" width="0.2414%" height="15" fill="rgb(235,223,32)" fg:x="533" fg:w="3"/><text x="43.1301%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.1215%" y="613" width="0.0805%" height="15" fill="rgb(242,78,19)" fg:x="536" fg:w="1"/><text x="43.3715%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="43.1215%" y="597" width="0.0805%" height="15" fill="rgb(233,157,47)" fg:x="536" fg:w="1"/><text x="43.3715%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.2019%" y="613" width="0.0805%" height="15" fill="rgb(251,213,5)" fg:x="537" fg:w="1"/><text x="43.4519%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="43.2824%" y="613" width="0.0805%" height="15" fill="rgb(215,223,5)" fg:x="538" fg:w="1"/><text x="43.5324%" y="623.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::difference (1 samples, 0.08%)</title><rect x="43.3628%" y="613" width="0.0805%" height="15" fill="rgb(230,14,7)" fg:x="539" fg:w="1"/><text x="43.6128%" y="623.50"></text></g><g><title>treediff::diff::diff (14 samples, 1.13%)</title><rect x="42.4779%" y="661" width="1.1263%" height="15" fill="rgb(249,179,20)" fg:x="528" fg:w="14"/><text x="42.7279%" y="671.50"></text></g><g><title>treediff::diff::diff (11 samples, 0.88%)</title><rect x="42.7192%" y="645" width="0.8850%" height="15" fill="rgb(230,204,44)" fg:x="531" fg:w="11"/><text x="42.9692%" y="655.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.72%)</title><rect x="42.8801%" y="629" width="0.7241%" height="15" fill="rgb(233,229,46)" fg:x="533" fg:w="9"/><text x="43.1301%" y="639.50"></text></g><g><title>treediff::diff::diff (2 samples, 0.16%)</title><rect x="43.4433%" y="613" width="0.1609%" height="15" fill="rgb(210,154,35)" fg:x="540" fg:w="2"/><text x="43.6933%" y="623.50"></text></g><g><title>treediff::tools::record::mk (2 samples, 0.16%)</title><rect x="43.4433%" y="597" width="0.1609%" height="15" fill="rgb(220,178,16)" fg:x="540" fg:w="2"/><text x="43.6933%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="43.4433%" y="581" width="0.1609%" height="15" fill="rgb(243,0,53)" fg:x="540" fg:w="2"/><text x="43.6933%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="43.5237%" y="565" width="0.0805%" height="15" fill="rgb(223,221,47)" fg:x="541" fg:w="1"/><text x="43.7737%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="43.5237%" y="549" width="0.0805%" height="15" fill="rgb(233,82,15)" fg:x="541" fg:w="1"/><text x="43.7737%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="43.5237%" y="533" width="0.0805%" height="15" fill="rgb(222,8,38)" fg:x="541" fg:w="1"/><text x="43.7737%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="43.5237%" y="517" width="0.0805%" height="15" fill="rgb(241,28,48)" fg:x="541" fg:w="1"/><text x="43.7737%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5237%" y="501" width="0.0805%" height="15" fill="rgb(209,227,15)" fg:x="541" fg:w="1"/><text x="43.7737%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="43.5237%" y="485" width="0.0805%" height="15" fill="rgb(234,189,48)" fg:x="541" fg:w="1"/><text x="43.7737%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="43.5237%" y="469" width="0.0805%" height="15" fill="rgb(212,27,44)" fg:x="541" fg:w="1"/><text x="43.7737%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="43.5237%" y="453" width="0.0805%" height="15" fill="rgb(249,55,42)" fg:x="541" fg:w="1"/><text x="43.7737%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="43.5237%" y="437" width="0.0805%" height="15" fill="rgb(215,211,28)" fg:x="541" fg:w="1"/><text x="43.7737%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="43.5237%" y="421" width="0.0805%" height="15" fill="rgb(221,155,16)" fg:x="541" fg:w="1"/><text x="43.7737%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.5237%" y="405" width="0.0805%" height="15" fill="rgb(247,106,30)" fg:x="541" fg:w="1"/><text x="43.7737%" y="415.50"></text></g><g><title>treediff::diff::diff (22 samples, 1.77%)</title><rect x="41.9147%" y="677" width="1.7699%" height="15" fill="rgb(230,76,31)" fg:x="521" fg:w="22"/><text x="42.1647%" y="687.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="43.6042%" y="661" width="0.0805%" height="15" fill="rgb(222,6,48)" fg:x="542" fg:w="1"/><text x="43.8542%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.6042%" y="645" width="0.0805%" height="15" fill="rgb(228,82,3)" fg:x="542" fg:w="1"/><text x="43.8542%" y="655.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (50 samples, 4.02%)</title><rect x="39.8230%" y="709" width="4.0225%" height="15" fill="rgb(245,208,52)" fg:x="495" fg:w="50"/><text x="40.0730%" y="719.50">&lt;ker..</text></g><g><title>treediff::diff::diff (33 samples, 2.65%)</title><rect x="41.1907%" y="693" width="2.6549%" height="15" fill="rgb(218,65,17)" fg:x="512" fg:w="33"/><text x="41.4407%" y="703.50">tr..</text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (2 samples, 0.16%)</title><rect x="43.6846%" y="677" width="0.1609%" height="15" fill="rgb(242,63,26)" fg:x="543" fg:w="2"/><text x="43.9346%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="43.6846%" y="661" width="0.1609%" height="15" fill="rgb(224,119,39)" fg:x="543" fg:w="2"/><text x="43.9346%" y="671.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="44.0064%" y="677" width="0.0805%" height="15" fill="rgb(229,106,3)" fg:x="547" fg:w="1"/><text x="44.2564%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="44.0869%" y="677" width="0.1609%" height="15" fill="rgb(248,6,33)" fg:x="548" fg:w="2"/><text x="44.3369%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.48%)</title><rect x="44.2478%" y="677" width="0.4827%" height="15" fill="rgb(226,3,49)" fg:x="550" fg:w="6"/><text x="44.4978%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.5696%" y="661" width="0.1609%" height="15" fill="rgb(228,142,14)" fg:x="554" fg:w="2"/><text x="44.8196%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="44.5696%" y="645" width="0.1609%" height="15" fill="rgb(241,141,54)" fg:x="554" fg:w="2"/><text x="44.8196%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="44.7305%" y="677" width="0.0805%" height="15" fill="rgb(252,17,50)" fg:x="556" fg:w="1"/><text x="44.9805%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.7305%" y="661" width="0.0805%" height="15" fill="rgb(221,120,48)" fg:x="556" fg:w="1"/><text x="44.9805%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.7305%" y="645" width="0.0805%" height="15" fill="rgb(229,171,33)" fg:x="556" fg:w="1"/><text x="44.9805%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="44.8109%" y="677" width="0.0805%" height="15" fill="rgb(236,207,21)" fg:x="557" fg:w="1"/><text x="45.0609%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="44.8109%" y="661" width="0.0805%" height="15" fill="rgb(218,93,35)" fg:x="557" fg:w="1"/><text x="45.0609%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.8109%" y="645" width="0.0805%" height="15" fill="rgb(207,101,8)" fg:x="557" fg:w="1"/><text x="45.0609%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2132%" y="629" width="0.0805%" height="15" fill="rgb(237,67,44)" fg:x="562" fg:w="1"/><text x="45.4632%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="45.2132%" y="613" width="0.0805%" height="15" fill="rgb(236,218,7)" fg:x="562" fg:w="1"/><text x="45.4632%" y="623.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="45.2132%" y="597" width="0.0805%" height="15" fill="rgb(252,207,10)" fg:x="562" fg:w="1"/><text x="45.4632%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="45.2132%" y="581" width="0.0805%" height="15" fill="rgb(221,175,6)" fg:x="562" fg:w="1"/><text x="45.4632%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="45.4545%" y="549" width="0.0805%" height="15" fill="rgb(230,105,53)" fg:x="565" fg:w="1"/><text x="45.7045%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.5350%" y="549" width="0.0805%" height="15" fill="rgb(253,83,6)" fg:x="566" fg:w="1"/><text x="45.7850%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.40%)</title><rect x="45.2936%" y="629" width="0.4023%" height="15" fill="rgb(206,198,44)" fg:x="563" fg:w="5"/><text x="45.5436%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="45.2936%" y="613" width="0.4023%" height="15" fill="rgb(206,164,29)" fg:x="563" fg:w="5"/><text x="45.5436%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="45.2936%" y="597" width="0.4023%" height="15" fill="rgb(215,2,50)" fg:x="563" fg:w="5"/><text x="45.5436%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.4545%" y="581" width="0.2414%" height="15" fill="rgb(246,127,18)" fg:x="565" fg:w="3"/><text x="45.7045%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="45.4545%" y="565" width="0.2414%" height="15" fill="rgb(232,6,21)" fg:x="565" fg:w="3"/><text x="45.7045%" y="575.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="45.6154%" y="549" width="0.0805%" height="15" fill="rgb(224,154,1)" fg:x="567" fg:w="1"/><text x="45.8654%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="45.8568%" y="565" width="0.0805%" height="15" fill="rgb(248,135,32)" fg:x="570" fg:w="1"/><text x="46.1068%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="45.6959%" y="597" width="0.4023%" height="15" fill="rgb(253,129,38)" fg:x="568" fg:w="5"/><text x="45.9459%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="45.7763%" y="581" width="0.3218%" height="15" fill="rgb(214,110,11)" fg:x="569" fg:w="4"/><text x="46.0263%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="45.9372%" y="565" width="0.1609%" height="15" fill="rgb(246,150,22)" fg:x="571" fg:w="2"/><text x="46.1872%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="46.2591%" y="549" width="0.1609%" height="15" fill="rgb(219,170,39)" fg:x="575" fg:w="2"/><text x="46.5091%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="46.4200%" y="533" width="0.1609%" height="15" fill="rgb(221,143,52)" fg:x="577" fg:w="2"/><text x="46.6700%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.5004%" y="517" width="0.0805%" height="15" fill="rgb(237,122,11)" fg:x="578" fg:w="1"/><text x="46.7504%" y="527.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="46.5004%" y="501" width="0.0805%" height="15" fill="rgb(217,114,13)" fg:x="578" fg:w="1"/><text x="46.7504%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="46.1786%" y="581" width="0.4827%" height="15" fill="rgb(218,184,28)" fg:x="574" fg:w="6"/><text x="46.4286%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="46.2591%" y="565" width="0.4023%" height="15" fill="rgb(237,33,22)" fg:x="575" fg:w="5"/><text x="46.5091%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="46.4200%" y="549" width="0.2414%" height="15" fill="rgb(224,56,42)" fg:x="577" fg:w="3"/><text x="46.6700%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="46.5809%" y="533" width="0.0805%" height="15" fill="rgb(216,138,53)" fg:x="579" fg:w="1"/><text x="46.8309%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="45.6959%" y="613" width="1.1263%" height="15" fill="rgb(233,229,40)" fg:x="568" fg:w="14"/><text x="45.9459%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.72%)</title><rect x="46.0981%" y="597" width="0.7241%" height="15" fill="rgb(252,105,0)" fg:x="573" fg:w="9"/><text x="46.3481%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="46.6613%" y="581" width="0.1609%" height="15" fill="rgb(212,75,24)" fg:x="580" fg:w="2"/><text x="46.9113%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (22 samples, 1.77%)</title><rect x="45.1327%" y="645" width="1.7699%" height="15" fill="rgb(235,168,50)" fg:x="561" fg:w="22"/><text x="45.3827%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (15 samples, 1.21%)</title><rect x="45.6959%" y="629" width="1.2068%" height="15" fill="rgb(247,204,12)" fg:x="568" fg:w="15"/><text x="45.9459%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.8222%" y="613" width="0.0805%" height="15" fill="rgb(250,203,27)" fg:x="582" fg:w="1"/><text x="47.0722%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (26 samples, 2.09%)</title><rect x="44.9718%" y="661" width="2.0917%" height="15" fill="rgb(221,215,2)" fg:x="559" fg:w="26"/><text x="45.2218%" y="671.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="46.9027%" y="645" width="0.1609%" height="15" fill="rgb(242,163,47)" fg:x="583" fg:w="2"/><text x="47.1527%" y="655.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (43 samples, 3.46%)</title><rect x="43.8455%" y="709" width="3.4594%" height="15" fill="rgb(237,136,50)" fg:x="545" fg:w="43"/><text x="44.0955%" y="719.50">ker..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (42 samples, 3.38%)</title><rect x="43.9260%" y="693" width="3.3789%" height="15" fill="rgb(217,201,47)" fg:x="546" fg:w="42"/><text x="44.1760%" y="703.50">&lt;se..</text></g><g><title>serde::ser::Serializer::collect_map (30 samples, 2.41%)</title><rect x="44.8914%" y="677" width="2.4135%" height="15" fill="rgb(212,38,47)" fg:x="558" fg:w="30"/><text x="45.1414%" y="687.50">se..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="47.0636%" y="661" width="0.2414%" height="15" fill="rgb(254,113,41)" fg:x="585" fg:w="3"/><text x="47.3136%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.2245%" y="645" width="0.0805%" height="15" fill="rgb(236,7,22)" fg:x="587" fg:w="1"/><text x="47.4745%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="47.2245%" y="629" width="0.0805%" height="15" fill="rgb(235,81,25)" fg:x="587" fg:w="1"/><text x="47.4745%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="47.9485%" y="565" width="0.0805%" height="15" fill="rgb(216,41,31)" fg:x="596" fg:w="1"/><text x="48.1985%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="47.9485%" y="549" width="0.0805%" height="15" fill="rgb(249,219,15)" fg:x="596" fg:w="1"/><text x="48.1985%" y="559.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.1094%" y="453" width="0.0805%" height="15" fill="rgb(248,201,3)" fg:x="598" fg:w="1"/><text x="48.3594%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.1094%" y="437" width="0.0805%" height="15" fill="rgb(249,141,18)" fg:x="598" fg:w="1"/><text x="48.3594%" y="447.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="48.1094%" y="485" width="0.2414%" height="15" fill="rgb(222,32,39)" fg:x="598" fg:w="3"/><text x="48.3594%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="48.1094%" y="469" width="0.2414%" height="15" fill="rgb(237,139,51)" fg:x="598" fg:w="3"/><text x="48.3594%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.1899%" y="453" width="0.1609%" height="15" fill="rgb(218,210,4)" fg:x="599" fg:w="2"/><text x="48.4399%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.1899%" y="437" width="0.1609%" height="15" fill="rgb(217,199,13)" fg:x="599" fg:w="2"/><text x="48.4399%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.1899%" y="421" width="0.1609%" height="15" fill="rgb(222,118,25)" fg:x="599" fg:w="2"/><text x="48.4399%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.3508%" y="485" width="0.0805%" height="15" fill="rgb(241,70,28)" fg:x="601" fg:w="1"/><text x="48.6008%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.3508%" y="469" width="0.0805%" height="15" fill="rgb(205,51,41)" fg:x="601" fg:w="1"/><text x="48.6008%" y="479.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="48.0290%" y="549" width="0.5632%" height="15" fill="rgb(237,165,49)" fg:x="597" fg:w="7"/><text x="48.2790%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="48.1094%" y="533" width="0.4827%" height="15" fill="rgb(213,10,51)" fg:x="598" fg:w="6"/><text x="48.3594%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="48.1094%" y="517" width="0.4827%" height="15" fill="rgb(245,89,32)" fg:x="598" fg:w="6"/><text x="48.3594%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="48.1094%" y="501" width="0.4827%" height="15" fill="rgb(249,81,54)" fg:x="598" fg:w="6"/><text x="48.3594%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="48.4312%" y="485" width="0.1609%" height="15" fill="rgb(223,134,14)" fg:x="602" fg:w="2"/><text x="48.6812%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="48.5117%" y="469" width="0.0805%" height="15" fill="rgb(233,62,37)" fg:x="603" fg:w="1"/><text x="48.7617%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5117%" y="453" width="0.0805%" height="15" fill="rgb(219,117,42)" fg:x="603" fg:w="1"/><text x="48.7617%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (13 samples, 1.05%)</title><rect x="47.6267%" y="613" width="1.0459%" height="15" fill="rgb(248,40,28)" fg:x="592" fg:w="13"/><text x="47.8767%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12 samples, 0.97%)</title><rect x="47.7072%" y="597" width="0.9654%" height="15" fill="rgb(246,66,35)" fg:x="593" fg:w="12"/><text x="47.9572%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.80%)</title><rect x="47.8681%" y="581" width="0.8045%" height="15" fill="rgb(250,229,22)" fg:x="595" fg:w="10"/><text x="48.1181%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="48.0290%" y="565" width="0.6436%" height="15" fill="rgb(213,89,18)" fg:x="597" fg:w="8"/><text x="48.2790%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.5921%" y="549" width="0.0805%" height="15" fill="rgb(213,122,9)" fg:x="604" fg:w="1"/><text x="48.8421%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="48.5921%" y="533" width="0.0805%" height="15" fill="rgb(220,213,48)" fg:x="604" fg:w="1"/><text x="48.8421%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="48.6726%" y="613" width="0.1609%" height="15" fill="rgb(244,109,54)" fg:x="605" fg:w="2"/><text x="48.9226%" y="623.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.6726%" y="597" width="0.1609%" height="15" fill="rgb(254,104,49)" fg:x="605" fg:w="2"/><text x="48.9226%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="48.8335%" y="581" width="0.1609%" height="15" fill="rgb(219,28,32)" fg:x="607" fg:w="2"/><text x="49.0835%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (19 samples, 1.53%)</title><rect x="47.5463%" y="645" width="1.5286%" height="15" fill="rgb(249,153,33)" fg:x="591" fg:w="19"/><text x="47.7963%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (19 samples, 1.53%)</title><rect x="47.5463%" y="629" width="1.5286%" height="15" fill="rgb(230,116,21)" fg:x="591" fg:w="19"/><text x="47.7963%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.8335%" y="613" width="0.2414%" height="15" fill="rgb(247,110,3)" fg:x="607" fg:w="3"/><text x="49.0835%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="48.8335%" y="597" width="0.2414%" height="15" fill="rgb(227,128,3)" fg:x="607" fg:w="3"/><text x="49.0835%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="48.9944%" y="581" width="0.0805%" height="15" fill="rgb(208,21,1)" fg:x="609" fg:w="1"/><text x="49.2444%" y="591.50"></text></g><g><title>engine::session::state::State::close (206 samples, 16.57%)</title><rect x="32.5825%" y="789" width="16.5728%" height="15" fill="rgb(225,24,20)" fg:x="405" fg:w="206"/><text x="32.8325%" y="799.50">engine::session::state::St..</text></g><g><title>engine::session::state::State::flush_entities (184 samples, 14.80%)</title><rect x="34.3524%" y="773" width="14.8029%" height="15" fill="rgb(250,159,24)" fg:x="427" fg:w="184"/><text x="34.6024%" y="783.50">engine::session::state:..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (181 samples, 14.56%)</title><rect x="34.5937%" y="757" width="14.5615%" height="15" fill="rgb(214,30,53)" fg:x="430" fg:w="181"/><text x="34.8437%" y="767.50">engine::session::inter..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (181 samples, 14.56%)</title><rect x="34.5937%" y="741" width="14.5615%" height="15" fill="rgb(243,198,11)" fg:x="430" fg:w="181"/><text x="34.8437%" y="751.50">engine::session::state..</text></g><g><title>kernel::model::any_entity_changes (116 samples, 9.33%)</title><rect x="39.8230%" y="725" width="9.3323%" height="15" fill="rgb(232,33,1)" fg:x="495" fg:w="116"/><text x="40.0730%" y="735.50">kernel::model..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (23 samples, 1.85%)</title><rect x="47.3049%" y="709" width="1.8504%" height="15" fill="rgb(242,60,11)" fg:x="588" fg:w="23"/><text x="47.5549%" y="719.50">s..</text></g><g><title>serde_json::de::from_trait (22 samples, 1.77%)</title><rect x="47.3854%" y="693" width="1.7699%" height="15" fill="rgb(241,229,34)" fg:x="589" fg:w="22"/><text x="47.6354%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (22 samples, 1.77%)</title><rect x="47.3854%" y="677" width="1.7699%" height="15" fill="rgb(230,92,51)" fg:x="589" fg:w="22"/><text x="47.6354%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (22 samples, 1.77%)</title><rect x="47.3854%" y="661" width="1.7699%" height="15" fill="rgb(212,209,8)" fg:x="589" fg:w="22"/><text x="47.6354%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.0748%" y="645" width="0.0805%" height="15" fill="rgb(241,55,35)" fg:x="610" fg:w="1"/><text x="49.3248%" y="655.50"></text></g><g><title>engine::session::Session::close (216 samples, 17.38%)</title><rect x="31.8584%" y="805" width="17.3773%" height="15" fill="rgb(208,187,52)" fg:x="396" fg:w="216"/><text x="32.1084%" y="815.50">engine::session::Session::c..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="49.1553%" y="789" width="0.0805%" height="15" fill="rgb(251,110,17)" fg:x="611" fg:w="1"/><text x="49.4053%" y="799.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="49.1553%" y="773" width="0.0805%" height="15" fill="rgb(246,225,54)" fg:x="611" fg:w="1"/><text x="49.4053%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="49.1553%" y="757" width="0.0805%" height="15" fill="rgb(220,109,6)" fg:x="611" fg:w="1"/><text x="49.4053%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="49.1553%" y="741" width="0.0805%" height="15" fill="rgb(228,56,50)" fg:x="611" fg:w="1"/><text x="49.4053%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="49.1553%" y="725" width="0.0805%" height="15" fill="rgb(230,34,30)" fg:x="611" fg:w="1"/><text x="49.4053%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (1 samples, 0.08%)</title><rect x="49.3162%" y="677" width="0.0805%" height="15" fill="rgb(205,28,42)" fg:x="613" fg:w="1"/><text x="49.5662%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="49.3162%" y="661" width="0.0805%" height="15" fill="rgb(215,68,0)" fg:x="613" fg:w="1"/><text x="49.5662%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="49.3162%" y="645" width="0.0805%" height="15" fill="rgb(206,91,47)" fg:x="613" fg:w="1"/><text x="49.5662%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="49.3162%" y="629" width="0.0805%" height="15" fill="rgb(241,159,43)" fg:x="613" fg:w="1"/><text x="49.5662%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="613" width="0.0805%" height="15" fill="rgb(232,191,38)" fg:x="613" fg:w="1"/><text x="49.5662%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3162%" y="597" width="0.0805%" height="15" fill="rgb(212,180,41)" fg:x="613" fg:w="1"/><text x="49.5662%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="581" width="0.0805%" height="15" fill="rgb(236,134,49)" fg:x="613" fg:w="1"/><text x="49.5662%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="565" width="0.0805%" height="15" fill="rgb(221,83,26)" fg:x="613" fg:w="1"/><text x="49.5662%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="549" width="0.0805%" height="15" fill="rgb(215,87,39)" fg:x="613" fg:w="1"/><text x="49.5662%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3162%" y="533" width="0.0805%" height="15" fill="rgb(242,28,29)" fg:x="613" fg:w="1"/><text x="49.5662%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="517" width="0.0805%" height="15" fill="rgb(212,219,47)" fg:x="613" fg:w="1"/><text x="49.5662%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="501" width="0.0805%" height="15" fill="rgb(221,35,20)" fg:x="613" fg:w="1"/><text x="49.5662%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="485" width="0.0805%" height="15" fill="rgb(234,144,13)" fg:x="613" fg:w="1"/><text x="49.5662%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="49.3162%" y="469" width="0.0805%" height="15" fill="rgb(237,41,27)" fg:x="613" fg:w="1"/><text x="49.5662%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="49.3162%" y="453" width="0.0805%" height="15" fill="rgb(253,175,5)" fg:x="613" fg:w="1"/><text x="49.5662%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3162%" y="437" width="0.0805%" height="15" fill="rgb(235,210,51)" fg:x="613" fg:w="1"/><text x="49.5662%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="49.3162%" y="421" width="0.0805%" height="15" fill="rgb(241,180,35)" fg:x="613" fg:w="1"/><text x="49.5662%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="49.3162%" y="405" width="0.0805%" height="15" fill="rgb(219,45,16)" fg:x="613" fg:w="1"/><text x="49.5662%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="49.3162%" y="389" width="0.0805%" height="15" fill="rgb(247,212,4)" fg:x="613" fg:w="1"/><text x="49.5662%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="49.3162%" y="373" width="0.0805%" height="15" fill="rgb(224,211,1)" fg:x="613" fg:w="1"/><text x="49.5662%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="49.3162%" y="357" width="0.0805%" height="15" fill="rgb(210,193,36)" fg:x="613" fg:w="1"/><text x="49.5662%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3162%" y="341" width="0.0805%" height="15" fill="rgb(215,121,20)" fg:x="613" fg:w="1"/><text x="49.5662%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="49.3162%" y="325" width="0.0805%" height="15" fill="rgb(238,146,2)" fg:x="613" fg:w="1"/><text x="49.5662%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="49.3162%" y="309" width="0.0805%" height="15" fill="rgb(254,123,45)" fg:x="613" fg:w="1"/><text x="49.5662%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="49.3162%" y="293" width="0.0805%" height="15" fill="rgb(225,126,11)" fg:x="613" fg:w="1"/><text x="49.5662%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="49.3162%" y="277" width="0.0805%" height="15" fill="rgb(239,12,5)" fg:x="613" fg:w="1"/><text x="49.5662%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="49.3162%" y="261" width="0.0805%" height="15" fill="rgb(241,207,14)" fg:x="613" fg:w="1"/><text x="49.5662%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="49.3162%" y="245" width="0.0805%" height="15" fill="rgb(227,134,33)" fg:x="613" fg:w="1"/><text x="49.5662%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="49.3162%" y="229" width="0.0805%" height="15" fill="rgb(221,40,52)" fg:x="613" fg:w="1"/><text x="49.5662%" y="239.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="49.3162%" y="213" width="0.0805%" height="15" fill="rgb(206,93,8)" fg:x="613" fg:w="1"/><text x="49.5662%" y="223.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="49.3966%" y="661" width="0.0805%" height="15" fill="rgb(242,160,22)" fg:x="614" fg:w="1"/><text x="49.6466%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="49.4771%" y="597" width="0.0805%" height="15" fill="rgb(232,204,40)" fg:x="615" fg:w="1"/><text x="49.7271%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="49.4771%" y="581" width="0.0805%" height="15" fill="rgb(247,210,47)" fg:x="615" fg:w="1"/><text x="49.7271%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="49.4771%" y="565" width="0.0805%" height="15" fill="rgb(211,91,7)" fg:x="615" fg:w="1"/><text x="49.7271%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="49.4771%" y="549" width="0.0805%" height="15" fill="rgb(252,160,34)" fg:x="615" fg:w="1"/><text x="49.7271%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="49.4771%" y="533" width="0.0805%" height="15" fill="rgb(220,34,39)" fg:x="615" fg:w="1"/><text x="49.7271%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.4771%" y="517" width="0.0805%" height="15" fill="rgb(247,49,38)" fg:x="615" fg:w="1"/><text x="49.7271%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.4771%" y="501" width="0.0805%" height="15" fill="rgb(228,175,44)" fg:x="615" fg:w="1"/><text x="49.7271%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.4771%" y="485" width="0.0805%" height="15" fill="rgb(218,214,32)" fg:x="615" fg:w="1"/><text x="49.7271%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="49.4771%" y="469" width="0.0805%" height="15" fill="rgb(213,50,12)" fg:x="615" fg:w="1"/><text x="49.7271%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.4771%" y="453" width="0.0805%" height="15" fill="rgb(219,35,41)" fg:x="615" fg:w="1"/><text x="49.7271%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5575%" y="501" width="0.0805%" height="15" fill="rgb(219,18,38)" fg:x="616" fg:w="1"/><text x="49.8075%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.5575%" y="485" width="0.0805%" height="15" fill="rgb(223,217,6)" fg:x="616" fg:w="1"/><text x="49.8075%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.7184%" y="469" width="0.0805%" height="15" fill="rgb(208,193,35)" fg:x="618" fg:w="1"/><text x="49.9684%" y="479.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.7989%" y="373" width="0.0805%" height="15" fill="rgb(254,212,54)" fg:x="619" fg:w="1"/><text x="50.0489%" y="383.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="49.7989%" y="357" width="0.0805%" height="15" fill="rgb(205,10,2)" fg:x="619" fg:w="1"/><text x="50.0489%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.7989%" y="453" width="0.1609%" height="15" fill="rgb(230,133,29)" fg:x="619" fg:w="2"/><text x="50.0489%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.7989%" y="437" width="0.1609%" height="15" fill="rgb(226,14,15)" fg:x="619" fg:w="2"/><text x="50.0489%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.7989%" y="421" width="0.1609%" height="15" fill="rgb(226,140,54)" fg:x="619" fg:w="2"/><text x="50.0489%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="49.7989%" y="405" width="0.1609%" height="15" fill="rgb(250,47,41)" fg:x="619" fg:w="2"/><text x="50.0489%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="49.7989%" y="389" width="0.1609%" height="15" fill="rgb(227,218,41)" fg:x="619" fg:w="2"/><text x="50.0489%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.8793%" y="373" width="0.0805%" height="15" fill="rgb(254,183,7)" fg:x="620" fg:w="1"/><text x="50.1293%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.8793%" y="357" width="0.0805%" height="15" fill="rgb(206,84,53)" fg:x="620" fg:w="1"/><text x="50.1293%" y="367.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="49.8793%" y="341" width="0.0805%" height="15" fill="rgb(213,177,2)" fg:x="620" fg:w="1"/><text x="50.1293%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="49.8793%" y="325" width="0.0805%" height="15" fill="rgb(234,28,29)" fg:x="620" fg:w="1"/><text x="50.1293%" y="335.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="49.5575%" y="581" width="0.4827%" height="15" fill="rgb(248,211,38)" fg:x="616" fg:w="6"/><text x="49.8075%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="49.5575%" y="565" width="0.4827%" height="15" fill="rgb(246,30,0)" fg:x="616" fg:w="6"/><text x="49.8075%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="49.5575%" y="549" width="0.4827%" height="15" fill="rgb(244,115,24)" fg:x="616" fg:w="6"/><text x="49.8075%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="49.5575%" y="533" width="0.4827%" height="15" fill="rgb(226,193,14)" fg:x="616" fg:w="6"/><text x="49.8075%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="49.5575%" y="517" width="0.4827%" height="15" fill="rgb(211,196,48)" fg:x="616" fg:w="6"/><text x="49.8075%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="49.6380%" y="501" width="0.4023%" height="15" fill="rgb(235,32,20)" fg:x="617" fg:w="5"/><text x="49.8880%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="49.6380%" y="485" width="0.4023%" height="15" fill="rgb(251,151,49)" fg:x="617" fg:w="5"/><text x="49.8880%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="49.7989%" y="469" width="0.2414%" height="15" fill="rgb(254,141,38)" fg:x="619" fg:w="3"/><text x="50.0489%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="49.9598%" y="453" width="0.0805%" height="15" fill="rgb(209,118,44)" fg:x="621" fg:w="1"/><text x="50.2098%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="49.9598%" y="437" width="0.0805%" height="15" fill="rgb(205,81,4)" fg:x="621" fg:w="1"/><text x="50.2098%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9598%" y="421" width="0.0805%" height="15" fill="rgb(241,25,6)" fg:x="621" fg:w="1"/><text x="50.2098%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="49.9598%" y="405" width="0.0805%" height="15" fill="rgb(212,179,29)" fg:x="621" fg:w="1"/><text x="50.2098%" y="415.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="49.9598%" y="389" width="0.0805%" height="15" fill="rgb(241,40,32)" fg:x="621" fg:w="1"/><text x="50.2098%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.2011%" y="517" width="0.0805%" height="15" fill="rgb(223,35,2)" fg:x="624" fg:w="1"/><text x="50.4511%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2816%" y="517" width="0.0805%" height="15" fill="rgb(221,125,54)" fg:x="625" fg:w="1"/><text x="50.5316%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.2816%" y="501" width="0.0805%" height="15" fill="rgb(230,5,49)" fg:x="625" fg:w="1"/><text x="50.5316%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.4425%" y="469" width="0.0805%" height="15" fill="rgb(221,157,7)" fg:x="627" fg:w="1"/><text x="50.6925%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4425%" y="453" width="0.0805%" height="15" fill="rgb(242,163,10)" fg:x="627" fg:w="1"/><text x="50.6925%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.4425%" y="437" width="0.0805%" height="15" fill="rgb(232,30,2)" fg:x="627" fg:w="1"/><text x="50.6925%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4425%" y="421" width="0.0805%" height="15" fill="rgb(245,102,40)" fg:x="627" fg:w="1"/><text x="50.6925%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.4425%" y="405" width="0.0805%" height="15" fill="rgb(242,10,41)" fg:x="627" fg:w="1"/><text x="50.6925%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.4425%" y="389" width="0.0805%" height="15" fill="rgb(236,184,36)" fg:x="627" fg:w="1"/><text x="50.6925%" y="399.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4425%" y="373" width="0.0805%" height="15" fill="rgb(247,147,48)" fg:x="627" fg:w="1"/><text x="50.6925%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.4425%" y="357" width="0.0805%" height="15" fill="rgb(226,166,2)" fg:x="627" fg:w="1"/><text x="50.6925%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="50.3620%" y="501" width="0.2414%" height="15" fill="rgb(251,196,7)" fg:x="626" fg:w="3"/><text x="50.6120%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.3620%" y="485" width="0.2414%" height="15" fill="rgb(241,40,13)" fg:x="626" fg:w="3"/><text x="50.6120%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="50.5229%" y="469" width="0.0805%" height="15" fill="rgb(254,4,12)" fg:x="628" fg:w="1"/><text x="50.7729%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.5229%" y="453" width="0.0805%" height="15" fill="rgb(244,139,49)" fg:x="628" fg:w="1"/><text x="50.7729%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="50.5229%" y="437" width="0.0805%" height="15" fill="rgb(227,28,42)" fg:x="628" fg:w="1"/><text x="50.7729%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.5229%" y="421" width="0.0805%" height="15" fill="rgb(231,135,32)" fg:x="628" fg:w="1"/><text x="50.7729%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5229%" y="405" width="0.0805%" height="15" fill="rgb(244,182,3)" fg:x="628" fg:w="1"/><text x="50.7729%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="50.5229%" y="389" width="0.0805%" height="15" fill="rgb(247,46,19)" fg:x="628" fg:w="1"/><text x="50.7729%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="50.6034%" y="501" width="0.1609%" height="15" fill="rgb(251,179,10)" fg:x="629" fg:w="2"/><text x="50.8534%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="50.6034%" y="485" width="0.1609%" height="15" fill="rgb(229,222,18)" fg:x="629" fg:w="2"/><text x="50.8534%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="50.6034%" y="469" width="0.1609%" height="15" fill="rgb(251,107,20)" fg:x="629" fg:w="2"/><text x="50.8534%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="50.6034%" y="453" width="0.1609%" height="15" fill="rgb(233,193,19)" fg:x="629" fg:w="2"/><text x="50.8534%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="50.6838%" y="437" width="0.0805%" height="15" fill="rgb(229,146,53)" fg:x="630" fg:w="1"/><text x="50.9338%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6838%" y="421" width="0.0805%" height="15" fill="rgb(244,52,11)" fg:x="630" fg:w="1"/><text x="50.9338%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="50.7643%" y="469" width="0.0805%" height="15" fill="rgb(245,211,46)" fg:x="631" fg:w="1"/><text x="51.0143%" y="479.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="50.7643%" y="453" width="0.0805%" height="15" fill="rgb(213,8,31)" fg:x="631" fg:w="1"/><text x="51.0143%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="50.8447%" y="453" width="0.0805%" height="15" fill="rgb(205,101,39)" fg:x="632" fg:w="1"/><text x="51.0947%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="50.8447%" y="437" width="0.0805%" height="15" fill="rgb(212,157,1)" fg:x="632" fg:w="1"/><text x="51.0947%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.8447%" y="421" width="0.0805%" height="15" fill="rgb(232,30,46)" fg:x="632" fg:w="1"/><text x="51.0947%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.8447%" y="405" width="0.0805%" height="15" fill="rgb(216,201,6)" fg:x="632" fg:w="1"/><text x="51.0947%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="50.1207%" y="549" width="0.8850%" height="15" fill="rgb(209,18,6)" fg:x="623" fg:w="11"/><text x="50.3707%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="50.1207%" y="533" width="0.8850%" height="15" fill="rgb(219,138,3)" fg:x="623" fg:w="11"/><text x="50.3707%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="50.3620%" y="517" width="0.6436%" height="15" fill="rgb(210,91,46)" fg:x="626" fg:w="8"/><text x="50.6120%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="50.7643%" y="501" width="0.2414%" height="15" fill="rgb(241,80,44)" fg:x="631" fg:w="3"/><text x="51.0143%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="50.7643%" y="485" width="0.2414%" height="15" fill="rgb(236,205,36)" fg:x="631" fg:w="3"/><text x="51.0143%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="50.8447%" y="469" width="0.1609%" height="15" fill="rgb(205,59,37)" fg:x="632" fg:w="2"/><text x="51.0947%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9252%" y="453" width="0.0805%" height="15" fill="rgb(239,166,39)" fg:x="633" fg:w="1"/><text x="51.1752%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.9252%" y="437" width="0.0805%" height="15" fill="rgb(239,146,40)" fg:x="633" fg:w="1"/><text x="51.1752%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.9252%" y="421" width="0.0805%" height="15" fill="rgb(231,11,52)" fg:x="633" fg:w="1"/><text x="51.1752%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9252%" y="405" width="0.0805%" height="15" fill="rgb(253,21,37)" fg:x="633" fg:w="1"/><text x="51.1752%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.9252%" y="389" width="0.0805%" height="15" fill="rgb(224,87,39)" fg:x="633" fg:w="1"/><text x="51.1752%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="50.9252%" y="373" width="0.0805%" height="15" fill="rgb(249,15,46)" fg:x="633" fg:w="1"/><text x="51.1752%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="50.9252%" y="357" width="0.0805%" height="15" fill="rgb(250,37,51)" fg:x="633" fg:w="1"/><text x="51.1752%" y="367.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="50.9252%" y="341" width="0.0805%" height="15" fill="rgb(205,185,43)" fg:x="633" fg:w="1"/><text x="51.1752%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (19 samples, 1.53%)</title><rect x="49.5575%" y="597" width="1.5286%" height="15" fill="rgb(206,65,41)" fg:x="616" fg:w="19"/><text x="49.8075%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.05%)</title><rect x="50.0402%" y="581" width="1.0459%" height="15" fill="rgb(236,159,32)" fg:x="622" fg:w="13"/><text x="50.2902%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="50.0402%" y="565" width="1.0459%" height="15" fill="rgb(228,199,27)" fg:x="622" fg:w="13"/><text x="50.2902%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.0056%" y="549" width="0.0805%" height="15" fill="rgb(212,0,37)" fg:x="634" fg:w="1"/><text x="51.2556%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.0056%" y="533" width="0.0805%" height="15" fill="rgb(248,50,11)" fg:x="634" fg:w="1"/><text x="51.2556%" y="543.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="51.0861%" y="581" width="0.0805%" height="15" fill="rgb(231,164,25)" fg:x="635" fg:w="1"/><text x="51.3361%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="51.0861%" y="565" width="0.0805%" height="15" fill="rgb(238,38,39)" fg:x="635" fg:w="1"/><text x="51.3361%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="51.2470%" y="501" width="0.0805%" height="15" fill="rgb(210,15,50)" fg:x="637" fg:w="1"/><text x="51.4970%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.1665%" y="549" width="0.2414%" height="15" fill="rgb(251,126,36)" fg:x="636" fg:w="3"/><text x="51.4165%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.1665%" y="533" width="0.2414%" height="15" fill="rgb(243,59,26)" fg:x="636" fg:w="3"/><text x="51.4165%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="51.1665%" y="517" width="0.2414%" height="15" fill="rgb(215,24,30)" fg:x="636" fg:w="3"/><text x="51.4165%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.3274%" y="501" width="0.0805%" height="15" fill="rgb(253,50,51)" fg:x="638" fg:w="1"/><text x="51.5774%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.5688%" y="453" width="0.0805%" height="15" fill="rgb(252,2,16)" fg:x="641" fg:w="1"/><text x="51.8188%" y="463.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (28 samples, 2.25%)</title><rect x="49.4771%" y="613" width="2.2526%" height="15" fill="rgb(209,123,36)" fg:x="615" fg:w="28"/><text x="49.7271%" y="623.50">e..</text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="51.0861%" y="597" width="0.6436%" height="15" fill="rgb(245,60,15)" fg:x="635" fg:w="8"/><text x="51.3361%" y="607.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="51.1665%" y="581" width="0.5632%" height="15" fill="rgb(246,4,13)" fg:x="636" fg:w="7"/><text x="51.4165%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="51.1665%" y="565" width="0.5632%" height="15" fill="rgb(210,223,46)" fg:x="636" fg:w="7"/><text x="51.4165%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="51.4079%" y="549" width="0.3218%" height="15" fill="rgb(248,1,9)" fg:x="639" fg:w="4"/><text x="51.6579%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="51.4079%" y="533" width="0.3218%" height="15" fill="rgb(254,2,34)" fg:x="639" fg:w="4"/><text x="51.6579%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="51.4883%" y="517" width="0.2414%" height="15" fill="rgb(239,176,1)" fg:x="640" fg:w="3"/><text x="51.7383%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="51.4883%" y="501" width="0.2414%" height="15" fill="rgb(250,25,32)" fg:x="640" fg:w="3"/><text x="51.7383%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="51.4883%" y="485" width="0.2414%" height="15" fill="rgb(225,28,39)" fg:x="640" fg:w="3"/><text x="51.7383%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="51.5688%" y="469" width="0.1609%" height="15" fill="rgb(230,166,37)" fg:x="641" fg:w="2"/><text x="51.8188%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="51.6492%" y="453" width="0.0805%" height="15" fill="rgb(246,220,4)" fg:x="642" fg:w="1"/><text x="51.8992%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="51.6492%" y="437" width="0.0805%" height="15" fill="rgb(219,119,33)" fg:x="642" fg:w="1"/><text x="51.8992%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="51.6492%" y="421" width="0.0805%" height="15" fill="rgb(221,207,38)" fg:x="642" fg:w="1"/><text x="51.8992%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (29 samples, 2.33%)</title><rect x="49.4771%" y="629" width="2.3331%" height="15" fill="rgb(214,153,5)" fg:x="615" fg:w="29"/><text x="49.7271%" y="639.50">&lt;..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="51.7297%" y="613" width="0.0805%" height="15" fill="rgb(223,50,16)" fg:x="643" fg:w="1"/><text x="51.9797%" y="623.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7297%" y="597" width="0.0805%" height="15" fill="rgb(209,207,12)" fg:x="643" fg:w="1"/><text x="51.9797%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7297%" y="581" width="0.0805%" height="15" fill="rgb(207,3,46)" fg:x="643" fg:w="1"/><text x="51.9797%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="51.7297%" y="565" width="0.0805%" height="15" fill="rgb(232,45,53)" fg:x="643" fg:w="1"/><text x="51.9797%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="51.7297%" y="549" width="0.0805%" height="15" fill="rgb(206,140,15)" fg:x="643" fg:w="1"/><text x="51.9797%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="51.7297%" y="533" width="0.0805%" height="15" fill="rgb(245,66,17)" fg:x="643" fg:w="1"/><text x="51.9797%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="51.7297%" y="517" width="0.0805%" height="15" fill="rgb(221,25,37)" fg:x="643" fg:w="1"/><text x="51.9797%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7297%" y="501" width="0.0805%" height="15" fill="rgb(215,99,47)" fg:x="643" fg:w="1"/><text x="51.9797%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="51.7297%" y="485" width="0.0805%" height="15" fill="rgb(219,154,44)" fg:x="643" fg:w="1"/><text x="51.9797%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="51.7297%" y="469" width="0.0805%" height="15" fill="rgb(210,197,36)" fg:x="643" fg:w="1"/><text x="51.9797%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.7297%" y="453" width="0.0805%" height="15" fill="rgb(217,137,10)" fg:x="643" fg:w="1"/><text x="51.9797%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.7297%" y="437" width="0.0805%" height="15" fill="rgb(240,216,26)" fg:x="643" fg:w="1"/><text x="51.9797%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.7297%" y="421" width="0.0805%" height="15" fill="rgb(242,76,17)" fg:x="643" fg:w="1"/><text x="51.9797%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="51.7297%" y="405" width="0.0805%" height="15" fill="rgb(243,142,51)" fg:x="643" fg:w="1"/><text x="51.9797%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (31 samples, 2.49%)</title><rect x="49.4771%" y="645" width="2.4940%" height="15" fill="rgb(233,109,46)" fg:x="615" fg:w="31"/><text x="49.7271%" y="655.50">&lt;e..</text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="51.8101%" y="629" width="0.1609%" height="15" fill="rgb(252,45,32)" fg:x="644" fg:w="2"/><text x="52.0601%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="51.9710%" y="469" width="0.0805%" height="15" fill="rgb(210,69,52)" fg:x="646" fg:w="1"/><text x="52.2210%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="51.9710%" y="453" width="0.0805%" height="15" fill="rgb(242,30,2)" fg:x="646" fg:w="1"/><text x="52.2210%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="51.9710%" y="437" width="0.0805%" height="15" fill="rgb(246,137,1)" fg:x="646" fg:w="1"/><text x="52.2210%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="51.9710%" y="421" width="0.0805%" height="15" fill="rgb(221,205,25)" fg:x="646" fg:w="1"/><text x="52.2210%" y="431.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.9710%" y="645" width="0.1609%" height="15" fill="rgb(224,44,43)" fg:x="646" fg:w="2"/><text x="52.2210%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.9710%" y="629" width="0.1609%" height="15" fill="rgb(209,81,13)" fg:x="646" fg:w="2"/><text x="52.2210%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="51.9710%" y="613" width="0.1609%" height="15" fill="rgb(227,88,4)" fg:x="646" fg:w="2"/><text x="52.2210%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.9710%" y="597" width="0.1609%" height="15" fill="rgb(228,118,49)" fg:x="646" fg:w="2"/><text x="52.2210%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.9710%" y="581" width="0.1609%" height="15" fill="rgb(225,215,27)" fg:x="646" fg:w="2"/><text x="52.2210%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="51.9710%" y="565" width="0.1609%" height="15" fill="rgb(235,226,1)" fg:x="646" fg:w="2"/><text x="52.2210%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="51.9710%" y="549" width="0.1609%" height="15" fill="rgb(205,107,17)" fg:x="646" fg:w="2"/><text x="52.2210%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="51.9710%" y="533" width="0.1609%" height="15" fill="rgb(247,85,8)" fg:x="646" fg:w="2"/><text x="52.2210%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.9710%" y="517" width="0.1609%" height="15" fill="rgb(230,220,20)" fg:x="646" fg:w="2"/><text x="52.2210%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="51.9710%" y="501" width="0.1609%" height="15" fill="rgb(237,22,6)" fg:x="646" fg:w="2"/><text x="52.2210%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="51.9710%" y="485" width="0.1609%" height="15" fill="rgb(253,39,1)" fg:x="646" fg:w="2"/><text x="52.2210%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="52.0515%" y="469" width="0.0805%" height="15" fill="rgb(251,206,50)" fg:x="647" fg:w="1"/><text x="52.3015%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="52.0515%" y="453" width="0.0805%" height="15" fill="rgb(239,162,11)" fg:x="647" fg:w="1"/><text x="52.3015%" y="463.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="52.1319%" y="645" width="0.0805%" height="15" fill="rgb(234,164,6)" fg:x="648" fg:w="1"/><text x="52.3819%" y="655.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="52.2124%" y="645" width="0.0805%" height="15" fill="rgb(238,112,10)" fg:x="649" fg:w="1"/><text x="52.4624%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="52.2124%" y="629" width="0.0805%" height="15" fill="rgb(232,78,29)" fg:x="649" fg:w="1"/><text x="52.4624%" y="639.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (39 samples, 3.14%)</title><rect x="49.3162%" y="693" width="3.1376%" height="15" fill="rgb(232,20,13)" fg:x="613" fg:w="39"/><text x="49.5662%" y="703.50">&lt;pl..</text></g><g><title>kernel::model::entry::Entry::scope (38 samples, 3.06%)</title><rect x="49.3966%" y="677" width="3.0571%" height="15" fill="rgb(222,175,9)" fg:x="614" fg:w="38"/><text x="49.6466%" y="687.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (37 samples, 2.98%)</title><rect x="49.4771%" y="661" width="2.9767%" height="15" fill="rgb(233,61,14)" fg:x="615" fg:w="37"/><text x="49.7271%" y="671.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.2928%" y="645" width="0.1609%" height="15" fill="rgb(224,152,29)" fg:x="650" fg:w="2"/><text x="52.5428%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="52.2928%" y="629" width="0.1609%" height="15" fill="rgb(232,26,6)" fg:x="650" fg:w="2"/><text x="52.5428%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="52.2928%" y="613" width="0.1609%" height="15" fill="rgb(210,116,11)" fg:x="650" fg:w="2"/><text x="52.5428%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="52.3733%" y="597" width="0.0805%" height="15" fill="rgb(238,213,15)" fg:x="651" fg:w="1"/><text x="52.6233%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="52.3733%" y="581" width="0.0805%" height="15" fill="rgb(236,177,32)" fg:x="651" fg:w="1"/><text x="52.6233%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="52.5342%" y="645" width="0.0805%" height="15" fill="rgb(230,36,43)" fg:x="653" fg:w="1"/><text x="52.7842%" y="655.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="52.5342%" y="629" width="0.0805%" height="15" fill="rgb(212,76,23)" fg:x="653" fg:w="1"/><text x="52.7842%" y="639.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5342%" y="613" width="0.0805%" height="15" fill="rgb(225,168,24)" fg:x="653" fg:w="1"/><text x="52.7842%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5342%" y="597" width="0.0805%" height="15" fill="rgb(206,40,44)" fg:x="653" fg:w="1"/><text x="52.7842%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.5342%" y="581" width="0.0805%" height="15" fill="rgb(251,213,6)" fg:x="653" fg:w="1"/><text x="52.7842%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.5342%" y="565" width="0.0805%" height="15" fill="rgb(220,7,47)" fg:x="653" fg:w="1"/><text x="52.7842%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.5342%" y="549" width="0.0805%" height="15" fill="rgb(254,130,53)" fg:x="653" fg:w="1"/><text x="52.7842%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.5342%" y="533" width="0.0805%" height="15" fill="rgb(240,2,46)" fg:x="653" fg:w="1"/><text x="52.7842%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5342%" y="517" width="0.0805%" height="15" fill="rgb(252,144,40)" fg:x="653" fg:w="1"/><text x="52.7842%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.5342%" y="501" width="0.0805%" height="15" fill="rgb(226,23,10)" fg:x="653" fg:w="1"/><text x="52.7842%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.5342%" y="485" width="0.0805%" height="15" fill="rgb(212,204,35)" fg:x="653" fg:w="1"/><text x="52.7842%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.5342%" y="469" width="0.0805%" height="15" fill="rgb(218,201,15)" fg:x="653" fg:w="1"/><text x="52.7842%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.5342%" y="453" width="0.0805%" height="15" fill="rgb(224,197,5)" fg:x="653" fg:w="1"/><text x="52.7842%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.5342%" y="437" width="0.0805%" height="15" fill="rgb(224,185,18)" fg:x="653" fg:w="1"/><text x="52.7842%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.5342%" y="421" width="0.0805%" height="15" fill="rgb(251,71,45)" fg:x="653" fg:w="1"/><text x="52.7842%" y="431.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (42 samples, 3.38%)</title><rect x="49.3162%" y="709" width="3.3789%" height="15" fill="rgb(216,74,24)" fg:x="613" fg:w="42"/><text x="49.5662%" y="719.50">&lt;en..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_world (3 samples, 0.24%)</title><rect x="52.4537%" y="693" width="0.2414%" height="15" fill="rgb(250,36,51)" fg:x="652" fg:w="3"/><text x="52.7037%" y="703.50"></text></g><g><title>kernel::model::entry::EntryResolver::world (3 samples, 0.24%)</title><rect x="52.4537%" y="677" width="0.2414%" height="15" fill="rgb(209,224,28)" fg:x="652" fg:w="3"/><text x="52.7037%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="52.5342%" y="661" width="0.1609%" height="15" fill="rgb(228,5,10)" fg:x="653" fg:w="2"/><text x="52.7842%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="52.6146%" y="645" width="0.0805%" height="15" fill="rgb(250,57,40)" fg:x="654" fg:w="1"/><text x="52.8646%" y="655.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="52.6146%" y="629" width="0.0805%" height="15" fill="rgb(228,194,41)" fg:x="654" fg:w="1"/><text x="52.8646%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="613" width="0.0805%" height="15" fill="rgb(206,68,23)" fg:x="654" fg:w="1"/><text x="52.8646%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.6146%" y="597" width="0.0805%" height="15" fill="rgb(230,33,29)" fg:x="654" fg:w="1"/><text x="52.8646%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="581" width="0.0805%" height="15" fill="rgb(210,39,32)" fg:x="654" fg:w="1"/><text x="52.8646%" y="591.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="565" width="0.0805%" height="15" fill="rgb(236,89,23)" fg:x="654" fg:w="1"/><text x="52.8646%" y="575.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="549" width="0.0805%" height="15" fill="rgb(218,52,52)" fg:x="654" fg:w="1"/><text x="52.8646%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.6146%" y="533" width="0.0805%" height="15" fill="rgb(235,154,5)" fg:x="654" fg:w="1"/><text x="52.8646%" y="543.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="517" width="0.0805%" height="15" fill="rgb(223,168,9)" fg:x="654" fg:w="1"/><text x="52.8646%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="501" width="0.0805%" height="15" fill="rgb(220,8,33)" fg:x="654" fg:w="1"/><text x="52.8646%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="485" width="0.0805%" height="15" fill="rgb(216,176,3)" fg:x="654" fg:w="1"/><text x="52.8646%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.6146%" y="469" width="0.0805%" height="15" fill="rgb(254,150,22)" fg:x="654" fg:w="1"/><text x="52.8646%" y="479.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="453" width="0.0805%" height="15" fill="rgb(231,61,53)" fg:x="654" fg:w="1"/><text x="52.8646%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="437" width="0.0805%" height="15" fill="rgb(249,177,41)" fg:x="654" fg:w="1"/><text x="52.8646%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="421" width="0.0805%" height="15" fill="rgb(221,122,7)" fg:x="654" fg:w="1"/><text x="52.8646%" y="431.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="52.6146%" y="405" width="0.0805%" height="15" fill="rgb(215,115,7)" fg:x="654" fg:w="1"/><text x="52.8646%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="52.6146%" y="389" width="0.0805%" height="15" fill="rgb(218,108,33)" fg:x="654" fg:w="1"/><text x="52.8646%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.6146%" y="373" width="0.0805%" height="15" fill="rgb(221,205,39)" fg:x="654" fg:w="1"/><text x="52.8646%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="52.6146%" y="357" width="0.0805%" height="15" fill="rgb(220,171,18)" fg:x="654" fg:w="1"/><text x="52.8646%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="52.6146%" y="341" width="0.0805%" height="15" fill="rgb(236,188,29)" fg:x="654" fg:w="1"/><text x="52.8646%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="52.6146%" y="325" width="0.0805%" height="15" fill="rgb(239,29,5)" fg:x="654" fg:w="1"/><text x="52.8646%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="52.6146%" y="309" width="0.0805%" height="15" fill="rgb(236,114,44)" fg:x="654" fg:w="1"/><text x="52.8646%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="52.6146%" y="293" width="0.0805%" height="15" fill="rgb(239,214,48)" fg:x="654" fg:w="1"/><text x="52.8646%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.6146%" y="277" width="0.0805%" height="15" fill="rgb(241,56,8)" fg:x="654" fg:w="1"/><text x="52.8646%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="52.6146%" y="261" width="0.0805%" height="15" fill="rgb(228,201,0)" fg:x="654" fg:w="1"/><text x="52.8646%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="52.6146%" y="245" width="0.0805%" height="15" fill="rgb(226,219,34)" fg:x="654" fg:w="1"/><text x="52.8646%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="52.6146%" y="229" width="0.0805%" height="15" fill="rgb(209,204,54)" fg:x="654" fg:w="1"/><text x="52.8646%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="52.6146%" y="213" width="0.0805%" height="15" fill="rgb(251,160,17)" fg:x="654" fg:w="1"/><text x="52.8646%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="52.6146%" y="197" width="0.0805%" height="15" fill="rgb(235,15,25)" fg:x="654" fg:w="1"/><text x="52.8646%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="52.6146%" y="181" width="0.0805%" height="15" fill="rgb(216,209,28)" fg:x="654" fg:w="1"/><text x="52.8646%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="52.6146%" y="165" width="0.0805%" height="15" fill="rgb(248,123,21)" fg:x="654" fg:w="1"/><text x="52.8646%" y="175.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="52.6146%" y="149" width="0.0805%" height="15" fill="rgb(226,138,44)" fg:x="654" fg:w="1"/><text x="52.8646%" y="159.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6951%" y="709" width="0.0805%" height="15" fill="rgb(211,104,54)" fg:x="655" fg:w="1"/><text x="52.9451%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6951%" y="693" width="0.0805%" height="15" fill="rgb(241,198,15)" fg:x="655" fg:w="1"/><text x="52.9451%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.6951%" y="677" width="0.0805%" height="15" fill="rgb(227,155,54)" fg:x="655" fg:w="1"/><text x="52.9451%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.6951%" y="661" width="0.0805%" height="15" fill="rgb(225,131,31)" fg:x="655" fg:w="1"/><text x="52.9451%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.6951%" y="645" width="0.0805%" height="15" fill="rgb(242,40,17)" fg:x="655" fg:w="1"/><text x="52.9451%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.6951%" y="629" width="0.0805%" height="15" fill="rgb(254,57,35)" fg:x="655" fg:w="1"/><text x="52.9451%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6951%" y="613" width="0.0805%" height="15" fill="rgb(240,64,32)" fg:x="655" fg:w="1"/><text x="52.9451%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.6951%" y="597" width="0.0805%" height="15" fill="rgb(251,136,26)" fg:x="655" fg:w="1"/><text x="52.9451%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.6951%" y="581" width="0.0805%" height="15" fill="rgb(208,60,54)" fg:x="655" fg:w="1"/><text x="52.9451%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.6951%" y="565" width="0.0805%" height="15" fill="rgb(220,13,12)" fg:x="655" fg:w="1"/><text x="52.9451%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.6951%" y="549" width="0.0805%" height="15" fill="rgb(213,149,1)" fg:x="655" fg:w="1"/><text x="52.9451%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.6951%" y="533" width="0.0805%" height="15" fill="rgb(212,191,39)" fg:x="655" fg:w="1"/><text x="52.9451%" y="543.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="52.6951%" y="517" width="0.0805%" height="15" fill="rgb(215,221,42)" fg:x="655" fg:w="1"/><text x="52.9451%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="52.6951%" y="501" width="0.0805%" height="15" fill="rgb(244,79,23)" fg:x="655" fg:w="1"/><text x="52.9451%" y="511.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="53.0169%" y="549" width="0.0805%" height="15" fill="rgb(247,17,29)" fg:x="659" fg:w="1"/><text x="53.2669%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="53.0169%" y="533" width="0.0805%" height="15" fill="rgb(251,221,21)" fg:x="659" fg:w="1"/><text x="53.2669%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="53.0169%" y="517" width="0.0805%" height="15" fill="rgb(207,202,34)" fg:x="659" fg:w="1"/><text x="53.2669%" y="527.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="53.0169%" y="501" width="0.0805%" height="15" fill="rgb(217,4,34)" fg:x="659" fg:w="1"/><text x="53.2669%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="53.0169%" y="485" width="0.0805%" height="15" fill="rgb(253,17,16)" fg:x="659" fg:w="1"/><text x="53.2669%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="53.0169%" y="469" width="0.0805%" height="15" fill="rgb(223,91,48)" fg:x="659" fg:w="1"/><text x="53.2669%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0973%" y="501" width="0.0805%" height="15" fill="rgb(244,191,22)" fg:x="660" fg:w="1"/><text x="53.3473%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0973%" y="485" width="0.0805%" height="15" fill="rgb(211,107,14)" fg:x="660" fg:w="1"/><text x="53.3473%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0973%" y="469" width="0.0805%" height="15" fill="rgb(232,81,23)" fg:x="660" fg:w="1"/><text x="53.3473%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.0973%" y="453" width="0.0805%" height="15" fill="rgb(237,126,14)" fg:x="660" fg:w="1"/><text x="53.3473%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.0973%" y="437" width="0.0805%" height="15" fill="rgb(230,65,39)" fg:x="660" fg:w="1"/><text x="53.3473%" y="447.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::desc (2 samples, 0.16%)</title><rect x="53.0973%" y="549" width="0.1609%" height="15" fill="rgb(208,106,41)" fg:x="660" fg:w="2"/><text x="53.3473%" y="559.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="53.0973%" y="533" width="0.1609%" height="15" fill="rgb(206,125,25)" fg:x="660" fg:w="2"/><text x="53.3473%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.0973%" y="517" width="0.1609%" height="15" fill="rgb(250,24,29)" fg:x="660" fg:w="2"/><text x="53.3473%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1778%" y="501" width="0.0805%" height="15" fill="rgb(226,49,32)" fg:x="661" fg:w="1"/><text x="53.4278%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1778%" y="485" width="0.0805%" height="15" fill="rgb(217,110,16)" fg:x="661" fg:w="1"/><text x="53.4278%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1778%" y="469" width="0.0805%" height="15" fill="rgb(252,16,53)" fg:x="661" fg:w="1"/><text x="53.4278%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1778%" y="453" width="0.0805%" height="15" fill="rgb(238,163,11)" fg:x="661" fg:w="1"/><text x="53.4278%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.1778%" y="437" width="0.0805%" height="15" fill="rgb(206,210,1)" fg:x="661" fg:w="1"/><text x="53.4278%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1778%" y="421" width="0.0805%" height="15" fill="rgb(229,8,25)" fg:x="661" fg:w="1"/><text x="53.4278%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1778%" y="405" width="0.0805%" height="15" fill="rgb(247,155,23)" fg:x="661" fg:w="1"/><text x="53.4278%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1778%" y="389" width="0.0805%" height="15" fill="rgb(207,26,7)" fg:x="661" fg:w="1"/><text x="53.4278%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.1778%" y="373" width="0.0805%" height="15" fill="rgb(215,179,12)" fg:x="661" fg:w="1"/><text x="53.4278%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.1778%" y="357" width="0.0805%" height="15" fill="rgb(238,208,11)" fg:x="661" fg:w="1"/><text x="53.4278%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="53.1778%" y="341" width="0.0805%" height="15" fill="rgb(238,102,42)" fg:x="661" fg:w="1"/><text x="53.4278%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3387%" y="501" width="0.0805%" height="15" fill="rgb(239,35,9)" fg:x="663" fg:w="1"/><text x="53.5887%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3387%" y="485" width="0.0805%" height="15" fill="rgb(244,182,30)" fg:x="663" fg:w="1"/><text x="53.5887%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3387%" y="469" width="0.0805%" height="15" fill="rgb(232,181,23)" fg:x="663" fg:w="1"/><text x="53.5887%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3387%" y="453" width="0.0805%" height="15" fill="rgb(242,154,29)" fg:x="663" fg:w="1"/><text x="53.5887%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="53.3387%" y="437" width="0.0805%" height="15" fill="rgb(219,23,2)" fg:x="663" fg:w="1"/><text x="53.5887%" y="447.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (7 samples, 0.56%)</title><rect x="52.9364%" y="565" width="0.5632%" height="15" fill="rgb(234,94,43)" fg:x="658" fg:w="7"/><text x="53.1864%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="53.2582%" y="549" width="0.2414%" height="15" fill="rgb(223,55,45)" fg:x="662" fg:w="3"/><text x="53.5082%" y="559.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="53.2582%" y="533" width="0.2414%" height="15" fill="rgb(241,215,54)" fg:x="662" fg:w="3"/><text x="53.5082%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="53.3387%" y="517" width="0.1609%" height="15" fill="rgb(247,63,53)" fg:x="663" fg:w="2"/><text x="53.5887%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.4191%" y="501" width="0.0805%" height="15" fill="rgb(220,166,7)" fg:x="664" fg:w="1"/><text x="53.6691%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4191%" y="485" width="0.0805%" height="15" fill="rgb(248,53,45)" fg:x="664" fg:w="1"/><text x="53.6691%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.4191%" y="469" width="0.0805%" height="15" fill="rgb(224,207,20)" fg:x="664" fg:w="1"/><text x="53.6691%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4191%" y="453" width="0.0805%" height="15" fill="rgb(244,185,11)" fg:x="664" fg:w="1"/><text x="53.6691%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="53.4191%" y="437" width="0.0805%" height="15" fill="rgb(230,13,42)" fg:x="664" fg:w="1"/><text x="53.6691%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4191%" y="421" width="0.0805%" height="15" fill="rgb(243,191,18)" fg:x="664" fg:w="1"/><text x="53.6691%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="53.4191%" y="405" width="0.0805%" height="15" fill="rgb(249,135,15)" fg:x="664" fg:w="1"/><text x="53.6691%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="53.4191%" y="389" width="0.0805%" height="15" fill="rgb(229,26,35)" fg:x="664" fg:w="1"/><text x="53.6691%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="53.6605%" y="533" width="0.0805%" height="15" fill="rgb(216,191,16)" fg:x="667" fg:w="1"/><text x="53.9105%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="53.7409%" y="533" width="0.0805%" height="15" fill="rgb(242,18,7)" fg:x="668" fg:w="1"/><text x="53.9909%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="53.7409%" y="517" width="0.0805%" height="15" fill="rgb(205,128,17)" fg:x="668" fg:w="1"/><text x="53.9909%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8214%" y="517" width="0.0805%" height="15" fill="rgb(229,199,44)" fg:x="669" fg:w="1"/><text x="54.0714%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8214%" y="501" width="0.0805%" height="15" fill="rgb(234,222,3)" fg:x="669" fg:w="1"/><text x="54.0714%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8214%" y="485" width="0.0805%" height="15" fill="rgb(220,170,20)" fg:x="669" fg:w="1"/><text x="54.0714%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.8214%" y="469" width="0.0805%" height="15" fill="rgb(207,138,8)" fg:x="669" fg:w="1"/><text x="54.0714%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.8214%" y="453" width="0.0805%" height="15" fill="rgb(244,130,36)" fg:x="669" fg:w="1"/><text x="54.0714%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.8214%" y="437" width="0.0805%" height="15" fill="rgb(207,197,52)" fg:x="669" fg:w="1"/><text x="54.0714%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.8214%" y="421" width="0.0805%" height="15" fill="rgb(206,9,21)" fg:x="669" fg:w="1"/><text x="54.0714%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8214%" y="405" width="0.0805%" height="15" fill="rgb(250,15,47)" fg:x="669" fg:w="1"/><text x="54.0714%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="53.8214%" y="389" width="0.0805%" height="15" fill="rgb(235,202,14)" fg:x="669" fg:w="1"/><text x="54.0714%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="53.8214%" y="373" width="0.0805%" height="15" fill="rgb(211,180,47)" fg:x="669" fg:w="1"/><text x="54.0714%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="53.8214%" y="357" width="0.0805%" height="15" fill="rgb(209,61,11)" fg:x="669" fg:w="1"/><text x="54.0714%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="53.8214%" y="341" width="0.0805%" height="15" fill="rgb(243,197,29)" fg:x="669" fg:w="1"/><text x="54.0714%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="53.8214%" y="325" width="0.0805%" height="15" fill="rgb(216,185,16)" fg:x="669" fg:w="1"/><text x="54.0714%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.8214%" y="309" width="0.0805%" height="15" fill="rgb(248,5,15)" fg:x="669" fg:w="1"/><text x="54.0714%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="53.9019%" y="517" width="0.1609%" height="15" fill="rgb(240,39,41)" fg:x="670" fg:w="2"/><text x="54.1519%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="53.9019%" y="501" width="0.1609%" height="15" fill="rgb(224,220,43)" fg:x="670" fg:w="2"/><text x="54.1519%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="53.9019%" y="485" width="0.1609%" height="15" fill="rgb(215,21,24)" fg:x="670" fg:w="2"/><text x="54.1519%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="54.0628%" y="501" width="0.1609%" height="15" fill="rgb(220,102,8)" fg:x="672" fg:w="2"/><text x="54.3128%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="54.0628%" y="485" width="0.1609%" height="15" fill="rgb(225,185,10)" fg:x="672" fg:w="2"/><text x="54.3128%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="54.1432%" y="469" width="0.0805%" height="15" fill="rgb(212,108,24)" fg:x="673" fg:w="1"/><text x="54.3932%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.1432%" y="453" width="0.0805%" height="15" fill="rgb(237,27,0)" fg:x="673" fg:w="1"/><text x="54.3932%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="54.1432%" y="437" width="0.0805%" height="15" fill="rgb(212,106,38)" fg:x="673" fg:w="1"/><text x="54.3932%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="54.1432%" y="421" width="0.0805%" height="15" fill="rgb(210,125,30)" fg:x="673" fg:w="1"/><text x="54.3932%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="54.1432%" y="405" width="0.0805%" height="15" fill="rgb(215,219,1)" fg:x="673" fg:w="1"/><text x="54.3932%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="54.1432%" y="389" width="0.0805%" height="15" fill="rgb(223,10,12)" fg:x="673" fg:w="1"/><text x="54.3932%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.1432%" y="373" width="0.0805%" height="15" fill="rgb(245,40,34)" fg:x="673" fg:w="1"/><text x="54.3932%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="54.1432%" y="357" width="0.0805%" height="15" fill="rgb(211,185,19)" fg:x="673" fg:w="1"/><text x="54.3932%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="54.1432%" y="341" width="0.0805%" height="15" fill="rgb(243,190,43)" fg:x="673" fg:w="1"/><text x="54.3932%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="54.1432%" y="325" width="0.0805%" height="15" fill="rgb(232,208,29)" fg:x="673" fg:w="1"/><text x="54.3932%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="54.1432%" y="309" width="0.0805%" height="15" fill="rgb(234,134,27)" fg:x="673" fg:w="1"/><text x="54.3932%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="54.1432%" y="293" width="0.0805%" height="15" fill="rgb(225,41,29)" fg:x="673" fg:w="1"/><text x="54.3932%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.1432%" y="277" width="0.0805%" height="15" fill="rgb(241,214,44)" fg:x="673" fg:w="1"/><text x="54.3932%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.3846%" y="229" width="0.0805%" height="15" fill="rgb(205,219,41)" fg:x="676" fg:w="1"/><text x="54.6346%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.3846%" y="469" width="0.1609%" height="15" fill="rgb(226,15,26)" fg:x="676" fg:w="2"/><text x="54.6346%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.3846%" y="453" width="0.1609%" height="15" fill="rgb(210,83,41)" fg:x="676" fg:w="2"/><text x="54.6346%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.3846%" y="437" width="0.1609%" height="15" fill="rgb(247,9,39)" fg:x="676" fg:w="2"/><text x="54.6346%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="54.3846%" y="421" width="0.1609%" height="15" fill="rgb(209,37,30)" fg:x="676" fg:w="2"/><text x="54.6346%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.3846%" y="405" width="0.1609%" height="15" fill="rgb(248,170,46)" fg:x="676" fg:w="2"/><text x="54.6346%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="54.3846%" y="389" width="0.1609%" height="15" fill="rgb(237,129,44)" fg:x="676" fg:w="2"/><text x="54.6346%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="54.3846%" y="373" width="0.1609%" height="15" fill="rgb(225,117,51)" fg:x="676" fg:w="2"/><text x="54.6346%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="54.3846%" y="357" width="0.1609%" height="15" fill="rgb(212,165,2)" fg:x="676" fg:w="2"/><text x="54.6346%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="54.3846%" y="341" width="0.1609%" height="15" fill="rgb(213,53,45)" fg:x="676" fg:w="2"/><text x="54.6346%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.3846%" y="325" width="0.1609%" height="15" fill="rgb(220,148,3)" fg:x="676" fg:w="2"/><text x="54.6346%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.3846%" y="309" width="0.1609%" height="15" fill="rgb(228,37,29)" fg:x="676" fg:w="2"/><text x="54.6346%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.3846%" y="293" width="0.1609%" height="15" fill="rgb(209,76,29)" fg:x="676" fg:w="2"/><text x="54.6346%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.3846%" y="277" width="0.1609%" height="15" fill="rgb(215,90,5)" fg:x="676" fg:w="2"/><text x="54.6346%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.3846%" y="261" width="0.1609%" height="15" fill="rgb(227,207,32)" fg:x="676" fg:w="2"/><text x="54.6346%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.3846%" y="245" width="0.1609%" height="15" fill="rgb(251,218,44)" fg:x="676" fg:w="2"/><text x="54.6346%" y="255.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="54.4650%" y="229" width="0.0805%" height="15" fill="rgb(211,44,16)" fg:x="677" fg:w="1"/><text x="54.7150%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="54.4650%" y="213" width="0.0805%" height="15" fill="rgb(242,170,37)" fg:x="677" fg:w="1"/><text x="54.7150%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="54.5455%" y="389" width="0.0805%" height="15" fill="rgb(205,181,22)" fg:x="678" fg:w="1"/><text x="54.7955%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="54.7064%" y="341" width="0.0805%" height="15" fill="rgb(228,130,19)" fg:x="680" fg:w="1"/><text x="54.9564%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.0282%" y="213" width="0.0805%" height="15" fill="rgb(228,9,15)" fg:x="684" fg:w="1"/><text x="55.2782%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9477%" y="277" width="0.2414%" height="15" fill="rgb(219,66,48)" fg:x="683" fg:w="3"/><text x="55.1977%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9477%" y="261" width="0.2414%" height="15" fill="rgb(234,203,10)" fg:x="683" fg:w="3"/><text x="55.1977%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="54.9477%" y="245" width="0.2414%" height="15" fill="rgb(219,209,1)" fg:x="683" fg:w="3"/><text x="55.1977%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="55.0282%" y="229" width="0.1609%" height="15" fill="rgb(206,167,9)" fg:x="684" fg:w="2"/><text x="55.2782%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1086%" y="213" width="0.0805%" height="15" fill="rgb(210,11,39)" fg:x="685" fg:w="1"/><text x="55.3586%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.1086%" y="197" width="0.0805%" height="15" fill="rgb(251,90,47)" fg:x="685" fg:w="1"/><text x="55.3586%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.1086%" y="181" width="0.0805%" height="15" fill="rgb(237,7,4)" fg:x="685" fg:w="1"/><text x="55.3586%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.1086%" y="165" width="0.0805%" height="15" fill="rgb(232,205,47)" fg:x="685" fg:w="1"/><text x="55.3586%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.1086%" y="149" width="0.0805%" height="15" fill="rgb(215,86,48)" fg:x="685" fg:w="1"/><text x="55.3586%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1086%" y="133" width="0.0805%" height="15" fill="rgb(232,14,47)" fg:x="685" fg:w="1"/><text x="55.3586%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1086%" y="117" width="0.0805%" height="15" fill="rgb(240,28,46)" fg:x="685" fg:w="1"/><text x="55.3586%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.1086%" y="101" width="0.0805%" height="15" fill="rgb(224,85,5)" fg:x="685" fg:w="1"/><text x="55.3586%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.1086%" y="85" width="0.0805%" height="15" fill="rgb(219,34,25)" fg:x="685" fg:w="1"/><text x="55.3586%" y="95.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.1086%" y="69" width="0.0805%" height="15" fill="rgb(247,137,45)" fg:x="685" fg:w="1"/><text x="55.3586%" y="79.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.1086%" y="53" width="0.0805%" height="15" fill="rgb(237,121,47)" fg:x="685" fg:w="1"/><text x="55.3586%" y="63.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1086%" y="37" width="0.0805%" height="15" fill="rgb(247,148,27)" fg:x="685" fg:w="1"/><text x="55.3586%" y="47.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (8 samples, 0.64%)</title><rect x="54.7064%" y="357" width="0.6436%" height="15" fill="rgb(220,44,0)" fg:x="680" fg:w="8"/><text x="54.9564%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (7 samples, 0.56%)</title><rect x="54.7868%" y="341" width="0.5632%" height="15" fill="rgb(236,61,29)" fg:x="681" fg:w="7"/><text x="55.0368%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="54.8673%" y="325" width="0.4827%" height="15" fill="rgb(244,180,35)" fg:x="682" fg:w="6"/><text x="55.1173%" y="335.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="54.8673%" y="309" width="0.4827%" height="15" fill="rgb(242,14,54)" fg:x="682" fg:w="6"/><text x="55.1173%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="54.8673%" y="293" width="0.4827%" height="15" fill="rgb(206,24,45)" fg:x="682" fg:w="6"/><text x="55.1173%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="55.1891%" y="277" width="0.1609%" height="15" fill="rgb(215,211,6)" fg:x="686" fg:w="2"/><text x="55.4391%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2695%" y="261" width="0.0805%" height="15" fill="rgb(207,56,2)" fg:x="687" fg:w="1"/><text x="55.5195%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.2695%" y="245" width="0.0805%" height="15" fill="rgb(220,135,9)" fg:x="687" fg:w="1"/><text x="55.5195%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2695%" y="229" width="0.0805%" height="15" fill="rgb(214,145,52)" fg:x="687" fg:w="1"/><text x="55.5195%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.2695%" y="213" width="0.0805%" height="15" fill="rgb(241,83,53)" fg:x="687" fg:w="1"/><text x="55.5195%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.2695%" y="197" width="0.0805%" height="15" fill="rgb(222,66,13)" fg:x="687" fg:w="1"/><text x="55.5195%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.2695%" y="181" width="0.0805%" height="15" fill="rgb(239,164,54)" fg:x="687" fg:w="1"/><text x="55.5195%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="55.2695%" y="165" width="0.0805%" height="15" fill="rgb(216,189,13)" fg:x="687" fg:w="1"/><text x="55.5195%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3500%" y="293" width="0.1609%" height="15" fill="rgb(228,212,51)" fg:x="688" fg:w="2"/><text x="55.6000%" y="303.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="55.3500%" y="277" width="0.1609%" height="15" fill="rgb(207,190,21)" fg:x="688" fg:w="2"/><text x="55.6000%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="55.4304%" y="261" width="0.0805%" height="15" fill="rgb(245,28,35)" fg:x="689" fg:w="1"/><text x="55.6804%" y="271.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="55.5913%" y="261" width="0.0805%" height="15" fill="rgb(239,23,40)" fg:x="691" fg:w="1"/><text x="55.8413%" y="271.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.6718%" y="261" width="0.0805%" height="15" fill="rgb(242,10,51)" fg:x="692" fg:w="1"/><text x="55.9218%" y="271.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.6718%" y="245" width="0.0805%" height="15" fill="rgb(207,186,5)" fg:x="692" fg:w="1"/><text x="55.9218%" y="255.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="55.7522%" y="197" width="0.1609%" height="15" fill="rgb(242,21,16)" fg:x="693" fg:w="2"/><text x="56.0022%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.8327%" y="181" width="0.0805%" height="15" fill="rgb(237,0,53)" fg:x="694" fg:w="1"/><text x="56.0827%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9131%" y="181" width="0.0805%" height="15" fill="rgb(215,8,52)" fg:x="695" fg:w="1"/><text x="56.1631%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.9131%" y="165" width="0.0805%" height="15" fill="rgb(248,62,44)" fg:x="695" fg:w="1"/><text x="56.1631%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9131%" y="149" width="0.0805%" height="15" fill="rgb(224,83,15)" fg:x="695" fg:w="1"/><text x="56.1631%" y="159.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.9131%" y="133" width="0.0805%" height="15" fill="rgb(249,100,46)" fg:x="695" fg:w="1"/><text x="56.1631%" y="143.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.9131%" y="117" width="0.0805%" height="15" fill="rgb(213,35,48)" fg:x="695" fg:w="1"/><text x="56.1631%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="55.7522%" y="213" width="0.3218%" height="15" fill="rgb(251,2,13)" fg:x="693" fg:w="4"/><text x="56.0022%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.9131%" y="197" width="0.1609%" height="15" fill="rgb(212,132,21)" fg:x="695" fg:w="2"/><text x="56.1631%" y="207.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="55.9936%" y="181" width="0.0805%" height="15" fill="rgb(247,17,21)" fg:x="696" fg:w="1"/><text x="56.2436%" y="191.50"></text></g><g><title>serde_json::de::from_trait (10 samples, 0.80%)</title><rect x="55.3500%" y="341" width="0.8045%" height="15" fill="rgb(220,177,38)" fg:x="688" fg:w="10"/><text x="55.6000%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="55.3500%" y="325" width="0.8045%" height="15" fill="rgb(233,219,21)" fg:x="688" fg:w="10"/><text x="55.6000%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="55.3500%" y="309" width="0.8045%" height="15" fill="rgb(246,17,7)" fg:x="688" fg:w="10"/><text x="55.6000%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8 samples, 0.64%)</title><rect x="55.5109%" y="293" width="0.6436%" height="15" fill="rgb(212,4,22)" fg:x="690" fg:w="8"/><text x="55.7609%" y="303.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="55.5109%" y="277" width="0.6436%" height="15" fill="rgb(243,85,21)" fg:x="690" fg:w="8"/><text x="55.7609%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="55.7522%" y="261" width="0.4023%" height="15" fill="rgb(232,218,2)" fg:x="693" fg:w="5"/><text x="56.0022%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="55.7522%" y="245" width="0.4023%" height="15" fill="rgb(253,168,47)" fg:x="693" fg:w="5"/><text x="56.0022%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="55.7522%" y="229" width="0.4023%" height="15" fill="rgb(238,101,25)" fg:x="693" fg:w="5"/><text x="56.0022%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.0740%" y="213" width="0.0805%" height="15" fill="rgb(251,86,12)" fg:x="697" fg:w="1"/><text x="56.3240%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.0740%" y="197" width="0.0805%" height="15" fill="rgb(241,112,44)" fg:x="697" fg:w="1"/><text x="56.3240%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.0740%" y="181" width="0.0805%" height="15" fill="rgb(224,28,25)" fg:x="697" fg:w="1"/><text x="56.3240%" y="191.50"></text></g><g><title>serde_json::de::Deserializer&lt;R&gt;::parse_integer (1 samples, 0.08%)</title><rect x="56.0740%" y="165" width="0.0805%" height="15" fill="rgb(209,201,1)" fg:x="697" fg:w="1"/><text x="56.3240%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::size_hint (1 samples, 0.08%)</title><rect x="56.3154%" y="277" width="0.0805%" height="15" fill="rgb(231,30,22)" fg:x="700" fg:w="1"/><text x="56.5654%" y="287.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.3958%" y="229" width="0.0805%" height="15" fill="rgb(247,96,31)" fg:x="701" fg:w="1"/><text x="56.6458%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3958%" y="213" width="0.0805%" height="15" fill="rgb(251,100,12)" fg:x="701" fg:w="1"/><text x="56.6458%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.3958%" y="197" width="0.0805%" height="15" fill="rgb(224,174,7)" fg:x="701" fg:w="1"/><text x="56.6458%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3958%" y="181" width="0.0805%" height="15" fill="rgb(231,168,19)" fg:x="701" fg:w="1"/><text x="56.6458%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.3958%" y="165" width="0.0805%" height="15" fill="rgb(226,85,5)" fg:x="701" fg:w="1"/><text x="56.6458%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.3958%" y="149" width="0.0805%" height="15" fill="rgb(210,215,5)" fg:x="701" fg:w="1"/><text x="56.6458%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.3958%" y="133" width="0.0805%" height="15" fill="rgb(233,70,8)" fg:x="701" fg:w="1"/><text x="56.6458%" y="143.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="56.3958%" y="261" width="0.2414%" height="15" fill="rgb(229,109,53)" fg:x="701" fg:w="3"/><text x="56.6458%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.3958%" y="245" width="0.2414%" height="15" fill="rgb(213,125,35)" fg:x="701" fg:w="3"/><text x="56.6458%" y="255.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="56.4763%" y="229" width="0.1609%" height="15" fill="rgb(215,12,48)" fg:x="702" fg:w="2"/><text x="56.7263%" y="239.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5567%" y="213" width="0.0805%" height="15" fill="rgb(207,12,38)" fg:x="703" fg:w="1"/><text x="56.8067%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="56.5567%" y="197" width="0.0805%" height="15" fill="rgb(216,229,2)" fg:x="703" fg:w="1"/><text x="56.8067%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.5567%" y="181" width="0.0805%" height="15" fill="rgb(229,209,31)" fg:x="703" fg:w="1"/><text x="56.8067%" y="191.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7176%" y="213" width="0.0805%" height="15" fill="rgb(239,57,22)" fg:x="705" fg:w="1"/><text x="56.9676%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="56.6372%" y="261" width="0.2414%" height="15" fill="rgb(239,119,54)" fg:x="704" fg:w="3"/><text x="56.8872%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="56.6372%" y="245" width="0.2414%" height="15" fill="rgb(231,80,45)" fg:x="704" fg:w="3"/><text x="56.8872%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="56.7176%" y="229" width="0.1609%" height="15" fill="rgb(219,138,19)" fg:x="705" fg:w="2"/><text x="56.9676%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.7981%" y="213" width="0.0805%" height="15" fill="rgb(216,53,26)" fg:x="706" fg:w="1"/><text x="57.0481%" y="223.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="56.7981%" y="197" width="0.0805%" height="15" fill="rgb(224,30,16)" fg:x="706" fg:w="1"/><text x="57.0481%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.9590%" y="181" width="0.0805%" height="15" fill="rgb(224,151,24)" fg:x="708" fg:w="1"/><text x="57.2090%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.9590%" y="165" width="0.0805%" height="15" fill="rgb(236,75,7)" fg:x="708" fg:w="1"/><text x="57.2090%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (11 samples, 0.88%)</title><rect x="56.2349%" y="309" width="0.8850%" height="15" fill="rgb(248,106,42)" fg:x="699" fg:w="11"/><text x="56.4849%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (11 samples, 0.88%)</title><rect x="56.2349%" y="293" width="0.8850%" height="15" fill="rgb(222,217,11)" fg:x="699" fg:w="11"/><text x="56.4849%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="56.3958%" y="277" width="0.7241%" height="15" fill="rgb(234,143,31)" fg:x="701" fg:w="9"/><text x="56.6458%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="56.8785%" y="261" width="0.2414%" height="15" fill="rgb(237,148,28)" fg:x="707" fg:w="3"/><text x="57.1285%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.8785%" y="245" width="0.2414%" height="15" fill="rgb(241,151,6)" fg:x="707" fg:w="3"/><text x="57.1285%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.9590%" y="229" width="0.1609%" height="15" fill="rgb(226,55,18)" fg:x="708" fg:w="2"/><text x="57.2090%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.9590%" y="213" width="0.1609%" height="15" fill="rgb(226,196,6)" fg:x="708" fg:w="2"/><text x="57.2090%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.9590%" y="197" width="0.1609%" height="15" fill="rgb(251,228,11)" fg:x="708" fg:w="2"/><text x="57.2090%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.0394%" y="181" width="0.0805%" height="15" fill="rgb(219,197,15)" fg:x="709" fg:w="1"/><text x="57.2894%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0394%" y="165" width="0.0805%" height="15" fill="rgb(243,105,44)" fg:x="709" fg:w="1"/><text x="57.2894%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="57.0394%" y="149" width="0.0805%" height="15" fill="rgb(205,183,40)" fg:x="709" fg:w="1"/><text x="57.2894%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="57.0394%" y="133" width="0.0805%" height="15" fill="rgb(232,138,46)" fg:x="709" fg:w="1"/><text x="57.2894%" y="143.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.0394%" y="117" width="0.0805%" height="15" fill="rgb(234,161,14)" fg:x="709" fg:w="1"/><text x="57.2894%" y="127.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (23 samples, 1.85%)</title><rect x="55.3500%" y="357" width="1.8504%" height="15" fill="rgb(238,211,18)" fg:x="688" fg:w="23"/><text x="55.6000%" y="367.50">&lt;..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (13 samples, 1.05%)</title><rect x="56.1545%" y="341" width="1.0459%" height="15" fill="rgb(217,130,2)" fg:x="698" fg:w="13"/><text x="56.4045%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (13 samples, 1.05%)</title><rect x="56.1545%" y="325" width="1.0459%" height="15" fill="rgb(251,17,29)" fg:x="698" fg:w="13"/><text x="56.4045%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.1199%" y="309" width="0.0805%" height="15" fill="rgb(243,18,0)" fg:x="710" fg:w="1"/><text x="57.3699%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.1199%" y="293" width="0.0805%" height="15" fill="rgb(227,220,45)" fg:x="710" fg:w="1"/><text x="57.3699%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="57.1199%" y="277" width="0.0805%" height="15" fill="rgb(212,34,2)" fg:x="710" fg:w="1"/><text x="57.3699%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="57.1199%" y="261" width="0.0805%" height="15" fill="rgb(236,23,8)" fg:x="710" fg:w="1"/><text x="57.3699%" y="271.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="57.1199%" y="245" width="0.0805%" height="15" fill="rgb(210,113,39)" fg:x="710" fg:w="1"/><text x="57.3699%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="57.2808%" y="213" width="0.0805%" height="15" fill="rgb(243,123,48)" fg:x="712" fg:w="1"/><text x="57.5308%" y="223.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="57.2808%" y="197" width="0.0805%" height="15" fill="rgb(223,175,36)" fg:x="712" fg:w="1"/><text x="57.5308%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3612%" y="213" width="0.0805%" height="15" fill="rgb(226,100,30)" fg:x="713" fg:w="1"/><text x="57.6112%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="57.3612%" y="197" width="0.0805%" height="15" fill="rgb(221,225,39)" fg:x="713" fg:w="1"/><text x="57.6112%" y="207.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="57.2003%" y="357" width="0.3218%" height="15" fill="rgb(224,222,42)" fg:x="711" fg:w="4"/><text x="57.4503%" y="367.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="57.2003%" y="341" width="0.3218%" height="15" fill="rgb(221,53,1)" fg:x="711" fg:w="4"/><text x="57.4503%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="57.2003%" y="325" width="0.3218%" height="15" fill="rgb(216,187,48)" fg:x="711" fg:w="4"/><text x="57.4503%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="57.2003%" y="309" width="0.3218%" height="15" fill="rgb(220,108,2)" fg:x="711" fg:w="4"/><text x="57.4503%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.2003%" y="293" width="0.3218%" height="15" fill="rgb(216,13,42)" fg:x="711" fg:w="4"/><text x="57.4503%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="57.2003%" y="277" width="0.3218%" height="15" fill="rgb(205,14,29)" fg:x="711" fg:w="4"/><text x="57.4503%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="57.2003%" y="261" width="0.3218%" height="15" fill="rgb(217,168,30)" fg:x="711" fg:w="4"/><text x="57.4503%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="57.2808%" y="245" width="0.2414%" height="15" fill="rgb(246,173,54)" fg:x="712" fg:w="3"/><text x="57.5308%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="57.2808%" y="229" width="0.2414%" height="15" fill="rgb(227,177,11)" fg:x="712" fg:w="3"/><text x="57.5308%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.4417%" y="213" width="0.0805%" height="15" fill="rgb(223,215,51)" fg:x="714" fg:w="1"/><text x="57.6917%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.4417%" y="197" width="0.0805%" height="15" fill="rgb(253,4,17)" fg:x="714" fg:w="1"/><text x="57.6917%" y="207.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (47 samples, 3.78%)</title><rect x="54.5455%" y="469" width="3.7812%" height="15" fill="rgb(206,150,43)" fg:x="678" fg:w="47"/><text x="54.7955%" y="479.50">&lt;plu..</text></g><g><title>core::iter::adapters::try_process (47 samples, 3.78%)</title><rect x="54.5455%" y="453" width="3.7812%" height="15" fill="rgb(241,100,52)" fg:x="678" fg:w="47"/><text x="54.7955%" y="463.50">core..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 3.78%)</title><rect x="54.5455%" y="437" width="3.7812%" height="15" fill="rgb(234,120,21)" fg:x="678" fg:w="47"/><text x="54.7955%" y="447.50">&lt;all..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 3.78%)</title><rect x="54.5455%" y="421" width="3.7812%" height="15" fill="rgb(231,60,11)" fg:x="678" fg:w="47"/><text x="54.7955%" y="431.50">&lt;cor..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (47 samples, 3.78%)</title><rect x="54.5455%" y="405" width="3.7812%" height="15" fill="rgb(247,77,50)" fg:x="678" fg:w="47"/><text x="54.7955%" y="415.50">&lt;eng..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (46 samples, 3.70%)</title><rect x="54.6259%" y="389" width="3.7007%" height="15" fill="rgb(251,199,54)" fg:x="679" fg:w="46"/><text x="54.8759%" y="399.50">&lt;eng..</text></g><g><title>engine::session::internal::Entities::add_persisted (45 samples, 3.62%)</title><rect x="54.7064%" y="373" width="3.6203%" height="15" fill="rgb(212,120,38)" fg:x="680" fg:w="45"/><text x="54.9564%" y="383.50">engi..</text></g><g><title>engine::session::internal::EntityMap::add_entity (10 samples, 0.80%)</title><rect x="57.5221%" y="357" width="0.8045%" height="15" fill="rgb(250,161,37)" fg:x="715" fg:w="10"/><text x="57.7721%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.80%)</title><rect x="57.5221%" y="341" width="0.8045%" height="15" fill="rgb(232,158,45)" fg:x="715" fg:w="10"/><text x="57.7721%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.80%)</title><rect x="57.5221%" y="325" width="0.8045%" height="15" fill="rgb(233,114,2)" fg:x="715" fg:w="10"/><text x="57.7721%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.80%)</title><rect x="57.5221%" y="309" width="0.8045%" height="15" fill="rgb(248,139,0)" fg:x="715" fg:w="10"/><text x="57.7721%" y="319.50"></text></g><g><title>__libc_malloc (9 samples, 0.72%)</title><rect x="57.6026%" y="293" width="0.7241%" height="15" fill="rgb(222,164,18)" fg:x="716" fg:w="9"/><text x="57.8526%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (58 samples, 4.67%)</title><rect x="53.8214%" y="533" width="4.6661%" height="15" fill="rgb(221,140,42)" fg:x="669" fg:w="58"/><text x="54.0714%" y="543.50">plugi..</text></g><g><title>plugins_core::tools::contained_by (55 samples, 4.42%)</title><rect x="54.0628%" y="517" width="4.4248%" height="15" fill="rgb(209,186,11)" fg:x="672" fg:w="55"/><text x="54.3128%" y="527.50">plugi..</text></g><g><title>kernel::model::entry::Entry::scope (53 samples, 4.26%)</title><rect x="54.2237%" y="501" width="4.2639%" height="15" fill="rgb(254,212,38)" fg:x="674" fg:w="53"/><text x="54.4737%" y="511.50">kerne..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (53 samples, 4.26%)</title><rect x="54.2237%" y="485" width="4.2639%" height="15" fill="rgb(219,156,31)" fg:x="674" fg:w="53"/><text x="54.4737%" y="495.50">kerne..</text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="58.3266%" y="469" width="0.1609%" height="15" fill="rgb(222,148,42)" fg:x="725" fg:w="2"/><text x="58.5766%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.4071%" y="453" width="0.0805%" height="15" fill="rgb(225,65,5)" fg:x="726" fg:w="1"/><text x="58.6571%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="58.4071%" y="437" width="0.0805%" height="15" fill="rgb(235,28,12)" fg:x="726" fg:w="1"/><text x="58.6571%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="58.4071%" y="421" width="0.0805%" height="15" fill="rgb(245,58,4)" fg:x="726" fg:w="1"/><text x="58.6571%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="58.4071%" y="405" width="0.0805%" height="15" fill="rgb(235,118,5)" fg:x="726" fg:w="1"/><text x="58.6571%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.4875%" y="517" width="0.0805%" height="15" fill="rgb(253,196,3)" fg:x="727" fg:w="1"/><text x="58.7375%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="58.5680%" y="517" width="0.0805%" height="15" fill="rgb(238,90,28)" fg:x="728" fg:w="1"/><text x="58.8180%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="58.5680%" y="501" width="0.0805%" height="15" fill="rgb(254,227,4)" fg:x="728" fg:w="1"/><text x="58.8180%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6484%" y="501" width="0.0805%" height="15" fill="rgb(237,114,35)" fg:x="729" fg:w="1"/><text x="58.8984%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.6484%" y="485" width="0.0805%" height="15" fill="rgb(221,147,29)" fg:x="729" fg:w="1"/><text x="58.8984%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7289%" y="421" width="0.0805%" height="15" fill="rgb(216,201,17)" fg:x="730" fg:w="1"/><text x="58.9789%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7289%" y="405" width="0.0805%" height="15" fill="rgb(251,46,50)" fg:x="730" fg:w="1"/><text x="58.9789%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7289%" y="389" width="0.0805%" height="15" fill="rgb(216,143,48)" fg:x="730" fg:w="1"/><text x="58.9789%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="58.7289%" y="373" width="0.0805%" height="15" fill="rgb(224,62,51)" fg:x="730" fg:w="1"/><text x="58.9789%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="58.7289%" y="357" width="0.0805%" height="15" fill="rgb(232,152,20)" fg:x="730" fg:w="1"/><text x="58.9789%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="58.7289%" y="485" width="0.1609%" height="15" fill="rgb(233,194,7)" fg:x="730" fg:w="2"/><text x="58.9789%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="58.7289%" y="469" width="0.1609%" height="15" fill="rgb(207,33,22)" fg:x="730" fg:w="2"/><text x="58.9789%" y="479.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="58.7289%" y="453" width="0.1609%" height="15" fill="rgb(226,54,34)" fg:x="730" fg:w="2"/><text x="58.9789%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="58.7289%" y="437" width="0.1609%" height="15" fill="rgb(227,161,47)" fg:x="730" fg:w="2"/><text x="58.9789%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.8093%" y="421" width="0.0805%" height="15" fill="rgb(218,58,37)" fg:x="731" fg:w="1"/><text x="59.0593%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8093%" y="405" width="0.0805%" height="15" fill="rgb(208,173,18)" fg:x="731" fg:w="1"/><text x="59.0593%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.8093%" y="389" width="0.0805%" height="15" fill="rgb(230,159,11)" fg:x="731" fg:w="1"/><text x="59.0593%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8093%" y="373" width="0.0805%" height="15" fill="rgb(238,90,51)" fg:x="731" fg:w="1"/><text x="59.0593%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="58.8093%" y="357" width="0.0805%" height="15" fill="rgb(225,97,36)" fg:x="731" fg:w="1"/><text x="59.0593%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8093%" y="341" width="0.0805%" height="15" fill="rgb(211,205,42)" fg:x="731" fg:w="1"/><text x="59.0593%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="58.8093%" y="325" width="0.0805%" height="15" fill="rgb(219,152,7)" fg:x="731" fg:w="1"/><text x="59.0593%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="58.8093%" y="309" width="0.0805%" height="15" fill="rgb(222,79,10)" fg:x="731" fg:w="1"/><text x="59.0593%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.8093%" y="293" width="0.0805%" height="15" fill="rgb(242,13,11)" fg:x="731" fg:w="1"/><text x="59.0593%" y="303.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (6 samples, 0.48%)</title><rect x="58.4875%" y="533" width="0.4827%" height="15" fill="rgb(231,143,41)" fg:x="727" fg:w="6"/><text x="58.7375%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="58.6484%" y="517" width="0.3218%" height="15" fill="rgb(222,147,19)" fg:x="729" fg:w="4"/><text x="58.8984%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (3 samples, 0.24%)</title><rect x="58.7289%" y="501" width="0.2414%" height="15" fill="rgb(235,5,39)" fg:x="730" fg:w="3"/><text x="58.9789%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="58.8898%" y="485" width="0.0805%" height="15" fill="rgb(246,155,51)" fg:x="732" fg:w="1"/><text x="59.1398%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="58.8898%" y="469" width="0.0805%" height="15" fill="rgb(218,157,4)" fg:x="732" fg:w="1"/><text x="59.1398%" y="479.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.9702%" y="517" width="0.2414%" height="15" fill="rgb(226,184,4)" fg:x="733" fg:w="3"/><text x="59.2202%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.0507%" y="501" width="0.1609%" height="15" fill="rgb(210,103,26)" fg:x="734" fg:w="2"/><text x="59.3007%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.0507%" y="485" width="0.1609%" height="15" fill="rgb(228,23,31)" fg:x="734" fg:w="2"/><text x="59.3007%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.0507%" y="469" width="0.1609%" height="15" fill="rgb(205,176,34)" fg:x="734" fg:w="2"/><text x="59.3007%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.0507%" y="453" width="0.1609%" height="15" fill="rgb(246,213,37)" fg:x="734" fg:w="2"/><text x="59.3007%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.0507%" y="437" width="0.1609%" height="15" fill="rgb(213,52,45)" fg:x="734" fg:w="2"/><text x="59.3007%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.0507%" y="421" width="0.1609%" height="15" fill="rgb(249,9,52)" fg:x="734" fg:w="2"/><text x="59.3007%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.0507%" y="405" width="0.1609%" height="15" fill="rgb(205,97,16)" fg:x="734" fg:w="2"/><text x="59.3007%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.0507%" y="389" width="0.1609%" height="15" fill="rgb(214,11,46)" fg:x="734" fg:w="2"/><text x="59.3007%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.0507%" y="373" width="0.1609%" height="15" fill="rgb(221,66,18)" fg:x="734" fg:w="2"/><text x="59.3007%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.0507%" y="357" width="0.1609%" height="15" fill="rgb(213,49,1)" fg:x="734" fg:w="2"/><text x="59.3007%" y="367.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.0507%" y="341" width="0.1609%" height="15" fill="rgb(232,75,51)" fg:x="734" fg:w="2"/><text x="59.3007%" y="351.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.0507%" y="325" width="0.1609%" height="15" fill="rgb(208,218,40)" fg:x="734" fg:w="2"/><text x="59.3007%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (72 samples, 5.79%)</title><rect x="53.4996%" y="565" width="5.7924%" height="15" fill="rgb(206,144,50)" fg:x="665" fg:w="72"/><text x="53.7496%" y="575.50">&lt;engine..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (71 samples, 5.71%)</title><rect x="53.5800%" y="549" width="5.7120%" height="15" fill="rgb(216,9,51)" fg:x="666" fg:w="71"/><text x="53.8300%" y="559.50">&lt;plugin..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (4 samples, 0.32%)</title><rect x="58.9702%" y="533" width="0.3218%" height="15" fill="rgb(226,6,53)" fg:x="733" fg:w="4"/><text x="59.2202%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.2116%" y="517" width="0.0805%" height="15" fill="rgb(216,9,50)" fg:x="736" fg:w="1"/><text x="59.4616%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.2920%" y="565" width="0.0805%" height="15" fill="rgb(214,101,31)" fg:x="737" fg:w="1"/><text x="59.5420%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.3725%" y="549" width="0.0805%" height="15" fill="rgb(247,85,17)" fg:x="738" fg:w="1"/><text x="59.6225%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="59.3725%" y="565" width="0.1609%" height="15" fill="rgb(248,138,25)" fg:x="738" fg:w="2"/><text x="59.6225%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.4529%" y="549" width="0.0805%" height="15" fill="rgb(225,146,20)" fg:x="739" fg:w="1"/><text x="59.7029%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.4529%" y="533" width="0.0805%" height="15" fill="rgb(224,184,17)" fg:x="739" fg:w="1"/><text x="59.7029%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.6138%" y="421" width="0.0805%" height="15" fill="rgb(231,10,20)" fg:x="741" fg:w="1"/><text x="59.8638%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="59.5334%" y="437" width="0.2414%" height="15" fill="rgb(210,93,37)" fg:x="740" fg:w="3"/><text x="59.7834%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.6943%" y="421" width="0.0805%" height="15" fill="rgb(226,84,42)" fg:x="742" fg:w="1"/><text x="59.9443%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.5334%" y="485" width="0.3218%" height="15" fill="rgb(253,192,7)" fg:x="740" fg:w="4"/><text x="59.7834%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.5334%" y="469" width="0.3218%" height="15" fill="rgb(214,107,27)" fg:x="740" fg:w="4"/><text x="59.7834%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="59.5334%" y="453" width="0.3218%" height="15" fill="rgb(238,146,21)" fg:x="740" fg:w="4"/><text x="59.7834%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7747%" y="437" width="0.0805%" height="15" fill="rgb(209,136,30)" fg:x="743" fg:w="1"/><text x="60.0247%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.7747%" y="421" width="0.0805%" height="15" fill="rgb(226,60,22)" fg:x="743" fg:w="1"/><text x="60.0247%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.7747%" y="405" width="0.0805%" height="15" fill="rgb(243,92,26)" fg:x="743" fg:w="1"/><text x="60.0247%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.7747%" y="389" width="0.0805%" height="15" fill="rgb(211,85,33)" fg:x="743" fg:w="1"/><text x="60.0247%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.7747%" y="373" width="0.0805%" height="15" fill="rgb(243,187,44)" fg:x="743" fg:w="1"/><text x="60.0247%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7747%" y="357" width="0.0805%" height="15" fill="rgb(251,172,23)" fg:x="743" fg:w="1"/><text x="60.0247%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.7747%" y="341" width="0.0805%" height="15" fill="rgb(254,162,50)" fg:x="743" fg:w="1"/><text x="60.0247%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.7747%" y="325" width="0.0805%" height="15" fill="rgb(239,14,53)" fg:x="743" fg:w="1"/><text x="60.0247%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.7747%" y="309" width="0.0805%" height="15" fill="rgb(242,208,8)" fg:x="743" fg:w="1"/><text x="60.0247%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.7747%" y="293" width="0.0805%" height="15" fill="rgb(225,61,41)" fg:x="743" fg:w="1"/><text x="60.0247%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.7747%" y="277" width="0.0805%" height="15" fill="rgb(219,154,6)" fg:x="743" fg:w="1"/><text x="60.0247%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.7747%" y="261" width="0.0805%" height="15" fill="rgb(227,223,44)" fg:x="743" fg:w="1"/><text x="60.0247%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.8552%" y="485" width="0.0805%" height="15" fill="rgb(220,188,6)" fg:x="744" fg:w="1"/><text x="60.1052%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="59.8552%" y="469" width="0.0805%" height="15" fill="rgb(216,65,22)" fg:x="744" fg:w="1"/><text x="60.1052%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.8552%" y="453" width="0.0805%" height="15" fill="rgb(236,66,46)" fg:x="744" fg:w="1"/><text x="60.1052%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.8552%" y="437" width="0.0805%" height="15" fill="rgb(211,150,52)" fg:x="744" fg:w="1"/><text x="60.1052%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="59.8552%" y="421" width="0.0805%" height="15" fill="rgb(253,89,19)" fg:x="744" fg:w="1"/><text x="60.1052%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8552%" y="405" width="0.0805%" height="15" fill="rgb(245,4,1)" fg:x="744" fg:w="1"/><text x="60.1052%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.9356%" y="357" width="0.0805%" height="15" fill="rgb(230,109,16)" fg:x="745" fg:w="1"/><text x="60.1856%" y="367.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="59.5334%" y="533" width="0.5632%" height="15" fill="rgb(213,7,47)" fg:x="740" fg:w="7"/><text x="59.7834%" y="543.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="59.5334%" y="517" width="0.5632%" height="15" fill="rgb(242,148,14)" fg:x="740" fg:w="7"/><text x="59.7834%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="59.5334%" y="501" width="0.5632%" height="15" fill="rgb(238,51,34)" fg:x="740" fg:w="7"/><text x="59.7834%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9356%" y="485" width="0.1609%" height="15" fill="rgb(222,49,22)" fg:x="745" fg:w="2"/><text x="60.1856%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="469" width="0.1609%" height="15" fill="rgb(237,102,50)" fg:x="745" fg:w="2"/><text x="60.1856%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9356%" y="453" width="0.1609%" height="15" fill="rgb(237,195,8)" fg:x="745" fg:w="2"/><text x="60.1856%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="437" width="0.1609%" height="15" fill="rgb(245,60,18)" fg:x="745" fg:w="2"/><text x="60.1856%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="59.9356%" y="421" width="0.1609%" height="15" fill="rgb(253,74,32)" fg:x="745" fg:w="2"/><text x="60.1856%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="405" width="0.1609%" height="15" fill="rgb(240,91,39)" fg:x="745" fg:w="2"/><text x="60.1856%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="59.9356%" y="389" width="0.1609%" height="15" fill="rgb(221,162,34)" fg:x="745" fg:w="2"/><text x="60.1856%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.9356%" y="373" width="0.1609%" height="15" fill="rgb(223,32,2)" fg:x="745" fg:w="2"/><text x="60.1856%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.0161%" y="357" width="0.0805%" height="15" fill="rgb(245,220,46)" fg:x="746" fg:w="1"/><text x="60.2661%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.0161%" y="341" width="0.0805%" height="15" fill="rgb(216,38,33)" fg:x="746" fg:w="1"/><text x="60.2661%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="60.0161%" y="325" width="0.0805%" height="15" fill="rgb(210,123,14)" fg:x="746" fg:w="1"/><text x="60.2661%" y="335.50"></text></g><g><title>kernel::model::props::Props::property_named (2 samples, 0.16%)</title><rect x="60.1770%" y="517" width="0.1609%" height="15" fill="rgb(214,38,47)" fg:x="748" fg:w="2"/><text x="60.4270%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="60.2574%" y="501" width="0.0805%" height="15" fill="rgb(244,180,16)" fg:x="749" fg:w="1"/><text x="60.5074%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3379%" y="485" width="0.0805%" height="15" fill="rgb(252,21,32)" fg:x="750" fg:w="1"/><text x="60.5879%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="60.3379%" y="469" width="0.0805%" height="15" fill="rgb(245,218,31)" fg:x="750" fg:w="1"/><text x="60.5879%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="60.4183%" y="389" width="0.0805%" height="15" fill="rgb(247,81,18)" fg:x="751" fg:w="1"/><text x="60.6683%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="60.4183%" y="373" width="0.0805%" height="15" fill="rgb(220,151,1)" fg:x="751" fg:w="1"/><text x="60.6683%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.4183%" y="357" width="0.0805%" height="15" fill="rgb(211,157,11)" fg:x="751" fg:w="1"/><text x="60.6683%" y="367.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.05%)</title><rect x="59.5334%" y="565" width="1.0459%" height="15" fill="rgb(239,46,30)" fg:x="740" fg:w="13"/><text x="59.7834%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.05%)</title><rect x="59.5334%" y="549" width="1.0459%" height="15" fill="rgb(236,144,43)" fg:x="740" fg:w="13"/><text x="59.7834%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="60.0965%" y="533" width="0.4827%" height="15" fill="rgb(206,71,45)" fg:x="747" fg:w="6"/><text x="60.3465%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="60.3379%" y="517" width="0.2414%" height="15" fill="rgb(240,85,31)" fg:x="750" fg:w="3"/><text x="60.5879%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="60.3379%" y="501" width="0.2414%" height="15" fill="rgb(221,43,52)" fg:x="750" fg:w="3"/><text x="60.5879%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.4183%" y="485" width="0.1609%" height="15" fill="rgb(243,106,22)" fg:x="751" fg:w="2"/><text x="60.6683%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4183%" y="469" width="0.1609%" height="15" fill="rgb(209,138,38)" fg:x="751" fg:w="2"/><text x="60.6683%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="60.4183%" y="453" width="0.1609%" height="15" fill="rgb(216,63,40)" fg:x="751" fg:w="2"/><text x="60.6683%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4183%" y="437" width="0.1609%" height="15" fill="rgb(206,115,21)" fg:x="751" fg:w="2"/><text x="60.6683%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="60.4183%" y="421" width="0.1609%" height="15" fill="rgb(235,53,44)" fg:x="751" fg:w="2"/><text x="60.6683%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="60.4183%" y="405" width="0.1609%" height="15" fill="rgb(244,160,14)" fg:x="751" fg:w="2"/><text x="60.6683%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.4988%" y="389" width="0.0805%" height="15" fill="rgb(223,16,19)" fg:x="752" fg:w="1"/><text x="60.7488%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.4988%" y="373" width="0.0805%" height="15" fill="rgb(242,63,42)" fg:x="752" fg:w="1"/><text x="60.7488%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="60.4988%" y="357" width="0.0805%" height="15" fill="rgb(209,66,49)" fg:x="752" fg:w="1"/><text x="60.7488%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="60.4988%" y="341" width="0.0805%" height="15" fill="rgb(207,126,46)" fg:x="752" fg:w="1"/><text x="60.7488%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="60.5792%" y="565" width="0.1609%" height="15" fill="rgb(218,160,41)" fg:x="753" fg:w="2"/><text x="60.8292%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="60.5792%" y="549" width="0.1609%" height="15" fill="rgb(234,125,46)" fg:x="753" fg:w="2"/><text x="60.8292%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6597%" y="533" width="0.0805%" height="15" fill="rgb(205,66,36)" fg:x="754" fg:w="1"/><text x="60.9097%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.6597%" y="517" width="0.0805%" height="15" fill="rgb(220,135,16)" fg:x="754" fg:w="1"/><text x="60.9097%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.6597%" y="501" width="0.0805%" height="15" fill="rgb(214,217,54)" fg:x="754" fg:w="1"/><text x="60.9097%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.6597%" y="485" width="0.0805%" height="15" fill="rgb(206,30,9)" fg:x="754" fg:w="1"/><text x="60.9097%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.6597%" y="469" width="0.0805%" height="15" fill="rgb(207,196,5)" fg:x="754" fg:w="1"/><text x="60.9097%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6597%" y="453" width="0.0805%" height="15" fill="rgb(227,116,12)" fg:x="754" fg:w="1"/><text x="60.9097%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.6597%" y="437" width="0.0805%" height="15" fill="rgb(235,227,13)" fg:x="754" fg:w="1"/><text x="60.9097%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.6597%" y="421" width="0.0805%" height="15" fill="rgb(238,212,29)" fg:x="754" fg:w="1"/><text x="60.9097%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.6597%" y="405" width="0.0805%" height="15" fill="rgb(230,152,17)" fg:x="754" fg:w="1"/><text x="60.9097%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.6597%" y="389" width="0.0805%" height="15" fill="rgb(220,197,1)" fg:x="754" fg:w="1"/><text x="60.9097%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.6597%" y="373" width="0.0805%" height="15" fill="rgb(229,227,40)" fg:x="754" fg:w="1"/><text x="60.9097%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.6597%" y="357" width="0.0805%" height="15" fill="rgb(227,179,16)" fg:x="754" fg:w="1"/><text x="60.9097%" y="367.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="60.7401%" y="565" width="0.0805%" height="15" fill="rgb(246,116,44)" fg:x="755" fg:w="1"/><text x="60.9901%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="60.7401%" y="549" width="0.0805%" height="15" fill="rgb(205,191,4)" fg:x="755" fg:w="1"/><text x="60.9901%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8206%" y="549" width="0.0805%" height="15" fill="rgb(245,69,19)" fg:x="756" fg:w="1"/><text x="61.0706%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8206%" y="533" width="0.0805%" height="15" fill="rgb(230,29,26)" fg:x="756" fg:w="1"/><text x="61.0706%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="60.8206%" y="517" width="0.0805%" height="15" fill="rgb(239,192,26)" fg:x="756" fg:w="1"/><text x="61.0706%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="60.8206%" y="501" width="0.0805%" height="15" fill="rgb(219,92,16)" fg:x="756" fg:w="1"/><text x="61.0706%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="60.8206%" y="485" width="0.0805%" height="15" fill="rgb(246,147,43)" fg:x="756" fg:w="1"/><text x="61.0706%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="60.8206%" y="469" width="0.0805%" height="15" fill="rgb(222,147,11)" fg:x="756" fg:w="1"/><text x="61.0706%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8206%" y="453" width="0.0805%" height="15" fill="rgb(243,71,8)" fg:x="756" fg:w="1"/><text x="61.0706%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="60.8206%" y="437" width="0.0805%" height="15" fill="rgb(250,36,12)" fg:x="756" fg:w="1"/><text x="61.0706%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="60.8206%" y="421" width="0.0805%" height="15" fill="rgb(207,168,14)" fg:x="756" fg:w="1"/><text x="61.0706%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="60.8206%" y="405" width="0.0805%" height="15" fill="rgb(254,210,51)" fg:x="756" fg:w="1"/><text x="61.0706%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="60.8206%" y="389" width="0.0805%" height="15" fill="rgb(236,152,38)" fg:x="756" fg:w="1"/><text x="61.0706%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="60.8206%" y="373" width="0.0805%" height="15" fill="rgb(240,164,36)" fg:x="756" fg:w="1"/><text x="61.0706%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="60.8206%" y="357" width="0.0805%" height="15" fill="rgb(210,171,36)" fg:x="756" fg:w="1"/><text x="61.0706%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="60.9010%" y="549" width="0.0805%" height="15" fill="rgb(254,156,34)" fg:x="757" fg:w="1"/><text x="61.1510%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="60.9815%" y="549" width="0.0805%" height="15" fill="rgb(216,204,23)" fg:x="758" fg:w="1"/><text x="61.2315%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="60.9815%" y="533" width="0.0805%" height="15" fill="rgb(230,75,38)" fg:x="758" fg:w="1"/><text x="61.2315%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="61.0619%" y="549" width="0.0805%" height="15" fill="rgb(248,197,25)" fg:x="759" fg:w="1"/><text x="61.3119%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="61.1424%" y="405" width="0.0805%" height="15" fill="rgb(234,121,26)" fg:x="760" fg:w="1"/><text x="61.3924%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="61.1424%" y="517" width="0.2414%" height="15" fill="rgb(220,41,36)" fg:x="760" fg:w="3"/><text x="61.3924%" y="527.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="61.1424%" y="501" width="0.2414%" height="15" fill="rgb(227,33,32)" fg:x="760" fg:w="3"/><text x="61.3924%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="61.1424%" y="485" width="0.2414%" height="15" fill="rgb(208,214,54)" fg:x="760" fg:w="3"/><text x="61.3924%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.1424%" y="469" width="0.2414%" height="15" fill="rgb(205,37,38)" fg:x="760" fg:w="3"/><text x="61.3924%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.1424%" y="453" width="0.2414%" height="15" fill="rgb(252,2,0)" fg:x="760" fg:w="3"/><text x="61.3924%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.1424%" y="437" width="0.2414%" height="15" fill="rgb(212,171,10)" fg:x="760" fg:w="3"/><text x="61.3924%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.1424%" y="421" width="0.2414%" height="15" fill="rgb(239,35,46)" fg:x="760" fg:w="3"/><text x="61.3924%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.2228%" y="405" width="0.1609%" height="15" fill="rgb(209,34,42)" fg:x="761" fg:w="2"/><text x="61.4728%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="61.2228%" y="389" width="0.1609%" height="15" fill="rgb(237,9,4)" fg:x="761" fg:w="2"/><text x="61.4728%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="61.2228%" y="373" width="0.1609%" height="15" fill="rgb(254,55,38)" fg:x="761" fg:w="2"/><text x="61.4728%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="61.2228%" y="357" width="0.1609%" height="15" fill="rgb(222,95,29)" fg:x="761" fg:w="2"/><text x="61.4728%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="61.2228%" y="341" width="0.1609%" height="15" fill="rgb(241,218,37)" fg:x="761" fg:w="2"/><text x="61.4728%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.2228%" y="325" width="0.1609%" height="15" fill="rgb(225,89,28)" fg:x="761" fg:w="2"/><text x="61.4728%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="61.2228%" y="309" width="0.1609%" height="15" fill="rgb(231,17,25)" fg:x="761" fg:w="2"/><text x="61.4728%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="61.2228%" y="293" width="0.1609%" height="15" fill="rgb(206,216,48)" fg:x="761" fg:w="2"/><text x="61.4728%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="61.2228%" y="277" width="0.1609%" height="15" fill="rgb(247,190,28)" fg:x="761" fg:w="2"/><text x="61.4728%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="61.2228%" y="261" width="0.1609%" height="15" fill="rgb(216,196,12)" fg:x="761" fg:w="2"/><text x="61.4728%" y="271.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="61.2228%" y="245" width="0.1609%" height="15" fill="rgb(232,114,19)" fg:x="761" fg:w="2"/><text x="61.4728%" y="255.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="61.2228%" y="229" width="0.1609%" height="15" fill="rgb(240,60,14)" fg:x="761" fg:w="2"/><text x="61.4728%" y="239.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="61.3837%" y="501" width="0.0805%" height="15" fill="rgb(250,108,9)" fg:x="763" fg:w="1"/><text x="61.6337%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4642%" y="389" width="0.0805%" height="15" fill="rgb(227,228,21)" fg:x="764" fg:w="1"/><text x="61.7142%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.4642%" y="373" width="0.0805%" height="15" fill="rgb(254,16,52)" fg:x="764" fg:w="1"/><text x="61.7142%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.4642%" y="357" width="0.0805%" height="15" fill="rgb(222,58,2)" fg:x="764" fg:w="1"/><text x="61.7142%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.4642%" y="341" width="0.0805%" height="15" fill="rgb(253,68,14)" fg:x="764" fg:w="1"/><text x="61.7142%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.4642%" y="325" width="0.0805%" height="15" fill="rgb(226,96,17)" fg:x="764" fg:w="1"/><text x="61.7142%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4642%" y="309" width="0.0805%" height="15" fill="rgb(227,199,2)" fg:x="764" fg:w="1"/><text x="61.7142%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="61.4642%" y="293" width="0.0805%" height="15" fill="rgb(228,227,48)" fg:x="764" fg:w="1"/><text x="61.7142%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="61.4642%" y="277" width="0.0805%" height="15" fill="rgb(249,183,0)" fg:x="764" fg:w="1"/><text x="61.7142%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="61.4642%" y="261" width="0.0805%" height="15" fill="rgb(250,89,38)" fg:x="764" fg:w="1"/><text x="61.7142%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="61.4642%" y="245" width="0.0805%" height="15" fill="rgb(240,227,8)" fg:x="764" fg:w="1"/><text x="61.7142%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="61.4642%" y="229" width="0.0805%" height="15" fill="rgb(242,197,35)" fg:x="764" fg:w="1"/><text x="61.7142%" y="239.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="61.4642%" y="213" width="0.0805%" height="15" fill="rgb(224,37,41)" fg:x="764" fg:w="1"/><text x="61.7142%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="61.4642%" y="197" width="0.0805%" height="15" fill="rgb(236,127,7)" fg:x="764" fg:w="1"/><text x="61.7142%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4642%" y="421" width="0.1609%" height="15" fill="rgb(230,62,52)" fg:x="764" fg:w="2"/><text x="61.7142%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="61.4642%" y="405" width="0.1609%" height="15" fill="rgb(235,114,23)" fg:x="764" fg:w="2"/><text x="61.7142%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.5447%" y="389" width="0.0805%" height="15" fill="rgb(211,55,40)" fg:x="765" fg:w="1"/><text x="61.7947%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.4642%" y="453" width="0.2414%" height="15" fill="rgb(228,123,1)" fg:x="764" fg:w="3"/><text x="61.7142%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="61.4642%" y="437" width="0.2414%" height="15" fill="rgb(244,208,8)" fg:x="764" fg:w="3"/><text x="61.7142%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6251%" y="421" width="0.0805%" height="15" fill="rgb(237,118,14)" fg:x="766" fg:w="1"/><text x="61.8751%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="61.6251%" y="405" width="0.0805%" height="15" fill="rgb(219,170,13)" fg:x="766" fg:w="1"/><text x="61.8751%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="61.6251%" y="389" width="0.0805%" height="15" fill="rgb(212,39,43)" fg:x="766" fg:w="1"/><text x="61.8751%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="61.6251%" y="373" width="0.0805%" height="15" fill="rgb(244,191,2)" fg:x="766" fg:w="1"/><text x="61.8751%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="61.6251%" y="357" width="0.0805%" height="15" fill="rgb(219,201,46)" fg:x="766" fg:w="1"/><text x="61.8751%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6251%" y="341" width="0.0805%" height="15" fill="rgb(218,82,7)" fg:x="766" fg:w="1"/><text x="61.8751%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="61.6251%" y="325" width="0.0805%" height="15" fill="rgb(208,192,8)" fg:x="766" fg:w="1"/><text x="61.8751%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="61.4642%" y="469" width="0.3218%" height="15" fill="rgb(244,54,32)" fg:x="764" fg:w="4"/><text x="61.7142%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.7056%" y="453" width="0.0805%" height="15" fill="rgb(240,43,52)" fg:x="767" fg:w="1"/><text x="61.9556%" y="463.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.72%)</title><rect x="61.1424%" y="549" width="0.7241%" height="15" fill="rgb(233,134,29)" fg:x="760" fg:w="9"/><text x="61.3924%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (9 samples, 0.72%)</title><rect x="61.1424%" y="533" width="0.7241%" height="15" fill="rgb(236,128,10)" fg:x="760" fg:w="9"/><text x="61.3924%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="61.3837%" y="517" width="0.4827%" height="15" fill="rgb(207,46,54)" fg:x="763" fg:w="6"/><text x="61.6337%" y="527.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="61.4642%" y="501" width="0.4023%" height="15" fill="rgb(248,140,35)" fg:x="764" fg:w="5"/><text x="61.7142%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="61.4642%" y="485" width="0.4023%" height="15" fill="rgb(241,103,35)" fg:x="764" fg:w="5"/><text x="61.7142%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.7860%" y="469" width="0.0805%" height="15" fill="rgb(223,19,48)" fg:x="768" fg:w="1"/><text x="62.0360%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.7860%" y="453" width="0.0805%" height="15" fill="rgb(238,177,46)" fg:x="768" fg:w="1"/><text x="62.0360%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="61.7860%" y="437" width="0.0805%" height="15" fill="rgb(213,102,15)" fg:x="768" fg:w="1"/><text x="62.0360%" y="447.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.0274%" y="405" width="0.1609%" height="15" fill="rgb(254,135,52)" fg:x="771" fg:w="2"/><text x="62.2774%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="61.8665%" y="549" width="0.4023%" height="15" fill="rgb(240,59,6)" fg:x="769" fg:w="5"/><text x="62.1165%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="61.9469%" y="533" width="0.3218%" height="15" fill="rgb(207,226,5)" fg:x="770" fg:w="4"/><text x="62.1969%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (4 samples, 0.32%)</title><rect x="61.9469%" y="517" width="0.3218%" height="15" fill="rgb(208,167,17)" fg:x="770" fg:w="4"/><text x="62.1969%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="61.9469%" y="501" width="0.3218%" height="15" fill="rgb(254,94,10)" fg:x="770" fg:w="4"/><text x="62.1969%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="62.0274%" y="485" width="0.2414%" height="15" fill="rgb(229,33,11)" fg:x="771" fg:w="3"/><text x="62.2774%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="62.0274%" y="469" width="0.2414%" height="15" fill="rgb(249,145,48)" fg:x="771" fg:w="3"/><text x="62.2774%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="62.0274%" y="453" width="0.2414%" height="15" fill="rgb(253,68,54)" fg:x="771" fg:w="3"/><text x="62.2774%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="62.0274%" y="437" width="0.2414%" height="15" fill="rgb(223,27,42)" fg:x="771" fg:w="3"/><text x="62.2774%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="62.0274%" y="421" width="0.2414%" height="15" fill="rgb(235,123,13)" fg:x="771" fg:w="3"/><text x="62.2774%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="62.1883%" y="405" width="0.0805%" height="15" fill="rgb(244,154,7)" fg:x="773" fg:w="1"/><text x="62.4383%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="62.2687%" y="517" width="0.1609%" height="15" fill="rgb(214,30,25)" fg:x="774" fg:w="2"/><text x="62.5187%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3492%" y="501" width="0.0805%" height="15" fill="rgb(252,189,13)" fg:x="775" fg:w="1"/><text x="62.5992%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="62.3492%" y="485" width="0.0805%" height="15" fill="rgb(234,27,40)" fg:x="775" fg:w="1"/><text x="62.5992%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3492%" y="469" width="0.0805%" height="15" fill="rgb(252,199,25)" fg:x="775" fg:w="1"/><text x="62.5992%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.3492%" y="453" width="0.0805%" height="15" fill="rgb(234,207,20)" fg:x="775" fg:w="1"/><text x="62.5992%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.3492%" y="437" width="0.0805%" height="15" fill="rgb(244,220,10)" fg:x="775" fg:w="1"/><text x="62.5992%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.3492%" y="421" width="0.0805%" height="15" fill="rgb(247,68,23)" fg:x="775" fg:w="1"/><text x="62.5992%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.3492%" y="405" width="0.0805%" height="15" fill="rgb(254,61,4)" fg:x="775" fg:w="1"/><text x="62.5992%" y="415.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3492%" y="389" width="0.0805%" height="15" fill="rgb(245,208,35)" fg:x="775" fg:w="1"/><text x="62.5992%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.3492%" y="373" width="0.0805%" height="15" fill="rgb(235,90,11)" fg:x="775" fg:w="1"/><text x="62.5992%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.4296%" y="485" width="0.0805%" height="15" fill="rgb(239,139,43)" fg:x="776" fg:w="1"/><text x="62.6796%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.5101%" y="485" width="0.0805%" height="15" fill="rgb(209,187,9)" fg:x="777" fg:w="1"/><text x="62.7601%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (5 samples, 0.40%)</title><rect x="62.4296%" y="517" width="0.4023%" height="15" fill="rgb(241,30,6)" fg:x="776" fg:w="5"/><text x="62.6796%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="62.4296%" y="501" width="0.4023%" height="15" fill="rgb(216,104,1)" fg:x="776" fg:w="5"/><text x="62.6796%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="62.5905%" y="485" width="0.2414%" height="15" fill="rgb(238,55,39)" fg:x="778" fg:w="3"/><text x="62.8405%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="62.7514%" y="469" width="0.0805%" height="15" fill="rgb(226,151,41)" fg:x="780" fg:w="1"/><text x="63.0014%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="62.7514%" y="453" width="0.0805%" height="15" fill="rgb(228,73,40)" fg:x="780" fg:w="1"/><text x="63.0014%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.7514%" y="437" width="0.0805%" height="15" fill="rgb(215,81,0)" fg:x="780" fg:w="1"/><text x="63.0014%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="62.7514%" y="421" width="0.0805%" height="15" fill="rgb(209,52,39)" fg:x="780" fg:w="1"/><text x="63.0014%" y="431.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="62.7514%" y="405" width="0.0805%" height="15" fill="rgb(221,127,5)" fg:x="780" fg:w="1"/><text x="63.0014%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.8319%" y="517" width="0.0805%" height="15" fill="rgb(213,215,6)" fg:x="781" fg:w="1"/><text x="63.0819%" y="527.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (10 samples, 0.80%)</title><rect x="62.2687%" y="549" width="0.8045%" height="15" fill="rgb(214,118,13)" fg:x="774" fg:w="10"/><text x="62.5187%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (10 samples, 0.80%)</title><rect x="62.2687%" y="533" width="0.8045%" height="15" fill="rgb(207,205,41)" fg:x="774" fg:w="10"/><text x="62.5187%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="62.9123%" y="517" width="0.1609%" height="15" fill="rgb(218,208,45)" fg:x="782" fg:w="2"/><text x="63.1623%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.9123%" y="501" width="0.1609%" height="15" fill="rgb(244,81,54)" fg:x="782" fg:w="2"/><text x="63.1623%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="62.9123%" y="485" width="0.1609%" height="15" fill="rgb(244,175,1)" fg:x="782" fg:w="2"/><text x="63.1623%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="62.9123%" y="469" width="0.1609%" height="15" fill="rgb(232,128,28)" fg:x="782" fg:w="2"/><text x="63.1623%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="62.9123%" y="453" width="0.1609%" height="15" fill="rgb(234,83,13)" fg:x="782" fg:w="2"/><text x="63.1623%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.9123%" y="437" width="0.1609%" height="15" fill="rgb(233,222,35)" fg:x="782" fg:w="2"/><text x="63.1623%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (3 samples, 0.24%)</title><rect x="63.0732%" y="533" width="0.2414%" height="15" fill="rgb(244,204,21)" fg:x="784" fg:w="3"/><text x="63.3232%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.24%)</title><rect x="63.0732%" y="517" width="0.2414%" height="15" fill="rgb(225,121,40)" fg:x="784" fg:w="3"/><text x="63.3232%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="63.1537%" y="501" width="0.1609%" height="15" fill="rgb(231,89,18)" fg:x="785" fg:w="2"/><text x="63.4037%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="63.1537%" y="485" width="0.1609%" height="15" fill="rgb(205,41,50)" fg:x="785" fg:w="2"/><text x="63.4037%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="63.2341%" y="469" width="0.0805%" height="15" fill="rgb(254,25,22)" fg:x="786" fg:w="1"/><text x="63.4841%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.2341%" y="453" width="0.0805%" height="15" fill="rgb(208,44,21)" fg:x="786" fg:w="1"/><text x="63.4841%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.3950%" y="405" width="0.0805%" height="15" fill="rgb(237,59,53)" fg:x="788" fg:w="1"/><text x="63.6450%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="63.3146%" y="453" width="0.2414%" height="15" fill="rgb(233,24,36)" fg:x="787" fg:w="3"/><text x="63.5646%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="63.3950%" y="437" width="0.1609%" height="15" fill="rgb(216,92,41)" fg:x="788" fg:w="2"/><text x="63.6450%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="63.3950%" y="421" width="0.1609%" height="15" fill="rgb(225,158,49)" fg:x="788" fg:w="2"/><text x="63.6450%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4755%" y="405" width="0.0805%" height="15" fill="rgb(244,11,16)" fg:x="789" fg:w="1"/><text x="63.7255%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4755%" y="389" width="0.0805%" height="15" fill="rgb(208,215,38)" fg:x="789" fg:w="1"/><text x="63.7255%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.4755%" y="373" width="0.0805%" height="15" fill="rgb(250,69,53)" fg:x="789" fg:w="1"/><text x="63.7255%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.4755%" y="357" width="0.0805%" height="15" fill="rgb(240,187,52)" fg:x="789" fg:w="1"/><text x="63.7255%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.4755%" y="341" width="0.0805%" height="15" fill="rgb(235,22,25)" fg:x="789" fg:w="1"/><text x="63.7255%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.5559%" y="357" width="0.0805%" height="15" fill="rgb(213,173,22)" fg:x="790" fg:w="1"/><text x="63.8059%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.5559%" y="341" width="0.0805%" height="15" fill="rgb(218,47,0)" fg:x="790" fg:w="1"/><text x="63.8059%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="63.7168%" y="325" width="0.0805%" height="15" fill="rgb(254,157,11)" fg:x="792" fg:w="1"/><text x="63.9668%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="63.7168%" y="309" width="0.0805%" height="15" fill="rgb(233,154,6)" fg:x="792" fg:w="1"/><text x="63.9668%" y="319.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (8 samples, 0.64%)</title><rect x="63.3146%" y="501" width="0.6436%" height="15" fill="rgb(233,207,47)" fg:x="787" fg:w="8"/><text x="63.5646%" y="511.50"></text></g><g><title>kernel::model::props::load_props (8 samples, 0.64%)</title><rect x="63.3146%" y="485" width="0.6436%" height="15" fill="rgb(249,128,18)" fg:x="787" fg:w="8"/><text x="63.5646%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="63.3146%" y="469" width="0.6436%" height="15" fill="rgb(211,27,42)" fg:x="787" fg:w="8"/><text x="63.5646%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="63.5559%" y="453" width="0.4023%" height="15" fill="rgb(240,163,26)" fg:x="790" fg:w="5"/><text x="63.8059%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.5559%" y="437" width="0.4023%" height="15" fill="rgb(232,118,46)" fg:x="790" fg:w="5"/><text x="63.8059%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="63.5559%" y="421" width="0.4023%" height="15" fill="rgb(238,158,34)" fg:x="790" fg:w="5"/><text x="63.8059%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.5559%" y="405" width="0.4023%" height="15" fill="rgb(254,99,45)" fg:x="790" fg:w="5"/><text x="63.8059%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="63.5559%" y="389" width="0.4023%" height="15" fill="rgb(247,205,20)" fg:x="790" fg:w="5"/><text x="63.8059%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="63.5559%" y="373" width="0.4023%" height="15" fill="rgb(240,20,41)" fg:x="790" fg:w="5"/><text x="63.8059%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="63.6364%" y="357" width="0.3218%" height="15" fill="rgb(231,22,43)" fg:x="791" fg:w="4"/><text x="63.8864%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.6364%" y="341" width="0.3218%" height="15" fill="rgb(207,86,33)" fg:x="791" fg:w="4"/><text x="63.8864%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="63.7973%" y="325" width="0.1609%" height="15" fill="rgb(231,148,5)" fg:x="793" fg:w="2"/><text x="64.0473%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.7973%" y="309" width="0.1609%" height="15" fill="rgb(253,77,28)" fg:x="793" fg:w="2"/><text x="64.0473%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="63.7973%" y="293" width="0.1609%" height="15" fill="rgb(253,227,9)" fg:x="793" fg:w="2"/><text x="64.0473%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="63.7973%" y="277" width="0.1609%" height="15" fill="rgb(235,4,18)" fg:x="793" fg:w="2"/><text x="64.0473%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="64.1191%" y="437" width="0.2414%" height="15" fill="rgb(205,206,45)" fg:x="797" fg:w="3"/><text x="64.3691%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2800%" y="421" width="0.0805%" height="15" fill="rgb(252,34,0)" fg:x="799" fg:w="1"/><text x="64.5300%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.2800%" y="405" width="0.0805%" height="15" fill="rgb(213,56,7)" fg:x="799" fg:w="1"/><text x="64.5300%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2800%" y="389" width="0.0805%" height="15" fill="rgb(227,74,29)" fg:x="799" fg:w="1"/><text x="64.5300%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.2800%" y="373" width="0.0805%" height="15" fill="rgb(221,32,48)" fg:x="799" fg:w="1"/><text x="64.5300%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.2800%" y="357" width="0.0805%" height="15" fill="rgb(230,205,25)" fg:x="799" fg:w="1"/><text x="64.5300%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.2800%" y="341" width="0.0805%" height="15" fill="rgb(215,110,9)" fg:x="799" fg:w="1"/><text x="64.5300%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.2800%" y="325" width="0.0805%" height="15" fill="rgb(245,220,47)" fg:x="799" fg:w="1"/><text x="64.5300%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2800%" y="309" width="0.0805%" height="15" fill="rgb(224,117,5)" fg:x="799" fg:w="1"/><text x="64.5300%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.2800%" y="293" width="0.0805%" height="15" fill="rgb(242,208,25)" fg:x="799" fg:w="1"/><text x="64.5300%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.2800%" y="277" width="0.0805%" height="15" fill="rgb(226,12,37)" fg:x="799" fg:w="1"/><text x="64.5300%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.2800%" y="261" width="0.0805%" height="15" fill="rgb(224,221,22)" fg:x="799" fg:w="1"/><text x="64.5300%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.2800%" y="245" width="0.0805%" height="15" fill="rgb(239,38,44)" fg:x="799" fg:w="1"/><text x="64.5300%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.2800%" y="229" width="0.0805%" height="15" fill="rgb(218,25,46)" fg:x="799" fg:w="1"/><text x="64.5300%" y="239.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="64.2800%" y="213" width="0.0805%" height="15" fill="rgb(206,137,51)" fg:x="799" fg:w="1"/><text x="64.5300%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="64.0386%" y="453" width="0.4023%" height="15" fill="rgb(233,174,3)" fg:x="796" fg:w="5"/><text x="64.2886%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.3604%" y="437" width="0.0805%" height="15" fill="rgb(207,224,43)" fg:x="800" fg:w="1"/><text x="64.6104%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="64.5213%" y="357" width="0.0805%" height="15" fill="rgb(230,46,27)" fg:x="802" fg:w="1"/><text x="64.7713%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="64.5213%" y="341" width="0.0805%" height="15" fill="rgb(251,215,32)" fg:x="802" fg:w="1"/><text x="64.7713%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (20 samples, 1.61%)</title><rect x="63.0732%" y="549" width="1.6090%" height="15" fill="rgb(244,219,19)" fg:x="784" fg:w="20"/><text x="63.3232%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (17 samples, 1.37%)</title><rect x="63.3146%" y="533" width="1.3677%" height="15" fill="rgb(242,125,36)" fg:x="787" fg:w="17"/><text x="63.5646%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (17 samples, 1.37%)</title><rect x="63.3146%" y="517" width="1.3677%" height="15" fill="rgb(251,211,12)" fg:x="787" fg:w="17"/><text x="63.5646%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.72%)</title><rect x="63.9582%" y="501" width="0.7241%" height="15" fill="rgb(209,179,33)" fg:x="795" fg:w="9"/><text x="64.2082%" y="511.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.72%)</title><rect x="63.9582%" y="485" width="0.7241%" height="15" fill="rgb(205,161,48)" fg:x="795" fg:w="9"/><text x="64.2082%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="63.9582%" y="469" width="0.7241%" height="15" fill="rgb(241,139,8)" fg:x="795" fg:w="9"/><text x="64.2082%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.4409%" y="453" width="0.2414%" height="15" fill="rgb(246,159,53)" fg:x="801" fg:w="3"/><text x="64.6909%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.4409%" y="437" width="0.2414%" height="15" fill="rgb(212,62,27)" fg:x="801" fg:w="3"/><text x="64.6909%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="64.4409%" y="421" width="0.2414%" height="15" fill="rgb(216,168,18)" fg:x="801" fg:w="3"/><text x="64.6909%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.4409%" y="405" width="0.2414%" height="15" fill="rgb(228,136,50)" fg:x="801" fg:w="3"/><text x="64.6909%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="64.4409%" y="389" width="0.2414%" height="15" fill="rgb(237,19,45)" fg:x="801" fg:w="3"/><text x="64.6909%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.4409%" y="373" width="0.2414%" height="15" fill="rgb(249,150,28)" fg:x="801" fg:w="3"/><text x="64.6909%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6018%" y="357" width="0.0805%" height="15" fill="rgb(236,179,39)" fg:x="803" fg:w="1"/><text x="64.8518%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6018%" y="341" width="0.0805%" height="15" fill="rgb(250,113,27)" fg:x="803" fg:w="1"/><text x="64.8518%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="64.6018%" y="325" width="0.0805%" height="15" fill="rgb(223,13,14)" fg:x="803" fg:w="1"/><text x="64.8518%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="64.6018%" y="309" width="0.0805%" height="15" fill="rgb(226,68,24)" fg:x="803" fg:w="1"/><text x="64.8518%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="64.6018%" y="293" width="0.0805%" height="15" fill="rgb(239,40,50)" fg:x="803" fg:w="1"/><text x="64.8518%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="64.6018%" y="277" width="0.0805%" height="15" fill="rgb(209,187,0)" fg:x="803" fg:w="1"/><text x="64.8518%" y="287.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.08%)</title><rect x="64.7627%" y="453" width="0.0805%" height="15" fill="rgb(240,61,8)" fg:x="805" fg:w="1"/><text x="65.0127%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="64.7627%" y="437" width="0.0805%" height="15" fill="rgb(236,137,5)" fg:x="805" fg:w="1"/><text x="65.0127%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7627%" y="421" width="0.0805%" height="15" fill="rgb(247,214,21)" fg:x="805" fg:w="1"/><text x="65.0127%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7627%" y="405" width="0.0805%" height="15" fill="rgb(244,115,25)" fg:x="805" fg:w="1"/><text x="65.0127%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="64.7627%" y="389" width="0.0805%" height="15" fill="rgb(230,58,38)" fg:x="805" fg:w="1"/><text x="65.0127%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="64.7627%" y="373" width="0.0805%" height="15" fill="rgb(206,122,6)" fg:x="805" fg:w="1"/><text x="65.0127%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="64.7627%" y="357" width="0.0805%" height="15" fill="rgb(217,135,53)" fg:x="805" fg:w="1"/><text x="65.0127%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="64.7627%" y="341" width="0.0805%" height="15" fill="rgb(225,120,8)" fg:x="805" fg:w="1"/><text x="65.0127%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7627%" y="325" width="0.0805%" height="15" fill="rgb(226,3,30)" fg:x="805" fg:w="1"/><text x="65.0127%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="64.6822%" y="549" width="0.2414%" height="15" fill="rgb(214,159,38)" fg:x="804" fg:w="3"/><text x="64.9322%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="64.7627%" y="533" width="0.1609%" height="15" fill="rgb(242,182,47)" fg:x="805" fg:w="2"/><text x="65.0127%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="64.7627%" y="517" width="0.1609%" height="15" fill="rgb(245,202,26)" fg:x="805" fg:w="2"/><text x="65.0127%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (2 samples, 0.16%)</title><rect x="64.7627%" y="501" width="0.1609%" height="15" fill="rgb(226,163,3)" fg:x="805" fg:w="2"/><text x="65.0127%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (2 samples, 0.16%)</title><rect x="64.7627%" y="485" width="0.1609%" height="15" fill="rgb(219,4,4)" fg:x="805" fg:w="2"/><text x="65.0127%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="64.7627%" y="469" width="0.1609%" height="15" fill="rgb(223,85,4)" fg:x="805" fg:w="2"/><text x="65.0127%" y="479.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.08%)</title><rect x="64.8431%" y="453" width="0.0805%" height="15" fill="rgb(242,170,11)" fg:x="806" fg:w="1"/><text x="65.0931%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.08%)</title><rect x="64.8431%" y="437" width="0.0805%" height="15" fill="rgb(221,97,42)" fg:x="806" fg:w="1"/><text x="65.0931%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.08%)</title><rect x="64.8431%" y="421" width="0.0805%" height="15" fill="rgb(231,206,45)" fg:x="806" fg:w="1"/><text x="65.0931%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="64.8431%" y="405" width="0.0805%" height="15" fill="rgb(216,23,48)" fg:x="806" fg:w="1"/><text x="65.0931%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.08%)</title><rect x="64.8431%" y="389" width="0.0805%" height="15" fill="rgb(225,49,9)" fg:x="806" fg:w="1"/><text x="65.0931%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.08%)</title><rect x="64.8431%" y="373" width="0.0805%" height="15" fill="rgb(247,24,47)" fg:x="806" fg:w="1"/><text x="65.0931%" y="383.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum::{{closure}} (1 samples, 0.08%)</title><rect x="64.8431%" y="357" width="0.0805%" height="15" fill="rgb(253,145,10)" fg:x="806" fg:w="1"/><text x="65.0931%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="64.9236%" y="533" width="0.0805%" height="15" fill="rgb(206,62,10)" fg:x="807" fg:w="1"/><text x="65.1736%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.9236%" y="517" width="0.0805%" height="15" fill="rgb(224,159,31)" fg:x="807" fg:w="1"/><text x="65.1736%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="65.0040%" y="533" width="0.0805%" height="15" fill="rgb(234,184,15)" fg:x="808" fg:w="1"/><text x="65.2540%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="65.0040%" y="517" width="0.0805%" height="15" fill="rgb(237,101,1)" fg:x="808" fg:w="1"/><text x="65.2540%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.0040%" y="501" width="0.0805%" height="15" fill="rgb(211,99,29)" fg:x="808" fg:w="1"/><text x="65.2540%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0040%" y="485" width="0.0805%" height="15" fill="rgb(250,167,3)" fg:x="808" fg:w="1"/><text x="65.2540%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0040%" y="469" width="0.0805%" height="15" fill="rgb(225,58,6)" fg:x="808" fg:w="1"/><text x="65.2540%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.0040%" y="453" width="0.0805%" height="15" fill="rgb(251,161,21)" fg:x="808" fg:w="1"/><text x="65.2540%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.0845%" y="517" width="0.0805%" height="15" fill="rgb(253,203,35)" fg:x="809" fg:w="1"/><text x="65.3345%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="65.2454%" y="469" width="0.0805%" height="15" fill="rgb(214,220,52)" fg:x="811" fg:w="1"/><text x="65.4954%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="65.1649%" y="517" width="0.2414%" height="15" fill="rgb(235,216,33)" fg:x="810" fg:w="3"/><text x="65.4149%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="65.1649%" y="501" width="0.2414%" height="15" fill="rgb(231,79,26)" fg:x="810" fg:w="3"/><text x="65.4149%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="65.1649%" y="485" width="0.2414%" height="15" fill="rgb(244,218,10)" fg:x="810" fg:w="3"/><text x="65.4149%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.3258%" y="469" width="0.0805%" height="15" fill="rgb(238,15,9)" fg:x="812" fg:w="1"/><text x="65.5758%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (156 samples, 12.55%)</title><rect x="52.9364%" y="581" width="12.5503%" height="15" fill="rgb(235,112,15)" fg:x="658" fg:w="156"/><text x="53.1864%" y="591.50">&lt;plugins_core::carr..</text></g><g><title>plugins_core::location::change_location (58 samples, 4.67%)</title><rect x="60.8206%" y="565" width="4.6661%" height="15" fill="rgb(239,126,18)" fg:x="756" fg:w="58"/><text x="61.0706%" y="575.50">plugi..</text></g><g><title>plugins_core::location::Location::set (7 samples, 0.56%)</title><rect x="64.9236%" y="549" width="0.5632%" height="15" fill="rgb(253,171,19)" fg:x="807" fg:w="7"/><text x="65.1736%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="65.0845%" y="533" width="0.4023%" height="15" fill="rgb(237,218,25)" fg:x="809" fg:w="5"/><text x="65.3345%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="65.4063%" y="517" width="0.0805%" height="15" fill="rgb(213,88,46)" fg:x="813" fg:w="1"/><text x="65.6563%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.4063%" y="501" width="0.0805%" height="15" fill="rgb(222,124,54)" fg:x="813" fg:w="1"/><text x="65.6563%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="65.4063%" y="485" width="0.0805%" height="15" fill="rgb(209,206,42)" fg:x="813" fg:w="1"/><text x="65.6563%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="65.4063%" y="469" width="0.0805%" height="15" fill="rgb(219,25,49)" fg:x="813" fg:w="1"/><text x="65.6563%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.4063%" y="453" width="0.0805%" height="15" fill="rgb(228,207,53)" fg:x="813" fg:w="1"/><text x="65.6563%" y="463.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="65.5672%" y="549" width="0.0805%" height="15" fill="rgb(224,3,4)" fg:x="815" fg:w="1"/><text x="65.8172%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="65.5672%" y="533" width="0.0805%" height="15" fill="rgb(254,206,26)" fg:x="815" fg:w="1"/><text x="65.8172%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6476%" y="453" width="0.0805%" height="15" fill="rgb(209,4,26)" fg:x="816" fg:w="1"/><text x="65.8976%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.6476%" y="437" width="0.0805%" height="15" fill="rgb(243,193,32)" fg:x="816" fg:w="1"/><text x="65.8976%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.6476%" y="421" width="0.0805%" height="15" fill="rgb(225,150,36)" fg:x="816" fg:w="1"/><text x="65.8976%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.6476%" y="485" width="0.1609%" height="15" fill="rgb(225,131,26)" fg:x="816" fg:w="2"/><text x="65.8976%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="65.6476%" y="469" width="0.1609%" height="15" fill="rgb(236,126,12)" fg:x="816" fg:w="2"/><text x="65.8976%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7281%" y="453" width="0.0805%" height="15" fill="rgb(238,167,44)" fg:x="817" fg:w="1"/><text x="65.9781%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7281%" y="437" width="0.0805%" height="15" fill="rgb(238,153,31)" fg:x="817" fg:w="1"/><text x="65.9781%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.7281%" y="421" width="0.0805%" height="15" fill="rgb(254,41,51)" fg:x="817" fg:w="1"/><text x="65.9781%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.7281%" y="405" width="0.0805%" height="15" fill="rgb(224,100,52)" fg:x="817" fg:w="1"/><text x="65.9781%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.7281%" y="389" width="0.0805%" height="15" fill="rgb(246,226,38)" fg:x="817" fg:w="1"/><text x="65.9781%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="65.7281%" y="373" width="0.0805%" height="15" fill="rgb(252,21,43)" fg:x="817" fg:w="1"/><text x="65.9781%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="65.7281%" y="357" width="0.0805%" height="15" fill="rgb(250,44,8)" fg:x="817" fg:w="1"/><text x="65.9781%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.6476%" y="501" width="0.2414%" height="15" fill="rgb(224,200,45)" fg:x="816" fg:w="3"/><text x="65.8976%" y="511.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="65.8085%" y="485" width="0.0805%" height="15" fill="rgb(208,75,52)" fg:x="818" fg:w="1"/><text x="66.0585%" y="495.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="65.8085%" y="469" width="0.0805%" height="15" fill="rgb(213,167,20)" fg:x="818" fg:w="1"/><text x="66.0585%" y="479.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (6 samples, 0.48%)</title><rect x="65.4867%" y="565" width="0.4827%" height="15" fill="rgb(236,163,42)" fg:x="814" fg:w="6"/><text x="65.7367%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (4 samples, 0.32%)</title><rect x="65.6476%" y="549" width="0.3218%" height="15" fill="rgb(210,98,31)" fg:x="816" fg:w="4"/><text x="65.8976%" y="559.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="65.6476%" y="533" width="0.3218%" height="15" fill="rgb(246,166,15)" fg:x="816" fg:w="4"/><text x="65.8976%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="65.6476%" y="517" width="0.3218%" height="15" fill="rgb(214,114,7)" fg:x="816" fg:w="4"/><text x="65.8976%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8890%" y="501" width="0.0805%" height="15" fill="rgb(217,202,34)" fg:x="819" fg:w="1"/><text x="66.1390%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8890%" y="485" width="0.0805%" height="15" fill="rgb(227,226,29)" fg:x="819" fg:w="1"/><text x="66.1390%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8890%" y="469" width="0.0805%" height="15" fill="rgb(254,65,44)" fg:x="819" fg:w="1"/><text x="66.1390%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8890%" y="453" width="0.0805%" height="15" fill="rgb(213,150,32)" fg:x="819" fg:w="1"/><text x="66.1390%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="65.8890%" y="437" width="0.0805%" height="15" fill="rgb(208,86,46)" fg:x="819" fg:w="1"/><text x="66.1390%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8890%" y="421" width="0.0805%" height="15" fill="rgb(222,75,3)" fg:x="819" fg:w="1"/><text x="66.1390%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="65.8890%" y="405" width="0.0805%" height="15" fill="rgb(225,213,9)" fg:x="819" fg:w="1"/><text x="66.1390%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.8890%" y="389" width="0.0805%" height="15" fill="rgb(209,199,10)" fg:x="819" fg:w="1"/><text x="66.1390%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.8890%" y="373" width="0.0805%" height="15" fill="rgb(213,18,17)" fg:x="819" fg:w="1"/><text x="66.1390%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.9694%" y="565" width="0.0805%" height="15" fill="rgb(243,79,44)" fg:x="820" fg:w="1"/><text x="66.2194%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="66.1303%" y="533" width="0.1609%" height="15" fill="rgb(226,20,5)" fg:x="822" fg:w="2"/><text x="66.3803%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="66.1303%" y="517" width="0.1609%" height="15" fill="rgb(217,52,31)" fg:x="822" fg:w="2"/><text x="66.3803%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.2108%" y="501" width="0.0805%" height="15" fill="rgb(229,42,7)" fg:x="823" fg:w="1"/><text x="66.4608%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="66.2912%" y="517" width="0.1609%" height="15" fill="rgb(206,118,29)" fg:x="824" fg:w="2"/><text x="66.5412%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="66.2912%" y="501" width="0.1609%" height="15" fill="rgb(248,132,44)" fg:x="824" fg:w="2"/><text x="66.5412%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="66.2912%" y="485" width="0.1609%" height="15" fill="rgb(231,56,33)" fg:x="824" fg:w="2"/><text x="66.5412%" y="495.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="66.4521%" y="469" width="0.0805%" height="15" fill="rgb(208,31,11)" fg:x="826" fg:w="1"/><text x="66.7021%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4521%" y="453" width="0.0805%" height="15" fill="rgb(216,56,33)" fg:x="826" fg:w="1"/><text x="66.7021%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.4521%" y="437" width="0.0805%" height="15" fill="rgb(213,100,0)" fg:x="826" fg:w="1"/><text x="66.7021%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.4521%" y="421" width="0.0805%" height="15" fill="rgb(236,166,18)" fg:x="826" fg:w="1"/><text x="66.7021%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.4521%" y="405" width="0.0805%" height="15" fill="rgb(251,132,12)" fg:x="826" fg:w="1"/><text x="66.7021%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.4521%" y="389" width="0.0805%" height="15" fill="rgb(216,117,7)" fg:x="826" fg:w="1"/><text x="66.7021%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4521%" y="373" width="0.0805%" height="15" fill="rgb(243,184,8)" fg:x="826" fg:w="1"/><text x="66.7021%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.4521%" y="357" width="0.0805%" height="15" fill="rgb(212,91,32)" fg:x="826" fg:w="1"/><text x="66.7021%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.4521%" y="341" width="0.0805%" height="15" fill="rgb(224,147,15)" fg:x="826" fg:w="1"/><text x="66.7021%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.4521%" y="325" width="0.0805%" height="15" fill="rgb(228,84,10)" fg:x="826" fg:w="1"/><text x="66.7021%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.4521%" y="309" width="0.0805%" height="15" fill="rgb(221,161,22)" fg:x="826" fg:w="1"/><text x="66.7021%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.4521%" y="293" width="0.0805%" height="15" fill="rgb(250,132,20)" fg:x="826" fg:w="1"/><text x="66.7021%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.4521%" y="277" width="0.0805%" height="15" fill="rgb(209,161,12)" fg:x="826" fg:w="1"/><text x="66.7021%" y="287.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::to_entry (2 samples, 0.16%)</title><rect x="66.4521%" y="501" width="0.1609%" height="15" fill="rgb(232,142,42)" fg:x="826" fg:w="2"/><text x="66.7021%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (2 samples, 0.16%)</title><rect x="66.4521%" y="485" width="0.1609%" height="15" fill="rgb(240,228,27)" fg:x="826" fg:w="2"/><text x="66.7021%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="66.5326%" y="469" width="0.0805%" height="15" fill="rgb(243,0,31)" fg:x="827" fg:w="1"/><text x="66.7826%" y="479.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="66.5326%" y="453" width="0.0805%" height="15" fill="rgb(237,100,15)" fg:x="827" fg:w="1"/><text x="66.7826%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="437" width="0.0805%" height="15" fill="rgb(230,26,48)" fg:x="827" fg:w="1"/><text x="66.7826%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5326%" y="421" width="0.0805%" height="15" fill="rgb(215,7,13)" fg:x="827" fg:w="1"/><text x="66.7826%" y="431.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="405" width="0.0805%" height="15" fill="rgb(227,172,5)" fg:x="827" fg:w="1"/><text x="66.7826%" y="415.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="389" width="0.0805%" height="15" fill="rgb(248,206,14)" fg:x="827" fg:w="1"/><text x="66.7826%" y="399.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="373" width="0.0805%" height="15" fill="rgb(231,62,54)" fg:x="827" fg:w="1"/><text x="66.7826%" y="383.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5326%" y="357" width="0.0805%" height="15" fill="rgb(222,136,26)" fg:x="827" fg:w="1"/><text x="66.7826%" y="367.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="341" width="0.0805%" height="15" fill="rgb(211,115,42)" fg:x="827" fg:w="1"/><text x="66.7826%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="325" width="0.0805%" height="15" fill="rgb(234,5,17)" fg:x="827" fg:w="1"/><text x="66.7826%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="309" width="0.0805%" height="15" fill="rgb(233,67,14)" fg:x="827" fg:w="1"/><text x="66.7826%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.5326%" y="293" width="0.0805%" height="15" fill="rgb(225,133,51)" fg:x="827" fg:w="1"/><text x="66.7826%" y="303.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.5326%" y="277" width="0.0805%" height="15" fill="rgb(206,107,40)" fg:x="827" fg:w="1"/><text x="66.7826%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.5326%" y="261" width="0.0805%" height="15" fill="rgb(210,56,9)" fg:x="827" fg:w="1"/><text x="66.7826%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="66.5326%" y="245" width="0.0805%" height="15" fill="rgb(222,204,4)" fg:x="827" fg:w="1"/><text x="66.7826%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="66.5326%" y="229" width="0.0805%" height="15" fill="rgb(210,168,3)" fg:x="827" fg:w="1"/><text x="66.7826%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="66.5326%" y="213" width="0.0805%" height="15" fill="rgb(246,183,26)" fg:x="827" fg:w="1"/><text x="66.7826%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="66.5326%" y="197" width="0.0805%" height="15" fill="rgb(228,27,31)" fg:x="827" fg:w="1"/><text x="66.7826%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="66.5326%" y="181" width="0.0805%" height="15" fill="rgb(206,8,2)" fg:x="827" fg:w="1"/><text x="66.7826%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.5326%" y="165" width="0.0805%" height="15" fill="rgb(251,229,16)" fg:x="827" fg:w="1"/><text x="66.7826%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="66.5326%" y="149" width="0.0805%" height="15" fill="rgb(208,84,44)" fg:x="827" fg:w="1"/><text x="66.7826%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="66.5326%" y="133" width="0.0805%" height="15" fill="rgb(221,228,13)" fg:x="827" fg:w="1"/><text x="66.7826%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="66.5326%" y="117" width="0.0805%" height="15" fill="rgb(248,42,47)" fg:x="827" fg:w="1"/><text x="66.7826%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="66.5326%" y="101" width="0.0805%" height="15" fill="rgb(222,124,41)" fg:x="827" fg:w="1"/><text x="66.7826%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="66.5326%" y="85" width="0.0805%" height="15" fill="rgb(244,191,35)" fg:x="827" fg:w="1"/><text x="66.7826%" y="95.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="66.5326%" y="69" width="0.0805%" height="15" fill="rgb(222,223,54)" fg:x="827" fg:w="1"/><text x="66.7826%" y="79.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="66.5326%" y="53" width="0.0805%" height="15" fill="rgb(248,178,42)" fg:x="827" fg:w="1"/><text x="66.7826%" y="63.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="66.5326%" y="37" width="0.0805%" height="15" fill="rgb(238,21,24)" fg:x="827" fg:w="1"/><text x="66.7826%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.6130%" y="437" width="0.0805%" height="15" fill="rgb(227,134,7)" fg:x="828" fg:w="1"/><text x="66.8630%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="66.6130%" y="421" width="0.0805%" height="15" fill="rgb(205,191,1)" fg:x="828" fg:w="1"/><text x="66.8630%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="66.6130%" y="405" width="0.0805%" height="15" fill="rgb(222,166,30)" fg:x="828" fg:w="1"/><text x="66.8630%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="66.6130%" y="389" width="0.0805%" height="15" fill="rgb(229,94,26)" fg:x="828" fg:w="1"/><text x="66.8630%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="66.6130%" y="373" width="0.0805%" height="15" fill="rgb(246,97,2)" fg:x="828" fg:w="1"/><text x="66.8630%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.6130%" y="357" width="0.0805%" height="15" fill="rgb(252,112,53)" fg:x="828" fg:w="1"/><text x="66.8630%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="66.6130%" y="341" width="0.0805%" height="15" fill="rgb(225,52,38)" fg:x="828" fg:w="1"/><text x="66.8630%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="66.6130%" y="325" width="0.0805%" height="15" fill="rgb(215,203,24)" fg:x="828" fg:w="1"/><text x="66.8630%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="66.6130%" y="309" width="0.0805%" height="15" fill="rgb(210,122,52)" fg:x="828" fg:w="1"/><text x="66.8630%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="66.6130%" y="293" width="0.0805%" height="15" fill="rgb(209,161,44)" fg:x="828" fg:w="1"/><text x="66.8630%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="66.6130%" y="277" width="0.0805%" height="15" fill="rgb(221,97,16)" fg:x="828" fg:w="1"/><text x="66.8630%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.6130%" y="261" width="0.0805%" height="15" fill="rgb(209,87,13)" fg:x="828" fg:w="1"/><text x="66.8630%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="66.6935%" y="437" width="0.3218%" height="15" fill="rgb(242,1,21)" fg:x="829" fg:w="4"/><text x="66.9435%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="66.6935%" y="421" width="0.3218%" height="15" fill="rgb(251,170,41)" fg:x="829" fg:w="4"/><text x="66.9435%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.7739%" y="405" width="0.2414%" height="15" fill="rgb(227,201,10)" fg:x="830" fg:w="3"/><text x="67.0239%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="66.7739%" y="389" width="0.2414%" height="15" fill="rgb(231,100,29)" fg:x="830" fg:w="3"/><text x="67.0239%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="66.7739%" y="373" width="0.2414%" height="15" fill="rgb(226,31,35)" fg:x="830" fg:w="3"/><text x="67.0239%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="66.7739%" y="357" width="0.2414%" height="15" fill="rgb(254,99,26)" fg:x="830" fg:w="3"/><text x="67.0239%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="66.7739%" y="341" width="0.2414%" height="15" fill="rgb(217,228,17)" fg:x="830" fg:w="3"/><text x="67.0239%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="66.7739%" y="325" width="0.2414%" height="15" fill="rgb(226,132,8)" fg:x="830" fg:w="3"/><text x="67.0239%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="66.7739%" y="309" width="0.2414%" height="15" fill="rgb(220,202,47)" fg:x="830" fg:w="3"/><text x="67.0239%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="66.7739%" y="293" width="0.2414%" height="15" fill="rgb(245,194,10)" fg:x="830" fg:w="3"/><text x="67.0239%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="66.7739%" y="277" width="0.2414%" height="15" fill="rgb(225,44,52)" fg:x="830" fg:w="3"/><text x="67.0239%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="66.7739%" y="261" width="0.2414%" height="15" fill="rgb(235,10,4)" fg:x="830" fg:w="3"/><text x="67.0239%" y="271.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="66.7739%" y="245" width="0.2414%" height="15" fill="rgb(244,32,23)" fg:x="830" fg:w="3"/><text x="67.0239%" y="255.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="66.7739%" y="229" width="0.2414%" height="15" fill="rgb(210,115,0)" fg:x="830" fg:w="3"/><text x="67.0239%" y="239.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="66.6130%" y="469" width="0.4827%" height="15" fill="rgb(246,72,16)" fg:x="828" fg:w="6"/><text x="66.8630%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="66.6130%" y="453" width="0.4827%" height="15" fill="rgb(223,32,10)" fg:x="828" fg:w="6"/><text x="66.8630%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.0153%" y="437" width="0.0805%" height="15" fill="rgb(223,97,52)" fg:x="833" fg:w="1"/><text x="67.2653%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="67.0957%" y="469" width="0.0805%" height="15" fill="rgb(238,69,38)" fg:x="834" fg:w="1"/><text x="67.3457%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="67.0957%" y="453" width="0.0805%" height="15" fill="rgb(226,61,1)" fg:x="834" fg:w="1"/><text x="67.3457%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.0957%" y="437" width="0.0805%" height="15" fill="rgb(244,56,14)" fg:x="834" fg:w="1"/><text x="67.3457%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.1762%" y="437" width="0.0805%" height="15" fill="rgb(242,164,18)" fg:x="835" fg:w="1"/><text x="67.4262%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="67.1762%" y="469" width="0.1609%" height="15" fill="rgb(217,130,28)" fg:x="835" fg:w="2"/><text x="67.4262%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="67.1762%" y="453" width="0.1609%" height="15" fill="rgb(218,118,52)" fg:x="835" fg:w="2"/><text x="67.4262%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="67.2566%" y="437" width="0.0805%" height="15" fill="rgb(251,112,38)" fg:x="836" fg:w="1"/><text x="67.5066%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="67.4175%" y="437" width="0.0805%" height="15" fill="rgb(239,14,50)" fg:x="838" fg:w="1"/><text x="67.6675%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4175%" y="421" width="0.0805%" height="15" fill="rgb(228,141,54)" fg:x="838" fg:w="1"/><text x="67.6675%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (16 samples, 1.29%)</title><rect x="66.2912%" y="533" width="1.2872%" height="15" fill="rgb(236,128,15)" fg:x="824" fg:w="16"/><text x="66.5412%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (14 samples, 1.13%)</title><rect x="66.4521%" y="517" width="1.1263%" height="15" fill="rgb(206,140,54)" fg:x="826" fg:w="14"/><text x="66.7021%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (12 samples, 0.97%)</title><rect x="66.6130%" y="501" width="0.9654%" height="15" fill="rgb(240,0,44)" fg:x="828" fg:w="12"/><text x="66.8630%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (12 samples, 0.97%)</title><rect x="66.6130%" y="485" width="0.9654%" height="15" fill="rgb(243,207,23)" fg:x="828" fg:w="12"/><text x="66.8630%" y="495.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (3 samples, 0.24%)</title><rect x="67.3371%" y="469" width="0.2414%" height="15" fill="rgb(247,202,1)" fg:x="837" fg:w="3"/><text x="67.5871%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.4175%" y="453" width="0.1609%" height="15" fill="rgb(239,83,27)" fg:x="838" fg:w="2"/><text x="67.6675%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.4980%" y="437" width="0.0805%" height="15" fill="rgb(219,205,7)" fg:x="839" fg:w="1"/><text x="67.7480%" y="447.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.4980%" y="421" width="0.0805%" height="15" fill="rgb(249,184,22)" fg:x="839" fg:w="1"/><text x="67.7480%" y="431.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="67.4980%" y="405" width="0.0805%" height="15" fill="rgb(230,150,14)" fg:x="839" fg:w="1"/><text x="67.7480%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.4980%" y="389" width="0.0805%" height="15" fill="rgb(240,118,34)" fg:x="839" fg:w="1"/><text x="67.7480%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.4980%" y="373" width="0.0805%" height="15" fill="rgb(227,162,21)" fg:x="839" fg:w="1"/><text x="67.7480%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.5784%" y="421" width="0.0805%" height="15" fill="rgb(219,14,9)" fg:x="840" fg:w="1"/><text x="67.8284%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.5784%" y="405" width="0.0805%" height="15" fill="rgb(223,226,16)" fg:x="840" fg:w="1"/><text x="67.8284%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.5784%" y="389" width="0.0805%" height="15" fill="rgb(246,161,37)" fg:x="840" fg:w="1"/><text x="67.8284%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.5784%" y="373" width="0.0805%" height="15" fill="rgb(205,221,43)" fg:x="840" fg:w="1"/><text x="67.8284%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.5784%" y="357" width="0.0805%" height="15" fill="rgb(228,216,26)" fg:x="840" fg:w="1"/><text x="67.8284%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.5784%" y="341" width="0.0805%" height="15" fill="rgb(251,33,17)" fg:x="840" fg:w="1"/><text x="67.8284%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.5784%" y="325" width="0.0805%" height="15" fill="rgb(246,126,36)" fg:x="840" fg:w="1"/><text x="67.8284%" y="335.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="67.5784%" y="517" width="0.2414%" height="15" fill="rgb(217,160,24)" fg:x="840" fg:w="3"/><text x="67.8284%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="67.5784%" y="501" width="0.2414%" height="15" fill="rgb(211,64,12)" fg:x="840" fg:w="3"/><text x="67.8284%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="67.5784%" y="485" width="0.2414%" height="15" fill="rgb(238,47,36)" fg:x="840" fg:w="3"/><text x="67.8284%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="67.5784%" y="469" width="0.2414%" height="15" fill="rgb(210,157,42)" fg:x="840" fg:w="3"/><text x="67.8284%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="67.5784%" y="453" width="0.2414%" height="15" fill="rgb(242,84,39)" fg:x="840" fg:w="3"/><text x="67.8284%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="67.5784%" y="437" width="0.2414%" height="15" fill="rgb(207,65,41)" fg:x="840" fg:w="3"/><text x="67.8284%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="67.6589%" y="421" width="0.1609%" height="15" fill="rgb(246,97,27)" fg:x="841" fg:w="2"/><text x="67.9089%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="67.6589%" y="405" width="0.1609%" height="15" fill="rgb(229,9,43)" fg:x="841" fg:w="2"/><text x="67.9089%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="67.9002%" y="469" width="0.0805%" height="15" fill="rgb(211,82,44)" fg:x="844" fg:w="1"/><text x="68.1502%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.9002%" y="453" width="0.0805%" height="15" fill="rgb(253,45,54)" fg:x="844" fg:w="1"/><text x="68.1502%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0611%" y="437" width="0.0805%" height="15" fill="rgb(235,94,32)" fg:x="846" fg:w="1"/><text x="68.3111%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0611%" y="421" width="0.0805%" height="15" fill="rgb(252,143,1)" fg:x="846" fg:w="1"/><text x="68.3111%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0611%" y="405" width="0.0805%" height="15" fill="rgb(239,164,4)" fg:x="846" fg:w="1"/><text x="68.3111%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0611%" y="389" width="0.0805%" height="15" fill="rgb(222,25,39)" fg:x="846" fg:w="1"/><text x="68.3111%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="68.0611%" y="373" width="0.0805%" height="15" fill="rgb(234,175,9)" fg:x="846" fg:w="1"/><text x="68.3111%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0611%" y="357" width="0.0805%" height="15" fill="rgb(247,200,41)" fg:x="846" fg:w="1"/><text x="68.3111%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.0611%" y="341" width="0.0805%" height="15" fill="rgb(245,101,27)" fg:x="846" fg:w="1"/><text x="68.3111%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.0611%" y="325" width="0.0805%" height="15" fill="rgb(221,29,7)" fg:x="846" fg:w="1"/><text x="68.3111%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.0611%" y="309" width="0.0805%" height="15" fill="rgb(240,184,10)" fg:x="846" fg:w="1"/><text x="68.3111%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.0611%" y="293" width="0.0805%" height="15" fill="rgb(251,85,15)" fg:x="846" fg:w="1"/><text x="68.3111%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="68.0611%" y="277" width="0.0805%" height="15" fill="rgb(252,84,16)" fg:x="846" fg:w="1"/><text x="68.3111%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="68.0611%" y="261" width="0.0805%" height="15" fill="rgb(233,136,6)" fg:x="846" fg:w="1"/><text x="68.3111%" y="271.50"></text></g><g><title>kernel::model::entry::Entry::name (6 samples, 0.48%)</title><rect x="67.8198%" y="501" width="0.4827%" height="15" fill="rgb(226,169,30)" fg:x="843" fg:w="6"/><text x="68.0698%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="67.9002%" y="485" width="0.4023%" height="15" fill="rgb(241,83,18)" fg:x="844" fg:w="5"/><text x="68.1502%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="67.9807%" y="469" width="0.3218%" height="15" fill="rgb(239,151,5)" fg:x="845" fg:w="4"/><text x="68.2307%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.9807%" y="453" width="0.3218%" height="15" fill="rgb(238,56,13)" fg:x="845" fg:w="4"/><text x="68.2307%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.1416%" y="437" width="0.1609%" height="15" fill="rgb(224,100,0)" fg:x="847" fg:w="2"/><text x="68.3916%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.1416%" y="421" width="0.1609%" height="15" fill="rgb(231,168,26)" fg:x="847" fg:w="2"/><text x="68.3916%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.1416%" y="405" width="0.1609%" height="15" fill="rgb(238,110,3)" fg:x="847" fg:w="2"/><text x="68.3916%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.1416%" y="389" width="0.1609%" height="15" fill="rgb(216,190,1)" fg:x="847" fg:w="2"/><text x="68.3916%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="68.1416%" y="373" width="0.1609%" height="15" fill="rgb(208,130,52)" fg:x="847" fg:w="2"/><text x="68.3916%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.1416%" y="357" width="0.1609%" height="15" fill="rgb(233,74,12)" fg:x="847" fg:w="2"/><text x="68.3916%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="68.1416%" y="341" width="0.1609%" height="15" fill="rgb(248,12,15)" fg:x="847" fg:w="2"/><text x="68.3916%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="68.1416%" y="325" width="0.1609%" height="15" fill="rgb(228,18,29)" fg:x="847" fg:w="2"/><text x="68.3916%" y="335.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="68.1416%" y="309" width="0.1609%" height="15" fill="rgb(206,153,11)" fg:x="847" fg:w="2"/><text x="68.3916%" y="319.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (13 samples, 1.05%)</title><rect x="67.5784%" y="533" width="1.0459%" height="15" fill="rgb(216,50,30)" fg:x="840" fg:w="13"/><text x="67.8284%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (10 samples, 0.80%)</title><rect x="67.8198%" y="517" width="0.8045%" height="15" fill="rgb(217,20,39)" fg:x="843" fg:w="10"/><text x="68.0698%" y="527.50"></text></g><g><title>plugins_core::finding::matches_string (4 samples, 0.32%)</title><rect x="68.3025%" y="501" width="0.3218%" height="15" fill="rgb(232,130,46)" fg:x="849" fg:w="4"/><text x="68.5525%" y="511.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (2 samples, 0.16%)</title><rect x="68.4634%" y="485" width="0.1609%" height="15" fill="rgb(233,141,43)" fg:x="851" fg:w="2"/><text x="68.7134%" y="495.50"></text></g><g><title>alloc::str::convert_while_ascii (1 samples, 0.08%)</title><rect x="68.5438%" y="469" width="0.0805%" height="15" fill="rgb(240,64,34)" fg:x="852" fg:w="1"/><text x="68.7938%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="68.5438%" y="453" width="0.0805%" height="15" fill="rgb(230,28,31)" fg:x="852" fg:w="1"/><text x="68.7938%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5438%" y="437" width="0.0805%" height="15" fill="rgb(223,56,30)" fg:x="852" fg:w="1"/><text x="68.7938%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.5438%" y="421" width="0.0805%" height="15" fill="rgb(248,134,16)" fg:x="852" fg:w="1"/><text x="68.7938%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.5438%" y="405" width="0.0805%" height="15" fill="rgb(206,202,4)" fg:x="852" fg:w="1"/><text x="68.7938%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.5438%" y="389" width="0.0805%" height="15" fill="rgb(219,116,48)" fg:x="852" fg:w="1"/><text x="68.7938%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.5438%" y="373" width="0.0805%" height="15" fill="rgb(224,122,46)" fg:x="852" fg:w="1"/><text x="68.7938%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.5438%" y="357" width="0.0805%" height="15" fill="rgb(219,114,47)" fg:x="852" fg:w="1"/><text x="68.7938%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.5438%" y="341" width="0.0805%" height="15" fill="rgb(244,60,44)" fg:x="852" fg:w="1"/><text x="68.7938%" y="351.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (33 samples, 2.65%)</title><rect x="66.0499%" y="565" width="2.6549%" height="15" fill="rgb(243,226,25)" fg:x="821" fg:w="33"/><text x="66.2999%" y="575.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (32 samples, 2.57%)</title><rect x="66.1303%" y="549" width="2.5744%" height="15" fill="rgb(243,101,52)" fg:x="822" fg:w="32"/><text x="66.3803%" y="559.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="68.6243%" y="533" width="0.0805%" height="15" fill="rgb(207,69,25)" fg:x="853" fg:w="1"/><text x="68.8743%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6243%" y="517" width="0.0805%" height="15" fill="rgb(222,204,53)" fg:x="853" fg:w="1"/><text x="68.8743%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6243%" y="501" width="0.0805%" height="15" fill="rgb(234,84,49)" fg:x="853" fg:w="1"/><text x="68.8743%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="68.6243%" y="485" width="0.0805%" height="15" fill="rgb(233,77,41)" fg:x="853" fg:w="1"/><text x="68.8743%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="68.6243%" y="469" width="0.0805%" height="15" fill="rgb(221,200,42)" fg:x="853" fg:w="1"/><text x="68.8743%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="68.6243%" y="453" width="0.0805%" height="15" fill="rgb(221,29,35)" fg:x="853" fg:w="1"/><text x="68.8743%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="68.6243%" y="437" width="0.0805%" height="15" fill="rgb(221,71,22)" fg:x="853" fg:w="1"/><text x="68.8743%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.6243%" y="421" width="0.0805%" height="15" fill="rgb(216,162,23)" fg:x="853" fg:w="1"/><text x="68.8743%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="68.6243%" y="405" width="0.0805%" height="15" fill="rgb(248,32,48)" fg:x="853" fg:w="1"/><text x="68.8743%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="68.6243%" y="389" width="0.0805%" height="15" fill="rgb(241,156,30)" fg:x="853" fg:w="1"/><text x="68.8743%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="68.6243%" y="373" width="0.0805%" height="15" fill="rgb(237,196,46)" fg:x="853" fg:w="1"/><text x="68.8743%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="68.6243%" y="357" width="0.0805%" height="15" fill="rgb(216,2,6)" fg:x="853" fg:w="1"/><text x="68.8743%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="68.6243%" y="341" width="0.0805%" height="15" fill="rgb(214,47,16)" fg:x="853" fg:w="1"/><text x="68.8743%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.6243%" y="325" width="0.0805%" height="15" fill="rgb(240,123,13)" fg:x="853" fg:w="1"/><text x="68.8743%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="68.7047%" y="565" width="0.0805%" height="15" fill="rgb(206,47,48)" fg:x="854" fg:w="1"/><text x="68.9547%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="68.7047%" y="549" width="0.0805%" height="15" fill="rgb(252,88,27)" fg:x="854" fg:w="1"/><text x="68.9547%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.7047%" y="533" width="0.0805%" height="15" fill="rgb(218,105,30)" fg:x="854" fg:w="1"/><text x="68.9547%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.7852%" y="469" width="0.1609%" height="15" fill="rgb(227,52,46)" fg:x="855" fg:w="2"/><text x="69.0352%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="68.7852%" y="453" width="0.1609%" height="15" fill="rgb(222,190,21)" fg:x="855" fg:w="2"/><text x="69.0352%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.8656%" y="437" width="0.0805%" height="15" fill="rgb(205,86,20)" fg:x="856" fg:w="1"/><text x="69.1156%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="68.7852%" y="485" width="0.2414%" height="15" fill="rgb(233,45,1)" fg:x="855" fg:w="3"/><text x="69.0352%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="68.9461%" y="469" width="0.0805%" height="15" fill="rgb(208,39,6)" fg:x="857" fg:w="1"/><text x="69.1961%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.0265%" y="453" width="0.0805%" height="15" fill="rgb(211,178,22)" fg:x="858" fg:w="1"/><text x="69.2765%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="68.7852%" y="533" width="0.5632%" height="15" fill="rgb(227,112,23)" fg:x="855" fg:w="7"/><text x="69.0352%" y="543.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="68.7852%" y="517" width="0.5632%" height="15" fill="rgb(214,41,4)" fg:x="855" fg:w="7"/><text x="69.0352%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="68.7852%" y="501" width="0.5632%" height="15" fill="rgb(219,144,46)" fg:x="855" fg:w="7"/><text x="69.0352%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="69.0265%" y="485" width="0.3218%" height="15" fill="rgb(253,176,50)" fg:x="858" fg:w="4"/><text x="69.2765%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.0265%" y="469" width="0.3218%" height="15" fill="rgb(206,123,1)" fg:x="858" fg:w="4"/><text x="69.2765%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.1070%" y="453" width="0.2414%" height="15" fill="rgb(250,111,32)" fg:x="859" fg:w="3"/><text x="69.3570%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.1070%" y="437" width="0.2414%" height="15" fill="rgb(229,17,49)" fg:x="859" fg:w="3"/><text x="69.3570%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.1874%" y="421" width="0.1609%" height="15" fill="rgb(250,123,19)" fg:x="860" fg:w="2"/><text x="69.4374%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.1874%" y="405" width="0.1609%" height="15" fill="rgb(220,124,20)" fg:x="860" fg:w="2"/><text x="69.4374%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2679%" y="389" width="0.0805%" height="15" fill="rgb(242,85,25)" fg:x="861" fg:w="1"/><text x="69.5179%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2679%" y="373" width="0.0805%" height="15" fill="rgb(245,217,7)" fg:x="861" fg:w="1"/><text x="69.5179%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.2679%" y="357" width="0.0805%" height="15" fill="rgb(242,50,25)" fg:x="861" fg:w="1"/><text x="69.5179%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.2679%" y="341" width="0.0805%" height="15" fill="rgb(251,210,24)" fg:x="861" fg:w="1"/><text x="69.5179%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="69.2679%" y="325" width="0.0805%" height="15" fill="rgb(238,24,8)" fg:x="861" fg:w="1"/><text x="69.5179%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.2679%" y="309" width="0.0805%" height="15" fill="rgb(211,96,19)" fg:x="861" fg:w="1"/><text x="69.5179%" y="319.50"></text></g><g><title>serde_json::value::de::SeqDeserializer::new (1 samples, 0.08%)</title><rect x="69.2679%" y="293" width="0.0805%" height="15" fill="rgb(222,186,12)" fg:x="861" fg:w="1"/><text x="69.5179%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.4288%" y="485" width="0.0805%" height="15" fill="rgb(212,70,49)" fg:x="863" fg:w="1"/><text x="69.6788%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.4288%" y="469" width="0.0805%" height="15" fill="rgb(238,69,49)" fg:x="863" fg:w="1"/><text x="69.6788%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="69.4288%" y="453" width="0.0805%" height="15" fill="rgb(225,13,3)" fg:x="863" fg:w="1"/><text x="69.6788%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.4288%" y="437" width="0.0805%" height="15" fill="rgb(229,188,14)" fg:x="863" fg:w="1"/><text x="69.6788%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.5093%" y="421" width="0.0805%" height="15" fill="rgb(218,58,16)" fg:x="864" fg:w="1"/><text x="69.7593%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.5093%" y="405" width="0.0805%" height="15" fill="rgb(206,213,49)" fg:x="864" fg:w="1"/><text x="69.7593%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="69.5093%" y="453" width="0.2414%" height="15" fill="rgb(225,152,48)" fg:x="864" fg:w="3"/><text x="69.7593%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="69.5093%" y="437" width="0.2414%" height="15" fill="rgb(216,103,42)" fg:x="864" fg:w="3"/><text x="69.7593%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="69.5897%" y="421" width="0.1609%" height="15" fill="rgb(212,214,39)" fg:x="865" fg:w="2"/><text x="69.8397%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.5897%" y="405" width="0.1609%" height="15" fill="rgb(249,52,41)" fg:x="865" fg:w="2"/><text x="69.8397%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (13 samples, 1.05%)</title><rect x="68.7852%" y="565" width="1.0459%" height="15" fill="rgb(212,173,53)" fg:x="855" fg:w="13"/><text x="69.0352%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (13 samples, 1.05%)</title><rect x="68.7852%" y="549" width="1.0459%" height="15" fill="rgb(232,222,21)" fg:x="855" fg:w="13"/><text x="69.0352%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="69.3484%" y="533" width="0.4827%" height="15" fill="rgb(206,228,31)" fg:x="862" fg:w="6"/><text x="69.5984%" y="543.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="69.3484%" y="517" width="0.4827%" height="15" fill="rgb(231,121,16)" fg:x="862" fg:w="6"/><text x="69.5984%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="69.3484%" y="501" width="0.4827%" height="15" fill="rgb(241,3,23)" fg:x="862" fg:w="6"/><text x="69.5984%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="69.5093%" y="485" width="0.3218%" height="15" fill="rgb(220,68,37)" fg:x="864" fg:w="4"/><text x="69.7593%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="69.5093%" y="469" width="0.3218%" height="15" fill="rgb(212,23,49)" fg:x="864" fg:w="4"/><text x="69.7593%" y="479.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="69.7506%" y="453" width="0.0805%" height="15" fill="rgb(231,38,8)" fg:x="867" fg:w="1"/><text x="70.0006%" y="463.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="69.8311%" y="565" width="0.0805%" height="15" fill="rgb(222,137,29)" fg:x="868" fg:w="1"/><text x="70.0811%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="69.8311%" y="549" width="0.0805%" height="15" fill="rgb(239,8,6)" fg:x="868" fg:w="1"/><text x="70.0811%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="69.8311%" y="533" width="0.0805%" height="15" fill="rgb(224,142,47)" fg:x="868" fg:w="1"/><text x="70.0811%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="69.8311%" y="517" width="0.0805%" height="15" fill="rgb(226,67,29)" fg:x="868" fg:w="1"/><text x="70.0811%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="501" width="0.0805%" height="15" fill="rgb(212,144,29)" fg:x="868" fg:w="1"/><text x="70.0811%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="485" width="0.0805%" height="15" fill="rgb(252,2,51)" fg:x="868" fg:w="1"/><text x="70.0811%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="469" width="0.0805%" height="15" fill="rgb(246,103,52)" fg:x="868" fg:w="1"/><text x="70.0811%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="453" width="0.0805%" height="15" fill="rgb(229,229,35)" fg:x="868" fg:w="1"/><text x="70.0811%" y="463.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="437" width="0.0805%" height="15" fill="rgb(209,83,15)" fg:x="868" fg:w="1"/><text x="70.0811%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="69.8311%" y="421" width="0.0805%" height="15" fill="rgb(218,54,16)" fg:x="868" fg:w="1"/><text x="70.0811%" y="431.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="69.8311%" y="405" width="0.0805%" height="15" fill="rgb(205,2,26)" fg:x="868" fg:w="1"/><text x="70.0811%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.08%)</title><rect x="69.8311%" y="389" width="0.0805%" height="15" fill="rgb(248,180,0)" fg:x="868" fg:w="1"/><text x="70.0811%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9920%" y="469" width="0.0805%" height="15" fill="rgb(231,136,16)" fg:x="870" fg:w="1"/><text x="70.2420%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9920%" y="453" width="0.0805%" height="15" fill="rgb(215,90,4)" fg:x="870" fg:w="1"/><text x="70.2420%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9920%" y="437" width="0.0805%" height="15" fill="rgb(251,131,3)" fg:x="870" fg:w="1"/><text x="70.2420%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.9920%" y="421" width="0.0805%" height="15" fill="rgb(244,47,21)" fg:x="870" fg:w="1"/><text x="70.2420%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9920%" y="405" width="0.0805%" height="15" fill="rgb(231,115,9)" fg:x="870" fg:w="1"/><text x="70.2420%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.9920%" y="389" width="0.0805%" height="15" fill="rgb(241,119,20)" fg:x="870" fg:w="1"/><text x="70.2420%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="69.9920%" y="373" width="0.0805%" height="15" fill="rgb(224,99,0)" fg:x="870" fg:w="1"/><text x="70.2420%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="69.9920%" y="357" width="0.0805%" height="15" fill="rgb(219,213,18)" fg:x="870" fg:w="1"/><text x="70.2420%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="69.9920%" y="341" width="0.0805%" height="15" fill="rgb(209,71,34)" fg:x="870" fg:w="1"/><text x="70.2420%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9920%" y="325" width="0.0805%" height="15" fill="rgb(245,203,20)" fg:x="870" fg:w="1"/><text x="70.2420%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="69.9920%" y="309" width="0.0805%" height="15" fill="rgb(221,44,20)" fg:x="870" fg:w="1"/><text x="70.2420%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="69.9920%" y="293" width="0.0805%" height="15" fill="rgb(229,97,0)" fg:x="870" fg:w="1"/><text x="70.2420%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="69.9920%" y="277" width="0.0805%" height="15" fill="rgb(206,56,49)" fg:x="870" fg:w="1"/><text x="70.2420%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="69.9920%" y="261" width="0.0805%" height="15" fill="rgb(208,216,41)" fg:x="870" fg:w="1"/><text x="70.2420%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="69.9920%" y="245" width="0.0805%" height="15" fill="rgb(231,31,6)" fg:x="870" fg:w="1"/><text x="70.2420%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="69.9920%" y="229" width="0.0805%" height="15" fill="rgb(239,88,23)" fg:x="870" fg:w="1"/><text x="70.2420%" y="239.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="69.9920%" y="517" width="0.1609%" height="15" fill="rgb(227,111,45)" fg:x="870" fg:w="2"/><text x="70.2420%" y="527.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="69.9920%" y="501" width="0.1609%" height="15" fill="rgb(207,167,18)" fg:x="870" fg:w="2"/><text x="70.2420%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="69.9920%" y="485" width="0.1609%" height="15" fill="rgb(253,127,17)" fg:x="870" fg:w="2"/><text x="70.2420%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.0724%" y="469" width="0.0805%" height="15" fill="rgb(211,229,9)" fg:x="871" fg:w="1"/><text x="70.3224%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0724%" y="453" width="0.0805%" height="15" fill="rgb(249,25,14)" fg:x="871" fg:w="1"/><text x="70.3224%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.0724%" y="437" width="0.0805%" height="15" fill="rgb(237,177,4)" fg:x="871" fg:w="1"/><text x="70.3224%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0724%" y="421" width="0.0805%" height="15" fill="rgb(248,163,50)" fg:x="871" fg:w="1"/><text x="70.3224%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.0724%" y="405" width="0.0805%" height="15" fill="rgb(246,67,42)" fg:x="871" fg:w="1"/><text x="70.3224%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.0724%" y="389" width="0.0805%" height="15" fill="rgb(228,136,45)" fg:x="871" fg:w="1"/><text x="70.3224%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.0724%" y="373" width="0.0805%" height="15" fill="rgb(218,93,4)" fg:x="871" fg:w="1"/><text x="70.3224%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="70.0724%" y="357" width="0.0805%" height="15" fill="rgb(209,82,29)" fg:x="871" fg:w="1"/><text x="70.3224%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="70.0724%" y="341" width="0.0805%" height="15" fill="rgb(213,219,38)" fg:x="871" fg:w="1"/><text x="70.3224%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="69.9920%" y="549" width="0.2414%" height="15" fill="rgb(233,212,17)" fg:x="870" fg:w="3"/><text x="70.2420%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="69.9920%" y="533" width="0.2414%" height="15" fill="rgb(225,65,3)" fg:x="870" fg:w="3"/><text x="70.2420%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="70.1529%" y="517" width="0.0805%" height="15" fill="rgb(226,25,1)" fg:x="872" fg:w="1"/><text x="70.4029%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="70.1529%" y="501" width="0.0805%" height="15" fill="rgb(229,83,27)" fg:x="872" fg:w="1"/><text x="70.4029%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="70.1529%" y="485" width="0.0805%" height="15" fill="rgb(245,80,47)" fg:x="872" fg:w="1"/><text x="70.4029%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1529%" y="469" width="0.0805%" height="15" fill="rgb(213,79,27)" fg:x="872" fg:w="1"/><text x="70.4029%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1529%" y="453" width="0.0805%" height="15" fill="rgb(232,38,28)" fg:x="872" fg:w="1"/><text x="70.4029%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1529%" y="437" width="0.0805%" height="15" fill="rgb(253,63,39)" fg:x="872" fg:w="1"/><text x="70.4029%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1529%" y="421" width="0.0805%" height="15" fill="rgb(222,204,17)" fg:x="872" fg:w="1"/><text x="70.4029%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.1529%" y="405" width="0.0805%" height="15" fill="rgb(254,135,49)" fg:x="872" fg:w="1"/><text x="70.4029%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1529%" y="389" width="0.0805%" height="15" fill="rgb(226,203,24)" fg:x="872" fg:w="1"/><text x="70.4029%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.1529%" y="373" width="0.0805%" height="15" fill="rgb(225,2,17)" fg:x="872" fg:w="1"/><text x="70.4029%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.1529%" y="357" width="0.0805%" height="15" fill="rgb(234,135,43)" fg:x="872" fg:w="1"/><text x="70.4029%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.1529%" y="341" width="0.0805%" height="15" fill="rgb(224,14,46)" fg:x="872" fg:w="1"/><text x="70.4029%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.1529%" y="325" width="0.0805%" height="15" fill="rgb(206,42,0)" fg:x="872" fg:w="1"/><text x="70.4029%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.2333%" y="533" width="0.1609%" height="15" fill="rgb(244,38,23)" fg:x="873" fg:w="2"/><text x="70.4833%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="70.3942%" y="517" width="0.4023%" height="15" fill="rgb(230,25,21)" fg:x="875" fg:w="5"/><text x="70.6442%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="70.4747%" y="501" width="0.3218%" height="15" fill="rgb(252,217,28)" fg:x="876" fg:w="4"/><text x="70.7247%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="70.5551%" y="485" width="0.2414%" height="15" fill="rgb(251,4,49)" fg:x="877" fg:w="3"/><text x="70.8051%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.5551%" y="469" width="0.2414%" height="15" fill="rgb(217,126,31)" fg:x="877" fg:w="3"/><text x="70.8051%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7160%" y="453" width="0.0805%" height="15" fill="rgb(242,181,33)" fg:x="879" fg:w="1"/><text x="70.9660%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.7160%" y="437" width="0.0805%" height="15" fill="rgb(241,108,6)" fg:x="879" fg:w="1"/><text x="70.9660%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.7160%" y="421" width="0.0805%" height="15" fill="rgb(238,87,39)" fg:x="879" fg:w="1"/><text x="70.9660%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.7160%" y="405" width="0.0805%" height="15" fill="rgb(244,101,49)" fg:x="879" fg:w="1"/><text x="70.9660%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.7160%" y="389" width="0.0805%" height="15" fill="rgb(211,43,42)" fg:x="879" fg:w="1"/><text x="70.9660%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7160%" y="373" width="0.0805%" height="15" fill="rgb(210,93,2)" fg:x="879" fg:w="1"/><text x="70.9660%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.7160%" y="357" width="0.0805%" height="15" fill="rgb(242,149,32)" fg:x="879" fg:w="1"/><text x="70.9660%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.7160%" y="341" width="0.0805%" height="15" fill="rgb(228,1,6)" fg:x="879" fg:w="1"/><text x="70.9660%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.7160%" y="325" width="0.0805%" height="15" fill="rgb(221,0,20)" fg:x="879" fg:w="1"/><text x="70.9660%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.7160%" y="309" width="0.0805%" height="15" fill="rgb(230,39,32)" fg:x="879" fg:w="1"/><text x="70.9660%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.7160%" y="293" width="0.0805%" height="15" fill="rgb(240,89,38)" fg:x="879" fg:w="1"/><text x="70.9660%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.7160%" y="277" width="0.0805%" height="15" fill="rgb(208,221,23)" fg:x="879" fg:w="1"/><text x="70.9660%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="70.7965%" y="517" width="0.0805%" height="15" fill="rgb(220,145,29)" fg:x="880" fg:w="1"/><text x="71.0465%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.7965%" y="501" width="0.0805%" height="15" fill="rgb(219,146,23)" fg:x="880" fg:w="1"/><text x="71.0465%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.7965%" y="485" width="0.0805%" height="15" fill="rgb(244,114,49)" fg:x="880" fg:w="1"/><text x="71.0465%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="70.7965%" y="469" width="0.0805%" height="15" fill="rgb(221,17,10)" fg:x="880" fg:w="1"/><text x="71.0465%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.7965%" y="453" width="0.0805%" height="15" fill="rgb(228,133,21)" fg:x="880" fg:w="1"/><text x="71.0465%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.7965%" y="437" width="0.0805%" height="15" fill="rgb(218,81,30)" fg:x="880" fg:w="1"/><text x="71.0465%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="70.9574%" y="485" width="0.0805%" height="15" fill="rgb(240,29,36)" fg:x="882" fg:w="1"/><text x="71.2074%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.9574%" y="469" width="0.0805%" height="15" fill="rgb(246,0,36)" fg:x="882" fg:w="1"/><text x="71.2074%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.1183%" y="405" width="0.0805%" height="15" fill="rgb(217,79,8)" fg:x="884" fg:w="1"/><text x="71.3683%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (13 samples, 1.05%)</title><rect x="70.2333%" y="549" width="1.0459%" height="15" fill="rgb(229,124,44)" fg:x="873" fg:w="13"/><text x="70.4833%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (11 samples, 0.88%)</title><rect x="70.3942%" y="533" width="0.8850%" height="15" fill="rgb(210,187,22)" fg:x="875" fg:w="11"/><text x="70.6442%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (5 samples, 0.40%)</title><rect x="70.8769%" y="517" width="0.4023%" height="15" fill="rgb(212,115,40)" fg:x="881" fg:w="5"/><text x="71.1269%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="70.8769%" y="501" width="0.4023%" height="15" fill="rgb(210,2,54)" fg:x="881" fg:w="5"/><text x="71.1269%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (3 samples, 0.24%)</title><rect x="71.0378%" y="485" width="0.2414%" height="15" fill="rgb(227,168,43)" fg:x="883" fg:w="3"/><text x="71.2878%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (3 samples, 0.24%)</title><rect x="71.0378%" y="469" width="0.2414%" height="15" fill="rgb(249,92,8)" fg:x="883" fg:w="3"/><text x="71.2878%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (3 samples, 0.24%)</title><rect x="71.0378%" y="453" width="0.2414%" height="15" fill="rgb(239,111,35)" fg:x="883" fg:w="3"/><text x="71.2878%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="71.0378%" y="437" width="0.2414%" height="15" fill="rgb(230,126,13)" fg:x="883" fg:w="3"/><text x="71.2878%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.1183%" y="421" width="0.1609%" height="15" fill="rgb(243,116,33)" fg:x="884" fg:w="2"/><text x="71.3683%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="71.1987%" y="405" width="0.0805%" height="15" fill="rgb(246,103,21)" fg:x="885" fg:w="1"/><text x="71.4487%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3596%" y="501" width="0.0805%" height="15" fill="rgb(237,53,26)" fg:x="887" fg:w="1"/><text x="71.6096%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3596%" y="485" width="0.0805%" height="15" fill="rgb(213,121,15)" fg:x="887" fg:w="1"/><text x="71.6096%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3596%" y="469" width="0.0805%" height="15" fill="rgb(251,83,35)" fg:x="887" fg:w="1"/><text x="71.6096%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3596%" y="453" width="0.0805%" height="15" fill="rgb(222,79,8)" fg:x="887" fg:w="1"/><text x="71.6096%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3596%" y="437" width="0.0805%" height="15" fill="rgb(217,74,36)" fg:x="887" fg:w="1"/><text x="71.6096%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3596%" y="421" width="0.0805%" height="15" fill="rgb(221,14,30)" fg:x="887" fg:w="1"/><text x="71.6096%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3596%" y="405" width="0.0805%" height="15" fill="rgb(216,221,5)" fg:x="887" fg:w="1"/><text x="71.6096%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.3596%" y="389" width="0.0805%" height="15" fill="rgb(236,118,16)" fg:x="887" fg:w="1"/><text x="71.6096%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.3596%" y="373" width="0.0805%" height="15" fill="rgb(243,91,43)" fg:x="887" fg:w="1"/><text x="71.6096%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.3596%" y="357" width="0.0805%" height="15" fill="rgb(231,110,7)" fg:x="887" fg:w="1"/><text x="71.6096%" y="367.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.3596%" y="341" width="0.0805%" height="15" fill="rgb(217,80,6)" fg:x="887" fg:w="1"/><text x="71.6096%" y="351.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.3596%" y="325" width="0.0805%" height="15" fill="rgb(251,116,7)" fg:x="887" fg:w="1"/><text x="71.6096%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="71.3596%" y="517" width="0.4023%" height="15" fill="rgb(236,70,22)" fg:x="887" fg:w="5"/><text x="71.6096%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="71.4401%" y="501" width="0.3218%" height="15" fill="rgb(245,13,10)" fg:x="888" fg:w="4"/><text x="71.6901%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="71.5205%" y="485" width="0.2414%" height="15" fill="rgb(233,146,34)" fg:x="889" fg:w="3"/><text x="71.7705%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.6010%" y="469" width="0.1609%" height="15" fill="rgb(241,196,34)" fg:x="890" fg:w="2"/><text x="71.8510%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.6010%" y="453" width="0.1609%" height="15" fill="rgb(207,150,20)" fg:x="890" fg:w="2"/><text x="71.8510%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="71.6010%" y="437" width="0.1609%" height="15" fill="rgb(251,27,52)" fg:x="890" fg:w="2"/><text x="71.8510%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="71.6010%" y="421" width="0.1609%" height="15" fill="rgb(221,76,2)" fg:x="890" fg:w="2"/><text x="71.8510%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="71.6010%" y="405" width="0.1609%" height="15" fill="rgb(242,94,41)" fg:x="890" fg:w="2"/><text x="71.8510%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.6010%" y="389" width="0.1609%" height="15" fill="rgb(245,9,8)" fg:x="890" fg:w="2"/><text x="71.8510%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.6010%" y="373" width="0.1609%" height="15" fill="rgb(236,139,26)" fg:x="890" fg:w="2"/><text x="71.8510%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="71.6010%" y="357" width="0.1609%" height="15" fill="rgb(249,11,18)" fg:x="890" fg:w="2"/><text x="71.8510%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="71.6010%" y="341" width="0.1609%" height="15" fill="rgb(206,175,35)" fg:x="890" fg:w="2"/><text x="71.8510%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="71.6010%" y="325" width="0.1609%" height="15" fill="rgb(231,3,46)" fg:x="890" fg:w="2"/><text x="71.8510%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="71.6010%" y="309" width="0.1609%" height="15" fill="rgb(243,27,8)" fg:x="890" fg:w="2"/><text x="71.8510%" y="319.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.6010%" y="293" width="0.1609%" height="15" fill="rgb(223,53,13)" fg:x="890" fg:w="2"/><text x="71.8510%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="71.7619%" y="485" width="0.0805%" height="15" fill="rgb(248,68,15)" fg:x="892" fg:w="1"/><text x="72.0119%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8423%" y="485" width="0.0805%" height="15" fill="rgb(216,61,26)" fg:x="893" fg:w="1"/><text x="72.0923%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="71.8423%" y="469" width="0.0805%" height="15" fill="rgb(213,201,24)" fg:x="893" fg:w="1"/><text x="72.0923%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (4 samples, 0.32%)</title><rect x="71.7619%" y="517" width="0.3218%" height="15" fill="rgb(214,20,17)" fg:x="892" fg:w="4"/><text x="72.0119%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.32%)</title><rect x="71.7619%" y="501" width="0.3218%" height="15" fill="rgb(206,21,46)" fg:x="892" fg:w="4"/><text x="72.0119%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="71.9228%" y="485" width="0.1609%" height="15" fill="rgb(234,222,24)" fg:x="894" fg:w="2"/><text x="72.1728%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="71.9228%" y="469" width="0.1609%" height="15" fill="rgb(221,25,26)" fg:x="894" fg:w="2"/><text x="72.1728%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="71.9228%" y="453" width="0.1609%" height="15" fill="rgb(241,148,26)" fg:x="894" fg:w="2"/><text x="72.1728%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0032%" y="437" width="0.0805%" height="15" fill="rgb(248,119,35)" fg:x="895" fg:w="1"/><text x="72.2532%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.0837%" y="517" width="0.0805%" height="15" fill="rgb(239,126,23)" fg:x="896" fg:w="1"/><text x="72.3337%" y="527.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.1641%" y="485" width="0.1609%" height="15" fill="rgb(247,120,25)" fg:x="897" fg:w="2"/><text x="72.4141%" y="495.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.3250%" y="485" width="0.0805%" height="15" fill="rgb(220,93,32)" fg:x="899" fg:w="1"/><text x="72.5750%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="72.3250%" y="469" width="0.0805%" height="15" fill="rgb(236,46,26)" fg:x="899" fg:w="1"/><text x="72.5750%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (5 samples, 0.40%)</title><rect x="72.1641%" y="517" width="0.4023%" height="15" fill="rgb(229,20,45)" fg:x="897" fg:w="5"/><text x="72.4141%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="72.1641%" y="501" width="0.4023%" height="15" fill="rgb(225,168,41)" fg:x="897" fg:w="5"/><text x="72.4141%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.4055%" y="485" width="0.1609%" height="15" fill="rgb(253,123,20)" fg:x="900" fg:w="2"/><text x="72.6555%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="72.4055%" y="469" width="0.1609%" height="15" fill="rgb(244,17,29)" fg:x="900" fg:w="2"/><text x="72.6555%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="72.4055%" y="453" width="0.1609%" height="15" fill="rgb(242,196,24)" fg:x="900" fg:w="2"/><text x="72.6555%" y="463.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="72.4055%" y="437" width="0.1609%" height="15" fill="rgb(210,113,45)" fg:x="900" fg:w="2"/><text x="72.6555%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (17 samples, 1.37%)</title><rect x="71.2792%" y="549" width="1.3677%" height="15" fill="rgb(205,129,3)" fg:x="886" fg:w="17"/><text x="71.5292%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (17 samples, 1.37%)</title><rect x="71.2792%" y="533" width="1.3677%" height="15" fill="rgb(232,74,10)" fg:x="886" fg:w="17"/><text x="71.5292%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="72.5664%" y="517" width="0.0805%" height="15" fill="rgb(251,63,43)" fg:x="902" fg:w="1"/><text x="72.8164%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="72.6468%" y="501" width="0.0805%" height="15" fill="rgb(228,215,15)" fg:x="903" fg:w="1"/><text x="72.8968%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="72.6468%" y="485" width="0.0805%" height="15" fill="rgb(233,179,38)" fg:x="903" fg:w="1"/><text x="72.8968%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="72.6468%" y="469" width="0.0805%" height="15" fill="rgb(227,187,9)" fg:x="903" fg:w="1"/><text x="72.8968%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.8077%" y="309" width="0.1609%" height="15" fill="rgb(231,89,27)" fg:x="905" fg:w="2"/><text x="73.0577%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="72.8077%" y="293" width="0.1609%" height="15" fill="rgb(225,117,1)" fg:x="905" fg:w="2"/><text x="73.0577%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="72.8077%" y="277" width="0.1609%" height="15" fill="rgb(239,120,49)" fg:x="905" fg:w="2"/><text x="73.0577%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="72.8077%" y="261" width="0.1609%" height="15" fill="rgb(236,137,37)" fg:x="905" fg:w="2"/><text x="73.0577%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="72.8077%" y="245" width="0.1609%" height="15" fill="rgb(239,73,42)" fg:x="905" fg:w="2"/><text x="73.0577%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="72.8077%" y="229" width="0.1609%" height="15" fill="rgb(207,169,6)" fg:x="905" fg:w="2"/><text x="73.0577%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.8882%" y="213" width="0.0805%" height="15" fill="rgb(228,171,10)" fg:x="906" fg:w="1"/><text x="73.1382%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.8077%" y="453" width="0.2414%" height="15" fill="rgb(217,228,47)" fg:x="905" fg:w="3"/><text x="73.0577%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.8077%" y="437" width="0.2414%" height="15" fill="rgb(227,116,17)" fg:x="905" fg:w="3"/><text x="73.0577%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.8077%" y="421" width="0.2414%" height="15" fill="rgb(245,128,36)" fg:x="905" fg:w="3"/><text x="73.0577%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="72.8077%" y="405" width="0.2414%" height="15" fill="rgb(221,139,3)" fg:x="905" fg:w="3"/><text x="73.0577%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="72.8077%" y="389" width="0.2414%" height="15" fill="rgb(207,59,54)" fg:x="905" fg:w="3"/><text x="73.0577%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="72.8077%" y="373" width="0.2414%" height="15" fill="rgb(231,129,12)" fg:x="905" fg:w="3"/><text x="73.0577%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="72.8077%" y="357" width="0.2414%" height="15" fill="rgb(235,49,17)" fg:x="905" fg:w="3"/><text x="73.0577%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="72.8077%" y="341" width="0.2414%" height="15" fill="rgb(229,175,11)" fg:x="905" fg:w="3"/><text x="73.0577%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="72.8077%" y="325" width="0.2414%" height="15" fill="rgb(206,187,30)" fg:x="905" fg:w="3"/><text x="73.0577%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9686%" y="309" width="0.0805%" height="15" fill="rgb(214,39,19)" fg:x="907" fg:w="1"/><text x="73.2186%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="72.9686%" y="293" width="0.0805%" height="15" fill="rgb(243,92,46)" fg:x="907" fg:w="1"/><text x="73.2186%" y="303.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="72.6468%" y="549" width="0.4827%" height="15" fill="rgb(240,125,36)" fg:x="903" fg:w="6"/><text x="72.8968%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="72.6468%" y="533" width="0.4827%" height="15" fill="rgb(217,193,45)" fg:x="903" fg:w="6"/><text x="72.8968%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (6 samples, 0.48%)</title><rect x="72.6468%" y="517" width="0.4827%" height="15" fill="rgb(230,127,16)" fg:x="903" fg:w="6"/><text x="72.8968%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="72.7273%" y="501" width="0.4023%" height="15" fill="rgb(208,161,0)" fg:x="904" fg:w="5"/><text x="72.9773%" y="511.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="72.7273%" y="485" width="0.4023%" height="15" fill="rgb(251,69,39)" fg:x="904" fg:w="5"/><text x="72.9773%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="72.7273%" y="469" width="0.4023%" height="15" fill="rgb(229,86,22)" fg:x="904" fg:w="5"/><text x="72.9773%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.0491%" y="453" width="0.0805%" height="15" fill="rgb(223,67,43)" fg:x="908" fg:w="1"/><text x="73.2991%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.0491%" y="437" width="0.0805%" height="15" fill="rgb(254,80,31)" fg:x="908" fg:w="1"/><text x="73.2991%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.0491%" y="421" width="0.0805%" height="15" fill="rgb(225,149,52)" fg:x="908" fg:w="1"/><text x="73.2991%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.0491%" y="405" width="0.0805%" height="15" fill="rgb(214,169,18)" fg:x="908" fg:w="1"/><text x="73.2991%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.0491%" y="389" width="0.0805%" height="15" fill="rgb(236,224,43)" fg:x="908" fg:w="1"/><text x="73.2991%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.0491%" y="373" width="0.0805%" height="15" fill="rgb(251,125,34)" fg:x="908" fg:w="1"/><text x="73.2991%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1295%" y="533" width="0.0805%" height="15" fill="rgb(224,39,44)" fg:x="909" fg:w="1"/><text x="73.3795%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.1295%" y="517" width="0.0805%" height="15" fill="rgb(206,111,46)" fg:x="909" fg:w="1"/><text x="73.3795%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.1295%" y="501" width="0.0805%" height="15" fill="rgb(227,147,50)" fg:x="909" fg:w="1"/><text x="73.3795%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.1295%" y="485" width="0.0805%" height="15" fill="rgb(239,144,36)" fg:x="909" fg:w="1"/><text x="73.3795%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.1295%" y="469" width="0.0805%" height="15" fill="rgb(216,17,19)" fg:x="909" fg:w="1"/><text x="73.3795%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1295%" y="453" width="0.0805%" height="15" fill="rgb(211,192,29)" fg:x="909" fg:w="1"/><text x="73.3795%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.1295%" y="437" width="0.0805%" height="15" fill="rgb(238,195,20)" fg:x="909" fg:w="1"/><text x="73.3795%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.1295%" y="421" width="0.0805%" height="15" fill="rgb(213,210,42)" fg:x="909" fg:w="1"/><text x="73.3795%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.1295%" y="405" width="0.0805%" height="15" fill="rgb(244,4,49)" fg:x="909" fg:w="1"/><text x="73.3795%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.1295%" y="389" width="0.0805%" height="15" fill="rgb(254,106,42)" fg:x="909" fg:w="1"/><text x="73.3795%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.1295%" y="373" width="0.0805%" height="15" fill="rgb(222,182,12)" fg:x="909" fg:w="1"/><text x="73.3795%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.1295%" y="357" width="0.0805%" height="15" fill="rgb(228,160,15)" fg:x="909" fg:w="1"/><text x="73.3795%" y="367.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="73.1295%" y="549" width="0.1609%" height="15" fill="rgb(243,149,43)" fg:x="909" fg:w="2"/><text x="73.3795%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="73.2100%" y="533" width="0.0805%" height="15" fill="rgb(245,150,32)" fg:x="910" fg:w="1"/><text x="73.4600%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="73.2100%" y="517" width="0.0805%" height="15" fill="rgb(205,43,19)" fg:x="910" fg:w="1"/><text x="73.4600%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="73.2100%" y="501" width="0.0805%" height="15" fill="rgb(249,189,35)" fg:x="910" fg:w="1"/><text x="73.4600%" y="511.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::Identity&gt;&gt;::following (1 samples, 0.08%)</title><rect x="73.2100%" y="485" width="0.0805%" height="15" fill="rgb(223,9,0)" fg:x="910" fg:w="1"/><text x="73.4600%" y="495.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="73.2100%" y="469" width="0.0805%" height="15" fill="rgb(213,142,45)" fg:x="910" fg:w="1"/><text x="73.4600%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="73.2100%" y="453" width="0.0805%" height="15" fill="rgb(208,148,2)" fg:x="910" fg:w="1"/><text x="73.4600%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="73.2100%" y="437" width="0.0805%" height="15" fill="rgb(207,191,42)" fg:x="910" fg:w="1"/><text x="73.4600%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2100%" y="421" width="0.0805%" height="15" fill="rgb(215,218,38)" fg:x="910" fg:w="1"/><text x="73.4600%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="73.2100%" y="405" width="0.0805%" height="15" fill="rgb(223,195,24)" fg:x="910" fg:w="1"/><text x="73.4600%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="73.2100%" y="389" width="0.0805%" height="15" fill="rgb(254,60,30)" fg:x="910" fg:w="1"/><text x="73.4600%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="73.2100%" y="373" width="0.0805%" height="15" fill="rgb(223,2,9)" fg:x="910" fg:w="1"/><text x="73.4600%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="73.2100%" y="357" width="0.0805%" height="15" fill="rgb(253,134,46)" fg:x="910" fg:w="1"/><text x="73.4600%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="73.2100%" y="341" width="0.0805%" height="15" fill="rgb(206,209,20)" fg:x="910" fg:w="1"/><text x="73.4600%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="73.2100%" y="325" width="0.0805%" height="15" fill="rgb(253,104,42)" fg:x="910" fg:w="1"/><text x="73.4600%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::location::Location&gt;&gt; (1 samples, 0.08%)</title><rect x="73.2904%" y="533" width="0.0805%" height="15" fill="rgb(223,47,23)" fg:x="911" fg:w="1"/><text x="73.5404%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="73.2904%" y="517" width="0.0805%" height="15" fill="rgb(247,148,44)" fg:x="911" fg:w="1"/><text x="73.5404%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.2904%" y="501" width="0.0805%" height="15" fill="rgb(221,224,16)" fg:x="911" fg:w="1"/><text x="73.5404%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="73.4513%" y="501" width="0.0805%" height="15" fill="rgb(252,103,29)" fg:x="913" fg:w="1"/><text x="73.7013%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.4513%" y="485" width="0.0805%" height="15" fill="rgb(244,185,34)" fg:x="913" fg:w="1"/><text x="73.7013%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.4513%" y="469" width="0.0805%" height="15" fill="rgb(218,18,50)" fg:x="913" fg:w="1"/><text x="73.7013%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.4513%" y="453" width="0.0805%" height="15" fill="rgb(234,105,8)" fg:x="913" fg:w="1"/><text x="73.7013%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.4513%" y="437" width="0.0805%" height="15" fill="rgb(249,51,19)" fg:x="913" fg:w="1"/><text x="73.7013%" y="447.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="73.3709%" y="533" width="0.2414%" height="15" fill="rgb(233,132,7)" fg:x="912" fg:w="3"/><text x="73.6209%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="73.4513%" y="517" width="0.1609%" height="15" fill="rgb(229,181,43)" fg:x="913" fg:w="2"/><text x="73.7013%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.5318%" y="501" width="0.0805%" height="15" fill="rgb(223,20,7)" fg:x="914" fg:w="1"/><text x="73.7818%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.5318%" y="485" width="0.0805%" height="15" fill="rgb(245,13,34)" fg:x="914" fg:w="1"/><text x="73.7818%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.5318%" y="469" width="0.0805%" height="15" fill="rgb(242,0,53)" fg:x="914" fg:w="1"/><text x="73.7818%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.5318%" y="453" width="0.0805%" height="15" fill="rgb(233,115,19)" fg:x="914" fg:w="1"/><text x="73.7818%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6122%" y="517" width="0.0805%" height="15" fill="rgb(216,170,26)" fg:x="915" fg:w="1"/><text x="73.8622%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.6122%" y="501" width="0.0805%" height="15" fill="rgb(233,13,0)" fg:x="915" fg:w="1"/><text x="73.8622%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.6122%" y="485" width="0.0805%" height="15" fill="rgb(228,79,21)" fg:x="915" fg:w="1"/><text x="73.8622%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="73.6927%" y="517" width="0.0805%" height="15" fill="rgb(244,17,41)" fg:x="916" fg:w="1"/><text x="73.9427%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.6927%" y="501" width="0.0805%" height="15" fill="rgb(253,152,11)" fg:x="916" fg:w="1"/><text x="73.9427%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="73.6927%" y="485" width="0.0805%" height="15" fill="rgb(254,94,47)" fg:x="916" fg:w="1"/><text x="73.9427%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6927%" y="469" width="0.0805%" height="15" fill="rgb(239,66,43)" fg:x="916" fg:w="1"/><text x="73.9427%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (105 samples, 8.45%)</title><rect x="65.4867%" y="581" width="8.4473%" height="15" fill="rgb(251,25,22)" fg:x="814" fg:w="105"/><text x="65.7367%" y="591.50">&lt;plugins_cor..</text></g><g><title>plugins_core::location::change_location (50 samples, 4.02%)</title><rect x="69.9115%" y="565" width="4.0225%" height="15" fill="rgb(227,65,46)" fg:x="869" fg:w="50"/><text x="70.1615%" y="575.50">plug..</text></g><g><title>plugins_core::location::Location::set (8 samples, 0.64%)</title><rect x="73.2904%" y="549" width="0.6436%" height="15" fill="rgb(240,180,32)" fg:x="911" fg:w="8"/><text x="73.5404%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (4 samples, 0.32%)</title><rect x="73.6122%" y="533" width="0.3218%" height="15" fill="rgb(242,11,35)" fg:x="915" fg:w="4"/><text x="73.8622%" y="543.50"></text></g><g><title>plugins_core::location::_::&lt;impl serde::ser::Serialize for plugins_core::location::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="73.7731%" y="517" width="0.1609%" height="15" fill="rgb(221,41,49)" fg:x="917" fg:w="2"/><text x="74.0231%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.7731%" y="501" width="0.1609%" height="15" fill="rgb(253,80,52)" fg:x="917" fg:w="2"/><text x="74.0231%" y="511.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="73.7731%" y="485" width="0.1609%" height="15" fill="rgb(232,152,28)" fg:x="917" fg:w="2"/><text x="74.0231%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="73.7731%" y="469" width="0.1609%" height="15" fill="rgb(219,110,12)" fg:x="917" fg:w="2"/><text x="74.0231%" y="479.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.7731%" y="453" width="0.1609%" height="15" fill="rgb(218,98,43)" fg:x="917" fg:w="2"/><text x="74.0231%" y="463.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="73.7731%" y="437" width="0.1609%" height="15" fill="rgb(253,96,49)" fg:x="917" fg:w="2"/><text x="74.0231%" y="447.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="73.8536%" y="421" width="0.0805%" height="15" fill="rgb(238,132,17)" fg:x="918" fg:w="1"/><text x="74.1036%" y="431.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="73.9340%" y="581" width="0.1609%" height="15" fill="rgb(208,82,25)" fg:x="919" fg:w="2"/><text x="74.1840%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.0949%" y="565" width="0.0805%" height="15" fill="rgb(237,77,13)" fg:x="921" fg:w="1"/><text x="74.3449%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (312 samples, 25.10%)</title><rect x="49.2357%" y="773" width="25.1006%" height="15" fill="rgb(230,6,11)" fg:x="612" fg:w="312"/><text x="49.4857%" y="783.50">&lt;engine::session::Session as kernel::act..</text></g><g><title>kernel::plugins::mw::apply_middleware (312 samples, 25.10%)</title><rect x="49.2357%" y="757" width="25.1006%" height="15" fill="rgb(207,29,48)" fg:x="612" fg:w="312"/><text x="49.4857%" y="767.50">kernel::plugins::mw::apply_middleware</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (312 samples, 25.10%)</title><rect x="49.2357%" y="741" width="25.1006%" height="15" fill="rgb(247,105,22)" fg:x="612" fg:w="312"/><text x="49.4857%" y="751.50">kernel::plugins::mw::MiddlewareNext::han..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (312 samples, 25.10%)</title><rect x="49.2357%" y="725" width="25.1006%" height="15" fill="rgb(223,114,44)" fg:x="612" fg:w="312"/><text x="49.4857%" y="735.50">&lt;engine::session::ExpandSurroundingsMidd..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (268 samples, 21.56%)</title><rect x="52.7755%" y="709" width="21.5607%" height="15" fill="rgb(242,3,46)" fg:x="656" fg:w="268"/><text x="53.0255%" y="719.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (268 samples, 21.56%)</title><rect x="52.7755%" y="693" width="21.5607%" height="15" fill="rgb(243,197,8)" fg:x="656" fg:w="268"/><text x="53.0255%" y="703.50">&lt;plugins_dynlib::DynamicMiddleware..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (268 samples, 21.56%)</title><rect x="52.7755%" y="677" width="21.5607%" height="15" fill="rgb(238,171,27)" fg:x="656" fg:w="268"/><text x="53.0255%" y="687.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (267 samples, 21.48%)</title><rect x="52.8560%" y="661" width="21.4803%" height="15" fill="rgb(254,144,27)" fg:x="657" fg:w="267"/><text x="53.1060%" y="671.50">core::ops::function::FnOnce::call_..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (267 samples, 21.48%)</title><rect x="52.8560%" y="645" width="21.4803%" height="15" fill="rgb(216,203,36)" fg:x="657" fg:w="267"/><text x="53.1060%" y="655.50">kernel::plugins::mw::MiddlewareNex..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (267 samples, 21.48%)</title><rect x="52.8560%" y="629" width="21.4803%" height="15" fill="rgb(247,27,26)" fg:x="657" fg:w="267"/><text x="53.1060%" y="639.50">core::ops::function::FnOnce::call_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (267 samples, 21.48%)</title><rect x="52.8560%" y="613" width="21.4803%" height="15" fill="rgb(234,180,24)" fg:x="657" fg:w="267"/><text x="53.1060%" y="623.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (267 samples, 21.48%)</title><rect x="52.8560%" y="597" width="21.4803%" height="15" fill="rgb(221,50,43)" fg:x="657" fg:w="267"/><text x="53.1060%" y="607.50">&lt;engine::session::state::State as ..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="74.0949%" y="581" width="0.2414%" height="15" fill="rgb(236,50,6)" fg:x="921" fg:w="3"/><text x="74.3449%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="74.1754%" y="565" width="0.1609%" height="15" fill="rgb(245,172,32)" fg:x="922" fg:w="2"/><text x="74.4254%" y="575.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="74.1754%" y="549" width="0.1609%" height="15" fill="rgb(207,54,46)" fg:x="922" fg:w="2"/><text x="74.4254%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="74.4167%" y="693" width="0.1609%" height="15" fill="rgb(218,67,44)" fg:x="925" fg:w="2"/><text x="74.6667%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="74.4167%" y="677" width="0.1609%" height="15" fill="rgb(208,152,22)" fg:x="925" fg:w="2"/><text x="74.6667%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="74.4167%" y="661" width="0.1609%" height="15" fill="rgb(243,177,0)" fg:x="925" fg:w="2"/><text x="74.6667%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="74.4167%" y="645" width="0.1609%" height="15" fill="rgb(212,75,12)" fg:x="925" fg:w="2"/><text x="74.6667%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="74.4167%" y="629" width="0.1609%" height="15" fill="rgb(212,129,29)" fg:x="925" fg:w="2"/><text x="74.6667%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="74.4167%" y="613" width="0.1609%" height="15" fill="rgb(241,229,35)" fg:x="925" fg:w="2"/><text x="74.6667%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="74.4167%" y="597" width="0.1609%" height="15" fill="rgb(232,49,32)" fg:x="925" fg:w="2"/><text x="74.6667%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="74.5776%" y="693" width="0.0805%" height="15" fill="rgb(243,119,48)" fg:x="927" fg:w="1"/><text x="74.8276%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="74.5776%" y="677" width="0.0805%" height="15" fill="rgb(212,205,30)" fg:x="927" fg:w="1"/><text x="74.8276%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.5776%" y="661" width="0.0805%" height="15" fill="rgb(218,175,42)" fg:x="927" fg:w="1"/><text x="74.8276%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5776%" y="645" width="0.0805%" height="15" fill="rgb(230,156,27)" fg:x="927" fg:w="1"/><text x="74.8276%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5776%" y="629" width="0.0805%" height="15" fill="rgb(254,32,43)" fg:x="927" fg:w="1"/><text x="74.8276%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5776%" y="613" width="0.0805%" height="15" fill="rgb(246,89,34)" fg:x="927" fg:w="1"/><text x="74.8276%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5776%" y="597" width="0.0805%" height="15" fill="rgb(247,162,17)" fg:x="927" fg:w="1"/><text x="74.8276%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.5776%" y="581" width="0.0805%" height="15" fill="rgb(219,71,37)" fg:x="927" fg:w="1"/><text x="74.8276%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5776%" y="565" width="0.0805%" height="15" fill="rgb(210,184,7)" fg:x="927" fg:w="1"/><text x="74.8276%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="74.5776%" y="549" width="0.0805%" height="15" fill="rgb(245,16,32)" fg:x="927" fg:w="1"/><text x="74.8276%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.5776%" y="533" width="0.0805%" height="15" fill="rgb(209,62,7)" fg:x="927" fg:w="1"/><text x="74.8276%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="74.4167%" y="725" width="0.3218%" height="15" fill="rgb(215,16,15)" fg:x="925" fg:w="4"/><text x="74.6667%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (4 samples, 0.32%)</title><rect x="74.4167%" y="709" width="0.3218%" height="15" fill="rgb(223,60,14)" fg:x="925" fg:w="4"/><text x="74.6667%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="74.6581%" y="693" width="0.0805%" height="15" fill="rgb(244,134,12)" fg:x="928" fg:w="1"/><text x="74.9081%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="74.6581%" y="677" width="0.0805%" height="15" fill="rgb(224,3,41)" fg:x="928" fg:w="1"/><text x="74.9081%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.6581%" y="661" width="0.0805%" height="15" fill="rgb(213,84,2)" fg:x="928" fg:w="1"/><text x="74.9081%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.7385%" y="661" width="0.1609%" height="15" fill="rgb(213,216,27)" fg:x="929" fg:w="2"/><text x="74.9885%" y="671.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="74.7385%" y="645" width="0.1609%" height="15" fill="rgb(218,76,35)" fg:x="929" fg:w="2"/><text x="74.9885%" y="655.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="74.8994%" y="629" width="0.1609%" height="15" fill="rgb(253,89,24)" fg:x="931" fg:w="2"/><text x="75.1494%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="74.9799%" y="613" width="0.0805%" height="15" fill="rgb(217,188,40)" fg:x="932" fg:w="1"/><text x="75.2299%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0603%" y="629" width="0.0805%" height="15" fill="rgb(237,79,38)" fg:x="933" fg:w="1"/><text x="75.3103%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.0603%" y="613" width="0.0805%" height="15" fill="rgb(215,116,13)" fg:x="933" fg:w="1"/><text x="75.3103%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.1408%" y="597" width="0.2414%" height="15" fill="rgb(249,66,35)" fg:x="934" fg:w="3"/><text x="75.3908%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="75.1408%" y="581" width="0.2414%" height="15" fill="rgb(253,86,18)" fg:x="934" fg:w="3"/><text x="75.3908%" y="591.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="75.1408%" y="565" width="0.2414%" height="15" fill="rgb(209,175,36)" fg:x="934" fg:w="3"/><text x="75.3908%" y="575.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.3821%" y="565" width="0.0805%" height="15" fill="rgb(253,149,3)" fg:x="937" fg:w="1"/><text x="75.6321%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.3821%" y="549" width="0.0805%" height="15" fill="rgb(242,124,49)" fg:x="937" fg:w="1"/><text x="75.6321%" y="559.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4626%" y="565" width="0.0805%" height="15" fill="rgb(219,171,24)" fg:x="938" fg:w="1"/><text x="75.7126%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.4626%" y="549" width="0.0805%" height="15" fill="rgb(216,121,30)" fg:x="938" fg:w="1"/><text x="75.7126%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.4626%" y="533" width="0.0805%" height="15" fill="rgb(234,165,21)" fg:x="938" fg:w="1"/><text x="75.7126%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5430%" y="533" width="0.0805%" height="15" fill="rgb(234,103,40)" fg:x="939" fg:w="1"/><text x="75.7930%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="75.5430%" y="517" width="0.0805%" height="15" fill="rgb(250,137,24)" fg:x="939" fg:w="1"/><text x="75.7930%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.5430%" y="501" width="0.0805%" height="15" fill="rgb(253,22,21)" fg:x="939" fg:w="1"/><text x="75.7930%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="75.3821%" y="581" width="0.4023%" height="15" fill="rgb(243,22,5)" fg:x="937" fg:w="5"/><text x="75.6321%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.5430%" y="565" width="0.2414%" height="15" fill="rgb(212,56,7)" fg:x="939" fg:w="3"/><text x="75.7930%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="75.5430%" y="549" width="0.2414%" height="15" fill="rgb(223,190,49)" fg:x="939" fg:w="3"/><text x="75.7930%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.6235%" y="533" width="0.1609%" height="15" fill="rgb(221,110,35)" fg:x="940" fg:w="2"/><text x="75.8735%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.6235%" y="517" width="0.1609%" height="15" fill="rgb(212,113,34)" fg:x="940" fg:w="2"/><text x="75.8735%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.7039%" y="501" width="0.0805%" height="15" fill="rgb(216,125,47)" fg:x="941" fg:w="1"/><text x="75.9539%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="75.7039%" y="485" width="0.0805%" height="15" fill="rgb(251,112,19)" fg:x="941" fg:w="1"/><text x="75.9539%" y="495.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="75.7039%" y="469" width="0.0805%" height="15" fill="rgb(254,200,41)" fg:x="941" fg:w="1"/><text x="75.9539%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="75.7039%" y="453" width="0.0805%" height="15" fill="rgb(225,17,42)" fg:x="941" fg:w="1"/><text x="75.9539%" y="463.50"></text></g><g><title>serde_json::de::from_trait (15 samples, 1.21%)</title><rect x="74.7385%" y="709" width="1.2068%" height="15" fill="rgb(208,105,35)" fg:x="929" fg:w="15"/><text x="74.9885%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (15 samples, 1.21%)</title><rect x="74.7385%" y="693" width="1.2068%" height="15" fill="rgb(210,125,51)" fg:x="929" fg:w="15"/><text x="74.9885%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (15 samples, 1.21%)</title><rect x="74.7385%" y="677" width="1.2068%" height="15" fill="rgb(227,213,18)" fg:x="929" fg:w="15"/><text x="74.9885%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (13 samples, 1.05%)</title><rect x="74.8994%" y="661" width="1.0459%" height="15" fill="rgb(221,174,32)" fg:x="931" fg:w="13"/><text x="75.1494%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (13 samples, 1.05%)</title><rect x="74.8994%" y="645" width="1.0459%" height="15" fill="rgb(234,23,1)" fg:x="931" fg:w="13"/><text x="75.1494%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.80%)</title><rect x="75.1408%" y="629" width="0.8045%" height="15" fill="rgb(209,65,17)" fg:x="934" fg:w="10"/><text x="75.3908%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (10 samples, 0.80%)</title><rect x="75.1408%" y="613" width="0.8045%" height="15" fill="rgb(206,224,31)" fg:x="934" fg:w="10"/><text x="75.3908%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7 samples, 0.56%)</title><rect x="75.3821%" y="597" width="0.5632%" height="15" fill="rgb(230,20,38)" fg:x="937" fg:w="7"/><text x="75.6321%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.7844%" y="581" width="0.1609%" height="15" fill="rgb(211,9,41)" fg:x="942" fg:w="2"/><text x="76.0344%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="75.7844%" y="565" width="0.1609%" height="15" fill="rgb(233,214,4)" fg:x="942" fg:w="2"/><text x="76.0344%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.7844%" y="549" width="0.1609%" height="15" fill="rgb(225,60,54)" fg:x="942" fg:w="2"/><text x="76.0344%" y="559.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="75.7844%" y="533" width="0.1609%" height="15" fill="rgb(206,228,35)" fg:x="942" fg:w="2"/><text x="76.0344%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::_::&lt;impl serde::de::Deserialize for kernel::model::entity::Entity&gt;::deserialize::__FieldVisitor as serde::de::Visitor&gt;::visit_str (2 samples, 0.16%)</title><rect x="76.1866%" y="677" width="0.1609%" height="15" fill="rgb(212,178,50)" fg:x="947" fg:w="2"/><text x="76.4366%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.3475%" y="677" width="0.0805%" height="15" fill="rgb(206,192,33)" fg:x="949" fg:w="1"/><text x="76.5975%" y="687.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.5889%" y="597" width="0.1609%" height="15" fill="rgb(238,210,1)" fg:x="952" fg:w="2"/><text x="76.8389%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5889%" y="581" width="0.1609%" height="15" fill="rgb(205,65,52)" fg:x="952" fg:w="2"/><text x="76.8389%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.5889%" y="565" width="0.1609%" height="15" fill="rgb(237,204,51)" fg:x="952" fg:w="2"/><text x="76.8389%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5889%" y="549" width="0.1609%" height="15" fill="rgb(213,119,51)" fg:x="952" fg:w="2"/><text x="76.8389%" y="559.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="76.5889%" y="533" width="0.1609%" height="15" fill="rgb(244,156,37)" fg:x="952" fg:w="2"/><text x="76.8389%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5889%" y="517" width="0.1609%" height="15" fill="rgb(249,96,18)" fg:x="952" fg:w="2"/><text x="76.8389%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5889%" y="501" width="0.1609%" height="15" fill="rgb(231,65,11)" fg:x="952" fg:w="2"/><text x="76.8389%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="76.5889%" y="485" width="0.1609%" height="15" fill="rgb(240,187,2)" fg:x="952" fg:w="2"/><text x="76.8389%" y="495.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="76.6693%" y="469" width="0.0805%" height="15" fill="rgb(242,121,39)" fg:x="953" fg:w="1"/><text x="76.9193%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="76.5084%" y="629" width="0.3218%" height="15" fill="rgb(233,205,18)" fg:x="951" fg:w="4"/><text x="76.7584%" y="639.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.5084%" y="613" width="0.3218%" height="15" fill="rgb(219,67,33)" fg:x="951" fg:w="4"/><text x="76.7584%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7498%" y="597" width="0.0805%" height="15" fill="rgb(227,84,12)" fg:x="954" fg:w="1"/><text x="76.9998%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.8302%" y="629" width="0.0805%" height="15" fill="rgb(227,42,52)" fg:x="955" fg:w="1"/><text x="77.0802%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.8302%" y="613" width="0.0805%" height="15" fill="rgb(231,27,28)" fg:x="955" fg:w="1"/><text x="77.0802%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.8302%" y="597" width="0.0805%" height="15" fill="rgb(238,42,2)" fg:x="955" fg:w="1"/><text x="77.0802%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.8302%" y="581" width="0.0805%" height="15" fill="rgb(215,15,9)" fg:x="955" fg:w="1"/><text x="77.0802%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.8302%" y="565" width="0.0805%" height="15" fill="rgb(205,195,15)" fg:x="955" fg:w="1"/><text x="77.0802%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.8302%" y="549" width="0.0805%" height="15" fill="rgb(233,143,2)" fg:x="955" fg:w="1"/><text x="77.0802%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.9107%" y="597" width="0.0805%" height="15" fill="rgb(207,108,8)" fg:x="956" fg:w="1"/><text x="77.1607%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.0716%" y="501" width="0.0805%" height="15" fill="rgb(214,53,21)" fg:x="958" fg:w="1"/><text x="77.3216%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.80%)</title><rect x="76.4280%" y="677" width="0.8045%" height="15" fill="rgb(238,212,36)" fg:x="950" fg:w="10"/><text x="76.6780%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.80%)</title><rect x="76.4280%" y="661" width="0.8045%" height="15" fill="rgb(218,151,47)" fg:x="950" fg:w="10"/><text x="76.6780%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (9 samples, 0.72%)</title><rect x="76.5084%" y="645" width="0.7241%" height="15" fill="rgb(245,160,3)" fg:x="951" fg:w="9"/><text x="76.7584%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="76.9107%" y="629" width="0.3218%" height="15" fill="rgb(238,106,19)" fg:x="956" fg:w="4"/><text x="77.1607%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.9107%" y="613" width="0.3218%" height="15" fill="rgb(207,206,9)" fg:x="956" fg:w="4"/><text x="77.1607%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (3 samples, 0.24%)</title><rect x="76.9912%" y="597" width="0.2414%" height="15" fill="rgb(254,40,10)" fg:x="957" fg:w="3"/><text x="77.2412%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="76.9912%" y="581" width="0.2414%" height="15" fill="rgb(245,81,8)" fg:x="957" fg:w="3"/><text x="77.2412%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.9912%" y="565" width="0.2414%" height="15" fill="rgb(214,119,17)" fg:x="957" fg:w="3"/><text x="77.2412%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="77.0716%" y="549" width="0.1609%" height="15" fill="rgb(245,100,39)" fg:x="958" fg:w="2"/><text x="77.3216%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="77.0716%" y="533" width="0.1609%" height="15" fill="rgb(243,105,16)" fg:x="958" fg:w="2"/><text x="77.3216%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="77.0716%" y="517" width="0.1609%" height="15" fill="rgb(214,53,2)" fg:x="958" fg:w="2"/><text x="77.3216%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.1521%" y="501" width="0.0805%" height="15" fill="rgb(251,54,50)" fg:x="959" fg:w="1"/><text x="77.4021%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1521%" y="485" width="0.0805%" height="15" fill="rgb(244,121,37)" fg:x="959" fg:w="1"/><text x="77.4021%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.1521%" y="469" width="0.0805%" height="15" fill="rgb(236,158,39)" fg:x="959" fg:w="1"/><text x="77.4021%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="77.1521%" y="453" width="0.0805%" height="15" fill="rgb(226,25,37)" fg:x="959" fg:w="1"/><text x="77.4021%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.1521%" y="437" width="0.0805%" height="15" fill="rgb(222,71,46)" fg:x="959" fg:w="1"/><text x="77.4021%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="77.1521%" y="421" width="0.0805%" height="15" fill="rgb(209,27,29)" fg:x="959" fg:w="1"/><text x="77.4021%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="77.1521%" y="405" width="0.0805%" height="15" fill="rgb(210,196,17)" fg:x="959" fg:w="1"/><text x="77.4021%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.1521%" y="389" width="0.0805%" height="15" fill="rgb(236,76,23)" fg:x="959" fg:w="1"/><text x="77.4021%" y="399.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (32 samples, 2.57%)</title><rect x="74.7385%" y="725" width="2.5744%" height="15" fill="rgb(214,33,32)" fg:x="929" fg:w="32"/><text x="74.9885%" y="735.50">&lt;k..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (17 samples, 1.37%)</title><rect x="75.9453%" y="709" width="1.3677%" height="15" fill="rgb(243,16,26)" fg:x="944" fg:w="17"/><text x="76.1953%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (17 samples, 1.37%)</title><rect x="75.9453%" y="693" width="1.3677%" height="15" fill="rgb(241,30,48)" fg:x="944" fg:w="17"/><text x="76.1953%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="77.2325%" y="677" width="0.0805%" height="15" fill="rgb(241,106,1)" fg:x="960" fg:w="1"/><text x="77.4825%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3130%" y="677" width="0.0805%" height="15" fill="rgb(230,62,29)" fg:x="961" fg:w="1"/><text x="77.5630%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3130%" y="661" width="0.0805%" height="15" fill="rgb(207,166,53)" fg:x="961" fg:w="1"/><text x="77.5630%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="77.3130%" y="645" width="0.0805%" height="15" fill="rgb(244,54,13)" fg:x="961" fg:w="1"/><text x="77.5630%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.3130%" y="629" width="0.0805%" height="15" fill="rgb(205,144,19)" fg:x="961" fg:w="1"/><text x="77.5630%" y="639.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="77.3934%" y="677" width="0.0805%" height="15" fill="rgb(225,165,45)" fg:x="962" fg:w="1"/><text x="77.6434%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="77.4739%" y="613" width="0.0805%" height="15" fill="rgb(220,140,6)" fg:x="963" fg:w="1"/><text x="77.7239%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.6348%" y="549" width="0.0805%" height="15" fill="rgb(234,69,14)" fg:x="965" fg:w="1"/><text x="77.8848%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="77.3130%" y="725" width="0.4827%" height="15" fill="rgb(243,24,33)" fg:x="961" fg:w="6"/><text x="77.5630%" y="735.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="77.3130%" y="709" width="0.4827%" height="15" fill="rgb(253,100,43)" fg:x="961" fg:w="6"/><text x="77.5630%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="77.3130%" y="693" width="0.4827%" height="15" fill="rgb(221,168,15)" fg:x="961" fg:w="6"/><text x="77.5630%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="77.4739%" y="677" width="0.3218%" height="15" fill="rgb(237,15,11)" fg:x="963" fg:w="4"/><text x="77.7239%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.4739%" y="661" width="0.3218%" height="15" fill="rgb(229,207,40)" fg:x="963" fg:w="4"/><text x="77.7239%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="77.4739%" y="645" width="0.3218%" height="15" fill="rgb(246,125,48)" fg:x="963" fg:w="4"/><text x="77.7239%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="77.4739%" y="629" width="0.3218%" height="15" fill="rgb(231,65,10)" fg:x="963" fg:w="4"/><text x="77.7239%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="77.5543%" y="613" width="0.2414%" height="15" fill="rgb(222,152,40)" fg:x="964" fg:w="3"/><text x="77.8043%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.5543%" y="597" width="0.2414%" height="15" fill="rgb(214,12,30)" fg:x="964" fg:w="3"/><text x="77.8043%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="77.5543%" y="581" width="0.2414%" height="15" fill="rgb(239,80,41)" fg:x="964" fg:w="3"/><text x="77.8043%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="77.5543%" y="565" width="0.2414%" height="15" fill="rgb(206,175,27)" fg:x="964" fg:w="3"/><text x="77.8043%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="77.7152%" y="549" width="0.0805%" height="15" fill="rgb(222,43,39)" fg:x="966" fg:w="1"/><text x="77.9652%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="77.7152%" y="533" width="0.0805%" height="15" fill="rgb(243,47,50)" fg:x="966" fg:w="1"/><text x="77.9652%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="77.7152%" y="517" width="0.0805%" height="15" fill="rgb(243,61,21)" fg:x="966" fg:w="1"/><text x="77.9652%" y="527.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (43 samples, 3.46%)</title><rect x="74.4167%" y="741" width="3.4594%" height="15" fill="rgb(208,172,5)" fg:x="925" fg:w="43"/><text x="74.6667%" y="751.50">eng..</text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="77.7957%" y="725" width="0.0805%" height="15" fill="rgb(219,24,25)" fg:x="967" fg:w="1"/><text x="78.0457%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7957%" y="709" width="0.0805%" height="15" fill="rgb(235,42,41)" fg:x="967" fg:w="1"/><text x="78.0457%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="77.7957%" y="693" width="0.0805%" height="15" fill="rgb(226,190,24)" fg:x="967" fg:w="1"/><text x="78.0457%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="77.7957%" y="677" width="0.0805%" height="15" fill="rgb(216,55,27)" fg:x="967" fg:w="1"/><text x="78.0457%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (45 samples, 3.62%)</title><rect x="74.3363%" y="757" width="3.6203%" height="15" fill="rgb(231,77,14)" fg:x="924" fg:w="45"/><text x="74.5863%" y="767.50">&lt;eng..</text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="77.8761%" y="741" width="0.0805%" height="15" fill="rgb(208,108,34)" fg:x="968" fg:w="1"/><text x="78.1261%" y="751.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8761%" y="725" width="0.0805%" height="15" fill="rgb(228,183,52)" fg:x="968" fg:w="1"/><text x="78.1261%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8761%" y="709" width="0.0805%" height="15" fill="rgb(224,152,1)" fg:x="968" fg:w="1"/><text x="78.1261%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.8761%" y="693" width="0.0805%" height="15" fill="rgb(246,115,8)" fg:x="968" fg:w="1"/><text x="78.1261%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.8761%" y="677" width="0.0805%" height="15" fill="rgb(211,76,13)" fg:x="968" fg:w="1"/><text x="78.1261%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.8761%" y="661" width="0.0805%" height="15" fill="rgb(233,214,49)" fg:x="968" fg:w="1"/><text x="78.1261%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.8761%" y="645" width="0.0805%" height="15" fill="rgb(223,44,51)" fg:x="968" fg:w="1"/><text x="78.1261%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8761%" y="629" width="0.0805%" height="15" fill="rgb(225,111,51)" fg:x="968" fg:w="1"/><text x="78.1261%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="77.8761%" y="613" width="0.0805%" height="15" fill="rgb(231,185,26)" fg:x="968" fg:w="1"/><text x="78.1261%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="77.8761%" y="597" width="0.0805%" height="15" fill="rgb(233,111,30)" fg:x="968" fg:w="1"/><text x="78.1261%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="77.8761%" y="581" width="0.0805%" height="15" fill="rgb(250,1,47)" fg:x="968" fg:w="1"/><text x="78.1261%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="77.8761%" y="565" width="0.0805%" height="15" fill="rgb(254,210,3)" fg:x="968" fg:w="1"/><text x="78.1261%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="77.8761%" y="549" width="0.0805%" height="15" fill="rgb(234,14,22)" fg:x="968" fg:w="1"/><text x="78.1261%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="77.8761%" y="533" width="0.0805%" height="15" fill="rgb(221,117,4)" fg:x="968" fg:w="1"/><text x="78.1261%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="77.9566%" y="757" width="0.0805%" height="15" fill="rgb(251,147,27)" fg:x="969" fg:w="1"/><text x="78.2066%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (49 samples, 3.94%)</title><rect x="74.3363%" y="773" width="3.9421%" height="15" fill="rgb(226,52,11)" fg:x="924" fg:w="49"/><text x="74.5863%" y="783.50">&lt;eng..</text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="78.0370%" y="757" width="0.2414%" height="15" fill="rgb(229,222,5)" fg:x="970" fg:w="3"/><text x="78.2870%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="78.0370%" y="741" width="0.2414%" height="15" fill="rgb(232,76,2)" fg:x="970" fg:w="3"/><text x="78.2870%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="78.0370%" y="725" width="0.2414%" height="15" fill="rgb(242,108,2)" fg:x="970" fg:w="3"/><text x="78.2870%" y="735.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="78.0370%" y="709" width="0.2414%" height="15" fill="rgb(213,165,6)" fg:x="970" fg:w="3"/><text x="78.2870%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="78.0370%" y="693" width="0.2414%" height="15" fill="rgb(222,24,42)" fg:x="970" fg:w="3"/><text x="78.2870%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="78.0370%" y="677" width="0.2414%" height="15" fill="rgb(242,170,24)" fg:x="970" fg:w="3"/><text x="78.2870%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.24%)</title><rect x="78.0370%" y="661" width="0.2414%" height="15" fill="rgb(209,110,40)" fg:x="970" fg:w="3"/><text x="78.2870%" y="671.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.1175%" y="645" width="0.1609%" height="15" fill="rgb(233,146,36)" fg:x="971" fg:w="2"/><text x="78.3675%" y="655.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.1175%" y="629" width="0.1609%" height="15" fill="rgb(229,33,32)" fg:x="971" fg:w="2"/><text x="78.3675%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.1175%" y="613" width="0.1609%" height="15" fill="rgb(225,55,34)" fg:x="971" fg:w="2"/><text x="78.3675%" y="623.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="78.1175%" y="597" width="0.1609%" height="15" fill="rgb(217,32,50)" fg:x="971" fg:w="2"/><text x="78.3675%" y="607.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.1175%" y="581" width="0.1609%" height="15" fill="rgb(206,110,53)" fg:x="971" fg:w="2"/><text x="78.3675%" y="591.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (5 samples, 0.40%)</title><rect x="78.2784%" y="773" width="0.4023%" height="15" fill="rgb(247,25,10)" fg:x="973" fg:w="5"/><text x="78.5284%" y="783.50"></text></g><g><title>engine::users::model::username_to_key (4 samples, 0.32%)</title><rect x="78.3588%" y="757" width="0.3218%" height="15" fill="rgb(226,67,48)" fg:x="974" fg:w="4"/><text x="78.6088%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (3 samples, 0.24%)</title><rect x="78.4393%" y="741" width="0.2414%" height="15" fill="rgb(239,73,28)" fg:x="975" fg:w="3"/><text x="78.6893%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="78.4393%" y="725" width="0.2414%" height="15" fill="rgb(234,200,41)" fg:x="975" fg:w="3"/><text x="78.6893%" y="735.50"></text></g><g><title>engine::users::model::_::&lt;impl serde::de::Deserialize for engine::users::model::Usernames&gt;::deserialize (3 samples, 0.24%)</title><rect x="78.4393%" y="709" width="0.2414%" height="15" fill="rgb(233,76,35)" fg:x="975" fg:w="3"/><text x="78.6893%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="78.4393%" y="693" width="0.2414%" height="15" fill="rgb(238,166,31)" fg:x="975" fg:w="3"/><text x="78.6893%" y="703.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for std::collections::hash::map::HashMap&lt;K,V,S&gt;&gt;::deserialize (1 samples, 0.08%)</title><rect x="78.6002%" y="677" width="0.0805%" height="15" fill="rgb(219,218,51)" fg:x="977" fg:w="1"/><text x="78.8502%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="78.6002%" y="661" width="0.0805%" height="15" fill="rgb(221,82,53)" fg:x="977" fg:w="1"/><text x="78.8502%" y="671.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.8415%" y="725" width="0.0805%" height="15" fill="rgb(218,179,13)" fg:x="980" fg:w="1"/><text x="79.0915%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="78.8415%" y="709" width="0.0805%" height="15" fill="rgb(210,53,38)" fg:x="980" fg:w="1"/><text x="79.0915%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.8415%" y="693" width="0.0805%" height="15" fill="rgb(214,167,31)" fg:x="980" fg:w="1"/><text x="79.0915%" y="703.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="78.8415%" y="741" width="0.1609%" height="15" fill="rgb(223,26,5)" fg:x="980" fg:w="2"/><text x="79.0915%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::parser::HoldActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="78.9220%" y="725" width="0.0805%" height="15" fill="rgb(218,95,23)" fg:x="981" fg:w="1"/><text x="79.1720%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="78.9220%" y="709" width="0.0805%" height="15" fill="rgb(248,205,45)" fg:x="981" fg:w="1"/><text x="79.1720%" y="719.50"></text></g><g><title>&lt;(A,B,C) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="79.0024%" y="725" width="0.0805%" height="15" fill="rgb(211,76,6)" fg:x="982" fg:w="1"/><text x="79.2524%" y="735.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="79.0024%" y="709" width="0.0805%" height="15" fill="rgb(250,176,29)" fg:x="982" fg:w="1"/><text x="79.2524%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="79.0024%" y="693" width="0.0805%" height="15" fill="rgb(240,107,31)" fg:x="982" fg:w="1"/><text x="79.2524%" y="703.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (6 samples, 0.48%)</title><rect x="78.6806%" y="773" width="0.4827%" height="15" fill="rgb(229,215,17)" fg:x="978" fg:w="6"/><text x="78.9306%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.48%)</title><rect x="78.6806%" y="757" width="0.4827%" height="15" fill="rgb(240,79,8)" fg:x="978" fg:w="6"/><text x="78.9306%" y="767.50"></text></g><g><title>&lt;plugins_core::looking::LookingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="79.0024%" y="741" width="0.1609%" height="15" fill="rgb(243,110,48)" fg:x="982" fg:w="2"/><text x="79.2524%" y="751.50"></text></g><g><title>&lt;kernel::model::base::DomainError as core::convert::From&lt;anyhow::Error&gt;&gt;::from (1 samples, 0.08%)</title><rect x="79.0829%" y="725" width="0.0805%" height="15" fill="rgb(236,201,9)" fg:x="983" fg:w="1"/><text x="79.3329%" y="735.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::from_box (1 samples, 0.08%)</title><rect x="79.1633%" y="773" width="0.0805%" height="15" fill="rgb(220,87,26)" fg:x="984" fg:w="1"/><text x="79.4133%" y="783.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.1633%" y="757" width="0.0805%" height="15" fill="rgb(212,118,27)" fg:x="984" fg:w="1"/><text x="79.4133%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::base::DomainError&gt; (1 samples, 0.08%)</title><rect x="79.2438%" y="773" width="0.0805%" height="15" fill="rgb(244,178,50)" fg:x="985" fg:w="1"/><text x="79.4938%" y="783.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (377 samples, 30.33%)</title><rect x="49.2357%" y="805" width="30.3298%" height="15" fill="rgb(215,204,7)" fg:x="612" fg:w="377"/><text x="49.4857%" y="815.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::session::Session::evaluate_and_perform_as (377 samples, 30.33%)</title><rect x="49.2357%" y="789" width="30.3298%" height="15" fill="rgb(214,122,43)" fg:x="612" fg:w="377"/><text x="49.4857%" y="799.50">engine::session::Session::evaluate_and_perform_as</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="79.3242%" y="773" width="0.2414%" height="15" fill="rgb(251,178,26)" fg:x="986" fg:w="3"/><text x="79.5742%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (3 samples, 0.24%)</title><rect x="79.3242%" y="757" width="0.2414%" height="15" fill="rgb(210,7,35)" fg:x="986" fg:w="3"/><text x="79.5742%" y="767.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="79.4047%" y="741" width="0.1609%" height="15" fill="rgb(227,164,54)" fg:x="987" fg:w="2"/><text x="79.6547%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (993 samples, 79.89%)</title><rect x="0.0000%" y="853" width="79.8874%" height="15" fill="rgb(205,18,34)" fg:x="0" fg:w="993"/><text x="0.2500%" y="863.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (993 samples, 79.89%)</title><rect x="0.0000%" y="837" width="79.8874%" height="15" fill="rgb(239,50,19)" fg:x="0" fg:w="993"/><text x="0.2500%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (993 samples, 79.89%)</title><rect x="0.0000%" y="821" width="79.8874%" height="15" fill="rgb(224,85,6)" fg:x="0" fg:w="993"/><text x="0.2500%" y="831.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (4 samples, 0.32%)</title><rect x="79.5656%" y="805" width="0.3218%" height="15" fill="rgb(252,167,34)" fg:x="989" fg:w="4"/><text x="79.8156%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.24%)</title><rect x="79.6460%" y="789" width="0.2414%" height="15" fill="rgb(243,180,35)" fg:x="990" fg:w="3"/><text x="79.8960%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="79.7265%" y="773" width="0.1609%" height="15" fill="rgb(213,214,53)" fg:x="991" fg:w="2"/><text x="79.9765%" y="783.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="79.7265%" y="757" width="0.1609%" height="15" fill="rgb(244,39,37)" fg:x="991" fg:w="2"/><text x="79.9765%" y="767.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="79.8874%" y="789" width="0.0805%" height="15" fill="rgb(215,141,14)" fg:x="993" fg:w="1"/><text x="80.1374%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="79.8874%" y="773" width="0.0805%" height="15" fill="rgb(210,2,42)" fg:x="993" fg:w="1"/><text x="80.1374%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_dynlib::DynamicPlugin&gt; (1 samples, 0.08%)</title><rect x="79.8874%" y="757" width="0.0805%" height="15" fill="rgb(252,189,47)" fg:x="993" fg:w="1"/><text x="80.1374%" y="767.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.0483%" y="693" width="0.0805%" height="15" fill="rgb(222,154,47)" fg:x="995" fg:w="1"/><text x="80.2983%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.1287%" y="677" width="0.0805%" height="15" fill="rgb(228,20,37)" fg:x="996" fg:w="1"/><text x="80.3787%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="80.1287%" y="661" width="0.0805%" height="15" fill="rgb(236,17,4)" fg:x="996" fg:w="1"/><text x="80.3787%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.1287%" y="645" width="0.0805%" height="15" fill="rgb(222,211,31)" fg:x="996" fg:w="1"/><text x="80.3787%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.1287%" y="629" width="0.0805%" height="15" fill="rgb(218,134,25)" fg:x="996" fg:w="1"/><text x="80.3787%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.32%)</title><rect x="79.9678%" y="709" width="0.3218%" height="15" fill="rgb(218,97,43)" fg:x="994" fg:w="4"/><text x="80.2178%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="80.1287%" y="693" width="0.1609%" height="15" fill="rgb(234,163,32)" fg:x="996" fg:w="2"/><text x="80.3787%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2092%" y="677" width="0.0805%" height="15" fill="rgb(251,171,42)" fg:x="997" fg:w="1"/><text x="80.4592%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="80.2092%" y="661" width="0.0805%" height="15" fill="rgb(223,104,12)" fg:x="997" fg:w="1"/><text x="80.4592%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="80.2092%" y="645" width="0.0805%" height="15" fill="rgb(225,29,49)" fg:x="997" fg:w="1"/><text x="80.4592%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2092%" y="629" width="0.0805%" height="15" fill="rgb(253,77,7)" fg:x="997" fg:w="1"/><text x="80.4592%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="79.8874%" y="805" width="0.4827%" height="15" fill="rgb(213,81,26)" fg:x="993" fg:w="6"/><text x="80.1374%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;engine::session::state::State&gt;&gt; (5 samples, 0.40%)</title><rect x="79.9678%" y="789" width="0.4023%" height="15" fill="rgb(246,126,6)" fg:x="994" fg:w="5"/><text x="80.2178%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.9678%" y="773" width="0.4023%" height="15" fill="rgb(232,186,21)" fg:x="994" fg:w="5"/><text x="80.2178%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::internal::LoadedEntity&gt; (5 samples, 0.40%)</title><rect x="79.9678%" y="757" width="0.4023%" height="15" fill="rgb(215,126,18)" fg:x="994" fg:w="5"/><text x="80.2178%" y="767.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.9678%" y="741" width="0.4023%" height="15" fill="rgb(210,47,5)" fg:x="994" fg:w="5"/><text x="80.2178%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.40%)</title><rect x="79.9678%" y="725" width="0.4023%" height="15" fill="rgb(240,70,6)" fg:x="994" fg:w="5"/><text x="80.2178%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="80.2896%" y="709" width="0.0805%" height="15" fill="rgb(230,99,49)" fg:x="998" fg:w="1"/><text x="80.5396%" y="719.50"></text></g><g><title>dlerror (3 samples, 0.24%)</title><rect x="80.6114%" y="693" width="0.2414%" height="15" fill="rgb(212,57,36)" fg:x="1002" fg:w="3"/><text x="80.8614%" y="703.50"></text></g><g><title>__asprintf (3 samples, 0.24%)</title><rect x="80.6114%" y="677" width="0.2414%" height="15" fill="rgb(243,14,50)" fg:x="1002" fg:w="3"/><text x="80.8614%" y="687.50"></text></g><g><title>libloading::safe::Library::new (7 samples, 0.56%)</title><rect x="80.6114%" y="709" width="0.5632%" height="15" fill="rgb(240,2,53)" fg:x="1002" fg:w="7"/><text x="80.8614%" y="719.50"></text></g><g><title>dlopen (4 samples, 0.32%)</title><rect x="80.8528%" y="693" width="0.3218%" height="15" fill="rgb(208,47,53)" fg:x="1005" fg:w="4"/><text x="81.1028%" y="703.50"></text></g><g><title>_dl_catch_error (4 samples, 0.32%)</title><rect x="80.8528%" y="677" width="0.3218%" height="15" fill="rgb(235,186,39)" fg:x="1005" fg:w="4"/><text x="81.1028%" y="687.50"></text></g><g><title>_dl_catch_exception (4 samples, 0.32%)</title><rect x="80.8528%" y="661" width="0.3218%" height="15" fill="rgb(212,35,47)" fg:x="1005" fg:w="4"/><text x="81.1028%" y="671.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="80.9332%" y="645" width="0.2414%" height="15" fill="rgb(248,59,37)" fg:x="1006" fg:w="3"/><text x="81.1832%" y="655.50"></text></g><g><title>_dl_catch_exception (3 samples, 0.24%)</title><rect x="80.9332%" y="629" width="0.2414%" height="15" fill="rgb(223,186,16)" fg:x="1006" fg:w="3"/><text x="81.1832%" y="639.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (9 samples, 0.72%)</title><rect x="80.5310%" y="741" width="0.7241%" height="15" fill="rgb(215,106,35)" fg:x="1001" fg:w="9"/><text x="80.7810%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (8 samples, 0.64%)</title><rect x="80.6114%" y="725" width="0.6436%" height="15" fill="rgb(217,141,29)" fg:x="1002" fg:w="8"/><text x="80.8614%" y="735.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="81.1746%" y="709" width="0.0805%" height="15" fill="rgb(221,227,46)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="719.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="81.1746%" y="693" width="0.0805%" height="15" fill="rgb(212,36,41)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="703.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="81.1746%" y="677" width="0.0805%" height="15" fill="rgb(222,35,11)" fg:x="1009" fg:w="1"/><text x="81.4246%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="81.2550%" y="709" width="0.0805%" height="15" fill="rgb(232,165,33)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.2550%" y="693" width="0.0805%" height="15" fill="rgb(211,38,20)" fg:x="1010" fg:w="1"/><text x="81.5050%" y="703.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (13 samples, 1.05%)</title><rect x="80.3701%" y="805" width="1.0459%" height="15" fill="rgb(230,7,36)" fg:x="999" fg:w="13"/><text x="80.6201%" y="815.50"></text></g><g><title>engine::domain::Domain::open_session_with_middleware (12 samples, 0.97%)</title><rect x="80.4505%" y="789" width="0.9654%" height="15" fill="rgb(213,128,35)" fg:x="1000" fg:w="12"/><text x="80.7005%" y="799.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.88%)</title><rect x="80.5310%" y="773" width="0.8850%" height="15" fill="rgb(218,11,14)" fg:x="1001" fg:w="11"/><text x="80.7810%" y="783.50"></text></g><g><title>engine::session::Session::initialize (11 samples, 0.88%)</title><rect x="80.5310%" y="757" width="0.8850%" height="15" fill="rgb(249,105,7)" fg:x="1001" fg:w="11"/><text x="80.7810%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="81.2550%" y="741" width="0.1609%" height="15" fill="rgb(226,125,21)" fg:x="1010" fg:w="2"/><text x="81.5050%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="81.2550%" y="725" width="0.1609%" height="15" fill="rgb(239,90,47)" fg:x="1010" fg:w="2"/><text x="81.5050%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="81.3355%" y="709" width="0.0805%" height="15" fill="rgb(226,19,1)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="81.3355%" y="693" width="0.0805%" height="15" fill="rgb(205,117,40)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="703.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="81.3355%" y="677" width="0.0805%" height="15" fill="rgb(234,6,54)" fg:x="1011" fg:w="1"/><text x="81.5855%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::build::BuildSurroundings&gt; (1 samples, 0.08%)</title><rect x="81.4159%" y="789" width="0.0805%" height="15" fill="rgb(239,73,32)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="81.4159%" y="773" width="0.0805%" height="15" fill="rgb(226,197,12)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.4159%" y="757" width="0.0805%" height="15" fill="rgb(226,53,42)" fg:x="1012" fg:w="1"/><text x="81.6659%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="81.4964%" y="773" width="0.0805%" height="15" fill="rgb(234,99,30)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.4964%" y="757" width="0.0805%" height="15" fill="rgb(237,175,49)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="81.4964%" y="741" width="0.0805%" height="15" fill="rgb(228,75,42)" fg:x="1013" fg:w="1"/><text x="81.7464%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="81.5768%" y="741" width="0.0805%" height="15" fill="rgb(223,162,48)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="81.5768%" y="725" width="0.0805%" height="15" fill="rgb(221,192,29)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="735.50"></text></g><g><title>engine::session::state::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="81.5768%" y="709" width="0.0805%" height="15" fill="rgb(249,150,41)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="719.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="81.5768%" y="693" width="0.0805%" height="15" fill="rgb(243,107,34)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.5768%" y="677" width="0.0805%" height="15" fill="rgb(214,227,11)" fg:x="1014" fg:w="1"/><text x="81.8268%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="81.6573%" y="693" width="0.0805%" height="15" fill="rgb(209,37,13)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.6573%" y="677" width="0.0805%" height="15" fill="rgb(249,124,20)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.6573%" y="661" width="0.0805%" height="15" fill="rgb(228,28,2)" fg:x="1015" fg:w="1"/><text x="81.9073%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="81.7377%" y="629" width="0.0805%" height="15" fill="rgb(244,55,1)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="81.7377%" y="613" width="0.0805%" height="15" fill="rgb(216,26,19)" fg:x="1016" fg:w="1"/><text x="81.9877%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="81.7377%" y="661" width="0.1609%" height="15" fill="rgb(209,162,10)" fg:x="1016" fg:w="2"/><text x="81.9877%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7377%" y="645" width="0.1609%" height="15" fill="rgb(235,168,42)" fg:x="1016" fg:w="2"/><text x="81.9877%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="81.8182%" y="629" width="0.0805%" height="15" fill="rgb(240,24,14)" fg:x="1017" fg:w="1"/><text x="82.0682%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="81.8182%" y="613" width="0.0805%" height="15" fill="rgb(224,107,11)" fg:x="1017" fg:w="1"/><text x="82.0682%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="81.8182%" y="597" width="0.0805%" height="15" fill="rgb(226,48,4)" fg:x="1017" fg:w="1"/><text x="82.0682%" y="607.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="81.8986%" y="629" width="0.1609%" height="15" fill="rgb(254,31,21)" fg:x="1018" fg:w="2"/><text x="82.1486%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="81.8986%" y="645" width="0.3218%" height="15" fill="rgb(205,156,19)" fg:x="1018" fg:w="4"/><text x="82.1486%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="82.0595%" y="629" width="0.1609%" height="15" fill="rgb(216,73,31)" fg:x="1020" fg:w="2"/><text x="82.3095%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1400%" y="613" width="0.0805%" height="15" fill="rgb(237,88,35)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="82.1400%" y="597" width="0.0805%" height="15" fill="rgb(254,79,48)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.1400%" y="581" width="0.0805%" height="15" fill="rgb(211,66,36)" fg:x="1021" fg:w="1"/><text x="82.3900%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (8 samples, 0.64%)</title><rect x="81.6573%" y="709" width="0.6436%" height="15" fill="rgb(222,13,1)" fg:x="1015" fg:w="8"/><text x="81.9073%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="81.7377%" y="693" width="0.5632%" height="15" fill="rgb(221,216,41)" fg:x="1016" fg:w="7"/><text x="81.9877%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="81.7377%" y="677" width="0.5632%" height="15" fill="rgb(220,10,17)" fg:x="1016" fg:w="7"/><text x="81.9877%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="81.8986%" y="661" width="0.4023%" height="15" fill="rgb(242,43,35)" fg:x="1018" fg:w="5"/><text x="82.1486%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="82.2204%" y="645" width="0.0805%" height="15" fill="rgb(216,182,18)" fg:x="1022" fg:w="1"/><text x="82.4704%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3009%" y="677" width="0.0805%" height="15" fill="rgb(246,217,36)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.3009%" y="661" width="0.0805%" height="15" fill="rgb(208,107,8)" fg:x="1023" fg:w="1"/><text x="82.5509%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3813%" y="645" width="0.0805%" height="15" fill="rgb(208,189,15)" fg:x="1024" fg:w="1"/><text x="82.6313%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.4618%" y="629" width="0.0805%" height="15" fill="rgb(211,70,9)" fg:x="1025" fg:w="1"/><text x="82.7118%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="82.3009%" y="709" width="0.3218%" height="15" fill="rgb(217,95,34)" fg:x="1023" fg:w="4"/><text x="82.5509%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="82.3009%" y="693" width="0.3218%" height="15" fill="rgb(240,223,2)" fg:x="1023" fg:w="4"/><text x="82.5509%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.3813%" y="677" width="0.2414%" height="15" fill="rgb(231,18,6)" fg:x="1024" fg:w="3"/><text x="82.6313%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="82.3813%" y="661" width="0.2414%" height="15" fill="rgb(254,44,46)" fg:x="1024" fg:w="3"/><text x="82.6313%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="82.4618%" y="645" width="0.1609%" height="15" fill="rgb(223,222,46)" fg:x="1025" fg:w="2"/><text x="82.7118%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="82.5422%" y="629" width="0.0805%" height="15" fill="rgb(229,163,13)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5422%" y="613" width="0.0805%" height="15" fill="rgb(220,208,13)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.5422%" y="597" width="0.0805%" height="15" fill="rgb(244,28,53)" fg:x="1026" fg:w="1"/><text x="82.7922%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.6227%" y="661" width="0.0805%" height="15" fill="rgb(243,138,0)" fg:x="1027" fg:w="1"/><text x="82.8727%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.7031%" y="661" width="0.0805%" height="15" fill="rgb(209,90,49)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.7031%" y="645" width="0.0805%" height="15" fill="rgb(247,114,18)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="82.7031%" y="629" width="0.0805%" height="15" fill="rgb(221,14,46)" fg:x="1028" fg:w="1"/><text x="82.9531%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="82.7836%" y="597" width="0.0805%" height="15" fill="rgb(215,29,23)" fg:x="1029" fg:w="1"/><text x="83.0336%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="82.7836%" y="629" width="0.3218%" height="15" fill="rgb(241,37,25)" fg:x="1029" fg:w="4"/><text x="83.0336%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="82.7836%" y="613" width="0.3218%" height="15" fill="rgb(225,17,22)" fg:x="1029" fg:w="4"/><text x="83.0336%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="82.8640%" y="597" width="0.2414%" height="15" fill="rgb(241,182,7)" fg:x="1030" fg:w="3"/><text x="83.1140%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.9445%" y="581" width="0.1609%" height="15" fill="rgb(248,125,10)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.9445%" y="565" width="0.1609%" height="15" fill="rgb(250,3,37)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.9445%" y="549" width="0.1609%" height="15" fill="rgb(237,102,7)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.9445%" y="533" width="0.1609%" height="15" fill="rgb(235,5,5)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="82.9445%" y="517" width="0.1609%" height="15" fill="rgb(249,147,38)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="82.9445%" y="501" width="0.1609%" height="15" fill="rgb(221,25,18)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.9445%" y="485" width="0.1609%" height="15" fill="rgb(211,88,9)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="82.9445%" y="469" width="0.1609%" height="15" fill="rgb(219,62,54)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="82.9445%" y="453" width="0.1609%" height="15" fill="rgb(243,133,46)" fg:x="1031" fg:w="2"/><text x="83.1945%" y="463.50"></text></g><g><title>engine::session::Session::flush (21 samples, 1.69%)</title><rect x="81.4964%" y="789" width="1.6895%" height="15" fill="rgb(214,168,53)" fg:x="1013" fg:w="21"/><text x="81.7464%" y="799.50"></text></g><g><title>engine::session::state::State::close (20 samples, 1.61%)</title><rect x="81.5768%" y="773" width="1.6090%" height="15" fill="rgb(250,58,7)" fg:x="1014" fg:w="20"/><text x="81.8268%" y="783.50"></text></g><g><title>engine::session::state::State::flush_entities (20 samples, 1.61%)</title><rect x="81.5768%" y="757" width="1.6090%" height="15" fill="rgb(249,131,5)" fg:x="1014" fg:w="20"/><text x="81.8268%" y="767.50"></text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (19 samples, 1.53%)</title><rect x="81.6573%" y="741" width="1.5286%" height="15" fill="rgb(234,40,44)" fg:x="1015" fg:w="19"/><text x="81.9073%" y="751.50"></text></g><g><title>engine::session::state::SavesEntities::check_for_changes (19 samples, 1.53%)</title><rect x="81.6573%" y="725" width="1.5286%" height="15" fill="rgb(225,188,42)" fg:x="1015" fg:w="19"/><text x="81.9073%" y="735.50"></text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="82.6227%" y="709" width="0.5632%" height="15" fill="rgb(218,201,51)" fg:x="1027" fg:w="7"/><text x="82.8727%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="82.6227%" y="693" width="0.5632%" height="15" fill="rgb(214,209,38)" fg:x="1027" fg:w="7"/><text x="82.8727%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="82.6227%" y="677" width="0.5632%" height="15" fill="rgb(217,0,20)" fg:x="1027" fg:w="7"/><text x="82.8727%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.40%)</title><rect x="82.7836%" y="661" width="0.4023%" height="15" fill="rgb(248,183,46)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="82.7836%" y="645" width="0.4023%" height="15" fill="rgb(208,99,41)" fg:x="1029" fg:w="5"/><text x="83.0336%" y="655.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="83.1054%" y="629" width="0.0805%" height="15" fill="rgb(210,189,49)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1054%" y="613" width="0.0805%" height="15" fill="rgb(239,191,42)" fg:x="1033" fg:w="1"/><text x="83.3554%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.1858%" y="757" width="0.0805%" height="15" fill="rgb(240,138,26)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.1858%" y="741" width="0.0805%" height="15" fill="rgb(234,45,22)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.1858%" y="725" width="0.0805%" height="15" fill="rgb(228,43,35)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="709" width="0.0805%" height="15" fill="rgb(215,201,54)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="693" width="0.0805%" height="15" fill="rgb(209,60,31)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="677" width="0.0805%" height="15" fill="rgb(232,66,12)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="661" width="0.0805%" height="15" fill="rgb(244,78,24)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.1858%" y="645" width="0.0805%" height="15" fill="rgb(249,65,27)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1858%" y="629" width="0.0805%" height="15" fill="rgb(208,218,19)" fg:x="1034" fg:w="1"/><text x="83.4358%" y="639.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="83.2663%" y="757" width="0.0805%" height="15" fill="rgb(212,181,38)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="83.2663%" y="741" width="0.0805%" height="15" fill="rgb(207,118,40)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.2663%" y="725" width="0.0805%" height="15" fill="rgb(207,126,20)" fg:x="1035" fg:w="1"/><text x="83.5163%" y="735.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="83.3467%" y="709" width="0.0805%" height="15" fill="rgb(232,15,46)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.3467%" y="693" width="0.0805%" height="15" fill="rgb(254,33,30)" fg:x="1036" fg:w="1"/><text x="83.5967%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="83.3467%" y="741" width="0.1609%" height="15" fill="rgb(233,92,20)" fg:x="1036" fg:w="2"/><text x="83.5967%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="83.3467%" y="725" width="0.1609%" height="15" fill="rgb(225,195,54)" fg:x="1036" fg:w="2"/><text x="83.5967%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="83.4272%" y="709" width="0.0805%" height="15" fill="rgb(208,196,7)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.4272%" y="693" width="0.0805%" height="15" fill="rgb(253,19,35)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.4272%" y="677" width="0.0805%" height="15" fill="rgb(228,180,1)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.4272%" y="661" width="0.0805%" height="15" fill="rgb(248,35,18)" fg:x="1037" fg:w="1"/><text x="83.6772%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (5 samples, 0.40%)</title><rect x="83.1858%" y="773" width="0.4023%" height="15" fill="rgb(220,34,8)" fg:x="1034" fg:w="5"/><text x="83.4358%" y="783.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="83.3467%" y="757" width="0.2414%" height="15" fill="rgb(219,223,17)" fg:x="1036" fg:w="3"/><text x="83.5967%" y="767.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="83.5076%" y="741" width="0.0805%" height="15" fill="rgb(223,183,15)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5076%" y="725" width="0.0805%" height="15" fill="rgb(253,184,45)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.5076%" y="709" width="0.0805%" height="15" fill="rgb(207,97,29)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="83.5076%" y="693" width="0.0805%" height="15" fill="rgb(250,170,27)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.5076%" y="677" width="0.0805%" height="15" fill="rgb(206,178,17)" fg:x="1038" fg:w="1"/><text x="83.7576%" y="687.50"></text></g><g><title>plugins_core::build::Build::holding (6 samples, 0.48%)</title><rect x="83.1858%" y="789" width="0.4827%" height="15" fill="rgb(213,92,46)" fg:x="1034" fg:w="6"/><text x="83.4358%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (1 samples, 0.08%)</title><rect x="83.5881%" y="773" width="0.0805%" height="15" fill="rgb(223,114,30)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="83.5881%" y="757" width="0.0805%" height="15" fill="rgb(207,228,9)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.5881%" y="741" width="0.0805%" height="15" fill="rgb(205,70,25)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="83.5881%" y="725" width="0.0805%" height="15" fill="rgb(252,45,30)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="83.5881%" y="709" width="0.0805%" height="15" fill="rgb(219,185,54)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.5881%" y="693" width="0.0805%" height="15" fill="rgb(219,208,54)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.5881%" y="677" width="0.0805%" height="15" fill="rgb(207,164,54)" fg:x="1039" fg:w="1"/><text x="83.8381%" y="687.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="83.6685%" y="789" width="0.0805%" height="15" fill="rgb(240,155,22)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.6685%" y="773" width="0.0805%" height="15" fill="rgb(217,127,14)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.6685%" y="757" width="0.0805%" height="15" fill="rgb(232,179,42)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="767.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.6685%" y="741" width="0.0805%" height="15" fill="rgb(247,55,45)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.6685%" y="725" width="0.0805%" height="15" fill="rgb(217,11,18)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="709" width="0.0805%" height="15" fill="rgb(227,127,4)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="693" width="0.0805%" height="15" fill="rgb(217,97,45)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="677" width="0.0805%" height="15" fill="rgb(250,135,20)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="661" width="0.0805%" height="15" fill="rgb(224,213,26)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="645" width="0.0805%" height="15" fill="rgb(237,86,25)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="83.6685%" y="629" width="0.0805%" height="15" fill="rgb(251,105,18)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="83.6685%" y="613" width="0.0805%" height="15" fill="rgb(246,124,25)" fg:x="1040" fg:w="1"/><text x="83.9185%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="83.7490%" y="789" width="0.0805%" height="15" fill="rgb(210,90,3)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="83.7490%" y="773" width="0.0805%" height="15" fill="rgb(249,40,31)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="783.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="83.7490%" y="757" width="0.0805%" height="15" fill="rgb(231,228,1)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7490%" y="741" width="0.0805%" height="15" fill="rgb(242,25,49)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.7490%" y="725" width="0.0805%" height="15" fill="rgb(224,142,22)" fg:x="1041" fg:w="1"/><text x="83.9990%" y="735.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="83.8294%" y="725" width="0.0805%" height="15" fill="rgb(228,106,29)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="83.8294%" y="709" width="0.0805%" height="15" fill="rgb(207,2,15)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.8294%" y="693" width="0.0805%" height="15" fill="rgb(231,43,37)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.8294%" y="677" width="0.0805%" height="15" fill="rgb(245,193,12)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.8294%" y="661" width="0.0805%" height="15" fill="rgb(246,9,49)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8294%" y="645" width="0.0805%" height="15" fill="rgb(218,50,36)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8294%" y="629" width="0.0805%" height="15" fill="rgb(225,206,16)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.8294%" y="613" width="0.0805%" height="15" fill="rgb(242,52,5)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="83.8294%" y="597" width="0.0805%" height="15" fill="rgb(217,158,11)" fg:x="1042" fg:w="1"/><text x="84.0794%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.9099%" y="693" width="0.0805%" height="15" fill="rgb(242,144,22)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.9099%" y="677" width="0.0805%" height="15" fill="rgb(236,191,3)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9099%" y="661" width="0.0805%" height="15" fill="rgb(241,22,19)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="83.9099%" y="645" width="0.0805%" height="15" fill="rgb(205,217,44)" fg:x="1043" fg:w="1"/><text x="84.1599%" y="655.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.9903%" y="645" width="0.0805%" height="15" fill="rgb(231,53,3)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.9903%" y="629" width="0.0805%" height="15" fill="rgb(207,13,22)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9903%" y="613" width="0.0805%" height="15" fill="rgb(234,62,29)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.9903%" y="597" width="0.0805%" height="15" fill="rgb(226,175,44)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.9903%" y="581" width="0.0805%" height="15" fill="rgb(239,177,6)" fg:x="1044" fg:w="1"/><text x="84.2403%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="84.0708%" y="517" width="0.0805%" height="15" fill="rgb(249,125,15)" fg:x="1045" fg:w="1"/><text x="84.3208%" y="527.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="83.9099%" y="709" width="0.3218%" height="15" fill="rgb(210,201,5)" fg:x="1043" fg:w="4"/><text x="84.1599%" y="719.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="83.9903%" y="693" width="0.2414%" height="15" fill="rgb(210,14,6)" fg:x="1044" fg:w="3"/><text x="84.2403%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="83.9903%" y="677" width="0.2414%" height="15" fill="rgb(239,141,15)" fg:x="1044" fg:w="3"/><text x="84.2403%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="83.9903%" y="661" width="0.2414%" height="15" fill="rgb(235,75,9)" fg:x="1044" fg:w="3"/><text x="84.2403%" y="671.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="84.0708%" y="645" width="0.1609%" height="15" fill="rgb(246,122,37)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="655.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="84.0708%" y="629" width="0.1609%" height="15" fill="rgb(235,75,52)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="639.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0708%" y="613" width="0.1609%" height="15" fill="rgb(235,179,12)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.0708%" y="597" width="0.1609%" height="15" fill="rgb(223,20,9)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0708%" y="581" width="0.1609%" height="15" fill="rgb(223,75,22)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="84.0708%" y="565" width="0.1609%" height="15" fill="rgb(248,148,18)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="84.0708%" y="549" width="0.1609%" height="15" fill="rgb(225,103,8)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Property&gt;::serialize (2 samples, 0.16%)</title><rect x="84.0708%" y="533" width="0.1609%" height="15" fill="rgb(237,168,17)" fg:x="1045" fg:w="2"/><text x="84.3208%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.1512%" y="517" width="0.0805%" height="15" fill="rgb(215,192,38)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.1512%" y="501" width="0.0805%" height="15" fill="rgb(237,69,28)" fg:x="1046" fg:w="1"/><text x="84.4012%" y="511.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="84.2317%" y="693" width="0.0805%" height="15" fill="rgb(254,167,32)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="703.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="84.2317%" y="677" width="0.0805%" height="15" fill="rgb(250,81,30)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="687.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="84.2317%" y="661" width="0.0805%" height="15" fill="rgb(240,68,52)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="671.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="84.2317%" y="645" width="0.0805%" height="15" fill="rgb(205,97,42)" fg:x="1047" fg:w="1"/><text x="84.4817%" y="655.50"></text></g><g><title>plugins_core::build::Build::leads_to (6 samples, 0.48%)</title><rect x="83.9099%" y="725" width="0.4827%" height="15" fill="rgb(217,10,22)" fg:x="1043" fg:w="6"/><text x="84.1599%" y="735.50"></text></g><g><title>plugins_core::tools::leads_to (2 samples, 0.16%)</title><rect x="84.2317%" y="709" width="0.1609%" height="15" fill="rgb(216,21,26)" fg:x="1047" fg:w="2"/><text x="84.4817%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.3121%" y="693" width="0.0805%" height="15" fill="rgb(239,0,36)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="703.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Exit&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3121%" y="677" width="0.0805%" height="15" fill="rgb(216,162,28)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3121%" y="661" width="0.0805%" height="15" fill="rgb(246,22,39)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="671.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3121%" y="645" width="0.0805%" height="15" fill="rgb(222,84,49)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3121%" y="629" width="0.0805%" height="15" fill="rgb(250,38,34)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3121%" y="613" width="0.0805%" height="15" fill="rgb(236,0,38)" fg:x="1048" fg:w="1"/><text x="84.5621%" y="623.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="84.3926%" y="725" width="0.0805%" height="15" fill="rgb(237,205,54)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="84.3926%" y="709" width="0.0805%" height="15" fill="rgb(221,80,35)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="84.3926%" y="693" width="0.0805%" height="15" fill="rgb(237,204,22)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="84.3926%" y="677" width="0.0805%" height="15" fill="rgb(213,108,15)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3926%" y="661" width="0.0805%" height="15" fill="rgb(251,187,9)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3926%" y="645" width="0.0805%" height="15" fill="rgb(250,61,9)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (1 samples, 0.08%)</title><rect x="84.3926%" y="629" width="0.0805%" height="15" fill="rgb(230,131,33)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="84.3926%" y="613" width="0.0805%" height="15" fill="rgb(239,117,11)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3926%" y="597" width="0.0805%" height="15" fill="rgb(222,112,44)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.3926%" y="581" width="0.0805%" height="15" fill="rgb(251,33,25)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.3926%" y="565" width="0.0805%" height="15" fill="rgb(208,171,34)" fg:x="1049" fg:w="1"/><text x="84.6426%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.72%)</title><rect x="83.8294%" y="773" width="0.7241%" height="15" fill="rgb(250,166,54)" fg:x="1042" fg:w="9"/><text x="84.0794%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.72%)</title><rect x="83.8294%" y="757" width="0.7241%" height="15" fill="rgb(212,148,2)" fg:x="1042" fg:w="9"/><text x="84.0794%" y="767.50"></text></g><g><title>plugins_core::build::QuickThing::make (9 samples, 0.72%)</title><rect x="83.8294%" y="741" width="0.7241%" height="15" fill="rgb(224,92,39)" fg:x="1042" fg:w="9"/><text x="84.0794%" y="751.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="84.4730%" y="725" width="0.0805%" height="15" fill="rgb(250,28,16)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="735.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4730%" y="709" width="0.0805%" height="15" fill="rgb(227,128,26)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4730%" y="693" width="0.0805%" height="15" fill="rgb(248,66,7)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="84.4730%" y="677" width="0.0805%" height="15" fill="rgb(215,124,51)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="84.4730%" y="661" width="0.0805%" height="15" fill="rgb(207,91,1)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="84.4730%" y="645" width="0.0805%" height="15" fill="rgb(217,207,38)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="84.4730%" y="629" width="0.0805%" height="15" fill="rgb(240,118,9)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4730%" y="613" width="0.0805%" height="15" fill="rgb(224,147,4)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="84.4730%" y="597" width="0.0805%" height="15" fill="rgb(205,105,13)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="84.4730%" y="581" width="0.0805%" height="15" fill="rgb(251,78,39)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="84.4730%" y="565" width="0.0805%" height="15" fill="rgb(225,60,44)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="84.4730%" y="549" width="0.0805%" height="15" fill="rgb(221,228,40)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="84.4730%" y="533" width="0.0805%" height="15" fill="rgb(215,104,30)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.4730%" y="517" width="0.0805%" height="15" fill="rgb(206,183,3)" fg:x="1050" fg:w="1"/><text x="84.7230%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.5535%" y="709" width="0.0805%" height="15" fill="rgb(236,199,25)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::state::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="84.5535%" y="693" width="0.0805%" height="15" fill="rgb(230,107,29)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5535%" y="677" width="0.0805%" height="15" fill="rgb(216,12,37)" fg:x="1051" fg:w="1"/><text x="84.8035%" y="687.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="84.6340%" y="709" width="0.0805%" height="15" fill="rgb(238,165,28)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="84.6340%" y="693" width="0.0805%" height="15" fill="rgb(226,173,5)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="703.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="84.6340%" y="677" width="0.0805%" height="15" fill="rgb(229,9,37)" fg:x="1052" fg:w="1"/><text x="84.8840%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="84.7144%" y="661" width="0.0805%" height="15" fill="rgb(252,194,43)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="84.7144%" y="645" width="0.0805%" height="15" fill="rgb(215,58,45)" fg:x="1053" fg:w="1"/><text x="84.9644%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="84.8753%" y="645" width="0.1609%" height="15" fill="rgb(218,34,51)" fg:x="1055" fg:w="2"/><text x="85.1253%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="84.8753%" y="629" width="0.1609%" height="15" fill="rgb(230,104,27)" fg:x="1055" fg:w="2"/><text x="85.1253%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="84.8753%" y="613" width="0.1609%" height="15" fill="rgb(250,9,6)" fg:x="1055" fg:w="2"/><text x="85.1253%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="84.8753%" y="597" width="0.1609%" height="15" fill="rgb(245,10,16)" fg:x="1055" fg:w="2"/><text x="85.1253%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="85.0362%" y="629" width="0.0805%" height="15" fill="rgb(227,182,27)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.0362%" y="613" width="0.0805%" height="15" fill="rgb(225,91,37)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="85.0362%" y="597" width="0.0805%" height="15" fill="rgb(240,16,41)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="607.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.0362%" y="581" width="0.0805%" height="15" fill="rgb(214,108,54)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="591.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.0362%" y="565" width="0.0805%" height="15" fill="rgb(253,65,28)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.0362%" y="549" width="0.0805%" height="15" fill="rgb(246,105,4)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.0362%" y="533" width="0.0805%" height="15" fill="rgb(223,163,37)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.0362%" y="517" width="0.0805%" height="15" fill="rgb(206,202,31)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="527.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.0362%" y="501" width="0.0805%" height="15" fill="rgb(241,202,54)" fg:x="1057" fg:w="1"/><text x="85.2862%" y="511.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="85.1167%" y="629" width="0.1609%" height="15" fill="rgb(220,22,45)" fg:x="1058" fg:w="2"/><text x="85.3667%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.1167%" y="613" width="0.1609%" height="15" fill="rgb(234,215,40)" fg:x="1058" fg:w="2"/><text x="85.3667%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.1167%" y="597" width="0.1609%" height="15" fill="rgb(220,3,5)" fg:x="1058" fg:w="2"/><text x="85.3667%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.1167%" y="581" width="0.1609%" height="15" fill="rgb(210,8,15)" fg:x="1058" fg:w="2"/><text x="85.3667%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="85.3580%" y="597" width="0.0805%" height="15" fill="rgb(218,113,45)" fg:x="1061" fg:w="1"/><text x="85.6080%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="85.0362%" y="645" width="0.4827%" height="15" fill="rgb(249,208,10)" fg:x="1057" fg:w="6"/><text x="85.2862%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="85.2776%" y="629" width="0.2414%" height="15" fill="rgb(250,145,17)" fg:x="1060" fg:w="3"/><text x="85.5276%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="85.3580%" y="613" width="0.1609%" height="15" fill="rgb(254,24,13)" fg:x="1061" fg:w="2"/><text x="85.6080%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4385%" y="597" width="0.0805%" height="15" fill="rgb(244,36,15)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="85.4385%" y="581" width="0.0805%" height="15" fill="rgb(228,168,26)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="591.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="85.4385%" y="565" width="0.0805%" height="15" fill="rgb(214,145,10)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="575.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="85.4385%" y="549" width="0.0805%" height="15" fill="rgb(232,59,25)" fg:x="1062" fg:w="1"/><text x="85.6885%" y="559.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="84.7144%" y="677" width="0.9654%" height="15" fill="rgb(254,181,2)" fg:x="1053" fg:w="12"/><text x="84.9644%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.88%)</title><rect x="84.7949%" y="661" width="0.8850%" height="15" fill="rgb(221,139,49)" fg:x="1054" fg:w="11"/><text x="85.0449%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="85.5189%" y="645" width="0.1609%" height="15" fill="rgb(235,84,36)" fg:x="1063" fg:w="2"/><text x="85.7689%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="85.5189%" y="629" width="0.1609%" height="15" fill="rgb(254,32,49)" fg:x="1063" fg:w="2"/><text x="85.7689%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="85.5189%" y="613" width="0.1609%" height="15" fill="rgb(214,136,49)" fg:x="1063" fg:w="2"/><text x="85.7689%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.5994%" y="597" width="0.0805%" height="15" fill="rgb(206,113,54)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="85.5994%" y="581" width="0.0805%" height="15" fill="rgb(226,78,17)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="591.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="85.5994%" y="565" width="0.0805%" height="15" fill="rgb(249,189,19)" fg:x="1064" fg:w="1"/><text x="85.8494%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.6798%" y="597" width="0.0805%" height="15" fill="rgb(211,82,26)" fg:x="1065" fg:w="1"/><text x="85.9298%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="85.6798%" y="581" width="0.0805%" height="15" fill="rgb(206,131,52)" fg:x="1065" fg:w="1"/><text x="85.9298%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.6798%" y="677" width="0.1609%" height="15" fill="rgb(223,51,24)" fg:x="1065" fg:w="2"/><text x="85.9298%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="85.6798%" y="661" width="0.1609%" height="15" fill="rgb(235,93,36)" fg:x="1065" fg:w="2"/><text x="85.9298%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.6798%" y="645" width="0.1609%" height="15" fill="rgb(219,118,14)" fg:x="1065" fg:w="2"/><text x="85.9298%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.6798%" y="629" width="0.1609%" height="15" fill="rgb(240,145,10)" fg:x="1065" fg:w="2"/><text x="85.9298%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="85.6798%" y="613" width="0.1609%" height="15" fill="rgb(241,104,15)" fg:x="1065" fg:w="2"/><text x="85.9298%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7603%" y="597" width="0.0805%" height="15" fill="rgb(248,117,21)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="85.7603%" y="581" width="0.0805%" height="15" fill="rgb(250,184,34)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="591.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="85.7603%" y="565" width="0.0805%" height="15" fill="rgb(218,169,23)" fg:x="1066" fg:w="1"/><text x="86.0103%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="85.8407%" y="661" width="0.0805%" height="15" fill="rgb(214,33,53)" fg:x="1067" fg:w="1"/><text x="86.0907%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.9212%" y="629" width="0.0805%" height="15" fill="rgb(239,78,4)" fg:x="1068" fg:w="1"/><text x="86.1712%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.0821%" y="549" width="0.1609%" height="15" fill="rgb(250,25,23)" fg:x="1070" fg:w="2"/><text x="86.3321%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="86.0821%" y="533" width="0.1609%" height="15" fill="rgb(220,205,51)" fg:x="1070" fg:w="2"/><text x="86.3321%" y="543.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="86.1625%" y="517" width="0.0805%" height="15" fill="rgb(252,115,2)" fg:x="1071" fg:w="1"/><text x="86.4125%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4039%" y="485" width="0.0805%" height="15" fill="rgb(222,106,48)" fg:x="1074" fg:w="1"/><text x="86.6539%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="86.4039%" y="469" width="0.0805%" height="15" fill="rgb(225,77,33)" fg:x="1074" fg:w="1"/><text x="86.6539%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.4039%" y="453" width="0.0805%" height="15" fill="rgb(250,135,2)" fg:x="1074" fg:w="1"/><text x="86.6539%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="86.4843%" y="469" width="0.0805%" height="15" fill="rgb(221,217,54)" fg:x="1075" fg:w="1"/><text x="86.7343%" y="479.50"></text></g><g><title>engine::session::Session::flush (26 samples, 2.09%)</title><rect x="84.5535%" y="773" width="2.0917%" height="15" fill="rgb(233,12,6)" fg:x="1051" fg:w="26"/><text x="84.8035%" y="783.50">e..</text></g><g><title>engine::session::Session::save_changes (26 samples, 2.09%)</title><rect x="84.5535%" y="757" width="2.0917%" height="15" fill="rgb(251,10,27)" fg:x="1051" fg:w="26"/><text x="84.8035%" y="767.50">e..</text></g><g><title>engine::session::state::State::close (26 samples, 2.09%)</title><rect x="84.5535%" y="741" width="2.0917%" height="15" fill="rgb(214,20,35)" fg:x="1051" fg:w="26"/><text x="84.8035%" y="751.50">e..</text></g><g><title>engine::session::state::State::flush_entities (26 samples, 2.09%)</title><rect x="84.5535%" y="725" width="2.0917%" height="15" fill="rgb(249,13,18)" fg:x="1051" fg:w="26"/><text x="84.8035%" y="735.50">e..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (24 samples, 1.93%)</title><rect x="84.7144%" y="709" width="1.9308%" height="15" fill="rgb(251,115,18)" fg:x="1053" fg:w="24"/><text x="84.9644%" y="719.50">e..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (24 samples, 1.93%)</title><rect x="84.7144%" y="693" width="1.9308%" height="15" fill="rgb(219,91,11)" fg:x="1053" fg:w="24"/><text x="84.9644%" y="703.50">e..</text></g><g><title>kernel::model::any_entity_changes (10 samples, 0.80%)</title><rect x="85.8407%" y="677" width="0.8045%" height="15" fill="rgb(238,130,14)" fg:x="1067" fg:w="10"/><text x="86.0907%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="85.9212%" y="661" width="0.7241%" height="15" fill="rgb(216,197,46)" fg:x="1068" fg:w="9"/><text x="86.1712%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="85.9212%" y="645" width="0.7241%" height="15" fill="rgb(239,113,46)" fg:x="1068" fg:w="9"/><text x="86.1712%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.64%)</title><rect x="86.0016%" y="629" width="0.6436%" height="15" fill="rgb(220,76,52)" fg:x="1069" fg:w="8"/><text x="86.2516%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.64%)</title><rect x="86.0016%" y="613" width="0.6436%" height="15" fill="rgb(247,167,28)" fg:x="1069" fg:w="8"/><text x="86.2516%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (8 samples, 0.64%)</title><rect x="86.0016%" y="597" width="0.6436%" height="15" fill="rgb(228,6,44)" fg:x="1069" fg:w="8"/><text x="86.2516%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="86.0016%" y="581" width="0.6436%" height="15" fill="rgb(214,75,23)" fg:x="1069" fg:w="8"/><text x="86.2516%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="86.0821%" y="565" width="0.5632%" height="15" fill="rgb(241,211,28)" fg:x="1070" fg:w="7"/><text x="86.3321%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="86.2430%" y="549" width="0.4023%" height="15" fill="rgb(216,147,39)" fg:x="1072" fg:w="5"/><text x="86.4930%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="86.3234%" y="533" width="0.3218%" height="15" fill="rgb(237,121,45)" fg:x="1073" fg:w="4"/><text x="86.5734%" y="543.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="86.3234%" y="517" width="0.3218%" height="15" fill="rgb(214,115,15)" fg:x="1073" fg:w="4"/><text x="86.5734%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="86.4039%" y="501" width="0.2414%" height="15" fill="rgb(253,132,27)" fg:x="1074" fg:w="3"/><text x="86.6539%" y="511.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="86.4843%" y="485" width="0.1609%" height="15" fill="rgb(222,56,1)" fg:x="1075" fg:w="2"/><text x="86.7343%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.5648%" y="469" width="0.0805%" height="15" fill="rgb(216,99,46)" fg:x="1076" fg:w="1"/><text x="86.8148%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7257%" y="693" width="0.0805%" height="15" fill="rgb(232,1,9)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7257%" y="677" width="0.0805%" height="15" fill="rgb(215,41,52)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7257%" y="661" width="0.0805%" height="15" fill="rgb(223,107,41)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.7257%" y="645" width="0.0805%" height="15" fill="rgb(208,151,32)" fg:x="1078" fg:w="1"/><text x="86.9757%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.7257%" y="741" width="0.1609%" height="15" fill="rgb(229,32,3)" fg:x="1078" fg:w="2"/><text x="86.9757%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.7257%" y="725" width="0.1609%" height="15" fill="rgb(234,186,36)" fg:x="1078" fg:w="2"/><text x="86.9757%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.7257%" y="709" width="0.1609%" height="15" fill="rgb(216,9,5)" fg:x="1078" fg:w="2"/><text x="86.9757%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8061%" y="693" width="0.0805%" height="15" fill="rgb(226,151,21)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.8061%" y="677" width="0.0805%" height="15" fill="rgb(210,130,28)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.8061%" y="661" width="0.0805%" height="15" fill="rgb(239,58,31)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.8061%" y="645" width="0.0805%" height="15" fill="rgb(213,14,0)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8061%" y="629" width="0.0805%" height="15" fill="rgb(228,97,38)" fg:x="1079" fg:w="1"/><text x="87.0561%" y="639.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.8866%" y="693" width="0.1609%" height="15" fill="rgb(248,9,13)" fg:x="1080" fg:w="2"/><text x="87.1366%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.8866%" y="677" width="0.1609%" height="15" fill="rgb(233,149,17)" fg:x="1080" fg:w="2"/><text x="87.1366%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.8866%" y="661" width="0.1609%" height="15" fill="rgb(233,127,53)" fg:x="1080" fg:w="2"/><text x="87.1366%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.8866%" y="645" width="0.1609%" height="15" fill="rgb(207,120,37)" fg:x="1080" fg:w="2"/><text x="87.1366%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.8866%" y="629" width="0.1609%" height="15" fill="rgb(210,65,38)" fg:x="1080" fg:w="2"/><text x="87.1366%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9670%" y="613" width="0.0805%" height="15" fill="rgb(229,206,39)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.9670%" y="597" width="0.0805%" height="15" fill="rgb(237,11,35)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9670%" y="581" width="0.0805%" height="15" fill="rgb(237,159,38)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.9670%" y="565" width="0.0805%" height="15" fill="rgb(239,79,36)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.9670%" y="549" width="0.0805%" height="15" fill="rgb(231,163,51)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.9670%" y="533" width="0.0805%" height="15" fill="rgb(226,68,29)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.9670%" y="517" width="0.0805%" height="15" fill="rgb(250,192,3)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9670%" y="501" width="0.0805%" height="15" fill="rgb(206,11,13)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.9670%" y="485" width="0.0805%" height="15" fill="rgb(234,128,26)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.9670%" y="469" width="0.0805%" height="15" fill="rgb(226,134,12)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.9670%" y="453" width="0.0805%" height="15" fill="rgb(240,60,15)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.9670%" y="437" width="0.0805%" height="15" fill="rgb(222,112,11)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.9670%" y="421" width="0.0805%" height="15" fill="rgb(231,207,44)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.9670%" y="405" width="0.0805%" height="15" fill="rgb(250,222,54)" fg:x="1081" fg:w="1"/><text x="87.2170%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.0475%" y="581" width="0.0805%" height="15" fill="rgb(243,223,15)" fg:x="1082" fg:w="1"/><text x="87.2975%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="86.6452%" y="757" width="0.5632%" height="15" fill="rgb(239,2,5)" fg:x="1077" fg:w="7"/><text x="86.8952%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="86.8866%" y="741" width="0.3218%" height="15" fill="rgb(241,83,27)" fg:x="1080" fg:w="4"/><text x="87.1366%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="86.8866%" y="725" width="0.3218%" height="15" fill="rgb(223,175,51)" fg:x="1080" fg:w="4"/><text x="87.1366%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="86.8866%" y="709" width="0.3218%" height="15" fill="rgb(209,11,47)" fg:x="1080" fg:w="4"/><text x="87.1366%" y="719.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="87.0475%" y="693" width="0.1609%" height="15" fill="rgb(249,60,43)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="87.0475%" y="677" width="0.1609%" height="15" fill="rgb(244,84,47)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Properties&gt;::serialize (2 samples, 0.16%)</title><rect x="87.0475%" y="661" width="0.1609%" height="15" fill="rgb(241,110,24)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.0475%" y="645" width="0.1609%" height="15" fill="rgb(236,79,1)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::ser::Serialize for kernel::model::props::Props&gt;::serialize (2 samples, 0.16%)</title><rect x="87.0475%" y="629" width="0.1609%" height="15" fill="rgb(210,152,4)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="87.0475%" y="613" width="0.1609%" height="15" fill="rgb(218,71,19)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="87.0475%" y="597" width="0.1609%" height="15" fill="rgb(207,161,51)" fg:x="1082" fg:w="2"/><text x="87.2975%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1279%" y="581" width="0.0805%" height="15" fill="rgb(219,84,54)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="591.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.1279%" y="565" width="0.0805%" height="15" fill="rgb(243,172,34)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.1279%" y="549" width="0.0805%" height="15" fill="rgb(233,181,1)" fg:x="1083" fg:w="1"/><text x="87.3779%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.2084%" y="709" width="0.0805%" height="15" fill="rgb(236,21,18)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.2084%" y="693" width="0.0805%" height="15" fill="rgb(244,165,15)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2084%" y="677" width="0.0805%" height="15" fill="rgb(235,75,19)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2084%" y="661" width="0.0805%" height="15" fill="rgb(217,229,29)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2084%" y="645" width="0.0805%" height="15" fill="rgb(250,200,19)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2084%" y="629" width="0.0805%" height="15" fill="rgb(218,195,36)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2084%" y="613" width="0.0805%" height="15" fill="rgb(206,183,32)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2084%" y="597" width="0.0805%" height="15" fill="rgb(235,151,53)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2084%" y="581" width="0.0805%" height="15" fill="rgb(244,120,37)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2084%" y="565" width="0.0805%" height="15" fill="rgb(209,96,41)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2084%" y="549" width="0.0805%" height="15" fill="rgb(208,229,20)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="559.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.2084%" y="533" width="0.0805%" height="15" fill="rgb(208,153,33)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.2084%" y="517" width="0.0805%" height="15" fill="rgb(223,196,8)" fg:x="1084" fg:w="1"/><text x="87.4584%" y="527.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="87.2084%" y="741" width="0.1609%" height="15" fill="rgb(241,75,49)" fg:x="1084" fg:w="2"/><text x="87.4584%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="87.2084%" y="725" width="0.1609%" height="15" fill="rgb(212,52,42)" fg:x="1084" fg:w="2"/><text x="87.4584%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="87.2888%" y="709" width="0.0805%" height="15" fill="rgb(220,148,43)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.2888%" y="693" width="0.0805%" height="15" fill="rgb(228,88,15)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.2888%" y="677" width="0.0805%" height="15" fill="rgb(213,87,14)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2888%" y="661" width="0.0805%" height="15" fill="rgb(220,198,31)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2888%" y="645" width="0.0805%" height="15" fill="rgb(223,165,38)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.2888%" y="629" width="0.0805%" height="15" fill="rgb(247,56,48)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2888%" y="613" width="0.0805%" height="15" fill="rgb(222,150,13)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.2888%" y="597" width="0.0805%" height="15" fill="rgb(218,214,11)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.2888%" y="581" width="0.0805%" height="15" fill="rgb(246,111,16)" fg:x="1085" fg:w="1"/><text x="87.5388%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.3693%" y="693" width="0.0805%" height="15" fill="rgb(250,127,26)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="703.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.3693%" y="677" width="0.0805%" height="15" fill="rgb(237,156,23)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.3693%" y="661" width="0.0805%" height="15" fill="rgb(215,143,51)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3693%" y="645" width="0.0805%" height="15" fill="rgb(209,119,39)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3693%" y="629" width="0.0805%" height="15" fill="rgb(228,181,16)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3693%" y="613" width="0.0805%" height="15" fill="rgb(236,113,51)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3693%" y="597" width="0.0805%" height="15" fill="rgb(223,132,1)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.3693%" y="581" width="0.0805%" height="15" fill="rgb(227,4,54)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3693%" y="565" width="0.0805%" height="15" fill="rgb(254,72,52)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3693%" y="549" width="0.0805%" height="15" fill="rgb(252,104,52)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.3693%" y="533" width="0.0805%" height="15" fill="rgb(251,146,26)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.3693%" y="517" width="0.0805%" height="15" fill="rgb(214,146,19)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.3693%" y="501" width="0.0805%" height="15" fill="rgb(242,222,1)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3693%" y="485" width="0.0805%" height="15" fill="rgb(220,178,32)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3693%" y="469" width="0.0805%" height="15" fill="rgb(220,50,48)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3693%" y="453" width="0.0805%" height="15" fill="rgb(207,117,22)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3693%" y="437" width="0.0805%" height="15" fill="rgb(247,195,50)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3693%" y="421" width="0.0805%" height="15" fill="rgb(206,50,39)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3693%" y="405" width="0.0805%" height="15" fill="rgb(236,141,29)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3693%" y="389" width="0.0805%" height="15" fill="rgb(247,18,44)" fg:x="1086" fg:w="1"/><text x="87.6193%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.4497%" y="645" width="0.0805%" height="15" fill="rgb(243,179,46)" fg:x="1087" fg:w="1"/><text x="87.6997%" y="655.50"></text></g><g><title>plugins_core::build::Build::holding (12 samples, 0.97%)</title><rect x="86.6452%" y="773" width="0.9654%" height="15" fill="rgb(241,178,53)" fg:x="1077" fg:w="12"/><text x="86.8952%" y="783.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="87.2084%" y="757" width="0.4023%" height="15" fill="rgb(236,100,9)" fg:x="1084" fg:w="5"/><text x="87.4584%" y="767.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="87.3693%" y="741" width="0.2414%" height="15" fill="rgb(208,180,29)" fg:x="1086" fg:w="3"/><text x="87.6193%" y="751.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="87.3693%" y="725" width="0.2414%" height="15" fill="rgb(241,204,36)" fg:x="1086" fg:w="3"/><text x="87.6193%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="87.3693%" y="709" width="0.2414%" height="15" fill="rgb(248,106,5)" fg:x="1086" fg:w="3"/><text x="87.6193%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="87.4497%" y="693" width="0.1609%" height="15" fill="rgb(245,13,49)" fg:x="1087" fg:w="2"/><text x="87.6997%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.4497%" y="677" width="0.1609%" height="15" fill="rgb(221,209,34)" fg:x="1087" fg:w="2"/><text x="87.6997%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.4497%" y="661" width="0.1609%" height="15" fill="rgb(224,83,31)" fg:x="1087" fg:w="2"/><text x="87.6997%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5302%" y="645" width="0.0805%" height="15" fill="rgb(218,63,22)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5302%" y="629" width="0.0805%" height="15" fill="rgb(214,167,5)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5302%" y="613" width="0.0805%" height="15" fill="rgb(243,13,0)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5302%" y="597" width="0.0805%" height="15" fill="rgb(237,20,46)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="87.5302%" y="581" width="0.0805%" height="15" fill="rgb(240,94,48)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5302%" y="565" width="0.0805%" height="15" fill="rgb(205,160,17)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.5302%" y="549" width="0.0805%" height="15" fill="rgb(234,42,33)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.5302%" y="533" width="0.0805%" height="15" fill="rgb(215,166,5)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.5302%" y="517" width="0.0805%" height="15" fill="rgb(215,9,6)" fg:x="1088" fg:w="1"/><text x="87.7802%" y="527.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="87.6106%" y="773" width="0.0805%" height="15" fill="rgb(212,53,6)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="87.6106%" y="757" width="0.0805%" height="15" fill="rgb(249,157,19)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="87.6106%" y="741" width="0.0805%" height="15" fill="rgb(222,212,45)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="87.6106%" y="725" width="0.0805%" height="15" fill="rgb(232,155,17)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.6106%" y="709" width="0.0805%" height="15" fill="rgb(212,159,50)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6106%" y="693" width="0.0805%" height="15" fill="rgb(247,71,8)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="87.6106%" y="677" width="0.0805%" height="15" fill="rgb(239,128,29)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6106%" y="661" width="0.0805%" height="15" fill="rgb(227,117,11)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6106%" y="645" width="0.0805%" height="15" fill="rgb(247,183,4)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="87.6106%" y="629" width="0.0805%" height="15" fill="rgb(211,161,41)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="87.6106%" y="613" width="0.0805%" height="15" fill="rgb(250,157,52)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.6106%" y="597" width="0.0805%" height="15" fill="rgb(249,118,26)" fg:x="1089" fg:w="1"/><text x="87.8606%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="87.6911%" y="741" width="0.0805%" height="15" fill="rgb(234,52,37)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="751.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="87.6911%" y="725" width="0.0805%" height="15" fill="rgb(237,188,45)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="735.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="87.6911%" y="709" width="0.0805%" height="15" fill="rgb(241,3,40)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="693" width="0.0805%" height="15" fill="rgb(246,192,7)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6911%" y="677" width="0.0805%" height="15" fill="rgb(206,168,17)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="661" width="0.0805%" height="15" fill="rgb(208,124,33)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="671.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="645" width="0.0805%" height="15" fill="rgb(226,186,11)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="629" width="0.0805%" height="15" fill="rgb(218,223,1)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6911%" y="613" width="0.0805%" height="15" fill="rgb(254,65,21)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="597" width="0.0805%" height="15" fill="rgb(239,63,32)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="581" width="0.0805%" height="15" fill="rgb(219,85,29)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="87.6911%" y="565" width="0.0805%" height="15" fill="rgb(246,74,32)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="575.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="87.6911%" y="549" width="0.0805%" height="15" fill="rgb(251,20,52)" fg:x="1090" fg:w="1"/><text x="87.9411%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="87.7715%" y="725" width="0.0805%" height="15" fill="rgb(222,160,46)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="87.7715%" y="709" width="0.0805%" height="15" fill="rgb(230,68,24)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7715%" y="693" width="0.0805%" height="15" fill="rgb(233,83,32)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="87.7715%" y="677" width="0.0805%" height="15" fill="rgb(253,79,36)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="87.7715%" y="661" width="0.0805%" height="15" fill="rgb(224,125,51)" fg:x="1091" fg:w="1"/><text x="88.0215%" y="671.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (2 samples, 0.16%)</title><rect x="87.7715%" y="741" width="0.1609%" height="15" fill="rgb(254,158,3)" fg:x="1091" fg:w="2"/><text x="88.0215%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="87.8520%" y="725" width="0.0805%" height="15" fill="rgb(243,226,3)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="87.8520%" y="709" width="0.0805%" height="15" fill="rgb(208,37,10)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="87.8520%" y="693" width="0.0805%" height="15" fill="rgb(227,35,6)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8520%" y="677" width="0.0805%" height="15" fill="rgb(236,35,38)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="87.8520%" y="661" width="0.0805%" height="15" fill="rgb(247,165,26)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="87.8520%" y="645" width="0.0805%" height="15" fill="rgb(251,131,20)" fg:x="1092" fg:w="1"/><text x="88.1020%" y="655.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="87.9324%" y="693" width="0.1609%" height="15" fill="rgb(248,168,52)" fg:x="1093" fg:w="2"/><text x="88.1824%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.9324%" y="677" width="0.1609%" height="15" fill="rgb(241,220,45)" fg:x="1093" fg:w="2"/><text x="88.1824%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0129%" y="661" width="0.0805%" height="15" fill="rgb(240,85,44)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0129%" y="645" width="0.0805%" height="15" fill="rgb(223,69,47)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0129%" y="629" width="0.0805%" height="15" fill="rgb(221,209,17)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0129%" y="613" width="0.0805%" height="15" fill="rgb(224,194,24)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.0129%" y="597" width="0.0805%" height="15" fill="rgb(249,43,24)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0129%" y="581" width="0.0805%" height="15" fill="rgb(245,78,29)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.0129%" y="565" width="0.0805%" height="15" fill="rgb(241,167,34)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.0129%" y="549" width="0.0805%" height="15" fill="rgb(225,91,27)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="88.0129%" y="533" width="0.0805%" height="15" fill="rgb(249,82,49)" fg:x="1094" fg:w="1"/><text x="88.2629%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="87.6911%" y="757" width="0.4827%" height="15" fill="rgb(215,90,36)" fg:x="1090" fg:w="6"/><text x="87.9411%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="87.9324%" y="741" width="0.2414%" height="15" fill="rgb(209,128,1)" fg:x="1093" fg:w="3"/><text x="88.1824%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="87.9324%" y="725" width="0.2414%" height="15" fill="rgb(233,184,1)" fg:x="1093" fg:w="3"/><text x="88.1824%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="87.9324%" y="709" width="0.2414%" height="15" fill="rgb(240,59,32)" fg:x="1093" fg:w="3"/><text x="88.1824%" y="719.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="88.0933%" y="693" width="0.0805%" height="15" fill="rgb(249,163,0)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.0933%" y="677" width="0.0805%" height="15" fill="rgb(249,220,13)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0933%" y="661" width="0.0805%" height="15" fill="rgb(235,127,52)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0933%" y="645" width="0.0805%" height="15" fill="rgb(229,172,26)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0933%" y="629" width="0.0805%" height="15" fill="rgb(217,37,29)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0933%" y="613" width="0.0805%" height="15" fill="rgb(208,66,47)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.0933%" y="597" width="0.0805%" height="15" fill="rgb(221,99,19)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.0933%" y="581" width="0.0805%" height="15" fill="rgb(214,149,49)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.0933%" y="565" width="0.0805%" height="15" fill="rgb(229,91,37)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.0933%" y="549" width="0.0805%" height="15" fill="rgb(207,159,48)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.0933%" y="533" width="0.0805%" height="15" fill="rgb(209,125,46)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.0933%" y="517" width="0.0805%" height="15" fill="rgb(211,188,18)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.0933%" y="501" width="0.0805%" height="15" fill="rgb(207,203,34)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.0933%" y="485" width="0.0805%" height="15" fill="rgb(245,182,16)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.0933%" y="469" width="0.0805%" height="15" fill="rgb(210,66,30)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.0933%" y="453" width="0.0805%" height="15" fill="rgb(230,110,14)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.0933%" y="437" width="0.0805%" height="15" fill="rgb(242,198,32)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.0933%" y="421" width="0.0805%" height="15" fill="rgb(213,45,23)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.0933%" y="405" width="0.0805%" height="15" fill="rgb(205,76,9)" fg:x="1095" fg:w="1"/><text x="88.3433%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Occupying&gt;&gt; (1 samples, 0.08%)</title><rect x="88.1738%" y="741" width="0.0805%" height="15" fill="rgb(250,200,25)" fg:x="1096" fg:w="1"/><text x="88.4238%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2542%" y="661" width="0.0805%" height="15" fill="rgb(221,161,23)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2542%" y="645" width="0.0805%" height="15" fill="rgb(226,135,48)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2542%" y="629" width="0.0805%" height="15" fill="rgb(228,33,6)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2542%" y="613" width="0.0805%" height="15" fill="rgb(237,224,9)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.2542%" y="597" width="0.0805%" height="15" fill="rgb(251,61,40)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.2542%" y="581" width="0.0805%" height="15" fill="rgb(220,222,2)" fg:x="1097" fg:w="1"/><text x="88.5042%" y="591.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (57 samples, 4.59%)</title><rect x="83.8294%" y="789" width="4.5857%" height="15" fill="rgb(238,4,8)" fg:x="1042" fg:w="57"/><text x="84.0794%" y="799.50">plugi..</text></g><g><title>plugins_core::build::Build::occupying (9 samples, 0.72%)</title><rect x="87.6911%" y="773" width="0.7241%" height="15" fill="rgb(240,153,3)" fg:x="1090" fg:w="9"/><text x="87.9411%" y="783.50"></text></g><g><title>plugins_core::tools::set_occupying (3 samples, 0.24%)</title><rect x="88.1738%" y="757" width="0.2414%" height="15" fill="rgb(245,29,24)" fg:x="1096" fg:w="3"/><text x="88.4238%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="88.2542%" y="741" width="0.1609%" height="15" fill="rgb(231,220,37)" fg:x="1097" fg:w="2"/><text x="88.5042%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.2542%" y="725" width="0.1609%" height="15" fill="rgb(245,33,10)" fg:x="1097" fg:w="2"/><text x="88.5042%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.2542%" y="709" width="0.1609%" height="15" fill="rgb(220,227,43)" fg:x="1097" fg:w="2"/><text x="88.5042%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.2542%" y="693" width="0.1609%" height="15" fill="rgb(215,183,54)" fg:x="1097" fg:w="2"/><text x="88.5042%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.2542%" y="677" width="0.1609%" height="15" fill="rgb(242,80,26)" fg:x="1097" fg:w="2"/><text x="88.5042%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3347%" y="661" width="0.0805%" height="15" fill="rgb(206,172,49)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3347%" y="645" width="0.0805%" height="15" fill="rgb(249,0,10)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="88.3347%" y="629" width="0.0805%" height="15" fill="rgb(246,171,19)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3347%" y="613" width="0.0805%" height="15" fill="rgb(236,25,43)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="88.3347%" y="597" width="0.0805%" height="15" fill="rgb(225,146,20)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="88.3347%" y="581" width="0.0805%" height="15" fill="rgb(243,50,39)" fg:x="1098" fg:w="1"/><text x="88.5847%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.4151%" y="725" width="0.0805%" height="15" fill="rgb(239,153,27)" fg:x="1099" fg:w="1"/><text x="88.6651%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="88.4151%" y="741" width="0.1609%" height="15" fill="rgb(208,164,31)" fg:x="1099" fg:w="2"/><text x="88.6651%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="88.4956%" y="725" width="0.0805%" height="15" fill="rgb(231,32,38)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="88.4956%" y="709" width="0.0805%" height="15" fill="rgb(247,158,12)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4956%" y="693" width="0.0805%" height="15" fill="rgb(254,126,16)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4956%" y="677" width="0.0805%" height="15" fill="rgb(246,12,32)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4956%" y="661" width="0.0805%" height="15" fill="rgb(245,190,44)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4956%" y="645" width="0.0805%" height="15" fill="rgb(253,148,49)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.4956%" y="629" width="0.0805%" height="15" fill="rgb(232,193,44)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.4956%" y="613" width="0.0805%" height="15" fill="rgb(212,67,50)" fg:x="1100" fg:w="1"/><text x="88.7456%" y="623.50"></text></g><g><title>engine::identifiers::model::fetch_add_one (1 samples, 0.08%)</title><rect x="88.5760%" y="741" width="0.0805%" height="15" fill="rgb(235,109,24)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="88.5760%" y="725" width="0.0805%" height="15" fill="rgb(242,228,23)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="735.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="88.5760%" y="709" width="0.0805%" height="15" fill="rgb(232,48,19)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="88.5760%" y="693" width="0.0805%" height="15" fill="rgb(221,167,25)" fg:x="1101" fg:w="1"/><text x="88.8260%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::make (4 samples, 0.32%)</title><rect x="88.4151%" y="789" width="0.3218%" height="15" fill="rgb(220,29,38)" fg:x="1099" fg:w="4"/><text x="88.6651%" y="799.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="88.4151%" y="773" width="0.3218%" height="15" fill="rgb(245,95,26)" fg:x="1099" fg:w="4"/><text x="88.6651%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="88.4151%" y="757" width="0.3218%" height="15" fill="rgb(227,189,38)" fg:x="1099" fg:w="4"/><text x="88.6651%" y="767.50"></text></g><g><title>engine::session::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="88.6565%" y="741" width="0.0805%" height="15" fill="rgb(231,212,22)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityGid as engine::session::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="88.6565%" y="725" width="0.0805%" height="15" fill="rgb(246,25,46)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.6565%" y="709" width="0.0805%" height="15" fill="rgb(218,90,32)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="719.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="88.6565%" y="693" width="0.0805%" height="15" fill="rgb(207,89,34)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.6565%" y="677" width="0.0805%" height="15" fill="rgb(222,30,54)" fg:x="1102" fg:w="1"/><text x="88.9065%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="88.7369%" y="773" width="0.1609%" height="15" fill="rgb(224,229,32)" fg:x="1103" fg:w="2"/><text x="88.9869%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="88.8174%" y="757" width="0.0805%" height="15" fill="rgb(209,188,44)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="88.8174%" y="741" width="0.0805%" height="15" fill="rgb(215,174,23)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="88.8174%" y="725" width="0.0805%" height="15" fill="rgb(242,104,18)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="88.8174%" y="709" width="0.0805%" height="15" fill="rgb(240,173,53)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.8174%" y="693" width="0.0805%" height="15" fill="rgb(240,105,45)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.8174%" y="677" width="0.0805%" height="15" fill="rgb(252,164,29)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="88.8174%" y="661" width="0.0805%" height="15" fill="rgb(217,17,6)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="88.8174%" y="645" width="0.0805%" height="15" fill="rgb(245,27,23)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="88.8174%" y="629" width="0.0805%" height="15" fill="rgb(239,73,33)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="639.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="88.8174%" y="613" width="0.0805%" height="15" fill="rgb(209,140,21)" fg:x="1104" fg:w="1"/><text x="89.0674%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="88.9783%" y="677" width="0.0805%" height="15" fill="rgb(206,36,53)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9783%" y="661" width="0.0805%" height="15" fill="rgb(238,134,8)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="88.9783%" y="645" width="0.0805%" height="15" fill="rgb(209,3,20)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="88.9783%" y="629" width="0.0805%" height="15" fill="rgb(208,101,32)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="88.9783%" y="613" width="0.0805%" height="15" fill="rgb(253,56,38)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="88.9783%" y="597" width="0.0805%" height="15" fill="rgb(209,85,49)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.9783%" y="581" width="0.0805%" height="15" fill="rgb(234,177,21)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="88.9783%" y="565" width="0.0805%" height="15" fill="rgb(250,4,6)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="88.9783%" y="549" width="0.0805%" height="15" fill="rgb(240,153,10)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="88.9783%" y="533" width="0.0805%" height="15" fill="rgb(205,136,51)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="88.9783%" y="517" width="0.0805%" height="15" fill="rgb(245,165,50)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="88.9783%" y="501" width="0.0805%" height="15" fill="rgb(211,28,10)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="88.9783%" y="485" width="0.0805%" height="15" fill="rgb(218,155,54)" fg:x="1106" fg:w="1"/><text x="89.2283%" y="495.50"></text></g><g><title>plugins_core::build::BuildSurroundings::new_in_session (5 samples, 0.40%)</title><rect x="88.7369%" y="789" width="0.4023%" height="15" fill="rgb(254,214,30)" fg:x="1103" fg:w="5"/><text x="88.9869%" y="799.50"></text></g><g><title>plugins_core::build::Build::new_world (3 samples, 0.24%)</title><rect x="88.8978%" y="773" width="0.2414%" height="15" fill="rgb(248,200,10)" fg:x="1105" fg:w="3"/><text x="89.1478%" y="783.50"></text></g><g><title>kernel::model::EntityPtr::new (2 samples, 0.16%)</title><rect x="88.9783%" y="757" width="0.1609%" height="15" fill="rgb(238,219,45)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="88.9783%" y="741" width="0.1609%" height="15" fill="rgb(227,35,34)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="88.9783%" y="725" width="0.1609%" height="15" fill="rgb(214,187,37)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="88.9783%" y="709" width="0.1609%" height="15" fill="rgb(247,164,44)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="88.9783%" y="693" width="0.1609%" height="15" fill="rgb(238,198,10)" fg:x="1106" fg:w="2"/><text x="89.2283%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0587%" y="677" width="0.0805%" height="15" fill="rgb(213,69,8)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0587%" y="661" width="0.0805%" height="15" fill="rgb(222,82,16)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="89.0587%" y="645" width="0.0805%" height="15" fill="rgb(205,172,30)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0587%" y="629" width="0.0805%" height="15" fill="rgb(227,39,8)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="89.0587%" y="613" width="0.0805%" height="15" fill="rgb(249,10,19)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="89.0587%" y="597" width="0.0805%" height="15" fill="rgb(205,158,53)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.0587%" y="581" width="0.0805%" height="15" fill="rgb(237,229,35)" fg:x="1107" fg:w="1"/><text x="89.3087%" y="591.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (97 samples, 7.80%)</title><rect x="81.4159%" y="805" width="7.8037%" height="15" fill="rgb(238,129,14)" fg:x="1012" fg:w="97"/><text x="81.6659%" y="815.50">&lt;tests::Hol..</text></g><g><title>plugins_core::build::BuildSurroundings::route (1 samples, 0.08%)</title><rect x="89.1392%" y="789" width="0.0805%" height="15" fill="rgb(218,217,40)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.1392%" y="773" width="0.0805%" height="15" fill="rgb(221,187,9)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.1392%" y="757" width="0.0805%" height="15" fill="rgb(214,108,19)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.1392%" y="741" width="0.0805%" height="15" fill="rgb(216,86,23)" fg:x="1108" fg:w="1"/><text x="89.3892%" y="751.50"></text></g><g><title>engine::session::should_force_rollback (1 samples, 0.08%)</title><rect x="89.2196%" y="789" width="0.0805%" height="15" fill="rgb(209,116,23)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="799.50"></text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="89.2196%" y="773" width="0.0805%" height="15" fill="rgb(222,185,40)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="783.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="89.2196%" y="757" width="0.0805%" height="15" fill="rgb(238,150,2)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="767.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="89.2196%" y="741" width="0.0805%" height="15" fill="rgb(229,132,47)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="751.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="89.2196%" y="725" width="0.0805%" height="15" fill="rgb(231,7,23)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="735.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="89.2196%" y="709" width="0.0805%" height="15" fill="rgb(235,12,37)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.2196%" y="693" width="0.0805%" height="15" fill="rgb(247,170,51)" fg:x="1109" fg:w="1"/><text x="89.4696%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (1 samples, 0.08%)</title><rect x="89.3001%" y="757" width="0.0805%" height="15" fill="rgb(210,62,49)" fg:x="1110" fg:w="1"/><text x="89.5501%" y="767.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (2 samples, 0.16%)</title><rect x="89.3001%" y="773" width="0.1609%" height="15" fill="rgb(248,30,8)" fg:x="1110" fg:w="2"/><text x="89.5501%" y="783.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (1 samples, 0.08%)</title><rect x="89.3805%" y="757" width="0.0805%" height="15" fill="rgb(252,11,2)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="89.3805%" y="741" width="0.0805%" height="15" fill="rgb(249,65,4)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="89.3805%" y="725" width="0.0805%" height="15" fill="rgb(217,219,7)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3805%" y="709" width="0.0805%" height="15" fill="rgb(222,186,36)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="89.3805%" y="693" width="0.0805%" height="15" fill="rgb(247,184,5)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3805%" y="677" width="0.0805%" height="15" fill="rgb(221,108,7)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3805%" y="661" width="0.0805%" height="15" fill="rgb(209,208,22)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3805%" y="645" width="0.0805%" height="15" fill="rgb(247,106,21)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3805%" y="629" width="0.0805%" height="15" fill="rgb(223,2,44)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3805%" y="613" width="0.0805%" height="15" fill="rgb(208,190,12)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3805%" y="597" width="0.0805%" height="15" fill="rgb(250,221,0)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3805%" y="581" width="0.0805%" height="15" fill="rgb(212,210,16)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3805%" y="565" width="0.0805%" height="15" fill="rgb(212,224,21)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3805%" y="549" width="0.0805%" height="15" fill="rgb(206,186,54)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3805%" y="533" width="0.0805%" height="15" fill="rgb(213,211,25)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3805%" y="517" width="0.0805%" height="15" fill="rgb(243,78,36)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3805%" y="501" width="0.0805%" height="15" fill="rgb(236,105,24)" fg:x="1111" fg:w="1"/><text x="89.6305%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6219%" y="725" width="0.0805%" height="15" fill="rgb(223,46,45)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.6219%" y="709" width="0.0805%" height="15" fill="rgb(249,65,35)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.6219%" y="693" width="0.0805%" height="15" fill="rgb(226,122,19)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.6219%" y="677" width="0.0805%" height="15" fill="rgb(253,17,37)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.6219%" y="661" width="0.0805%" height="15" fill="rgb(223,138,24)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6219%" y="645" width="0.0805%" height="15" fill="rgb(227,89,20)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="89.6219%" y="629" width="0.0805%" height="15" fill="rgb(239,140,41)" fg:x="1114" fg:w="1"/><text x="89.8719%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="89.7023%" y="693" width="0.0805%" height="15" fill="rgb(237,29,24)" fg:x="1115" fg:w="1"/><text x="89.9523%" y="703.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (2 samples, 0.16%)</title><rect x="89.7023%" y="709" width="0.1609%" height="15" fill="rgb(212,123,27)" fg:x="1115" fg:w="2"/><text x="89.9523%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="89.7828%" y="693" width="0.0805%" height="15" fill="rgb(236,173,10)" fg:x="1116" fg:w="1"/><text x="90.0328%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="89.8632%" y="693" width="0.1609%" height="15" fill="rgb(244,17,3)" fg:x="1117" fg:w="2"/><text x="90.1132%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="89.8632%" y="677" width="0.1609%" height="15" fill="rgb(220,73,21)" fg:x="1117" fg:w="2"/><text x="90.1132%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="89.9437%" y="661" width="0.0805%" height="15" fill="rgb(220,187,17)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="89.9437%" y="645" width="0.0805%" height="15" fill="rgb(236,64,13)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="89.9437%" y="629" width="0.0805%" height="15" fill="rgb(214,111,25)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="89.9437%" y="613" width="0.0805%" height="15" fill="rgb(251,123,0)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="89.9437%" y="597" width="0.0805%" height="15" fill="rgb(210,8,32)" fg:x="1118" fg:w="1"/><text x="90.1937%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="90.1046%" y="677" width="0.0805%" height="15" fill="rgb(221,27,44)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.1046%" y="661" width="0.0805%" height="15" fill="rgb(233,207,54)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1046%" y="645" width="0.0805%" height="15" fill="rgb(219,217,1)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1046%" y="629" width="0.0805%" height="15" fill="rgb(236,150,15)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.1046%" y="613" width="0.0805%" height="15" fill="rgb(244,119,54)" fg:x="1120" fg:w="1"/><text x="90.3546%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="90.1850%" y="661" width="0.0805%" height="15" fill="rgb(218,116,36)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.1850%" y="645" width="0.0805%" height="15" fill="rgb(215,42,32)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.1850%" y="629" width="0.0805%" height="15" fill="rgb(254,87,2)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.1850%" y="613" width="0.0805%" height="15" fill="rgb(241,195,45)" fg:x="1121" fg:w="1"/><text x="90.4350%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="90.2655%" y="629" width="0.1609%" height="15" fill="rgb(252,11,14)" fg:x="1122" fg:w="2"/><text x="90.5155%" y="639.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="90.2655%" y="613" width="0.1609%" height="15" fill="rgb(233,199,43)" fg:x="1122" fg:w="2"/><text x="90.5155%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="90.2655%" y="597" width="0.1609%" height="15" fill="rgb(243,170,27)" fg:x="1122" fg:w="2"/><text x="90.5155%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="90.3459%" y="581" width="0.0805%" height="15" fill="rgb(236,178,54)" fg:x="1123" fg:w="1"/><text x="90.5959%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="90.1850%" y="677" width="0.3218%" height="15" fill="rgb(230,38,12)" fg:x="1121" fg:w="4"/><text x="90.4350%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="90.2655%" y="661" width="0.2414%" height="15" fill="rgb(241,44,47)" fg:x="1122" fg:w="3"/><text x="90.5155%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="90.2655%" y="645" width="0.2414%" height="15" fill="rgb(218,99,12)" fg:x="1122" fg:w="3"/><text x="90.5155%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="90.4264%" y="629" width="0.0805%" height="15" fill="rgb(211,48,36)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.4264%" y="613" width="0.0805%" height="15" fill="rgb(220,81,29)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.4264%" y="597" width="0.0805%" height="15" fill="rgb(232,121,54)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.4264%" y="581" width="0.0805%" height="15" fill="rgb(236,227,37)" fg:x="1124" fg:w="1"/><text x="90.6764%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.88%)</title><rect x="89.7023%" y="725" width="0.8850%" height="15" fill="rgb(207,43,26)" fg:x="1115" fg:w="11"/><text x="89.9523%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.72%)</title><rect x="89.8632%" y="709" width="0.7241%" height="15" fill="rgb(224,163,34)" fg:x="1117" fg:w="9"/><text x="90.1132%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="90.0241%" y="693" width="0.5632%" height="15" fill="rgb(228,127,11)" fg:x="1119" fg:w="7"/><text x="90.2741%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="90.5068%" y="677" width="0.0805%" height="15" fill="rgb(215,32,51)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="90.5068%" y="661" width="0.0805%" height="15" fill="rgb(206,180,37)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="90.5068%" y="645" width="0.0805%" height="15" fill="rgb(245,217,39)" fg:x="1125" fg:w="1"/><text x="90.7568%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="90.5873%" y="693" width="0.0805%" height="15" fill="rgb(237,179,18)" fg:x="1126" fg:w="1"/><text x="90.8373%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="90.5873%" y="677" width="0.0805%" height="15" fill="rgb(248,177,3)" fg:x="1126" fg:w="1"/><text x="90.8373%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="90.5873%" y="661" width="0.0805%" height="15" fill="rgb(208,31,45)" fg:x="1126" fg:w="1"/><text x="90.8373%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="677" width="0.0805%" height="15" fill="rgb(231,16,43)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="661" width="0.0805%" height="15" fill="rgb(246,12,20)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="645" width="0.0805%" height="15" fill="rgb(214,40,41)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="629" width="0.0805%" height="15" fill="rgb(225,183,42)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="613" width="0.0805%" height="15" fill="rgb(229,88,50)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="90.6677%" y="597" width="0.0805%" height="15" fill="rgb(247,34,33)" fg:x="1127" fg:w="1"/><text x="90.9177%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.7482%" y="677" width="0.0805%" height="15" fill="rgb(246,163,52)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7482%" y="661" width="0.0805%" height="15" fill="rgb(251,13,27)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="90.7482%" y="645" width="0.0805%" height="15" fill="rgb(218,127,46)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="90.7482%" y="629" width="0.0805%" height="15" fill="rgb(215,155,29)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="90.7482%" y="613" width="0.0805%" height="15" fill="rgb(251,180,13)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="90.7482%" y="597" width="0.0805%" height="15" fill="rgb(246,215,19)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7482%" y="581" width="0.0805%" height="15" fill="rgb(210,47,28)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="90.7482%" y="565" width="0.0805%" height="15" fill="rgb(231,175,40)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="90.7482%" y="549" width="0.0805%" height="15" fill="rgb(207,138,24)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="90.7482%" y="533" width="0.0805%" height="15" fill="rgb(216,44,38)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="90.7482%" y="517" width="0.0805%" height="15" fill="rgb(206,81,53)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="90.7482%" y="501" width="0.0805%" height="15" fill="rgb(246,139,21)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.7482%" y="485" width="0.0805%" height="15" fill="rgb(212,163,26)" fg:x="1128" fg:w="1"/><text x="90.9982%" y="495.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (4 samples, 0.32%)</title><rect x="90.5873%" y="709" width="0.3218%" height="15" fill="rgb(223,82,35)" fg:x="1126" fg:w="4"/><text x="90.8373%" y="719.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="90.6677%" y="693" width="0.2414%" height="15" fill="rgb(224,76,13)" fg:x="1127" fg:w="3"/><text x="90.9177%" y="703.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.8286%" y="677" width="0.0805%" height="15" fill="rgb(240,2,40)" fg:x="1129" fg:w="1"/><text x="91.0786%" y="687.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="90.8286%" y="661" width="0.0805%" height="15" fill="rgb(232,188,36)" fg:x="1129" fg:w="1"/><text x="91.0786%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="90.8286%" y="645" width="0.0805%" height="15" fill="rgb(249,34,46)" fg:x="1129" fg:w="1"/><text x="91.0786%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0700%" y="629" width="0.0805%" height="15" fill="rgb(226,99,19)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.0700%" y="613" width="0.0805%" height="15" fill="rgb(207,78,52)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0700%" y="597" width="0.0805%" height="15" fill="rgb(241,119,8)" fg:x="1132" fg:w="1"/><text x="91.3200%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.3113%" y="597" width="0.0805%" height="15" fill="rgb(238,31,9)" fg:x="1135" fg:w="1"/><text x="91.5613%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.48%)</title><rect x="91.0700%" y="661" width="0.4827%" height="15" fill="rgb(223,165,6)" fg:x="1132" fg:w="6"/><text x="91.3200%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="91.0700%" y="645" width="0.4827%" height="15" fill="rgb(227,228,21)" fg:x="1132" fg:w="6"/><text x="91.3200%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.40%)</title><rect x="91.1504%" y="629" width="0.4023%" height="15" fill="rgb(206,188,51)" fg:x="1133" fg:w="5"/><text x="91.4004%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="91.1504%" y="613" width="0.4023%" height="15" fill="rgb(225,207,23)" fg:x="1133" fg:w="5"/><text x="91.4004%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3918%" y="597" width="0.1609%" height="15" fill="rgb(232,197,54)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.3918%" y="581" width="0.1609%" height="15" fill="rgb(229,149,21)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3918%" y="565" width="0.1609%" height="15" fill="rgb(209,197,1)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.3918%" y="549" width="0.1609%" height="15" fill="rgb(227,82,17)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="91.3918%" y="533" width="0.1609%" height="15" fill="rgb(237,201,43)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="91.3918%" y="517" width="0.1609%" height="15" fill="rgb(221,91,37)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.3918%" y="501" width="0.1609%" height="15" fill="rgb(239,35,7)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="91.3918%" y="485" width="0.1609%" height="15" fill="rgb(234,145,45)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="91.3918%" y="469" width="0.1609%" height="15" fill="rgb(214,151,47)" fg:x="1136" fg:w="2"/><text x="91.6418%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (9 samples, 0.72%)</title><rect x="90.9091%" y="709" width="0.7241%" height="15" fill="rgb(248,62,54)" fg:x="1130" fg:w="9"/><text x="91.1591%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.72%)</title><rect x="90.9091%" y="693" width="0.7241%" height="15" fill="rgb(236,99,21)" fg:x="1130" fg:w="9"/><text x="91.1591%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.72%)</title><rect x="90.9091%" y="677" width="0.7241%" height="15" fill="rgb(223,94,43)" fg:x="1130" fg:w="9"/><text x="91.1591%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5527%" y="661" width="0.0805%" height="15" fill="rgb(214,66,6)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="91.5527%" y="645" width="0.0805%" height="15" fill="rgb(231,152,46)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="91.5527%" y="629" width="0.0805%" height="15" fill="rgb(254,0,48)" fg:x="1138" fg:w="1"/><text x="91.8027%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="91.8745%" y="485" width="0.1609%" height="15" fill="rgb(225,136,42)" fg:x="1142" fg:w="2"/><text x="92.1245%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="91.8745%" y="469" width="0.1609%" height="15" fill="rgb(231,194,28)" fg:x="1142" fg:w="2"/><text x="92.1245%" y="479.50"></text></g><g><title>engine::session::Session::close (36 samples, 2.90%)</title><rect x="89.2196%" y="805" width="2.8962%" height="15" fill="rgb(248,141,22)" fg:x="1109" fg:w="36"/><text x="89.4696%" y="815.50">en..</text></g><g><title>engine::session::state::State::close (35 samples, 2.82%)</title><rect x="89.3001%" y="789" width="2.8158%" height="15" fill="rgb(222,133,1)" fg:x="1110" fg:w="35"/><text x="89.5501%" y="799.50">en..</text></g><g><title>engine::session::state::State::flush_entities (33 samples, 2.65%)</title><rect x="89.4610%" y="773" width="2.6549%" height="15" fill="rgb(222,50,8)" fg:x="1112" fg:w="33"/><text x="89.7110%" y="783.50">en..</text></g><g><title>engine::session::internal::Entities::foreach_entity_mut (33 samples, 2.65%)</title><rect x="89.4610%" y="757" width="2.6549%" height="15" fill="rgb(215,67,27)" fg:x="1112" fg:w="33"/><text x="89.7110%" y="767.50">en..</text></g><g><title>engine::session::state::SavesEntities::check_for_changes (33 samples, 2.65%)</title><rect x="89.4610%" y="741" width="2.6549%" height="15" fill="rgb(220,102,37)" fg:x="1112" fg:w="33"/><text x="89.7110%" y="751.50">en..</text></g><g><title>kernel::model::any_entity_changes (19 samples, 1.53%)</title><rect x="90.5873%" y="725" width="1.5286%" height="15" fill="rgb(222,64,25)" fg:x="1126" fg:w="19"/><text x="90.8373%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="91.6331%" y="709" width="0.4827%" height="15" fill="rgb(215,40,16)" fg:x="1139" fg:w="6"/><text x="91.8831%" y="719.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="91.6331%" y="693" width="0.4827%" height="15" fill="rgb(252,171,3)" fg:x="1139" fg:w="6"/><text x="91.8831%" y="703.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="91.6331%" y="677" width="0.4827%" height="15" fill="rgb(252,199,51)" fg:x="1139" fg:w="6"/><text x="91.8831%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="91.6331%" y="661" width="0.4827%" height="15" fill="rgb(244,42,10)" fg:x="1139" fg:w="6"/><text x="91.8831%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.7136%" y="645" width="0.4023%" height="15" fill="rgb(243,169,37)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.7136%" y="629" width="0.4023%" height="15" fill="rgb(241,140,9)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.7136%" y="613" width="0.4023%" height="15" fill="rgb(241,66,40)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.7136%" y="597" width="0.4023%" height="15" fill="rgb(220,50,41)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="91.7136%" y="581" width="0.4023%" height="15" fill="rgb(214,104,9)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="91.7136%" y="565" width="0.4023%" height="15" fill="rgb(241,227,25)" fg:x="1140" fg:w="5"/><text x="91.9636%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="91.7940%" y="549" width="0.3218%" height="15" fill="rgb(248,37,46)" fg:x="1141" fg:w="4"/><text x="92.0440%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.8745%" y="533" width="0.2414%" height="15" fill="rgb(243,52,43)" fg:x="1142" fg:w="3"/><text x="92.1245%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="91.8745%" y="517" width="0.2414%" height="15" fill="rgb(232,122,17)" fg:x="1142" fg:w="3"/><text x="92.1245%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="91.8745%" y="501" width="0.2414%" height="15" fill="rgb(242,15,36)" fg:x="1142" fg:w="3"/><text x="92.1245%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.0354%" y="485" width="0.0805%" height="15" fill="rgb(232,63,30)" fg:x="1144" fg:w="1"/><text x="92.2854%" y="495.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (1 samples, 0.08%)</title><rect x="92.1963%" y="597" width="0.0805%" height="15" fill="rgb(237,86,45)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="607.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (1 samples, 0.08%)</title><rect x="92.1963%" y="581" width="0.0805%" height="15" fill="rgb(245,123,47)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="92.1963%" y="565" width="0.0805%" height="15" fill="rgb(252,85,3)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.1963%" y="549" width="0.0805%" height="15" fill="rgb(249,171,16)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.1963%" y="533" width="0.0805%" height="15" fill="rgb(225,146,54)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1963%" y="517" width="0.0805%" height="15" fill="rgb(213,216,54)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1963%" y="501" width="0.0805%" height="15" fill="rgb(236,60,6)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.1963%" y="485" width="0.0805%" height="15" fill="rgb(227,93,24)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1963%" y="469" width="0.0805%" height="15" fill="rgb(219,41,42)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.1963%" y="453" width="0.0805%" height="15" fill="rgb(229,52,32)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.1963%" y="437" width="0.0805%" height="15" fill="rgb(221,33,40)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1963%" y="421" width="0.0805%" height="15" fill="rgb(216,109,23)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="92.1963%" y="405" width="0.0805%" height="15" fill="rgb(214,39,24)" fg:x="1146" fg:w="1"/><text x="92.4463%" y="415.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="92.2767%" y="581" width="0.0805%" height="15" fill="rgb(205,36,6)" fg:x="1147" fg:w="1"/><text x="92.5267%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="92.2767%" y="565" width="0.0805%" height="15" fill="rgb(222,146,34)" fg:x="1147" fg:w="1"/><text x="92.5267%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="92.2767%" y="549" width="0.0805%" height="15" fill="rgb(214,72,53)" fg:x="1147" fg:w="1"/><text x="92.5267%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (3 samples, 0.24%)</title><rect x="92.1963%" y="645" width="0.2414%" height="15" fill="rgb(250,157,2)" fg:x="1146" fg:w="3"/><text x="92.4463%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (3 samples, 0.24%)</title><rect x="92.1963%" y="629" width="0.2414%" height="15" fill="rgb(248,5,23)" fg:x="1146" fg:w="3"/><text x="92.4463%" y="639.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (3 samples, 0.24%)</title><rect x="92.1963%" y="613" width="0.2414%" height="15" fill="rgb(207,146,36)" fg:x="1146" fg:w="3"/><text x="92.4463%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (2 samples, 0.16%)</title><rect x="92.2767%" y="597" width="0.1609%" height="15" fill="rgb(205,184,43)" fg:x="1147" fg:w="2"/><text x="92.5267%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3572%" y="581" width="0.0805%" height="15" fill="rgb(251,150,46)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3572%" y="565" width="0.0805%" height="15" fill="rgb(227,224,12)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.3572%" y="549" width="0.0805%" height="15" fill="rgb(215,26,26)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.3572%" y="533" width="0.0805%" height="15" fill="rgb(238,180,42)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="543.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="92.3572%" y="517" width="0.0805%" height="15" fill="rgb(218,148,48)" fg:x="1148" fg:w="1"/><text x="92.6072%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4377%" y="645" width="0.0805%" height="15" fill="rgb(252,14,36)" fg:x="1149" fg:w="1"/><text x="92.6877%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4377%" y="629" width="0.0805%" height="15" fill="rgb(224,35,37)" fg:x="1149" fg:w="1"/><text x="92.6877%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="92.4377%" y="613" width="0.0805%" height="15" fill="rgb(245,177,29)" fg:x="1149" fg:w="1"/><text x="92.6877%" y="623.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (5 samples, 0.40%)</title><rect x="92.1963%" y="693" width="0.4023%" height="15" fill="rgb(221,149,34)" fg:x="1146" fg:w="5"/><text x="92.4463%" y="703.50"></text></g><g><title>kernel::model::entry::Entry::scope (5 samples, 0.40%)</title><rect x="92.1963%" y="677" width="0.4023%" height="15" fill="rgb(239,115,36)" fg:x="1146" fg:w="5"/><text x="92.4463%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="92.1963%" y="661" width="0.4023%" height="15" fill="rgb(226,196,40)" fg:x="1146" fg:w="5"/><text x="92.4463%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5181%" y="645" width="0.0805%" height="15" fill="rgb(209,206,26)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.5181%" y="629" width="0.0805%" height="15" fill="rgb(225,13,33)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.5181%" y="613" width="0.0805%" height="15" fill="rgb(244,126,22)" fg:x="1150" fg:w="1"/><text x="92.7681%" y="623.50"></text></g><g><title>&lt;engine::session::MakeSurroundings as core::convert::TryInto&lt;kernel::surround::Surroundings&gt;&gt;::try_into (6 samples, 0.48%)</title><rect x="92.1963%" y="709" width="0.4827%" height="15" fill="rgb(248,213,25)" fg:x="1146" fg:w="6"/><text x="92.4463%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="92.5986%" y="693" width="0.0805%" height="15" fill="rgb(222,94,36)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="92.5986%" y="677" width="0.0805%" height="15" fill="rgb(212,114,20)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.5986%" y="661" width="0.0805%" height="15" fill="rgb(213,157,26)" fg:x="1151" fg:w="1"/><text x="92.8486%" y="671.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.6790%" y="709" width="0.0805%" height="15" fill="rgb(211,130,1)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.6790%" y="693" width="0.0805%" height="15" fill="rgb(212,83,53)" fg:x="1152" fg:w="1"/><text x="92.9290%" y="703.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (1 samples, 0.08%)</title><rect x="92.7595%" y="565" width="0.0805%" height="15" fill="rgb(238,129,10)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="92.7595%" y="549" width="0.0805%" height="15" fill="rgb(213,76,2)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="92.7595%" y="533" width="0.0805%" height="15" fill="rgb(220,189,22)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="92.7595%" y="517" width="0.0805%" height="15" fill="rgb(250,155,31)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7595%" y="501" width="0.0805%" height="15" fill="rgb(218,184,22)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7595%" y="485" width="0.0805%" height="15" fill="rgb(247,117,4)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7595%" y="469" width="0.0805%" height="15" fill="rgb(253,185,37)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7595%" y="453" width="0.0805%" height="15" fill="rgb(226,36,44)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="92.7595%" y="437" width="0.0805%" height="15" fill="rgb(224,7,24)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7595%" y="421" width="0.0805%" height="15" fill="rgb(239,201,0)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="92.7595%" y="405" width="0.0805%" height="15" fill="rgb(218,56,33)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="92.7595%" y="389" width="0.0805%" height="15" fill="rgb(210,187,29)" fg:x="1153" fg:w="1"/><text x="93.0095%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="92.8399%" y="533" width="0.0805%" height="15" fill="rgb(206,158,49)" fg:x="1154" fg:w="1"/><text x="93.0899%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="92.9204%" y="517" width="0.2414%" height="15" fill="rgb(234,36,5)" fg:x="1155" fg:w="3"/><text x="93.1704%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="93.0008%" y="501" width="0.1609%" height="15" fill="rgb(239,79,15)" fg:x="1156" fg:w="2"/><text x="93.2508%" y="511.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="93.0008%" y="485" width="0.1609%" height="15" fill="rgb(240,136,17)" fg:x="1156" fg:w="2"/><text x="93.2508%" y="495.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="469" width="0.0805%" height="15" fill="rgb(227,83,12)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2422%" y="453" width="0.0805%" height="15" fill="rgb(212,2,8)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="437" width="0.0805%" height="15" fill="rgb(219,144,5)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.2422%" y="421" width="0.0805%" height="15" fill="rgb(253,204,27)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="405" width="0.0805%" height="15" fill="rgb(228,188,17)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.2422%" y="389" width="0.0805%" height="15" fill="rgb(208,198,33)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.2422%" y="373" width="0.0805%" height="15" fill="rgb(249,153,19)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.2422%" y="357" width="0.0805%" height="15" fill="rgb(222,193,37)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.2422%" y="341" width="0.0805%" height="15" fill="rgb(215,168,16)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2422%" y="325" width="0.0805%" height="15" fill="rgb(238,69,36)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.2422%" y="309" width="0.0805%" height="15" fill="rgb(227,11,51)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.2422%" y="293" width="0.0805%" height="15" fill="rgb(214,204,5)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.2422%" y="277" width="0.0805%" height="15" fill="rgb(242,182,42)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.2422%" y="261" width="0.0805%" height="15" fill="rgb(212,208,46)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.2422%" y="245" width="0.0805%" height="15" fill="rgb(249,22,49)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.2422%" y="229" width="0.0805%" height="15" fill="rgb(226,130,52)" fg:x="1159" fg:w="1"/><text x="93.4922%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3226%" y="453" width="0.0805%" height="15" fill="rgb(209,156,10)" fg:x="1160" fg:w="1"/><text x="93.5726%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.4031%" y="325" width="0.0805%" height="15" fill="rgb(207,125,47)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.4031%" y="309" width="0.0805%" height="15" fill="rgb(221,117,28)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.4031%" y="293" width="0.0805%" height="15" fill="rgb(221,170,12)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4031%" y="277" width="0.0805%" height="15" fill="rgb(241,222,52)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4031%" y="261" width="0.0805%" height="15" fill="rgb(219,52,6)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4031%" y="245" width="0.0805%" height="15" fill="rgb(226,144,34)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4031%" y="229" width="0.0805%" height="15" fill="rgb(231,179,27)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.4031%" y="213" width="0.0805%" height="15" fill="rgb(211,178,51)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4031%" y="197" width="0.0805%" height="15" fill="rgb(233,141,5)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4031%" y="181" width="0.0805%" height="15" fill="rgb(214,10,9)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4031%" y="165" width="0.0805%" height="15" fill="rgb(209,0,1)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4031%" y="149" width="0.0805%" height="15" fill="rgb(207,82,30)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4031%" y="133" width="0.0805%" height="15" fill="rgb(224,214,13)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4031%" y="117" width="0.0805%" height="15" fill="rgb(237,84,33)" fg:x="1161" fg:w="1"/><text x="93.6531%" y="127.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="93.4031%" y="357" width="0.1609%" height="15" fill="rgb(231,25,9)" fg:x="1161" fg:w="2"/><text x="93.6531%" y="367.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="93.4031%" y="341" width="0.1609%" height="15" fill="rgb(207,51,8)" fg:x="1161" fg:w="2"/><text x="93.6531%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="93.4835%" y="325" width="0.0805%" height="15" fill="rgb(234,189,54)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="335.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.4835%" y="309" width="0.0805%" height="15" fill="rgb(214,188,52)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="319.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.4835%" y="293" width="0.0805%" height="15" fill="rgb(214,17,11)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4835%" y="277" width="0.0805%" height="15" fill="rgb(250,31,36)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4835%" y="261" width="0.0805%" height="15" fill="rgb(244,57,44)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4835%" y="245" width="0.0805%" height="15" fill="rgb(209,209,31)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="255.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4835%" y="229" width="0.0805%" height="15" fill="rgb(217,47,5)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.4835%" y="213" width="0.0805%" height="15" fill="rgb(214,78,42)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="223.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4835%" y="197" width="0.0805%" height="15" fill="rgb(226,15,23)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4835%" y="181" width="0.0805%" height="15" fill="rgb(230,171,7)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4835%" y="165" width="0.0805%" height="15" fill="rgb(229,71,9)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="93.4835%" y="149" width="0.0805%" height="15" fill="rgb(221,111,31)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="159.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.4835%" y="133" width="0.0805%" height="15" fill="rgb(237,86,50)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="143.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="93.4835%" y="117" width="0.0805%" height="15" fill="rgb(234,49,32)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="127.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.4835%" y="101" width="0.0805%" height="15" fill="rgb(225,144,27)" fg:x="1162" fg:w="1"/><text x="93.7335%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7249%" y="261" width="0.0805%" height="15" fill="rgb(225,209,36)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="271.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7249%" y="245" width="0.0805%" height="15" fill="rgb(218,109,14)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7249%" y="229" width="0.0805%" height="15" fill="rgb(238,186,42)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7249%" y="213" width="0.0805%" height="15" fill="rgb(236,143,10)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7249%" y="197" width="0.0805%" height="15" fill="rgb(205,147,7)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7249%" y="181" width="0.0805%" height="15" fill="rgb(245,224,0)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="93.7249%" y="165" width="0.0805%" height="15" fill="rgb(213,208,32)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="175.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.7249%" y="149" width="0.0805%" height="15" fill="rgb(208,212,4)" fg:x="1165" fg:w="1"/><text x="93.9749%" y="159.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (5 samples, 0.40%)</title><rect x="93.5640%" y="357" width="0.4023%" height="15" fill="rgb(236,143,49)" fg:x="1163" fg:w="5"/><text x="93.8140%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="93.5640%" y="341" width="0.4023%" height="15" fill="rgb(228,152,33)" fg:x="1163" fg:w="5"/><text x="93.8140%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="93.5640%" y="325" width="0.4023%" height="15" fill="rgb(236,132,39)" fg:x="1163" fg:w="5"/><text x="93.8140%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="93.7249%" y="309" width="0.2414%" height="15" fill="rgb(228,176,23)" fg:x="1165" fg:w="3"/><text x="93.9749%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.7249%" y="293" width="0.2414%" height="15" fill="rgb(229,34,18)" fg:x="1165" fg:w="3"/><text x="93.9749%" y="303.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (3 samples, 0.24%)</title><rect x="93.7249%" y="277" width="0.2414%" height="15" fill="rgb(244,81,37)" fg:x="1165" fg:w="3"/><text x="93.9749%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.8053%" y="261" width="0.1609%" height="15" fill="rgb(242,79,32)" fg:x="1166" fg:w="2"/><text x="94.0553%" y="271.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="93.8053%" y="245" width="0.1609%" height="15" fill="rgb(245,15,51)" fg:x="1166" fg:w="2"/><text x="94.0553%" y="255.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.9662%" y="357" width="0.0805%" height="15" fill="rgb(209,82,8)" fg:x="1168" fg:w="1"/><text x="94.2162%" y="367.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.9662%" y="341" width="0.0805%" height="15" fill="rgb(248,65,42)" fg:x="1168" fg:w="1"/><text x="94.2162%" y="351.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.9662%" y="325" width="0.0805%" height="15" fill="rgb(216,132,33)" fg:x="1168" fg:w="1"/><text x="94.2162%" y="335.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.45%)</title><rect x="92.9204%" y="533" width="1.4481%" height="15" fill="rgb(207,21,32)" fg:x="1155" fg:w="18"/><text x="93.1704%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (15 samples, 1.21%)</title><rect x="93.1617%" y="517" width="1.2068%" height="15" fill="rgb(247,27,22)" fg:x="1158" fg:w="15"/><text x="93.4117%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (15 samples, 1.21%)</title><rect x="93.1617%" y="501" width="1.2068%" height="15" fill="rgb(254,72,41)" fg:x="1158" fg:w="15"/><text x="93.4117%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (15 samples, 1.21%)</title><rect x="93.1617%" y="485" width="1.2068%" height="15" fill="rgb(250,6,31)" fg:x="1158" fg:w="15"/><text x="93.4117%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (13 samples, 1.05%)</title><rect x="93.3226%" y="469" width="1.0459%" height="15" fill="rgb(224,124,0)" fg:x="1160" fg:w="13"/><text x="93.5726%" y="479.50"></text></g><g><title>core::iter::adapters::try_process (12 samples, 0.97%)</title><rect x="93.4031%" y="453" width="0.9654%" height="15" fill="rgb(228,7,24)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (12 samples, 0.97%)</title><rect x="93.4031%" y="437" width="0.9654%" height="15" fill="rgb(250,202,22)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.97%)</title><rect x="93.4031%" y="421" width="0.9654%" height="15" fill="rgb(214,89,5)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (12 samples, 0.97%)</title><rect x="93.4031%" y="405" width="0.9654%" height="15" fill="rgb(228,82,34)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (12 samples, 0.97%)</title><rect x="93.4031%" y="389" width="0.9654%" height="15" fill="rgb(212,164,18)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="399.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (12 samples, 0.97%)</title><rect x="93.4031%" y="373" width="0.9654%" height="15" fill="rgb(210,75,6)" fg:x="1161" fg:w="12"/><text x="93.6531%" y="383.50"></text></g><g><title>engine::session::internal::EntityMap::add_entity (4 samples, 0.32%)</title><rect x="94.0467%" y="357" width="0.3218%" height="15" fill="rgb(251,11,45)" fg:x="1169" fg:w="4"/><text x="94.2967%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.32%)</title><rect x="94.0467%" y="341" width="0.3218%" height="15" fill="rgb(234,105,14)" fg:x="1169" fg:w="4"/><text x="94.2967%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.32%)</title><rect x="94.0467%" y="325" width="0.3218%" height="15" fill="rgb(220,123,16)" fg:x="1169" fg:w="4"/><text x="94.2967%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.32%)</title><rect x="94.0467%" y="309" width="0.3218%" height="15" fill="rgb(238,16,42)" fg:x="1169" fg:w="4"/><text x="94.2967%" y="319.50"></text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="94.0467%" y="293" width="0.3218%" height="15" fill="rgb(239,101,26)" fg:x="1169" fg:w="4"/><text x="94.2967%" y="303.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (1 samples, 0.08%)</title><rect x="94.3685%" y="517" width="0.0805%" height="15" fill="rgb(228,12,27)" fg:x="1173" fg:w="1"/><text x="94.6185%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4489%" y="501" width="0.0805%" height="15" fill="rgb(218,165,53)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4489%" y="485" width="0.0805%" height="15" fill="rgb(250,44,27)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4489%" y="469" width="0.0805%" height="15" fill="rgb(229,69,35)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4489%" y="453" width="0.0805%" height="15" fill="rgb(241,38,31)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4489%" y="437" width="0.0805%" height="15" fill="rgb(224,152,13)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4489%" y="421" width="0.0805%" height="15" fill="rgb(207,225,8)" fg:x="1174" fg:w="1"/><text x="94.6989%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="94.5294%" y="485" width="0.0805%" height="15" fill="rgb(222,135,50)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="94.5294%" y="469" width="0.0805%" height="15" fill="rgb(245,39,15)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="479.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.5294%" y="453" width="0.0805%" height="15" fill="rgb(233,22,17)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.5294%" y="437" width="0.0805%" height="15" fill="rgb(227,152,49)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.5294%" y="421" width="0.0805%" height="15" fill="rgb(233,162,45)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.5294%" y="405" width="0.0805%" height="15" fill="rgb(217,44,48)" fg:x="1175" fg:w="1"/><text x="94.7794%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (23 samples, 1.85%)</title><rect x="92.8399%" y="565" width="1.8504%" height="15" fill="rgb(253,41,35)" fg:x="1154" fg:w="23"/><text x="93.0899%" y="575.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (23 samples, 1.85%)</title><rect x="92.8399%" y="549" width="1.8504%" height="15" fill="rgb(254,32,37)" fg:x="1154" fg:w="23"/><text x="93.0899%" y="559.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (4 samples, 0.32%)</title><rect x="94.3685%" y="533" width="0.3218%" height="15" fill="rgb(250,9,9)" fg:x="1173" fg:w="4"/><text x="94.6185%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (3 samples, 0.24%)</title><rect x="94.4489%" y="517" width="0.2414%" height="15" fill="rgb(212,37,16)" fg:x="1174" fg:w="3"/><text x="94.6989%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="94.5294%" y="501" width="0.1609%" height="15" fill="rgb(235,142,51)" fg:x="1175" fg:w="2"/><text x="94.7794%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="94.6098%" y="485" width="0.0805%" height="15" fill="rgb(250,225,53)" fg:x="1176" fg:w="1"/><text x="94.8598%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="94.6903%" y="565" width="0.0805%" height="15" fill="rgb(207,188,48)" fg:x="1177" fg:w="1"/><text x="94.9403%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="94.6903%" y="549" width="0.0805%" height="15" fill="rgb(222,25,21)" fg:x="1177" fg:w="1"/><text x="94.9403%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.6903%" y="533" width="0.0805%" height="15" fill="rgb(249,112,5)" fg:x="1177" fg:w="1"/><text x="94.9403%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.7707%" y="533" width="0.0805%" height="15" fill="rgb(242,11,22)" fg:x="1178" fg:w="1"/><text x="95.0207%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8512%" y="485" width="0.0805%" height="15" fill="rgb(217,125,14)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.8512%" y="469" width="0.0805%" height="15" fill="rgb(239,92,14)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.8512%" y="453" width="0.0805%" height="15" fill="rgb(232,145,17)" fg:x="1179" fg:w="1"/><text x="95.1012%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="94.8512%" y="533" width="0.1609%" height="15" fill="rgb(250,158,16)" fg:x="1179" fg:w="2"/><text x="95.1012%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="94.8512%" y="517" width="0.1609%" height="15" fill="rgb(247,30,22)" fg:x="1179" fg:w="2"/><text x="95.1012%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="94.8512%" y="501" width="0.1609%" height="15" fill="rgb(219,215,46)" fg:x="1179" fg:w="2"/><text x="95.1012%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9316%" y="485" width="0.0805%" height="15" fill="rgb(237,40,53)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9316%" y="469" width="0.0805%" height="15" fill="rgb(253,207,11)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9316%" y="453" width="0.0805%" height="15" fill="rgb(242,16,9)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9316%" y="437" width="0.0805%" height="15" fill="rgb(237,94,35)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="94.9316%" y="421" width="0.0805%" height="15" fill="rgb(244,145,23)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9316%" y="405" width="0.0805%" height="15" fill="rgb(209,93,17)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9316%" y="389" width="0.0805%" height="15" fill="rgb(205,201,0)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9316%" y="373" width="0.0805%" height="15" fill="rgb(225,198,48)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="94.9316%" y="357" width="0.0805%" height="15" fill="rgb(211,131,51)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="94.9316%" y="341" width="0.0805%" height="15" fill="rgb(237,196,37)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="94.9316%" y="325" width="0.0805%" height="15" fill="rgb(218,204,52)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="335.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="94.9316%" y="309" width="0.0805%" height="15" fill="rgb(251,67,25)" fg:x="1180" fg:w="1"/><text x="95.1816%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0121%" y="485" width="0.0805%" height="15" fill="rgb(219,87,2)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0121%" y="469" width="0.0805%" height="15" fill="rgb(224,171,9)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0121%" y="453" width="0.0805%" height="15" fill="rgb(215,98,45)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0121%" y="437" width="0.0805%" height="15" fill="rgb(231,48,23)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.0121%" y="421" width="0.0805%" height="15" fill="rgb(233,138,42)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0121%" y="405" width="0.0805%" height="15" fill="rgb(244,107,0)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.0121%" y="389" width="0.0805%" height="15" fill="rgb(224,15,0)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.0121%" y="373" width="0.0805%" height="15" fill="rgb(218,71,35)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.0121%" y="357" width="0.0805%" height="15" fill="rgb(244,32,22)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.0121%" y="341" width="0.0805%" height="15" fill="rgb(232,209,34)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0121%" y="325" width="0.0805%" height="15" fill="rgb(232,54,38)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.0121%" y="309" width="0.0805%" height="15" fill="rgb(208,83,16)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.0121%" y="293" width="0.0805%" height="15" fill="rgb(208,70,33)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.0121%" y="277" width="0.0805%" height="15" fill="rgb(247,38,12)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.0121%" y="261" width="0.0805%" height="15" fill="rgb(206,34,42)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.0121%" y="245" width="0.0805%" height="15" fill="rgb(226,75,43)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.0121%" y="229" width="0.0805%" height="15" fill="rgb(223,109,12)" fg:x="1181" fg:w="1"/><text x="95.2621%" y="239.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (5 samples, 0.40%)</title><rect x="94.7707%" y="565" width="0.4023%" height="15" fill="rgb(218,53,16)" fg:x="1178" fg:w="5"/><text x="95.0207%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (5 samples, 0.40%)</title><rect x="94.7707%" y="549" width="0.4023%" height="15" fill="rgb(236,44,50)" fg:x="1178" fg:w="5"/><text x="95.0207%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.0121%" y="533" width="0.1609%" height="15" fill="rgb(211,163,12)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="543.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.0121%" y="517" width="0.1609%" height="15" fill="rgb(230,67,52)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.0121%" y="501" width="0.1609%" height="15" fill="rgb(224,204,24)" fg:x="1181" fg:w="2"/><text x="95.2621%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0925%" y="485" width="0.0805%" height="15" fill="rgb(210,50,27)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0925%" y="469" width="0.0805%" height="15" fill="rgb(251,202,23)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0925%" y="453" width="0.0805%" height="15" fill="rgb(230,210,21)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0925%" y="437" width="0.0805%" height="15" fill="rgb(222,72,44)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="95.0925%" y="421" width="0.0805%" height="15" fill="rgb(223,182,13)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0925%" y="405" width="0.0805%" height="15" fill="rgb(228,61,15)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.0925%" y="389" width="0.0805%" height="15" fill="rgb(253,207,22)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="95.0925%" y="373" width="0.0805%" height="15" fill="rgb(232,10,15)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.0925%" y="357" width="0.0805%" height="15" fill="rgb(227,207,39)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="367.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0925%" y="341" width="0.0805%" height="15" fill="rgb(228,187,3)" fg:x="1182" fg:w="1"/><text x="95.3425%" y="351.50"></text></g><g><title>kernel::surround::Surroundings::unpack (1 samples, 0.08%)</title><rect x="95.1730%" y="565" width="0.0805%" height="15" fill="rgb(246,45,9)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="575.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1730%" y="549" width="0.0805%" height="15" fill="rgb(249,10,17)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1730%" y="533" width="0.0805%" height="15" fill="rgb(251,56,51)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.1730%" y="517" width="0.0805%" height="15" fill="rgb(232,51,36)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.1730%" y="501" width="0.0805%" height="15" fill="rgb(215,38,28)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.1730%" y="485" width="0.0805%" height="15" fill="rgb(218,5,35)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.1730%" y="469" width="0.0805%" height="15" fill="rgb(232,219,8)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1730%" y="453" width="0.0805%" height="15" fill="rgb(243,162,8)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.1730%" y="437" width="0.0805%" height="15" fill="rgb(218,86,32)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.1730%" y="421" width="0.0805%" height="15" fill="rgb(218,179,51)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.1730%" y="405" width="0.0805%" height="15" fill="rgb(237,42,52)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.1730%" y="389" width="0.0805%" height="15" fill="rgb(229,12,4)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.1730%" y="373" width="0.0805%" height="15" fill="rgb(214,203,2)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="383.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.1730%" y="357" width="0.0805%" height="15" fill="rgb(241,11,44)" fg:x="1183" fg:w="1"/><text x="95.4230%" y="367.50"></text></g><g><title>plugins_core::library::actions::reply_done (1 samples, 0.08%)</title><rect x="95.2534%" y="565" width="0.0805%" height="15" fill="rgb(221,106,48)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::raise (1 samples, 0.08%)</title><rect x="95.2534%" y="549" width="0.0805%" height="15" fill="rgb(220,220,10)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (1 samples, 0.08%)</title><rect x="95.2534%" y="533" width="0.0805%" height="15" fill="rgb(228,220,44)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="543.50"></text></g><g><title>kernel::plugins::mw::apply_middleware (1 samples, 0.08%)</title><rect x="95.2534%" y="517" width="0.0805%" height="15" fill="rgb(214,144,45)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="527.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="95.2534%" y="501" width="0.0805%" height="15" fill="rgb(224,142,28)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="511.50"></text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="95.2534%" y="485" width="0.0805%" height="15" fill="rgb(214,79,27)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="495.50"></text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (1 samples, 0.08%)</title><rect x="95.2534%" y="469" width="0.0805%" height="15" fill="rgb(208,173,30)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="479.50"></text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (1 samples, 0.08%)</title><rect x="95.2534%" y="453" width="0.0805%" height="15" fill="rgb(222,81,9)" fg:x="1184" fg:w="1"/><text x="95.5034%" y="463.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.3339%" y="549" width="0.0805%" height="15" fill="rgb(217,152,25)" fg:x="1185" fg:w="1"/><text x="95.5839%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="95.4143%" y="517" width="0.0805%" height="15" fill="rgb(248,170,26)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.4143%" y="501" width="0.0805%" height="15" fill="rgb(206,151,5)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.4143%" y="485" width="0.0805%" height="15" fill="rgb(216,7,52)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4143%" y="469" width="0.0805%" height="15" fill="rgb(228,27,44)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4143%" y="453" width="0.0805%" height="15" fill="rgb(208,221,38)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4143%" y="437" width="0.0805%" height="15" fill="rgb(240,59,23)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4143%" y="421" width="0.0805%" height="15" fill="rgb(210,127,41)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4143%" y="405" width="0.0805%" height="15" fill="rgb(224,160,3)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4143%" y="389" width="0.0805%" height="15" fill="rgb(215,228,26)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4143%" y="373" width="0.0805%" height="15" fill="rgb(218,107,38)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="95.4143%" y="357" width="0.0805%" height="15" fill="rgb(246,159,42)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="95.4143%" y="341" width="0.0805%" height="15" fill="rgb(251,23,41)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="95.4143%" y="325" width="0.0805%" height="15" fill="rgb(246,94,53)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4143%" y="309" width="0.0805%" height="15" fill="rgb(241,212,46)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="95.4143%" y="293" width="0.0805%" height="15" fill="rgb(231,79,30)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="95.4143%" y="277" width="0.0805%" height="15" fill="rgb(208,202,21)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="95.4143%" y="261" width="0.0805%" height="15" fill="rgb(226,136,22)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="95.4143%" y="245" width="0.0805%" height="15" fill="rgb(214,87,0)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="95.4143%" y="229" width="0.0805%" height="15" fill="rgb(239,176,44)" fg:x="1186" fg:w="1"/><text x="95.6643%" y="239.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="95.4143%" y="549" width="0.1609%" height="15" fill="rgb(230,102,31)" fg:x="1186" fg:w="2"/><text x="95.6643%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="95.4143%" y="533" width="0.1609%" height="15" fill="rgb(219,40,19)" fg:x="1186" fg:w="2"/><text x="95.6643%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.4948%" y="517" width="0.0805%" height="15" fill="rgb(228,55,4)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.4948%" y="501" width="0.0805%" height="15" fill="rgb(239,120,21)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.4948%" y="485" width="0.0805%" height="15" fill="rgb(243,136,1)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4948%" y="469" width="0.0805%" height="15" fill="rgb(237,12,45)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.4948%" y="453" width="0.0805%" height="15" fill="rgb(245,142,47)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4948%" y="437" width="0.0805%" height="15" fill="rgb(237,24,54)" fg:x="1187" fg:w="1"/><text x="95.7448%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.5752%" y="485" width="0.0805%" height="15" fill="rgb(234,164,40)" fg:x="1188" fg:w="1"/><text x="95.8252%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="95.5752%" y="549" width="0.1609%" height="15" fill="rgb(242,95,12)" fg:x="1188" fg:w="2"/><text x="95.8252%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.5752%" y="533" width="0.1609%" height="15" fill="rgb(238,75,28)" fg:x="1188" fg:w="2"/><text x="95.8252%" y="543.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::de::Deserialize for plugins_core::carrying::model::Containing&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.5752%" y="517" width="0.1609%" height="15" fill="rgb(236,4,26)" fg:x="1188" fg:w="2"/><text x="95.8252%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.5752%" y="501" width="0.1609%" height="15" fill="rgb(252,158,20)" fg:x="1188" fg:w="2"/><text x="95.8252%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="95.6557%" y="485" width="0.0805%" height="15" fill="rgb(231,67,31)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="495.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="95.6557%" y="469" width="0.0805%" height="15" fill="rgb(241,151,13)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="479.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.6557%" y="453" width="0.0805%" height="15" fill="rgb(242,25,36)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="95.6557%" y="437" width="0.0805%" height="15" fill="rgb(205,222,34)" fg:x="1189" fg:w="1"/><text x="95.9057%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (1 samples, 0.08%)</title><rect x="95.7361%" y="549" width="0.0805%" height="15" fill="rgb(235,154,26)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="95.7361%" y="533" width="0.0805%" height="15" fill="rgb(233,17,9)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="517" width="0.0805%" height="15" fill="rgb(245,113,50)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="501" width="0.0805%" height="15" fill="rgb(247,105,34)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="485" width="0.0805%" height="15" fill="rgb(225,50,23)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="469" width="0.0805%" height="15" fill="rgb(253,189,32)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="453" width="0.0805%" height="15" fill="rgb(208,159,41)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.7361%" y="437" width="0.0805%" height="15" fill="rgb(222,135,10)" fg:x="1190" fg:w="1"/><text x="95.9861%" y="447.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="95.8166%" y="549" width="0.2414%" height="15" fill="rgb(214,75,20)" fg:x="1191" fg:w="3"/><text x="96.0666%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="95.8970%" y="533" width="0.1609%" height="15" fill="rgb(231,65,33)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="95.8970%" y="517" width="0.1609%" height="15" fill="rgb(251,139,6)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="95.8970%" y="501" width="0.1609%" height="15" fill="rgb(225,220,53)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="511.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="95.8970%" y="485" width="0.1609%" height="15" fill="rgb(244,73,26)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="95.8970%" y="469" width="0.1609%" height="15" fill="rgb(244,98,34)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.8970%" y="453" width="0.1609%" height="15" fill="rgb(211,131,5)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="95.8970%" y="437" width="0.1609%" height="15" fill="rgb(238,14,50)" fg:x="1192" fg:w="2"/><text x="96.1470%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9775%" y="421" width="0.0805%" height="15" fill="rgb(206,132,52)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="95.9775%" y="405" width="0.0805%" height="15" fill="rgb(228,200,17)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.9775%" y="389" width="0.0805%" height="15" fill="rgb(209,53,28)" fg:x="1193" fg:w="1"/><text x="96.2275%" y="399.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="96.0579%" y="549" width="0.0805%" height="15" fill="rgb(240,214,22)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="96.0579%" y="533" width="0.0805%" height="15" fill="rgb(213,217,46)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.0579%" y="517" width="0.0805%" height="15" fill="rgb(241,159,53)" fg:x="1194" fg:w="1"/><text x="96.3079%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (44 samples, 3.54%)</title><rect x="92.7595%" y="581" width="3.5398%" height="15" fill="rgb(241,70,32)" fg:x="1153" fg:w="44"/><text x="93.0095%" y="591.50">&lt;pl..</text></g><g><title>plugins_core::location::change_location (12 samples, 0.97%)</title><rect x="95.3339%" y="565" width="0.9654%" height="15" fill="rgb(233,117,50)" fg:x="1185" fg:w="12"/><text x="95.5839%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (2 samples, 0.16%)</title><rect x="96.1384%" y="549" width="0.1609%" height="15" fill="rgb(211,114,15)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (2 samples, 0.16%)</title><rect x="96.1384%" y="533" width="0.1609%" height="15" fill="rgb(254,0,36)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.1384%" y="517" width="0.1609%" height="15" fill="rgb(221,74,12)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.1384%" y="501" width="0.1609%" height="15" fill="rgb(241,221,3)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1384%" y="485" width="0.1609%" height="15" fill="rgb(252,91,23)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="96.1384%" y="469" width="0.1609%" height="15" fill="rgb(232,1,25)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="96.1384%" y="453" width="0.1609%" height="15" fill="rgb(253,145,25)" fg:x="1195" fg:w="2"/><text x="96.3884%" y="463.50"></text></g><g><title>&lt;&amp;kernel::model::entry::Entry as plugins_core::looking::model::Observe&lt;replies::ObservedEntity&gt;&gt;::observe (1 samples, 0.08%)</title><rect x="96.2993%" y="565" width="0.0805%" height="15" fill="rgb(226,43,53)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="96.2993%" y="549" width="0.0805%" height="15" fill="rgb(245,116,39)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="559.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.2993%" y="533" width="0.0805%" height="15" fill="rgb(231,205,33)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.2993%" y="517" width="0.0805%" height="15" fill="rgb(238,96,15)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2993%" y="501" width="0.0805%" height="15" fill="rgb(212,80,14)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2993%" y="485" width="0.0805%" height="15" fill="rgb(209,118,24)" fg:x="1197" fg:w="1"/><text x="96.5493%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5406%" y="517" width="0.0805%" height="15" fill="rgb(234,176,14)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5406%" y="501" width="0.0805%" height="15" fill="rgb(207,145,21)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5406%" y="485" width="0.0805%" height="15" fill="rgb(218,58,54)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="96.5406%" y="469" width="0.0805%" height="15" fill="rgb(229,11,50)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="96.5406%" y="453" width="0.0805%" height="15" fill="rgb(221,170,33)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="96.5406%" y="437" width="0.0805%" height="15" fill="rgb(221,121,40)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="96.5406%" y="421" width="0.0805%" height="15" fill="rgb(214,165,32)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5406%" y="405" width="0.0805%" height="15" fill="rgb(243,195,30)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="96.5406%" y="389" width="0.0805%" height="15" fill="rgb(238,0,27)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="96.5406%" y="373" width="0.0805%" height="15" fill="rgb(226,0,50)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="96.5406%" y="357" width="0.0805%" height="15" fill="rgb(222,93,46)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="96.5406%" y="341" width="0.0805%" height="15" fill="rgb(210,34,24)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="96.5406%" y="325" width="0.0805%" height="15" fill="rgb(217,47,8)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="335.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.5406%" y="309" width="0.0805%" height="15" fill="rgb(217,0,26)" fg:x="1200" fg:w="1"/><text x="96.7906%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="96.6211%" y="517" width="0.0805%" height="15" fill="rgb(218,228,31)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="96.6211%" y="501" width="0.0805%" height="15" fill="rgb(208,101,40)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="511.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="96.6211%" y="485" width="0.0805%" height="15" fill="rgb(225,134,0)" fg:x="1201" fg:w="1"/><text x="96.8711%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="96.7015%" y="501" width="0.0805%" height="15" fill="rgb(241,37,25)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="96.7015%" y="485" width="0.0805%" height="15" fill="rgb(251,149,9)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="96.7015%" y="469" width="0.0805%" height="15" fill="rgb(225,196,54)" fg:x="1202" fg:w="1"/><text x="96.9515%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.7820%" y="437" width="0.2414%" height="15" fill="rgb(240,46,24)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="96.7820%" y="421" width="0.2414%" height="15" fill="rgb(214,189,4)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="96.7820%" y="405" width="0.2414%" height="15" fill="rgb(222,3,8)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="96.7820%" y="389" width="0.2414%" height="15" fill="rgb(250,163,6)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="96.7820%" y="373" width="0.2414%" height="15" fill="rgb(225,23,45)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="96.7820%" y="357" width="0.2414%" height="15" fill="rgb(225,177,23)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="96.7820%" y="341" width="0.2414%" height="15" fill="rgb(253,75,3)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="96.7820%" y="325" width="0.2414%" height="15" fill="rgb(237,85,4)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="96.7820%" y="309" width="0.2414%" height="15" fill="rgb(212,23,3)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="96.7820%" y="293" width="0.2414%" height="15" fill="rgb(250,127,19)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="96.7820%" y="277" width="0.2414%" height="15" fill="rgb(222,82,14)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="287.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="96.7820%" y="261" width="0.2414%" height="15" fill="rgb(213,63,47)" fg:x="1203" fg:w="3"/><text x="97.0320%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="96.7820%" y="469" width="0.3218%" height="15" fill="rgb(219,132,41)" fg:x="1203" fg:w="4"/><text x="97.0320%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="96.7820%" y="453" width="0.3218%" height="15" fill="rgb(251,205,16)" fg:x="1203" fg:w="4"/><text x="97.0320%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.0233%" y="437" width="0.0805%" height="15" fill="rgb(239,102,23)" fg:x="1206" fg:w="1"/><text x="97.2733%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.0233%" y="421" width="0.0805%" height="15" fill="rgb(222,218,4)" fg:x="1206" fg:w="1"/><text x="97.2733%" y="431.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="97.1038%" y="453" width="0.0805%" height="15" fill="rgb(232,91,40)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="97.1038%" y="437" width="0.0805%" height="15" fill="rgb(238,170,50)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="97.1038%" y="421" width="0.0805%" height="15" fill="rgb(243,52,25)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="97.1038%" y="405" width="0.0805%" height="15" fill="rgb(236,151,10)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="97.1038%" y="389" width="0.0805%" height="15" fill="rgb(216,123,7)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="399.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="97.1038%" y="373" width="0.0805%" height="15" fill="rgb(247,115,15)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1038%" y="357" width="0.0805%" height="15" fill="rgb(249,65,46)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1038%" y="341" width="0.0805%" height="15" fill="rgb(230,132,24)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.1038%" y="325" width="0.0805%" height="15" fill="rgb(253,115,7)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.1038%" y="309" width="0.0805%" height="15" fill="rgb(233,23,21)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.1038%" y="293" width="0.0805%" height="15" fill="rgb(231,203,18)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.1038%" y="277" width="0.0805%" height="15" fill="rgb(233,19,15)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.1038%" y="261" width="0.0805%" height="15" fill="rgb(213,12,4)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.1038%" y="245" width="0.0805%" height="15" fill="rgb(221,198,54)" fg:x="1207" fg:w="1"/><text x="97.3538%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="97.1038%" y="469" width="0.1609%" height="15" fill="rgb(247,189,16)" fg:x="1207" fg:w="2"/><text x="97.3538%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.1842%" y="453" width="0.0805%" height="15" fill="rgb(213,82,46)" fg:x="1208" fg:w="1"/><text x="97.4342%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1842%" y="437" width="0.0805%" height="15" fill="rgb(216,129,40)" fg:x="1208" fg:w="1"/><text x="97.4342%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="97.2647%" y="469" width="0.0805%" height="15" fill="rgb(222,154,45)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.2647%" y="453" width="0.0805%" height="15" fill="rgb(214,223,41)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.2647%" y="437" width="0.0805%" height="15" fill="rgb(212,167,3)" fg:x="1209" fg:w="1"/><text x="97.5147%" y="447.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (14 samples, 1.13%)</title><rect x="96.3797%" y="533" width="1.1263%" height="15" fill="rgb(219,226,20)" fg:x="1198" fg:w="14"/><text x="96.6297%" y="543.50"></text></g><g><title>plugins_core::tools::contained_by (10 samples, 0.80%)</title><rect x="96.7015%" y="517" width="0.8045%" height="15" fill="rgb(231,29,48)" fg:x="1202" fg:w="10"/><text x="96.9515%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::scope (9 samples, 0.72%)</title><rect x="96.7820%" y="501" width="0.7241%" height="15" fill="rgb(224,12,4)" fg:x="1203" fg:w="9"/><text x="97.0320%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.72%)</title><rect x="96.7820%" y="485" width="0.7241%" height="15" fill="rgb(217,180,30)" fg:x="1203" fg:w="9"/><text x="97.0320%" y="495.50"></text></g><g><title>kernel::session::get_my_session (2 samples, 0.16%)</title><rect x="97.3451%" y="469" width="0.1609%" height="15" fill="rgb(237,137,17)" fg:x="1210" fg:w="2"/><text x="97.5951%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="437" width="0.0805%" height="15" fill="rgb(252,225,18)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="421" width="0.0805%" height="15" fill="rgb(209,177,11)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="405" width="0.0805%" height="15" fill="rgb(214,147,8)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="389" width="0.0805%" height="15" fill="rgb(213,225,52)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="373" width="0.0805%" height="15" fill="rgb(205,99,43)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.5060%" y="357" width="0.0805%" height="15" fill="rgb(248,141,45)" fg:x="1212" fg:w="1"/><text x="97.7560%" y="367.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (16 samples, 1.29%)</title><rect x="96.3797%" y="565" width="1.2872%" height="15" fill="rgb(233,198,44)" fg:x="1198" fg:w="16"/><text x="96.6297%" y="575.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (16 samples, 1.29%)</title><rect x="96.3797%" y="549" width="1.2872%" height="15" fill="rgb(231,176,38)" fg:x="1198" fg:w="16"/><text x="96.6297%" y="559.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="97.5060%" y="533" width="0.1609%" height="15" fill="rgb(209,31,1)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="543.50"></text></g><g><title>plugins_core::finding::matches_description (2 samples, 0.16%)</title><rect x="97.5060%" y="517" width="0.1609%" height="15" fill="rgb(246,42,27)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="527.50"></text></g><g><title>kernel::model::entry::Entry::name (2 samples, 0.16%)</title><rect x="97.5060%" y="501" width="0.1609%" height="15" fill="rgb(244,104,27)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="97.5060%" y="485" width="0.1609%" height="15" fill="rgb(209,14,27)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="97.5060%" y="469" width="0.1609%" height="15" fill="rgb(205,170,50)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="97.5060%" y="453" width="0.1609%" height="15" fill="rgb(241,127,20)" fg:x="1212" fg:w="2"/><text x="97.7560%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5865%" y="437" width="0.0805%" height="15" fill="rgb(230,72,5)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5865%" y="421" width="0.0805%" height="15" fill="rgb(231,221,3)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.5865%" y="405" width="0.0805%" height="15" fill="rgb(232,150,49)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5865%" y="389" width="0.0805%" height="15" fill="rgb(225,13,46)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.5865%" y="373" width="0.0805%" height="15" fill="rgb(236,192,49)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.5865%" y="357" width="0.0805%" height="15" fill="rgb(242,107,14)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.5865%" y="341" width="0.0805%" height="15" fill="rgb(251,185,35)" fg:x="1213" fg:w="1"/><text x="97.8365%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6669%" y="469" width="0.0805%" height="15" fill="rgb(212,128,8)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6669%" y="453" width="0.0805%" height="15" fill="rgb(215,223,6)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6669%" y="437" width="0.0805%" height="15" fill="rgb(216,23,45)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.6669%" y="421" width="0.0805%" height="15" fill="rgb(215,71,45)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6669%" y="405" width="0.0805%" height="15" fill="rgb(224,2,48)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.6669%" y="389" width="0.0805%" height="15" fill="rgb(218,48,8)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.6669%" y="373" width="0.0805%" height="15" fill="rgb(254,37,27)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.6669%" y="357" width="0.0805%" height="15" fill="rgb(237,112,2)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.6669%" y="341" width="0.0805%" height="15" fill="rgb(243,64,54)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6669%" y="325" width="0.0805%" height="15" fill="rgb(211,93,4)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6669%" y="309" width="0.0805%" height="15" fill="rgb(249,127,30)" fg:x="1214" fg:w="1"/><text x="97.9169%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.6669%" y="485" width="0.1609%" height="15" fill="rgb(248,76,17)" fg:x="1214" fg:w="2"/><text x="97.9169%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.7474%" y="469" width="0.0805%" height="15" fill="rgb(244,153,49)" fg:x="1215" fg:w="1"/><text x="97.9974%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::entity_ref (3 samples, 0.24%)</title><rect x="97.6669%" y="565" width="0.2414%" height="15" fill="rgb(231,94,34)" fg:x="1214" fg:w="3"/><text x="97.9169%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (3 samples, 0.24%)</title><rect x="97.6669%" y="549" width="0.2414%" height="15" fill="rgb(253,162,40)" fg:x="1214" fg:w="3"/><text x="97.9169%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="97.6669%" y="533" width="0.2414%" height="15" fill="rgb(219,194,14)" fg:x="1214" fg:w="3"/><text x="97.9169%" y="543.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="97.6669%" y="517" width="0.2414%" height="15" fill="rgb(226,80,42)" fg:x="1214" fg:w="3"/><text x="97.9169%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="97.6669%" y="501" width="0.2414%" height="15" fill="rgb(208,108,5)" fg:x="1214" fg:w="3"/><text x="97.9169%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8278%" y="485" width="0.0805%" height="15" fill="rgb(209,204,33)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8278%" y="469" width="0.0805%" height="15" fill="rgb(232,22,14)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8278%" y="453" width="0.0805%" height="15" fill="rgb(236,139,41)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8278%" y="437" width="0.0805%" height="15" fill="rgb(220,91,0)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.8278%" y="421" width="0.0805%" height="15" fill="rgb(243,200,48)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8278%" y="405" width="0.0805%" height="15" fill="rgb(237,172,41)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8278%" y="389" width="0.0805%" height="15" fill="rgb(247,152,34)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8278%" y="373" width="0.0805%" height="15" fill="rgb(205,88,40)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="97.8278%" y="357" width="0.0805%" height="15" fill="rgb(223,30,13)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8278%" y="341" width="0.0805%" height="15" fill="rgb(249,7,18)" fg:x="1216" fg:w="1"/><text x="98.0778%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="97.9083%" y="517" width="0.0805%" height="15" fill="rgb(242,185,6)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.9083%" y="501" width="0.0805%" height="15" fill="rgb(234,115,47)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9083%" y="485" width="0.0805%" height="15" fill="rgb(213,98,2)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9083%" y="469" width="0.0805%" height="15" fill="rgb(237,162,23)" fg:x="1217" fg:w="1"/><text x="98.1583%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="97.9083%" y="549" width="0.1609%" height="15" fill="rgb(240,174,26)" fg:x="1217" fg:w="2"/><text x="98.1583%" y="559.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="97.9083%" y="533" width="0.1609%" height="15" fill="rgb(249,90,45)" fg:x="1217" fg:w="2"/><text x="98.1583%" y="543.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.9887%" y="517" width="0.0805%" height="15" fill="rgb(212,126,4)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="527.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.9887%" y="501" width="0.0805%" height="15" fill="rgb(236,98,48)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="511.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.9887%" y="485" width="0.0805%" height="15" fill="rgb(250,14,51)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9887%" y="469" width="0.0805%" height="15" fill="rgb(236,2,16)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9887%" y="453" width="0.0805%" height="15" fill="rgb(250,146,3)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9887%" y="437" width="0.0805%" height="15" fill="rgb(233,72,0)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9887%" y="421" width="0.0805%" height="15" fill="rgb(249,172,7)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9887%" y="405" width="0.0805%" height="15" fill="rgb(224,213,17)" fg:x="1218" fg:w="1"/><text x="98.2387%" y="415.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.0692%" y="549" width="0.0805%" height="15" fill="rgb(221,52,2)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.0692%" y="533" width="0.0805%" height="15" fill="rgb(220,8,41)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.0692%" y="517" width="0.0805%" height="15" fill="rgb(230,207,34)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0692%" y="501" width="0.0805%" height="15" fill="rgb(240,157,11)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.0692%" y="485" width="0.0805%" height="15" fill="rgb(243,209,15)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.0692%" y="469" width="0.0805%" height="15" fill="rgb(251,191,33)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.0692%" y="453" width="0.0805%" height="15" fill="rgb(217,58,8)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="463.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.0692%" y="437" width="0.0805%" height="15" fill="rgb(210,35,1)" fg:x="1219" fg:w="1"/><text x="98.3192%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="98.1496%" y="517" width="0.0805%" height="15" fill="rgb(231,62,7)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.1496%" y="501" width="0.0805%" height="15" fill="rgb(207,73,10)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="511.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="98.1496%" y="485" width="0.0805%" height="15" fill="rgb(216,178,40)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="98.1496%" y="469" width="0.0805%" height="15" fill="rgb(238,220,1)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="98.1496%" y="453" width="0.0805%" height="15" fill="rgb(246,169,39)" fg:x="1220" fg:w="1"/><text x="98.3996%" y="463.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (2 samples, 0.16%)</title><rect x="98.1496%" y="549" width="0.1609%" height="15" fill="rgb(240,186,45)" fg:x="1220" fg:w="2"/><text x="98.3996%" y="559.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="98.1496%" y="533" width="0.1609%" height="15" fill="rgb(225,14,29)" fg:x="1220" fg:w="2"/><text x="98.3996%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="98.2301%" y="517" width="0.0805%" height="15" fill="rgb(243,96,26)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.2301%" y="501" width="0.0805%" height="15" fill="rgb(234,139,10)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.2301%" y="485" width="0.0805%" height="15" fill="rgb(235,208,23)" fg:x="1221" fg:w="1"/><text x="98.4801%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="98.3105%" y="533" width="0.0805%" height="15" fill="rgb(230,140,47)" fg:x="1222" fg:w="1"/><text x="98.5605%" y="543.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (3 samples, 0.24%)</title><rect x="98.3105%" y="549" width="0.2414%" height="15" fill="rgb(241,227,54)" fg:x="1222" fg:w="3"/><text x="98.5605%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="98.3910%" y="533" width="0.1609%" height="15" fill="rgb(221,210,40)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.3910%" y="517" width="0.1609%" height="15" fill="rgb(207,52,1)" fg:x="1223" fg:w="2"/><text x="98.6410%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.4714%" y="501" width="0.0805%" height="15" fill="rgb(243,147,42)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.4714%" y="485" width="0.0805%" height="15" fill="rgb(245,93,7)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.4714%" y="469" width="0.0805%" height="15" fill="rgb(243,119,13)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4714%" y="453" width="0.0805%" height="15" fill="rgb(228,164,28)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4714%" y="437" width="0.0805%" height="15" fill="rgb(234,37,39)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.4714%" y="421" width="0.0805%" height="15" fill="rgb(246,155,10)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4714%" y="405" width="0.0805%" height="15" fill="rgb(208,140,53)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.4714%" y="389" width="0.0805%" height="15" fill="rgb(234,107,29)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.4714%" y="373" width="0.0805%" height="15" fill="rgb(217,45,5)" fg:x="1224" fg:w="1"/><text x="98.7214%" y="383.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="98.5519%" y="549" width="0.0805%" height="15" fill="rgb(251,168,5)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="98.5519%" y="533" width="0.0805%" height="15" fill="rgb(242,96,14)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.5519%" y="517" width="0.0805%" height="15" fill="rgb(231,148,6)" fg:x="1225" fg:w="1"/><text x="98.8019%" y="527.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (30 samples, 2.41%)</title><rect x="96.2993%" y="581" width="2.4135%" height="15" fill="rgb(249,100,2)" fg:x="1197" fg:w="30"/><text x="96.5493%" y="591.50">&lt;p..</text></g><g><title>plugins_core::location::change_location (10 samples, 0.80%)</title><rect x="97.9083%" y="565" width="0.8045%" height="15" fill="rgb(212,22,52)" fg:x="1217" fg:w="10"/><text x="98.1583%" y="575.50"></text></g><g><title>plugins_core::location::Location::set (1 samples, 0.08%)</title><rect x="98.6323%" y="549" width="0.0805%" height="15" fill="rgb(212,97,14)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="98.6323%" y="533" width="0.0805%" height="15" fill="rgb(212,24,14)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.6323%" y="517" width="0.0805%" height="15" fill="rgb(239,209,43)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="98.6323%" y="501" width="0.0805%" height="15" fill="rgb(226,211,38)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="98.6323%" y="485" width="0.0805%" height="15" fill="rgb(216,118,11)" fg:x="1226" fg:w="1"/><text x="98.8823%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::actions::Performer&gt;::perform (82 samples, 6.60%)</title><rect x="92.1963%" y="773" width="6.5969%" height="15" fill="rgb(223,214,43)" fg:x="1146" fg:w="82"/><text x="92.4463%" y="783.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::apply_middleware (82 samples, 6.60%)</title><rect x="92.1963%" y="757" width="6.5969%" height="15" fill="rgb(213,225,15)" fg:x="1146" fg:w="82"/><text x="92.4463%" y="767.50">kernel::p..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (82 samples, 6.60%)</title><rect x="92.1963%" y="741" width="6.5969%" height="15" fill="rgb(233,115,42)" fg:x="1146" fg:w="82"/><text x="92.4463%" y="751.50">kernel::p..</text></g><g><title>&lt;engine::session::ExpandSurroundingsMiddleware as kernel::plugins::mw::Middleware&gt;::handle (82 samples, 6.60%)</title><rect x="92.1963%" y="725" width="6.5969%" height="15" fill="rgb(229,93,16)" fg:x="1146" fg:w="82"/><text x="92.4463%" y="735.50">&lt;engine::..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (75 samples, 6.03%)</title><rect x="92.7595%" y="709" width="6.0338%" height="15" fill="rgb(220,114,48)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="719.50">kernel::..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (75 samples, 6.03%)</title><rect x="92.7595%" y="693" width="6.0338%" height="15" fill="rgb(253,78,24)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="703.50">&lt;plugins..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (75 samples, 6.03%)</title><rect x="92.7595%" y="677" width="6.0338%" height="15" fill="rgb(206,29,19)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="687.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 6.03%)</title><rect x="92.7595%" y="661" width="6.0338%" height="15" fill="rgb(220,96,19)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="671.50">core::op..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (75 samples, 6.03%)</title><rect x="92.7595%" y="645" width="6.0338%" height="15" fill="rgb(222,62,18)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="655.50">kernel::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (75 samples, 6.03%)</title><rect x="92.7595%" y="629" width="6.0338%" height="15" fill="rgb(243,4,41)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="639.50">core::op..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (75 samples, 6.03%)</title><rect x="92.7595%" y="613" width="6.0338%" height="15" fill="rgb(232,199,53)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="623.50">&lt;alloc::..</text></g><g><title>&lt;engine::session::state::State as kernel::actions::Performer&gt;::perform (75 samples, 6.03%)</title><rect x="92.7595%" y="597" width="6.0338%" height="15" fill="rgb(212,18,26)" fg:x="1153" fg:w="75"/><text x="93.0095%" y="607.50">&lt;engine:..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="98.7128%" y="581" width="0.0805%" height="15" fill="rgb(218,30,49)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (1 samples, 0.08%)</title><rect x="98.7128%" y="565" width="0.0805%" height="15" fill="rgb(250,154,52)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="575.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.7128%" y="549" width="0.0805%" height="15" fill="rgb(218,176,16)" fg:x="1227" fg:w="1"/><text x="98.9628%" y="559.50"></text></g><g><title>&lt;engine::storage::InMemoryStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="98.8737%" y="741" width="0.0805%" height="15" fill="rgb(215,61,51)" fg:x="1229" fg:w="1"/><text x="99.1237%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="98.9541%" y="645" width="0.0805%" height="15" fill="rgb(234,40,53)" fg:x="1230" fg:w="1"/><text x="99.2041%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="98.9541%" y="725" width="0.1609%" height="15" fill="rgb(214,142,25)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="735.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_entity (2 samples, 0.16%)</title><rect x="98.9541%" y="709" width="0.1609%" height="15" fill="rgb(206,61,7)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="719.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="98.9541%" y="693" width="0.1609%" height="15" fill="rgb(245,225,1)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="703.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="98.9541%" y="677" width="0.1609%" height="15" fill="rgb(224,122,37)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="98.9541%" y="661" width="0.1609%" height="15" fill="rgb(209,221,12)" fg:x="1230" fg:w="2"/><text x="99.2041%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0346%" y="645" width="0.0805%" height="15" fill="rgb(248,70,2)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0346%" y="629" width="0.0805%" height="15" fill="rgb(227,173,19)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0346%" y="613" width="0.0805%" height="15" fill="rgb(228,217,53)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0346%" y="597" width="0.0805%" height="15" fill="rgb(248,43,46)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.0346%" y="581" width="0.0805%" height="15" fill="rgb(236,202,32)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0346%" y="565" width="0.0805%" height="15" fill="rgb(231,220,0)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.0346%" y="549" width="0.0805%" height="15" fill="rgb(235,11,31)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.0346%" y="533" width="0.0805%" height="15" fill="rgb(247,159,37)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="543.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="99.0346%" y="517" width="0.0805%" height="15" fill="rgb(246,179,15)" fg:x="1231" fg:w="1"/><text x="99.2846%" y="527.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="99.1150%" y="709" width="0.0805%" height="15" fill="rgb(221,193,41)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1150%" y="693" width="0.0805%" height="15" fill="rgb(228,30,1)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="703.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1150%" y="677" width="0.0805%" height="15" fill="rgb(233,226,32)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1150%" y="661" width="0.0805%" height="15" fill="rgb(238,110,42)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="671.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.1150%" y="645" width="0.0805%" height="15" fill="rgb(233,141,16)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.1150%" y="629" width="0.0805%" height="15" fill="rgb(212,227,9)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="639.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="99.1150%" y="613" width="0.0805%" height="15" fill="rgb(247,119,37)" fg:x="1232" fg:w="1"/><text x="99.3650%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1955%" y="629" width="0.0805%" height="15" fill="rgb(219,101,42)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.1955%" y="613" width="0.0805%" height="15" fill="rgb(252,226,3)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1955%" y="597" width="0.0805%" height="15" fill="rgb(229,50,28)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="99.1955%" y="581" width="0.0805%" height="15" fill="rgb(249,122,7)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1955%" y="565" width="0.0805%" height="15" fill="rgb(207,101,46)" fg:x="1233" fg:w="1"/><text x="99.4455%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="99.1955%" y="677" width="0.1609%" height="15" fill="rgb(249,90,48)" fg:x="1233" fg:w="2"/><text x="99.4455%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.1955%" y="661" width="0.1609%" height="15" fill="rgb(231,10,48)" fg:x="1233" fg:w="2"/><text x="99.4455%" y="671.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.1955%" y="645" width="0.1609%" height="15" fill="rgb(234,120,19)" fg:x="1233" fg:w="2"/><text x="99.4455%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2759%" y="629" width="0.0805%" height="15" fill="rgb(212,221,36)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="613" width="0.0805%" height="15" fill="rgb(230,151,52)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2759%" y="597" width="0.0805%" height="15" fill="rgb(246,35,38)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2759%" y="581" width="0.0805%" height="15" fill="rgb(208,110,54)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="591.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="565" width="0.0805%" height="15" fill="rgb(250,206,40)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2759%" y="549" width="0.0805%" height="15" fill="rgb(225,204,22)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2759%" y="533" width="0.0805%" height="15" fill="rgb(220,29,11)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="543.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="517" width="0.0805%" height="15" fill="rgb(254,133,9)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2759%" y="501" width="0.0805%" height="15" fill="rgb(254,178,33)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2759%" y="485" width="0.0805%" height="15" fill="rgb(239,217,37)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="469" width="0.0805%" height="15" fill="rgb(210,41,5)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.2759%" y="453" width="0.0805%" height="15" fill="rgb(227,23,47)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.2759%" y="437" width="0.0805%" height="15" fill="rgb(215,18,46)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.2759%" y="421" width="0.0805%" height="15" fill="rgb(247,172,0)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.2759%" y="405" width="0.0805%" height="15" fill="rgb(254,23,27)" fg:x="1234" fg:w="1"/><text x="99.5259%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as core::str::traits::FromStr&gt;::from_str (4 samples, 0.32%)</title><rect x="99.1150%" y="725" width="0.3218%" height="15" fill="rgb(223,61,6)" fg:x="1232" fg:w="4"/><text x="99.3650%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.1955%" y="709" width="0.2414%" height="15" fill="rgb(237,65,24)" fg:x="1233" fg:w="3"/><text x="99.4455%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.1955%" y="693" width="0.2414%" height="15" fill="rgb(238,133,22)" fg:x="1233" fg:w="3"/><text x="99.4455%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.3564%" y="677" width="0.0805%" height="15" fill="rgb(217,219,5)" fg:x="1235" fg:w="1"/><text x="99.6064%" y="687.50"></text></g><g><title>engine::session::internal::Entities::add_persisted (8 samples, 0.64%)</title><rect x="98.9541%" y="741" width="0.6436%" height="15" fill="rgb(254,24,44)" fg:x="1230" fg:w="8"/><text x="99.2041%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="99.4368%" y="725" width="0.1609%" height="15" fill="rgb(217,136,50)" fg:x="1236" fg:w="2"/><text x="99.6868%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.4368%" y="709" width="0.1609%" height="15" fill="rgb(243,85,15)" fg:x="1236" fg:w="2"/><text x="99.6868%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.4368%" y="693" width="0.1609%" height="15" fill="rgb(224,85,42)" fg:x="1236" fg:w="2"/><text x="99.6868%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="99.4368%" y="677" width="0.1609%" height="15" fill="rgb(237,142,36)" fg:x="1236" fg:w="2"/><text x="99.6868%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="99.4368%" y="661" width="0.1609%" height="15" fill="rgb(215,131,52)" fg:x="1236" fg:w="2"/><text x="99.6868%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5173%" y="645" width="0.0805%" height="15" fill="rgb(216,124,50)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5173%" y="629" width="0.0805%" height="15" fill="rgb(223,61,20)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5173%" y="613" width="0.0805%" height="15" fill="rgb(250,62,47)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5173%" y="597" width="0.0805%" height="15" fill="rgb(225,180,21)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.5173%" y="581" width="0.0805%" height="15" fill="rgb(210,89,33)" fg:x="1237" fg:w="1"/><text x="99.7673%" y="591.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::entry::EntryResolver&gt;::entry (11 samples, 0.88%)</title><rect x="98.7932%" y="773" width="0.8850%" height="15" fill="rgb(205,215,50)" fg:x="1228" fg:w="11"/><text x="99.0432%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (11 samples, 0.88%)</title><rect x="98.7932%" y="757" width="0.8850%" height="15" fill="rgb(207,191,48)" fg:x="1228" fg:w="11"/><text x="99.0432%" y="767.50"></text></g><g><title>engine::session::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="99.5977%" y="741" width="0.0805%" height="15" fill="rgb(247,32,5)" fg:x="1238" fg:w="1"/><text x="99.8477%" y="751.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::ParsesActions&gt;::try_parse_action (2 samples, 0.16%)</title><rect x="99.6782%" y="773" width="0.1609%" height="15" fill="rgb(210,113,39)" fg:x="1239" fg:w="2"/><text x="99.9282%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="99.6782%" y="757" width="0.1609%" height="15" fill="rgb(242,181,23)" fg:x="1239" fg:w="2"/><text x="99.9282%" y="767.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7586%" y="741" width="0.0805%" height="15" fill="rgb(215,58,22)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="751.50"></text></g><g><title>&lt;plugins_core::carrying::parser::DropActionParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="99.7586%" y="725" width="0.0805%" height="15" fill="rgb(236,31,11)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="735.50"></text></g><g><title>&lt;(A,B) as nom::branch::Alt&lt;Input,Output,Error&gt;&gt;::choice (1 samples, 0.08%)</title><rect x="99.7586%" y="709" width="0.0805%" height="15" fill="rgb(244,198,15)" fg:x="1240" fg:w="1"/><text x="100.0086%" y="719.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (97 samples, 7.80%)</title><rect x="92.1158%" y="805" width="7.8037%" height="15" fill="rgb(230,142,36)" fg:x="1145" fg:w="97"/><text x="92.3658%" y="815.50">engine::ses..</text></g><g><title>engine::session::Session::evaluate_and_perform_as (97 samples, 7.80%)</title><rect x="92.1158%" y="789" width="7.8037%" height="15" fill="rgb(219,48,29)" fg:x="1145" fg:w="97"/><text x="92.3658%" y="799.50">engine::ses..</text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="99.8391%" y="773" width="0.0805%" height="15" fill="rgb(237,179,43)" fg:x="1241" fg:w="1"/><text x="100.0891%" y="783.50"></text></g><g><title>all (1,243 samples, 100%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(221,67,37)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1167.50"></text></g><g><title>simple-81fabdd1 (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(222,217,18)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1151.50">simple-81fabdd1</text></g><g><title>_start (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(235,107,38)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1135.50">_start</text></g><g><title>__libc_start_main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(227,110,50)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1119.50">__libc_start_main</text></g><g><title>main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(224,176,42)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1103.50">main</text></g><g><title>std::rt::lang_start_internal (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(250,34,11)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1087.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(253,107,24)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(213,146,11)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(216,88,42)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1039.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(231,37,19)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1023.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,243 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(213,154,5)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="1007.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,243 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(234,102,6)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="991.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,243 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(206,125,39)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="975.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,243 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(254,216,50)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="959.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,243 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(205,65,40)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="943.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,243 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(244,217,7)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="927.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,243 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(220,203,19)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="911.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,243 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(254,124,45)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="895.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,243 samples, 100.00%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(236,111,39)" fg:x="0" fg:w="1243"/><text x="0.2500%" y="879.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (250 samples, 20.11%)</title><rect x="79.8874%" y="853" width="20.1126%" height="15" fill="rgb(243,49,31)" fg:x="993" fg:w="250"/><text x="80.1374%" y="863.50">&lt;criterion::routine::Function&lt;M,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (250 samples, 20.11%)</title><rect x="79.8874%" y="837" width="20.1126%" height="15" fill="rgb(252,80,32)" fg:x="993" fg:w="250"/><text x="80.1374%" y="847.50">criterion::bencher::Bencher&lt;M&gt;::..</text></g><g><title>tests::evaluate_text_in_new_domain (250 samples, 20.11%)</title><rect x="79.8874%" y="821" width="20.1126%" height="15" fill="rgb(221,67,33)" fg:x="993" fg:w="250"/><text x="80.1374%" y="831.50">tests::evaluate_text_in_new_doma..</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="99.9195%" y="805" width="0.0805%" height="15" fill="rgb(225,12,36)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="99.9195%" y="789" width="0.0805%" height="15" fill="rgb(210,14,38)" fg:x="1242" fg:w="1"/><text x="100.1695%" y="799.50"></text></g></svg></svg>