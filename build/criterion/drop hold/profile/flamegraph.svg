<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1222" onload="init(evt)" viewBox="0 0 1200 1222" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1222" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1205.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1205.00"> </text><svg id="frames" x="10" width="1180" total_samples="1241"><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.0806%" y="805" width="0.0806%" height="15" fill="rgb(227,217,48)" fg:x="1" fg:w="1"/><text x="0.3306%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="0.4029%" y="741" width="0.1612%" height="15" fill="rgb(210,66,35)" fg:x="5" fg:w="2"/><text x="0.6529%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="0.7252%" y="725" width="0.0806%" height="15" fill="rgb(254,6,7)" fg:x="9" fg:w="1"/><text x="0.9752%" y="735.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="0.9670%" y="693" width="0.2417%" height="15" fill="rgb(235,222,42)" fg:x="12" fg:w="3"/><text x="1.2170%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.32%)</title><rect x="1.2087%" y="693" width="0.3223%" height="15" fill="rgb(245,126,5)" fg:x="15" fg:w="4"/><text x="1.4587%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="1.3699%" y="677" width="0.1612%" height="15" fill="rgb(215,73,17)" fg:x="17" fg:w="2"/><text x="1.6199%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="1.6922%" y="677" width="0.0806%" height="15" fill="rgb(219,198,52)" fg:x="21" fg:w="1"/><text x="1.9422%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="1.6922%" y="661" width="0.0806%" height="15" fill="rgb(217,159,18)" fg:x="21" fg:w="1"/><text x="1.9422%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="1.6922%" y="645" width="0.0806%" height="15" fill="rgb(212,177,18)" fg:x="21" fg:w="1"/><text x="1.9422%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="1.7728%" y="661" width="0.0806%" height="15" fill="rgb(241,10,11)" fg:x="22" fg:w="1"/><text x="2.0228%" y="671.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.0145%" y="645" width="0.2417%" height="15" fill="rgb(232,114,35)" fg:x="25" fg:w="3"/><text x="2.2645%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="2.2562%" y="645" width="0.1612%" height="15" fill="rgb(238,222,8)" fg:x="28" fg:w="2"/><text x="2.5062%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="2.2562%" y="629" width="0.1612%" height="15" fill="rgb(251,153,44)" fg:x="28" fg:w="2"/><text x="2.5062%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.4174%" y="629" width="0.0806%" height="15" fill="rgb(210,140,51)" fg:x="30" fg:w="1"/><text x="2.6674%" y="639.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 2.42%)</title><rect x="0.3223%" y="757" width="2.4174%" height="15" fill="rgb(222,63,0)" fg:x="4" fg:w="30"/><text x="0.5723%" y="767.50">&lt;a..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 2.18%)</title><rect x="0.5641%" y="741" width="2.1757%" height="15" fill="rgb(240,18,40)" fg:x="7" fg:w="27"/><text x="0.8141%" y="751.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (24 samples, 1.93%)</title><rect x="0.8058%" y="725" width="1.9339%" height="15" fill="rgb(237,88,16)" fg:x="10" fg:w="24"/><text x="1.0558%" y="735.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (24 samples, 1.93%)</title><rect x="0.8058%" y="709" width="1.9339%" height="15" fill="rgb(251,117,13)" fg:x="10" fg:w="24"/><text x="1.0558%" y="719.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (15 samples, 1.21%)</title><rect x="1.5310%" y="693" width="1.2087%" height="15" fill="rgb(251,228,8)" fg:x="19" fg:w="15"/><text x="1.7810%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="1.7728%" y="677" width="0.9670%" height="15" fill="rgb(205,107,49)" fg:x="22" fg:w="12"/><text x="2.0228%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="1.8533%" y="661" width="0.8864%" height="15" fill="rgb(238,72,41)" fg:x="23" fg:w="11"/><text x="2.1033%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="2.4174%" y="645" width="0.3223%" height="15" fill="rgb(248,183,52)" fg:x="30" fg:w="4"/><text x="2.6674%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="2.4980%" y="629" width="0.2417%" height="15" fill="rgb(215,58,20)" fg:x="31" fg:w="3"/><text x="2.7480%" y="639.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="2.4980%" y="613" width="0.2417%" height="15" fill="rgb(209,49,13)" fg:x="31" fg:w="3"/><text x="2.7480%" y="623.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 2.74%)</title><rect x="0.0806%" y="821" width="2.7397%" height="15" fill="rgb(208,113,17)" fg:x="1" fg:w="34"/><text x="0.3306%" y="831.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (33 samples, 2.66%)</title><rect x="0.1612%" y="805" width="2.6591%" height="15" fill="rgb(208,14,22)" fg:x="2" fg:w="33"/><text x="0.4112%" y="815.50">co..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 2.58%)</title><rect x="0.2417%" y="789" width="2.5786%" height="15" fill="rgb(222,95,2)" fg:x="3" fg:w="32"/><text x="0.4917%" y="799.50">&lt;h..</text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (32 samples, 2.58%)</title><rect x="0.2417%" y="773" width="2.5786%" height="15" fill="rgb(253,180,37)" fg:x="3" fg:w="32"/><text x="0.4917%" y="783.50">co..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="2.7397%" y="757" width="0.0806%" height="15" fill="rgb(250,81,33)" fg:x="34" fg:w="1"/><text x="2.9897%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.1426%" y="661" width="0.0806%" height="15" fill="rgb(251,151,41)" fg:x="39" fg:w="1"/><text x="3.3926%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.1426%" y="645" width="0.0806%" height="15" fill="rgb(210,135,17)" fg:x="39" fg:w="1"/><text x="3.3926%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.2232%" y="565" width="0.0806%" height="15" fill="rgb(239,21,29)" fg:x="40" fg:w="1"/><text x="3.4732%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.2232%" y="549" width="0.0806%" height="15" fill="rgb(231,215,16)" fg:x="40" fg:w="1"/><text x="3.4732%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="3.1426%" y="741" width="0.2417%" height="15" fill="rgb(239,151,54)" fg:x="39" fg:w="3"/><text x="3.3926%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="3.1426%" y="725" width="0.2417%" height="15" fill="rgb(222,122,38)" fg:x="39" fg:w="3"/><text x="3.3926%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="3.1426%" y="709" width="0.2417%" height="15" fill="rgb(243,128,1)" fg:x="39" fg:w="3"/><text x="3.3926%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="3.1426%" y="693" width="0.2417%" height="15" fill="rgb(225,74,21)" fg:x="39" fg:w="3"/><text x="3.3926%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="3.1426%" y="677" width="0.2417%" height="15" fill="rgb(216,210,10)" fg:x="39" fg:w="3"/><text x="3.3926%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.2232%" y="661" width="0.1612%" height="15" fill="rgb(228,76,19)" fg:x="40" fg:w="2"/><text x="3.4732%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.2232%" y="645" width="0.1612%" height="15" fill="rgb(236,80,34)" fg:x="40" fg:w="2"/><text x="3.4732%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="3.2232%" y="629" width="0.1612%" height="15" fill="rgb(225,173,23)" fg:x="40" fg:w="2"/><text x="3.4732%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.2232%" y="613" width="0.1612%" height="15" fill="rgb(253,38,1)" fg:x="40" fg:w="2"/><text x="3.4732%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="3.2232%" y="597" width="0.1612%" height="15" fill="rgb(206,155,35)" fg:x="40" fg:w="2"/><text x="3.4732%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="3.2232%" y="581" width="0.1612%" height="15" fill="rgb(254,27,53)" fg:x="40" fg:w="2"/><text x="3.4732%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.3038%" y="565" width="0.0806%" height="15" fill="rgb(225,52,41)" fg:x="41" fg:w="1"/><text x="3.5538%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.3038%" y="549" width="0.0806%" height="15" fill="rgb(244,53,18)" fg:x="41" fg:w="1"/><text x="3.5538%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.3038%" y="533" width="0.0806%" height="15" fill="rgb(254,206,48)" fg:x="41" fg:w="1"/><text x="3.5538%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.3844%" y="693" width="0.0806%" height="15" fill="rgb(236,182,23)" fg:x="42" fg:w="1"/><text x="3.6344%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.3844%" y="677" width="0.0806%" height="15" fill="rgb(236,191,37)" fg:x="42" fg:w="1"/><text x="3.6344%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="3.3844%" y="661" width="0.0806%" height="15" fill="rgb(245,53,8)" fg:x="42" fg:w="1"/><text x="3.6344%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.3844%" y="645" width="0.0806%" height="15" fill="rgb(245,147,9)" fg:x="42" fg:w="1"/><text x="3.6344%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="3.3844%" y="741" width="0.1612%" height="15" fill="rgb(218,24,48)" fg:x="42" fg:w="2"/><text x="3.6344%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="3.3844%" y="725" width="0.1612%" height="15" fill="rgb(254,23,9)" fg:x="42" fg:w="2"/><text x="3.6344%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="3.3844%" y="709" width="0.1612%" height="15" fill="rgb(244,105,9)" fg:x="42" fg:w="2"/><text x="3.6344%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.4649%" y="693" width="0.0806%" height="15" fill="rgb(212,142,22)" fg:x="43" fg:w="1"/><text x="3.7149%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.4649%" y="677" width="0.0806%" height="15" fill="rgb(221,114,49)" fg:x="43" fg:w="1"/><text x="3.7149%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.4649%" y="661" width="0.0806%" height="15" fill="rgb(223,210,25)" fg:x="43" fg:w="1"/><text x="3.7149%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.4649%" y="645" width="0.0806%" height="15" fill="rgb(235,162,44)" fg:x="43" fg:w="1"/><text x="3.7149%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="3.4649%" y="629" width="0.0806%" height="15" fill="rgb(237,65,45)" fg:x="43" fg:w="1"/><text x="3.7149%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.4649%" y="613" width="0.0806%" height="15" fill="rgb(208,79,9)" fg:x="43" fg:w="1"/><text x="3.7149%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="3.4649%" y="597" width="0.0806%" height="15" fill="rgb(215,228,8)" fg:x="43" fg:w="1"/><text x="3.7149%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="3.4649%" y="581" width="0.0806%" height="15" fill="rgb(205,185,17)" fg:x="43" fg:w="1"/><text x="3.7149%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="3.5455%" y="709" width="0.0806%" height="15" fill="rgb(213,62,36)" fg:x="44" fg:w="1"/><text x="3.7955%" y="719.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="3.5455%" y="741" width="0.1612%" height="15" fill="rgb(209,34,9)" fg:x="44" fg:w="2"/><text x="3.7955%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="3.5455%" y="725" width="0.1612%" height="15" fill="rgb(246,151,27)" fg:x="44" fg:w="2"/><text x="3.7955%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="3.6261%" y="709" width="0.0806%" height="15" fill="rgb(218,206,3)" fg:x="45" fg:w="1"/><text x="3.8761%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.08%)</title><rect x="3.6261%" y="693" width="0.0806%" height="15" fill="rgb(242,202,1)" fg:x="45" fg:w="1"/><text x="3.8761%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="3.6261%" y="677" width="0.0806%" height="15" fill="rgb(227,185,16)" fg:x="45" fg:w="1"/><text x="3.8761%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.7067%" y="661" width="0.0806%" height="15" fill="rgb(241,1,14)" fg:x="46" fg:w="1"/><text x="3.9567%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="3.7873%" y="629" width="0.0806%" height="15" fill="rgb(212,113,25)" fg:x="47" fg:w="1"/><text x="4.0373%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="3.9484%" y="533" width="0.0806%" height="15" fill="rgb(247,37,43)" fg:x="49" fg:w="1"/><text x="4.1984%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="3.8678%" y="613" width="0.2417%" height="15" fill="rgb(226,54,8)" fg:x="48" fg:w="3"/><text x="4.1178%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.24%)</title><rect x="3.8678%" y="597" width="0.2417%" height="15" fill="rgb(251,205,25)" fg:x="48" fg:w="3"/><text x="4.1178%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="3.8678%" y="581" width="0.2417%" height="15" fill="rgb(246,87,35)" fg:x="48" fg:w="3"/><text x="4.1178%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (3 samples, 0.24%)</title><rect x="3.8678%" y="565" width="0.2417%" height="15" fill="rgb(251,145,46)" fg:x="48" fg:w="3"/><text x="4.1178%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="3.9484%" y="549" width="0.1612%" height="15" fill="rgb(210,210,33)" fg:x="49" fg:w="2"/><text x="4.1984%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.0290%" y="533" width="0.0806%" height="15" fill="rgb(221,151,11)" fg:x="50" fg:w="1"/><text x="4.2790%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="4.0290%" y="517" width="0.0806%" height="15" fill="rgb(208,160,28)" fg:x="50" fg:w="1"/><text x="4.2790%" y="527.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="3.7067%" y="725" width="0.4835%" height="15" fill="rgb(243,69,29)" fg:x="46" fg:w="6"/><text x="3.9567%" y="735.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="3.7067%" y="709" width="0.4835%" height="15" fill="rgb(224,144,4)" fg:x="46" fg:w="6"/><text x="3.9567%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="3.7067%" y="693" width="0.4835%" height="15" fill="rgb(211,140,38)" fg:x="46" fg:w="6"/><text x="3.9567%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="3.7067%" y="677" width="0.4835%" height="15" fill="rgb(252,189,15)" fg:x="46" fg:w="6"/><text x="3.9567%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="3.7873%" y="661" width="0.4029%" height="15" fill="rgb(251,175,23)" fg:x="47" fg:w="5"/><text x="4.0373%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="3.7873%" y="645" width="0.4029%" height="15" fill="rgb(212,184,11)" fg:x="47" fg:w="5"/><text x="4.0373%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (4 samples, 0.32%)</title><rect x="3.8678%" y="629" width="0.3223%" height="15" fill="rgb(217,205,6)" fg:x="48" fg:w="4"/><text x="4.1178%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.1096%" y="613" width="0.0806%" height="15" fill="rgb(235,45,45)" fg:x="51" fg:w="1"/><text x="4.3596%" y="623.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.1096%" y="597" width="0.0806%" height="15" fill="rgb(211,157,53)" fg:x="51" fg:w="1"/><text x="4.3596%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.1096%" y="581" width="0.0806%" height="15" fill="rgb(212,13,8)" fg:x="51" fg:w="1"/><text x="4.3596%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.1096%" y="565" width="0.0806%" height="15" fill="rgb(218,80,36)" fg:x="51" fg:w="1"/><text x="4.3596%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.1096%" y="549" width="0.0806%" height="15" fill="rgb(211,123,43)" fg:x="51" fg:w="1"/><text x="4.3596%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.1096%" y="533" width="0.0806%" height="15" fill="rgb(206,165,2)" fg:x="51" fg:w="1"/><text x="4.3596%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.1096%" y="517" width="0.0806%" height="15" fill="rgb(248,63,35)" fg:x="51" fg:w="1"/><text x="4.3596%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.1096%" y="501" width="0.0806%" height="15" fill="rgb(219,133,41)" fg:x="51" fg:w="1"/><text x="4.3596%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.1096%" y="485" width="0.0806%" height="15" fill="rgb(206,175,46)" fg:x="51" fg:w="1"/><text x="4.3596%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.1096%" y="469" width="0.0806%" height="15" fill="rgb(224,41,35)" fg:x="51" fg:w="1"/><text x="4.3596%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.1096%" y="453" width="0.0806%" height="15" fill="rgb(226,113,24)" fg:x="51" fg:w="1"/><text x="4.3596%" y="463.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="4.1096%" y="437" width="0.0806%" height="15" fill="rgb(219,51,41)" fg:x="51" fg:w="1"/><text x="4.3596%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="4.1096%" y="421" width="0.0806%" height="15" fill="rgb(220,145,47)" fg:x="51" fg:w="1"/><text x="4.3596%" y="431.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.1096%" y="405" width="0.0806%" height="15" fill="rgb(239,121,47)" fg:x="51" fg:w="1"/><text x="4.3596%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.1096%" y="389" width="0.0806%" height="15" fill="rgb(207,60,40)" fg:x="51" fg:w="1"/><text x="4.3596%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="4.1096%" y="373" width="0.0806%" height="15" fill="rgb(224,229,11)" fg:x="51" fg:w="1"/><text x="4.3596%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (16 samples, 1.29%)</title><rect x="3.0620%" y="773" width="1.2893%" height="15" fill="rgb(252,28,32)" fg:x="38" fg:w="16"/><text x="3.3120%" y="783.50"></text></g><g><title>engine::internal::Entities::add_persisted (16 samples, 1.29%)</title><rect x="3.0620%" y="757" width="1.2893%" height="15" fill="rgb(207,52,49)" fg:x="38" fg:w="16"/><text x="3.3120%" y="767.50"></text></g><g><title>kernel::model::deserialize_entity (8 samples, 0.64%)</title><rect x="3.7067%" y="741" width="0.6446%" height="15" fill="rgb(243,51,50)" fg:x="46" fg:w="8"/><text x="3.9567%" y="751.50"></text></g><g><title>serde_json::de::from_trait (2 samples, 0.16%)</title><rect x="4.1902%" y="725" width="0.1612%" height="15" fill="rgb(212,92,21)" fg:x="52" fg:w="2"/><text x="4.4402%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="4.1902%" y="709" width="0.1612%" height="15" fill="rgb(230,183,50)" fg:x="52" fg:w="2"/><text x="4.4402%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.1902%" y="693" width="0.1612%" height="15" fill="rgb(225,48,9)" fg:x="52" fg:w="2"/><text x="4.4402%" y="703.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="4.1902%" y="677" width="0.1612%" height="15" fill="rgb(254,44,4)" fg:x="52" fg:w="2"/><text x="4.4402%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.1902%" y="661" width="0.1612%" height="15" fill="rgb(252,128,37)" fg:x="52" fg:w="2"/><text x="4.4402%" y="671.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="4.1902%" y="645" width="0.1612%" height="15" fill="rgb(227,178,8)" fg:x="52" fg:w="2"/><text x="4.4402%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.1902%" y="629" width="0.1612%" height="15" fill="rgb(205,206,32)" fg:x="52" fg:w="2"/><text x="4.4402%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="4.1902%" y="613" width="0.1612%" height="15" fill="rgb(220,218,22)" fg:x="52" fg:w="2"/><text x="4.4402%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="4.1902%" y="597" width="0.1612%" height="15" fill="rgb(236,41,28)" fg:x="52" fg:w="2"/><text x="4.4402%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="4.2707%" y="581" width="0.0806%" height="15" fill="rgb(219,37,7)" fg:x="53" fg:w="1"/><text x="4.5207%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2707%" y="565" width="0.0806%" height="15" fill="rgb(206,160,15)" fg:x="53" fg:w="1"/><text x="4.5207%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="4.2707%" y="549" width="0.0806%" height="15" fill="rgb(208,82,21)" fg:x="53" fg:w="1"/><text x="4.5207%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="4.2707%" y="533" width="0.0806%" height="15" fill="rgb(226,130,25)" fg:x="53" fg:w="1"/><text x="4.5207%" y="543.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="4.2707%" y="517" width="0.0806%" height="15" fill="rgb(212,72,24)" fg:x="53" fg:w="1"/><text x="4.5207%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.2707%" y="501" width="0.0806%" height="15" fill="rgb(206,28,16)" fg:x="53" fg:w="1"/><text x="4.5207%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (18 samples, 1.45%)</title><rect x="3.0620%" y="789" width="1.4504%" height="15" fill="rgb(249,41,5)" fg:x="38" fg:w="18"/><text x="3.3120%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="4.3513%" y="773" width="0.1612%" height="15" fill="rgb(233,96,48)" fg:x="54" fg:w="2"/><text x="4.6013%" y="783.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="4.3513%" y="757" width="0.1612%" height="15" fill="rgb(240,198,11)" fg:x="54" fg:w="2"/><text x="4.6013%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="4.3513%" y="741" width="0.1612%" height="15" fill="rgb(209,175,35)" fg:x="54" fg:w="2"/><text x="4.6013%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.3513%" y="725" width="0.1612%" height="15" fill="rgb(214,40,51)" fg:x="54" fg:w="2"/><text x="4.6013%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="4.3513%" y="709" width="0.1612%" height="15" fill="rgb(252,56,4)" fg:x="54" fg:w="2"/><text x="4.6013%" y="719.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="4.3513%" y="693" width="0.1612%" height="15" fill="rgb(219,131,5)" fg:x="54" fg:w="2"/><text x="4.6013%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="4.3513%" y="677" width="0.1612%" height="15" fill="rgb(223,67,53)" fg:x="54" fg:w="2"/><text x="4.6013%" y="687.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="4.3513%" y="661" width="0.1612%" height="15" fill="rgb(227,154,8)" fg:x="54" fg:w="2"/><text x="4.6013%" y="671.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="4.3513%" y="645" width="0.1612%" height="15" fill="rgb(216,174,51)" fg:x="54" fg:w="2"/><text x="4.6013%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.3513%" y="629" width="0.1612%" height="15" fill="rgb(239,60,34)" fg:x="54" fg:w="2"/><text x="4.6013%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="4.3513%" y="613" width="0.1612%" height="15" fill="rgb(236,165,48)" fg:x="54" fg:w="2"/><text x="4.6013%" y="623.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.16%)</title><rect x="4.3513%" y="597" width="0.1612%" height="15" fill="rgb(210,37,26)" fg:x="54" fg:w="2"/><text x="4.6013%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.16%)</title><rect x="4.3513%" y="581" width="0.1612%" height="15" fill="rgb(211,3,17)" fg:x="54" fg:w="2"/><text x="4.6013%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.16%)</title><rect x="4.3513%" y="565" width="0.1612%" height="15" fill="rgb(234,88,49)" fg:x="54" fg:w="2"/><text x="4.6013%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.16%)</title><rect x="4.3513%" y="549" width="0.1612%" height="15" fill="rgb(233,40,17)" fg:x="54" fg:w="2"/><text x="4.6013%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.3513%" y="533" width="0.1612%" height="15" fill="rgb(235,127,31)" fg:x="54" fg:w="2"/><text x="4.6013%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.16%)</title><rect x="4.3513%" y="517" width="0.1612%" height="15" fill="rgb(248,167,17)" fg:x="54" fg:w="2"/><text x="4.6013%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="4.3513%" y="501" width="0.1612%" height="15" fill="rgb(218,179,8)" fg:x="54" fg:w="2"/><text x="4.6013%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.16%)</title><rect x="4.3513%" y="485" width="0.1612%" height="15" fill="rgb(216,92,14)" fg:x="54" fg:w="2"/><text x="4.6013%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="4.3513%" y="469" width="0.1612%" height="15" fill="rgb(221,198,46)" fg:x="54" fg:w="2"/><text x="4.6013%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.16%)</title><rect x="4.3513%" y="453" width="0.1612%" height="15" fill="rgb(244,7,25)" fg:x="54" fg:w="2"/><text x="4.6013%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.16%)</title><rect x="4.3513%" y="437" width="0.1612%" height="15" fill="rgb(233,75,6)" fg:x="54" fg:w="2"/><text x="4.6013%" y="447.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.16%)</title><rect x="4.3513%" y="421" width="0.1612%" height="15" fill="rgb(240,189,41)" fg:x="54" fg:w="2"/><text x="4.6013%" y="431.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="4.3513%" y="405" width="0.1612%" height="15" fill="rgb(237,157,21)" fg:x="54" fg:w="2"/><text x="4.6013%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="4.5125%" y="789" width="0.0806%" height="15" fill="rgb(210,136,49)" fg:x="56" fg:w="1"/><text x="4.7625%" y="799.50"></text></g><g><title>engine::identifiers::model::get_gid (1 samples, 0.08%)</title><rect x="4.5931%" y="789" width="0.0806%" height="15" fill="rgb(210,68,29)" fg:x="57" fg:w="1"/><text x="4.8431%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="4.5931%" y="773" width="0.0806%" height="15" fill="rgb(247,207,20)" fg:x="57" fg:w="1"/><text x="4.8431%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="4.5931%" y="757" width="0.0806%" height="15" fill="rgb(224,73,48)" fg:x="57" fg:w="1"/><text x="4.8431%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="4.5931%" y="741" width="0.0806%" height="15" fill="rgb(215,136,47)" fg:x="57" fg:w="1"/><text x="4.8431%" y="751.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPluginFactory as kernel::plugins::PluginFactory&gt;::create_plugin (1 samples, 0.08%)</title><rect x="4.6737%" y="741" width="0.0806%" height="15" fill="rgb(232,222,16)" fg:x="58" fg:w="1"/><text x="4.9237%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.6737%" y="725" width="0.0806%" height="15" fill="rgb(249,202,47)" fg:x="58" fg:w="1"/><text x="4.9237%" y="735.50"></text></g><g><title>kernel::plugins::RegisteredPlugins::create_plugins (2 samples, 0.16%)</title><rect x="4.6737%" y="789" width="0.1612%" height="15" fill="rgb(236,56,8)" fg:x="58" fg:w="2"/><text x="4.9237%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="4.6737%" y="773" width="0.1612%" height="15" fill="rgb(222,6,3)" fg:x="58" fg:w="2"/><text x="4.9237%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="4.6737%" y="757" width="0.1612%" height="15" fill="rgb(254,222,28)" fg:x="58" fg:w="2"/><text x="4.9237%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="4.7542%" y="741" width="0.0806%" height="15" fill="rgb(219,57,23)" fg:x="59" fg:w="1"/><text x="5.0042%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="4.7542%" y="725" width="0.0806%" height="15" fill="rgb(251,106,48)" fg:x="59" fg:w="1"/><text x="5.0042%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="4.7542%" y="709" width="0.0806%" height="15" fill="rgb(242,2,23)" fg:x="59" fg:w="1"/><text x="5.0042%" y="719.50"></text></g><g><title>libloading::library_filename (1 samples, 0.08%)</title><rect x="4.9154%" y="757" width="0.0806%" height="15" fill="rgb(212,109,31)" fg:x="61" fg:w="1"/><text x="5.1654%" y="767.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="4.9960%" y="741" width="0.0806%" height="15" fill="rgb(241,9,22)" fg:x="62" fg:w="1"/><text x="5.2460%" y="751.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="4.9960%" y="725" width="0.0806%" height="15" fill="rgb(209,64,27)" fg:x="62" fg:w="1"/><text x="5.2460%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="4.9960%" y="709" width="0.0806%" height="15" fill="rgb(248,13,44)" fg:x="62" fg:w="1"/><text x="5.2460%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="4.9960%" y="693" width="0.0806%" height="15" fill="rgb(213,86,6)" fg:x="62" fg:w="1"/><text x="5.2460%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="4.9960%" y="677" width="0.0806%" height="15" fill="rgb(247,11,18)" fg:x="62" fg:w="1"/><text x="5.2460%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="4.9960%" y="661" width="0.0806%" height="15" fill="rgb(252,31,11)" fg:x="62" fg:w="1"/><text x="5.2460%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="4.9960%" y="645" width="0.0806%" height="15" fill="rgb(215,63,51)" fg:x="62" fg:w="1"/><text x="5.2460%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="4.9960%" y="629" width="0.0806%" height="15" fill="rgb(222,180,4)" fg:x="62" fg:w="1"/><text x="5.2460%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="4.9960%" y="613" width="0.0806%" height="15" fill="rgb(233,4,23)" fg:x="62" fg:w="1"/><text x="5.2460%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="4.9960%" y="597" width="0.0806%" height="15" fill="rgb(230,116,22)" fg:x="62" fg:w="1"/><text x="5.2460%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="4.9960%" y="581" width="0.0806%" height="15" fill="rgb(222,20,14)" fg:x="62" fg:w="1"/><text x="5.2460%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="4.9960%" y="565" width="0.0806%" height="15" fill="rgb(210,176,43)" fg:x="62" fg:w="1"/><text x="5.2460%" y="575.50"></text></g><g><title>_IO_default_xsputn (1 samples, 0.08%)</title><rect x="5.3183%" y="709" width="0.0806%" height="15" fill="rgb(219,67,32)" fg:x="66" fg:w="1"/><text x="5.5683%" y="719.50"></text></g><g><title>dlerror (5 samples, 0.40%)</title><rect x="5.0766%" y="741" width="0.4029%" height="15" fill="rgb(228,91,39)" fg:x="63" fg:w="5"/><text x="5.3266%" y="751.50"></text></g><g><title>__asprintf (5 samples, 0.40%)</title><rect x="5.0766%" y="725" width="0.4029%" height="15" fill="rgb(254,63,14)" fg:x="63" fg:w="5"/><text x="5.3266%" y="735.50"></text></g><g><title>_IO_setb (1 samples, 0.08%)</title><rect x="5.3989%" y="709" width="0.0806%" height="15" fill="rgb(216,171,39)" fg:x="67" fg:w="1"/><text x="5.6489%" y="719.50"></text></g><g><title>libloading::os::unix::Library::open (19 samples, 1.53%)</title><rect x="4.9960%" y="757" width="1.5310%" height="15" fill="rgb(248,68,25)" fg:x="62" fg:w="19"/><text x="5.2460%" y="767.50"></text></g><g><title>dlopen (13 samples, 1.05%)</title><rect x="5.4795%" y="741" width="1.0475%" height="15" fill="rgb(239,63,16)" fg:x="68" fg:w="13"/><text x="5.7295%" y="751.50"></text></g><g><title>_dl_catch_error (13 samples, 1.05%)</title><rect x="5.4795%" y="725" width="1.0475%" height="15" fill="rgb(225,111,43)" fg:x="68" fg:w="13"/><text x="5.7295%" y="735.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.05%)</title><rect x="5.4795%" y="709" width="1.0475%" height="15" fill="rgb(246,165,17)" fg:x="68" fg:w="13"/><text x="5.7295%" y="719.50"></text></g><g><title>_dl_catch_exception (13 samples, 1.05%)</title><rect x="5.4795%" y="693" width="1.0475%" height="15" fill="rgb(208,124,1)" fg:x="68" fg:w="13"/><text x="5.7295%" y="703.50"></text></g><g><title>_dl_catch_exception (12 samples, 0.97%)</title><rect x="5.5600%" y="677" width="0.9670%" height="15" fill="rgb(234,147,33)" fg:x="69" fg:w="12"/><text x="5.8100%" y="687.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (21 samples, 1.69%)</title><rect x="4.9154%" y="773" width="1.6922%" height="15" fill="rgb(240,86,30)" fg:x="61" fg:w="21"/><text x="5.1654%" y="783.50"></text></g><g><title>std::sys::unix::os_str::Slice::to_string_lossy (1 samples, 0.08%)</title><rect x="6.5270%" y="757" width="0.0806%" height="15" fill="rgb(237,34,51)" fg:x="81" fg:w="1"/><text x="6.7770%" y="767.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.08%)</title><rect x="6.5270%" y="741" width="0.0806%" height="15" fill="rgb(232,131,41)" fg:x="81" fg:w="1"/><text x="6.7770%" y="751.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="6.5270%" y="725" width="0.0806%" height="15" fill="rgb(227,129,53)" fg:x="81" fg:w="1"/><text x="6.7770%" y="735.50"></text></g><g><title>clock_getres (1 samples, 0.08%)</title><rect x="6.6076%" y="757" width="0.0806%" height="15" fill="rgb(230,90,35)" fg:x="82" fg:w="1"/><text x="6.8576%" y="767.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (24 samples, 1.93%)</title><rect x="4.8348%" y="789" width="1.9339%" height="15" fill="rgb(248,88,27)" fg:x="60" fg:w="24"/><text x="5.0848%" y="799.50">k..</text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (2 samples, 0.16%)</title><rect x="6.6076%" y="773" width="0.1612%" height="15" fill="rgb(223,18,17)" fg:x="82" fg:w="2"/><text x="6.8576%" y="783.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="6.6882%" y="757" width="0.0806%" height="15" fill="rgb(241,11,10)" fg:x="83" fg:w="1"/><text x="6.9382%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.7687%" y="773" width="0.0806%" height="15" fill="rgb(232,111,52)" fg:x="84" fg:w="1"/><text x="7.0187%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="6.7687%" y="757" width="0.0806%" height="15" fill="rgb(228,67,8)" fg:x="84" fg:w="1"/><text x="7.0187%" y="767.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (51 samples, 4.11%)</title><rect x="2.8203%" y="821" width="4.1096%" height="15" fill="rgb(251,168,31)" fg:x="35" fg:w="51"/><text x="3.0703%" y="831.50">&lt;eng..</text></g><g><title>engine::session::Session::new (51 samples, 4.11%)</title><rect x="2.8203%" y="805" width="4.1096%" height="15" fill="rgb(249,164,11)" fg:x="35" fg:w="51"/><text x="3.0703%" y="815.50">engi..</text></g><g><title>kernel::plugins::SessionPlugins::middleware (2 samples, 0.16%)</title><rect x="6.7687%" y="789" width="0.1612%" height="15" fill="rgb(239,81,9)" fg:x="84" fg:w="2"/><text x="7.0187%" y="799.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="6.8493%" y="773" width="0.0806%" height="15" fill="rgb(222,145,38)" fg:x="85" fg:w="1"/><text x="7.0993%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="6.8493%" y="757" width="0.0806%" height="15" fill="rgb(238,80,54)" fg:x="85" fg:w="1"/><text x="7.0993%" y="767.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::middleware (1 samples, 0.08%)</title><rect x="6.8493%" y="741" width="0.0806%" height="15" fill="rgb(237,116,16)" fg:x="85" fg:w="1"/><text x="7.0993%" y="751.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="6.8493%" y="725" width="0.0806%" height="15" fill="rgb(218,135,19)" fg:x="85" fg:w="1"/><text x="7.0993%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="6.9299%" y="805" width="0.1612%" height="15" fill="rgb(216,207,44)" fg:x="86" fg:w="2"/><text x="7.1799%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;kernel::model::entity::EntityRef&gt;&gt; (2 samples, 0.16%)</title><rect x="6.9299%" y="789" width="0.1612%" height="15" fill="rgb(226,152,40)" fg:x="86" fg:w="2"/><text x="7.1799%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.0105%" y="773" width="0.0806%" height="15" fill="rgb(219,98,35)" fg:x="87" fg:w="1"/><text x="7.2605%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.1716%" y="773" width="0.1612%" height="15" fill="rgb(222,136,46)" fg:x="89" fg:w="2"/><text x="7.4216%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="7.2522%" y="757" width="0.0806%" height="15" fill="rgb(222,71,8)" fg:x="90" fg:w="1"/><text x="7.5022%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.2522%" y="741" width="0.0806%" height="15" fill="rgb(209,89,53)" fg:x="90" fg:w="1"/><text x="7.5022%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.3328%" y="757" width="0.0806%" height="15" fill="rgb(210,97,51)" fg:x="91" fg:w="1"/><text x="7.5828%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="7.3328%" y="773" width="0.1612%" height="15" fill="rgb(248,65,21)" fg:x="91" fg:w="2"/><text x="7.5828%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="7.4134%" y="757" width="0.0806%" height="15" fill="rgb(222,5,31)" fg:x="92" fg:w="1"/><text x="7.6634%" y="767.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="7.4940%" y="741" width="0.0806%" height="15" fill="rgb(241,16,30)" fg:x="93" fg:w="1"/><text x="7.7440%" y="751.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="7.4940%" y="773" width="0.1612%" height="15" fill="rgb(215,86,30)" fg:x="93" fg:w="2"/><text x="7.7440%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="7.4940%" y="757" width="0.1612%" height="15" fill="rgb(235,26,44)" fg:x="93" fg:w="2"/><text x="7.7440%" y="767.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="7.5745%" y="741" width="0.0806%" height="15" fill="rgb(228,147,14)" fg:x="94" fg:w="1"/><text x="7.8245%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="7.5745%" y="725" width="0.0806%" height="15" fill="rgb(253,38,50)" fg:x="94" fg:w="1"/><text x="7.8245%" y="735.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="7.6551%" y="725" width="0.0806%" height="15" fill="rgb(251,151,16)" fg:x="95" fg:w="1"/><text x="7.9051%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="7.6551%" y="709" width="0.0806%" height="15" fill="rgb(224,64,19)" fg:x="95" fg:w="1"/><text x="7.9051%" y="719.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="7.6551%" y="773" width="0.1612%" height="15" fill="rgb(235,214,47)" fg:x="95" fg:w="2"/><text x="7.9051%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="7.6551%" y="757" width="0.1612%" height="15" fill="rgb(218,15,19)" fg:x="95" fg:w="2"/><text x="7.9051%" y="767.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="7.6551%" y="741" width="0.1612%" height="15" fill="rgb(247,209,3)" fg:x="95" fg:w="2"/><text x="7.9051%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.7357%" y="725" width="0.0806%" height="15" fill="rgb(217,29,2)" fg:x="96" fg:w="1"/><text x="7.9857%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="7.7357%" y="709" width="0.0806%" height="15" fill="rgb(234,9,9)" fg:x="96" fg:w="1"/><text x="7.9857%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="7.7357%" y="693" width="0.0806%" height="15" fill="rgb(207,43,14)" fg:x="96" fg:w="1"/><text x="7.9857%" y="703.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="7.9774%" y="741" width="0.0806%" height="15" fill="rgb(216,219,36)" fg:x="99" fg:w="1"/><text x="8.2274%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="7.9774%" y="725" width="0.0806%" height="15" fill="rgb(238,12,26)" fg:x="99" fg:w="1"/><text x="8.2274%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="7.9774%" y="709" width="0.0806%" height="15" fill="rgb(226,67,30)" fg:x="99" fg:w="1"/><text x="8.2274%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="7.9774%" y="693" width="0.0806%" height="15" fill="rgb(229,154,7)" fg:x="99" fg:w="1"/><text x="8.2274%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.1386%" y="709" width="0.1612%" height="15" fill="rgb(249,90,18)" fg:x="101" fg:w="2"/><text x="8.3886%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2192%" y="693" width="0.0806%" height="15" fill="rgb(223,53,15)" fg:x="102" fg:w="1"/><text x="8.4692%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2192%" y="677" width="0.0806%" height="15" fill="rgb(253,86,38)" fg:x="102" fg:w="1"/><text x="8.4692%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2192%" y="661" width="0.0806%" height="15" fill="rgb(222,198,9)" fg:x="102" fg:w="1"/><text x="8.4692%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="8.1386%" y="725" width="0.2417%" height="15" fill="rgb(240,146,25)" fg:x="101" fg:w="3"/><text x="8.3886%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.2998%" y="709" width="0.0806%" height="15" fill="rgb(225,38,10)" fg:x="103" fg:w="1"/><text x="8.5498%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.2998%" y="693" width="0.0806%" height="15" fill="rgb(246,93,4)" fg:x="103" fg:w="1"/><text x="8.5498%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.2998%" y="677" width="0.0806%" height="15" fill="rgb(222,55,18)" fg:x="103" fg:w="1"/><text x="8.5498%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="8.4609%" y="709" width="0.0806%" height="15" fill="rgb(233,137,48)" fg:x="105" fg:w="1"/><text x="8.7109%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.5415%" y="709" width="0.1612%" height="15" fill="rgb(214,8,54)" fg:x="106" fg:w="2"/><text x="8.7915%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.5415%" y="693" width="0.1612%" height="15" fill="rgb(206,75,4)" fg:x="106" fg:w="2"/><text x="8.7915%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="8.5415%" y="677" width="0.1612%" height="15" fill="rgb(238,171,14)" fg:x="106" fg:w="2"/><text x="8.7915%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.6221%" y="661" width="0.0806%" height="15" fill="rgb(233,70,41)" fg:x="107" fg:w="1"/><text x="8.8721%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="8.7832%" y="693" width="0.0806%" height="15" fill="rgb(214,68,36)" fg:x="109" fg:w="1"/><text x="9.0332%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="8.7832%" y="677" width="0.0806%" height="15" fill="rgb(223,29,5)" fg:x="109" fg:w="1"/><text x="9.0332%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="8.7832%" y="661" width="0.0806%" height="15" fill="rgb(251,22,40)" fg:x="109" fg:w="1"/><text x="9.0332%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="8.7832%" y="645" width="0.0806%" height="15" fill="rgb(210,67,41)" fg:x="109" fg:w="1"/><text x="9.0332%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.7832%" y="629" width="0.0806%" height="15" fill="rgb(225,177,31)" fg:x="109" fg:w="1"/><text x="9.0332%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.7832%" y="613" width="0.0806%" height="15" fill="rgb(221,229,11)" fg:x="109" fg:w="1"/><text x="9.0332%" y="623.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="8.8638%" y="693" width="0.1612%" height="15" fill="rgb(247,172,52)" fg:x="110" fg:w="2"/><text x="9.1138%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="8.8638%" y="677" width="0.1612%" height="15" fill="rgb(212,73,19)" fg:x="110" fg:w="2"/><text x="9.1138%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="8.9444%" y="661" width="0.0806%" height="15" fill="rgb(244,7,46)" fg:x="111" fg:w="1"/><text x="9.1944%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="8.9444%" y="645" width="0.0806%" height="15" fill="rgb(230,113,20)" fg:x="111" fg:w="1"/><text x="9.1944%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="9.0250%" y="677" width="0.2417%" height="15" fill="rgb(209,97,30)" fg:x="112" fg:w="3"/><text x="9.2750%" y="687.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="9.0250%" y="661" width="0.2417%" height="15" fill="rgb(243,89,12)" fg:x="112" fg:w="3"/><text x="9.2750%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.2667%" y="661" width="0.0806%" height="15" fill="rgb(228,32,19)" fg:x="115" fg:w="1"/><text x="9.5167%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="9.3473%" y="645" width="0.1612%" height="15" fill="rgb(248,25,17)" fg:x="116" fg:w="2"/><text x="9.5973%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.3473%" y="629" width="0.1612%" height="15" fill="rgb(232,161,29)" fg:x="116" fg:w="2"/><text x="9.5973%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.4279%" y="613" width="0.0806%" height="15" fill="rgb(251,192,11)" fg:x="117" fg:w="1"/><text x="9.6779%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.4279%" y="597" width="0.0806%" height="15" fill="rgb(240,47,32)" fg:x="117" fg:w="1"/><text x="9.6779%" y="607.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="9.5085%" y="629" width="0.0806%" height="15" fill="rgb(250,16,45)" fg:x="118" fg:w="1"/><text x="9.7585%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="9.3473%" y="661" width="0.3223%" height="15" fill="rgb(227,217,42)" fg:x="116" fg:w="4"/><text x="9.5973%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="9.5085%" y="645" width="0.1612%" height="15" fill="rgb(206,82,54)" fg:x="118" fg:w="2"/><text x="9.7585%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="9.5890%" y="629" width="0.0806%" height="15" fill="rgb(243,145,25)" fg:x="119" fg:w="1"/><text x="9.8390%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="9.5890%" y="613" width="0.0806%" height="15" fill="rgb(207,166,24)" fg:x="119" fg:w="1"/><text x="9.8390%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="9.2667%" y="677" width="0.5641%" height="15" fill="rgb(215,191,44)" fg:x="115" fg:w="7"/><text x="9.5167%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.6696%" y="661" width="0.1612%" height="15" fill="rgb(234,218,51)" fg:x="120" fg:w="2"/><text x="9.9196%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (16 samples, 1.29%)</title><rect x="8.7027%" y="709" width="1.2893%" height="15" fill="rgb(245,133,21)" fg:x="108" fg:w="16"/><text x="8.9527%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="9.0250%" y="693" width="0.9670%" height="15" fill="rgb(230,136,45)" fg:x="112" fg:w="12"/><text x="9.2750%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="9.8308%" y="677" width="0.1612%" height="15" fill="rgb(247,63,43)" fg:x="122" fg:w="2"/><text x="10.0808%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="9.9114%" y="661" width="0.0806%" height="15" fill="rgb(254,223,31)" fg:x="123" fg:w="1"/><text x="10.1614%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="9.9114%" y="645" width="0.0806%" height="15" fill="rgb(236,185,0)" fg:x="123" fg:w="1"/><text x="10.1614%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (30 samples, 2.42%)</title><rect x="8.0580%" y="741" width="2.4174%" height="15" fill="rgb(231,139,46)" fg:x="100" fg:w="30"/><text x="8.3080%" y="751.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (26 samples, 2.10%)</title><rect x="8.3803%" y="725" width="2.0951%" height="15" fill="rgb(236,147,31)" fg:x="104" fg:w="26"/><text x="8.6303%" y="735.50">s..</text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="9.9919%" y="709" width="0.4835%" height="15" fill="rgb(225,222,22)" fg:x="124" fg:w="6"/><text x="10.2419%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (5 samples, 0.40%)</title><rect x="10.0725%" y="693" width="0.4029%" height="15" fill="rgb(225,193,14)" fg:x="125" fg:w="5"/><text x="10.3225%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="10.1531%" y="677" width="0.3223%" height="15" fill="rgb(253,193,46)" fg:x="126" fg:w="4"/><text x="10.4031%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.24%)</title><rect x="10.2337%" y="661" width="0.2417%" height="15" fill="rgb(218,187,39)" fg:x="127" fg:w="3"/><text x="10.4837%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.24%)</title><rect x="10.2337%" y="645" width="0.2417%" height="15" fill="rgb(227,162,48)" fg:x="127" fg:w="3"/><text x="10.4837%" y="655.50"></text></g><g><title>realloc (3 samples, 0.24%)</title><rect x="10.2337%" y="629" width="0.2417%" height="15" fill="rgb(222,25,5)" fg:x="127" fg:w="3"/><text x="10.4837%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.4754%" y="709" width="0.0806%" height="15" fill="rgb(211,205,16)" fg:x="130" fg:w="1"/><text x="10.7254%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.5560%" y="693" width="0.0806%" height="15" fill="rgb(244,191,2)" fg:x="131" fg:w="1"/><text x="10.8060%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (3 samples, 0.24%)</title><rect x="10.6366%" y="693" width="0.2417%" height="15" fill="rgb(248,159,12)" fg:x="132" fg:w="3"/><text x="10.8866%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.7977%" y="677" width="0.0806%" height="15" fill="rgb(235,204,17)" fg:x="134" fg:w="1"/><text x="11.0477%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.8783%" y="677" width="0.0806%" height="15" fill="rgb(240,21,27)" fg:x="135" fg:w="1"/><text x="11.1283%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="10.9589%" y="677" width="0.0806%" height="15" fill="rgb(224,170,31)" fg:x="136" fg:w="1"/><text x="11.2089%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="10.9589%" y="661" width="0.0806%" height="15" fill="rgb(223,145,32)" fg:x="136" fg:w="1"/><text x="11.2089%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.0395%" y="661" width="0.0806%" height="15" fill="rgb(243,100,5)" fg:x="137" fg:w="1"/><text x="11.2895%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.0395%" y="645" width="0.0806%" height="15" fill="rgb(242,131,51)" fg:x="137" fg:w="1"/><text x="11.2895%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="11.1201%" y="661" width="0.0806%" height="15" fill="rgb(223,156,46)" fg:x="138" fg:w="1"/><text x="11.3701%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="11.1201%" y="645" width="0.0806%" height="15" fill="rgb(215,10,40)" fg:x="138" fg:w="1"/><text x="11.3701%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.1201%" y="629" width="0.0806%" height="15" fill="rgb(233,155,0)" fg:x="138" fg:w="1"/><text x="11.3701%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="11.2006%" y="629" width="0.1612%" height="15" fill="rgb(247,78,6)" fg:x="139" fg:w="2"/><text x="11.4506%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="10.4754%" y="741" width="0.9670%" height="15" fill="rgb(237,217,21)" fg:x="130" fg:w="12"/><text x="10.7254%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="10.4754%" y="725" width="0.9670%" height="15" fill="rgb(212,1,21)" fg:x="130" fg:w="12"/><text x="10.7254%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="10.5560%" y="709" width="0.8864%" height="15" fill="rgb(213,7,14)" fg:x="131" fg:w="11"/><text x="10.8060%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (7 samples, 0.56%)</title><rect x="10.8783%" y="693" width="0.5641%" height="15" fill="rgb(225,84,14)" fg:x="135" fg:w="7"/><text x="11.1283%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="11.0395%" y="677" width="0.4029%" height="15" fill="rgb(239,216,39)" fg:x="137" fg:w="5"/><text x="11.2895%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.2006%" y="661" width="0.2417%" height="15" fill="rgb(253,29,23)" fg:x="139" fg:w="3"/><text x="11.4506%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="11.2006%" y="645" width="0.2417%" height="15" fill="rgb(220,167,50)" fg:x="139" fg:w="3"/><text x="11.4506%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="11.3618%" y="629" width="0.0806%" height="15" fill="rgb(232,141,1)" fg:x="141" fg:w="1"/><text x="11.6118%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="11.3618%" y="613" width="0.0806%" height="15" fill="rgb(222,210,1)" fg:x="141" fg:w="1"/><text x="11.6118%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="11.3618%" y="597" width="0.0806%" height="15" fill="rgb(219,84,10)" fg:x="141" fg:w="1"/><text x="11.6118%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="11.4424%" y="725" width="0.0806%" height="15" fill="rgb(245,188,6)" fg:x="142" fg:w="1"/><text x="11.6924%" y="735.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="11.4424%" y="709" width="0.0806%" height="15" fill="rgb(252,139,39)" fg:x="142" fg:w="1"/><text x="11.6924%" y="719.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="11.4424%" y="693" width="0.0806%" height="15" fill="rgb(218,42,26)" fg:x="142" fg:w="1"/><text x="11.6924%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.4424%" y="677" width="0.0806%" height="15" fill="rgb(237,226,51)" fg:x="142" fg:w="1"/><text x="11.6924%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="11.5230%" y="693" width="0.1612%" height="15" fill="rgb(246,15,17)" fg:x="143" fg:w="2"/><text x="11.7730%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="11.6035%" y="677" width="0.0806%" height="15" fill="rgb(228,170,42)" fg:x="144" fg:w="1"/><text x="11.8535%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="11.6035%" y="661" width="0.0806%" height="15" fill="rgb(248,118,53)" fg:x="144" fg:w="1"/><text x="11.8535%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="11.6841%" y="693" width="0.0806%" height="15" fill="rgb(207,30,10)" fg:x="145" fg:w="1"/><text x="11.9341%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="11.6841%" y="677" width="0.0806%" height="15" fill="rgb(217,104,38)" fg:x="145" fg:w="1"/><text x="11.9341%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="11.6841%" y="661" width="0.0806%" height="15" fill="rgb(211,165,26)" fg:x="145" fg:w="1"/><text x="11.9341%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="11.7647%" y="693" width="0.2417%" height="15" fill="rgb(247,38,9)" fg:x="146" fg:w="3"/><text x="12.0147%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="11.7647%" y="677" width="0.2417%" height="15" fill="rgb(218,187,8)" fg:x="146" fg:w="3"/><text x="12.0147%" y="687.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="11.8453%" y="661" width="0.1612%" height="15" fill="rgb(247,94,28)" fg:x="147" fg:w="2"/><text x="12.0953%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="12.0870%" y="661" width="0.0806%" height="15" fill="rgb(218,173,30)" fg:x="150" fg:w="1"/><text x="12.3370%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="12.1676%" y="661" width="0.0806%" height="15" fill="rgb(245,45,36)" fg:x="151" fg:w="1"/><text x="12.4176%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.4093%" y="613" width="0.0806%" height="15" fill="rgb(221,172,44)" fg:x="154" fg:w="1"/><text x="12.6593%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4093%" y="597" width="0.0806%" height="15" fill="rgb(222,45,12)" fg:x="154" fg:w="1"/><text x="12.6593%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.4093%" y="581" width="0.0806%" height="15" fill="rgb(250,10,22)" fg:x="154" fg:w="1"/><text x="12.6593%" y="591.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="12.4093%" y="565" width="0.0806%" height="15" fill="rgb(239,27,0)" fg:x="154" fg:w="1"/><text x="12.6593%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="12.4093%" y="645" width="0.1612%" height="15" fill="rgb(223,118,22)" fg:x="154" fg:w="2"/><text x="12.6593%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="12.4093%" y="629" width="0.1612%" height="15" fill="rgb(251,81,25)" fg:x="154" fg:w="2"/><text x="12.6593%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.4899%" y="613" width="0.0806%" height="15" fill="rgb(237,225,53)" fg:x="155" fg:w="1"/><text x="12.7399%" y="623.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6511%" y="613" width="0.0806%" height="15" fill="rgb(237,186,51)" fg:x="157" fg:w="1"/><text x="12.9011%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.6511%" y="597" width="0.0806%" height="15" fill="rgb(247,209,11)" fg:x="157" fg:w="1"/><text x="12.9011%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.6511%" y="581" width="0.0806%" height="15" fill="rgb(223,109,27)" fg:x="157" fg:w="1"/><text x="12.9011%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8122%" y="549" width="0.0806%" height="15" fill="rgb(246,181,13)" fg:x="159" fg:w="1"/><text x="13.0622%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8122%" y="533" width="0.0806%" height="15" fill="rgb(234,57,44)" fg:x="159" fg:w="1"/><text x="13.0622%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8122%" y="517" width="0.0806%" height="15" fill="rgb(211,227,50)" fg:x="159" fg:w="1"/><text x="13.0622%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="12.8122%" y="565" width="0.1612%" height="15" fill="rgb(254,57,34)" fg:x="159" fg:w="2"/><text x="13.0622%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="12.8928%" y="549" width="0.0806%" height="15" fill="rgb(227,212,26)" fg:x="160" fg:w="1"/><text x="13.1428%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="12.8928%" y="533" width="0.0806%" height="15" fill="rgb(244,169,44)" fg:x="160" fg:w="1"/><text x="13.1428%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8928%" y="517" width="0.0806%" height="15" fill="rgb(236,135,50)" fg:x="160" fg:w="1"/><text x="13.1428%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="12.8928%" y="501" width="0.0806%" height="15" fill="rgb(241,89,30)" fg:x="160" fg:w="1"/><text x="13.1428%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.8928%" y="485" width="0.0806%" height="15" fill="rgb(206,113,34)" fg:x="160" fg:w="1"/><text x="13.1428%" y="495.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (10 samples, 0.81%)</title><rect x="12.2482%" y="661" width="0.8058%" height="15" fill="rgb(218,104,52)" fg:x="152" fg:w="10"/><text x="12.4982%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="12.5705%" y="645" width="0.4835%" height="15" fill="rgb(223,82,32)" fg:x="156" fg:w="6"/><text x="12.8205%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="12.5705%" y="629" width="0.4835%" height="15" fill="rgb(249,219,30)" fg:x="156" fg:w="6"/><text x="12.8205%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="12.7317%" y="613" width="0.3223%" height="15" fill="rgb(233,141,21)" fg:x="158" fg:w="4"/><text x="12.9817%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="12.8122%" y="597" width="0.2417%" height="15" fill="rgb(252,87,44)" fg:x="159" fg:w="3"/><text x="13.0622%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="12.8122%" y="581" width="0.2417%" height="15" fill="rgb(229,48,33)" fg:x="159" fg:w="3"/><text x="13.0622%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="12.9734%" y="565" width="0.0806%" height="15" fill="rgb(229,23,22)" fg:x="161" fg:w="1"/><text x="13.2234%" y="575.50"></text></g><g><title>engine::session::Session::flush (77 samples, 6.20%)</title><rect x="7.0911%" y="805" width="6.2047%" height="15" fill="rgb(244,116,16)" fg:x="88" fg:w="77"/><text x="7.3411%" y="815.50">engine::..</text></g><g><title>engine::session::Session::save_entity_changes (77 samples, 6.20%)</title><rect x="7.0911%" y="789" width="6.2047%" height="15" fill="rgb(247,45,10)" fg:x="88" fg:w="77"/><text x="7.3411%" y="799.50">engine::..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (68 samples, 5.48%)</title><rect x="7.8163%" y="773" width="5.4795%" height="15" fill="rgb(228,60,29)" fg:x="97" fg:w="68"/><text x="8.0663%" y="783.50">engine:..</text></g><g><title>engine::session::SavesEntities::check_for_changes (68 samples, 5.48%)</title><rect x="7.8163%" y="757" width="5.4795%" height="15" fill="rgb(205,129,15)" fg:x="97" fg:w="68"/><text x="8.0663%" y="767.50">engine:..</text></g><g><title>kernel::model::any_entity_changes (23 samples, 1.85%)</title><rect x="11.4424%" y="741" width="1.8533%" height="15" fill="rgb(206,229,4)" fg:x="142" fg:w="23"/><text x="11.6924%" y="751.50">k..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (22 samples, 1.77%)</title><rect x="11.5230%" y="725" width="1.7728%" height="15" fill="rgb(249,191,30)" fg:x="143" fg:w="22"/><text x="11.7730%" y="735.50">k..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 1.77%)</title><rect x="11.5230%" y="709" width="1.7728%" height="15" fill="rgb(250,84,54)" fg:x="143" fg:w="22"/><text x="11.7730%" y="719.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (16 samples, 1.29%)</title><rect x="12.0064%" y="693" width="1.2893%" height="15" fill="rgb(207,25,53)" fg:x="149" fg:w="16"/><text x="12.2564%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 1.29%)</title><rect x="12.0064%" y="677" width="1.2893%" height="15" fill="rgb(235,40,8)" fg:x="149" fg:w="16"/><text x="12.2564%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (3 samples, 0.24%)</title><rect x="13.0540%" y="661" width="0.2417%" height="15" fill="rgb(226,169,33)" fg:x="162" fg:w="3"/><text x="13.3040%" y="671.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="13.0540%" y="645" width="0.2417%" height="15" fill="rgb(238,110,8)" fg:x="162" fg:w="3"/><text x="13.3040%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="693" width="0.0806%" height="15" fill="rgb(251,206,12)" fg:x="165" fg:w="1"/><text x="13.5457%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="677" width="0.0806%" height="15" fill="rgb(248,171,18)" fg:x="165" fg:w="1"/><text x="13.5457%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="13.2957%" y="661" width="0.0806%" height="15" fill="rgb(213,65,46)" fg:x="165" fg:w="1"/><text x="13.5457%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2957%" y="645" width="0.0806%" height="15" fill="rgb(211,154,15)" fg:x="165" fg:w="1"/><text x="13.5457%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.2957%" y="629" width="0.0806%" height="15" fill="rgb(217,75,43)" fg:x="165" fg:w="1"/><text x="13.5457%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.2957%" y="613" width="0.0806%" height="15" fill="rgb(230,32,33)" fg:x="165" fg:w="1"/><text x="13.5457%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.2957%" y="597" width="0.0806%" height="15" fill="rgb(221,100,16)" fg:x="165" fg:w="1"/><text x="13.5457%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.2957%" y="581" width="0.0806%" height="15" fill="rgb(212,129,47)" fg:x="165" fg:w="1"/><text x="13.5457%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2957%" y="565" width="0.0806%" height="15" fill="rgb(239,217,47)" fg:x="165" fg:w="1"/><text x="13.5457%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="13.2957%" y="549" width="0.0806%" height="15" fill="rgb(230,84,24)" fg:x="165" fg:w="1"/><text x="13.5457%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="13.2957%" y="533" width="0.0806%" height="15" fill="rgb(214,153,51)" fg:x="165" fg:w="1"/><text x="13.5457%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="13.2957%" y="517" width="0.0806%" height="15" fill="rgb(231,6,35)" fg:x="165" fg:w="1"/><text x="13.5457%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="13.2957%" y="501" width="0.0806%" height="15" fill="rgb(229,122,30)" fg:x="165" fg:w="1"/><text x="13.5457%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="13.2957%" y="485" width="0.0806%" height="15" fill="rgb(234,71,10)" fg:x="165" fg:w="1"/><text x="13.5457%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="13.2957%" y="469" width="0.0806%" height="15" fill="rgb(215,173,26)" fg:x="165" fg:w="1"/><text x="13.5457%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="13.2957%" y="741" width="0.1612%" height="15" fill="rgb(248,118,52)" fg:x="165" fg:w="2"/><text x="13.5457%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="13.2957%" y="725" width="0.1612%" height="15" fill="rgb(237,55,46)" fg:x="165" fg:w="2"/><text x="13.5457%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="13.2957%" y="709" width="0.1612%" height="15" fill="rgb(243,214,43)" fg:x="165" fg:w="2"/><text x="13.5457%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3763%" y="693" width="0.0806%" height="15" fill="rgb(252,123,30)" fg:x="166" fg:w="1"/><text x="13.6263%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3763%" y="677" width="0.0806%" height="15" fill="rgb(215,73,39)" fg:x="166" fg:w="1"/><text x="13.6263%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3763%" y="661" width="0.0806%" height="15" fill="rgb(251,194,29)" fg:x="166" fg:w="1"/><text x="13.6263%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3763%" y="645" width="0.0806%" height="15" fill="rgb(224,58,52)" fg:x="166" fg:w="1"/><text x="13.6263%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.3763%" y="629" width="0.0806%" height="15" fill="rgb(248,106,46)" fg:x="166" fg:w="1"/><text x="13.6263%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3763%" y="613" width="0.0806%" height="15" fill="rgb(223,80,29)" fg:x="166" fg:w="1"/><text x="13.6263%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.3763%" y="597" width="0.0806%" height="15" fill="rgb(243,137,9)" fg:x="166" fg:w="1"/><text x="13.6263%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3763%" y="581" width="0.0806%" height="15" fill="rgb(235,121,28)" fg:x="166" fg:w="1"/><text x="13.6263%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="13.3763%" y="565" width="0.0806%" height="15" fill="rgb(219,121,41)" fg:x="166" fg:w="1"/><text x="13.6263%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.3763%" y="549" width="0.0806%" height="15" fill="rgb(251,60,6)" fg:x="166" fg:w="1"/><text x="13.6263%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="13.3763%" y="533" width="0.0806%" height="15" fill="rgb(208,12,30)" fg:x="166" fg:w="1"/><text x="13.6263%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="13.4569%" y="725" width="0.0806%" height="15" fill="rgb(207,176,36)" fg:x="167" fg:w="1"/><text x="13.7069%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="13.4569%" y="709" width="0.0806%" height="15" fill="rgb(211,188,29)" fg:x="167" fg:w="1"/><text x="13.7069%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.4569%" y="693" width="0.0806%" height="15" fill="rgb(220,184,37)" fg:x="167" fg:w="1"/><text x="13.7069%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="677" width="0.0806%" height="15" fill="rgb(239,87,37)" fg:x="167" fg:w="1"/><text x="13.7069%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.4569%" y="661" width="0.0806%" height="15" fill="rgb(232,113,44)" fg:x="167" fg:w="1"/><text x="13.7069%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="645" width="0.0806%" height="15" fill="rgb(246,25,39)" fg:x="167" fg:w="1"/><text x="13.7069%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="13.4569%" y="629" width="0.0806%" height="15" fill="rgb(247,30,13)" fg:x="167" fg:w="1"/><text x="13.7069%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="613" width="0.0806%" height="15" fill="rgb(230,176,35)" fg:x="167" fg:w="1"/><text x="13.7069%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="13.4569%" y="597" width="0.0806%" height="15" fill="rgb(222,23,18)" fg:x="167" fg:w="1"/><text x="13.7069%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="13.4569%" y="581" width="0.0806%" height="15" fill="rgb(234,86,8)" fg:x="167" fg:w="1"/><text x="13.7069%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.5375%" y="613" width="0.0806%" height="15" fill="rgb(206,218,47)" fg:x="168" fg:w="1"/><text x="13.7875%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6180%" y="613" width="0.0806%" height="15" fill="rgb(229,35,31)" fg:x="169" fg:w="1"/><text x="13.8680%" y="623.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="13.2957%" y="757" width="0.4835%" height="15" fill="rgb(242,81,7)" fg:x="165" fg:w="6"/><text x="13.5457%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="13.4569%" y="741" width="0.3223%" height="15" fill="rgb(231,11,35)" fg:x="167" fg:w="4"/><text x="13.7069%" y="751.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="13.5375%" y="725" width="0.2417%" height="15" fill="rgb(219,218,17)" fg:x="168" fg:w="3"/><text x="13.7875%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="13.5375%" y="709" width="0.2417%" height="15" fill="rgb(221,83,32)" fg:x="168" fg:w="3"/><text x="13.7875%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.5375%" y="693" width="0.2417%" height="15" fill="rgb(233,49,54)" fg:x="168" fg:w="3"/><text x="13.7875%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="13.5375%" y="677" width="0.2417%" height="15" fill="rgb(206,18,51)" fg:x="168" fg:w="3"/><text x="13.7875%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.5375%" y="661" width="0.2417%" height="15" fill="rgb(249,193,15)" fg:x="168" fg:w="3"/><text x="13.7875%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.5375%" y="645" width="0.2417%" height="15" fill="rgb(245,186,19)" fg:x="168" fg:w="3"/><text x="13.7875%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="13.5375%" y="629" width="0.2417%" height="15" fill="rgb(230,4,24)" fg:x="168" fg:w="3"/><text x="13.7875%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="13.6986%" y="613" width="0.0806%" height="15" fill="rgb(234,75,27)" fg:x="170" fg:w="1"/><text x="13.9486%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="13.6986%" y="597" width="0.0806%" height="15" fill="rgb(244,187,35)" fg:x="170" fg:w="1"/><text x="13.9486%" y="607.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (7 samples, 0.56%)</title><rect x="13.2957%" y="789" width="0.5641%" height="15" fill="rgb(241,97,43)" fg:x="165" fg:w="7"/><text x="13.5457%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (7 samples, 0.56%)</title><rect x="13.2957%" y="773" width="0.5641%" height="15" fill="rgb(236,94,2)" fg:x="165" fg:w="7"/><text x="13.5457%" y="783.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7792%" y="757" width="0.0806%" height="15" fill="rgb(231,175,7)" fg:x="171" fg:w="1"/><text x="14.0292%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7792%" y="741" width="0.0806%" height="15" fill="rgb(236,89,47)" fg:x="171" fg:w="1"/><text x="14.0292%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="13.7792%" y="725" width="0.0806%" height="15" fill="rgb(213,191,37)" fg:x="171" fg:w="1"/><text x="14.0292%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="13.7792%" y="709" width="0.0806%" height="15" fill="rgb(252,0,34)" fg:x="171" fg:w="1"/><text x="14.0292%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="13.7792%" y="693" width="0.0806%" height="15" fill="rgb(208,145,44)" fg:x="171" fg:w="1"/><text x="14.0292%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="13.7792%" y="677" width="0.0806%" height="15" fill="rgb(227,95,50)" fg:x="171" fg:w="1"/><text x="14.0292%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="13.7792%" y="661" width="0.0806%" height="15" fill="rgb(222,136,24)" fg:x="171" fg:w="1"/><text x="14.0292%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="13.7792%" y="645" width="0.0806%" height="15" fill="rgb(218,105,10)" fg:x="171" fg:w="1"/><text x="14.0292%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="13.8598%" y="773" width="0.1612%" height="15" fill="rgb(216,65,28)" fg:x="172" fg:w="2"/><text x="14.1098%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="13.8598%" y="757" width="0.1612%" height="15" fill="rgb(229,6,28)" fg:x="172" fg:w="2"/><text x="14.1098%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="13.9404%" y="741" width="0.0806%" height="15" fill="rgb(222,160,42)" fg:x="173" fg:w="1"/><text x="14.1904%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1015%" y="693" width="0.1612%" height="15" fill="rgb(235,83,49)" fg:x="175" fg:w="2"/><text x="14.3515%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1015%" y="677" width="0.1612%" height="15" fill="rgb(236,86,36)" fg:x="175" fg:w="2"/><text x="14.3515%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1015%" y="661" width="0.1612%" height="15" fill="rgb(236,19,41)" fg:x="175" fg:w="2"/><text x="14.3515%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="14.1015%" y="645" width="0.1612%" height="15" fill="rgb(217,71,31)" fg:x="175" fg:w="2"/><text x="14.3515%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="14.2627%" y="597" width="0.0806%" height="15" fill="rgb(236,209,25)" fg:x="177" fg:w="1"/><text x="14.5127%" y="607.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.2627%" y="581" width="0.0806%" height="15" fill="rgb(247,104,21)" fg:x="177" fg:w="1"/><text x="14.5127%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.2627%" y="565" width="0.0806%" height="15" fill="rgb(243,80,38)" fg:x="177" fg:w="1"/><text x="14.5127%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="14.0210%" y="741" width="0.4835%" height="15" fill="rgb(232,109,38)" fg:x="174" fg:w="6"/><text x="14.2710%" y="751.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="14.0210%" y="725" width="0.4835%" height="15" fill="rgb(212,177,53)" fg:x="174" fg:w="6"/><text x="14.2710%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="14.0210%" y="709" width="0.4835%" height="15" fill="rgb(227,30,34)" fg:x="174" fg:w="6"/><text x="14.2710%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="14.2627%" y="693" width="0.2417%" height="15" fill="rgb(205,175,25)" fg:x="177" fg:w="3"/><text x="14.5127%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2627%" y="677" width="0.2417%" height="15" fill="rgb(249,39,54)" fg:x="177" fg:w="3"/><text x="14.5127%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="14.2627%" y="661" width="0.2417%" height="15" fill="rgb(215,54,37)" fg:x="177" fg:w="3"/><text x="14.5127%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2627%" y="645" width="0.2417%" height="15" fill="rgb(205,60,46)" fg:x="177" fg:w="3"/><text x="14.5127%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="14.2627%" y="629" width="0.2417%" height="15" fill="rgb(238,89,29)" fg:x="177" fg:w="3"/><text x="14.5127%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="14.2627%" y="613" width="0.2417%" height="15" fill="rgb(212,48,10)" fg:x="177" fg:w="3"/><text x="14.5127%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.3433%" y="597" width="0.1612%" height="15" fill="rgb(237,186,28)" fg:x="178" fg:w="2"/><text x="14.5933%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.3433%" y="581" width="0.1612%" height="15" fill="rgb(237,204,4)" fg:x="178" fg:w="2"/><text x="14.5933%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="14.4239%" y="565" width="0.0806%" height="15" fill="rgb(237,15,47)" fg:x="179" fg:w="1"/><text x="14.6739%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="14.4239%" y="549" width="0.0806%" height="15" fill="rgb(244,110,25)" fg:x="179" fg:w="1"/><text x="14.6739%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5044%" y="693" width="0.0806%" height="15" fill="rgb(241,12,16)" fg:x="180" fg:w="1"/><text x="14.7544%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5044%" y="677" width="0.0806%" height="15" fill="rgb(235,25,9)" fg:x="180" fg:w="1"/><text x="14.7544%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="14.5044%" y="661" width="0.0806%" height="15" fill="rgb(245,159,19)" fg:x="180" fg:w="1"/><text x="14.7544%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5044%" y="645" width="0.0806%" height="15" fill="rgb(236,63,32)" fg:x="180" fg:w="1"/><text x="14.7544%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="14.5044%" y="629" width="0.0806%" height="15" fill="rgb(235,32,52)" fg:x="180" fg:w="1"/><text x="14.7544%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="14.5044%" y="613" width="0.0806%" height="15" fill="rgb(209,176,21)" fg:x="180" fg:w="1"/><text x="14.7544%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="14.5044%" y="597" width="0.0806%" height="15" fill="rgb(205,90,42)" fg:x="180" fg:w="1"/><text x="14.7544%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="14.5044%" y="581" width="0.0806%" height="15" fill="rgb(213,132,16)" fg:x="180" fg:w="1"/><text x="14.7544%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5044%" y="565" width="0.0806%" height="15" fill="rgb(232,11,22)" fg:x="180" fg:w="1"/><text x="14.7544%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="14.5044%" y="549" width="0.0806%" height="15" fill="rgb(248,167,41)" fg:x="180" fg:w="1"/><text x="14.7544%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="14.5044%" y="533" width="0.0806%" height="15" fill="rgb(209,127,6)" fg:x="180" fg:w="1"/><text x="14.7544%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="14.5044%" y="517" width="0.0806%" height="15" fill="rgb(246,210,34)" fg:x="180" fg:w="1"/><text x="14.7544%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="14.5044%" y="501" width="0.0806%" height="15" fill="rgb(238,165,13)" fg:x="180" fg:w="1"/><text x="14.7544%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="14.5044%" y="485" width="0.0806%" height="15" fill="rgb(233,98,15)" fg:x="180" fg:w="1"/><text x="14.7544%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.5044%" y="469" width="0.0806%" height="15" fill="rgb(215,215,51)" fg:x="180" fg:w="1"/><text x="14.7544%" y="479.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="14.0210%" y="773" width="0.6446%" height="15" fill="rgb(217,161,25)" fg:x="174" fg:w="8"/><text x="14.2710%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="14.0210%" y="757" width="0.6446%" height="15" fill="rgb(217,167,48)" fg:x="174" fg:w="8"/><text x="14.2710%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="14.5044%" y="741" width="0.1612%" height="15" fill="rgb(205,163,34)" fg:x="180" fg:w="2"/><text x="14.7544%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.5044%" y="725" width="0.1612%" height="15" fill="rgb(241,197,31)" fg:x="180" fg:w="2"/><text x="14.7544%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.5044%" y="709" width="0.1612%" height="15" fill="rgb(225,123,11)" fg:x="180" fg:w="2"/><text x="14.7544%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5850%" y="693" width="0.0806%" height="15" fill="rgb(217,4,20)" fg:x="181" fg:w="1"/><text x="14.8350%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5850%" y="677" width="0.0806%" height="15" fill="rgb(215,55,9)" fg:x="181" fg:w="1"/><text x="14.8350%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5850%" y="661" width="0.0806%" height="15" fill="rgb(218,165,5)" fg:x="181" fg:w="1"/><text x="14.8350%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5850%" y="645" width="0.0806%" height="15" fill="rgb(222,175,15)" fg:x="181" fg:w="1"/><text x="14.8350%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="14.5850%" y="629" width="0.0806%" height="15" fill="rgb(223,85,34)" fg:x="181" fg:w="1"/><text x="14.8350%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5850%" y="613" width="0.0806%" height="15" fill="rgb(234,228,29)" fg:x="181" fg:w="1"/><text x="14.8350%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="14.5850%" y="597" width="0.0806%" height="15" fill="rgb(239,7,28)" fg:x="181" fg:w="1"/><text x="14.8350%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.5850%" y="581" width="0.0806%" height="15" fill="rgb(252,222,53)" fg:x="181" fg:w="1"/><text x="14.8350%" y="591.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="14.6656%" y="757" width="0.0806%" height="15" fill="rgb(232,146,44)" fg:x="182" fg:w="1"/><text x="14.9156%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.6656%" y="741" width="0.0806%" height="15" fill="rgb(243,223,53)" fg:x="182" fg:w="1"/><text x="14.9156%" y="751.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.6656%" y="725" width="0.0806%" height="15" fill="rgb(219,128,25)" fg:x="182" fg:w="1"/><text x="14.9156%" y="735.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="14.6656%" y="709" width="0.0806%" height="15" fill="rgb(223,56,32)" fg:x="182" fg:w="1"/><text x="14.9156%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="14.6656%" y="693" width="0.0806%" height="15" fill="rgb(237,41,3)" fg:x="182" fg:w="1"/><text x="14.9156%" y="703.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="14.6656%" y="773" width="0.1612%" height="15" fill="rgb(235,138,9)" fg:x="182" fg:w="2"/><text x="14.9156%" y="783.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7462%" y="757" width="0.0806%" height="15" fill="rgb(214,131,10)" fg:x="183" fg:w="1"/><text x="14.9962%" y="767.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.7462%" y="741" width="0.0806%" height="15" fill="rgb(229,89,7)" fg:x="183" fg:w="1"/><text x="14.9962%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="14.7462%" y="725" width="0.0806%" height="15" fill="rgb(240,24,42)" fg:x="183" fg:w="1"/><text x="14.9962%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="14.7462%" y="709" width="0.0806%" height="15" fill="rgb(243,188,54)" fg:x="183" fg:w="1"/><text x="14.9962%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="14.8268%" y="709" width="0.0806%" height="15" fill="rgb(246,92,22)" fg:x="184" fg:w="1"/><text x="15.0768%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="14.8268%" y="693" width="0.0806%" height="15" fill="rgb(211,176,51)" fg:x="184" fg:w="1"/><text x="15.0768%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="14.8268%" y="725" width="0.2417%" height="15" fill="rgb(246,207,34)" fg:x="184" fg:w="3"/><text x="15.0768%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="14.9073%" y="709" width="0.1612%" height="15" fill="rgb(239,95,2)" fg:x="185" fg:w="2"/><text x="15.1573%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="14.9073%" y="693" width="0.1612%" height="15" fill="rgb(211,124,25)" fg:x="185" fg:w="2"/><text x="15.1573%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.9073%" y="677" width="0.1612%" height="15" fill="rgb(231,221,19)" fg:x="185" fg:w="2"/><text x="15.1573%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9073%" y="661" width="0.1612%" height="15" fill="rgb(239,183,19)" fg:x="185" fg:w="2"/><text x="15.1573%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.9073%" y="645" width="0.1612%" height="15" fill="rgb(221,130,29)" fg:x="185" fg:w="2"/><text x="15.1573%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9073%" y="629" width="0.1612%" height="15" fill="rgb(206,130,36)" fg:x="185" fg:w="2"/><text x="15.1573%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="14.9073%" y="613" width="0.1612%" height="15" fill="rgb(215,70,19)" fg:x="185" fg:w="2"/><text x="15.1573%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9073%" y="597" width="0.1612%" height="15" fill="rgb(244,16,43)" fg:x="185" fg:w="2"/><text x="15.1573%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="14.9073%" y="581" width="0.1612%" height="15" fill="rgb(222,115,32)" fg:x="185" fg:w="2"/><text x="15.1573%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="14.9073%" y="565" width="0.1612%" height="15" fill="rgb(247,48,25)" fg:x="185" fg:w="2"/><text x="15.1573%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="14.9879%" y="549" width="0.0806%" height="15" fill="rgb(226,180,51)" fg:x="186" fg:w="1"/><text x="15.2379%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="14.9879%" y="533" width="0.0806%" height="15" fill="rgb(217,142,42)" fg:x="186" fg:w="1"/><text x="15.2379%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.0685%" y="613" width="0.0806%" height="15" fill="rgb(220,178,3)" fg:x="187" fg:w="1"/><text x="15.3185%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="15.0685%" y="597" width="0.0806%" height="15" fill="rgb(217,221,4)" fg:x="187" fg:w="1"/><text x="15.3185%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.0685%" y="677" width="0.1612%" height="15" fill="rgb(237,63,43)" fg:x="187" fg:w="2"/><text x="15.3185%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.0685%" y="661" width="0.1612%" height="15" fill="rgb(220,57,8)" fg:x="187" fg:w="2"/><text x="15.3185%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.0685%" y="645" width="0.1612%" height="15" fill="rgb(254,186,27)" fg:x="187" fg:w="2"/><text x="15.3185%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="15.0685%" y="629" width="0.1612%" height="15" fill="rgb(251,57,28)" fg:x="187" fg:w="2"/><text x="15.3185%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="15.1491%" y="613" width="0.0806%" height="15" fill="rgb(215,228,0)" fg:x="188" fg:w="1"/><text x="15.3991%" y="623.50"></text></g><g><title>plugins_core::build::Build::holding (25 samples, 2.01%)</title><rect x="13.2957%" y="805" width="2.0145%" height="15" fill="rgb(237,218,39)" fg:x="165" fg:w="25"/><text x="13.5457%" y="815.50">p..</text></g><g><title>plugins_core::tools::set_container (18 samples, 1.45%)</title><rect x="13.8598%" y="789" width="1.4504%" height="15" fill="rgb(207,2,54)" fg:x="172" fg:w="18"/><text x="14.1098%" y="799.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (6 samples, 0.48%)</title><rect x="14.8268%" y="773" width="0.4835%" height="15" fill="rgb(232,76,50)" fg:x="184" fg:w="6"/><text x="15.0768%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="14.8268%" y="757" width="0.4835%" height="15" fill="rgb(211,85,31)" fg:x="184" fg:w="6"/><text x="15.0768%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="14.8268%" y="741" width="0.4835%" height="15" fill="rgb(223,210,27)" fg:x="184" fg:w="6"/><text x="15.0768%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="15.0685%" y="725" width="0.2417%" height="15" fill="rgb(254,36,8)" fg:x="187" fg:w="3"/><text x="15.3185%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="15.0685%" y="709" width="0.2417%" height="15" fill="rgb(213,4,25)" fg:x="187" fg:w="3"/><text x="15.3185%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="15.0685%" y="693" width="0.2417%" height="15" fill="rgb(224,2,39)" fg:x="187" fg:w="3"/><text x="15.3185%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.2297%" y="677" width="0.0806%" height="15" fill="rgb(208,8,39)" fg:x="189" fg:w="1"/><text x="15.4797%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2297%" y="661" width="0.0806%" height="15" fill="rgb(216,226,3)" fg:x="189" fg:w="1"/><text x="15.4797%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="15.2297%" y="645" width="0.0806%" height="15" fill="rgb(249,139,31)" fg:x="189" fg:w="1"/><text x="15.4797%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="15.2297%" y="629" width="0.0806%" height="15" fill="rgb(242,170,35)" fg:x="189" fg:w="1"/><text x="15.4797%" y="639.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="15.3102%" y="757" width="0.0806%" height="15" fill="rgb(238,14,9)" fg:x="190" fg:w="1"/><text x="15.5602%" y="767.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="15.3102%" y="741" width="0.0806%" height="15" fill="rgb(251,81,46)" fg:x="190" fg:w="1"/><text x="15.5602%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.3102%" y="725" width="0.0806%" height="15" fill="rgb(230,23,4)" fg:x="190" fg:w="1"/><text x="15.5602%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="15.3102%" y="773" width="0.1612%" height="15" fill="rgb(211,85,25)" fg:x="190" fg:w="2"/><text x="15.5602%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="15.3908%" y="757" width="0.0806%" height="15" fill="rgb(252,23,31)" fg:x="191" fg:w="1"/><text x="15.6408%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="15.3908%" y="741" width="0.0806%" height="15" fill="rgb(234,163,38)" fg:x="191" fg:w="1"/><text x="15.6408%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="15.3908%" y="725" width="0.0806%" height="15" fill="rgb(210,190,50)" fg:x="191" fg:w="1"/><text x="15.6408%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.3908%" y="709" width="0.0806%" height="15" fill="rgb(228,158,3)" fg:x="191" fg:w="1"/><text x="15.6408%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="15.3908%" y="693" width="0.0806%" height="15" fill="rgb(216,130,0)" fg:x="191" fg:w="1"/><text x="15.6408%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="15.3908%" y="677" width="0.0806%" height="15" fill="rgb(224,184,10)" fg:x="191" fg:w="1"/><text x="15.6408%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="15.3908%" y="661" width="0.0806%" height="15" fill="rgb(214,202,18)" fg:x="191" fg:w="1"/><text x="15.6408%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="15.3908%" y="645" width="0.0806%" height="15" fill="rgb(213,229,54)" fg:x="191" fg:w="1"/><text x="15.6408%" y="655.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3908%" y="629" width="0.0806%" height="15" fill="rgb(246,120,0)" fg:x="191" fg:w="1"/><text x="15.6408%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="15.3908%" y="613" width="0.0806%" height="15" fill="rgb(237,6,15)" fg:x="191" fg:w="1"/><text x="15.6408%" y="623.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="15.3908%" y="597" width="0.0806%" height="15" fill="rgb(252,156,15)" fg:x="191" fg:w="1"/><text x="15.6408%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="15.3908%" y="581" width="0.0806%" height="15" fill="rgb(249,78,18)" fg:x="191" fg:w="1"/><text x="15.6408%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="15.3908%" y="565" width="0.0806%" height="15" fill="rgb(230,223,44)" fg:x="191" fg:w="1"/><text x="15.6408%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="15.3908%" y="549" width="0.0806%" height="15" fill="rgb(230,222,32)" fg:x="191" fg:w="1"/><text x="15.6408%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.3908%" y="533" width="0.0806%" height="15" fill="rgb(247,54,6)" fg:x="191" fg:w="1"/><text x="15.6408%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="15.3908%" y="517" width="0.0806%" height="15" fill="rgb(247,115,45)" fg:x="191" fg:w="1"/><text x="15.6408%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="15.3908%" y="501" width="0.0806%" height="15" fill="rgb(213,203,37)" fg:x="191" fg:w="1"/><text x="15.6408%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="15.3908%" y="485" width="0.0806%" height="15" fill="rgb(248,188,18)" fg:x="191" fg:w="1"/><text x="15.6408%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="15.3908%" y="469" width="0.0806%" height="15" fill="rgb(206,80,8)" fg:x="191" fg:w="1"/><text x="15.6408%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="15.3908%" y="453" width="0.0806%" height="15" fill="rgb(245,217,31)" fg:x="191" fg:w="1"/><text x="15.6408%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="15.3908%" y="437" width="0.0806%" height="15" fill="rgb(220,193,15)" fg:x="191" fg:w="1"/><text x="15.6408%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="15.3908%" y="421" width="0.0806%" height="15" fill="rgb(226,7,19)" fg:x="191" fg:w="1"/><text x="15.6408%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="15.4714%" y="629" width="0.0806%" height="15" fill="rgb(222,145,31)" fg:x="192" fg:w="1"/><text x="15.7214%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.4714%" y="693" width="0.2417%" height="15" fill="rgb(241,193,36)" fg:x="192" fg:w="3"/><text x="15.7214%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.4714%" y="677" width="0.2417%" height="15" fill="rgb(225,123,33)" fg:x="192" fg:w="3"/><text x="15.7214%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.4714%" y="661" width="0.2417%" height="15" fill="rgb(246,136,38)" fg:x="192" fg:w="3"/><text x="15.7214%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="15.4714%" y="645" width="0.2417%" height="15" fill="rgb(243,56,24)" fg:x="192" fg:w="3"/><text x="15.7214%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.5520%" y="629" width="0.1612%" height="15" fill="rgb(215,147,2)" fg:x="193" fg:w="2"/><text x="15.8020%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="15.5520%" y="613" width="0.1612%" height="15" fill="rgb(209,155,27)" fg:x="193" fg:w="2"/><text x="15.8020%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="15.5520%" y="597" width="0.1612%" height="15" fill="rgb(222,177,11)" fg:x="193" fg:w="2"/><text x="15.8020%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="15.5520%" y="581" width="0.1612%" height="15" fill="rgb(212,227,15)" fg:x="193" fg:w="2"/><text x="15.8020%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="15.5520%" y="565" width="0.1612%" height="15" fill="rgb(214,138,20)" fg:x="193" fg:w="2"/><text x="15.8020%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="15.5520%" y="549" width="0.1612%" height="15" fill="rgb(221,170,31)" fg:x="193" fg:w="2"/><text x="15.8020%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="15.5520%" y="533" width="0.1612%" height="15" fill="rgb(253,207,5)" fg:x="193" fg:w="2"/><text x="15.8020%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="15.5520%" y="517" width="0.1612%" height="15" fill="rgb(212,64,37)" fg:x="193" fg:w="2"/><text x="15.8020%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="15.5520%" y="501" width="0.1612%" height="15" fill="rgb(208,113,51)" fg:x="193" fg:w="2"/><text x="15.8020%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="15.5520%" y="485" width="0.1612%" height="15" fill="rgb(237,15,5)" fg:x="193" fg:w="2"/><text x="15.8020%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="15.5520%" y="469" width="0.1612%" height="15" fill="rgb(238,33,18)" fg:x="193" fg:w="2"/><text x="15.8020%" y="479.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="15.5520%" y="453" width="0.1612%" height="15" fill="rgb(253,206,50)" fg:x="193" fg:w="2"/><text x="15.8020%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7131%" y="693" width="0.0806%" height="15" fill="rgb(242,158,43)" fg:x="195" fg:w="1"/><text x="15.9631%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="15.7131%" y="677" width="0.0806%" height="15" fill="rgb(213,125,27)" fg:x="195" fg:w="1"/><text x="15.9631%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7131%" y="661" width="0.0806%" height="15" fill="rgb(233,161,31)" fg:x="195" fg:w="1"/><text x="15.9631%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7131%" y="645" width="0.0806%" height="15" fill="rgb(218,135,6)" fg:x="195" fg:w="1"/><text x="15.9631%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="15.7131%" y="629" width="0.0806%" height="15" fill="rgb(222,73,53)" fg:x="195" fg:w="1"/><text x="15.9631%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="15.7937%" y="597" width="0.0806%" height="15" fill="rgb(229,66,53)" fg:x="196" fg:w="1"/><text x="16.0437%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="15.7937%" y="581" width="0.0806%" height="15" fill="rgb(208,128,19)" fg:x="196" fg:w="1"/><text x="16.0437%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="15.4714%" y="741" width="0.5641%" height="15" fill="rgb(235,70,27)" fg:x="192" fg:w="7"/><text x="15.7214%" y="751.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="15.4714%" y="725" width="0.5641%" height="15" fill="rgb(241,130,30)" fg:x="192" fg:w="7"/><text x="15.7214%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="15.4714%" y="709" width="0.5641%" height="15" fill="rgb(222,57,48)" fg:x="192" fg:w="7"/><text x="15.7214%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="15.7937%" y="693" width="0.2417%" height="15" fill="rgb(225,204,29)" fg:x="196" fg:w="3"/><text x="16.0437%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7937%" y="677" width="0.2417%" height="15" fill="rgb(240,196,35)" fg:x="196" fg:w="3"/><text x="16.0437%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="15.7937%" y="661" width="0.2417%" height="15" fill="rgb(215,150,16)" fg:x="196" fg:w="3"/><text x="16.0437%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7937%" y="645" width="0.2417%" height="15" fill="rgb(209,170,13)" fg:x="196" fg:w="3"/><text x="16.0437%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="15.7937%" y="629" width="0.2417%" height="15" fill="rgb(235,75,31)" fg:x="196" fg:w="3"/><text x="16.0437%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="15.7937%" y="613" width="0.2417%" height="15" fill="rgb(252,1,47)" fg:x="196" fg:w="3"/><text x="16.0437%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="15.8743%" y="597" width="0.1612%" height="15" fill="rgb(241,2,36)" fg:x="197" fg:w="2"/><text x="16.1243%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="15.8743%" y="581" width="0.1612%" height="15" fill="rgb(236,191,4)" fg:x="197" fg:w="2"/><text x="16.1243%" y="591.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="16.0355%" y="725" width="0.0806%" height="15" fill="rgb(212,65,35)" fg:x="199" fg:w="1"/><text x="16.2855%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="16.0355%" y="709" width="0.0806%" height="15" fill="rgb(209,49,33)" fg:x="199" fg:w="1"/><text x="16.2855%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0355%" y="693" width="0.0806%" height="15" fill="rgb(208,36,46)" fg:x="199" fg:w="1"/><text x="16.2855%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0355%" y="677" width="0.0806%" height="15" fill="rgb(210,125,2)" fg:x="199" fg:w="1"/><text x="16.2855%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.0355%" y="661" width="0.0806%" height="15" fill="rgb(225,62,6)" fg:x="199" fg:w="1"/><text x="16.2855%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0355%" y="645" width="0.0806%" height="15" fill="rgb(210,54,27)" fg:x="199" fg:w="1"/><text x="16.2855%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.0355%" y="629" width="0.0806%" height="15" fill="rgb(249,189,52)" fg:x="199" fg:w="1"/><text x="16.2855%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.0355%" y="613" width="0.0806%" height="15" fill="rgb(225,134,40)" fg:x="199" fg:w="1"/><text x="16.2855%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="16.1160%" y="661" width="0.0806%" height="15" fill="rgb(206,13,37)" fg:x="200" fg:w="1"/><text x="16.3660%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1160%" y="645" width="0.0806%" height="15" fill="rgb(232,114,28)" fg:x="200" fg:w="1"/><text x="16.3660%" y="655.50"></text></g><g><title>plugins_core::build::Build::into_entry (12 samples, 0.97%)</title><rect x="15.3102%" y="805" width="0.9670%" height="15" fill="rgb(253,215,8)" fg:x="190" fg:w="12"/><text x="15.5602%" y="815.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (12 samples, 0.97%)</title><rect x="15.3102%" y="789" width="0.9670%" height="15" fill="rgb(254,64,19)" fg:x="190" fg:w="12"/><text x="15.5602%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (10 samples, 0.81%)</title><rect x="15.4714%" y="773" width="0.8058%" height="15" fill="rgb(242,18,46)" fg:x="192" fg:w="10"/><text x="15.7214%" y="783.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (10 samples, 0.81%)</title><rect x="15.4714%" y="757" width="0.8058%" height="15" fill="rgb(239,192,30)" fg:x="192" fg:w="10"/><text x="15.7214%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="16.0355%" y="741" width="0.2417%" height="15" fill="rgb(232,73,14)" fg:x="199" fg:w="3"/><text x="16.2855%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="16.1160%" y="725" width="0.1612%" height="15" fill="rgb(225,51,9)" fg:x="200" fg:w="2"/><text x="16.3660%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="16.1160%" y="709" width="0.1612%" height="15" fill="rgb(242,217,54)" fg:x="200" fg:w="2"/><text x="16.3660%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="16.1160%" y="693" width="0.1612%" height="15" fill="rgb(216,93,3)" fg:x="200" fg:w="2"/><text x="16.3660%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="16.1160%" y="677" width="0.1612%" height="15" fill="rgb(230,119,33)" fg:x="200" fg:w="2"/><text x="16.3660%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1966%" y="661" width="0.0806%" height="15" fill="rgb(238,170,27)" fg:x="201" fg:w="1"/><text x="16.4466%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1966%" y="645" width="0.0806%" height="15" fill="rgb(229,8,2)" fg:x="201" fg:w="1"/><text x="16.4466%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="16.1966%" y="629" width="0.0806%" height="15" fill="rgb(205,214,42)" fg:x="201" fg:w="1"/><text x="16.4466%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.1966%" y="613" width="0.0806%" height="15" fill="rgb(245,113,1)" fg:x="201" fg:w="1"/><text x="16.4466%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.5189%" y="629" width="0.0806%" height="15" fill="rgb(252,50,2)" fg:x="205" fg:w="1"/><text x="16.7689%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.5189%" y="613" width="0.0806%" height="15" fill="rgb(225,122,24)" fg:x="205" fg:w="1"/><text x="16.7689%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5189%" y="693" width="0.1612%" height="15" fill="rgb(234,129,31)" fg:x="205" fg:w="2"/><text x="16.7689%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5189%" y="677" width="0.1612%" height="15" fill="rgb(219,177,4)" fg:x="205" fg:w="2"/><text x="16.7689%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5189%" y="661" width="0.1612%" height="15" fill="rgb(225,142,27)" fg:x="205" fg:w="2"/><text x="16.7689%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.5189%" y="645" width="0.1612%" height="15" fill="rgb(205,107,51)" fg:x="205" fg:w="2"/><text x="16.7689%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5995%" y="629" width="0.0806%" height="15" fill="rgb(236,223,15)" fg:x="206" fg:w="1"/><text x="16.8495%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="16.5995%" y="613" width="0.0806%" height="15" fill="rgb(235,133,11)" fg:x="206" fg:w="1"/><text x="16.8495%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="16.5995%" y="597" width="0.0806%" height="15" fill="rgb(247,172,13)" fg:x="206" fg:w="1"/><text x="16.8495%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="16.5995%" y="581" width="0.0806%" height="15" fill="rgb(233,191,41)" fg:x="206" fg:w="1"/><text x="16.8495%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="16.5995%" y="565" width="0.0806%" height="15" fill="rgb(250,65,16)" fg:x="206" fg:w="1"/><text x="16.8495%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="16.5995%" y="549" width="0.0806%" height="15" fill="rgb(206,10,27)" fg:x="206" fg:w="1"/><text x="16.8495%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="16.5995%" y="533" width="0.0806%" height="15" fill="rgb(212,96,22)" fg:x="206" fg:w="1"/><text x="16.8495%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="16.5189%" y="789" width="0.2417%" height="15" fill="rgb(206,50,0)" fg:x="205" fg:w="3"/><text x="16.7689%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="16.5189%" y="773" width="0.2417%" height="15" fill="rgb(249,105,52)" fg:x="205" fg:w="3"/><text x="16.7689%" y="783.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="16.5189%" y="757" width="0.2417%" height="15" fill="rgb(216,93,51)" fg:x="205" fg:w="3"/><text x="16.7689%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="16.5189%" y="741" width="0.2417%" height="15" fill="rgb(217,172,13)" fg:x="205" fg:w="3"/><text x="16.7689%" y="751.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="16.5189%" y="725" width="0.2417%" height="15" fill="rgb(235,199,38)" fg:x="205" fg:w="3"/><text x="16.7689%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="16.5189%" y="709" width="0.2417%" height="15" fill="rgb(221,97,33)" fg:x="205" fg:w="3"/><text x="16.7689%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.6801%" y="693" width="0.0806%" height="15" fill="rgb(205,156,50)" fg:x="207" fg:w="1"/><text x="16.9301%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6801%" y="677" width="0.0806%" height="15" fill="rgb(215,142,19)" fg:x="207" fg:w="1"/><text x="16.9301%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.6801%" y="661" width="0.0806%" height="15" fill="rgb(232,170,7)" fg:x="207" fg:w="1"/><text x="16.9301%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6801%" y="645" width="0.0806%" height="15" fill="rgb(223,50,17)" fg:x="207" fg:w="1"/><text x="16.9301%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="16.6801%" y="629" width="0.0806%" height="15" fill="rgb(230,103,46)" fg:x="207" fg:w="1"/><text x="16.9301%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6801%" y="613" width="0.0806%" height="15" fill="rgb(254,30,34)" fg:x="207" fg:w="1"/><text x="16.9301%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="16.6801%" y="597" width="0.0806%" height="15" fill="rgb(235,198,1)" fg:x="207" fg:w="1"/><text x="16.9301%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="16.6801%" y="581" width="0.0806%" height="15" fill="rgb(217,105,47)" fg:x="207" fg:w="1"/><text x="16.9301%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="16.6801%" y="565" width="0.0806%" height="15" fill="rgb(231,18,12)" fg:x="207" fg:w="1"/><text x="16.9301%" y="575.50"></text></g><g><title>plugins_core::build::Build::into_entry (2 samples, 0.16%)</title><rect x="16.8413%" y="741" width="0.1612%" height="15" fill="rgb(218,196,1)" fg:x="209" fg:w="2"/><text x="17.0913%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="16.8413%" y="725" width="0.1612%" height="15" fill="rgb(210,32,3)" fg:x="209" fg:w="2"/><text x="17.0913%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="16.8413%" y="709" width="0.1612%" height="15" fill="rgb(227,178,30)" fg:x="209" fg:w="2"/><text x="17.0913%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="16.8413%" y="693" width="0.1612%" height="15" fill="rgb(231,140,27)" fg:x="209" fg:w="2"/><text x="17.0913%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="16.8413%" y="677" width="0.1612%" height="15" fill="rgb(206,66,35)" fg:x="209" fg:w="2"/><text x="17.0913%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="16.8413%" y="661" width="0.1612%" height="15" fill="rgb(212,34,2)" fg:x="209" fg:w="2"/><text x="17.0913%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="16.8413%" y="645" width="0.1612%" height="15" fill="rgb(207,201,33)" fg:x="209" fg:w="2"/><text x="17.0913%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.8413%" y="629" width="0.1612%" height="15" fill="rgb(221,135,32)" fg:x="209" fg:w="2"/><text x="17.0913%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.8413%" y="613" width="0.1612%" height="15" fill="rgb(206,77,31)" fg:x="209" fg:w="2"/><text x="17.0913%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="16.8413%" y="597" width="0.1612%" height="15" fill="rgb(252,198,50)" fg:x="209" fg:w="2"/><text x="17.0913%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9218%" y="581" width="0.0806%" height="15" fill="rgb(206,79,27)" fg:x="210" fg:w="1"/><text x="17.1718%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="16.9218%" y="565" width="0.0806%" height="15" fill="rgb(228,108,9)" fg:x="210" fg:w="1"/><text x="17.1718%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="16.9218%" y="549" width="0.0806%" height="15" fill="rgb(213,9,39)" fg:x="210" fg:w="1"/><text x="17.1718%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.0024%" y="597" width="0.0806%" height="15" fill="rgb(252,51,13)" fg:x="211" fg:w="1"/><text x="17.2524%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0024%" y="581" width="0.0806%" height="15" fill="rgb(218,202,39)" fg:x="211" fg:w="1"/><text x="17.2524%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.0024%" y="565" width="0.0806%" height="15" fill="rgb(214,122,21)" fg:x="211" fg:w="1"/><text x="17.2524%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0024%" y="549" width="0.0806%" height="15" fill="rgb(217,205,48)" fg:x="211" fg:w="1"/><text x="17.2524%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.0024%" y="533" width="0.0806%" height="15" fill="rgb(230,216,13)" fg:x="211" fg:w="1"/><text x="17.2524%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.0024%" y="517" width="0.0806%" height="15" fill="rgb(249,118,4)" fg:x="211" fg:w="1"/><text x="17.2524%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="17.0024%" y="677" width="0.1612%" height="15" fill="rgb(212,207,40)" fg:x="211" fg:w="2"/><text x="17.2524%" y="687.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="17.0024%" y="661" width="0.1612%" height="15" fill="rgb(217,156,26)" fg:x="211" fg:w="2"/><text x="17.2524%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="17.0024%" y="645" width="0.1612%" height="15" fill="rgb(226,86,34)" fg:x="211" fg:w="2"/><text x="17.2524%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.0024%" y="629" width="0.1612%" height="15" fill="rgb(217,111,30)" fg:x="211" fg:w="2"/><text x="17.2524%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.0024%" y="613" width="0.1612%" height="15" fill="rgb(228,64,18)" fg:x="211" fg:w="2"/><text x="17.2524%" y="623.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="17.0830%" y="597" width="0.0806%" height="15" fill="rgb(254,217,48)" fg:x="212" fg:w="1"/><text x="17.3330%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.2442%" y="501" width="0.0806%" height="15" fill="rgb(226,156,48)" fg:x="214" fg:w="1"/><text x="17.4942%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.1636%" y="661" width="0.2417%" height="15" fill="rgb(236,168,20)" fg:x="213" fg:w="3"/><text x="17.4136%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.1636%" y="645" width="0.2417%" height="15" fill="rgb(239,210,33)" fg:x="213" fg:w="3"/><text x="17.4136%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="17.1636%" y="629" width="0.2417%" height="15" fill="rgb(242,85,17)" fg:x="213" fg:w="3"/><text x="17.4136%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.1636%" y="613" width="0.2417%" height="15" fill="rgb(221,196,15)" fg:x="213" fg:w="3"/><text x="17.4136%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="17.1636%" y="597" width="0.2417%" height="15" fill="rgb(249,76,21)" fg:x="213" fg:w="3"/><text x="17.4136%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.1636%" y="581" width="0.2417%" height="15" fill="rgb(243,67,29)" fg:x="213" fg:w="3"/><text x="17.4136%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="17.1636%" y="565" width="0.2417%" height="15" fill="rgb(240,159,2)" fg:x="213" fg:w="3"/><text x="17.4136%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="17.1636%" y="549" width="0.2417%" height="15" fill="rgb(244,64,3)" fg:x="213" fg:w="3"/><text x="17.4136%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="17.2442%" y="533" width="0.1612%" height="15" fill="rgb(220,86,40)" fg:x="214" fg:w="2"/><text x="17.4942%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="17.2442%" y="517" width="0.1612%" height="15" fill="rgb(222,194,51)" fg:x="214" fg:w="2"/><text x="17.4942%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="17.3247%" y="501" width="0.0806%" height="15" fill="rgb(207,154,19)" fg:x="215" fg:w="1"/><text x="17.5747%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.3247%" y="485" width="0.0806%" height="15" fill="rgb(206,178,36)" fg:x="215" fg:w="1"/><text x="17.5747%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="17.3247%" y="469" width="0.0806%" height="15" fill="rgb(218,8,24)" fg:x="215" fg:w="1"/><text x="17.5747%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="17.3247%" y="453" width="0.0806%" height="15" fill="rgb(226,83,41)" fg:x="215" fg:w="1"/><text x="17.5747%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="17.3247%" y="437" width="0.0806%" height="15" fill="rgb(224,23,22)" fg:x="215" fg:w="1"/><text x="17.5747%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="17.0024%" y="725" width="0.4835%" height="15" fill="rgb(218,198,45)" fg:x="211" fg:w="6"/><text x="17.2524%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (6 samples, 0.48%)</title><rect x="17.0024%" y="709" width="0.4835%" height="15" fill="rgb(249,147,41)" fg:x="211" fg:w="6"/><text x="17.2524%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (6 samples, 0.48%)</title><rect x="17.0024%" y="693" width="0.4835%" height="15" fill="rgb(244,224,13)" fg:x="211" fg:w="6"/><text x="17.2524%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (4 samples, 0.32%)</title><rect x="17.1636%" y="677" width="0.3223%" height="15" fill="rgb(225,97,27)" fg:x="213" fg:w="4"/><text x="17.4136%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="17.4053%" y="661" width="0.0806%" height="15" fill="rgb(254,64,0)" fg:x="216" fg:w="1"/><text x="17.6553%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="17.4053%" y="645" width="0.0806%" height="15" fill="rgb(208,130,43)" fg:x="216" fg:w="1"/><text x="17.6553%" y="655.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4053%" y="629" width="0.0806%" height="15" fill="rgb(247,91,25)" fg:x="216" fg:w="1"/><text x="17.6553%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4053%" y="613" width="0.0806%" height="15" fill="rgb(215,218,42)" fg:x="216" fg:w="1"/><text x="17.6553%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="17.4053%" y="597" width="0.0806%" height="15" fill="rgb(233,9,24)" fg:x="216" fg:w="1"/><text x="17.6553%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4053%" y="581" width="0.0806%" height="15" fill="rgb(252,105,38)" fg:x="216" fg:w="1"/><text x="17.6553%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="17.4053%" y="565" width="0.0806%" height="15" fill="rgb(225,40,49)" fg:x="216" fg:w="1"/><text x="17.6553%" y="575.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="17.4053%" y="549" width="0.0806%" height="15" fill="rgb(232,196,19)" fg:x="216" fg:w="1"/><text x="17.6553%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4053%" y="533" width="0.0806%" height="15" fill="rgb(207,35,15)" fg:x="216" fg:w="1"/><text x="17.6553%" y="543.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="17.4053%" y="517" width="0.0806%" height="15" fill="rgb(238,68,36)" fg:x="216" fg:w="1"/><text x="17.6553%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="17.4053%" y="501" width="0.0806%" height="15" fill="rgb(205,158,20)" fg:x="216" fg:w="1"/><text x="17.6553%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::moving::model::Exit&gt;&gt; (1 samples, 0.08%)</title><rect x="17.4859%" y="709" width="0.0806%" height="15" fill="rgb(232,32,22)" fg:x="217" fg:w="1"/><text x="17.7359%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="17.4859%" y="693" width="0.0806%" height="15" fill="rgb(210,169,6)" fg:x="217" fg:w="1"/><text x="17.7359%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="17.4859%" y="677" width="0.0806%" height="15" fill="rgb(229,28,12)" fg:x="217" fg:w="1"/><text x="17.7359%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.5665%" y="581" width="0.0806%" height="15" fill="rgb(229,78,10)" fg:x="218" fg:w="1"/><text x="17.8165%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5665%" y="565" width="0.0806%" height="15" fill="rgb(223,139,54)" fg:x="218" fg:w="1"/><text x="17.8165%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.5665%" y="549" width="0.0806%" height="15" fill="rgb(207,110,4)" fg:x="218" fg:w="1"/><text x="17.8165%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.5665%" y="533" width="0.0806%" height="15" fill="rgb(248,30,41)" fg:x="218" fg:w="1"/><text x="17.8165%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.5665%" y="517" width="0.0806%" height="15" fill="rgb(235,54,25)" fg:x="218" fg:w="1"/><text x="17.8165%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.5665%" y="501" width="0.0806%" height="15" fill="rgb(213,107,41)" fg:x="218" fg:w="1"/><text x="17.8165%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5665%" y="485" width="0.0806%" height="15" fill="rgb(237,102,9)" fg:x="218" fg:w="1"/><text x="17.8165%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.5665%" y="469" width="0.0806%" height="15" fill="rgb(252,137,49)" fg:x="218" fg:w="1"/><text x="17.8165%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.5665%" y="453" width="0.0806%" height="15" fill="rgb(233,202,33)" fg:x="218" fg:w="1"/><text x="17.8165%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.5665%" y="437" width="0.0806%" height="15" fill="rgb(223,14,51)" fg:x="218" fg:w="1"/><text x="17.8165%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.5665%" y="421" width="0.0806%" height="15" fill="rgb(248,70,23)" fg:x="218" fg:w="1"/><text x="17.8165%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.5665%" y="405" width="0.0806%" height="15" fill="rgb(209,207,47)" fg:x="218" fg:w="1"/><text x="17.8165%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.5665%" y="389" width="0.0806%" height="15" fill="rgb(245,124,2)" fg:x="218" fg:w="1"/><text x="17.8165%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.5665%" y="629" width="0.1612%" height="15" fill="rgb(249,208,11)" fg:x="218" fg:w="2"/><text x="17.8165%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.5665%" y="613" width="0.1612%" height="15" fill="rgb(247,112,7)" fg:x="218" fg:w="2"/><text x="17.8165%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.5665%" y="597" width="0.1612%" height="15" fill="rgb(209,192,31)" fg:x="218" fg:w="2"/><text x="17.8165%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.6471%" y="581" width="0.0806%" height="15" fill="rgb(236,55,19)" fg:x="219" fg:w="1"/><text x="17.8971%" y="591.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="17.5665%" y="677" width="0.2417%" height="15" fill="rgb(252,89,41)" fg:x="218" fg:w="3"/><text x="17.8165%" y="687.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="17.5665%" y="661" width="0.2417%" height="15" fill="rgb(220,172,14)" fg:x="218" fg:w="3"/><text x="17.8165%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="17.5665%" y="645" width="0.2417%" height="15" fill="rgb(252,65,2)" fg:x="218" fg:w="3"/><text x="17.8165%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.7276%" y="629" width="0.0806%" height="15" fill="rgb(250,20,8)" fg:x="220" fg:w="1"/><text x="17.9776%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="613" width="0.0806%" height="15" fill="rgb(234,149,13)" fg:x="220" fg:w="1"/><text x="17.9776%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="17.7276%" y="597" width="0.0806%" height="15" fill="rgb(223,219,12)" fg:x="220" fg:w="1"/><text x="17.9776%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="581" width="0.0806%" height="15" fill="rgb(234,13,49)" fg:x="220" fg:w="1"/><text x="17.9776%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="17.7276%" y="565" width="0.0806%" height="15" fill="rgb(214,41,25)" fg:x="220" fg:w="1"/><text x="17.9776%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="17.7276%" y="549" width="0.0806%" height="15" fill="rgb(232,198,52)" fg:x="220" fg:w="1"/><text x="17.9776%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8082%" y="613" width="0.0806%" height="15" fill="rgb(236,111,46)" fg:x="221" fg:w="1"/><text x="18.0582%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8082%" y="597" width="0.0806%" height="15" fill="rgb(253,30,20)" fg:x="221" fg:w="1"/><text x="18.0582%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="17.8082%" y="581" width="0.0806%" height="15" fill="rgb(247,141,17)" fg:x="221" fg:w="1"/><text x="18.0582%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="17.8082%" y="629" width="0.1612%" height="15" fill="rgb(214,195,21)" fg:x="221" fg:w="2"/><text x="18.0582%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8888%" y="613" width="0.0806%" height="15" fill="rgb(214,98,12)" fg:x="222" fg:w="1"/><text x="18.1388%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="17.8888%" y="597" width="0.0806%" height="15" fill="rgb(239,4,26)" fg:x="222" fg:w="1"/><text x="18.1388%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="17.8888%" y="581" width="0.0806%" height="15" fill="rgb(234,210,35)" fg:x="222" fg:w="1"/><text x="18.1388%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="17.8888%" y="565" width="0.0806%" height="15" fill="rgb(252,178,27)" fg:x="222" fg:w="1"/><text x="18.1388%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="17.8888%" y="549" width="0.0806%" height="15" fill="rgb(217,50,1)" fg:x="222" fg:w="1"/><text x="18.1388%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8888%" y="533" width="0.0806%" height="15" fill="rgb(233,137,5)" fg:x="222" fg:w="1"/><text x="18.1388%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="17.8888%" y="517" width="0.0806%" height="15" fill="rgb(217,227,25)" fg:x="222" fg:w="1"/><text x="18.1388%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="17.8888%" y="501" width="0.0806%" height="15" fill="rgb(242,89,38)" fg:x="222" fg:w="1"/><text x="18.1388%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="17.8888%" y="485" width="0.0806%" height="15" fill="rgb(212,190,30)" fg:x="222" fg:w="1"/><text x="18.1388%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="17.8888%" y="469" width="0.0806%" height="15" fill="rgb(222,120,8)" fg:x="222" fg:w="1"/><text x="18.1388%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="17.8888%" y="453" width="0.0806%" height="15" fill="rgb(227,181,9)" fg:x="222" fg:w="1"/><text x="18.1388%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="17.8888%" y="437" width="0.0806%" height="15" fill="rgb(222,125,29)" fg:x="222" fg:w="1"/><text x="18.1388%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="17.9694%" y="629" width="0.0806%" height="15" fill="rgb(215,153,31)" fg:x="223" fg:w="1"/><text x="18.2194%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.0500%" y="501" width="0.0806%" height="15" fill="rgb(228,77,30)" fg:x="224" fg:w="1"/><text x="18.3000%" y="511.50"></text></g><g><title>plugins_core::build::Build::leads_to (16 samples, 1.29%)</title><rect x="17.0024%" y="741" width="1.2893%" height="15" fill="rgb(226,110,9)" fg:x="211" fg:w="16"/><text x="17.2524%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (10 samples, 0.81%)</title><rect x="17.4859%" y="725" width="0.8058%" height="15" fill="rgb(219,111,7)" fg:x="217" fg:w="10"/><text x="17.7359%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="17.5665%" y="709" width="0.7252%" height="15" fill="rgb(229,167,25)" fg:x="218" fg:w="9"/><text x="17.8165%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.73%)</title><rect x="17.5665%" y="693" width="0.7252%" height="15" fill="rgb(209,77,43)" fg:x="218" fg:w="9"/><text x="17.8165%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="17.8082%" y="677" width="0.4835%" height="15" fill="rgb(233,70,39)" fg:x="221" fg:w="6"/><text x="18.0582%" y="687.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="17.8082%" y="661" width="0.4835%" height="15" fill="rgb(207,171,44)" fg:x="221" fg:w="6"/><text x="18.0582%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="17.8082%" y="645" width="0.4835%" height="15" fill="rgb(244,91,6)" fg:x="221" fg:w="6"/><text x="18.0582%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.0500%" y="629" width="0.2417%" height="15" fill="rgb(234,136,12)" fg:x="224" fg:w="3"/><text x="18.3000%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0500%" y="613" width="0.2417%" height="15" fill="rgb(216,210,38)" fg:x="224" fg:w="3"/><text x="18.3000%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.0500%" y="597" width="0.2417%" height="15" fill="rgb(241,227,7)" fg:x="224" fg:w="3"/><text x="18.3000%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0500%" y="581" width="0.2417%" height="15" fill="rgb(241,222,11)" fg:x="224" fg:w="3"/><text x="18.3000%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="18.0500%" y="565" width="0.2417%" height="15" fill="rgb(246,86,18)" fg:x="224" fg:w="3"/><text x="18.3000%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0500%" y="549" width="0.2417%" height="15" fill="rgb(224,151,49)" fg:x="224" fg:w="3"/><text x="18.3000%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (3 samples, 0.24%)</title><rect x="18.0500%" y="533" width="0.2417%" height="15" fill="rgb(235,4,41)" fg:x="224" fg:w="3"/><text x="18.3000%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="18.0500%" y="517" width="0.2417%" height="15" fill="rgb(218,30,52)" fg:x="224" fg:w="3"/><text x="18.3000%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="18.1305%" y="501" width="0.1612%" height="15" fill="rgb(205,124,51)" fg:x="225" fg:w="2"/><text x="18.3805%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="18.1305%" y="485" width="0.1612%" height="15" fill="rgb(237,126,51)" fg:x="225" fg:w="2"/><text x="18.3805%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="18.2111%" y="469" width="0.0806%" height="15" fill="rgb(225,32,46)" fg:x="226" fg:w="1"/><text x="18.4611%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="18.2111%" y="453" width="0.0806%" height="15" fill="rgb(251,60,49)" fg:x="226" fg:w="1"/><text x="18.4611%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="18.2111%" y="437" width="0.0806%" height="15" fill="rgb(234,18,23)" fg:x="226" fg:w="1"/><text x="18.4611%" y="447.50"></text></g><g><title>core::iter::adapters::try_process (20 samples, 1.61%)</title><rect x="16.7607%" y="789" width="1.6116%" height="15" fill="rgb(234,25,23)" fg:x="208" fg:w="20"/><text x="17.0107%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 1.61%)</title><rect x="16.7607%" y="773" width="1.6116%" height="15" fill="rgb(210,43,52)" fg:x="208" fg:w="20"/><text x="17.0107%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (20 samples, 1.61%)</title><rect x="16.7607%" y="757" width="1.6116%" height="15" fill="rgb(237,198,21)" fg:x="208" fg:w="20"/><text x="17.0107%" y="767.50"></text></g><g><title>plugins_core::build::Build::named (1 samples, 0.08%)</title><rect x="18.2917%" y="741" width="0.0806%" height="15" fill="rgb(211,20,34)" fg:x="227" fg:w="1"/><text x="18.5417%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (1 samples, 0.08%)</title><rect x="18.2917%" y="725" width="0.0806%" height="15" fill="rgb(221,155,50)" fg:x="227" fg:w="1"/><text x="18.5417%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="18.2917%" y="709" width="0.0806%" height="15" fill="rgb(213,214,53)" fg:x="227" fg:w="1"/><text x="18.5417%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.2917%" y="693" width="0.0806%" height="15" fill="rgb(215,229,48)" fg:x="227" fg:w="1"/><text x="18.5417%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="18.2917%" y="677" width="0.0806%" height="15" fill="rgb(243,88,5)" fg:x="227" fg:w="1"/><text x="18.5417%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.2917%" y="661" width="0.0806%" height="15" fill="rgb(216,199,8)" fg:x="227" fg:w="1"/><text x="18.5417%" y="671.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="18.2917%" y="645" width="0.0806%" height="15" fill="rgb(241,22,4)" fg:x="227" fg:w="1"/><text x="18.5417%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.2917%" y="629" width="0.0806%" height="15" fill="rgb(209,190,22)" fg:x="227" fg:w="1"/><text x="18.5417%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2917%" y="613" width="0.0806%" height="15" fill="rgb(251,138,45)" fg:x="227" fg:w="1"/><text x="18.5417%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.2917%" y="597" width="0.0806%" height="15" fill="rgb(219,111,22)" fg:x="227" fg:w="1"/><text x="18.5417%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.2917%" y="581" width="0.0806%" height="15" fill="rgb(253,29,49)" fg:x="227" fg:w="1"/><text x="18.5417%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;kernel::model::entry::Entry&gt;&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="789" width="0.0806%" height="15" fill="rgb(238,129,49)" fg:x="228" fg:w="1"/><text x="18.6223%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="773" width="0.0806%" height="15" fill="rgb(240,26,41)" fg:x="228" fg:w="1"/><text x="18.6223%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="18.3723%" y="757" width="0.0806%" height="15" fill="rgb(221,47,33)" fg:x="228" fg:w="1"/><text x="18.6223%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="18.4529%" y="757" width="0.0806%" height="15" fill="rgb(216,200,17)" fg:x="229" fg:w="1"/><text x="18.7029%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;core::option::Option&lt;engine::session::ModifiedEntity&gt;&gt;&gt;&gt; (1 samples, 0.08%)</title><rect x="18.4529%" y="741" width="0.0806%" height="15" fill="rgb(230,151,26)" fg:x="229" fg:w="1"/><text x="18.7029%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5334%" y="741" width="0.0806%" height="15" fill="rgb(242,182,16)" fg:x="230" fg:w="1"/><text x="18.7834%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.5334%" y="725" width="0.0806%" height="15" fill="rgb(236,35,53)" fg:x="230" fg:w="1"/><text x="18.7834%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.5334%" y="709" width="0.0806%" height="15" fill="rgb(214,180,28)" fg:x="230" fg:w="1"/><text x="18.7834%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.5334%" y="693" width="0.0806%" height="15" fill="rgb(208,173,36)" fg:x="230" fg:w="1"/><text x="18.7834%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.5334%" y="677" width="0.0806%" height="15" fill="rgb(218,39,15)" fg:x="230" fg:w="1"/><text x="18.7834%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5334%" y="661" width="0.0806%" height="15" fill="rgb(213,145,15)" fg:x="230" fg:w="1"/><text x="18.7834%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="18.5334%" y="645" width="0.0806%" height="15" fill="rgb(242,110,37)" fg:x="230" fg:w="1"/><text x="18.7834%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="18.5334%" y="629" width="0.0806%" height="15" fill="rgb(247,146,22)" fg:x="230" fg:w="1"/><text x="18.7834%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="18.5334%" y="613" width="0.0806%" height="15" fill="rgb(215,191,7)" fg:x="230" fg:w="1"/><text x="18.7834%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="18.5334%" y="597" width="0.0806%" height="15" fill="rgb(240,158,1)" fg:x="230" fg:w="1"/><text x="18.7834%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="18.5334%" y="581" width="0.0806%" height="15" fill="rgb(241,78,32)" fg:x="230" fg:w="1"/><text x="18.7834%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.5334%" y="565" width="0.0806%" height="15" fill="rgb(248,83,10)" fg:x="230" fg:w="1"/><text x="18.7834%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (2 samples, 0.16%)</title><rect x="18.5334%" y="757" width="0.1612%" height="15" fill="rgb(241,52,0)" fg:x="230" fg:w="2"/><text x="18.7834%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="18.6140%" y="741" width="0.0806%" height="15" fill="rgb(238,37,13)" fg:x="231" fg:w="1"/><text x="18.8640%" y="751.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="18.6946%" y="725" width="0.0806%" height="15" fill="rgb(242,194,17)" fg:x="232" fg:w="1"/><text x="18.9446%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6946%" y="709" width="0.0806%" height="15" fill="rgb(236,96,3)" fg:x="232" fg:w="1"/><text x="18.9446%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="18.6946%" y="693" width="0.0806%" height="15" fill="rgb(235,148,34)" fg:x="232" fg:w="1"/><text x="18.9446%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="18.6946%" y="677" width="0.0806%" height="15" fill="rgb(254,12,11)" fg:x="232" fg:w="1"/><text x="18.9446%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="18.6946%" y="661" width="0.0806%" height="15" fill="rgb(207,31,54)" fg:x="232" fg:w="1"/><text x="18.9446%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="18.6946%" y="645" width="0.0806%" height="15" fill="rgb(252,14,28)" fg:x="232" fg:w="1"/><text x="18.9446%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6946%" y="629" width="0.0806%" height="15" fill="rgb(252,108,36)" fg:x="232" fg:w="1"/><text x="18.9446%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="18.6946%" y="613" width="0.0806%" height="15" fill="rgb(214,149,7)" fg:x="232" fg:w="1"/><text x="18.9446%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="18.6946%" y="757" width="0.1612%" height="15" fill="rgb(243,94,12)" fg:x="232" fg:w="2"/><text x="18.9446%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="18.6946%" y="741" width="0.1612%" height="15" fill="rgb(208,36,10)" fg:x="232" fg:w="2"/><text x="18.9446%" y="751.50"></text></g><g><title>engine::session::SavesEntities::save_entity (1 samples, 0.08%)</title><rect x="18.7752%" y="725" width="0.0806%" height="15" fill="rgb(233,185,52)" fg:x="233" fg:w="1"/><text x="19.0252%" y="735.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="18.7752%" y="709" width="0.0806%" height="15" fill="rgb(234,50,45)" fg:x="233" fg:w="1"/><text x="19.0252%" y="719.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="18.7752%" y="693" width="0.0806%" height="15" fill="rgb(228,92,54)" fg:x="233" fg:w="1"/><text x="19.0252%" y="703.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="18.8558%" y="757" width="0.0806%" height="15" fill="rgb(224,85,25)" fg:x="234" fg:w="1"/><text x="19.1058%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="18.8558%" y="741" width="0.0806%" height="15" fill="rgb(246,1,45)" fg:x="234" fg:w="1"/><text x="19.1058%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="18.8558%" y="725" width="0.0806%" height="15" fill="rgb(240,66,23)" fg:x="234" fg:w="1"/><text x="19.1058%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="18.8558%" y="709" width="0.0806%" height="15" fill="rgb(222,96,27)" fg:x="234" fg:w="1"/><text x="19.1058%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="18.8558%" y="693" width="0.0806%" height="15" fill="rgb(212,136,10)" fg:x="234" fg:w="1"/><text x="19.1058%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0169%" y="725" width="0.0806%" height="15" fill="rgb(226,192,50)" fg:x="236" fg:w="1"/><text x="19.2669%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="19.0169%" y="709" width="0.0806%" height="15" fill="rgb(241,182,31)" fg:x="236" fg:w="1"/><text x="19.2669%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="19.0169%" y="693" width="0.0806%" height="15" fill="rgb(219,205,47)" fg:x="236" fg:w="1"/><text x="19.2669%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="19.0169%" y="677" width="0.0806%" height="15" fill="rgb(207,96,14)" fg:x="236" fg:w="1"/><text x="19.2669%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="19.0169%" y="661" width="0.0806%" height="15" fill="rgb(216,119,9)" fg:x="236" fg:w="1"/><text x="19.2669%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0169%" y="645" width="0.0806%" height="15" fill="rgb(235,62,36)" fg:x="236" fg:w="1"/><text x="19.2669%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="19.0169%" y="629" width="0.0806%" height="15" fill="rgb(214,41,27)" fg:x="236" fg:w="1"/><text x="19.2669%" y="639.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (5 samples, 0.40%)</title><rect x="19.0975%" y="709" width="0.4029%" height="15" fill="rgb(214,174,37)" fg:x="237" fg:w="5"/><text x="19.3475%" y="719.50"></text></g><g><title>serde_json::ser::format_escaped_str (5 samples, 0.40%)</title><rect x="19.0975%" y="693" width="0.4029%" height="15" fill="rgb(212,11,25)" fg:x="237" fg:w="5"/><text x="19.3475%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="19.3392%" y="677" width="0.1612%" height="15" fill="rgb(217,71,35)" fg:x="240" fg:w="2"/><text x="19.5892%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="19.4198%" y="661" width="0.0806%" height="15" fill="rgb(234,152,9)" fg:x="241" fg:w="1"/><text x="19.6698%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="19.4198%" y="645" width="0.0806%" height="15" fill="rgb(228,32,51)" fg:x="241" fg:w="1"/><text x="19.6698%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="19.7421%" y="693" width="0.1612%" height="15" fill="rgb(209,14,47)" fg:x="245" fg:w="2"/><text x="19.9921%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="20.0645%" y="677" width="0.0806%" height="15" fill="rgb(218,201,17)" fg:x="249" fg:w="1"/><text x="20.3145%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.0645%" y="661" width="0.0806%" height="15" fill="rgb(218,98,15)" fg:x="249" fg:w="1"/><text x="20.3145%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.1450%" y="677" width="0.1612%" height="15" fill="rgb(233,202,29)" fg:x="250" fg:w="2"/><text x="20.3950%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.1450%" y="661" width="0.1612%" height="15" fill="rgb(207,196,44)" fg:x="250" fg:w="2"/><text x="20.3950%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.1450%" y="645" width="0.1612%" height="15" fill="rgb(218,63,34)" fg:x="250" fg:w="2"/><text x="20.3950%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.2256%" y="629" width="0.0806%" height="15" fill="rgb(209,10,5)" fg:x="251" fg:w="1"/><text x="20.4756%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.3062%" y="661" width="0.1612%" height="15" fill="rgb(224,36,28)" fg:x="252" fg:w="2"/><text x="20.5562%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.3868%" y="645" width="0.0806%" height="15" fill="rgb(249,178,7)" fg:x="253" fg:w="1"/><text x="20.6368%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.3868%" y="629" width="0.0806%" height="15" fill="rgb(253,163,10)" fg:x="253" fg:w="1"/><text x="20.6368%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="20.4674%" y="645" width="0.1612%" height="15" fill="rgb(245,67,46)" fg:x="254" fg:w="2"/><text x="20.7174%" y="655.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.4674%" y="629" width="0.1612%" height="15" fill="rgb(225,14,18)" fg:x="254" fg:w="2"/><text x="20.7174%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.5479%" y="613" width="0.0806%" height="15" fill="rgb(217,41,54)" fg:x="255" fg:w="1"/><text x="20.7979%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="20.6285%" y="629" width="0.0806%" height="15" fill="rgb(222,111,11)" fg:x="256" fg:w="1"/><text x="20.8785%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.7091%" y="629" width="0.0806%" height="15" fill="rgb(211,85,31)" fg:x="257" fg:w="1"/><text x="20.9591%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="20.7091%" y="613" width="0.0806%" height="15" fill="rgb(223,29,26)" fg:x="257" fg:w="1"/><text x="20.9591%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="20.7091%" y="597" width="0.0806%" height="15" fill="rgb(236,124,50)" fg:x="257" fg:w="1"/><text x="20.9591%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.7091%" y="581" width="0.0806%" height="15" fill="rgb(219,148,15)" fg:x="257" fg:w="1"/><text x="20.9591%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="20.7897%" y="565" width="0.0806%" height="15" fill="rgb(248,159,33)" fg:x="258" fg:w="1"/><text x="21.0397%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="20.7897%" y="613" width="0.1612%" height="15" fill="rgb(252,65,8)" fg:x="258" fg:w="2"/><text x="21.0397%" y="623.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="20.7897%" y="597" width="0.1612%" height="15" fill="rgb(236,45,7)" fg:x="258" fg:w="2"/><text x="21.0397%" y="607.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="20.7897%" y="581" width="0.1612%" height="15" fill="rgb(244,3,48)" fg:x="258" fg:w="2"/><text x="21.0397%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="20.8703%" y="565" width="0.0806%" height="15" fill="rgb(224,123,53)" fg:x="259" fg:w="1"/><text x="21.1203%" y="575.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="20.9508%" y="613" width="0.0806%" height="15" fill="rgb(223,173,15)" fg:x="260" fg:w="1"/><text x="21.2008%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (6 samples, 0.48%)</title><rect x="20.6285%" y="645" width="0.4835%" height="15" fill="rgb(254,181,5)" fg:x="256" fg:w="6"/><text x="20.8785%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="20.7897%" y="629" width="0.3223%" height="15" fill="rgb(243,124,33)" fg:x="258" fg:w="4"/><text x="21.0397%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.0314%" y="613" width="0.0806%" height="15" fill="rgb(253,220,11)" fg:x="261" fg:w="1"/><text x="21.2814%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="21.0314%" y="597" width="0.0806%" height="15" fill="rgb(217,14,4)" fg:x="261" fg:w="1"/><text x="21.2814%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="21.0314%" y="581" width="0.0806%" height="15" fill="rgb(209,196,12)" fg:x="261" fg:w="1"/><text x="21.2814%" y="591.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="20.4674%" y="661" width="0.7252%" height="15" fill="rgb(237,108,29)" fg:x="254" fg:w="9"/><text x="20.7174%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="21.1120%" y="645" width="0.0806%" height="15" fill="rgb(216,173,20)" fg:x="262" fg:w="1"/><text x="21.3620%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (20 samples, 1.61%)</title><rect x="19.9033%" y="693" width="1.6116%" height="15" fill="rgb(245,27,6)" fg:x="247" fg:w="20"/><text x="20.1533%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (15 samples, 1.21%)</title><rect x="20.3062%" y="677" width="1.2087%" height="15" fill="rgb(210,181,20)" fg:x="252" fg:w="15"/><text x="20.5562%" y="687.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.32%)</title><rect x="21.1926%" y="661" width="0.3223%" height="15" fill="rgb(235,213,1)" fg:x="263" fg:w="4"/><text x="21.4426%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="21.1926%" y="645" width="0.3223%" height="15" fill="rgb(239,68,43)" fg:x="263" fg:w="4"/><text x="21.4426%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.3537%" y="629" width="0.1612%" height="15" fill="rgb(254,137,43)" fg:x="265" fg:w="2"/><text x="21.6037%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="21.6761%" y="661" width="0.1612%" height="15" fill="rgb(252,170,38)" fg:x="269" fg:w="2"/><text x="21.9261%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="21.7566%" y="645" width="0.0806%" height="15" fill="rgb(234,21,42)" fg:x="270" fg:w="1"/><text x="22.0066%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="21.7566%" y="629" width="0.0806%" height="15" fill="rgb(216,145,40)" fg:x="270" fg:w="1"/><text x="22.0066%" y="639.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="21.7566%" y="613" width="0.0806%" height="15" fill="rgb(251,73,9)" fg:x="270" fg:w="1"/><text x="22.0066%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (35 samples, 2.82%)</title><rect x="19.0975%" y="725" width="2.8203%" height="15" fill="rgb(242,54,6)" fg:x="237" fg:w="35"/><text x="19.3475%" y="735.50">&lt;s..</text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (30 samples, 2.42%)</title><rect x="19.5004%" y="709" width="2.4174%" height="15" fill="rgb(239,70,7)" fg:x="242" fg:w="30"/><text x="19.7504%" y="719.50">se..</text></g><g><title>std::io::Write::write_all (5 samples, 0.40%)</title><rect x="21.5149%" y="693" width="0.4029%" height="15" fill="rgb(216,159,35)" fg:x="267" fg:w="5"/><text x="21.7649%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="21.5955%" y="677" width="0.3223%" height="15" fill="rgb(224,50,39)" fg:x="268" fg:w="4"/><text x="21.8455%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="21.8372%" y="661" width="0.0806%" height="15" fill="rgb(235,9,35)" fg:x="271" fg:w="1"/><text x="22.0872%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="21.9178%" y="693" width="0.0806%" height="15" fill="rgb(239,34,21)" fg:x="272" fg:w="1"/><text x="22.1678%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="21.9984%" y="693" width="0.0806%" height="15" fill="rgb(218,162,43)" fg:x="273" fg:w="1"/><text x="22.2484%" y="703.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="22.0790%" y="677" width="0.1612%" height="15" fill="rgb(219,89,33)" fg:x="274" fg:w="2"/><text x="22.3290%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.2401%" y="661" width="0.0806%" height="15" fill="rgb(226,125,37)" fg:x="276" fg:w="1"/><text x="22.4901%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="22.3207%" y="661" width="0.1612%" height="15" fill="rgb(233,149,30)" fg:x="277" fg:w="2"/><text x="22.5707%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.4819%" y="645" width="0.0806%" height="15" fill="rgb(236,8,18)" fg:x="279" fg:w="1"/><text x="22.7319%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.5624%" y="629" width="0.0806%" height="15" fill="rgb(205,176,9)" fg:x="280" fg:w="1"/><text x="22.8124%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (13 samples, 1.05%)</title><rect x="21.9178%" y="725" width="1.0475%" height="15" fill="rgb(252,103,44)" fg:x="272" fg:w="13"/><text x="22.1678%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (13 samples, 1.05%)</title><rect x="21.9178%" y="709" width="1.0475%" height="15" fill="rgb(207,68,53)" fg:x="272" fg:w="13"/><text x="22.1678%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="22.0790%" y="693" width="0.8864%" height="15" fill="rgb(218,193,48)" fg:x="274" fg:w="11"/><text x="22.3290%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="22.2401%" y="677" width="0.7252%" height="15" fill="rgb(234,121,52)" fg:x="276" fg:w="9"/><text x="22.4901%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="22.4819%" y="661" width="0.4835%" height="15" fill="rgb(227,218,49)" fg:x="279" fg:w="6"/><text x="22.7319%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="22.5624%" y="645" width="0.4029%" height="15" fill="rgb(221,8,7)" fg:x="280" fg:w="5"/><text x="22.8124%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="22.6430%" y="629" width="0.3223%" height="15" fill="rgb(217,151,36)" fg:x="281" fg:w="4"/><text x="22.8930%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="22.8042%" y="613" width="0.1612%" height="15" fill="rgb(213,71,5)" fg:x="283" fg:w="2"/><text x="23.0542%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="22.8848%" y="597" width="0.0806%" height="15" fill="rgb(225,145,43)" fg:x="284" fg:w="1"/><text x="23.1348%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::end (1 samples, 0.08%)</title><rect x="23.0459%" y="693" width="0.0806%" height="15" fill="rgb(235,118,19)" fg:x="286" fg:w="1"/><text x="23.2959%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="23.2071%" y="677" width="0.0806%" height="15" fill="rgb(214,102,36)" fg:x="288" fg:w="1"/><text x="23.4571%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="23.2071%" y="661" width="0.0806%" height="15" fill="rgb(220,56,43)" fg:x="288" fg:w="1"/><text x="23.4571%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.2877%" y="677" width="0.0806%" height="15" fill="rgb(246,136,46)" fg:x="289" fg:w="1"/><text x="23.5377%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="23.3683%" y="677" width="0.0806%" height="15" fill="rgb(249,99,12)" fg:x="290" fg:w="1"/><text x="23.6183%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="23.3683%" y="661" width="0.0806%" height="15" fill="rgb(224,31,42)" fg:x="290" fg:w="1"/><text x="23.6183%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="23.3683%" y="645" width="0.0806%" height="15" fill="rgb(208,96,21)" fg:x="290" fg:w="1"/><text x="23.6183%" y="655.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::EntityClass&gt;::serialize (1 samples, 0.08%)</title><rect x="23.4488%" y="677" width="0.0806%" height="15" fill="rgb(237,229,7)" fg:x="291" fg:w="1"/><text x="23.6988%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (3 samples, 0.24%)</title><rect x="23.5294%" y="677" width="0.2417%" height="15" fill="rgb(210,12,6)" fg:x="292" fg:w="3"/><text x="23.7794%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="23.6100%" y="661" width="0.1612%" height="15" fill="rgb(240,9,34)" fg:x="293" fg:w="2"/><text x="23.8600%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="23.6906%" y="645" width="0.0806%" height="15" fill="rgb(211,68,37)" fg:x="294" fg:w="1"/><text x="23.9406%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0935%" y="629" width="0.0806%" height="15" fill="rgb(249,138,50)" fg:x="299" fg:w="1"/><text x="24.3435%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.0935%" y="613" width="0.0806%" height="15" fill="rgb(243,185,40)" fg:x="299" fg:w="1"/><text x="24.3435%" y="623.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="24.0935%" y="597" width="0.0806%" height="15" fill="rgb(242,92,35)" fg:x="299" fg:w="1"/><text x="24.3435%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.1741%" y="581" width="0.0806%" height="15" fill="rgb(244,98,5)" fg:x="300" fg:w="1"/><text x="24.4241%" y="591.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="24.1741%" y="629" width="0.1612%" height="15" fill="rgb(228,186,29)" fg:x="300" fg:w="2"/><text x="24.4241%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="24.1741%" y="613" width="0.1612%" height="15" fill="rgb(253,7,44)" fg:x="300" fg:w="2"/><text x="24.4241%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="24.1741%" y="597" width="0.1612%" height="15" fill="rgb(216,11,45)" fg:x="300" fg:w="2"/><text x="24.4241%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="24.2546%" y="581" width="0.0806%" height="15" fill="rgb(205,67,3)" fg:x="301" fg:w="1"/><text x="24.5046%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.2546%" y="565" width="0.0806%" height="15" fill="rgb(250,18,3)" fg:x="301" fg:w="1"/><text x="24.5046%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="24.4158%" y="597" width="0.2417%" height="15" fill="rgb(241,222,43)" fg:x="303" fg:w="3"/><text x="24.6658%" y="607.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="24.5770%" y="581" width="0.0806%" height="15" fill="rgb(233,115,3)" fg:x="305" fg:w="1"/><text x="24.8270%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="24.5770%" y="565" width="0.0806%" height="15" fill="rgb(215,165,25)" fg:x="305" fg:w="1"/><text x="24.8270%" y="575.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="24.6575%" y="597" width="0.0806%" height="15" fill="rgb(234,179,6)" fg:x="306" fg:w="1"/><text x="24.9075%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeVec as serde::ser::SerializeSeq&gt;::end (1 samples, 0.08%)</title><rect x="24.6575%" y="581" width="0.0806%" height="15" fill="rgb(215,82,23)" fg:x="306" fg:w="1"/><text x="24.9075%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9799%" y="501" width="0.1612%" height="15" fill="rgb(211,47,18)" fg:x="310" fg:w="2"/><text x="25.2299%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="24.9799%" y="485" width="0.1612%" height="15" fill="rgb(248,17,9)" fg:x="310" fg:w="2"/><text x="25.2299%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.0604%" y="469" width="0.0806%" height="15" fill="rgb(210,212,12)" fg:x="311" fg:w="1"/><text x="25.3104%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="24.0935%" y="645" width="1.1281%" height="15" fill="rgb(230,135,45)" fg:x="299" fg:w="14"/><text x="24.3435%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.89%)</title><rect x="24.3352%" y="629" width="0.8864%" height="15" fill="rgb(214,121,41)" fg:x="302" fg:w="11"/><text x="24.5852%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (11 samples, 0.89%)</title><rect x="24.3352%" y="613" width="0.8864%" height="15" fill="rgb(239,165,45)" fg:x="302" fg:w="11"/><text x="24.5852%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.7381%" y="597" width="0.4835%" height="15" fill="rgb(214,85,51)" fg:x="307" fg:w="6"/><text x="24.9881%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (6 samples, 0.48%)</title><rect x="24.7381%" y="581" width="0.4835%" height="15" fill="rgb(223,90,27)" fg:x="307" fg:w="6"/><text x="24.9881%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="24.7381%" y="565" width="0.4835%" height="15" fill="rgb(244,84,11)" fg:x="307" fg:w="6"/><text x="24.9881%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="24.8993%" y="549" width="0.3223%" height="15" fill="rgb(253,41,47)" fg:x="309" fg:w="4"/><text x="25.1493%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="24.8993%" y="533" width="0.3223%" height="15" fill="rgb(232,39,5)" fg:x="309" fg:w="4"/><text x="25.1493%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (3 samples, 0.24%)</title><rect x="24.9799%" y="517" width="0.2417%" height="15" fill="rgb(211,93,4)" fg:x="310" fg:w="3"/><text x="25.2299%" y="527.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="25.1410%" y="501" width="0.0806%" height="15" fill="rgb(219,50,49)" fg:x="312" fg:w="1"/><text x="25.3910%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 1.37%)</title><rect x="23.9323%" y="661" width="1.3699%" height="15" fill="rgb(232,80,19)" fg:x="297" fg:w="17"/><text x="24.1823%" y="671.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="25.2216%" y="645" width="0.0806%" height="15" fill="rgb(215,227,39)" fg:x="313" fg:w="1"/><text x="25.4716%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.2216%" y="629" width="0.0806%" height="15" fill="rgb(211,99,12)" fg:x="313" fg:w="1"/><text x="25.4716%" y="639.50"></text></g><g><title>engine::session::Session::flush (86 samples, 6.93%)</title><rect x="18.4529%" y="789" width="6.9299%" height="15" fill="rgb(214,158,5)" fg:x="229" fg:w="86"/><text x="18.7029%" y="799.50">engine::s..</text></g><g><title>engine::session::Session::save_entity_changes (86 samples, 6.93%)</title><rect x="18.4529%" y="773" width="6.9299%" height="15" fill="rgb(242,19,53)" fg:x="229" fg:w="86"/><text x="18.7029%" y="783.50">engine::s..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (80 samples, 6.45%)</title><rect x="18.9363%" y="757" width="6.4464%" height="15" fill="rgb(208,18,20)" fg:x="235" fg:w="80"/><text x="19.1863%" y="767.50">engine::..</text></g><g><title>engine::session::SavesEntities::check_for_changes (79 samples, 6.37%)</title><rect x="19.0169%" y="741" width="6.3658%" height="15" fill="rgb(250,44,11)" fg:x="236" fg:w="79"/><text x="19.2669%" y="751.50">engine::..</text></g><g><title>kernel::model::any_entity_changes (30 samples, 2.42%)</title><rect x="22.9654%" y="725" width="2.4174%" height="15" fill="rgb(238,159,13)" fg:x="285" fg:w="30"/><text x="23.2154%" y="735.50">ke..</text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (30 samples, 2.42%)</title><rect x="22.9654%" y="709" width="2.4174%" height="15" fill="rgb(231,74,18)" fg:x="285" fg:w="30"/><text x="23.2154%" y="719.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (28 samples, 2.26%)</title><rect x="23.1265%" y="693" width="2.2562%" height="15" fill="rgb(229,219,45)" fg:x="287" fg:w="28"/><text x="23.3765%" y="703.50">&lt;..</text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 1.61%)</title><rect x="23.7712%" y="677" width="1.6116%" height="15" fill="rgb(210,221,1)" fg:x="295" fg:w="20"/><text x="24.0212%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.3022%" y="661" width="0.0806%" height="15" fill="rgb(209,60,51)" fg:x="314" fg:w="1"/><text x="25.5522%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (2 samples, 0.16%)</title><rect x="25.3828%" y="789" width="0.1612%" height="15" fill="rgb(252,97,34)" fg:x="315" fg:w="2"/><text x="25.6328%" y="799.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (2 samples, 0.16%)</title><rect x="25.3828%" y="773" width="0.1612%" height="15" fill="rgb(243,211,37)" fg:x="315" fg:w="2"/><text x="25.6328%" y="783.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="25.4633%" y="757" width="0.0806%" height="15" fill="rgb(210,229,37)" fg:x="316" fg:w="1"/><text x="25.7133%" y="767.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="25.4633%" y="741" width="0.0806%" height="15" fill="rgb(220,208,43)" fg:x="316" fg:w="1"/><text x="25.7133%" y="751.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="25.4633%" y="725" width="0.0806%" height="15" fill="rgb(218,118,50)" fg:x="316" fg:w="1"/><text x="25.7133%" y="735.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="25.4633%" y="709" width="0.0806%" height="15" fill="rgb(254,169,52)" fg:x="316" fg:w="1"/><text x="25.7133%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="25.5439%" y="757" width="0.0806%" height="15" fill="rgb(221,214,37)" fg:x="317" fg:w="1"/><text x="25.7939%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="25.5439%" y="741" width="0.0806%" height="15" fill="rgb(254,186,32)" fg:x="317" fg:w="1"/><text x="25.7939%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="25.5439%" y="725" width="0.0806%" height="15" fill="rgb(215,144,43)" fg:x="317" fg:w="1"/><text x="25.7939%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="25.5439%" y="709" width="0.0806%" height="15" fill="rgb(252,21,46)" fg:x="317" fg:w="1"/><text x="25.7939%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.5439%" y="693" width="0.0806%" height="15" fill="rgb(207,166,46)" fg:x="317" fg:w="1"/><text x="25.7939%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="25.5439%" y="677" width="0.0806%" height="15" fill="rgb(253,37,49)" fg:x="317" fg:w="1"/><text x="25.7939%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="25.5439%" y="661" width="0.0806%" height="15" fill="rgb(222,97,20)" fg:x="317" fg:w="1"/><text x="25.7939%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="25.5439%" y="645" width="0.0806%" height="15" fill="rgb(244,181,26)" fg:x="317" fg:w="1"/><text x="25.7939%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="25.5439%" y="629" width="0.0806%" height="15" fill="rgb(241,22,29)" fg:x="317" fg:w="1"/><text x="25.7939%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.6245%" y="677" width="0.2417%" height="15" fill="rgb(206,200,43)" fg:x="318" fg:w="3"/><text x="25.8745%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.6245%" y="661" width="0.2417%" height="15" fill="rgb(226,224,43)" fg:x="318" fg:w="3"/><text x="25.8745%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="25.6245%" y="645" width="0.2417%" height="15" fill="rgb(253,129,28)" fg:x="318" fg:w="3"/><text x="25.8745%" y="655.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="25.6245%" y="629" width="0.2417%" height="15" fill="rgb(252,99,33)" fg:x="318" fg:w="3"/><text x="25.8745%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="677" width="0.0806%" height="15" fill="rgb(208,123,45)" fg:x="321" fg:w="1"/><text x="26.1162%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="661" width="0.0806%" height="15" fill="rgb(251,106,12)" fg:x="321" fg:w="1"/><text x="26.1162%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="645" width="0.0806%" height="15" fill="rgb(240,209,35)" fg:x="321" fg:w="1"/><text x="26.1162%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="25.8662%" y="629" width="0.0806%" height="15" fill="rgb(214,52,50)" fg:x="321" fg:w="1"/><text x="26.1162%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="25.8662%" y="613" width="0.0806%" height="15" fill="rgb(234,119,4)" fg:x="321" fg:w="1"/><text x="26.1162%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="25.6245%" y="725" width="0.4029%" height="15" fill="rgb(228,181,36)" fg:x="318" fg:w="5"/><text x="25.8745%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="25.6245%" y="709" width="0.4029%" height="15" fill="rgb(213,171,42)" fg:x="318" fg:w="5"/><text x="25.8745%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="25.6245%" y="693" width="0.4029%" height="15" fill="rgb(239,14,41)" fg:x="318" fg:w="5"/><text x="25.8745%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.9468%" y="677" width="0.0806%" height="15" fill="rgb(239,111,46)" fg:x="322" fg:w="1"/><text x="26.1968%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="661" width="0.0806%" height="15" fill="rgb(214,72,7)" fg:x="322" fg:w="1"/><text x="26.1968%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.9468%" y="645" width="0.0806%" height="15" fill="rgb(221,114,1)" fg:x="322" fg:w="1"/><text x="26.1968%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="629" width="0.0806%" height="15" fill="rgb(213,143,14)" fg:x="322" fg:w="1"/><text x="26.1968%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="25.9468%" y="613" width="0.0806%" height="15" fill="rgb(220,221,53)" fg:x="322" fg:w="1"/><text x="26.1968%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="597" width="0.0806%" height="15" fill="rgb(236,189,27)" fg:x="322" fg:w="1"/><text x="26.1968%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="25.9468%" y="581" width="0.0806%" height="15" fill="rgb(252,139,49)" fg:x="322" fg:w="1"/><text x="26.1968%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="25.9468%" y="565" width="0.0806%" height="15" fill="rgb(231,158,33)" fg:x="322" fg:w="1"/><text x="26.1968%" y="575.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="26.0274%" y="709" width="0.0806%" height="15" fill="rgb(207,201,15)" fg:x="323" fg:w="1"/><text x="26.2774%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="26.0274%" y="693" width="0.0806%" height="15" fill="rgb(218,43,48)" fg:x="323" fg:w="1"/><text x="26.2774%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1080%" y="677" width="0.0806%" height="15" fill="rgb(244,63,52)" fg:x="324" fg:w="1"/><text x="26.3580%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="26.1080%" y="661" width="0.0806%" height="15" fill="rgb(236,60,17)" fg:x="324" fg:w="1"/><text x="26.3580%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.1080%" y="645" width="0.0806%" height="15" fill="rgb(205,206,29)" fg:x="324" fg:w="1"/><text x="26.3580%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="26.1080%" y="629" width="0.0806%" height="15" fill="rgb(205,209,35)" fg:x="324" fg:w="1"/><text x="26.3580%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="26.1080%" y="613" width="0.0806%" height="15" fill="rgb(227,112,14)" fg:x="324" fg:w="1"/><text x="26.3580%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="26.1080%" y="597" width="0.0806%" height="15" fill="rgb(248,151,9)" fg:x="324" fg:w="1"/><text x="26.3580%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="26.1080%" y="581" width="0.0806%" height="15" fill="rgb(247,45,40)" fg:x="324" fg:w="1"/><text x="26.3580%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.1080%" y="565" width="0.0806%" height="15" fill="rgb(232,185,16)" fg:x="324" fg:w="1"/><text x="26.3580%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="26.1080%" y="549" width="0.0806%" height="15" fill="rgb(215,45,44)" fg:x="324" fg:w="1"/><text x="26.3580%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="26.1080%" y="533" width="0.0806%" height="15" fill="rgb(206,69,32)" fg:x="324" fg:w="1"/><text x="26.3580%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="26.1080%" y="517" width="0.0806%" height="15" fill="rgb(233,98,50)" fg:x="324" fg:w="1"/><text x="26.3580%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="26.1080%" y="501" width="0.0806%" height="15" fill="rgb(232,217,52)" fg:x="324" fg:w="1"/><text x="26.3580%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="26.1080%" y="485" width="0.0806%" height="15" fill="rgb(250,42,51)" fg:x="324" fg:w="1"/><text x="26.3580%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1080%" y="469" width="0.0806%" height="15" fill="rgb(241,200,26)" fg:x="324" fg:w="1"/><text x="26.3580%" y="479.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (8 samples, 0.64%)</title><rect x="25.6245%" y="741" width="0.6446%" height="15" fill="rgb(207,10,32)" fg:x="318" fg:w="8"/><text x="25.8745%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="26.0274%" y="725" width="0.2417%" height="15" fill="rgb(214,63,15)" fg:x="323" fg:w="3"/><text x="26.2774%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="26.1080%" y="709" width="0.1612%" height="15" fill="rgb(234,176,14)" fg:x="324" fg:w="2"/><text x="26.3580%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="26.1080%" y="693" width="0.1612%" height="15" fill="rgb(226,104,52)" fg:x="324" fg:w="2"/><text x="26.3580%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1886%" y="677" width="0.0806%" height="15" fill="rgb(211,222,1)" fg:x="325" fg:w="1"/><text x="26.4386%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.1886%" y="661" width="0.0806%" height="15" fill="rgb(237,7,3)" fg:x="325" fg:w="1"/><text x="26.4386%" y="671.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.1886%" y="645" width="0.0806%" height="15" fill="rgb(218,143,7)" fg:x="325" fg:w="1"/><text x="26.4386%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.1886%" y="629" width="0.0806%" height="15" fill="rgb(208,25,22)" fg:x="325" fg:w="1"/><text x="26.4386%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="26.1886%" y="613" width="0.0806%" height="15" fill="rgb(228,127,16)" fg:x="325" fg:w="1"/><text x="26.4386%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="26.1886%" y="597" width="0.0806%" height="15" fill="rgb(237,86,27)" fg:x="325" fg:w="1"/><text x="26.4386%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.1886%" y="581" width="0.0806%" height="15" fill="rgb(207,125,19)" fg:x="325" fg:w="1"/><text x="26.4386%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="26.1886%" y="565" width="0.0806%" height="15" fill="rgb(243,195,0)" fg:x="325" fg:w="1"/><text x="26.4386%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="26.1886%" y="549" width="0.0806%" height="15" fill="rgb(230,95,18)" fg:x="325" fg:w="1"/><text x="26.4386%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="26.1886%" y="533" width="0.0806%" height="15" fill="rgb(232,157,21)" fg:x="325" fg:w="1"/><text x="26.4386%" y="543.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (23 samples, 1.85%)</title><rect x="25.5439%" y="773" width="1.8533%" height="15" fill="rgb(212,120,50)" fg:x="317" fg:w="23"/><text x="25.7939%" y="783.50">&lt;..</text></g><g><title>engine::internal::Entities::add_entity (22 samples, 1.77%)</title><rect x="25.6245%" y="757" width="1.7728%" height="15" fill="rgb(222,204,44)" fg:x="318" fg:w="22"/><text x="25.8745%" y="767.50">e..</text></g><g><title>engine::internal::EntityMap::add_entity (14 samples, 1.13%)</title><rect x="26.2691%" y="741" width="1.1281%" height="15" fill="rgb(236,6,33)" fg:x="326" fg:w="14"/><text x="26.5191%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 1.13%)</title><rect x="26.2691%" y="725" width="1.1281%" height="15" fill="rgb(247,11,38)" fg:x="326" fg:w="14"/><text x="26.5191%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 1.13%)</title><rect x="26.2691%" y="709" width="1.1281%" height="15" fill="rgb(215,111,0)" fg:x="326" fg:w="14"/><text x="26.5191%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 1.13%)</title><rect x="26.2691%" y="693" width="1.1281%" height="15" fill="rgb(211,65,46)" fg:x="326" fg:w="14"/><text x="26.5191%" y="703.50"></text></g><g><title>__libc_malloc (14 samples, 1.13%)</title><rect x="26.2691%" y="677" width="1.1281%" height="15" fill="rgb(216,5,12)" fg:x="326" fg:w="14"/><text x="26.5191%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="27.3973%" y="757" width="0.0806%" height="15" fill="rgb(226,7,2)" fg:x="340" fg:w="1"/><text x="27.6473%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="27.3973%" y="741" width="0.0806%" height="15" fill="rgb(242,116,12)" fg:x="340" fg:w="1"/><text x="27.6473%" y="751.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="27.3973%" y="725" width="0.0806%" height="15" fill="rgb(249,209,7)" fg:x="340" fg:w="1"/><text x="27.6473%" y="735.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4778%" y="661" width="0.1612%" height="15" fill="rgb(232,73,17)" fg:x="341" fg:w="2"/><text x="27.7278%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4778%" y="645" width="0.1612%" height="15" fill="rgb(214,13,32)" fg:x="341" fg:w="2"/><text x="27.7278%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="27.4778%" y="629" width="0.1612%" height="15" fill="rgb(221,125,10)" fg:x="341" fg:w="2"/><text x="27.7278%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5584%" y="613" width="0.0806%" height="15" fill="rgb(246,7,44)" fg:x="342" fg:w="1"/><text x="27.8084%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.5584%" y="597" width="0.0806%" height="15" fill="rgb(239,18,35)" fg:x="342" fg:w="1"/><text x="27.8084%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.5584%" y="581" width="0.0806%" height="15" fill="rgb(250,222,16)" fg:x="342" fg:w="1"/><text x="27.8084%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.5584%" y="565" width="0.0806%" height="15" fill="rgb(219,100,8)" fg:x="342" fg:w="1"/><text x="27.8084%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.5584%" y="549" width="0.0806%" height="15" fill="rgb(240,62,13)" fg:x="342" fg:w="1"/><text x="27.8084%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5584%" y="533" width="0.0806%" height="15" fill="rgb(253,194,2)" fg:x="342" fg:w="1"/><text x="27.8084%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.5584%" y="517" width="0.0806%" height="15" fill="rgb(235,58,31)" fg:x="342" fg:w="1"/><text x="27.8084%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.5584%" y="501" width="0.0806%" height="15" fill="rgb(231,37,11)" fg:x="342" fg:w="1"/><text x="27.8084%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.5584%" y="485" width="0.0806%" height="15" fill="rgb(235,133,0)" fg:x="342" fg:w="1"/><text x="27.8084%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.5584%" y="469" width="0.0806%" height="15" fill="rgb(212,185,40)" fg:x="342" fg:w="1"/><text x="27.8084%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.5584%" y="453" width="0.0806%" height="15" fill="rgb(216,68,42)" fg:x="342" fg:w="1"/><text x="27.8084%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.4778%" y="677" width="0.2417%" height="15" fill="rgb(239,81,4)" fg:x="341" fg:w="3"/><text x="27.7278%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.6390%" y="661" width="0.0806%" height="15" fill="rgb(206,86,6)" fg:x="343" fg:w="1"/><text x="27.8890%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="27.4778%" y="725" width="0.3223%" height="15" fill="rgb(249,95,27)" fg:x="341" fg:w="4"/><text x="27.7278%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="27.4778%" y="709" width="0.3223%" height="15" fill="rgb(205,155,45)" fg:x="341" fg:w="4"/><text x="27.7278%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="27.4778%" y="693" width="0.3223%" height="15" fill="rgb(213,55,42)" fg:x="341" fg:w="4"/><text x="27.7278%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.7196%" y="677" width="0.0806%" height="15" fill="rgb(249,197,4)" fg:x="344" fg:w="1"/><text x="27.9696%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="27.8807%" y="629" width="0.0806%" height="15" fill="rgb(212,128,32)" fg:x="346" fg:w="1"/><text x="28.1307%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.8002%" y="677" width="0.2417%" height="15" fill="rgb(252,47,30)" fg:x="345" fg:w="3"/><text x="28.0502%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.8002%" y="661" width="0.2417%" height="15" fill="rgb(209,79,18)" fg:x="345" fg:w="3"/><text x="28.0502%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="27.8002%" y="645" width="0.2417%" height="15" fill="rgb(225,81,38)" fg:x="345" fg:w="3"/><text x="28.0502%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9613%" y="629" width="0.0806%" height="15" fill="rgb(205,95,16)" fg:x="347" fg:w="1"/><text x="28.2113%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="27.9613%" y="613" width="0.0806%" height="15" fill="rgb(214,30,4)" fg:x="347" fg:w="1"/><text x="28.2113%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="27.9613%" y="597" width="0.0806%" height="15" fill="rgb(232,137,22)" fg:x="347" fg:w="1"/><text x="28.2113%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="27.9613%" y="581" width="0.0806%" height="15" fill="rgb(232,156,19)" fg:x="347" fg:w="1"/><text x="28.2113%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="27.9613%" y="565" width="0.0806%" height="15" fill="rgb(248,157,26)" fg:x="347" fg:w="1"/><text x="28.2113%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9613%" y="549" width="0.0806%" height="15" fill="rgb(242,24,3)" fg:x="347" fg:w="1"/><text x="28.2113%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="27.9613%" y="533" width="0.0806%" height="15" fill="rgb(218,195,48)" fg:x="347" fg:w="1"/><text x="28.2113%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="27.9613%" y="517" width="0.0806%" height="15" fill="rgb(214,193,36)" fg:x="347" fg:w="1"/><text x="28.2113%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="27.9613%" y="501" width="0.0806%" height="15" fill="rgb(242,110,40)" fg:x="347" fg:w="1"/><text x="28.2113%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="27.9613%" y="485" width="0.0806%" height="15" fill="rgb(233,150,26)" fg:x="347" fg:w="1"/><text x="28.2113%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="27.9613%" y="469" width="0.0806%" height="15" fill="rgb(239,200,30)" fg:x="347" fg:w="1"/><text x="28.2113%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="27.9613%" y="453" width="0.0806%" height="15" fill="rgb(226,28,11)" fg:x="347" fg:w="1"/><text x="28.2113%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.0419%" y="677" width="0.0806%" height="15" fill="rgb(220,26,48)" fg:x="348" fg:w="1"/><text x="28.2919%" y="687.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (9 samples, 0.73%)</title><rect x="27.4778%" y="757" width="0.7252%" height="15" fill="rgb(232,10,11)" fg:x="341" fg:w="9"/><text x="27.7278%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (9 samples, 0.73%)</title><rect x="27.4778%" y="741" width="0.7252%" height="15" fill="rgb(252,143,50)" fg:x="341" fg:w="9"/><text x="27.7278%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="27.8002%" y="725" width="0.4029%" height="15" fill="rgb(206,58,22)" fg:x="345" fg:w="5"/><text x="28.0502%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="27.8002%" y="709" width="0.4029%" height="15" fill="rgb(250,9,45)" fg:x="345" fg:w="5"/><text x="28.0502%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="27.8002%" y="693" width="0.4029%" height="15" fill="rgb(225,148,14)" fg:x="345" fg:w="5"/><text x="28.0502%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.1225%" y="677" width="0.0806%" height="15" fill="rgb(205,178,40)" fg:x="349" fg:w="1"/><text x="28.3725%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1225%" y="661" width="0.0806%" height="15" fill="rgb(215,201,4)" fg:x="349" fg:w="1"/><text x="28.3725%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.1225%" y="645" width="0.0806%" height="15" fill="rgb(219,223,24)" fg:x="349" fg:w="1"/><text x="28.3725%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1225%" y="629" width="0.0806%" height="15" fill="rgb(217,19,31)" fg:x="349" fg:w="1"/><text x="28.3725%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="28.1225%" y="613" width="0.0806%" height="15" fill="rgb(235,33,3)" fg:x="349" fg:w="1"/><text x="28.3725%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1225%" y="597" width="0.0806%" height="15" fill="rgb(221,39,18)" fg:x="349" fg:w="1"/><text x="28.3725%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="28.1225%" y="581" width="0.0806%" height="15" fill="rgb(242,162,33)" fg:x="349" fg:w="1"/><text x="28.3725%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.1225%" y="565" width="0.0806%" height="15" fill="rgb(233,215,28)" fg:x="349" fg:w="1"/><text x="28.3725%" y="575.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="28.1225%" y="549" width="0.0806%" height="15" fill="rgb(212,117,9)" fg:x="349" fg:w="1"/><text x="28.3725%" y="559.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="28.2031%" y="757" width="0.0806%" height="15" fill="rgb(237,70,47)" fg:x="350" fg:w="1"/><text x="28.4531%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2031%" y="741" width="0.0806%" height="15" fill="rgb(206,177,13)" fg:x="350" fg:w="1"/><text x="28.4531%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2031%" y="725" width="0.0806%" height="15" fill="rgb(209,174,33)" fg:x="350" fg:w="1"/><text x="28.4531%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.2031%" y="709" width="0.0806%" height="15" fill="rgb(226,6,11)" fg:x="350" fg:w="1"/><text x="28.4531%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.2031%" y="693" width="0.0806%" height="15" fill="rgb(240,214,6)" fg:x="350" fg:w="1"/><text x="28.4531%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.2031%" y="677" width="0.0806%" height="15" fill="rgb(254,214,40)" fg:x="350" fg:w="1"/><text x="28.4531%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.2031%" y="661" width="0.0806%" height="15" fill="rgb(230,187,15)" fg:x="350" fg:w="1"/><text x="28.4531%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.2031%" y="645" width="0.0806%" height="15" fill="rgb(250,11,27)" fg:x="350" fg:w="1"/><text x="28.4531%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.2031%" y="629" width="0.0806%" height="15" fill="rgb(243,107,19)" fg:x="350" fg:w="1"/><text x="28.4531%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.2031%" y="613" width="0.0806%" height="15" fill="rgb(253,66,26)" fg:x="350" fg:w="1"/><text x="28.4531%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.2031%" y="597" width="0.0806%" height="15" fill="rgb(228,43,8)" fg:x="350" fg:w="1"/><text x="28.4531%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.2031%" y="581" width="0.0806%" height="15" fill="rgb(232,197,36)" fg:x="350" fg:w="1"/><text x="28.4531%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.2031%" y="565" width="0.0806%" height="15" fill="rgb(221,182,31)" fg:x="350" fg:w="1"/><text x="28.4531%" y="575.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="28.2836%" y="757" width="0.0806%" height="15" fill="rgb(244,25,36)" fg:x="351" fg:w="1"/><text x="28.5336%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="28.2836%" y="741" width="0.0806%" height="15" fill="rgb(247,101,19)" fg:x="351" fg:w="1"/><text x="28.5336%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.2836%" y="725" width="0.0806%" height="15" fill="rgb(223,117,19)" fg:x="351" fg:w="1"/><text x="28.5336%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="28.2836%" y="709" width="0.0806%" height="15" fill="rgb(249,63,38)" fg:x="351" fg:w="1"/><text x="28.5336%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="28.2836%" y="693" width="0.0806%" height="15" fill="rgb(220,143,23)" fg:x="351" fg:w="1"/><text x="28.5336%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="28.2836%" y="677" width="0.0806%" height="15" fill="rgb(252,183,22)" fg:x="351" fg:w="1"/><text x="28.5336%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="28.3642%" y="597" width="0.0806%" height="15" fill="rgb(243,176,15)" fg:x="352" fg:w="1"/><text x="28.6142%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3642%" y="661" width="0.1612%" height="15" fill="rgb(244,204,46)" fg:x="352" fg:w="2"/><text x="28.6142%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3642%" y="645" width="0.1612%" height="15" fill="rgb(227,28,54)" fg:x="352" fg:w="2"/><text x="28.6142%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3642%" y="629" width="0.1612%" height="15" fill="rgb(231,10,15)" fg:x="352" fg:w="2"/><text x="28.6142%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="28.3642%" y="613" width="0.1612%" height="15" fill="rgb(210,200,17)" fg:x="352" fg:w="2"/><text x="28.6142%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4448%" y="597" width="0.0806%" height="15" fill="rgb(251,106,46)" fg:x="353" fg:w="1"/><text x="28.6948%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="28.4448%" y="581" width="0.0806%" height="15" fill="rgb(218,211,15)" fg:x="353" fg:w="1"/><text x="28.6948%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="28.4448%" y="565" width="0.0806%" height="15" fill="rgb(239,62,10)" fg:x="353" fg:w="1"/><text x="28.6948%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="28.4448%" y="549" width="0.0806%" height="15" fill="rgb(225,53,53)" fg:x="353" fg:w="1"/><text x="28.6948%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="28.4448%" y="533" width="0.0806%" height="15" fill="rgb(207,16,24)" fg:x="353" fg:w="1"/><text x="28.6948%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.4448%" y="517" width="0.0806%" height="15" fill="rgb(217,52,28)" fg:x="353" fg:w="1"/><text x="28.6948%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="28.4448%" y="501" width="0.0806%" height="15" fill="rgb(246,1,5)" fg:x="353" fg:w="1"/><text x="28.6948%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="28.4448%" y="485" width="0.0806%" height="15" fill="rgb(221,29,26)" fg:x="353" fg:w="1"/><text x="28.6948%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="28.4448%" y="469" width="0.0806%" height="15" fill="rgb(250,133,32)" fg:x="353" fg:w="1"/><text x="28.6948%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="28.4448%" y="453" width="0.0806%" height="15" fill="rgb(236,63,16)" fg:x="353" fg:w="1"/><text x="28.6948%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="28.4448%" y="437" width="0.0806%" height="15" fill="rgb(231,159,14)" fg:x="353" fg:w="1"/><text x="28.6948%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="28.6060%" y="565" width="0.0806%" height="15" fill="rgb(207,102,36)" fg:x="355" fg:w="1"/><text x="28.8560%" y="575.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="28.3642%" y="709" width="0.4835%" height="15" fill="rgb(230,224,31)" fg:x="352" fg:w="6"/><text x="28.6142%" y="719.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="28.3642%" y="693" width="0.4835%" height="15" fill="rgb(215,182,16)" fg:x="352" fg:w="6"/><text x="28.6142%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="28.3642%" y="677" width="0.4835%" height="15" fill="rgb(226,113,2)" fg:x="352" fg:w="6"/><text x="28.6142%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="28.5254%" y="661" width="0.3223%" height="15" fill="rgb(241,18,35)" fg:x="354" fg:w="4"/><text x="28.7754%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="28.5254%" y="645" width="0.3223%" height="15" fill="rgb(240,165,44)" fg:x="354" fg:w="4"/><text x="28.7754%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="28.6060%" y="629" width="0.2417%" height="15" fill="rgb(229,130,47)" fg:x="355" fg:w="3"/><text x="28.8560%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6060%" y="613" width="0.2417%" height="15" fill="rgb(223,93,7)" fg:x="355" fg:w="3"/><text x="28.8560%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="28.6060%" y="597" width="0.2417%" height="15" fill="rgb(205,180,36)" fg:x="355" fg:w="3"/><text x="28.8560%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="28.6060%" y="581" width="0.2417%" height="15" fill="rgb(221,103,28)" fg:x="355" fg:w="3"/><text x="28.8560%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="28.6865%" y="565" width="0.1612%" height="15" fill="rgb(212,4,3)" fg:x="356" fg:w="2"/><text x="28.9365%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="28.6865%" y="549" width="0.1612%" height="15" fill="rgb(209,221,53)" fg:x="356" fg:w="2"/><text x="28.9365%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="28.6865%" y="533" width="0.1612%" height="15" fill="rgb(233,229,52)" fg:x="356" fg:w="2"/><text x="28.9365%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="28.7671%" y="517" width="0.0806%" height="15" fill="rgb(254,127,37)" fg:x="357" fg:w="1"/><text x="29.0171%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="28.8477%" y="693" width="0.0806%" height="15" fill="rgb(207,161,26)" fg:x="358" fg:w="1"/><text x="29.0977%" y="703.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="28.9283%" y="693" width="0.0806%" height="15" fill="rgb(223,75,5)" fg:x="359" fg:w="1"/><text x="29.1783%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="28.9283%" y="677" width="0.0806%" height="15" fill="rgb(235,115,52)" fg:x="359" fg:w="1"/><text x="29.1783%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="28.9283%" y="661" width="0.0806%" height="15" fill="rgb(240,91,46)" fg:x="359" fg:w="1"/><text x="29.1783%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.0089%" y="661" width="0.1612%" height="15" fill="rgb(251,144,21)" fg:x="360" fg:w="2"/><text x="29.2589%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.0089%" y="645" width="0.1612%" height="15" fill="rgb(247,220,47)" fg:x="360" fg:w="2"/><text x="29.2589%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0894%" y="629" width="0.0806%" height="15" fill="rgb(253,122,1)" fg:x="361" fg:w="1"/><text x="29.3394%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0894%" y="613" width="0.0806%" height="15" fill="rgb(221,0,24)" fg:x="361" fg:w="1"/><text x="29.3394%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.0894%" y="597" width="0.0806%" height="15" fill="rgb(220,204,54)" fg:x="361" fg:w="1"/><text x="29.3394%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0894%" y="581" width="0.0806%" height="15" fill="rgb(205,96,25)" fg:x="361" fg:w="1"/><text x="29.3394%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="29.0894%" y="565" width="0.0806%" height="15" fill="rgb(247,77,20)" fg:x="361" fg:w="1"/><text x="29.3394%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="29.0894%" y="549" width="0.0806%" height="15" fill="rgb(245,151,8)" fg:x="361" fg:w="1"/><text x="29.3394%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="29.0894%" y="533" width="0.0806%" height="15" fill="rgb(242,158,39)" fg:x="361" fg:w="1"/><text x="29.3394%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="29.0894%" y="517" width="0.0806%" height="15" fill="rgb(222,214,50)" fg:x="361" fg:w="1"/><text x="29.3394%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.0894%" y="501" width="0.0806%" height="15" fill="rgb(229,60,39)" fg:x="361" fg:w="1"/><text x="29.3394%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="29.0894%" y="485" width="0.0806%" height="15" fill="rgb(240,148,18)" fg:x="361" fg:w="1"/><text x="29.3394%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="29.0894%" y="469" width="0.0806%" height="15" fill="rgb(215,96,11)" fg:x="361" fg:w="1"/><text x="29.3394%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="29.0894%" y="453" width="0.0806%" height="15" fill="rgb(238,162,53)" fg:x="361" fg:w="1"/><text x="29.3394%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="29.0894%" y="437" width="0.0806%" height="15" fill="rgb(214,83,18)" fg:x="361" fg:w="1"/><text x="29.3394%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="29.0894%" y="421" width="0.0806%" height="15" fill="rgb(248,117,24)" fg:x="361" fg:w="1"/><text x="29.3394%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.0894%" y="405" width="0.0806%" height="15" fill="rgb(238,190,6)" fg:x="361" fg:w="1"/><text x="29.3394%" y="415.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (11 samples, 0.89%)</title><rect x="28.3642%" y="741" width="0.8864%" height="15" fill="rgb(213,51,6)" fg:x="352" fg:w="11"/><text x="28.6142%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (11 samples, 0.89%)</title><rect x="28.3642%" y="725" width="0.8864%" height="15" fill="rgb(212,136,1)" fg:x="352" fg:w="11"/><text x="28.6142%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="28.8477%" y="709" width="0.4029%" height="15" fill="rgb(221,192,14)" fg:x="358" fg:w="5"/><text x="29.0977%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="29.0089%" y="693" width="0.2417%" height="15" fill="rgb(244,38,54)" fg:x="360" fg:w="3"/><text x="29.2589%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="29.0089%" y="677" width="0.2417%" height="15" fill="rgb(240,45,28)" fg:x="360" fg:w="3"/><text x="29.2589%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.1700%" y="661" width="0.0806%" height="15" fill="rgb(240,123,12)" fg:x="362" fg:w="1"/><text x="29.4200%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1700%" y="645" width="0.0806%" height="15" fill="rgb(216,14,30)" fg:x="362" fg:w="1"/><text x="29.4200%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.1700%" y="629" width="0.0806%" height="15" fill="rgb(212,50,24)" fg:x="362" fg:w="1"/><text x="29.4200%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1700%" y="613" width="0.0806%" height="15" fill="rgb(253,229,47)" fg:x="362" fg:w="1"/><text x="29.4200%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.1700%" y="597" width="0.0806%" height="15" fill="rgb(214,26,17)" fg:x="362" fg:w="1"/><text x="29.4200%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.1700%" y="581" width="0.0806%" height="15" fill="rgb(252,60,11)" fg:x="362" fg:w="1"/><text x="29.4200%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="29.1700%" y="565" width="0.0806%" height="15" fill="rgb(209,59,37)" fg:x="362" fg:w="1"/><text x="29.4200%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="29.1700%" y="549" width="0.0806%" height="15" fill="rgb(228,126,53)" fg:x="362" fg:w="1"/><text x="29.4200%" y="559.50"></text></g><g><title>plugins_core::build::Build::holding (47 samples, 3.79%)</title><rect x="25.5439%" y="789" width="3.7873%" height="15" fill="rgb(233,99,2)" fg:x="317" fg:w="47"/><text x="25.7939%" y="799.50">plug..</text></g><g><title>plugins_core::tools::set_container (24 samples, 1.93%)</title><rect x="27.3973%" y="773" width="1.9339%" height="15" fill="rgb(217,106,34)" fg:x="340" fg:w="24"/><text x="27.6473%" y="783.50">p..</text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (12 samples, 0.97%)</title><rect x="28.3642%" y="757" width="0.9670%" height="15" fill="rgb(222,46,19)" fg:x="352" fg:w="12"/><text x="28.6142%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="29.2506%" y="741" width="0.0806%" height="15" fill="rgb(251,87,31)" fg:x="363" fg:w="1"/><text x="29.5006%" y="751.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.2506%" y="725" width="0.0806%" height="15" fill="rgb(213,70,51)" fg:x="363" fg:w="1"/><text x="29.5006%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="29.2506%" y="709" width="0.0806%" height="15" fill="rgb(229,144,18)" fg:x="363" fg:w="1"/><text x="29.5006%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="29.3312%" y="757" width="0.0806%" height="15" fill="rgb(254,60,26)" fg:x="364" fg:w="1"/><text x="29.5812%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="29.3312%" y="741" width="0.0806%" height="15" fill="rgb(243,127,51)" fg:x="364" fg:w="1"/><text x="29.5812%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="29.3312%" y="725" width="0.0806%" height="15" fill="rgb(221,51,25)" fg:x="364" fg:w="1"/><text x="29.5812%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="29.3312%" y="709" width="0.0806%" height="15" fill="rgb(205,42,7)" fg:x="364" fg:w="1"/><text x="29.5812%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.3312%" y="693" width="0.0806%" height="15" fill="rgb(236,177,48)" fg:x="364" fg:w="1"/><text x="29.5812%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="29.3312%" y="677" width="0.0806%" height="15" fill="rgb(226,79,31)" fg:x="364" fg:w="1"/><text x="29.5812%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="29.3312%" y="661" width="0.0806%" height="15" fill="rgb(216,170,12)" fg:x="364" fg:w="1"/><text x="29.5812%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="29.3312%" y="645" width="0.0806%" height="15" fill="rgb(208,62,51)" fg:x="364" fg:w="1"/><text x="29.5812%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="29.3312%" y="629" width="0.0806%" height="15" fill="rgb(254,129,9)" fg:x="364" fg:w="1"/><text x="29.5812%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3312%" y="613" width="0.0806%" height="15" fill="rgb(243,209,31)" fg:x="364" fg:w="1"/><text x="29.5812%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="29.3312%" y="597" width="0.0806%" height="15" fill="rgb(213,159,23)" fg:x="364" fg:w="1"/><text x="29.5812%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="29.3312%" y="581" width="0.0806%" height="15" fill="rgb(249,77,39)" fg:x="364" fg:w="1"/><text x="29.5812%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="29.3312%" y="565" width="0.0806%" height="15" fill="rgb(230,13,33)" fg:x="364" fg:w="1"/><text x="29.5812%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="29.3312%" y="549" width="0.0806%" height="15" fill="rgb(215,215,7)" fg:x="364" fg:w="1"/><text x="29.5812%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="29.3312%" y="533" width="0.0806%" height="15" fill="rgb(222,92,25)" fg:x="364" fg:w="1"/><text x="29.5812%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.3312%" y="517" width="0.0806%" height="15" fill="rgb(215,173,22)" fg:x="364" fg:w="1"/><text x="29.5812%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="29.3312%" y="501" width="0.0806%" height="15" fill="rgb(247,205,52)" fg:x="364" fg:w="1"/><text x="29.5812%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="29.3312%" y="485" width="0.0806%" height="15" fill="rgb(240,210,37)" fg:x="364" fg:w="1"/><text x="29.5812%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="29.3312%" y="469" width="0.0806%" height="15" fill="rgb(224,13,10)" fg:x="364" fg:w="1"/><text x="29.5812%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.08%)</title><rect x="29.3312%" y="453" width="0.0806%" height="15" fill="rgb(209,48,33)" fg:x="364" fg:w="1"/><text x="29.5812%" y="463.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.08%)</title><rect x="29.3312%" y="437" width="0.0806%" height="15" fill="rgb(228,219,23)" fg:x="364" fg:w="1"/><text x="29.5812%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.4923%" y="677" width="0.1612%" height="15" fill="rgb(239,46,49)" fg:x="366" fg:w="2"/><text x="29.7423%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="29.4923%" y="661" width="0.1612%" height="15" fill="rgb(206,172,51)" fg:x="366" fg:w="2"/><text x="29.7423%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5729%" y="645" width="0.0806%" height="15" fill="rgb(213,212,35)" fg:x="367" fg:w="1"/><text x="29.8229%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5729%" y="629" width="0.0806%" height="15" fill="rgb(252,40,27)" fg:x="367" fg:w="1"/><text x="29.8229%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="29.5729%" y="613" width="0.0806%" height="15" fill="rgb(212,33,41)" fg:x="367" fg:w="1"/><text x="29.8229%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.5729%" y="597" width="0.0806%" height="15" fill="rgb(232,160,27)" fg:x="367" fg:w="1"/><text x="29.8229%" y="607.50"></text></g><g><title>plugins_core::build::Build::into_entry (6 samples, 0.48%)</title><rect x="29.3312%" y="789" width="0.4835%" height="15" fill="rgb(244,160,20)" fg:x="364" fg:w="6"/><text x="29.5812%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (6 samples, 0.48%)</title><rect x="29.3312%" y="773" width="0.4835%" height="15" fill="rgb(205,66,20)" fg:x="364" fg:w="6"/><text x="29.5812%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (5 samples, 0.40%)</title><rect x="29.4118%" y="757" width="0.4029%" height="15" fill="rgb(236,158,6)" fg:x="365" fg:w="5"/><text x="29.6618%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (5 samples, 0.40%)</title><rect x="29.4118%" y="741" width="0.4029%" height="15" fill="rgb(232,25,36)" fg:x="365" fg:w="5"/><text x="29.6618%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (5 samples, 0.40%)</title><rect x="29.4118%" y="725" width="0.4029%" height="15" fill="rgb(220,153,35)" fg:x="365" fg:w="5"/><text x="29.6618%" y="735.50"></text></g><g><title>kernel::model::props::load_props (5 samples, 0.40%)</title><rect x="29.4118%" y="709" width="0.4029%" height="15" fill="rgb(216,5,8)" fg:x="365" fg:w="5"/><text x="29.6618%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (5 samples, 0.40%)</title><rect x="29.4118%" y="693" width="0.4029%" height="15" fill="rgb(240,97,3)" fg:x="365" fg:w="5"/><text x="29.6618%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="29.6535%" y="677" width="0.1612%" height="15" fill="rgb(220,99,26)" fg:x="368" fg:w="2"/><text x="29.9035%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.6535%" y="661" width="0.1612%" height="15" fill="rgb(237,96,2)" fg:x="368" fg:w="2"/><text x="29.9035%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="29.6535%" y="645" width="0.1612%" height="15" fill="rgb(217,197,47)" fg:x="368" fg:w="2"/><text x="29.9035%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="29.6535%" y="629" width="0.1612%" height="15" fill="rgb(252,133,54)" fg:x="368" fg:w="2"/><text x="29.9035%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="29.7341%" y="613" width="0.0806%" height="15" fill="rgb(233,37,30)" fg:x="369" fg:w="1"/><text x="29.9841%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7341%" y="597" width="0.0806%" height="15" fill="rgb(239,182,12)" fg:x="369" fg:w="1"/><text x="29.9841%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="29.7341%" y="581" width="0.0806%" height="15" fill="rgb(245,83,39)" fg:x="369" fg:w="1"/><text x="29.9841%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7341%" y="565" width="0.0806%" height="15" fill="rgb(222,109,36)" fg:x="369" fg:w="1"/><text x="29.9841%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="29.7341%" y="549" width="0.0806%" height="15" fill="rgb(237,95,44)" fg:x="369" fg:w="1"/><text x="29.9841%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="29.7341%" y="533" width="0.0806%" height="15" fill="rgb(216,36,54)" fg:x="369" fg:w="1"/><text x="29.9841%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="29.7341%" y="517" width="0.0806%" height="15" fill="rgb(236,164,3)" fg:x="369" fg:w="1"/><text x="29.9841%" y="527.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="29.7341%" y="501" width="0.0806%" height="15" fill="rgb(223,15,21)" fg:x="369" fg:w="1"/><text x="29.9841%" y="511.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="29.8147%" y="757" width="0.0806%" height="15" fill="rgb(239,191,12)" fg:x="370" fg:w="1"/><text x="30.0647%" y="767.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="29.8147%" y="741" width="0.0806%" height="15" fill="rgb(231,191,37)" fg:x="370" fg:w="1"/><text x="30.0647%" y="751.50"></text></g><g><title>plugins_core::build::Build::named (2 samples, 0.16%)</title><rect x="29.8147%" y="789" width="0.1612%" height="15" fill="rgb(209,155,36)" fg:x="370" fg:w="2"/><text x="30.0647%" y="799.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (2 samples, 0.16%)</title><rect x="29.8147%" y="773" width="0.1612%" height="15" fill="rgb(216,222,49)" fg:x="370" fg:w="2"/><text x="30.0647%" y="783.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="29.8952%" y="757" width="0.0806%" height="15" fill="rgb(218,181,2)" fg:x="371" fg:w="1"/><text x="30.1452%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="29.8952%" y="741" width="0.0806%" height="15" fill="rgb(239,125,9)" fg:x="371" fg:w="1"/><text x="30.1452%" y="751.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="29.8952%" y="725" width="0.0806%" height="15" fill="rgb(233,103,7)" fg:x="371" fg:w="1"/><text x="30.1452%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.8952%" y="709" width="0.0806%" height="15" fill="rgb(209,223,5)" fg:x="371" fg:w="1"/><text x="30.1452%" y="719.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="29.8952%" y="693" width="0.0806%" height="15" fill="rgb(234,71,27)" fg:x="371" fg:w="1"/><text x="30.1452%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="29.8952%" y="677" width="0.0806%" height="15" fill="rgb(251,202,16)" fg:x="371" fg:w="1"/><text x="30.1452%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="29.8952%" y="661" width="0.0806%" height="15" fill="rgb(231,180,0)" fg:x="371" fg:w="1"/><text x="30.1452%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="29.8952%" y="645" width="0.0806%" height="15" fill="rgb(223,58,28)" fg:x="371" fg:w="1"/><text x="30.1452%" y="655.50"></text></g><g><title>plugins_core::build::Build::new (1 samples, 0.08%)</title><rect x="29.9758%" y="789" width="0.0806%" height="15" fill="rgb(250,34,24)" fg:x="372" fg:w="1"/><text x="30.2258%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="29.9758%" y="773" width="0.0806%" height="15" fill="rgb(235,24,16)" fg:x="372" fg:w="1"/><text x="30.2258%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="29.9758%" y="757" width="0.0806%" height="15" fill="rgb(219,28,33)" fg:x="372" fg:w="1"/><text x="30.2258%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="29.9758%" y="741" width="0.0806%" height="15" fill="rgb(228,150,43)" fg:x="372" fg:w="1"/><text x="30.2258%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="29.9758%" y="725" width="0.0806%" height="15" fill="rgb(221,228,36)" fg:x="372" fg:w="1"/><text x="30.2258%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="29.9758%" y="709" width="0.0806%" height="15" fill="rgb(232,116,17)" fg:x="372" fg:w="1"/><text x="30.2258%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.1370%" y="709" width="0.0806%" height="15" fill="rgb(220,110,51)" fg:x="374" fg:w="1"/><text x="30.3870%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.1370%" y="693" width="0.0806%" height="15" fill="rgb(207,26,25)" fg:x="374" fg:w="1"/><text x="30.3870%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="30.1370%" y="773" width="0.2417%" height="15" fill="rgb(223,58,19)" fg:x="374" fg:w="3"/><text x="30.3870%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="30.1370%" y="757" width="0.2417%" height="15" fill="rgb(234,125,39)" fg:x="374" fg:w="3"/><text x="30.3870%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="30.1370%" y="741" width="0.2417%" height="15" fill="rgb(241,48,36)" fg:x="374" fg:w="3"/><text x="30.3870%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (3 samples, 0.24%)</title><rect x="30.1370%" y="725" width="0.2417%" height="15" fill="rgb(217,148,51)" fg:x="374" fg:w="3"/><text x="30.3870%" y="735.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="30.2176%" y="709" width="0.1612%" height="15" fill="rgb(247,17,25)" fg:x="375" fg:w="2"/><text x="30.4676%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="30.2176%" y="693" width="0.1612%" height="15" fill="rgb(219,89,38)" fg:x="375" fg:w="2"/><text x="30.4676%" y="703.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2981%" y="677" width="0.0806%" height="15" fill="rgb(220,145,2)" fg:x="376" fg:w="1"/><text x="30.5481%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2981%" y="661" width="0.0806%" height="15" fill="rgb(244,66,47)" fg:x="376" fg:w="1"/><text x="30.5481%" y="671.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.2981%" y="645" width="0.0806%" height="15" fill="rgb(226,182,5)" fg:x="376" fg:w="1"/><text x="30.5481%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2981%" y="629" width="0.0806%" height="15" fill="rgb(211,98,20)" fg:x="376" fg:w="1"/><text x="30.5481%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="30.2981%" y="613" width="0.0806%" height="15" fill="rgb(217,103,52)" fg:x="376" fg:w="1"/><text x="30.5481%" y="623.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="30.2981%" y="597" width="0.0806%" height="15" fill="rgb(208,125,52)" fg:x="376" fg:w="1"/><text x="30.5481%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2981%" y="581" width="0.0806%" height="15" fill="rgb(244,70,13)" fg:x="376" fg:w="1"/><text x="30.5481%" y="591.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.2981%" y="565" width="0.0806%" height="15" fill="rgb(253,124,3)" fg:x="376" fg:w="1"/><text x="30.5481%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.2981%" y="549" width="0.0806%" height="15" fill="rgb(222,145,32)" fg:x="376" fg:w="1"/><text x="30.5481%" y="559.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.3787%" y="773" width="0.0806%" height="15" fill="rgb(232,183,47)" fg:x="377" fg:w="1"/><text x="30.6287%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="677" width="0.0806%" height="15" fill="rgb(246,226,4)" fg:x="378" fg:w="1"/><text x="30.7093%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="661" width="0.0806%" height="15" fill="rgb(228,185,46)" fg:x="378" fg:w="1"/><text x="30.7093%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.4593%" y="645" width="0.0806%" height="15" fill="rgb(213,196,4)" fg:x="378" fg:w="1"/><text x="30.7093%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.4593%" y="725" width="0.1612%" height="15" fill="rgb(212,2,45)" fg:x="378" fg:w="2"/><text x="30.7093%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.4593%" y="709" width="0.1612%" height="15" fill="rgb(217,145,50)" fg:x="378" fg:w="2"/><text x="30.7093%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.4593%" y="693" width="0.1612%" height="15" fill="rgb(242,10,46)" fg:x="378" fg:w="2"/><text x="30.7093%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.5399%" y="677" width="0.0806%" height="15" fill="rgb(252,91,48)" fg:x="379" fg:w="1"/><text x="30.7899%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="661" width="0.0806%" height="15" fill="rgb(216,72,13)" fg:x="379" fg:w="1"/><text x="30.7899%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.5399%" y="645" width="0.0806%" height="15" fill="rgb(219,6,37)" fg:x="379" fg:w="1"/><text x="30.7899%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="629" width="0.0806%" height="15" fill="rgb(236,185,40)" fg:x="379" fg:w="1"/><text x="30.7899%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="30.5399%" y="613" width="0.0806%" height="15" fill="rgb(208,81,48)" fg:x="379" fg:w="1"/><text x="30.7899%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="597" width="0.0806%" height="15" fill="rgb(211,42,33)" fg:x="379" fg:w="1"/><text x="30.7899%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="30.5399%" y="581" width="0.0806%" height="15" fill="rgb(211,90,39)" fg:x="379" fg:w="1"/><text x="30.7899%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="30.5399%" y="565" width="0.0806%" height="15" fill="rgb(218,136,12)" fg:x="379" fg:w="1"/><text x="30.7899%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.5399%" y="549" width="0.0806%" height="15" fill="rgb(234,12,32)" fg:x="379" fg:w="1"/><text x="30.7899%" y="559.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="30.4593%" y="757" width="0.2417%" height="15" fill="rgb(221,164,18)" fg:x="378" fg:w="3"/><text x="30.7093%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="30.4593%" y="741" width="0.2417%" height="15" fill="rgb(239,135,14)" fg:x="378" fg:w="3"/><text x="30.7093%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="30.6205%" y="725" width="0.0806%" height="15" fill="rgb(226,198,47)" fg:x="380" fg:w="1"/><text x="30.8705%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="30.6205%" y="709" width="0.0806%" height="15" fill="rgb(244,121,47)" fg:x="380" fg:w="1"/><text x="30.8705%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="30.6205%" y="693" width="0.0806%" height="15" fill="rgb(226,21,48)" fg:x="380" fg:w="1"/><text x="30.8705%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6205%" y="677" width="0.0806%" height="15" fill="rgb(215,178,47)" fg:x="380" fg:w="1"/><text x="30.8705%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="30.6205%" y="661" width="0.0806%" height="15" fill="rgb(206,212,19)" fg:x="380" fg:w="1"/><text x="30.8705%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="30.6205%" y="645" width="0.0806%" height="15" fill="rgb(230,104,34)" fg:x="380" fg:w="1"/><text x="30.8705%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.7816%" y="709" width="0.0806%" height="15" fill="rgb(210,96,51)" fg:x="382" fg:w="1"/><text x="31.0316%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (3 samples, 0.24%)</title><rect x="30.7010%" y="757" width="0.2417%" height="15" fill="rgb(229,111,47)" fg:x="381" fg:w="3"/><text x="30.9510%" y="767.50"></text></g><g><title>plugins_core::moving::model::_::&lt;impl serde::ser::Serialize for plugins_core::moving::model::Occupyable&gt;::serialize (2 samples, 0.16%)</title><rect x="30.7816%" y="741" width="0.1612%" height="15" fill="rgb(218,174,45)" fg:x="382" fg:w="2"/><text x="31.0316%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="30.7816%" y="725" width="0.1612%" height="15" fill="rgb(215,21,32)" fg:x="382" fg:w="2"/><text x="31.0316%" y="735.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="30.8622%" y="709" width="0.0806%" height="15" fill="rgb(235,72,21)" fg:x="383" fg:w="1"/><text x="31.1122%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="30.8622%" y="693" width="0.0806%" height="15" fill="rgb(250,113,30)" fg:x="383" fg:w="1"/><text x="31.1122%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="30.8622%" y="677" width="0.0806%" height="15" fill="rgb(244,136,34)" fg:x="383" fg:w="1"/><text x="31.1122%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="30.9428%" y="661" width="0.0806%" height="15" fill="rgb(213,226,47)" fg:x="384" fg:w="1"/><text x="31.1928%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="30.9428%" y="645" width="0.0806%" height="15" fill="rgb(224,136,40)" fg:x="384" fg:w="1"/><text x="31.1928%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="30.9428%" y="629" width="0.0806%" height="15" fill="rgb(253,124,12)" fg:x="384" fg:w="1"/><text x="31.1928%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="30.9428%" y="613" width="0.0806%" height="15" fill="rgb(210,67,8)" fg:x="384" fg:w="1"/><text x="31.1928%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="30.9428%" y="709" width="0.1612%" height="15" fill="rgb(210,204,0)" fg:x="384" fg:w="2"/><text x="31.1928%" y="719.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="30.9428%" y="693" width="0.1612%" height="15" fill="rgb(217,179,22)" fg:x="384" fg:w="2"/><text x="31.1928%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="30.9428%" y="677" width="0.1612%" height="15" fill="rgb(237,192,33)" fg:x="384" fg:w="2"/><text x="31.1928%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.0234%" y="661" width="0.0806%" height="15" fill="rgb(211,104,28)" fg:x="385" fg:w="1"/><text x="31.2734%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.0234%" y="645" width="0.0806%" height="15" fill="rgb(214,75,30)" fg:x="385" fg:w="1"/><text x="31.2734%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="31.0234%" y="629" width="0.0806%" height="15" fill="rgb(220,227,12)" fg:x="385" fg:w="1"/><text x="31.2734%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1039%" y="661" width="0.1612%" height="15" fill="rgb(233,134,28)" fg:x="386" fg:w="2"/><text x="31.3539%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1039%" y="645" width="0.1612%" height="15" fill="rgb(215,146,24)" fg:x="386" fg:w="2"/><text x="31.3539%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1039%" y="629" width="0.1612%" height="15" fill="rgb(248,227,20)" fg:x="386" fg:w="2"/><text x="31.3539%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="31.1039%" y="613" width="0.1612%" height="15" fill="rgb(250,44,42)" fg:x="386" fg:w="2"/><text x="31.3539%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="31.1845%" y="597" width="0.0806%" height="15" fill="rgb(219,5,35)" fg:x="387" fg:w="1"/><text x="31.4345%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1845%" y="581" width="0.0806%" height="15" fill="rgb(241,132,32)" fg:x="387" fg:w="1"/><text x="31.4345%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="31.1845%" y="565" width="0.0806%" height="15" fill="rgb(234,212,51)" fg:x="387" fg:w="1"/><text x="31.4345%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="31.1845%" y="549" width="0.0806%" height="15" fill="rgb(242,173,29)" fg:x="387" fg:w="1"/><text x="31.4345%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="31.1845%" y="533" width="0.0806%" height="15" fill="rgb(212,159,2)" fg:x="387" fg:w="1"/><text x="31.4345%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="31.1845%" y="517" width="0.0806%" height="15" fill="rgb(238,165,31)" fg:x="387" fg:w="1"/><text x="31.4345%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1845%" y="501" width="0.0806%" height="15" fill="rgb(241,57,36)" fg:x="387" fg:w="1"/><text x="31.4345%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.1845%" y="485" width="0.0806%" height="15" fill="rgb(249,7,4)" fg:x="387" fg:w="1"/><text x="31.4345%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="31.1845%" y="469" width="0.0806%" height="15" fill="rgb(250,137,44)" fg:x="387" fg:w="1"/><text x="31.4345%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="31.1845%" y="453" width="0.0806%" height="15" fill="rgb(244,185,1)" fg:x="387" fg:w="1"/><text x="31.4345%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="31.1845%" y="437" width="0.0806%" height="15" fill="rgb(216,5,53)" fg:x="387" fg:w="1"/><text x="31.4345%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="31.1845%" y="421" width="0.0806%" height="15" fill="rgb(234,89,21)" fg:x="387" fg:w="1"/><text x="31.4345%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.1845%" y="405" width="0.0806%" height="15" fill="rgb(250,81,43)" fg:x="387" fg:w="1"/><text x="31.4345%" y="415.50"></text></g><g><title>plugins_core::build::Build::occupying (16 samples, 1.29%)</title><rect x="30.0564%" y="789" width="1.2893%" height="15" fill="rgb(243,132,11)" fg:x="373" fg:w="16"/><text x="30.3064%" y="799.50"></text></g><g><title>plugins_core::tools::set_occupying (11 samples, 0.89%)</title><rect x="30.4593%" y="773" width="0.8864%" height="15" fill="rgb(253,159,28)" fg:x="378" fg:w="11"/><text x="30.7093%" y="783.50"></text></g><g><title>plugins_core::moving::model::Occupyable::start_occupying (5 samples, 0.40%)</title><rect x="30.9428%" y="757" width="0.4029%" height="15" fill="rgb(237,167,34)" fg:x="384" fg:w="5"/><text x="31.1928%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (5 samples, 0.40%)</title><rect x="30.9428%" y="741" width="0.4029%" height="15" fill="rgb(237,16,50)" fg:x="384" fg:w="5"/><text x="31.1928%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (5 samples, 0.40%)</title><rect x="30.9428%" y="725" width="0.4029%" height="15" fill="rgb(247,125,2)" fg:x="384" fg:w="5"/><text x="31.1928%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="31.1039%" y="709" width="0.2417%" height="15" fill="rgb(254,35,3)" fg:x="386" fg:w="3"/><text x="31.3539%" y="719.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="31.1039%" y="693" width="0.2417%" height="15" fill="rgb(237,209,21)" fg:x="386" fg:w="3"/><text x="31.3539%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="31.1039%" y="677" width="0.2417%" height="15" fill="rgb(224,122,20)" fg:x="386" fg:w="3"/><text x="31.3539%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.2651%" y="661" width="0.0806%" height="15" fill="rgb(224,11,46)" fg:x="388" fg:w="1"/><text x="31.5151%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2651%" y="645" width="0.0806%" height="15" fill="rgb(248,21,33)" fg:x="388" fg:w="1"/><text x="31.5151%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.2651%" y="629" width="0.0806%" height="15" fill="rgb(222,144,7)" fg:x="388" fg:w="1"/><text x="31.5151%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2651%" y="613" width="0.0806%" height="15" fill="rgb(205,141,37)" fg:x="388" fg:w="1"/><text x="31.5151%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.2651%" y="597" width="0.0806%" height="15" fill="rgb(237,130,8)" fg:x="388" fg:w="1"/><text x="31.5151%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2651%" y="581" width="0.0806%" height="15" fill="rgb(209,179,39)" fg:x="388" fg:w="1"/><text x="31.5151%" y="591.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.2651%" y="565" width="0.0806%" height="15" fill="rgb(207,52,17)" fg:x="388" fg:w="1"/><text x="31.5151%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2651%" y="549" width="0.0806%" height="15" fill="rgb(253,158,17)" fg:x="388" fg:w="1"/><text x="31.5151%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="31.2651%" y="533" width="0.0806%" height="15" fill="rgb(208,19,53)" fg:x="388" fg:w="1"/><text x="31.5151%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.2651%" y="517" width="0.0806%" height="15" fill="rgb(233,152,13)" fg:x="388" fg:w="1"/><text x="31.5151%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="31.2651%" y="501" width="0.0806%" height="15" fill="rgb(231,84,1)" fg:x="388" fg:w="1"/><text x="31.5151%" y="511.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="31.2651%" y="485" width="0.0806%" height="15" fill="rgb(229,142,48)" fg:x="388" fg:w="1"/><text x="31.5151%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="31.3457%" y="773" width="0.0806%" height="15" fill="rgb(248,70,29)" fg:x="389" fg:w="1"/><text x="31.5957%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="31.3457%" y="757" width="0.0806%" height="15" fill="rgb(250,85,7)" fg:x="389" fg:w="1"/><text x="31.5957%" y="767.50"></text></g><g><title>engine::internal::EntityMap::add_entity (1 samples, 0.08%)</title><rect x="31.3457%" y="741" width="0.0806%" height="15" fill="rgb(235,140,43)" fg:x="389" fg:w="1"/><text x="31.5957%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.3457%" y="725" width="0.0806%" height="15" fill="rgb(216,0,5)" fg:x="389" fg:w="1"/><text x="31.5957%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.3457%" y="709" width="0.0806%" height="15" fill="rgb(223,167,29)" fg:x="389" fg:w="1"/><text x="31.5957%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="31.3457%" y="693" width="0.0806%" height="15" fill="rgb(229,150,33)" fg:x="389" fg:w="1"/><text x="31.5957%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (189 samples, 15.23%)</title><rect x="16.2772%" y="805" width="15.2297%" height="15" fill="rgb(227,26,52)" fg:x="202" fg:w="189"/><text x="16.5272%" y="815.50">plugins_core::build::Bu..</text></g><g><title>plugins_core::build::Build::with_username (2 samples, 0.16%)</title><rect x="31.3457%" y="789" width="0.1612%" height="15" fill="rgb(250,60,52)" fg:x="389" fg:w="2"/><text x="31.5957%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="31.4263%" y="773" width="0.0806%" height="15" fill="rgb(228,81,46)" fg:x="390" fg:w="1"/><text x="31.6763%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="31.4263%" y="757" width="0.0806%" height="15" fill="rgb(225,218,31)" fg:x="390" fg:w="1"/><text x="31.6763%" y="767.50"></text></g><g><title>plugins_core::build::BuildSurroundings::entity (1 samples, 0.08%)</title><rect x="31.5068%" y="805" width="0.0806%" height="15" fill="rgb(230,35,16)" fg:x="391" fg:w="1"/><text x="31.7568%" y="815.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="31.5068%" y="789" width="0.0806%" height="15" fill="rgb(247,100,0)" fg:x="391" fg:w="1"/><text x="31.7568%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="31.5874%" y="773" width="0.0806%" height="15" fill="rgb(223,135,11)" fg:x="392" fg:w="1"/><text x="31.8374%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="31.5874%" y="757" width="0.0806%" height="15" fill="rgb(207,136,0)" fg:x="392" fg:w="1"/><text x="31.8374%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="31.5874%" y="741" width="0.0806%" height="15" fill="rgb(246,131,25)" fg:x="392" fg:w="1"/><text x="31.8374%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="31.5874%" y="725" width="0.0806%" height="15" fill="rgb(209,47,12)" fg:x="392" fg:w="1"/><text x="31.8374%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="31.5874%" y="709" width="0.0806%" height="15" fill="rgb(221,25,16)" fg:x="392" fg:w="1"/><text x="31.8374%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="31.5874%" y="693" width="0.0806%" height="15" fill="rgb(223,164,33)" fg:x="392" fg:w="1"/><text x="31.8374%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.5874%" y="677" width="0.0806%" height="15" fill="rgb(220,26,23)" fg:x="392" fg:w="1"/><text x="31.8374%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5874%" y="661" width="0.0806%" height="15" fill="rgb(231,224,1)" fg:x="392" fg:w="1"/><text x="31.8374%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="31.5874%" y="645" width="0.0806%" height="15" fill="rgb(229,221,24)" fg:x="392" fg:w="1"/><text x="31.8374%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5874%" y="629" width="0.0806%" height="15" fill="rgb(213,34,10)" fg:x="392" fg:w="1"/><text x="31.8374%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="31.5874%" y="613" width="0.0806%" height="15" fill="rgb(215,33,11)" fg:x="392" fg:w="1"/><text x="31.8374%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="31.5874%" y="597" width="0.0806%" height="15" fill="rgb(216,20,41)" fg:x="392" fg:w="1"/><text x="31.8374%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="31.5874%" y="581" width="0.0806%" height="15" fill="rgb(228,43,31)" fg:x="392" fg:w="1"/><text x="31.8374%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.5874%" y="565" width="0.0806%" height="15" fill="rgb(227,83,26)" fg:x="392" fg:w="1"/><text x="31.8374%" y="575.50"></text></g><g><title>kernel::model::props::Props::set_property (1 samples, 0.08%)</title><rect x="31.6680%" y="741" width="0.0806%" height="15" fill="rgb(217,168,19)" fg:x="393" fg:w="1"/><text x="31.9180%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="31.6680%" y="725" width="0.0806%" height="15" fill="rgb(231,34,33)" fg:x="393" fg:w="1"/><text x="31.9180%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="31.6680%" y="709" width="0.0806%" height="15" fill="rgb(230,120,51)" fg:x="393" fg:w="1"/><text x="31.9180%" y="719.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (311 samples, 25.06%)</title><rect x="6.9299%" y="821" width="25.0604%" height="15" fill="rgb(215,138,27)" fg:x="86" fg:w="311"/><text x="7.1799%" y="831.50">&lt;tests::HoldingKeyInVessel as tests::Wor..</text></g><g><title>plugins_core::build::BuildSurroundings::make (5 samples, 0.40%)</title><rect x="31.5874%" y="805" width="0.4029%" height="15" fill="rgb(246,80,47)" fg:x="392" fg:w="5"/><text x="31.8374%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (5 samples, 0.40%)</title><rect x="31.5874%" y="789" width="0.4029%" height="15" fill="rgb(215,57,53)" fg:x="392" fg:w="5"/><text x="31.8374%" y="799.50"></text></g><g><title>plugins_core::build::Build::named (4 samples, 0.32%)</title><rect x="31.6680%" y="773" width="0.3223%" height="15" fill="rgb(229,137,5)" fg:x="393" fg:w="4"/><text x="31.9180%" y="783.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_name (4 samples, 0.32%)</title><rect x="31.6680%" y="757" width="0.3223%" height="15" fill="rgb(210,86,2)" fg:x="393" fg:w="4"/><text x="31.9180%" y="767.50"></text></g><g><title>kernel::model::props::save_props (3 samples, 0.24%)</title><rect x="31.7486%" y="741" width="0.2417%" height="15" fill="rgb(231,226,51)" fg:x="394" fg:w="3"/><text x="31.9986%" y="751.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="31.8292%" y="725" width="0.1612%" height="15" fill="rgb(216,62,29)" fg:x="395" fg:w="2"/><text x="32.0792%" y="735.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="31.8292%" y="709" width="0.1612%" height="15" fill="rgb(248,202,3)" fg:x="395" fg:w="2"/><text x="32.0792%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.8292%" y="693" width="0.1612%" height="15" fill="rgb(225,181,7)" fg:x="395" fg:w="2"/><text x="32.0792%" y="703.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="31.8292%" y="677" width="0.1612%" height="15" fill="rgb(247,170,54)" fg:x="395" fg:w="2"/><text x="32.0792%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="31.8292%" y="661" width="0.1612%" height="15" fill="rgb(236,204,33)" fg:x="395" fg:w="2"/><text x="32.0792%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_map (2 samples, 0.16%)</title><rect x="31.8292%" y="645" width="0.1612%" height="15" fill="rgb(216,45,30)" fg:x="395" fg:w="2"/><text x="32.0792%" y="655.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="31.8292%" y="629" width="0.1612%" height="15" fill="rgb(213,203,16)" fg:x="395" fg:w="2"/><text x="32.0792%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="31.9098%" y="613" width="0.0806%" height="15" fill="rgb(215,46,16)" fg:x="396" fg:w="1"/><text x="32.1598%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="32.1515%" y="773" width="0.0806%" height="15" fill="rgb(217,162,46)" fg:x="399" fg:w="1"/><text x="32.4015%" y="783.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="32.1515%" y="757" width="0.0806%" height="15" fill="rgb(224,189,20)" fg:x="399" fg:w="1"/><text x="32.4015%" y="767.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1515%" y="741" width="0.0806%" height="15" fill="rgb(232,35,51)" fg:x="399" fg:w="1"/><text x="32.4015%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1515%" y="725" width="0.0806%" height="15" fill="rgb(243,221,46)" fg:x="399" fg:w="1"/><text x="32.4015%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.1515%" y="709" width="0.0806%" height="15" fill="rgb(248,16,16)" fg:x="399" fg:w="1"/><text x="32.4015%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.1515%" y="693" width="0.0806%" height="15" fill="rgb(220,168,13)" fg:x="399" fg:w="1"/><text x="32.4015%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.1515%" y="677" width="0.0806%" height="15" fill="rgb(243,102,39)" fg:x="399" fg:w="1"/><text x="32.4015%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.1515%" y="661" width="0.0806%" height="15" fill="rgb(245,82,32)" fg:x="399" fg:w="1"/><text x="32.4015%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.1515%" y="645" width="0.0806%" height="15" fill="rgb(230,164,19)" fg:x="399" fg:w="1"/><text x="32.4015%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.1515%" y="629" width="0.0806%" height="15" fill="rgb(221,9,41)" fg:x="399" fg:w="1"/><text x="32.4015%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.1515%" y="613" width="0.0806%" height="15" fill="rgb(216,93,0)" fg:x="399" fg:w="1"/><text x="32.4015%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.1515%" y="597" width="0.0806%" height="15" fill="rgb(235,113,9)" fg:x="399" fg:w="1"/><text x="32.4015%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.1515%" y="581" width="0.0806%" height="15" fill="rgb(209,224,10)" fg:x="399" fg:w="1"/><text x="32.4015%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.1515%" y="565" width="0.0806%" height="15" fill="rgb(226,54,34)" fg:x="399" fg:w="1"/><text x="32.4015%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="32.1515%" y="789" width="0.1612%" height="15" fill="rgb(222,60,8)" fg:x="399" fg:w="2"/><text x="32.4015%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="32.2321%" y="773" width="0.0806%" height="15" fill="rgb(248,228,41)" fg:x="400" fg:w="1"/><text x="32.4821%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2321%" y="757" width="0.0806%" height="15" fill="rgb(226,31,32)" fg:x="400" fg:w="1"/><text x="32.4821%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.2321%" y="741" width="0.0806%" height="15" fill="rgb(242,132,49)" fg:x="400" fg:w="1"/><text x="32.4821%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.2321%" y="725" width="0.0806%" height="15" fill="rgb(224,194,19)" fg:x="400" fg:w="1"/><text x="32.4821%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.2321%" y="709" width="0.0806%" height="15" fill="rgb(232,200,51)" fg:x="400" fg:w="1"/><text x="32.4821%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.2321%" y="693" width="0.0806%" height="15" fill="rgb(235,60,46)" fg:x="400" fg:w="1"/><text x="32.4821%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2321%" y="677" width="0.0806%" height="15" fill="rgb(240,109,52)" fg:x="400" fg:w="1"/><text x="32.4821%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.2321%" y="661" width="0.0806%" height="15" fill="rgb(215,78,37)" fg:x="400" fg:w="1"/><text x="32.4821%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.2321%" y="645" width="0.0806%" height="15" fill="rgb(225,141,7)" fg:x="400" fg:w="1"/><text x="32.4821%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.2321%" y="629" width="0.0806%" height="15" fill="rgb(216,102,54)" fg:x="400" fg:w="1"/><text x="32.4821%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.2321%" y="613" width="0.0806%" height="15" fill="rgb(238,143,13)" fg:x="400" fg:w="1"/><text x="32.4821%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.2321%" y="597" width="0.0806%" height="15" fill="rgb(219,45,51)" fg:x="400" fg:w="1"/><text x="32.4821%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3127%" y="709" width="0.0806%" height="15" fill="rgb(242,105,46)" fg:x="401" fg:w="1"/><text x="32.5627%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="32.3127%" y="693" width="0.0806%" height="15" fill="rgb(206,154,49)" fg:x="401" fg:w="1"/><text x="32.5627%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="32.3127%" y="677" width="0.0806%" height="15" fill="rgb(239,215,4)" fg:x="401" fg:w="1"/><text x="32.5627%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="32.3127%" y="661" width="0.0806%" height="15" fill="rgb(238,82,17)" fg:x="401" fg:w="1"/><text x="32.5627%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="32.3127%" y="645" width="0.0806%" height="15" fill="rgb(242,49,30)" fg:x="401" fg:w="1"/><text x="32.5627%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3127%" y="629" width="0.0806%" height="15" fill="rgb(248,5,16)" fg:x="401" fg:w="1"/><text x="32.5627%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="32.3127%" y="613" width="0.0806%" height="15" fill="rgb(237,138,32)" fg:x="401" fg:w="1"/><text x="32.5627%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="32.3127%" y="597" width="0.0806%" height="15" fill="rgb(235,79,45)" fg:x="401" fg:w="1"/><text x="32.5627%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="32.3127%" y="581" width="0.0806%" height="15" fill="rgb(213,105,25)" fg:x="401" fg:w="1"/><text x="32.5627%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="32.3127%" y="565" width="0.0806%" height="15" fill="rgb(251,131,7)" fg:x="401" fg:w="1"/><text x="32.5627%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="32.3127%" y="549" width="0.0806%" height="15" fill="rgb(211,155,7)" fg:x="401" fg:w="1"/><text x="32.5627%" y="559.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="32.3127%" y="533" width="0.0806%" height="15" fill="rgb(243,70,15)" fg:x="401" fg:w="1"/><text x="32.5627%" y="543.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="32.3127%" y="741" width="0.2417%" height="15" fill="rgb(215,171,2)" fg:x="401" fg:w="3"/><text x="32.5627%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="32.3127%" y="725" width="0.2417%" height="15" fill="rgb(244,121,35)" fg:x="401" fg:w="3"/><text x="32.5627%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.3932%" y="709" width="0.1612%" height="15" fill="rgb(249,147,17)" fg:x="402" fg:w="2"/><text x="32.6432%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="32.3932%" y="693" width="0.1612%" height="15" fill="rgb(241,193,52)" fg:x="402" fg:w="2"/><text x="32.6432%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.3932%" y="677" width="0.1612%" height="15" fill="rgb(217,159,39)" fg:x="402" fg:w="2"/><text x="32.6432%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="32.3932%" y="661" width="0.1612%" height="15" fill="rgb(248,110,0)" fg:x="402" fg:w="2"/><text x="32.6432%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="32.3932%" y="645" width="0.1612%" height="15" fill="rgb(233,227,0)" fg:x="402" fg:w="2"/><text x="32.6432%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="32.3932%" y="629" width="0.1612%" height="15" fill="rgb(252,55,2)" fg:x="402" fg:w="2"/><text x="32.6432%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="32.3932%" y="613" width="0.1612%" height="15" fill="rgb(224,194,24)" fg:x="402" fg:w="2"/><text x="32.6432%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.3932%" y="597" width="0.1612%" height="15" fill="rgb(247,5,33)" fg:x="402" fg:w="2"/><text x="32.6432%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="32.3932%" y="581" width="0.1612%" height="15" fill="rgb(242,66,47)" fg:x="402" fg:w="2"/><text x="32.6432%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="32.3932%" y="565" width="0.1612%" height="15" fill="rgb(213,107,12)" fg:x="402" fg:w="2"/><text x="32.6432%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="32.3932%" y="549" width="0.1612%" height="15" fill="rgb(206,131,1)" fg:x="402" fg:w="2"/><text x="32.6432%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="32.3932%" y="533" width="0.1612%" height="15" fill="rgb(214,9,36)" fg:x="402" fg:w="2"/><text x="32.6432%" y="543.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="32.3932%" y="517" width="0.1612%" height="15" fill="rgb(251,215,18)" fg:x="402" fg:w="2"/><text x="32.6432%" y="527.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="32.3932%" y="501" width="0.1612%" height="15" fill="rgb(251,64,9)" fg:x="402" fg:w="2"/><text x="32.6432%" y="511.50"></text></g><g><title>&lt;plugins_core::moving::model::Occupyable as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="32.5544%" y="741" width="0.0806%" height="15" fill="rgb(235,68,21)" fg:x="404" fg:w="1"/><text x="32.8044%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="32.5544%" y="725" width="0.0806%" height="15" fill="rgb(240,69,38)" fg:x="404" fg:w="1"/><text x="32.8044%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.08%)</title><rect x="32.5544%" y="709" width="0.0806%" height="15" fill="rgb(231,18,27)" fg:x="404" fg:w="1"/><text x="32.8044%" y="719.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="32.5544%" y="693" width="0.0806%" height="15" fill="rgb(215,154,25)" fg:x="404" fg:w="1"/><text x="32.8044%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="32.5544%" y="677" width="0.0806%" height="15" fill="rgb(224,33,46)" fg:x="404" fg:w="1"/><text x="32.8044%" y="687.50"></text></g><g><title>kernel::session::get_my_session (1 samples, 0.08%)</title><rect x="32.6350%" y="741" width="0.0806%" height="15" fill="rgb(248,191,53)" fg:x="405" fg:w="1"/><text x="32.8850%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="32.7156%" y="709" width="0.0806%" height="15" fill="rgb(231,3,37)" fg:x="406" fg:w="1"/><text x="32.9656%" y="719.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_audience (10 samples, 0.81%)</title><rect x="32.1515%" y="805" width="0.8058%" height="15" fill="rgb(209,152,2)" fg:x="399" fg:w="10"/><text x="32.4015%" y="815.50"></text></g><g><title>plugins_core::tools::get_occupant_keys (8 samples, 0.64%)</title><rect x="32.3127%" y="789" width="0.6446%" height="15" fill="rgb(212,208,43)" fg:x="401" fg:w="8"/><text x="32.5627%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="32.3127%" y="773" width="0.6446%" height="15" fill="rgb(208,60,49)" fg:x="401" fg:w="8"/><text x="32.5627%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="32.3127%" y="757" width="0.6446%" height="15" fill="rgb(245,135,6)" fg:x="401" fg:w="8"/><text x="32.5627%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="32.7156%" y="741" width="0.2417%" height="15" fill="rgb(243,86,23)" fg:x="406" fg:w="3"/><text x="32.9656%" y="751.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="32.7156%" y="725" width="0.2417%" height="15" fill="rgb(223,7,20)" fg:x="406" fg:w="3"/><text x="32.9656%" y="735.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="32.7961%" y="709" width="0.1612%" height="15" fill="rgb(212,182,17)" fg:x="407" fg:w="2"/><text x="33.0461%" y="719.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="32.7961%" y="693" width="0.1612%" height="15" fill="rgb(237,94,50)" fg:x="407" fg:w="2"/><text x="33.0461%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="32.8767%" y="677" width="0.0806%" height="15" fill="rgb(232,185,44)" fg:x="408" fg:w="1"/><text x="33.1267%" y="687.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="32.9573%" y="805" width="0.0806%" height="15" fill="rgb(205,50,36)" fg:x="409" fg:w="1"/><text x="33.2073%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="32.9573%" y="789" width="0.0806%" height="15" fill="rgb(252,32,32)" fg:x="409" fg:w="1"/><text x="33.2073%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9573%" y="773" width="0.0806%" height="15" fill="rgb(241,123,33)" fg:x="409" fg:w="1"/><text x="33.2073%" y="783.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9573%" y="757" width="0.0806%" height="15" fill="rgb(212,140,16)" fg:x="409" fg:w="1"/><text x="33.2073%" y="767.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="32.9573%" y="741" width="0.0806%" height="15" fill="rgb(247,132,5)" fg:x="409" fg:w="1"/><text x="33.2073%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (1 samples, 0.08%)</title><rect x="32.9573%" y="725" width="0.0806%" height="15" fill="rgb(209,137,38)" fg:x="409" fg:w="1"/><text x="33.2073%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="32.9573%" y="709" width="0.0806%" height="15" fill="rgb(248,32,42)" fg:x="409" fg:w="1"/><text x="33.2073%" y="719.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="32.9573%" y="693" width="0.0806%" height="15" fill="rgb(216,188,40)" fg:x="409" fg:w="1"/><text x="33.2073%" y="703.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="32.9573%" y="677" width="0.0806%" height="15" fill="rgb(209,127,53)" fg:x="409" fg:w="1"/><text x="33.2073%" y="687.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="32.9573%" y="661" width="0.0806%" height="15" fill="rgb(254,162,9)" fg:x="409" fg:w="1"/><text x="33.2073%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.9573%" y="645" width="0.0806%" height="15" fill="rgb(219,183,10)" fg:x="409" fg:w="1"/><text x="33.2073%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="32.9573%" y="629" width="0.0806%" height="15" fill="rgb(217,192,21)" fg:x="409" fg:w="1"/><text x="33.2073%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="32.9573%" y="613" width="0.0806%" height="15" fill="rgb(251,89,27)" fg:x="409" fg:w="1"/><text x="33.2073%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="32.9573%" y="597" width="0.0806%" height="15" fill="rgb(253,55,28)" fg:x="409" fg:w="1"/><text x="33.2073%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="32.9573%" y="581" width="0.0806%" height="15" fill="rgb(216,159,8)" fg:x="409" fg:w="1"/><text x="33.2073%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="32.9573%" y="565" width="0.0806%" height="15" fill="rgb(231,228,44)" fg:x="409" fg:w="1"/><text x="33.2073%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.9573%" y="549" width="0.0806%" height="15" fill="rgb(247,34,48)" fg:x="409" fg:w="1"/><text x="33.2073%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="32.9573%" y="533" width="0.0806%" height="15" fill="rgb(247,222,18)" fg:x="409" fg:w="1"/><text x="33.2073%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="32.9573%" y="517" width="0.0806%" height="15" fill="rgb(227,49,4)" fg:x="409" fg:w="1"/><text x="33.2073%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="32.9573%" y="501" width="0.0806%" height="15" fill="rgb(219,189,53)" fg:x="409" fg:w="1"/><text x="33.2073%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="32.9573%" y="485" width="0.0806%" height="15" fill="rgb(241,160,53)" fg:x="409" fg:w="1"/><text x="33.2073%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.08%)</title><rect x="32.9573%" y="469" width="0.0806%" height="15" fill="rgb(227,115,4)" fg:x="409" fg:w="1"/><text x="33.2073%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.0379%" y="789" width="0.0806%" height="15" fill="rgb(215,28,28)" fg:x="410" fg:w="1"/><text x="33.2879%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.1185%" y="773" width="0.0806%" height="15" fill="rgb(237,143,40)" fg:x="411" fg:w="1"/><text x="33.3685%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::RaisedEvent&gt; (4 samples, 0.32%)</title><rect x="33.0379%" y="805" width="0.3223%" height="15" fill="rgb(205,107,24)" fg:x="410" fg:w="4"/><text x="33.2879%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (3 samples, 0.24%)</title><rect x="33.1185%" y="789" width="0.2417%" height="15" fill="rgb(209,112,35)" fg:x="411" fg:w="3"/><text x="33.3685%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="33.1990%" y="773" width="0.1612%" height="15" fill="rgb(206,135,5)" fg:x="412" fg:w="2"/><text x="33.4490%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="33.2796%" y="757" width="0.0806%" height="15" fill="rgb(227,217,38)" fg:x="413" fg:w="1"/><text x="33.5296%" y="767.50"></text></g><g><title>engine::session::Session::flush_futures (1 samples, 0.08%)</title><rect x="33.3602%" y="805" width="0.0806%" height="15" fill="rgb(205,0,41)" fg:x="414" fg:w="1"/><text x="33.6102%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="33.4408%" y="789" width="0.0806%" height="15" fill="rgb(220,20,40)" fg:x="415" fg:w="1"/><text x="33.6908%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="33.5214%" y="773" width="0.2417%" height="15" fill="rgb(216,145,3)" fg:x="416" fg:w="3"/><text x="33.7714%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="33.6019%" y="757" width="0.1612%" height="15" fill="rgb(207,130,51)" fg:x="417" fg:w="2"/><text x="33.8519%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="33.6019%" y="741" width="0.1612%" height="15" fill="rgb(252,93,13)" fg:x="417" fg:w="2"/><text x="33.8519%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="33.6019%" y="725" width="0.1612%" height="15" fill="rgb(210,105,15)" fg:x="417" fg:w="2"/><text x="33.8519%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="33.6019%" y="709" width="0.1612%" height="15" fill="rgb(212,126,31)" fg:x="417" fg:w="2"/><text x="33.8519%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.6019%" y="693" width="0.1612%" height="15" fill="rgb(241,167,46)" fg:x="417" fg:w="2"/><text x="33.8519%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="33.6019%" y="677" width="0.1612%" height="15" fill="rgb(217,143,19)" fg:x="417" fg:w="2"/><text x="33.8519%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="33.6019%" y="661" width="0.1612%" height="15" fill="rgb(235,117,33)" fg:x="417" fg:w="2"/><text x="33.8519%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="33.6019%" y="645" width="0.1612%" height="15" fill="rgb(247,95,6)" fg:x="417" fg:w="2"/><text x="33.8519%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="33.6019%" y="629" width="0.1612%" height="15" fill="rgb(243,206,43)" fg:x="417" fg:w="2"/><text x="33.8519%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="33.6019%" y="613" width="0.1612%" height="15" fill="rgb(229,65,54)" fg:x="417" fg:w="2"/><text x="33.8519%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="33.6825%" y="597" width="0.0806%" height="15" fill="rgb(247,137,34)" fg:x="418" fg:w="1"/><text x="33.9325%" y="607.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (6 samples, 0.48%)</title><rect x="33.5214%" y="789" width="0.4835%" height="15" fill="rgb(245,174,44)" fg:x="416" fg:w="6"/><text x="33.7714%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="33.7631%" y="773" width="0.2417%" height="15" fill="rgb(223,64,15)" fg:x="419" fg:w="3"/><text x="34.0131%" y="783.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="33.8437%" y="757" width="0.1612%" height="15" fill="rgb(243,153,36)" fg:x="420" fg:w="2"/><text x="34.0937%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="34.0048%" y="773" width="0.0806%" height="15" fill="rgb(252,23,4)" fg:x="422" fg:w="1"/><text x="34.2548%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="34.0048%" y="757" width="0.0806%" height="15" fill="rgb(209,132,13)" fg:x="422" fg:w="1"/><text x="34.2548%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="34.0048%" y="789" width="0.1612%" height="15" fill="rgb(209,196,21)" fg:x="422" fg:w="2"/><text x="34.2548%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="34.0854%" y="773" width="0.0806%" height="15" fill="rgb(252,197,1)" fg:x="423" fg:w="1"/><text x="34.3354%" y="783.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="34.1660%" y="789" width="0.1612%" height="15" fill="rgb(229,42,46)" fg:x="424" fg:w="2"/><text x="34.4160%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="34.2466%" y="773" width="0.0806%" height="15" fill="rgb(219,85,8)" fg:x="425" fg:w="1"/><text x="34.4966%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="34.2466%" y="757" width="0.0806%" height="15" fill="rgb(223,185,14)" fg:x="425" fg:w="1"/><text x="34.4966%" y="767.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2466%" y="741" width="0.0806%" height="15" fill="rgb(217,196,18)" fg:x="425" fg:w="1"/><text x="34.4966%" y="751.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="34.2466%" y="725" width="0.0806%" height="15" fill="rgb(220,122,37)" fg:x="425" fg:w="1"/><text x="34.4966%" y="735.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="34.2466%" y="709" width="0.0806%" height="15" fill="rgb(236,135,33)" fg:x="425" fg:w="1"/><text x="34.4966%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="34.3272%" y="773" width="0.0806%" height="15" fill="rgb(222,86,54)" fg:x="426" fg:w="1"/><text x="34.5772%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.3272%" y="757" width="0.0806%" height="15" fill="rgb(227,42,22)" fg:x="426" fg:w="1"/><text x="34.5772%" y="767.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="34.3272%" y="741" width="0.0806%" height="15" fill="rgb(243,101,27)" fg:x="426" fg:w="1"/><text x="34.5772%" y="751.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="757" width="0.0806%" height="15" fill="rgb(229,100,8)" fg:x="428" fg:w="1"/><text x="34.7383%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="741" width="0.0806%" height="15" fill="rgb(252,68,10)" fg:x="428" fg:w="1"/><text x="34.7383%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="34.4883%" y="725" width="0.0806%" height="15" fill="rgb(219,19,31)" fg:x="428" fg:w="1"/><text x="34.7383%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="34.4883%" y="709" width="0.0806%" height="15" fill="rgb(246,150,44)" fg:x="428" fg:w="1"/><text x="34.7383%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.4883%" y="693" width="0.0806%" height="15" fill="rgb(211,14,39)" fg:x="428" fg:w="1"/><text x="34.7383%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="34.4883%" y="677" width="0.0806%" height="15" fill="rgb(221,98,29)" fg:x="428" fg:w="1"/><text x="34.7383%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="34.4883%" y="661" width="0.0806%" height="15" fill="rgb(221,70,26)" fg:x="428" fg:w="1"/><text x="34.7383%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="34.4883%" y="645" width="0.0806%" height="15" fill="rgb(236,146,30)" fg:x="428" fg:w="1"/><text x="34.7383%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (3 samples, 0.24%)</title><rect x="34.5689%" y="725" width="0.2417%" height="15" fill="rgb(226,94,34)" fg:x="429" fg:w="3"/><text x="34.8189%" y="735.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.5689%" y="709" width="0.2417%" height="15" fill="rgb(248,132,21)" fg:x="429" fg:w="3"/><text x="34.8189%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="34.6495%" y="693" width="0.1612%" height="15" fill="rgb(245,43,50)" fg:x="430" fg:w="2"/><text x="34.8995%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.7301%" y="677" width="0.0806%" height="15" fill="rgb(245,132,31)" fg:x="431" fg:w="1"/><text x="34.9801%" y="687.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (6 samples, 0.48%)</title><rect x="34.5689%" y="741" width="0.4835%" height="15" fill="rgb(230,171,4)" fg:x="429" fg:w="6"/><text x="34.8189%" y="751.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="34.8106%" y="725" width="0.2417%" height="15" fill="rgb(235,6,45)" fg:x="432" fg:w="3"/><text x="35.0606%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="34.9718%" y="709" width="0.0806%" height="15" fill="rgb(220,80,28)" fg:x="434" fg:w="1"/><text x="35.2218%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="34.9718%" y="693" width="0.0806%" height="15" fill="rgb(242,171,9)" fg:x="434" fg:w="1"/><text x="35.2218%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.0524%" y="725" width="0.0806%" height="15" fill="rgb(214,135,29)" fg:x="435" fg:w="1"/><text x="35.3024%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (7 samples, 0.56%)</title><rect x="35.1330%" y="725" width="0.5641%" height="15" fill="rgb(221,229,16)" fg:x="436" fg:w="7"/><text x="35.3830%" y="735.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.48%)</title><rect x="35.2135%" y="709" width="0.4835%" height="15" fill="rgb(253,59,46)" fg:x="437" fg:w="6"/><text x="35.4635%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (4 samples, 0.32%)</title><rect x="35.3747%" y="693" width="0.3223%" height="15" fill="rgb(250,147,20)" fg:x="439" fg:w="4"/><text x="35.6247%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.24%)</title><rect x="35.4553%" y="677" width="0.2417%" height="15" fill="rgb(236,64,48)" fg:x="440" fg:w="3"/><text x="35.7053%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="35.5359%" y="661" width="0.1612%" height="15" fill="rgb(240,37,42)" fg:x="441" fg:w="2"/><text x="35.7859%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="35.5359%" y="645" width="0.1612%" height="15" fill="rgb(220,41,50)" fg:x="441" fg:w="2"/><text x="35.7859%" y="655.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="35.5359%" y="629" width="0.1612%" height="15" fill="rgb(216,51,14)" fg:x="441" fg:w="2"/><text x="35.7859%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="35.7776%" y="677" width="0.0806%" height="15" fill="rgb(215,83,10)" fg:x="444" fg:w="1"/><text x="36.0276%" y="687.50"></text></g><g><title>serde::ser::Serializer::collect_seq (3 samples, 0.24%)</title><rect x="35.7776%" y="709" width="0.2417%" height="15" fill="rgb(206,144,17)" fg:x="444" fg:w="3"/><text x="36.0276%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="35.7776%" y="693" width="0.2417%" height="15" fill="rgb(219,196,37)" fg:x="444" fg:w="3"/><text x="36.0276%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="35.8582%" y="677" width="0.1612%" height="15" fill="rgb(226,135,26)" fg:x="445" fg:w="2"/><text x="36.1082%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="35.8582%" y="661" width="0.1612%" height="15" fill="rgb(237,195,40)" fg:x="445" fg:w="2"/><text x="36.1082%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.08%)</title><rect x="35.9388%" y="645" width="0.0806%" height="15" fill="rgb(228,182,42)" fg:x="446" fg:w="1"/><text x="36.1888%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.0193%" y="709" width="0.0806%" height="15" fill="rgb(224,135,50)" fg:x="447" fg:w="1"/><text x="36.2693%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.0193%" y="693" width="0.0806%" height="15" fill="rgb(236,215,34)" fg:x="447" fg:w="1"/><text x="36.2693%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.0193%" y="677" width="0.0806%" height="15" fill="rgb(244,213,27)" fg:x="447" fg:w="1"/><text x="36.2693%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.0193%" y="661" width="0.0806%" height="15" fill="rgb(233,37,53)" fg:x="447" fg:w="1"/><text x="36.2693%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="36.0999%" y="693" width="0.0806%" height="15" fill="rgb(222,132,14)" fg:x="448" fg:w="1"/><text x="36.3499%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.0999%" y="677" width="0.0806%" height="15" fill="rgb(219,202,29)" fg:x="448" fg:w="1"/><text x="36.3499%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.1805%" y="677" width="0.1612%" height="15" fill="rgb(226,157,39)" fg:x="449" fg:w="2"/><text x="36.4305%" y="687.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.1805%" y="661" width="0.1612%" height="15" fill="rgb(235,213,2)" fg:x="449" fg:w="2"/><text x="36.4305%" y="671.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.2611%" y="645" width="0.0806%" height="15" fill="rgb(250,121,2)" fg:x="450" fg:w="1"/><text x="36.5111%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="36.3417%" y="661" width="0.1612%" height="15" fill="rgb(206,192,33)" fg:x="451" fg:w="2"/><text x="36.5917%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.4222%" y="645" width="0.0806%" height="15" fill="rgb(240,161,6)" fg:x="452" fg:w="1"/><text x="36.6722%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="36.4222%" y="629" width="0.0806%" height="15" fill="rgb(246,53,30)" fg:x="452" fg:w="1"/><text x="36.6722%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="36.4222%" y="613" width="0.0806%" height="15" fill="rgb(219,123,43)" fg:x="452" fg:w="1"/><text x="36.6722%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="36.5028%" y="645" width="0.0806%" height="15" fill="rgb(236,53,49)" fg:x="453" fg:w="1"/><text x="36.7528%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.5028%" y="629" width="0.0806%" height="15" fill="rgb(241,156,1)" fg:x="453" fg:w="1"/><text x="36.7528%" y="639.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="36.5028%" y="661" width="0.1612%" height="15" fill="rgb(209,73,26)" fg:x="453" fg:w="2"/><text x="36.7528%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.5834%" y="645" width="0.0806%" height="15" fill="rgb(206,114,3)" fg:x="454" fg:w="1"/><text x="36.8334%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="36.3417%" y="677" width="0.4029%" height="15" fill="rgb(230,214,9)" fg:x="451" fg:w="5"/><text x="36.5917%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="36.6640%" y="661" width="0.0806%" height="15" fill="rgb(240,184,46)" fg:x="455" fg:w="1"/><text x="36.9140%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="36.1805%" y="693" width="0.7252%" height="15" fill="rgb(242,169,54)" fg:x="449" fg:w="9"/><text x="36.4305%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.7446%" y="677" width="0.1612%" height="15" fill="rgb(207,168,50)" fg:x="456" fg:w="2"/><text x="36.9946%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (12 samples, 0.97%)</title><rect x="36.0999%" y="709" width="0.9670%" height="15" fill="rgb(240,114,2)" fg:x="448" fg:w="12"/><text x="36.3499%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="36.9057%" y="693" width="0.1612%" height="15" fill="rgb(211,17,40)" fg:x="458" fg:w="2"/><text x="37.1557%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (18 samples, 1.45%)</title><rect x="35.6970%" y="725" width="1.4504%" height="15" fill="rgb(235,97,36)" fg:x="443" fg:w="18"/><text x="35.9470%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.0669%" y="709" width="0.0806%" height="15" fill="rgb(208,164,11)" fg:x="460" fg:w="1"/><text x="37.3169%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.0669%" y="693" width="0.0806%" height="15" fill="rgb(242,11,17)" fg:x="460" fg:w="1"/><text x="37.3169%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.0669%" y="677" width="0.0806%" height="15" fill="rgb(215,86,33)" fg:x="460" fg:w="1"/><text x="37.3169%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (35 samples, 2.82%)</title><rect x="35.0524%" y="741" width="2.8203%" height="15" fill="rgb(245,185,28)" fg:x="435" fg:w="35"/><text x="35.3024%" y="751.50">se..</text></g><g><title>std::io::Write::write_all (9 samples, 0.73%)</title><rect x="37.1475%" y="725" width="0.7252%" height="15" fill="rgb(231,89,42)" fg:x="461" fg:w="9"/><text x="37.3975%" y="735.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (6 samples, 0.48%)</title><rect x="37.3892%" y="709" width="0.4835%" height="15" fill="rgb(210,18,47)" fg:x="464" fg:w="6"/><text x="37.6392%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.32%)</title><rect x="37.5504%" y="693" width="0.3223%" height="15" fill="rgb(214,84,8)" fg:x="466" fg:w="4"/><text x="37.8004%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.7921%" y="677" width="0.0806%" height="15" fill="rgb(214,222,23)" fg:x="469" fg:w="1"/><text x="38.0421%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.7921%" y="661" width="0.0806%" height="15" fill="rgb(213,104,21)" fg:x="469" fg:w="1"/><text x="38.0421%" y="671.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="37.7921%" y="645" width="0.0806%" height="15" fill="rgb(238,138,6)" fg:x="469" fg:w="1"/><text x="38.0421%" y="655.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (42 samples, 3.38%)</title><rect x="34.5689%" y="757" width="3.3844%" height="15" fill="rgb(205,167,50)" fg:x="429" fg:w="42"/><text x="34.8189%" y="767.50">&lt;se..</text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="37.8727%" y="741" width="0.0806%" height="15" fill="rgb(230,105,27)" fg:x="470" fg:w="1"/><text x="38.1227%" y="751.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="37.8727%" y="725" width="0.0806%" height="15" fill="rgb(222,97,48)" fg:x="470" fg:w="1"/><text x="38.1227%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="37.8727%" y="709" width="0.0806%" height="15" fill="rgb(222,197,14)" fg:x="470" fg:w="1"/><text x="38.1227%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="37.8727%" y="693" width="0.0806%" height="15" fill="rgb(210,105,47)" fg:x="470" fg:w="1"/><text x="38.1227%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="37.8727%" y="677" width="0.0806%" height="15" fill="rgb(238,158,19)" fg:x="470" fg:w="1"/><text x="38.1227%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="37.8727%" y="661" width="0.0806%" height="15" fill="rgb(226,176,23)" fg:x="470" fg:w="1"/><text x="38.1227%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="37.9533%" y="709" width="0.0806%" height="15" fill="rgb(208,79,31)" fg:x="471" fg:w="1"/><text x="38.2033%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="38.0338%" y="709" width="0.0806%" height="15" fill="rgb(221,154,21)" fg:x="472" fg:w="1"/><text x="38.2838%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.1144%" y="677" width="0.0806%" height="15" fill="rgb(213,61,41)" fg:x="473" fg:w="1"/><text x="38.3644%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="38.1950%" y="677" width="0.1612%" height="15" fill="rgb(215,28,33)" fg:x="474" fg:w="2"/><text x="38.4450%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="38.2756%" y="661" width="0.0806%" height="15" fill="rgb(231,139,26)" fg:x="475" fg:w="1"/><text x="38.5256%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.2756%" y="645" width="0.0806%" height="15" fill="rgb(232,159,16)" fg:x="475" fg:w="1"/><text x="38.5256%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="38.4367%" y="661" width="0.1612%" height="15" fill="rgb(233,80,10)" fg:x="477" fg:w="2"/><text x="38.6867%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.5173%" y="645" width="0.0806%" height="15" fill="rgb(208,147,29)" fg:x="478" fg:w="1"/><text x="38.7673%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="38.5979%" y="661" width="0.0806%" height="15" fill="rgb(213,10,12)" fg:x="479" fg:w="1"/><text x="38.8479%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="37.9533%" y="757" width="0.8058%" height="15" fill="rgb(231,218,13)" fg:x="471" fg:w="10"/><text x="38.2033%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (10 samples, 0.81%)</title><rect x="37.9533%" y="741" width="0.8058%" height="15" fill="rgb(244,199,44)" fg:x="471" fg:w="10"/><text x="38.2033%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="37.9533%" y="725" width="0.8058%" height="15" fill="rgb(240,144,53)" fg:x="471" fg:w="10"/><text x="38.2033%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="38.1144%" y="709" width="0.6446%" height="15" fill="rgb(223,57,28)" fg:x="473" fg:w="8"/><text x="38.3644%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="38.1144%" y="693" width="0.6446%" height="15" fill="rgb(213,134,38)" fg:x="473" fg:w="8"/><text x="38.3644%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="38.3562%" y="677" width="0.4029%" height="15" fill="rgb(251,182,42)" fg:x="476" fg:w="5"/><text x="38.6062%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="38.6785%" y="661" width="0.0806%" height="15" fill="rgb(229,93,13)" fg:x="480" fg:w="1"/><text x="38.9285%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.6785%" y="645" width="0.0806%" height="15" fill="rgb(234,171,3)" fg:x="480" fg:w="1"/><text x="38.9285%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="38.7591%" y="693" width="0.0806%" height="15" fill="rgb(241,105,32)" fg:x="481" fg:w="1"/><text x="39.0091%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.0008%" y="661" width="0.0806%" height="15" fill="rgb(221,66,3)" fg:x="484" fg:w="1"/><text x="39.2508%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.0008%" y="645" width="0.0806%" height="15" fill="rgb(248,155,29)" fg:x="484" fg:w="1"/><text x="39.2508%" y="655.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.0814%" y="645" width="0.1612%" height="15" fill="rgb(231,31,5)" fg:x="485" fg:w="2"/><text x="39.3314%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.2425%" y="645" width="0.0806%" height="15" fill="rgb(213,188,31)" fg:x="487" fg:w="1"/><text x="39.4925%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.2425%" y="629" width="0.0806%" height="15" fill="rgb(212,104,33)" fg:x="487" fg:w="1"/><text x="39.4925%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (3 samples, 0.24%)</title><rect x="39.3231%" y="645" width="0.2417%" height="15" fill="rgb(254,77,51)" fg:x="488" fg:w="3"/><text x="39.5731%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="39.3231%" y="629" width="0.2417%" height="15" fill="rgb(234,39,26)" fg:x="488" fg:w="3"/><text x="39.5731%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="39.4843%" y="613" width="0.0806%" height="15" fill="rgb(208,88,36)" fg:x="490" fg:w="1"/><text x="39.7343%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="39.4843%" y="597" width="0.0806%" height="15" fill="rgb(243,222,10)" fg:x="490" fg:w="1"/><text x="39.7343%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="38.7591%" y="725" width="0.9670%" height="15" fill="rgb(218,133,52)" fg:x="481" fg:w="12"/><text x="39.0091%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (12 samples, 0.97%)</title><rect x="38.7591%" y="709" width="0.9670%" height="15" fill="rgb(222,25,26)" fg:x="481" fg:w="12"/><text x="39.0091%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (11 samples, 0.89%)</title><rect x="38.8396%" y="693" width="0.8864%" height="15" fill="rgb(243,174,24)" fg:x="482" fg:w="11"/><text x="39.0896%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (10 samples, 0.81%)</title><rect x="38.9202%" y="677" width="0.8058%" height="15" fill="rgb(233,188,52)" fg:x="483" fg:w="10"/><text x="39.1702%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (8 samples, 0.64%)</title><rect x="39.0814%" y="661" width="0.6446%" height="15" fill="rgb(208,89,14)" fg:x="485" fg:w="8"/><text x="39.3314%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.5649%" y="645" width="0.1612%" height="15" fill="rgb(205,204,21)" fg:x="491" fg:w="2"/><text x="39.8149%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="39.5649%" y="629" width="0.1612%" height="15" fill="rgb(246,39,28)" fg:x="491" fg:w="2"/><text x="39.8149%" y="639.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="39.5649%" y="613" width="0.1612%" height="15" fill="rgb(235,71,19)" fg:x="491" fg:w="2"/><text x="39.8149%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="40.2901%" y="677" width="0.2417%" height="15" fill="rgb(211,62,39)" fg:x="500" fg:w="3"/><text x="40.5401%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.24%)</title><rect x="40.2901%" y="661" width="0.2417%" height="15" fill="rgb(246,118,20)" fg:x="500" fg:w="3"/><text x="40.5401%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="39.9678%" y="709" width="0.6446%" height="15" fill="rgb(230,82,12)" fg:x="496" fg:w="8"/><text x="40.2178%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.64%)</title><rect x="39.9678%" y="693" width="0.6446%" height="15" fill="rgb(205,212,34)" fg:x="496" fg:w="8"/><text x="40.2178%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="40.5318%" y="677" width="0.0806%" height="15" fill="rgb(239,90,1)" fg:x="503" fg:w="1"/><text x="40.7818%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (3 samples, 0.24%)</title><rect x="40.6124%" y="709" width="0.2417%" height="15" fill="rgb(225,198,50)" fg:x="504" fg:w="3"/><text x="40.8624%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="40.8541%" y="709" width="0.2417%" height="15" fill="rgb(227,208,48)" fg:x="507" fg:w="3"/><text x="41.1041%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="40.8541%" y="693" width="0.2417%" height="15" fill="rgb(238,134,41)" fg:x="507" fg:w="3"/><text x="41.1041%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="40.8541%" y="677" width="0.2417%" height="15" fill="rgb(241,58,39)" fg:x="507" fg:w="3"/><text x="41.1041%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="40.8541%" y="661" width="0.2417%" height="15" fill="rgb(214,126,4)" fg:x="507" fg:w="3"/><text x="41.1041%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="40.8541%" y="645" width="0.2417%" height="15" fill="rgb(235,149,4)" fg:x="507" fg:w="3"/><text x="41.1041%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="40.8541%" y="629" width="0.2417%" height="15" fill="rgb(236,59,29)" fg:x="507" fg:w="3"/><text x="41.1041%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="40.8541%" y="613" width="0.2417%" height="15" fill="rgb(246,11,33)" fg:x="507" fg:w="3"/><text x="41.1041%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="40.8541%" y="597" width="0.2417%" height="15" fill="rgb(232,180,35)" fg:x="507" fg:w="3"/><text x="41.1041%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="40.8541%" y="581" width="0.2417%" height="15" fill="rgb(220,35,37)" fg:x="507" fg:w="3"/><text x="41.1041%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="40.8541%" y="565" width="0.2417%" height="15" fill="rgb(238,107,48)" fg:x="507" fg:w="3"/><text x="41.1041%" y="575.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="40.8541%" y="549" width="0.2417%" height="15" fill="rgb(205,65,21)" fg:x="507" fg:w="3"/><text x="41.1041%" y="559.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="40.8541%" y="533" width="0.2417%" height="15" fill="rgb(246,138,48)" fg:x="507" fg:w="3"/><text x="41.1041%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.0959%" y="693" width="0.0806%" height="15" fill="rgb(209,220,47)" fg:x="510" fg:w="1"/><text x="41.3459%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="41.0959%" y="709" width="0.1612%" height="15" fill="rgb(222,162,49)" fg:x="510" fg:w="2"/><text x="41.3459%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1765%" y="693" width="0.0806%" height="15" fill="rgb(243,123,11)" fg:x="511" fg:w="1"/><text x="41.4265%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.1765%" y="677" width="0.0806%" height="15" fill="rgb(221,229,41)" fg:x="511" fg:w="1"/><text x="41.4265%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.1765%" y="661" width="0.0806%" height="15" fill="rgb(216,68,4)" fg:x="511" fg:w="1"/><text x="41.4265%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.1765%" y="645" width="0.0806%" height="15" fill="rgb(207,88,35)" fg:x="511" fg:w="1"/><text x="41.4265%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.1765%" y="629" width="0.0806%" height="15" fill="rgb(252,2,5)" fg:x="511" fg:w="1"/><text x="41.4265%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1765%" y="613" width="0.0806%" height="15" fill="rgb(209,173,7)" fg:x="511" fg:w="1"/><text x="41.4265%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.1765%" y="597" width="0.0806%" height="15" fill="rgb(210,198,52)" fg:x="511" fg:w="1"/><text x="41.4265%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.1765%" y="581" width="0.0806%" height="15" fill="rgb(228,152,32)" fg:x="511" fg:w="1"/><text x="41.4265%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.1765%" y="565" width="0.0806%" height="15" fill="rgb(249,98,29)" fg:x="511" fg:w="1"/><text x="41.4265%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.1765%" y="549" width="0.0806%" height="15" fill="rgb(205,148,48)" fg:x="511" fg:w="1"/><text x="41.4265%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.1765%" y="533" width="0.0806%" height="15" fill="rgb(236,69,34)" fg:x="511" fg:w="1"/><text x="41.4265%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.1765%" y="517" width="0.0806%" height="15" fill="rgb(220,151,41)" fg:x="511" fg:w="1"/><text x="41.4265%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.2571%" y="709" width="0.0806%" height="15" fill="rgb(254,106,24)" fg:x="512" fg:w="1"/><text x="41.5071%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3376%" y="709" width="0.0806%" height="15" fill="rgb(210,37,48)" fg:x="513" fg:w="1"/><text x="41.5876%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.3376%" y="693" width="0.0806%" height="15" fill="rgb(254,131,5)" fg:x="513" fg:w="1"/><text x="41.5876%" y="703.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="41.3376%" y="677" width="0.0806%" height="15" fill="rgb(216,55,41)" fg:x="513" fg:w="1"/><text x="41.5876%" y="687.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="41.4182%" y="709" width="0.0806%" height="15" fill="rgb(250,35,31)" fg:x="514" fg:w="1"/><text x="41.6682%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.4988%" y="693" width="0.0806%" height="15" fill="rgb(207,124,33)" fg:x="515" fg:w="1"/><text x="41.7488%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5794%" y="693" width="0.0806%" height="15" fill="rgb(249,175,17)" fg:x="516" fg:w="1"/><text x="41.8294%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.5794%" y="677" width="0.0806%" height="15" fill="rgb(224,175,39)" fg:x="516" fg:w="1"/><text x="41.8294%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.5794%" y="661" width="0.0806%" height="15" fill="rgb(208,67,49)" fg:x="516" fg:w="1"/><text x="41.8294%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.5794%" y="645" width="0.0806%" height="15" fill="rgb(222,188,41)" fg:x="516" fg:w="1"/><text x="41.8294%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.5794%" y="629" width="0.0806%" height="15" fill="rgb(243,213,30)" fg:x="516" fg:w="1"/><text x="41.8294%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5794%" y="613" width="0.0806%" height="15" fill="rgb(253,100,45)" fg:x="516" fg:w="1"/><text x="41.8294%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.5794%" y="597" width="0.0806%" height="15" fill="rgb(226,24,44)" fg:x="516" fg:w="1"/><text x="41.8294%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.5794%" y="581" width="0.0806%" height="15" fill="rgb(215,41,24)" fg:x="516" fg:w="1"/><text x="41.8294%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.5794%" y="565" width="0.0806%" height="15" fill="rgb(254,53,33)" fg:x="516" fg:w="1"/><text x="41.8294%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.5794%" y="549" width="0.0806%" height="15" fill="rgb(242,103,10)" fg:x="516" fg:w="1"/><text x="41.8294%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.5794%" y="533" width="0.0806%" height="15" fill="rgb(246,29,21)" fg:x="516" fg:w="1"/><text x="41.8294%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.5794%" y="517" width="0.0806%" height="15" fill="rgb(251,154,1)" fg:x="516" fg:w="1"/><text x="41.8294%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="41.7405%" y="677" width="0.0806%" height="15" fill="rgb(254,212,26)" fg:x="518" fg:w="1"/><text x="41.9905%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8211%" y="677" width="0.0806%" height="15" fill="rgb(251,187,46)" fg:x="519" fg:w="1"/><text x="42.0711%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="41.8211%" y="661" width="0.0806%" height="15" fill="rgb(224,208,14)" fg:x="519" fg:w="1"/><text x="42.0711%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="41.8211%" y="645" width="0.0806%" height="15" fill="rgb(222,176,26)" fg:x="519" fg:w="1"/><text x="42.0711%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="41.8211%" y="629" width="0.0806%" height="15" fill="rgb(241,219,52)" fg:x="519" fg:w="1"/><text x="42.0711%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="41.8211%" y="613" width="0.0806%" height="15" fill="rgb(252,198,21)" fg:x="519" fg:w="1"/><text x="42.0711%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8211%" y="597" width="0.0806%" height="15" fill="rgb(244,196,23)" fg:x="519" fg:w="1"/><text x="42.0711%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="41.8211%" y="581" width="0.0806%" height="15" fill="rgb(239,121,44)" fg:x="519" fg:w="1"/><text x="42.0711%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="41.8211%" y="565" width="0.0806%" height="15" fill="rgb(249,203,23)" fg:x="519" fg:w="1"/><text x="42.0711%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="41.8211%" y="549" width="0.0806%" height="15" fill="rgb(238,219,10)" fg:x="519" fg:w="1"/><text x="42.0711%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="41.8211%" y="533" width="0.0806%" height="15" fill="rgb(241,35,46)" fg:x="519" fg:w="1"/><text x="42.0711%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="41.8211%" y="517" width="0.0806%" height="15" fill="rgb(218,28,6)" fg:x="519" fg:w="1"/><text x="42.0711%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.8211%" y="501" width="0.0806%" height="15" fill="rgb(233,151,50)" fg:x="519" fg:w="1"/><text x="42.0711%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="41.9017%" y="677" width="0.0806%" height="15" fill="rgb(208,57,8)" fg:x="520" fg:w="1"/><text x="42.1517%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9823%" y="677" width="0.0806%" height="15" fill="rgb(253,99,10)" fg:x="521" fg:w="1"/><text x="42.2323%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="41.9823%" y="661" width="0.0806%" height="15" fill="rgb(237,196,49)" fg:x="521" fg:w="1"/><text x="42.2323%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="41.9823%" y="645" width="0.0806%" height="15" fill="rgb(209,51,3)" fg:x="521" fg:w="1"/><text x="42.2323%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="42.0629%" y="661" width="0.0806%" height="15" fill="rgb(238,129,10)" fg:x="522" fg:w="1"/><text x="42.3129%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.0629%" y="645" width="0.0806%" height="15" fill="rgb(246,201,16)" fg:x="522" fg:w="1"/><text x="42.3129%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="42.1434%" y="661" width="0.0806%" height="15" fill="rgb(250,160,20)" fg:x="523" fg:w="1"/><text x="42.3934%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,alloc::collections::btree::set_val::SetValZST,A&gt; as alloc::collections::btree::Recover&lt;Q&gt;&gt;::get (1 samples, 0.08%)</title><rect x="42.2240%" y="645" width="0.0806%" height="15" fill="rgb(251,107,25)" fg:x="524" fg:w="1"/><text x="42.4740%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::set::Intersection&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="42.3046%" y="645" width="0.1612%" height="15" fill="rgb(212,103,39)" fg:x="525" fg:w="2"/><text x="42.5546%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4658%" y="645" width="0.0806%" height="15" fill="rgb(207,9,29)" fg:x="527" fg:w="1"/><text x="42.7158%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="42.4658%" y="629" width="0.0806%" height="15" fill="rgb(227,84,3)" fg:x="527" fg:w="1"/><text x="42.7158%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="42.4658%" y="613" width="0.0806%" height="15" fill="rgb(242,194,7)" fg:x="527" fg:w="1"/><text x="42.7158%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="42.5463%" y="629" width="0.0806%" height="15" fill="rgb(230,40,4)" fg:x="528" fg:w="1"/><text x="42.7963%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="42.5463%" y="613" width="0.0806%" height="15" fill="rgb(243,229,33)" fg:x="528" fg:w="1"/><text x="42.7963%" y="623.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="42.5463%" y="597" width="0.0806%" height="15" fill="rgb(240,65,24)" fg:x="528" fg:w="1"/><text x="42.7963%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (50 samples, 4.03%)</title><rect x="38.7591%" y="741" width="4.0290%" height="15" fill="rgb(212,28,20)" fg:x="481" fg:w="50"/><text x="39.0091%" y="751.50">&lt;ker..</text></g><g><title>treediff::diff::diff (38 samples, 3.06%)</title><rect x="39.7260%" y="725" width="3.0620%" height="15" fill="rgb(209,72,3)" fg:x="493" fg:w="38"/><text x="39.9760%" y="735.50">tre..</text></g><g><title>treediff::diff::diff (16 samples, 1.29%)</title><rect x="41.4988%" y="709" width="1.2893%" height="15" fill="rgb(238,170,36)" fg:x="515" fg:w="16"/><text x="41.7488%" y="719.50"></text></g><g><title>treediff::diff::diff (14 samples, 1.13%)</title><rect x="41.6600%" y="693" width="1.1281%" height="15" fill="rgb(236,19,38)" fg:x="517" fg:w="14"/><text x="41.9100%" y="703.50"></text></g><g><title>treediff::diff::diff (9 samples, 0.73%)</title><rect x="42.0629%" y="677" width="0.7252%" height="15" fill="rgb(230,67,43)" fg:x="522" fg:w="9"/><text x="42.3129%" y="687.50"></text></g><g><title>treediff::diff::diff (7 samples, 0.56%)</title><rect x="42.2240%" y="661" width="0.5641%" height="15" fill="rgb(227,14,36)" fg:x="524" fg:w="7"/><text x="42.4740%" y="671.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="42.5463%" y="645" width="0.2417%" height="15" fill="rgb(247,171,49)" fg:x="528" fg:w="3"/><text x="42.7963%" y="655.50"></text></g><g><title>treediff::tools::record::mk (2 samples, 0.16%)</title><rect x="42.6269%" y="629" width="0.1612%" height="15" fill="rgb(235,164,51)" fg:x="529" fg:w="2"/><text x="42.8769%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.6269%" y="613" width="0.1612%" height="15" fill="rgb(246,107,20)" fg:x="529" fg:w="2"/><text x="42.8769%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="42.6269%" y="597" width="0.1612%" height="15" fill="rgb(226,88,18)" fg:x="529" fg:w="2"/><text x="42.8769%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="42.6269%" y="581" width="0.1612%" height="15" fill="rgb(235,136,9)" fg:x="529" fg:w="2"/><text x="42.8769%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="42.6269%" y="565" width="0.1612%" height="15" fill="rgb(209,3,34)" fg:x="529" fg:w="2"/><text x="42.8769%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="42.6269%" y="549" width="0.1612%" height="15" fill="rgb(213,38,19)" fg:x="529" fg:w="2"/><text x="42.8769%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="42.6269%" y="533" width="0.1612%" height="15" fill="rgb(254,24,24)" fg:x="529" fg:w="2"/><text x="42.8769%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="42.6269%" y="517" width="0.1612%" height="15" fill="rgb(219,122,42)" fg:x="529" fg:w="2"/><text x="42.8769%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="42.6269%" y="501" width="0.1612%" height="15" fill="rgb(205,128,31)" fg:x="529" fg:w="2"/><text x="42.8769%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="42.6269%" y="485" width="0.1612%" height="15" fill="rgb(212,142,0)" fg:x="529" fg:w="2"/><text x="42.8769%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="42.6269%" y="469" width="0.1612%" height="15" fill="rgb(211,25,35)" fg:x="529" fg:w="2"/><text x="42.8769%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="42.6269%" y="453" width="0.1612%" height="15" fill="rgb(220,150,53)" fg:x="529" fg:w="2"/><text x="42.8769%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="42.6269%" y="437" width="0.1612%" height="15" fill="rgb(220,30,24)" fg:x="529" fg:w="2"/><text x="42.8769%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.0298%" y="709" width="0.0806%" height="15" fill="rgb(218,86,23)" fg:x="534" fg:w="1"/><text x="43.2798%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="43.1104%" y="709" width="0.2417%" height="15" fill="rgb(206,62,27)" fg:x="535" fg:w="3"/><text x="43.3604%" y="719.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="43.3521%" y="709" width="0.0806%" height="15" fill="rgb(249,174,0)" fg:x="538" fg:w="1"/><text x="43.6021%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="43.3521%" y="693" width="0.0806%" height="15" fill="rgb(246,67,27)" fg:x="538" fg:w="1"/><text x="43.6021%" y="703.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.4327%" y="677" width="0.0806%" height="15" fill="rgb(250,195,30)" fg:x="539" fg:w="1"/><text x="43.6827%" y="687.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (2 samples, 0.16%)</title><rect x="43.4327%" y="709" width="0.1612%" height="15" fill="rgb(251,171,50)" fg:x="539" fg:w="2"/><text x="43.6827%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="43.4327%" y="693" width="0.1612%" height="15" fill="rgb(236,196,10)" fg:x="539" fg:w="2"/><text x="43.6827%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5133%" y="677" width="0.0806%" height="15" fill="rgb(249,228,52)" fg:x="540" fg:w="1"/><text x="43.7633%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.5133%" y="661" width="0.0806%" height="15" fill="rgb(219,60,51)" fg:x="540" fg:w="1"/><text x="43.7633%" y="671.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.7550%" y="661" width="0.1612%" height="15" fill="rgb(240,198,24)" fg:x="543" fg:w="2"/><text x="44.0050%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="43.8356%" y="645" width="0.0806%" height="15" fill="rgb(240,192,40)" fg:x="544" fg:w="1"/><text x="44.0856%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="43.8356%" y="629" width="0.0806%" height="15" fill="rgb(219,118,5)" fg:x="544" fg:w="1"/><text x="44.0856%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="43.9162%" y="661" width="0.1612%" height="15" fill="rgb(205,202,34)" fg:x="545" fg:w="2"/><text x="44.1662%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="43.9162%" y="645" width="0.1612%" height="15" fill="rgb(234,153,26)" fg:x="545" fg:w="2"/><text x="44.1662%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="43.9162%" y="629" width="0.1612%" height="15" fill="rgb(229,26,29)" fg:x="545" fg:w="2"/><text x="44.1662%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="43.9162%" y="613" width="0.1612%" height="15" fill="rgb(237,115,21)" fg:x="545" fg:w="2"/><text x="44.1662%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::end (1 samples, 0.08%)</title><rect x="44.1579%" y="645" width="0.0806%" height="15" fill="rgb(252,144,15)" fg:x="548" fg:w="1"/><text x="44.4079%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="44.3997%" y="629" width="0.3223%" height="15" fill="rgb(232,26,13)" fg:x="551" fg:w="4"/><text x="44.6497%" y="639.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="44.5608%" y="613" width="0.1612%" height="15" fill="rgb(206,44,19)" fg:x="553" fg:w="2"/><text x="44.8108%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="44.6414%" y="597" width="0.0806%" height="15" fill="rgb(249,159,2)" fg:x="554" fg:w="1"/><text x="44.8914%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.9637%" y="533" width="0.2417%" height="15" fill="rgb(231,5,32)" fg:x="558" fg:w="3"/><text x="45.2137%" y="543.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="44.9637%" y="517" width="0.2417%" height="15" fill="rgb(249,210,18)" fg:x="558" fg:w="3"/><text x="45.2137%" y="527.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="44.9637%" y="501" width="0.2417%" height="15" fill="rgb(215,223,36)" fg:x="558" fg:w="3"/><text x="45.2137%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (20 samples, 1.61%)</title><rect x="43.7550%" y="677" width="1.6116%" height="15" fill="rgb(245,185,20)" fg:x="543" fg:w="20"/><text x="44.0050%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 1.29%)</title><rect x="44.0774%" y="661" width="1.2893%" height="15" fill="rgb(206,224,11)" fg:x="547" fg:w="16"/><text x="44.3274%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (14 samples, 1.13%)</title><rect x="44.2385%" y="645" width="1.1281%" height="15" fill="rgb(248,73,42)" fg:x="549" fg:w="14"/><text x="44.4885%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.64%)</title><rect x="44.7220%" y="629" width="0.6446%" height="15" fill="rgb(219,149,31)" fg:x="555" fg:w="8"/><text x="44.9720%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="44.8026%" y="613" width="0.5641%" height="15" fill="rgb(243,104,17)" fg:x="556" fg:w="7"/><text x="45.0526%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.56%)</title><rect x="44.8026%" y="597" width="0.5641%" height="15" fill="rgb(244,117,33)" fg:x="556" fg:w="7"/><text x="45.0526%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (7 samples, 0.56%)</title><rect x="44.8026%" y="581" width="0.5641%" height="15" fill="rgb(251,25,47)" fg:x="556" fg:w="7"/><text x="45.0526%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.48%)</title><rect x="44.8832%" y="565" width="0.4835%" height="15" fill="rgb(249,70,13)" fg:x="557" fg:w="6"/><text x="45.1332%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="44.9637%" y="549" width="0.4029%" height="15" fill="rgb(217,133,18)" fg:x="558" fg:w="5"/><text x="45.2137%" y="559.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="45.2055%" y="533" width="0.1612%" height="15" fill="rgb(248,97,28)" fg:x="561" fg:w="2"/><text x="45.4555%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_seq (1 samples, 0.08%)</title><rect x="45.2861%" y="517" width="0.0806%" height="15" fill="rgb(237,193,4)" fg:x="562" fg:w="1"/><text x="45.5361%" y="527.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 1.77%)</title><rect x="43.6745%" y="693" width="1.7728%" height="15" fill="rgb(247,198,45)" fg:x="542" fg:w="22"/><text x="43.9245%" y="703.50">&lt;..</text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="45.3666%" y="677" width="0.0806%" height="15" fill="rgb(245,2,20)" fg:x="563" fg:w="1"/><text x="45.6166%" y="687.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (35 samples, 2.82%)</title><rect x="42.7881%" y="741" width="2.8203%" height="15" fill="rgb(210,71,36)" fg:x="531" fg:w="35"/><text x="43.0381%" y="751.50">ke..</text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (35 samples, 2.82%)</title><rect x="42.7881%" y="725" width="2.8203%" height="15" fill="rgb(238,114,30)" fg:x="531" fg:w="35"/><text x="43.0381%" y="735.50">&lt;s..</text></g><g><title>serde::ser::Serializer::collect_map (25 samples, 2.01%)</title><rect x="43.5939%" y="709" width="2.0145%" height="15" fill="rgb(241,200,2)" fg:x="541" fg:w="25"/><text x="43.8439%" y="719.50">s..</text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="45.4472%" y="693" width="0.1612%" height="15" fill="rgb(232,106,18)" fg:x="564" fg:w="2"/><text x="45.6972%" y="703.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="45.6890%" y="661" width="0.0806%" height="15" fill="rgb(211,141,18)" fg:x="567" fg:w="1"/><text x="45.9390%" y="671.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="46.3336%" y="597" width="0.0806%" height="15" fill="rgb(224,9,9)" fg:x="575" fg:w="1"/><text x="46.5836%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.3336%" y="581" width="0.0806%" height="15" fill="rgb(249,137,46)" fg:x="575" fg:w="1"/><text x="46.5836%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.3336%" y="565" width="0.0806%" height="15" fill="rgb(236,44,45)" fg:x="575" fg:w="1"/><text x="46.5836%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="46.4948%" y="501" width="0.0806%" height="15" fill="rgb(205,68,40)" fg:x="577" fg:w="1"/><text x="46.7448%" y="511.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4948%" y="485" width="0.0806%" height="15" fill="rgb(214,198,49)" fg:x="577" fg:w="1"/><text x="46.7448%" y="495.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="46.4948%" y="469" width="0.0806%" height="15" fill="rgb(226,140,45)" fg:x="577" fg:w="1"/><text x="46.7448%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.4948%" y="453" width="0.0806%" height="15" fill="rgb(209,109,20)" fg:x="577" fg:w="1"/><text x="46.7448%" y="463.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="46.4948%" y="517" width="0.1612%" height="15" fill="rgb(217,33,46)" fg:x="577" fg:w="2"/><text x="46.7448%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.5753%" y="501" width="0.0806%" height="15" fill="rgb(232,150,33)" fg:x="578" fg:w="1"/><text x="46.8253%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="46.6559%" y="517" width="0.0806%" height="15" fill="rgb(233,76,25)" fg:x="579" fg:w="1"/><text x="46.9059%" y="527.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="46.6559%" y="501" width="0.0806%" height="15" fill="rgb(254,219,23)" fg:x="579" fg:w="1"/><text x="46.9059%" y="511.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (7 samples, 0.56%)</title><rect x="46.4948%" y="549" width="0.5641%" height="15" fill="rgb(233,108,4)" fg:x="577" fg:w="7"/><text x="46.7448%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (7 samples, 0.56%)</title><rect x="46.4948%" y="533" width="0.5641%" height="15" fill="rgb(229,98,6)" fg:x="577" fg:w="7"/><text x="46.7448%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="46.7365%" y="517" width="0.3223%" height="15" fill="rgb(217,40,27)" fg:x="580" fg:w="4"/><text x="46.9865%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="46.8171%" y="501" width="0.2417%" height="15" fill="rgb(221,35,43)" fg:x="581" fg:w="3"/><text x="47.0671%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="46.8171%" y="485" width="0.2417%" height="15" fill="rgb(212,107,11)" fg:x="581" fg:w="3"/><text x="47.0671%" y="495.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (10 samples, 0.81%)</title><rect x="46.3336%" y="613" width="0.8058%" height="15" fill="rgb(245,42,44)" fg:x="575" fg:w="10"/><text x="46.5836%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (9 samples, 0.73%)</title><rect x="46.4142%" y="597" width="0.7252%" height="15" fill="rgb(209,31,12)" fg:x="576" fg:w="9"/><text x="46.6642%" y="607.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (8 samples, 0.64%)</title><rect x="46.4948%" y="581" width="0.6446%" height="15" fill="rgb(210,228,54)" fg:x="577" fg:w="8"/><text x="46.7448%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8 samples, 0.64%)</title><rect x="46.4948%" y="565" width="0.6446%" height="15" fill="rgb(241,19,33)" fg:x="577" fg:w="8"/><text x="46.7448%" y="575.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.0588%" y="549" width="0.0806%" height="15" fill="rgb(229,51,27)" fg:x="584" fg:w="1"/><text x="47.3088%" y="559.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="47.0588%" y="533" width="0.0806%" height="15" fill="rgb(214,167,49)" fg:x="584" fg:w="1"/><text x="47.3088%" y="543.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="47.0588%" y="517" width="0.0806%" height="15" fill="rgb(248,140,47)" fg:x="584" fg:w="1"/><text x="47.3088%" y="527.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="47.1394%" y="613" width="0.0806%" height="15" fill="rgb(228,6,51)" fg:x="585" fg:w="1"/><text x="47.3894%" y="623.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="47.1394%" y="597" width="0.0806%" height="15" fill="rgb(242,44,53)" fg:x="585" fg:w="1"/><text x="47.3894%" y="607.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.3006%" y="581" width="0.1612%" height="15" fill="rgb(249,90,50)" fg:x="587" fg:w="2"/><text x="47.5506%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (20 samples, 1.61%)</title><rect x="46.0113%" y="645" width="1.6116%" height="15" fill="rgb(222,84,19)" fg:x="571" fg:w="20"/><text x="46.2613%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (17 samples, 1.37%)</title><rect x="46.2530%" y="629" width="1.3699%" height="15" fill="rgb(214,140,12)" fg:x="574" fg:w="17"/><text x="46.5030%" y="639.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.2200%" y="613" width="0.4029%" height="15" fill="rgb(210,20,43)" fg:x="586" fg:w="5"/><text x="47.4700%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.40%)</title><rect x="47.2200%" y="597" width="0.4029%" height="15" fill="rgb(243,1,40)" fg:x="586" fg:w="5"/><text x="47.4700%" y="607.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (2 samples, 0.16%)</title><rect x="47.4617%" y="581" width="0.1612%" height="15" fill="rgb(224,102,26)" fg:x="589" fg:w="2"/><text x="47.7117%" y="591.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (3 samples, 0.24%)</title><rect x="47.6229%" y="645" width="0.2417%" height="15" fill="rgb(221,179,1)" fg:x="591" fg:w="3"/><text x="47.8729%" y="655.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (3 samples, 0.24%)</title><rect x="47.6229%" y="629" width="0.2417%" height="15" fill="rgb(216,209,47)" fg:x="591" fg:w="3"/><text x="47.8729%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (30 samples, 2.42%)</title><rect x="45.6084%" y="677" width="2.4174%" height="15" fill="rgb(251,135,9)" fg:x="566" fg:w="30"/><text x="45.8584%" y="687.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (28 samples, 2.26%)</title><rect x="45.7695%" y="661" width="2.2562%" height="15" fill="rgb(242,9,36)" fg:x="568" fg:w="28"/><text x="46.0195%" y="671.50">&lt;..</text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.8646%" y="645" width="0.1612%" height="15" fill="rgb(249,60,37)" fg:x="594" fg:w="2"/><text x="48.1146%" y="655.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="47.8646%" y="629" width="0.1612%" height="15" fill="rgb(230,66,45)" fg:x="594" fg:w="2"/><text x="48.1146%" y="639.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="47.8646%" y="613" width="0.1612%" height="15" fill="rgb(216,1,47)" fg:x="594" fg:w="2"/><text x="48.1146%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (171 samples, 13.78%)</title><rect x="34.3272%" y="789" width="13.7792%" height="15" fill="rgb(235,8,23)" fg:x="426" fg:w="171"/><text x="34.5772%" y="799.50">engine::internal::Ent..</text></g><g><title>engine::session::SavesEntities::check_for_changes (170 samples, 13.70%)</title><rect x="34.4077%" y="773" width="13.6986%" height="15" fill="rgb(225,136,11)" fg:x="427" fg:w="170"/><text x="34.6577%" y="783.50">engine::session::Save..</text></g><g><title>kernel::model::any_entity_changes (116 samples, 9.35%)</title><rect x="38.7591%" y="757" width="9.3473%" height="15" fill="rgb(228,63,44)" fg:x="481" fg:w="116"/><text x="39.0091%" y="767.50">kernel::model..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (31 samples, 2.50%)</title><rect x="45.6084%" y="741" width="2.4980%" height="15" fill="rgb(240,43,52)" fg:x="566" fg:w="31"/><text x="45.8584%" y="751.50">se..</text></g><g><title>serde_json::de::from_trait (31 samples, 2.50%)</title><rect x="45.6084%" y="725" width="2.4980%" height="15" fill="rgb(217,167,36)" fg:x="566" fg:w="31"/><text x="45.8584%" y="735.50">se..</text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (31 samples, 2.50%)</title><rect x="45.6084%" y="709" width="2.4980%" height="15" fill="rgb(250,19,6)" fg:x="566" fg:w="31"/><text x="45.8584%" y="719.50">&lt;&amp;..</text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31 samples, 2.50%)</title><rect x="45.6084%" y="693" width="2.4980%" height="15" fill="rgb(236,60,51)" fg:x="566" fg:w="31"/><text x="45.8584%" y="703.50">&lt;s..</text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="48.0258%" y="677" width="0.0806%" height="15" fill="rgb(222,217,20)" fg:x="596" fg:w="1"/><text x="48.2758%" y="687.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="48.1064%" y="789" width="0.0806%" height="15" fill="rgb(242,65,52)" fg:x="597" fg:w="1"/><text x="48.3564%" y="799.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="48.1064%" y="773" width="0.0806%" height="15" fill="rgb(217,5,41)" fg:x="597" fg:w="1"/><text x="48.3564%" y="783.50"></text></g><g><title>engine::session::Session::save_entity_changes (184 samples, 14.83%)</title><rect x="33.4408%" y="805" width="14.8268%" height="15" fill="rgb(223,208,53)" fg:x="415" fg:w="184"/><text x="33.6908%" y="815.50">engine::session::Sessio..</text></g><g><title>std::env::_var (1 samples, 0.08%)</title><rect x="48.1869%" y="789" width="0.0806%" height="15" fill="rgb(221,104,30)" fg:x="598" fg:w="1"/><text x="48.4369%" y="799.50"></text></g><g><title>std::env::var_os (1 samples, 0.08%)</title><rect x="48.1869%" y="773" width="0.0806%" height="15" fill="rgb(230,210,42)" fg:x="598" fg:w="1"/><text x="48.4369%" y="783.50"></text></g><g><title>std::env::_var_os (1 samples, 0.08%)</title><rect x="48.1869%" y="757" width="0.0806%" height="15" fill="rgb(206,205,27)" fg:x="598" fg:w="1"/><text x="48.4369%" y="767.50"></text></g><g><title>std::sys::unix::os::getenv (1 samples, 0.08%)</title><rect x="48.1869%" y="741" width="0.0806%" height="15" fill="rgb(233,114,38)" fg:x="598" fg:w="1"/><text x="48.4369%" y="751.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.08%)</title><rect x="48.1869%" y="725" width="0.0806%" height="15" fill="rgb(216,174,36)" fg:x="598" fg:w="1"/><text x="48.4369%" y="735.50"></text></g><g><title>std::sys::unix::os::getenv::{{closure}} (1 samples, 0.08%)</title><rect x="48.1869%" y="709" width="0.0806%" height="15" fill="rgb(211,30,9)" fg:x="598" fg:w="1"/><text x="48.4369%" y="719.50"></text></g><g><title>getenv (1 samples, 0.08%)</title><rect x="48.1869%" y="693" width="0.0806%" height="15" fill="rgb(216,8,21)" fg:x="598" fg:w="1"/><text x="48.4369%" y="703.50"></text></g><g><title>engine::session::Session::close (203 samples, 16.36%)</title><rect x="31.9903%" y="821" width="16.3578%" height="15" fill="rgb(237,209,39)" fg:x="397" fg:w="203"/><text x="32.2403%" y="831.50">engine::session::Session:..</text></g><g><title>kernel::plugins::SessionPlugins::stop (1 samples, 0.08%)</title><rect x="48.2675%" y="805" width="0.0806%" height="15" fill="rgb(235,111,47)" fg:x="599" fg:w="1"/><text x="48.5175%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="48.4287%" y="773" width="0.1612%" height="15" fill="rgb(216,139,9)" fg:x="601" fg:w="2"/><text x="48.6787%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.16%)</title><rect x="48.4287%" y="757" width="0.1612%" height="15" fill="rgb(248,185,4)" fg:x="601" fg:w="2"/><text x="48.6787%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="48.5093%" y="741" width="0.0806%" height="15" fill="rgb(239,185,25)" fg:x="602" fg:w="1"/><text x="48.7593%" y="751.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.0733%" y="661" width="0.0806%" height="15" fill="rgb(233,207,8)" fg:x="609" fg:w="1"/><text x="49.3233%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.1539%" y="645" width="0.0806%" height="15" fill="rgb(249,220,24)" fg:x="610" fg:w="1"/><text x="49.4039%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.3956%" y="629" width="0.0806%" height="15" fill="rgb(221,50,14)" fg:x="613" fg:w="1"/><text x="49.6456%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="49.4762%" y="613" width="0.0806%" height="15" fill="rgb(227,79,42)" fg:x="614" fg:w="1"/><text x="49.7262%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.4762%" y="597" width="0.0806%" height="15" fill="rgb(228,218,49)" fg:x="614" fg:w="1"/><text x="49.7262%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (7 samples, 0.56%)</title><rect x="49.1539%" y="661" width="0.5641%" height="15" fill="rgb(249,18,15)" fg:x="610" fg:w="7"/><text x="49.4039%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="49.2345%" y="645" width="0.4835%" height="15" fill="rgb(212,84,27)" fg:x="611" fg:w="6"/><text x="49.4845%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="49.4762%" y="629" width="0.2417%" height="15" fill="rgb(207,83,24)" fg:x="614" fg:w="3"/><text x="49.7262%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="49.5568%" y="613" width="0.1612%" height="15" fill="rgb(219,61,7)" fg:x="615" fg:w="2"/><text x="49.8068%" y="623.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="49.5568%" y="597" width="0.1612%" height="15" fill="rgb(211,43,29)" fg:x="615" fg:w="2"/><text x="49.8068%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="49.7985%" y="645" width="0.0806%" height="15" fill="rgb(243,15,23)" fg:x="618" fg:w="1"/><text x="50.0485%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="49.8791%" y="645" width="0.0806%" height="15" fill="rgb(217,52,28)" fg:x="619" fg:w="1"/><text x="50.1291%" y="655.50"></text></g><g><title>__libc_free (3 samples, 0.24%)</title><rect x="50.2820%" y="613" width="0.2417%" height="15" fill="rgb(210,35,6)" fg:x="624" fg:w="3"/><text x="50.5320%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.5238%" y="613" width="0.0806%" height="15" fill="rgb(237,187,28)" fg:x="627" fg:w="1"/><text x="50.7738%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.5238%" y="597" width="0.0806%" height="15" fill="rgb(231,136,24)" fg:x="627" fg:w="1"/><text x="50.7738%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 1.69%)</title><rect x="48.9927%" y="677" width="1.6922%" height="15" fill="rgb(205,176,52)" fg:x="608" fg:w="21"/><text x="49.2427%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (12 samples, 0.97%)</title><rect x="49.7180%" y="661" width="0.9670%" height="15" fill="rgb(218,65,12)" fg:x="617" fg:w="12"/><text x="49.9680%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (9 samples, 0.73%)</title><rect x="49.9597%" y="645" width="0.7252%" height="15" fill="rgb(234,101,21)" fg:x="620" fg:w="9"/><text x="50.2097%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="50.2015%" y="629" width="0.4835%" height="15" fill="rgb(206,13,20)" fg:x="623" fg:w="6"/><text x="50.4515%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="50.6044%" y="613" width="0.0806%" height="15" fill="rgb(236,89,44)" fg:x="628" fg:w="1"/><text x="50.8544%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="50.6044%" y="597" width="0.0806%" height="15" fill="rgb(225,52,17)" fg:x="628" fg:w="1"/><text x="50.8544%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6044%" y="581" width="0.0806%" height="15" fill="rgb(214,27,25)" fg:x="628" fg:w="1"/><text x="50.8544%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="50.6849%" y="677" width="0.0806%" height="15" fill="rgb(240,141,35)" fg:x="629" fg:w="1"/><text x="50.9349%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="50.7655%" y="677" width="0.0806%" height="15" fill="rgb(216,126,3)" fg:x="630" fg:w="1"/><text x="51.0155%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::ops::deref::Deref&gt;::deref (1 samples, 0.08%)</title><rect x="50.9267%" y="661" width="0.0806%" height="15" fill="rgb(249,196,23)" fg:x="632" fg:w="1"/><text x="51.1767%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="51.9742%" y="565" width="0.1612%" height="15" fill="rgb(215,185,43)" fg:x="645" fg:w="2"/><text x="52.2242%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="52.0548%" y="549" width="0.0806%" height="15" fill="rgb(208,194,36)" fg:x="646" fg:w="1"/><text x="52.3048%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="52.0548%" y="533" width="0.0806%" height="15" fill="rgb(245,182,12)" fg:x="646" fg:w="1"/><text x="52.3048%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="52.0548%" y="517" width="0.0806%" height="15" fill="rgb(244,222,52)" fg:x="646" fg:w="1"/><text x="52.3048%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="52.0548%" y="501" width="0.0806%" height="15" fill="rgb(236,222,51)" fg:x="646" fg:w="1"/><text x="52.3048%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.0548%" y="485" width="0.0806%" height="15" fill="rgb(254,71,22)" fg:x="646" fg:w="1"/><text x="52.3048%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.0548%" y="469" width="0.0806%" height="15" fill="rgb(250,104,15)" fg:x="646" fg:w="1"/><text x="52.3048%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.0548%" y="453" width="0.0806%" height="15" fill="rgb(229,223,46)" fg:x="646" fg:w="1"/><text x="52.3048%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.0548%" y="437" width="0.0806%" height="15" fill="rgb(209,129,18)" fg:x="646" fg:w="1"/><text x="52.3048%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.0548%" y="421" width="0.0806%" height="15" fill="rgb(224,160,1)" fg:x="646" fg:w="1"/><text x="52.3048%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.0548%" y="405" width="0.0806%" height="15" fill="rgb(237,112,21)" fg:x="646" fg:w="1"/><text x="52.3048%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.0548%" y="389" width="0.0806%" height="15" fill="rgb(215,198,53)" fg:x="646" fg:w="1"/><text x="52.3048%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="51.8936%" y="581" width="0.4029%" height="15" fill="rgb(218,227,35)" fg:x="644" fg:w="5"/><text x="52.1436%" y="591.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="52.1354%" y="565" width="0.1612%" height="15" fill="rgb(232,121,22)" fg:x="647" fg:w="2"/><text x="52.3854%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.2965%" y="501" width="0.1612%" height="15" fill="rgb(235,52,54)" fg:x="649" fg:w="2"/><text x="52.5465%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="52.2965%" y="485" width="0.1612%" height="15" fill="rgb(219,21,44)" fg:x="649" fg:w="2"/><text x="52.5465%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="52.2965%" y="469" width="0.1612%" height="15" fill="rgb(221,51,43)" fg:x="649" fg:w="2"/><text x="52.5465%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="52.2965%" y="453" width="0.1612%" height="15" fill="rgb(225,77,42)" fg:x="649" fg:w="2"/><text x="52.5465%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="52.2965%" y="437" width="0.1612%" height="15" fill="rgb(214,117,53)" fg:x="649" fg:w="2"/><text x="52.5465%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="52.2965%" y="421" width="0.1612%" height="15" fill="rgb(218,227,27)" fg:x="649" fg:w="2"/><text x="52.5465%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.3771%" y="405" width="0.0806%" height="15" fill="rgb(223,214,36)" fg:x="650" fg:w="1"/><text x="52.6271%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="52.2965%" y="581" width="0.2417%" height="15" fill="rgb(235,21,7)" fg:x="649" fg:w="3"/><text x="52.5465%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="52.2965%" y="565" width="0.2417%" height="15" fill="rgb(244,216,4)" fg:x="649" fg:w="3"/><text x="52.5465%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="52.2965%" y="549" width="0.2417%" height="15" fill="rgb(249,197,24)" fg:x="649" fg:w="3"/><text x="52.5465%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="52.2965%" y="533" width="0.2417%" height="15" fill="rgb(222,169,49)" fg:x="649" fg:w="3"/><text x="52.5465%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="52.2965%" y="517" width="0.2417%" height="15" fill="rgb(207,137,33)" fg:x="649" fg:w="3"/><text x="52.5465%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4577%" y="501" width="0.0806%" height="15" fill="rgb(219,180,40)" fg:x="651" fg:w="1"/><text x="52.7077%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.4577%" y="485" width="0.0806%" height="15" fill="rgb(250,163,42)" fg:x="651" fg:w="1"/><text x="52.7077%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (15 samples, 1.21%)</title><rect x="51.5713%" y="597" width="1.2087%" height="15" fill="rgb(239,163,0)" fg:x="640" fg:w="15"/><text x="51.8213%" y="607.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="52.5383%" y="581" width="0.2417%" height="15" fill="rgb(252,38,28)" fg:x="652" fg:w="3"/><text x="52.7883%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7800%" y="517" width="0.0806%" height="15" fill="rgb(254,203,26)" fg:x="655" fg:w="1"/><text x="53.0300%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="52.7800%" y="501" width="0.0806%" height="15" fill="rgb(209,129,32)" fg:x="655" fg:w="1"/><text x="53.0300%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="52.7800%" y="485" width="0.0806%" height="15" fill="rgb(207,177,52)" fg:x="655" fg:w="1"/><text x="53.0300%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="52.7800%" y="469" width="0.0806%" height="15" fill="rgb(230,209,36)" fg:x="655" fg:w="1"/><text x="53.0300%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="52.7800%" y="453" width="0.0806%" height="15" fill="rgb(238,131,0)" fg:x="655" fg:w="1"/><text x="53.0300%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="52.7800%" y="437" width="0.0806%" height="15" fill="rgb(218,61,31)" fg:x="655" fg:w="1"/><text x="53.0300%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.7800%" y="421" width="0.0806%" height="15" fill="rgb(232,6,53)" fg:x="655" fg:w="1"/><text x="53.0300%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.7800%" y="597" width="0.1612%" height="15" fill="rgb(254,100,32)" fg:x="655" fg:w="2"/><text x="53.0300%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="52.7800%" y="581" width="0.1612%" height="15" fill="rgb(229,194,49)" fg:x="655" fg:w="2"/><text x="53.0300%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="52.7800%" y="565" width="0.1612%" height="15" fill="rgb(206,208,39)" fg:x="655" fg:w="2"/><text x="53.0300%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="52.7800%" y="549" width="0.1612%" height="15" fill="rgb(246,226,14)" fg:x="655" fg:w="2"/><text x="53.0300%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="52.7800%" y="533" width="0.1612%" height="15" fill="rgb(226,48,32)" fg:x="655" fg:w="2"/><text x="53.0300%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="52.8606%" y="517" width="0.0806%" height="15" fill="rgb(252,43,54)" fg:x="656" fg:w="1"/><text x="53.1106%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="52.8606%" y="501" width="0.0806%" height="15" fill="rgb(207,124,0)" fg:x="656" fg:w="1"/><text x="53.1106%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (20 samples, 1.61%)</title><rect x="51.4102%" y="613" width="1.6116%" height="15" fill="rgb(248,188,30)" fg:x="638" fg:w="20"/><text x="51.6602%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="52.9412%" y="597" width="0.0806%" height="15" fill="rgb(232,14,43)" fg:x="657" fg:w="1"/><text x="53.1912%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.0218%" y="613" width="0.2417%" height="15" fill="rgb(218,52,29)" fg:x="658" fg:w="3"/><text x="53.2718%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="53.0218%" y="597" width="0.2417%" height="15" fill="rgb(218,176,50)" fg:x="658" fg:w="3"/><text x="53.2718%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="53.0218%" y="581" width="0.2417%" height="15" fill="rgb(213,112,0)" fg:x="658" fg:w="3"/><text x="53.2718%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="53.0218%" y="565" width="0.2417%" height="15" fill="rgb(244,216,8)" fg:x="658" fg:w="3"/><text x="53.2718%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="53.0218%" y="549" width="0.2417%" height="15" fill="rgb(224,148,53)" fg:x="658" fg:w="3"/><text x="53.2718%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="53.0218%" y="533" width="0.2417%" height="15" fill="rgb(241,133,40)" fg:x="658" fg:w="3"/><text x="53.2718%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="53.0218%" y="517" width="0.2417%" height="15" fill="rgb(232,17,44)" fg:x="658" fg:w="3"/><text x="53.2718%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="53.0218%" y="501" width="0.2417%" height="15" fill="rgb(213,32,25)" fg:x="658" fg:w="3"/><text x="53.2718%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="53.0218%" y="485" width="0.2417%" height="15" fill="rgb(249,115,27)" fg:x="658" fg:w="3"/><text x="53.2718%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="53.0218%" y="469" width="0.2417%" height="15" fill="rgb(241,50,1)" fg:x="658" fg:w="3"/><text x="53.2718%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="53.0218%" y="453" width="0.2417%" height="15" fill="rgb(244,175,40)" fg:x="658" fg:w="3"/><text x="53.2718%" y="463.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="53.0218%" y="437" width="0.2417%" height="15" fill="rgb(230,94,34)" fg:x="658" fg:w="3"/><text x="53.2718%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (30 samples, 2.42%)</title><rect x="51.3296%" y="629" width="2.4174%" height="15" fill="rgb(223,185,29)" fg:x="637" fg:w="30"/><text x="51.5796%" y="639.50">&lt;a..</text></g><g><title>__libc_malloc (6 samples, 0.48%)</title><rect x="53.2635%" y="613" width="0.4835%" height="15" fill="rgb(225,193,15)" fg:x="661" fg:w="6"/><text x="53.5135%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="597" width="0.0806%" height="15" fill="rgb(252,121,38)" fg:x="669" fg:w="1"/><text x="54.1581%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="53.9081%" y="581" width="0.0806%" height="15" fill="rgb(232,44,12)" fg:x="669" fg:w="1"/><text x="54.1581%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="53.9081%" y="565" width="0.0806%" height="15" fill="rgb(226,45,54)" fg:x="669" fg:w="1"/><text x="54.1581%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="53.9081%" y="549" width="0.0806%" height="15" fill="rgb(209,67,17)" fg:x="669" fg:w="1"/><text x="54.1581%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="53.9081%" y="533" width="0.0806%" height="15" fill="rgb(219,108,52)" fg:x="669" fg:w="1"/><text x="54.1581%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9081%" y="517" width="0.0806%" height="15" fill="rgb(216,118,19)" fg:x="669" fg:w="1"/><text x="54.1581%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="53.9081%" y="501" width="0.0806%" height="15" fill="rgb(228,120,40)" fg:x="669" fg:w="1"/><text x="54.1581%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.32%)</title><rect x="53.7470%" y="629" width="0.3223%" height="15" fill="rgb(221,218,34)" fg:x="667" fg:w="4"/><text x="53.9970%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="53.9081%" y="613" width="0.1612%" height="15" fill="rgb(235,89,14)" fg:x="669" fg:w="2"/><text x="54.1581%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="53.9887%" y="597" width="0.0806%" height="15" fill="rgb(248,89,7)" fg:x="670" fg:w="1"/><text x="54.2387%" y="607.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (40 samples, 3.22%)</title><rect x="51.1684%" y="645" width="3.2232%" height="15" fill="rgb(212,114,34)" fg:x="635" fg:w="40"/><text x="51.4184%" y="655.50">&lt;al..</text></g><g><title>__libc_malloc (4 samples, 0.32%)</title><rect x="54.0693%" y="629" width="0.3223%" height="15" fill="rgb(246,88,32)" fg:x="671" fg:w="4"/><text x="54.3193%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.3916%" y="565" width="0.1612%" height="15" fill="rgb(237,135,0)" fg:x="675" fg:w="2"/><text x="54.6416%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="54.3916%" y="549" width="0.1612%" height="15" fill="rgb(220,201,54)" fg:x="675" fg:w="2"/><text x="54.6416%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="54.3916%" y="533" width="0.1612%" height="15" fill="rgb(210,142,36)" fg:x="675" fg:w="2"/><text x="54.6416%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="54.3916%" y="517" width="0.1612%" height="15" fill="rgb(247,189,26)" fg:x="675" fg:w="2"/><text x="54.6416%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="54.3916%" y="501" width="0.1612%" height="15" fill="rgb(223,89,24)" fg:x="675" fg:w="2"/><text x="54.6416%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="54.3916%" y="485" width="0.1612%" height="15" fill="rgb(205,90,19)" fg:x="675" fg:w="2"/><text x="54.6416%" y="495.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="54.3916%" y="469" width="0.1612%" height="15" fill="rgb(234,57,40)" fg:x="675" fg:w="2"/><text x="54.6416%" y="479.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (49 samples, 3.95%)</title><rect x="50.8461%" y="677" width="3.9484%" height="15" fill="rgb(213,109,10)" fg:x="631" fg:w="49"/><text x="51.0961%" y="687.50">engi..</text></g><g><title>kernel::model::scopes::Scopes::modified (47 samples, 3.79%)</title><rect x="51.0073%" y="661" width="3.7873%" height="15" fill="rgb(214,189,23)" fg:x="633" fg:w="47"/><text x="51.2573%" y="671.50">kern..</text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="54.3916%" y="645" width="0.4029%" height="15" fill="rgb(234,200,10)" fg:x="675" fg:w="5"/><text x="54.6416%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="54.3916%" y="629" width="0.4029%" height="15" fill="rgb(221,148,16)" fg:x="675" fg:w="5"/><text x="54.6416%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.40%)</title><rect x="54.3916%" y="613" width="0.4029%" height="15" fill="rgb(230,115,10)" fg:x="675" fg:w="5"/><text x="54.6416%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.40%)</title><rect x="54.3916%" y="597" width="0.4029%" height="15" fill="rgb(220,106,42)" fg:x="675" fg:w="5"/><text x="54.6416%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.40%)</title><rect x="54.3916%" y="581" width="0.4029%" height="15" fill="rgb(225,105,39)" fg:x="675" fg:w="5"/><text x="54.6416%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.24%)</title><rect x="54.5528%" y="565" width="0.2417%" height="15" fill="rgb(211,161,38)" fg:x="677" fg:w="3"/><text x="54.8028%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.24%)</title><rect x="54.5528%" y="549" width="0.2417%" height="15" fill="rgb(213,23,19)" fg:x="677" fg:w="3"/><text x="54.8028%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="54.8751%" y="645" width="0.0806%" height="15" fill="rgb(240,2,33)" fg:x="681" fg:w="1"/><text x="55.1251%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="55.1974%" y="533" width="0.0806%" height="15" fill="rgb(221,29,45)" fg:x="685" fg:w="1"/><text x="55.4474%" y="543.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="55.1974%" y="517" width="0.0806%" height="15" fill="rgb(242,10,19)" fg:x="685" fg:w="1"/><text x="55.4474%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="55.1974%" y="501" width="0.0806%" height="15" fill="rgb(250,84,37)" fg:x="685" fg:w="1"/><text x="55.4474%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.1974%" y="485" width="0.0806%" height="15" fill="rgb(214,136,7)" fg:x="685" fg:w="1"/><text x="55.4474%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.1974%" y="469" width="0.0806%" height="15" fill="rgb(231,189,12)" fg:x="685" fg:w="1"/><text x="55.4474%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.1974%" y="453" width="0.0806%" height="15" fill="rgb(244,40,16)" fg:x="685" fg:w="1"/><text x="55.4474%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.1974%" y="437" width="0.0806%" height="15" fill="rgb(217,29,15)" fg:x="685" fg:w="1"/><text x="55.4474%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="55.1974%" y="421" width="0.0806%" height="15" fill="rgb(235,172,33)" fg:x="685" fg:w="1"/><text x="55.4474%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.1974%" y="405" width="0.0806%" height="15" fill="rgb(206,148,28)" fg:x="685" fg:w="1"/><text x="55.4474%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.1974%" y="389" width="0.0806%" height="15" fill="rgb(251,167,37)" fg:x="685" fg:w="1"/><text x="55.4474%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.1974%" y="373" width="0.0806%" height="15" fill="rgb(229,94,52)" fg:x="685" fg:w="1"/><text x="55.4474%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4392%" y="485" width="0.0806%" height="15" fill="rgb(216,132,9)" fg:x="688" fg:w="1"/><text x="55.6892%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4392%" y="469" width="0.0806%" height="15" fill="rgb(208,110,29)" fg:x="688" fg:w="1"/><text x="55.6892%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="55.4392%" y="453" width="0.0806%" height="15" fill="rgb(241,23,8)" fg:x="688" fg:w="1"/><text x="55.6892%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4392%" y="437" width="0.0806%" height="15" fill="rgb(208,26,35)" fg:x="688" fg:w="1"/><text x="55.6892%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="55.4392%" y="421" width="0.0806%" height="15" fill="rgb(242,165,34)" fg:x="688" fg:w="1"/><text x="55.6892%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="55.4392%" y="405" width="0.0806%" height="15" fill="rgb(222,222,33)" fg:x="688" fg:w="1"/><text x="55.6892%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="55.4392%" y="389" width="0.0806%" height="15" fill="rgb(227,16,52)" fg:x="688" fg:w="1"/><text x="55.6892%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="55.4392%" y="373" width="0.0806%" height="15" fill="rgb(213,93,12)" fg:x="688" fg:w="1"/><text x="55.6892%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4392%" y="357" width="0.0806%" height="15" fill="rgb(238,41,5)" fg:x="688" fg:w="1"/><text x="55.6892%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="55.4392%" y="341" width="0.0806%" height="15" fill="rgb(211,60,15)" fg:x="688" fg:w="1"/><text x="55.6892%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="55.4392%" y="325" width="0.0806%" height="15" fill="rgb(209,11,34)" fg:x="688" fg:w="1"/><text x="55.6892%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="55.4392%" y="309" width="0.0806%" height="15" fill="rgb(254,155,53)" fg:x="688" fg:w="1"/><text x="55.6892%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="55.4392%" y="293" width="0.0806%" height="15" fill="rgb(236,174,8)" fg:x="688" fg:w="1"/><text x="55.6892%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="55.4392%" y="277" width="0.0806%" height="15" fill="rgb(229,31,27)" fg:x="688" fg:w="1"/><text x="55.6892%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="55.4392%" y="261" width="0.0806%" height="15" fill="rgb(242,226,26)" fg:x="688" fg:w="1"/><text x="55.6892%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5197%" y="389" width="0.0806%" height="15" fill="rgb(234,32,40)" fg:x="689" fg:w="1"/><text x="55.7697%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.5197%" y="373" width="0.0806%" height="15" fill="rgb(249,226,47)" fg:x="689" fg:w="1"/><text x="55.7697%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (6 samples, 0.48%)</title><rect x="55.1974%" y="565" width="0.4835%" height="15" fill="rgb(212,6,26)" fg:x="685" fg:w="6"/><text x="55.4474%" y="575.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="55.1974%" y="549" width="0.4835%" height="15" fill="rgb(249,202,29)" fg:x="685" fg:w="6"/><text x="55.4474%" y="559.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="55.2780%" y="533" width="0.4029%" height="15" fill="rgb(226,106,4)" fg:x="686" fg:w="5"/><text x="55.5280%" y="543.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="55.3586%" y="517" width="0.3223%" height="15" fill="rgb(251,2,27)" fg:x="687" fg:w="4"/><text x="55.6086%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="55.3586%" y="501" width="0.3223%" height="15" fill="rgb(236,208,0)" fg:x="687" fg:w="4"/><text x="55.6086%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.5197%" y="485" width="0.1612%" height="15" fill="rgb(211,66,17)" fg:x="689" fg:w="2"/><text x="55.7697%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5197%" y="469" width="0.1612%" height="15" fill="rgb(216,129,9)" fg:x="689" fg:w="2"/><text x="55.7697%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.5197%" y="453" width="0.1612%" height="15" fill="rgb(215,130,23)" fg:x="689" fg:w="2"/><text x="55.7697%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5197%" y="437" width="0.1612%" height="15" fill="rgb(253,157,11)" fg:x="689" fg:w="2"/><text x="55.7697%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.5197%" y="421" width="0.1612%" height="15" fill="rgb(224,25,14)" fg:x="689" fg:w="2"/><text x="55.7697%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.5197%" y="405" width="0.1612%" height="15" fill="rgb(238,16,7)" fg:x="689" fg:w="2"/><text x="55.7697%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.6003%" y="389" width="0.0806%" height="15" fill="rgb(228,74,11)" fg:x="690" fg:w="1"/><text x="55.8503%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.6003%" y="373" width="0.0806%" height="15" fill="rgb(239,221,27)" fg:x="690" fg:w="1"/><text x="55.8503%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="55.6003%" y="357" width="0.0806%" height="15" fill="rgb(229,166,18)" fg:x="690" fg:w="1"/><text x="55.8503%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.6003%" y="341" width="0.0806%" height="15" fill="rgb(254,94,46)" fg:x="690" fg:w="1"/><text x="55.8503%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="55.6003%" y="325" width="0.0806%" height="15" fill="rgb(241,79,19)" fg:x="690" fg:w="1"/><text x="55.8503%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="55.6809%" y="565" width="0.1612%" height="15" fill="rgb(228,99,51)" fg:x="691" fg:w="2"/><text x="55.9309%" y="575.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="55.6809%" y="549" width="0.1612%" height="15" fill="rgb(211,15,6)" fg:x="691" fg:w="2"/><text x="55.9309%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="55.6809%" y="533" width="0.1612%" height="15" fill="rgb(245,107,54)" fg:x="691" fg:w="2"/><text x="55.9309%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.6809%" y="517" width="0.1612%" height="15" fill="rgb(243,3,2)" fg:x="691" fg:w="2"/><text x="55.9309%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6809%" y="501" width="0.1612%" height="15" fill="rgb(206,122,10)" fg:x="691" fg:w="2"/><text x="55.9309%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="55.6809%" y="485" width="0.1612%" height="15" fill="rgb(224,88,4)" fg:x="691" fg:w="2"/><text x="55.9309%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6809%" y="469" width="0.1612%" height="15" fill="rgb(230,1,41)" fg:x="691" fg:w="2"/><text x="55.9309%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="55.6809%" y="453" width="0.1612%" height="15" fill="rgb(230,1,31)" fg:x="691" fg:w="2"/><text x="55.9309%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="55.6809%" y="437" width="0.1612%" height="15" fill="rgb(232,67,19)" fg:x="691" fg:w="2"/><text x="55.9309%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="55.7615%" y="421" width="0.0806%" height="15" fill="rgb(222,206,20)" fg:x="692" fg:w="1"/><text x="56.0115%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="55.7615%" y="405" width="0.0806%" height="15" fill="rgb(217,225,19)" fg:x="692" fg:w="1"/><text x="56.0115%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="55.7615%" y="389" width="0.0806%" height="15" fill="rgb(234,13,33)" fg:x="692" fg:w="1"/><text x="56.0115%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.7615%" y="373" width="0.0806%" height="15" fill="rgb(254,5,1)" fg:x="692" fg:w="1"/><text x="56.0115%" y="383.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.8421%" y="437" width="0.0806%" height="15" fill="rgb(211,121,41)" fg:x="693" fg:w="1"/><text x="56.0921%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.8421%" y="421" width="0.0806%" height="15" fill="rgb(213,199,35)" fg:x="693" fg:w="1"/><text x="56.0921%" y="431.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="55.8421%" y="405" width="0.0806%" height="15" fill="rgb(240,118,22)" fg:x="693" fg:w="1"/><text x="56.0921%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.8421%" y="389" width="0.0806%" height="15" fill="rgb(238,184,25)" fg:x="693" fg:w="1"/><text x="56.0921%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="55.8421%" y="373" width="0.0806%" height="15" fill="rgb(210,165,6)" fg:x="693" fg:w="1"/><text x="56.0921%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="55.8421%" y="357" width="0.0806%" height="15" fill="rgb(235,149,5)" fg:x="693" fg:w="1"/><text x="56.0921%" y="367.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="55.8421%" y="341" width="0.0806%" height="15" fill="rgb(221,63,5)" fg:x="693" fg:w="1"/><text x="56.0921%" y="351.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="55.9226%" y="405" width="0.0806%" height="15" fill="rgb(250,44,41)" fg:x="694" fg:w="1"/><text x="56.1726%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="55.9226%" y="437" width="0.1612%" height="15" fill="rgb(235,112,47)" fg:x="694" fg:w="2"/><text x="56.1726%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="55.9226%" y="421" width="0.1612%" height="15" fill="rgb(252,176,34)" fg:x="694" fg:w="2"/><text x="56.1726%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="56.0032%" y="405" width="0.0806%" height="15" fill="rgb(234,50,19)" fg:x="695" fg:w="1"/><text x="56.2532%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (5 samples, 0.40%)</title><rect x="55.8421%" y="485" width="0.4029%" height="15" fill="rgb(241,195,31)" fg:x="693" fg:w="5"/><text x="56.0921%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="55.8421%" y="469" width="0.4029%" height="15" fill="rgb(212,93,11)" fg:x="693" fg:w="5"/><text x="56.0921%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (5 samples, 0.40%)</title><rect x="55.8421%" y="453" width="0.4029%" height="15" fill="rgb(254,98,51)" fg:x="693" fg:w="5"/><text x="56.0921%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0838%" y="437" width="0.1612%" height="15" fill="rgb(246,18,45)" fg:x="696" fg:w="2"/><text x="56.3338%" y="447.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.0838%" y="421" width="0.1612%" height="15" fill="rgb(215,148,23)" fg:x="696" fg:w="2"/><text x="56.3338%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.0838%" y="405" width="0.1612%" height="15" fill="rgb(227,22,7)" fg:x="696" fg:w="2"/><text x="56.3338%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0838%" y="389" width="0.1612%" height="15" fill="rgb(207,210,37)" fg:x="696" fg:w="2"/><text x="56.3338%" y="399.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.0838%" y="373" width="0.1612%" height="15" fill="rgb(247,147,42)" fg:x="696" fg:w="2"/><text x="56.3338%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.0838%" y="357" width="0.1612%" height="15" fill="rgb(226,213,14)" fg:x="696" fg:w="2"/><text x="56.3338%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0838%" y="341" width="0.1612%" height="15" fill="rgb(223,18,10)" fg:x="696" fg:w="2"/><text x="56.3338%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.0838%" y="325" width="0.1612%" height="15" fill="rgb(253,34,22)" fg:x="696" fg:w="2"/><text x="56.3338%" y="335.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="56.0838%" y="309" width="0.1612%" height="15" fill="rgb(222,90,31)" fg:x="696" fg:w="2"/><text x="56.3338%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="56.0838%" y="293" width="0.1612%" height="15" fill="rgb(220,182,30)" fg:x="696" fg:w="2"/><text x="56.3338%" y="303.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="56.0838%" y="277" width="0.1612%" height="15" fill="rgb(229,170,12)" fg:x="696" fg:w="2"/><text x="56.3338%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.1644%" y="261" width="0.0806%" height="15" fill="rgb(210,101,21)" fg:x="697" fg:w="1"/><text x="56.4144%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.1644%" y="245" width="0.0806%" height="15" fill="rgb(237,177,31)" fg:x="697" fg:w="1"/><text x="56.4144%" y="255.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.1644%" y="229" width="0.0806%" height="15" fill="rgb(215,91,34)" fg:x="697" fg:w="1"/><text x="56.4144%" y="239.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="56.1644%" y="213" width="0.0806%" height="15" fill="rgb(229,206,16)" fg:x="697" fg:w="1"/><text x="56.4144%" y="223.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="56.1644%" y="197" width="0.0806%" height="15" fill="rgb(235,207,10)" fg:x="697" fg:w="1"/><text x="56.4144%" y="207.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (6 samples, 0.48%)</title><rect x="55.8421%" y="549" width="0.4835%" height="15" fill="rgb(247,18,10)" fg:x="693" fg:w="6"/><text x="56.0921%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (6 samples, 0.48%)</title><rect x="55.8421%" y="533" width="0.4835%" height="15" fill="rgb(232,4,6)" fg:x="693" fg:w="6"/><text x="56.0921%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="55.8421%" y="517" width="0.4835%" height="15" fill="rgb(247,93,45)" fg:x="693" fg:w="6"/><text x="56.0921%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="55.8421%" y="501" width="0.4835%" height="15" fill="rgb(240,181,18)" fg:x="693" fg:w="6"/><text x="56.0921%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="56.2450%" y="485" width="0.0806%" height="15" fill="rgb(208,224,0)" fg:x="698" fg:w="1"/><text x="56.4950%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="56.2450%" y="469" width="0.0806%" height="15" fill="rgb(224,207,54)" fg:x="698" fg:w="1"/><text x="56.4950%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="56.2450%" y="453" width="0.0806%" height="15" fill="rgb(217,152,29)" fg:x="698" fg:w="1"/><text x="56.4950%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.4061%" y="501" width="0.0806%" height="15" fill="rgb(243,78,27)" fg:x="700" fg:w="1"/><text x="56.6561%" y="511.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="56.4867%" y="405" width="0.0806%" height="15" fill="rgb(228,111,9)" fg:x="701" fg:w="1"/><text x="56.7367%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5673%" y="405" width="0.0806%" height="15" fill="rgb(230,213,21)" fg:x="702" fg:w="1"/><text x="56.8173%" y="415.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.5673%" y="389" width="0.0806%" height="15" fill="rgb(248,50,36)" fg:x="702" fg:w="1"/><text x="56.8173%" y="399.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="56.5673%" y="373" width="0.0806%" height="15" fill="rgb(226,19,31)" fg:x="702" fg:w="1"/><text x="56.8173%" y="383.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="56.5673%" y="357" width="0.0806%" height="15" fill="rgb(205,132,21)" fg:x="702" fg:w="1"/><text x="56.8173%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="56.4867%" y="421" width="0.2417%" height="15" fill="rgb(207,42,19)" fg:x="701" fg:w="3"/><text x="56.7367%" y="431.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.6479%" y="405" width="0.0806%" height="15" fill="rgb(229,69,35)" fg:x="703" fg:w="1"/><text x="56.8979%" y="415.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.6479%" y="389" width="0.0806%" height="15" fill="rgb(226,96,11)" fg:x="703" fg:w="1"/><text x="56.8979%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.6479%" y="373" width="0.0806%" height="15" fill="rgb(236,133,54)" fg:x="703" fg:w="1"/><text x="56.8979%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.6479%" y="357" width="0.0806%" height="15" fill="rgb(247,166,21)" fg:x="703" fg:w="1"/><text x="56.8979%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.6479%" y="341" width="0.0806%" height="15" fill="rgb(220,132,12)" fg:x="703" fg:w="1"/><text x="56.8979%" y="351.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="56.6479%" y="325" width="0.0806%" height="15" fill="rgb(233,27,30)" fg:x="703" fg:w="1"/><text x="56.8979%" y="335.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (22 samples, 1.77%)</title><rect x="55.0363%" y="613" width="1.7728%" height="15" fill="rgb(246,161,27)" fg:x="683" fg:w="22"/><text x="55.2863%" y="623.50">&lt;..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="55.1168%" y="597" width="1.6922%" height="15" fill="rgb(240,56,3)" fg:x="684" fg:w="21"/><text x="55.3668%" y="607.50"></text></g><g><title>engine::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="55.1974%" y="581" width="1.6116%" height="15" fill="rgb(242,190,9)" fg:x="685" fg:w="20"/><text x="55.4474%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (12 samples, 0.97%)</title><rect x="55.8421%" y="565" width="0.9670%" height="15" fill="rgb(234,3,52)" fg:x="693" fg:w="12"/><text x="56.0921%" y="575.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="56.3255%" y="549" width="0.4835%" height="15" fill="rgb(220,221,19)" fg:x="699" fg:w="6"/><text x="56.5755%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="56.3255%" y="533" width="0.4835%" height="15" fill="rgb(247,178,30)" fg:x="699" fg:w="6"/><text x="56.5755%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="56.3255%" y="517" width="0.4835%" height="15" fill="rgb(234,212,27)" fg:x="699" fg:w="6"/><text x="56.5755%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="56.4867%" y="501" width="0.3223%" height="15" fill="rgb(226,199,38)" fg:x="701" fg:w="4"/><text x="56.7367%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.4867%" y="485" width="0.3223%" height="15" fill="rgb(248,114,22)" fg:x="701" fg:w="4"/><text x="56.7367%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="56.4867%" y="469" width="0.3223%" height="15" fill="rgb(221,180,4)" fg:x="701" fg:w="4"/><text x="56.7367%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="56.4867%" y="453" width="0.3223%" height="15" fill="rgb(220,229,24)" fg:x="701" fg:w="4"/><text x="56.7367%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="56.4867%" y="437" width="0.3223%" height="15" fill="rgb(226,184,27)" fg:x="701" fg:w="4"/><text x="56.7367%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="56.7284%" y="421" width="0.0806%" height="15" fill="rgb(232,99,15)" fg:x="704" fg:w="1"/><text x="56.9784%" y="431.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="56.7284%" y="405" width="0.0806%" height="15" fill="rgb(250,167,16)" fg:x="704" fg:w="1"/><text x="56.9784%" y="415.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="56.7284%" y="389" width="0.0806%" height="15" fill="rgb(243,113,6)" fg:x="704" fg:w="1"/><text x="56.9784%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="56.8090%" y="581" width="0.0806%" height="15" fill="rgb(244,147,52)" fg:x="705" fg:w="1"/><text x="57.0590%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8090%" y="565" width="0.0806%" height="15" fill="rgb(235,59,50)" fg:x="705" fg:w="1"/><text x="57.0590%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="56.8090%" y="549" width="0.0806%" height="15" fill="rgb(250,188,6)" fg:x="705" fg:w="1"/><text x="57.0590%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="56.8090%" y="533" width="0.0806%" height="15" fill="rgb(236,173,11)" fg:x="705" fg:w="1"/><text x="57.0590%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="56.8090%" y="517" width="0.0806%" height="15" fill="rgb(233,64,3)" fg:x="705" fg:w="1"/><text x="57.0590%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="56.8090%" y="501" width="0.0806%" height="15" fill="rgb(207,92,7)" fg:x="705" fg:w="1"/><text x="57.0590%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="56.8090%" y="485" width="0.0806%" height="15" fill="rgb(221,30,19)" fg:x="705" fg:w="1"/><text x="57.0590%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="56.8090%" y="469" width="0.0806%" height="15" fill="rgb(245,22,49)" fg:x="705" fg:w="1"/><text x="57.0590%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="56.8090%" y="613" width="0.1612%" height="15" fill="rgb(218,39,20)" fg:x="705" fg:w="2"/><text x="57.0590%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="56.8090%" y="597" width="0.1612%" height="15" fill="rgb(222,144,21)" fg:x="705" fg:w="2"/><text x="57.0590%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="56.8896%" y="581" width="0.0806%" height="15" fill="rgb(222,78,51)" fg:x="706" fg:w="1"/><text x="57.1396%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="56.9702%" y="613" width="0.0806%" height="15" fill="rgb(248,213,53)" fg:x="707" fg:w="1"/><text x="57.2202%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="56.9702%" y="597" width="0.0806%" height="15" fill="rgb(245,28,34)" fg:x="707" fg:w="1"/><text x="57.2202%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="57.0508%" y="613" width="0.1612%" height="15" fill="rgb(229,186,26)" fg:x="708" fg:w="2"/><text x="57.3008%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.2119%" y="581" width="0.0806%" height="15" fill="rgb(224,0,41)" fg:x="710" fg:w="1"/><text x="57.4619%" y="591.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (31 samples, 2.50%)</title><rect x="54.8751%" y="661" width="2.4980%" height="15" fill="rgb(223,136,51)" fg:x="681" fg:w="31"/><text x="55.1251%" y="671.50">&lt;p..</text></g><g><title>kernel::model::entry::Entry::scope (30 samples, 2.42%)</title><rect x="54.9557%" y="645" width="2.4174%" height="15" fill="rgb(234,50,9)" fg:x="682" fg:w="30"/><text x="55.2057%" y="655.50">ke..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (30 samples, 2.42%)</title><rect x="54.9557%" y="629" width="2.4174%" height="15" fill="rgb(242,164,20)" fg:x="682" fg:w="30"/><text x="55.2057%" y="639.50">ke..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="57.2119%" y="613" width="0.1612%" height="15" fill="rgb(230,169,22)" fg:x="710" fg:w="2"/><text x="57.4619%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="57.2119%" y="597" width="0.1612%" height="15" fill="rgb(228,82,26)" fg:x="710" fg:w="2"/><text x="57.4619%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="57.2925%" y="581" width="0.0806%" height="15" fill="rgb(244,220,31)" fg:x="711" fg:w="1"/><text x="57.5425%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="57.2925%" y="565" width="0.0806%" height="15" fill="rgb(214,35,25)" fg:x="711" fg:w="1"/><text x="57.5425%" y="575.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="57.3731%" y="629" width="0.0806%" height="15" fill="rgb(245,162,54)" fg:x="712" fg:w="1"/><text x="57.6231%" y="639.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="57.3731%" y="613" width="0.0806%" height="15" fill="rgb(210,43,24)" fg:x="712" fg:w="1"/><text x="57.6231%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="57.3731%" y="645" width="0.1612%" height="15" fill="rgb(226,145,51)" fg:x="712" fg:w="2"/><text x="57.6231%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="57.4537%" y="629" width="0.0806%" height="15" fill="rgb(237,52,53)" fg:x="713" fg:w="1"/><text x="57.7037%" y="639.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (35 samples, 2.82%)</title><rect x="54.7945%" y="677" width="2.8203%" height="15" fill="rgb(216,226,7)" fg:x="680" fg:w="35"/><text x="55.0445%" y="687.50">en..</text></g><g><title>engine::session::Session::world (3 samples, 0.24%)</title><rect x="57.3731%" y="661" width="0.2417%" height="15" fill="rgb(206,223,18)" fg:x="712" fg:w="3"/><text x="57.6231%" y="671.50"></text></g><g><title>&lt;kernel::model::base::EntityKey as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.08%)</title><rect x="57.5342%" y="645" width="0.0806%" height="15" fill="rgb(221,1,10)" fg:x="714" fg:w="1"/><text x="57.7842%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="57.5342%" y="629" width="0.0806%" height="15" fill="rgb(221,151,42)" fg:x="714" fg:w="1"/><text x="57.7842%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.8566%" y="501" width="0.0806%" height="15" fill="rgb(205,183,46)" fg:x="718" fg:w="1"/><text x="58.1066%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="57.8566%" y="517" width="0.1612%" height="15" fill="rgb(239,229,1)" fg:x="718" fg:w="2"/><text x="58.1066%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="57.9371%" y="501" width="0.0806%" height="15" fill="rgb(236,192,23)" fg:x="719" fg:w="1"/><text x="58.1871%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="57.9371%" y="485" width="0.0806%" height="15" fill="rgb(215,146,3)" fg:x="719" fg:w="1"/><text x="58.1871%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.0177%" y="501" width="0.2417%" height="15" fill="rgb(235,52,27)" fg:x="720" fg:w="3"/><text x="58.2677%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.0177%" y="485" width="0.2417%" height="15" fill="rgb(236,45,20)" fg:x="720" fg:w="3"/><text x="58.2677%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="58.0177%" y="469" width="0.2417%" height="15" fill="rgb(235,86,41)" fg:x="720" fg:w="3"/><text x="58.2677%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="58.0983%" y="453" width="0.1612%" height="15" fill="rgb(235,27,27)" fg:x="721" fg:w="2"/><text x="58.3483%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="58.0983%" y="437" width="0.1612%" height="15" fill="rgb(232,4,34)" fg:x="721" fg:w="2"/><text x="58.3483%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="58.0983%" y="421" width="0.1612%" height="15" fill="rgb(215,22,10)" fg:x="721" fg:w="2"/><text x="58.3483%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="58.0983%" y="405" width="0.1612%" height="15" fill="rgb(230,228,27)" fg:x="721" fg:w="2"/><text x="58.3483%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.0983%" y="389" width="0.1612%" height="15" fill="rgb(216,26,51)" fg:x="721" fg:w="2"/><text x="58.3483%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="58.0983%" y="373" width="0.1612%" height="15" fill="rgb(225,180,50)" fg:x="721" fg:w="2"/><text x="58.3483%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="58.0983%" y="357" width="0.1612%" height="15" fill="rgb(236,211,2)" fg:x="721" fg:w="2"/><text x="58.3483%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="58.0983%" y="341" width="0.1612%" height="15" fill="rgb(250,51,20)" fg:x="721" fg:w="2"/><text x="58.3483%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="58.0983%" y="325" width="0.1612%" height="15" fill="rgb(232,70,37)" fg:x="721" fg:w="2"/><text x="58.3483%" y="335.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="58.0983%" y="309" width="0.1612%" height="15" fill="rgb(226,183,39)" fg:x="721" fg:w="2"/><text x="58.3483%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="58.1789%" y="293" width="0.0806%" height="15" fill="rgb(232,228,21)" fg:x="722" fg:w="1"/><text x="58.4289%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.56%)</title><rect x="58.2595%" y="501" width="0.5641%" height="15" fill="rgb(251,118,32)" fg:x="723" fg:w="7"/><text x="58.5095%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.56%)</title><rect x="58.2595%" y="485" width="0.5641%" height="15" fill="rgb(235,172,38)" fg:x="723" fg:w="7"/><text x="58.5095%" y="495.50"></text></g><g><title>realloc (7 samples, 0.56%)</title><rect x="58.2595%" y="469" width="0.5641%" height="15" fill="rgb(235,63,18)" fg:x="723" fg:w="7"/><text x="58.5095%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="58.8235%" y="485" width="0.1612%" height="15" fill="rgb(225,4,7)" fg:x="730" fg:w="2"/><text x="59.0735%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="58.9041%" y="469" width="0.0806%" height="15" fill="rgb(231,61,1)" fg:x="731" fg:w="1"/><text x="59.1541%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="58.9041%" y="453" width="0.0806%" height="15" fill="rgb(241,155,22)" fg:x="731" fg:w="1"/><text x="59.1541%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="58.9041%" y="437" width="0.0806%" height="15" fill="rgb(209,100,26)" fg:x="731" fg:w="1"/><text x="59.1541%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="58.9041%" y="421" width="0.0806%" height="15" fill="rgb(248,181,15)" fg:x="731" fg:w="1"/><text x="59.1541%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="58.9041%" y="405" width="0.0806%" height="15" fill="rgb(214,94,31)" fg:x="731" fg:w="1"/><text x="59.1541%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="58.9847%" y="469" width="0.0806%" height="15" fill="rgb(207,16,42)" fg:x="732" fg:w="1"/><text x="59.2347%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (2 samples, 0.16%)</title><rect x="58.9847%" y="485" width="0.1612%" height="15" fill="rgb(208,127,13)" fg:x="732" fg:w="2"/><text x="59.2347%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="59.0653%" y="469" width="0.0806%" height="15" fill="rgb(220,211,18)" fg:x="733" fg:w="1"/><text x="59.3153%" y="479.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="453" width="0.0806%" height="15" fill="rgb(221,55,38)" fg:x="734" fg:w="1"/><text x="59.3959%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1459%" y="437" width="0.0806%" height="15" fill="rgb(252,219,45)" fg:x="734" fg:w="1"/><text x="59.3959%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="421" width="0.0806%" height="15" fill="rgb(248,53,35)" fg:x="734" fg:w="1"/><text x="59.3959%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.1459%" y="405" width="0.0806%" height="15" fill="rgb(210,87,2)" fg:x="734" fg:w="1"/><text x="59.3959%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="389" width="0.0806%" height="15" fill="rgb(239,133,9)" fg:x="734" fg:w="1"/><text x="59.3959%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="59.1459%" y="373" width="0.0806%" height="15" fill="rgb(214,114,5)" fg:x="734" fg:w="1"/><text x="59.3959%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="59.1459%" y="357" width="0.0806%" height="15" fill="rgb(206,124,24)" fg:x="734" fg:w="1"/><text x="59.3959%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="59.1459%" y="341" width="0.0806%" height="15" fill="rgb(212,57,33)" fg:x="734" fg:w="1"/><text x="59.3959%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="59.1459%" y="325" width="0.0806%" height="15" fill="rgb(246,21,20)" fg:x="734" fg:w="1"/><text x="59.3959%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.1459%" y="309" width="0.0806%" height="15" fill="rgb(253,210,39)" fg:x="734" fg:w="1"/><text x="59.3959%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="59.1459%" y="293" width="0.0806%" height="15" fill="rgb(209,187,24)" fg:x="734" fg:w="1"/><text x="59.3959%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="59.1459%" y="277" width="0.0806%" height="15" fill="rgb(246,136,17)" fg:x="734" fg:w="1"/><text x="59.3959%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="59.1459%" y="261" width="0.0806%" height="15" fill="rgb(211,0,30)" fg:x="734" fg:w="1"/><text x="59.3959%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="59.1459%" y="245" width="0.0806%" height="15" fill="rgb(216,199,7)" fg:x="734" fg:w="1"/><text x="59.3959%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="59.1459%" y="229" width="0.0806%" height="15" fill="rgb(207,210,19)" fg:x="734" fg:w="1"/><text x="59.3959%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.1459%" y="213" width="0.0806%" height="15" fill="rgb(237,187,39)" fg:x="734" fg:w="1"/><text x="59.3959%" y="223.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (3 samples, 0.24%)</title><rect x="59.2264%" y="357" width="0.2417%" height="15" fill="rgb(243,194,42)" fg:x="735" fg:w="3"/><text x="59.4764%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.3070%" y="341" width="0.1612%" height="15" fill="rgb(225,194,19)" fg:x="736" fg:w="2"/><text x="59.5570%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="59.3070%" y="325" width="0.1612%" height="15" fill="rgb(224,192,14)" fg:x="736" fg:w="2"/><text x="59.5570%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="59.3070%" y="309" width="0.1612%" height="15" fill="rgb(252,21,18)" fg:x="736" fg:w="2"/><text x="59.5570%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="59.3070%" y="293" width="0.1612%" height="15" fill="rgb(229,69,19)" fg:x="736" fg:w="2"/><text x="59.5570%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="59.3070%" y="277" width="0.1612%" height="15" fill="rgb(251,31,53)" fg:x="736" fg:w="2"/><text x="59.5570%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.3070%" y="261" width="0.1612%" height="15" fill="rgb(218,39,50)" fg:x="736" fg:w="2"/><text x="59.5570%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="59.3070%" y="245" width="0.1612%" height="15" fill="rgb(231,50,17)" fg:x="736" fg:w="2"/><text x="59.5570%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="59.3070%" y="229" width="0.1612%" height="15" fill="rgb(223,217,31)" fg:x="736" fg:w="2"/><text x="59.5570%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="59.3070%" y="213" width="0.1612%" height="15" fill="rgb(225,91,12)" fg:x="736" fg:w="2"/><text x="59.5570%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="59.3070%" y="197" width="0.1612%" height="15" fill="rgb(242,58,43)" fg:x="736" fg:w="2"/><text x="59.5570%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="59.3070%" y="181" width="0.1612%" height="15" fill="rgb(242,32,21)" fg:x="736" fg:w="2"/><text x="59.5570%" y="191.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="59.3070%" y="165" width="0.1612%" height="15" fill="rgb(211,127,1)" fg:x="736" fg:w="2"/><text x="59.5570%" y="175.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="59.4682%" y="309" width="0.0806%" height="15" fill="rgb(231,93,13)" fg:x="738" fg:w="1"/><text x="59.7182%" y="319.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="59.4682%" y="293" width="0.0806%" height="15" fill="rgb(218,83,4)" fg:x="738" fg:w="1"/><text x="59.7182%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="59.4682%" y="277" width="0.0806%" height="15" fill="rgb(230,218,10)" fg:x="738" fg:w="1"/><text x="59.7182%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4682%" y="261" width="0.0806%" height="15" fill="rgb(235,127,18)" fg:x="738" fg:w="1"/><text x="59.7182%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4682%" y="245" width="0.0806%" height="15" fill="rgb(213,137,46)" fg:x="738" fg:w="1"/><text x="59.7182%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4682%" y="229" width="0.0806%" height="15" fill="rgb(235,179,24)" fg:x="738" fg:w="1"/><text x="59.7182%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4682%" y="213" width="0.0806%" height="15" fill="rgb(247,58,49)" fg:x="738" fg:w="1"/><text x="59.7182%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="59.4682%" y="197" width="0.0806%" height="15" fill="rgb(242,222,5)" fg:x="738" fg:w="1"/><text x="59.7182%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="59.4682%" y="181" width="0.0806%" height="15" fill="rgb(230,16,48)" fg:x="738" fg:w="1"/><text x="59.7182%" y="191.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="59.5488%" y="293" width="0.0806%" height="15" fill="rgb(241,192,16)" fg:x="739" fg:w="1"/><text x="59.7988%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.5488%" y="277" width="0.0806%" height="15" fill="rgb(209,25,37)" fg:x="739" fg:w="1"/><text x="59.7988%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="59.6293%" y="165" width="0.0806%" height="15" fill="rgb(229,215,13)" fg:x="740" fg:w="1"/><text x="59.8793%" y="175.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (4 samples, 0.32%)</title><rect x="59.4682%" y="341" width="0.3223%" height="15" fill="rgb(213,199,8)" fg:x="738" fg:w="4"/><text x="59.7182%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (4 samples, 0.32%)</title><rect x="59.4682%" y="325" width="0.3223%" height="15" fill="rgb(226,151,19)" fg:x="738" fg:w="4"/><text x="59.7182%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="59.5488%" y="309" width="0.2417%" height="15" fill="rgb(254,183,12)" fg:x="739" fg:w="3"/><text x="59.7988%" y="319.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.6293%" y="293" width="0.1612%" height="15" fill="rgb(245,8,3)" fg:x="740" fg:w="2"/><text x="59.8793%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.6293%" y="277" width="0.1612%" height="15" fill="rgb(229,159,35)" fg:x="740" fg:w="2"/><text x="59.8793%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.6293%" y="261" width="0.1612%" height="15" fill="rgb(209,145,1)" fg:x="740" fg:w="2"/><text x="59.8793%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6293%" y="245" width="0.1612%" height="15" fill="rgb(228,183,16)" fg:x="740" fg:w="2"/><text x="59.8793%" y="255.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.6293%" y="229" width="0.1612%" height="15" fill="rgb(222,68,0)" fg:x="740" fg:w="2"/><text x="59.8793%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6293%" y="213" width="0.1612%" height="15" fill="rgb(209,130,50)" fg:x="740" fg:w="2"/><text x="59.8793%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="59.6293%" y="197" width="0.1612%" height="15" fill="rgb(228,176,44)" fg:x="740" fg:w="2"/><text x="59.8793%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.6293%" y="181" width="0.1612%" height="15" fill="rgb(221,164,2)" fg:x="740" fg:w="2"/><text x="59.8793%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="59.7099%" y="165" width="0.0806%" height="15" fill="rgb(249,199,49)" fg:x="741" fg:w="1"/><text x="59.9599%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="59.7099%" y="149" width="0.0806%" height="15" fill="rgb(228,205,53)" fg:x="741" fg:w="1"/><text x="59.9599%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="59.7099%" y="133" width="0.0806%" height="15" fill="rgb(235,77,20)" fg:x="741" fg:w="1"/><text x="59.9599%" y="143.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.7905%" y="325" width="0.0806%" height="15" fill="rgb(227,147,34)" fg:x="742" fg:w="1"/><text x="60.0405%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.8711%" y="229" width="0.0806%" height="15" fill="rgb(226,203,52)" fg:x="743" fg:w="1"/><text x="60.1211%" y="239.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="59.8711%" y="213" width="0.0806%" height="15" fill="rgb(226,186,23)" fg:x="743" fg:w="1"/><text x="60.1211%" y="223.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="59.7905%" y="341" width="0.2417%" height="15" fill="rgb(236,13,30)" fg:x="742" fg:w="3"/><text x="60.0405%" y="351.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="59.8711%" y="325" width="0.1612%" height="15" fill="rgb(228,121,22)" fg:x="743" fg:w="2"/><text x="60.1211%" y="335.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="59.8711%" y="309" width="0.1612%" height="15" fill="rgb(248,222,26)" fg:x="743" fg:w="2"/><text x="60.1211%" y="319.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.8711%" y="293" width="0.1612%" height="15" fill="rgb(251,72,25)" fg:x="743" fg:w="2"/><text x="60.1211%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.8711%" y="277" width="0.1612%" height="15" fill="rgb(223,114,24)" fg:x="743" fg:w="2"/><text x="60.1211%" y="287.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="59.8711%" y="261" width="0.1612%" height="15" fill="rgb(232,190,43)" fg:x="743" fg:w="2"/><text x="60.1211%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="59.8711%" y="245" width="0.1612%" height="15" fill="rgb(208,90,0)" fg:x="743" fg:w="2"/><text x="60.1211%" y="255.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="59.9517%" y="229" width="0.0806%" height="15" fill="rgb(234,149,31)" fg:x="744" fg:w="1"/><text x="60.2017%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.9517%" y="213" width="0.0806%" height="15" fill="rgb(235,188,36)" fg:x="744" fg:w="1"/><text x="60.2017%" y="223.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="59.9517%" y="197" width="0.0806%" height="15" fill="rgb(219,59,51)" fg:x="744" fg:w="1"/><text x="60.2017%" y="207.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="59.9517%" y="181" width="0.0806%" height="15" fill="rgb(236,101,40)" fg:x="744" fg:w="1"/><text x="60.2017%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="59.9517%" y="165" width="0.0806%" height="15" fill="rgb(235,33,7)" fg:x="744" fg:w="1"/><text x="60.2017%" y="175.50"></text></g><g><title>engine::internal::EntityMap::add_entity (8 samples, 0.64%)</title><rect x="60.0322%" y="341" width="0.6446%" height="15" fill="rgb(213,169,26)" fg:x="745" fg:w="8"/><text x="60.2822%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.64%)</title><rect x="60.0322%" y="325" width="0.6446%" height="15" fill="rgb(218,99,34)" fg:x="745" fg:w="8"/><text x="60.2822%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.64%)</title><rect x="60.0322%" y="309" width="0.6446%" height="15" fill="rgb(210,57,24)" fg:x="745" fg:w="8"/><text x="60.2822%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.64%)</title><rect x="60.0322%" y="293" width="0.6446%" height="15" fill="rgb(231,181,54)" fg:x="745" fg:w="8"/><text x="60.2822%" y="303.50"></text></g><g><title>__libc_malloc (8 samples, 0.64%)</title><rect x="60.0322%" y="277" width="0.6446%" height="15" fill="rgb(251,188,48)" fg:x="745" fg:w="8"/><text x="60.2822%" y="287.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="60.6769%" y="341" width="0.0806%" height="15" fill="rgb(243,12,45)" fg:x="753" fg:w="1"/><text x="60.9269%" y="351.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.9186%" y="117" width="0.1612%" height="15" fill="rgb(250,197,9)" fg:x="756" fg:w="2"/><text x="61.1686%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9186%" y="101" width="0.1612%" height="15" fill="rgb(235,149,35)" fg:x="756" fg:w="2"/><text x="61.1686%" y="111.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="60.9186%" y="85" width="0.1612%" height="15" fill="rgb(219,27,19)" fg:x="756" fg:w="2"/><text x="61.1686%" y="95.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="60.9186%" y="69" width="0.1612%" height="15" fill="rgb(244,78,31)" fg:x="756" fg:w="2"/><text x="61.1686%" y="79.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9992%" y="53" width="0.0806%" height="15" fill="rgb(241,13,4)" fg:x="757" fg:w="1"/><text x="61.2492%" y="63.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="60.9992%" y="37" width="0.0806%" height="15" fill="rgb(212,194,26)" fg:x="757" fg:w="1"/><text x="61.2492%" y="47.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.0798%" y="69" width="0.0806%" height="15" fill="rgb(236,80,11)" fg:x="758" fg:w="1"/><text x="61.3298%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="60.9186%" y="181" width="0.3223%" height="15" fill="rgb(206,1,24)" fg:x="756" fg:w="4"/><text x="61.1686%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.9186%" y="165" width="0.3223%" height="15" fill="rgb(238,215,50)" fg:x="756" fg:w="4"/><text x="61.1686%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="60.9186%" y="149" width="0.3223%" height="15" fill="rgb(254,126,32)" fg:x="756" fg:w="4"/><text x="61.1686%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="60.9186%" y="133" width="0.3223%" height="15" fill="rgb(206,111,53)" fg:x="756" fg:w="4"/><text x="61.1686%" y="143.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (2 samples, 0.16%)</title><rect x="61.0798%" y="117" width="0.1612%" height="15" fill="rgb(218,72,44)" fg:x="758" fg:w="2"/><text x="61.3298%" y="127.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="61.0798%" y="101" width="0.1612%" height="15" fill="rgb(238,25,3)" fg:x="758" fg:w="2"/><text x="61.3298%" y="111.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.0798%" y="85" width="0.1612%" height="15" fill="rgb(250,191,7)" fg:x="758" fg:w="2"/><text x="61.3298%" y="95.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.1604%" y="69" width="0.0806%" height="15" fill="rgb(238,56,30)" fg:x="759" fg:w="1"/><text x="61.4104%" y="79.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="61.1604%" y="53" width="0.0806%" height="15" fill="rgb(210,27,45)" fg:x="759" fg:w="1"/><text x="61.4104%" y="63.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (6 samples, 0.48%)</title><rect x="60.8380%" y="213" width="0.4835%" height="15" fill="rgb(207,10,50)" fg:x="755" fg:w="6"/><text x="61.0880%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="60.8380%" y="197" width="0.4835%" height="15" fill="rgb(249,30,23)" fg:x="755" fg:w="6"/><text x="61.0880%" y="207.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="61.2409%" y="181" width="0.0806%" height="15" fill="rgb(250,80,12)" fg:x="760" fg:w="1"/><text x="61.4909%" y="191.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="61.2409%" y="165" width="0.0806%" height="15" fill="rgb(210,221,37)" fg:x="760" fg:w="1"/><text x="61.4909%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="61.3215%" y="213" width="0.0806%" height="15" fill="rgb(205,96,24)" fg:x="761" fg:w="1"/><text x="61.5715%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.3215%" y="197" width="0.0806%" height="15" fill="rgb(247,104,22)" fg:x="761" fg:w="1"/><text x="61.5715%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.3215%" y="181" width="0.0806%" height="15" fill="rgb(222,61,53)" fg:x="761" fg:w="1"/><text x="61.5715%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (8 samples, 0.64%)</title><rect x="60.8380%" y="261" width="0.6446%" height="15" fill="rgb(241,11,53)" fg:x="755" fg:w="8"/><text x="61.0880%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (8 samples, 0.64%)</title><rect x="60.8380%" y="245" width="0.6446%" height="15" fill="rgb(230,111,47)" fg:x="755" fg:w="8"/><text x="61.0880%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (8 samples, 0.64%)</title><rect x="60.8380%" y="229" width="0.6446%" height="15" fill="rgb(218,187,29)" fg:x="755" fg:w="8"/><text x="61.0880%" y="239.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4021%" y="213" width="0.0806%" height="15" fill="rgb(210,121,46)" fg:x="762" fg:w="1"/><text x="61.6521%" y="223.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4021%" y="197" width="0.0806%" height="15" fill="rgb(250,43,19)" fg:x="762" fg:w="1"/><text x="61.6521%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="61.4021%" y="181" width="0.0806%" height="15" fill="rgb(238,61,12)" fg:x="762" fg:w="1"/><text x="61.6521%" y="191.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="61.4021%" y="165" width="0.0806%" height="15" fill="rgb(251,198,9)" fg:x="762" fg:w="1"/><text x="61.6521%" y="175.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.4021%" y="149" width="0.0806%" height="15" fill="rgb(214,192,38)" fg:x="762" fg:w="1"/><text x="61.6521%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="61.4021%" y="133" width="0.0806%" height="15" fill="rgb(214,73,19)" fg:x="762" fg:w="1"/><text x="61.6521%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="61.4827%" y="229" width="0.0806%" height="15" fill="rgb(249,222,49)" fg:x="763" fg:w="1"/><text x="61.7327%" y="239.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (11 samples, 0.89%)</title><rect x="60.7575%" y="325" width="0.8864%" height="15" fill="rgb(231,181,54)" fg:x="754" fg:w="11"/><text x="61.0075%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (11 samples, 0.89%)</title><rect x="60.7575%" y="309" width="0.8864%" height="15" fill="rgb(240,1,13)" fg:x="754" fg:w="11"/><text x="61.0075%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="60.8380%" y="293" width="0.8058%" height="15" fill="rgb(225,21,16)" fg:x="755" fg:w="10"/><text x="61.0880%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="60.8380%" y="277" width="0.8058%" height="15" fill="rgb(246,176,50)" fg:x="755" fg:w="10"/><text x="61.0880%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="61.4827%" y="261" width="0.1612%" height="15" fill="rgb(208,96,50)" fg:x="763" fg:w="2"/><text x="61.7327%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="61.4827%" y="245" width="0.1612%" height="15" fill="rgb(240,219,19)" fg:x="763" fg:w="2"/><text x="61.7327%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="61.5633%" y="229" width="0.0806%" height="15" fill="rgb(234,73,5)" fg:x="764" fg:w="1"/><text x="61.8133%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6438%" y="245" width="0.0806%" height="15" fill="rgb(225,52,53)" fg:x="765" fg:w="1"/><text x="61.8938%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.6438%" y="229" width="0.0806%" height="15" fill="rgb(250,12,14)" fg:x="765" fg:w="1"/><text x="61.8938%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="61.6438%" y="213" width="0.0806%" height="15" fill="rgb(242,185,54)" fg:x="765" fg:w="1"/><text x="61.8938%" y="223.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.7244%" y="181" width="0.0806%" height="15" fill="rgb(211,206,31)" fg:x="766" fg:w="1"/><text x="61.9744%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="61.7244%" y="197" width="0.3223%" height="15" fill="rgb(252,10,33)" fg:x="766" fg:w="4"/><text x="61.9744%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="61.8050%" y="181" width="0.2417%" height="15" fill="rgb(216,26,7)" fg:x="767" fg:w="3"/><text x="62.0550%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="61.8856%" y="165" width="0.1612%" height="15" fill="rgb(228,112,40)" fg:x="768" fg:w="2"/><text x="62.1356%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="61.8856%" y="149" width="0.1612%" height="15" fill="rgb(212,21,16)" fg:x="768" fg:w="2"/><text x="62.1356%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9662%" y="133" width="0.0806%" height="15" fill="rgb(249,3,29)" fg:x="769" fg:w="1"/><text x="62.2162%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="61.9662%" y="117" width="0.0806%" height="15" fill="rgb(221,42,51)" fg:x="769" fg:w="1"/><text x="62.2162%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="61.9662%" y="101" width="0.0806%" height="15" fill="rgb(225,90,21)" fg:x="769" fg:w="1"/><text x="62.2162%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9662%" y="85" width="0.0806%" height="15" fill="rgb(242,131,5)" fg:x="769" fg:w="1"/><text x="62.2162%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="61.9662%" y="69" width="0.0806%" height="15" fill="rgb(220,187,28)" fg:x="769" fg:w="1"/><text x="62.2162%" y="79.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="61.9662%" y="53" width="0.0806%" height="15" fill="rgb(210,75,48)" fg:x="769" fg:w="1"/><text x="62.2162%" y="63.50"></text></g><g><title>engine::internal::Entities::add_persisted (33 samples, 2.66%)</title><rect x="59.4682%" y="357" width="2.6591%" height="15" fill="rgb(211,91,40)" fg:x="738" fg:w="33"/><text x="59.7182%" y="367.50">en..</text></g><g><title>kernel::model::deserialize_entity (17 samples, 1.37%)</title><rect x="60.7575%" y="341" width="1.3699%" height="15" fill="rgb(205,43,18)" fg:x="754" fg:w="17"/><text x="61.0075%" y="351.50"></text></g><g><title>serde_json::de::from_trait (6 samples, 0.48%)</title><rect x="61.6438%" y="325" width="0.4835%" height="15" fill="rgb(207,123,11)" fg:x="765" fg:w="6"/><text x="61.8938%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="61.6438%" y="309" width="0.4835%" height="15" fill="rgb(235,89,39)" fg:x="765" fg:w="6"/><text x="61.8938%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="61.6438%" y="293" width="0.4835%" height="15" fill="rgb(245,217,27)" fg:x="765" fg:w="6"/><text x="61.8938%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6 samples, 0.48%)</title><rect x="61.6438%" y="277" width="0.4835%" height="15" fill="rgb(216,55,17)" fg:x="765" fg:w="6"/><text x="61.8938%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6 samples, 0.48%)</title><rect x="61.6438%" y="261" width="0.4835%" height="15" fill="rgb(252,116,44)" fg:x="765" fg:w="6"/><text x="61.8938%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="61.7244%" y="245" width="0.4029%" height="15" fill="rgb(229,153,4)" fg:x="766" fg:w="5"/><text x="61.9744%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="61.7244%" y="229" width="0.4029%" height="15" fill="rgb(222,24,35)" fg:x="766" fg:w="5"/><text x="61.9744%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5 samples, 0.40%)</title><rect x="61.7244%" y="213" width="0.4029%" height="15" fill="rgb(214,26,20)" fg:x="766" fg:w="5"/><text x="61.9744%" y="223.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.0467%" y="197" width="0.0806%" height="15" fill="rgb(215,14,45)" fg:x="770" fg:w="1"/><text x="62.2967%" y="207.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="62.0467%" y="181" width="0.0806%" height="15" fill="rgb(217,212,50)" fg:x="770" fg:w="1"/><text x="62.2967%" y="191.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="62.0467%" y="165" width="0.0806%" height="15" fill="rgb(230,172,52)" fg:x="770" fg:w="1"/><text x="62.2967%" y="175.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (37 samples, 2.98%)</title><rect x="59.2264%" y="453" width="2.9815%" height="15" fill="rgb(210,48,36)" fg:x="735" fg:w="37"/><text x="59.4764%" y="463.50">&lt;pl..</text></g><g><title>core::iter::adapters::try_process (37 samples, 2.98%)</title><rect x="59.2264%" y="437" width="2.9815%" height="15" fill="rgb(216,213,32)" fg:x="735" fg:w="37"/><text x="59.4764%" y="447.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (37 samples, 2.98%)</title><rect x="59.2264%" y="421" width="2.9815%" height="15" fill="rgb(237,202,41)" fg:x="735" fg:w="37"/><text x="59.4764%" y="431.50">&lt;al..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (37 samples, 2.98%)</title><rect x="59.2264%" y="405" width="2.9815%" height="15" fill="rgb(209,14,29)" fg:x="735" fg:w="37"/><text x="59.4764%" y="415.50">&lt;co..</text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (37 samples, 2.98%)</title><rect x="59.2264%" y="389" width="2.9815%" height="15" fill="rgb(219,29,3)" fg:x="735" fg:w="37"/><text x="59.4764%" y="399.50">&lt;en..</text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (37 samples, 2.98%)</title><rect x="59.2264%" y="373" width="2.9815%" height="15" fill="rgb(229,13,49)" fg:x="735" fg:w="37"/><text x="59.4764%" y="383.50">&lt;en..</text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="62.1273%" y="357" width="0.0806%" height="15" fill="rgb(210,206,2)" fg:x="771" fg:w="1"/><text x="62.3773%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1273%" y="341" width="0.0806%" height="15" fill="rgb(216,154,46)" fg:x="771" fg:w="1"/><text x="62.3773%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1273%" y="325" width="0.0806%" height="15" fill="rgb(211,170,52)" fg:x="771" fg:w="1"/><text x="62.3773%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="62.1273%" y="309" width="0.0806%" height="15" fill="rgb(233,109,47)" fg:x="771" fg:w="1"/><text x="62.3773%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="62.1273%" y="293" width="0.0806%" height="15" fill="rgb(208,212,30)" fg:x="771" fg:w="1"/><text x="62.3773%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="62.1273%" y="277" width="0.0806%" height="15" fill="rgb(215,190,19)" fg:x="771" fg:w="1"/><text x="62.3773%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="62.1273%" y="261" width="0.0806%" height="15" fill="rgb(207,164,53)" fg:x="771" fg:w="1"/><text x="62.3773%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1273%" y="245" width="0.0806%" height="15" fill="rgb(213,87,49)" fg:x="771" fg:w="1"/><text x="62.3773%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="62.1273%" y="229" width="0.0806%" height="15" fill="rgb(241,216,24)" fg:x="771" fg:w="1"/><text x="62.3773%" y="239.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (53 samples, 4.27%)</title><rect x="58.0177%" y="517" width="4.2707%" height="15" fill="rgb(241,123,45)" fg:x="720" fg:w="53"/><text x="58.2677%" y="527.50">plugi..</text></g><g><title>plugins_core::tools::contained_by (43 samples, 3.46%)</title><rect x="58.8235%" y="501" width="3.4649%" height="15" fill="rgb(220,36,15)" fg:x="730" fg:w="43"/><text x="59.0735%" y="511.50">plu..</text></g><g><title>kernel::model::entry::Entry::scope (39 samples, 3.14%)</title><rect x="59.1459%" y="485" width="3.1426%" height="15" fill="rgb(215,202,9)" fg:x="734" fg:w="39"/><text x="59.3959%" y="495.50">ker..</text></g><g><title>kernel::model::scopes::Scopes::load_scope (39 samples, 3.14%)</title><rect x="59.1459%" y="469" width="3.1426%" height="15" fill="rgb(252,71,26)" fg:x="734" fg:w="39"/><text x="59.3959%" y="479.50">ker..</text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="62.2079%" y="453" width="0.0806%" height="15" fill="rgb(243,195,19)" fg:x="772" fg:w="1"/><text x="62.4579%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="62.2079%" y="437" width="0.0806%" height="15" fill="rgb(207,167,27)" fg:x="772" fg:w="1"/><text x="62.4579%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="62.2079%" y="421" width="0.0806%" height="15" fill="rgb(250,146,54)" fg:x="772" fg:w="1"/><text x="62.4579%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="62.2079%" y="405" width="0.0806%" height="15" fill="rgb(245,79,9)" fg:x="772" fg:w="1"/><text x="62.4579%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="62.2079%" y="389" width="0.0806%" height="15" fill="rgb(234,197,22)" fg:x="772" fg:w="1"/><text x="62.4579%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="62.2079%" y="373" width="0.0806%" height="15" fill="rgb(221,52,48)" fg:x="772" fg:w="1"/><text x="62.4579%" y="383.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.2885%" y="485" width="0.2417%" height="15" fill="rgb(235,80,0)" fg:x="773" fg:w="3"/><text x="62.5385%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.2885%" y="469" width="0.2417%" height="15" fill="rgb(221,117,53)" fg:x="773" fg:w="3"/><text x="62.5385%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="62.2885%" y="453" width="0.2417%" height="15" fill="rgb(239,48,47)" fg:x="773" fg:w="3"/><text x="62.5385%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="62.2885%" y="437" width="0.2417%" height="15" fill="rgb(227,191,52)" fg:x="773" fg:w="3"/><text x="62.5385%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="62.2885%" y="421" width="0.2417%" height="15" fill="rgb(241,118,1)" fg:x="773" fg:w="3"/><text x="62.5385%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="62.2885%" y="405" width="0.2417%" height="15" fill="rgb(240,85,3)" fg:x="773" fg:w="3"/><text x="62.5385%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="62.2885%" y="389" width="0.2417%" height="15" fill="rgb(237,68,37)" fg:x="773" fg:w="3"/><text x="62.5385%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="62.2885%" y="373" width="0.2417%" height="15" fill="rgb(212,9,20)" fg:x="773" fg:w="3"/><text x="62.5385%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="62.2885%" y="357" width="0.2417%" height="15" fill="rgb(218,84,17)" fg:x="773" fg:w="3"/><text x="62.5385%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="62.2885%" y="341" width="0.2417%" height="15" fill="rgb(235,147,20)" fg:x="773" fg:w="3"/><text x="62.5385%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="62.2885%" y="325" width="0.2417%" height="15" fill="rgb(208,224,1)" fg:x="773" fg:w="3"/><text x="62.5385%" y="335.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="62.2885%" y="309" width="0.2417%" height="15" fill="rgb(232,97,50)" fg:x="773" fg:w="3"/><text x="62.5385%" y="319.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.2885%" y="293" width="0.2417%" height="15" fill="rgb(238,15,45)" fg:x="773" fg:w="3"/><text x="62.5385%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.48%)</title><rect x="62.2885%" y="501" width="0.4835%" height="15" fill="rgb(231,46,18)" fg:x="773" fg:w="6"/><text x="62.5385%" y="511.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="62.5302%" y="485" width="0.2417%" height="15" fill="rgb(254,169,10)" fg:x="776" fg:w="3"/><text x="62.7802%" y="495.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="62.7720%" y="501" width="0.1612%" height="15" fill="rgb(243,169,30)" fg:x="779" fg:w="2"/><text x="63.0220%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="62.9331%" y="501" width="0.0806%" height="15" fill="rgb(236,90,49)" fg:x="781" fg:w="1"/><text x="63.1831%" y="511.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (2 samples, 0.16%)</title><rect x="63.0137%" y="501" width="0.1612%" height="15" fill="rgb(218,80,15)" fg:x="782" fg:w="2"/><text x="63.2637%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="63.1749%" y="437" width="0.0806%" height="15" fill="rgb(222,115,37)" fg:x="784" fg:w="1"/><text x="63.4249%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.1749%" y="421" width="0.0806%" height="15" fill="rgb(227,0,6)" fg:x="784" fg:w="1"/><text x="63.4249%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.1749%" y="405" width="0.0806%" height="15" fill="rgb(217,189,13)" fg:x="784" fg:w="1"/><text x="63.4249%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="63.2554%" y="341" width="0.0806%" height="15" fill="rgb(220,74,19)" fg:x="785" fg:w="1"/><text x="63.5054%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.2554%" y="373" width="0.1612%" height="15" fill="rgb(224,81,18)" fg:x="785" fg:w="2"/><text x="63.5054%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="63.2554%" y="357" width="0.1612%" height="15" fill="rgb(245,178,48)" fg:x="785" fg:w="2"/><text x="63.5054%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3360%" y="341" width="0.0806%" height="15" fill="rgb(207,78,24)" fg:x="786" fg:w="1"/><text x="63.5860%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.3360%" y="325" width="0.0806%" height="15" fill="rgb(223,222,30)" fg:x="786" fg:w="1"/><text x="63.5860%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.3360%" y="309" width="0.0806%" height="15" fill="rgb(234,101,12)" fg:x="786" fg:w="1"/><text x="63.5860%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.3360%" y="293" width="0.0806%" height="15" fill="rgb(209,80,46)" fg:x="786" fg:w="1"/><text x="63.5860%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.3360%" y="277" width="0.0806%" height="15" fill="rgb(228,79,14)" fg:x="786" fg:w="1"/><text x="63.5860%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3360%" y="261" width="0.0806%" height="15" fill="rgb(220,219,34)" fg:x="786" fg:w="1"/><text x="63.5860%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="63.3360%" y="245" width="0.0806%" height="15" fill="rgb(207,80,21)" fg:x="786" fg:w="1"/><text x="63.5860%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="63.3360%" y="229" width="0.0806%" height="15" fill="rgb(210,154,44)" fg:x="786" fg:w="1"/><text x="63.5860%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="63.3360%" y="213" width="0.0806%" height="15" fill="rgb(246,44,39)" fg:x="786" fg:w="1"/><text x="63.5860%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="63.3360%" y="197" width="0.0806%" height="15" fill="rgb(252,175,13)" fg:x="786" fg:w="1"/><text x="63.5860%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="63.3360%" y="181" width="0.0806%" height="15" fill="rgb(211,50,39)" fg:x="786" fg:w="1"/><text x="63.5860%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="63.3360%" y="165" width="0.0806%" height="15" fill="rgb(231,204,27)" fg:x="786" fg:w="1"/><text x="63.5860%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.2554%" y="405" width="0.2417%" height="15" fill="rgb(253,26,34)" fg:x="785" fg:w="3"/><text x="63.5054%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="63.2554%" y="389" width="0.2417%" height="15" fill="rgb(207,139,38)" fg:x="785" fg:w="3"/><text x="63.5054%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4166%" y="373" width="0.0806%" height="15" fill="rgb(248,54,27)" fg:x="787" fg:w="1"/><text x="63.6666%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="63.4166%" y="357" width="0.0806%" height="15" fill="rgb(234,25,33)" fg:x="787" fg:w="1"/><text x="63.6666%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="63.4166%" y="341" width="0.0806%" height="15" fill="rgb(249,107,47)" fg:x="787" fg:w="1"/><text x="63.6666%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="63.4166%" y="325" width="0.0806%" height="15" fill="rgb(230,190,31)" fg:x="787" fg:w="1"/><text x="63.6666%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="63.4166%" y="309" width="0.0806%" height="15" fill="rgb(238,173,45)" fg:x="787" fg:w="1"/><text x="63.6666%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4166%" y="293" width="0.0806%" height="15" fill="rgb(222,16,50)" fg:x="787" fg:w="1"/><text x="63.6666%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="63.4166%" y="277" width="0.0806%" height="15" fill="rgb(251,204,47)" fg:x="787" fg:w="1"/><text x="63.6666%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="63.4972%" y="405" width="0.0806%" height="15" fill="rgb(225,12,3)" fg:x="788" fg:w="1"/><text x="63.7472%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="63.4972%" y="389" width="0.0806%" height="15" fill="rgb(214,208,22)" fg:x="788" fg:w="1"/><text x="63.7472%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.5778%" y="405" width="0.0806%" height="15" fill="rgb(240,57,32)" fg:x="789" fg:w="1"/><text x="63.8278%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="63.5778%" y="389" width="0.0806%" height="15" fill="rgb(243,113,48)" fg:x="789" fg:w="1"/><text x="63.8278%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="63.5778%" y="373" width="0.0806%" height="15" fill="rgb(225,135,30)" fg:x="789" fg:w="1"/><text x="63.8278%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="63.7389%" y="309" width="0.0806%" height="15" fill="rgb(222,3,53)" fg:x="791" fg:w="1"/><text x="63.9889%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (10 samples, 0.81%)</title><rect x="63.1749%" y="469" width="0.8058%" height="15" fill="rgb(243,142,2)" fg:x="784" fg:w="10"/><text x="63.4249%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="63.1749%" y="453" width="0.8058%" height="15" fill="rgb(233,67,14)" fg:x="784" fg:w="10"/><text x="63.4249%" y="463.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.73%)</title><rect x="63.2554%" y="437" width="0.7252%" height="15" fill="rgb(245,125,36)" fg:x="785" fg:w="9"/><text x="63.5054%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.73%)</title><rect x="63.2554%" y="421" width="0.7252%" height="15" fill="rgb(225,199,6)" fg:x="785" fg:w="9"/><text x="63.5054%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="63.6583%" y="405" width="0.3223%" height="15" fill="rgb(244,71,6)" fg:x="790" fg:w="4"/><text x="63.9083%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.6583%" y="389" width="0.3223%" height="15" fill="rgb(225,62,9)" fg:x="790" fg:w="4"/><text x="63.9083%" y="399.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (4 samples, 0.32%)</title><rect x="63.6583%" y="373" width="0.3223%" height="15" fill="rgb(246,139,53)" fg:x="790" fg:w="4"/><text x="63.9083%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.6583%" y="357" width="0.3223%" height="15" fill="rgb(243,161,46)" fg:x="790" fg:w="4"/><text x="63.9083%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (4 samples, 0.32%)</title><rect x="63.6583%" y="341" width="0.3223%" height="15" fill="rgb(236,153,7)" fg:x="790" fg:w="4"/><text x="63.9083%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="63.6583%" y="325" width="0.3223%" height="15" fill="rgb(248,42,35)" fg:x="790" fg:w="4"/><text x="63.9083%" y="335.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="63.8195%" y="309" width="0.1612%" height="15" fill="rgb(250,17,31)" fg:x="792" fg:w="2"/><text x="64.0695%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="63.8195%" y="293" width="0.1612%" height="15" fill="rgb(248,138,14)" fg:x="792" fg:w="2"/><text x="64.0695%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="63.9001%" y="277" width="0.0806%" height="15" fill="rgb(228,161,3)" fg:x="793" fg:w="1"/><text x="64.1501%" y="287.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="63.9001%" y="261" width="0.0806%" height="15" fill="rgb(248,116,17)" fg:x="793" fg:w="1"/><text x="64.1501%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="63.9001%" y="245" width="0.0806%" height="15" fill="rgb(207,78,24)" fg:x="793" fg:w="1"/><text x="64.1501%" y="255.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="63.9001%" y="229" width="0.0806%" height="15" fill="rgb(234,99,48)" fg:x="793" fg:w="1"/><text x="64.1501%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="63.9001%" y="213" width="0.0806%" height="15" fill="rgb(242,22,26)" fg:x="793" fg:w="1"/><text x="64.1501%" y="223.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (22 samples, 1.77%)</title><rect x="62.2885%" y="517" width="1.7728%" height="15" fill="rgb(227,78,32)" fg:x="773" fg:w="22"/><text x="62.5385%" y="527.50">p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (11 samples, 0.89%)</title><rect x="63.1749%" y="501" width="0.8864%" height="15" fill="rgb(226,189,43)" fg:x="784" fg:w="11"/><text x="63.4249%" y="511.50"></text></g><g><title>plugins_core::finding::matches_description (11 samples, 0.89%)</title><rect x="63.1749%" y="485" width="0.8864%" height="15" fill="rgb(227,218,35)" fg:x="784" fg:w="11"/><text x="63.4249%" y="495.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="63.9807%" y="469" width="0.0806%" height="15" fill="rgb(206,111,40)" fg:x="794" fg:w="1"/><text x="64.2307%" y="479.50"></text></g><g><title>alloc::rc::rcbox_layout_for_value_layout (1 samples, 0.08%)</title><rect x="63.9807%" y="453" width="0.0806%" height="15" fill="rgb(208,217,22)" fg:x="794" fg:w="1"/><text x="64.2307%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (79 samples, 6.37%)</title><rect x="57.8566%" y="549" width="6.3658%" height="15" fill="rgb(248,20,20)" fg:x="718" fg:w="79"/><text x="58.1066%" y="559.50">&lt;engine:..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (79 samples, 6.37%)</title><rect x="57.8566%" y="533" width="6.3658%" height="15" fill="rgb(239,155,16)" fg:x="718" fg:w="79"/><text x="58.1066%" y="543.50">&lt;plugins..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="64.0612%" y="517" width="0.1612%" height="15" fill="rgb(238,171,46)" fg:x="795" fg:w="2"/><text x="64.3112%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.0612%" y="501" width="0.1612%" height="15" fill="rgb(248,11,36)" fg:x="795" fg:w="2"/><text x="64.3112%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.0612%" y="485" width="0.1612%" height="15" fill="rgb(220,148,37)" fg:x="795" fg:w="2"/><text x="64.3112%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.0612%" y="469" width="0.1612%" height="15" fill="rgb(218,144,42)" fg:x="795" fg:w="2"/><text x="64.3112%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="64.0612%" y="453" width="0.1612%" height="15" fill="rgb(245,20,20)" fg:x="795" fg:w="2"/><text x="64.3112%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="64.0612%" y="437" width="0.1612%" height="15" fill="rgb(240,111,48)" fg:x="795" fg:w="2"/><text x="64.3112%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="64.0612%" y="421" width="0.1612%" height="15" fill="rgb(237,225,32)" fg:x="795" fg:w="2"/><text x="64.3112%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.0612%" y="405" width="0.1612%" height="15" fill="rgb(228,161,46)" fg:x="795" fg:w="2"/><text x="64.3112%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="64.0612%" y="389" width="0.1612%" height="15" fill="rgb(235,196,21)" fg:x="795" fg:w="2"/><text x="64.3112%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="64.0612%" y="373" width="0.1612%" height="15" fill="rgb(250,133,21)" fg:x="795" fg:w="2"/><text x="64.3112%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="64.0612%" y="357" width="0.1612%" height="15" fill="rgb(236,94,32)" fg:x="795" fg:w="2"/><text x="64.3112%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="64.0612%" y="341" width="0.1612%" height="15" fill="rgb(219,176,25)" fg:x="795" fg:w="2"/><text x="64.3112%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="64.0612%" y="325" width="0.1612%" height="15" fill="rgb(211,17,43)" fg:x="795" fg:w="2"/><text x="64.3112%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="64.0612%" y="309" width="0.1612%" height="15" fill="rgb(220,75,23)" fg:x="795" fg:w="2"/><text x="64.3112%" y="319.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="64.2224%" y="549" width="0.1612%" height="15" fill="rgb(215,122,32)" fg:x="797" fg:w="2"/><text x="64.4724%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="64.2224%" y="533" width="0.1612%" height="15" fill="rgb(218,57,38)" fg:x="797" fg:w="2"/><text x="64.4724%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3030%" y="517" width="0.0806%" height="15" fill="rgb(233,208,46)" fg:x="798" fg:w="1"/><text x="64.5530%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="64.3030%" y="501" width="0.0806%" height="15" fill="rgb(221,35,50)" fg:x="798" fg:w="1"/><text x="64.5530%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="64.3030%" y="485" width="0.0806%" height="15" fill="rgb(229,213,29)" fg:x="798" fg:w="1"/><text x="64.5530%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="64.3030%" y="469" width="0.0806%" height="15" fill="rgb(229,110,40)" fg:x="798" fg:w="1"/><text x="64.5530%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="64.3030%" y="453" width="0.0806%" height="15" fill="rgb(247,206,19)" fg:x="798" fg:w="1"/><text x="64.5530%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3030%" y="437" width="0.0806%" height="15" fill="rgb(216,229,45)" fg:x="798" fg:w="1"/><text x="64.5530%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="64.3030%" y="421" width="0.0806%" height="15" fill="rgb(205,184,31)" fg:x="798" fg:w="1"/><text x="64.5530%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="64.3836%" y="533" width="0.0806%" height="15" fill="rgb(213,91,10)" fg:x="799" fg:w="1"/><text x="64.6336%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="64.3836%" y="517" width="0.0806%" height="15" fill="rgb(250,49,8)" fg:x="799" fg:w="1"/><text x="64.6336%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.3836%" y="501" width="0.0806%" height="15" fill="rgb(207,26,8)" fg:x="799" fg:w="1"/><text x="64.6336%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.5447%" y="453" width="0.0806%" height="15" fill="rgb(224,2,13)" fg:x="801" fg:w="1"/><text x="64.7947%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="64.5447%" y="437" width="0.0806%" height="15" fill="rgb(219,108,27)" fg:x="801" fg:w="1"/><text x="64.7947%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.6253%" y="453" width="0.1612%" height="15" fill="rgb(240,89,32)" fg:x="802" fg:w="2"/><text x="64.8753%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="64.6253%" y="437" width="0.1612%" height="15" fill="rgb(248,205,3)" fg:x="802" fg:w="2"/><text x="64.8753%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.6253%" y="421" width="0.1612%" height="15" fill="rgb(236,197,47)" fg:x="802" fg:w="2"/><text x="64.8753%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.6253%" y="405" width="0.1612%" height="15" fill="rgb(244,185,52)" fg:x="802" fg:w="2"/><text x="64.8753%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="64.6253%" y="389" width="0.1612%" height="15" fill="rgb(210,206,23)" fg:x="802" fg:w="2"/><text x="64.8753%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="64.6253%" y="373" width="0.1612%" height="15" fill="rgb(251,177,30)" fg:x="802" fg:w="2"/><text x="64.8753%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="64.7059%" y="357" width="0.0806%" height="15" fill="rgb(243,27,45)" fg:x="803" fg:w="1"/><text x="64.9559%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="64.7865%" y="357" width="0.0806%" height="15" fill="rgb(248,141,51)" fg:x="804" fg:w="1"/><text x="65.0365%" y="367.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="64.7865%" y="341" width="0.0806%" height="15" fill="rgb(235,102,15)" fg:x="804" fg:w="1"/><text x="65.0365%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="64.8670%" y="325" width="0.0806%" height="15" fill="rgb(214,164,53)" fg:x="805" fg:w="1"/><text x="65.1170%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (7 samples, 0.56%)</title><rect x="64.4641%" y="501" width="0.5641%" height="15" fill="rgb(228,18,51)" fg:x="800" fg:w="7"/><text x="64.7141%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="64.4641%" y="485" width="0.5641%" height="15" fill="rgb(205,211,11)" fg:x="800" fg:w="7"/><text x="64.7141%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="64.5447%" y="469" width="0.4835%" height="15" fill="rgb(208,63,6)" fg:x="801" fg:w="6"/><text x="64.7947%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="64.7865%" y="453" width="0.2417%" height="15" fill="rgb(245,76,14)" fg:x="804" fg:w="3"/><text x="65.0365%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.7865%" y="437" width="0.2417%" height="15" fill="rgb(234,176,34)" fg:x="804" fg:w="3"/><text x="65.0365%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="64.7865%" y="421" width="0.2417%" height="15" fill="rgb(243,156,42)" fg:x="804" fg:w="3"/><text x="65.0365%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.7865%" y="405" width="0.2417%" height="15" fill="rgb(237,182,10)" fg:x="804" fg:w="3"/><text x="65.0365%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="64.7865%" y="389" width="0.2417%" height="15" fill="rgb(244,117,0)" fg:x="804" fg:w="3"/><text x="65.0365%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="64.7865%" y="373" width="0.2417%" height="15" fill="rgb(239,91,50)" fg:x="804" fg:w="3"/><text x="65.0365%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="64.8670%" y="357" width="0.1612%" height="15" fill="rgb(206,38,9)" fg:x="805" fg:w="2"/><text x="65.1170%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="64.8670%" y="341" width="0.1612%" height="15" fill="rgb(205,25,10)" fg:x="805" fg:w="2"/><text x="65.1170%" y="351.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="64.9476%" y="325" width="0.0806%" height="15" fill="rgb(206,224,7)" fg:x="806" fg:w="1"/><text x="65.1976%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="65.0282%" y="485" width="0.0806%" height="15" fill="rgb(227,157,10)" fg:x="807" fg:w="1"/><text x="65.2782%" y="495.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="65.1088%" y="485" width="0.0806%" height="15" fill="rgb(214,157,37)" fg:x="808" fg:w="1"/><text x="65.3588%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1894%" y="421" width="0.0806%" height="15" fill="rgb(209,180,35)" fg:x="809" fg:w="1"/><text x="65.4394%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.1894%" y="405" width="0.0806%" height="15" fill="rgb(216,174,49)" fg:x="809" fg:w="1"/><text x="65.4394%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1894%" y="389" width="0.0806%" height="15" fill="rgb(205,96,20)" fg:x="809" fg:w="1"/><text x="65.4394%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.1894%" y="373" width="0.0806%" height="15" fill="rgb(214,220,39)" fg:x="809" fg:w="1"/><text x="65.4394%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.1894%" y="357" width="0.0806%" height="15" fill="rgb(245,126,30)" fg:x="809" fg:w="1"/><text x="65.4394%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.1894%" y="341" width="0.0806%" height="15" fill="rgb(215,88,33)" fg:x="809" fg:w="1"/><text x="65.4394%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.1894%" y="325" width="0.0806%" height="15" fill="rgb(210,1,49)" fg:x="809" fg:w="1"/><text x="65.4394%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1894%" y="309" width="0.0806%" height="15" fill="rgb(207,133,3)" fg:x="809" fg:w="1"/><text x="65.4394%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.1894%" y="293" width="0.0806%" height="15" fill="rgb(231,47,43)" fg:x="809" fg:w="1"/><text x="65.4394%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.1894%" y="277" width="0.0806%" height="15" fill="rgb(245,64,1)" fg:x="809" fg:w="1"/><text x="65.4394%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.1894%" y="261" width="0.0806%" height="15" fill="rgb(253,145,20)" fg:x="809" fg:w="1"/><text x="65.4394%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.1894%" y="245" width="0.0806%" height="15" fill="rgb(211,39,18)" fg:x="809" fg:w="1"/><text x="65.4394%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.1894%" y="229" width="0.0806%" height="15" fill="rgb(223,225,18)" fg:x="809" fg:w="1"/><text x="65.4394%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.1894%" y="213" width="0.0806%" height="15" fill="rgb(210,202,44)" fg:x="809" fg:w="1"/><text x="65.4394%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.1894%" y="453" width="0.2417%" height="15" fill="rgb(231,138,36)" fg:x="809" fg:w="3"/><text x="65.4394%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="65.1894%" y="437" width="0.2417%" height="15" fill="rgb(237,115,25)" fg:x="809" fg:w="3"/><text x="65.4394%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2699%" y="421" width="0.1612%" height="15" fill="rgb(215,53,48)" fg:x="810" fg:w="2"/><text x="65.5199%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="65.2699%" y="405" width="0.1612%" height="15" fill="rgb(243,193,24)" fg:x="810" fg:w="2"/><text x="65.5199%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="65.2699%" y="389" width="0.1612%" height="15" fill="rgb(210,106,28)" fg:x="810" fg:w="2"/><text x="65.5199%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="65.2699%" y="373" width="0.1612%" height="15" fill="rgb(249,192,0)" fg:x="810" fg:w="2"/><text x="65.5199%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="65.2699%" y="357" width="0.1612%" height="15" fill="rgb(224,96,21)" fg:x="810" fg:w="2"/><text x="65.5199%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="65.2699%" y="341" width="0.1612%" height="15" fill="rgb(243,160,19)" fg:x="810" fg:w="2"/><text x="65.5199%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="65.2699%" y="325" width="0.1612%" height="15" fill="rgb(219,205,50)" fg:x="810" fg:w="2"/><text x="65.5199%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="65.4311%" y="421" width="0.0806%" height="15" fill="rgb(218,175,44)" fg:x="812" fg:w="1"/><text x="65.6811%" y="431.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (16 samples, 1.29%)</title><rect x="64.4641%" y="533" width="1.2893%" height="15" fill="rgb(251,84,47)" fg:x="800" fg:w="16"/><text x="64.7141%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (16 samples, 1.29%)</title><rect x="64.4641%" y="517" width="1.2893%" height="15" fill="rgb(241,14,16)" fg:x="800" fg:w="16"/><text x="64.7141%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (9 samples, 0.73%)</title><rect x="65.0282%" y="501" width="0.7252%" height="15" fill="rgb(207,142,28)" fg:x="807" fg:w="9"/><text x="65.2782%" y="511.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="65.1894%" y="485" width="0.5641%" height="15" fill="rgb(208,116,22)" fg:x="809" fg:w="7"/><text x="65.4394%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="65.1894%" y="469" width="0.5641%" height="15" fill="rgb(210,0,43)" fg:x="809" fg:w="7"/><text x="65.4394%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="65.4311%" y="453" width="0.3223%" height="15" fill="rgb(246,33,21)" fg:x="812" fg:w="4"/><text x="65.6811%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="65.4311%" y="437" width="0.3223%" height="15" fill="rgb(208,158,54)" fg:x="812" fg:w="4"/><text x="65.6811%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="65.5117%" y="421" width="0.2417%" height="15" fill="rgb(218,99,29)" fg:x="813" fg:w="3"/><text x="65.7617%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.5117%" y="405" width="0.2417%" height="15" fill="rgb(226,29,7)" fg:x="813" fg:w="3"/><text x="65.7617%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="65.5117%" y="389" width="0.2417%" height="15" fill="rgb(206,178,46)" fg:x="813" fg:w="3"/><text x="65.7617%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="65.5117%" y="373" width="0.2417%" height="15" fill="rgb(205,169,32)" fg:x="813" fg:w="3"/><text x="65.7617%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="65.6728%" y="357" width="0.0806%" height="15" fill="rgb(217,4,13)" fg:x="815" fg:w="1"/><text x="65.9228%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="65.6728%" y="341" width="0.0806%" height="15" fill="rgb(210,140,37)" fg:x="815" fg:w="1"/><text x="65.9228%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.7534%" y="517" width="0.0806%" height="15" fill="rgb(229,80,10)" fg:x="816" fg:w="1"/><text x="66.0034%" y="527.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8340%" y="501" width="0.0806%" height="15" fill="rgb(212,175,34)" fg:x="817" fg:w="1"/><text x="66.0840%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8340%" y="485" width="0.0806%" height="15" fill="rgb(216,207,24)" fg:x="817" fg:w="1"/><text x="66.0840%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8340%" y="469" width="0.0806%" height="15" fill="rgb(234,163,3)" fg:x="817" fg:w="1"/><text x="66.0840%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="65.8340%" y="453" width="0.0806%" height="15" fill="rgb(248,101,16)" fg:x="817" fg:w="1"/><text x="66.0840%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8340%" y="437" width="0.0806%" height="15" fill="rgb(209,152,54)" fg:x="817" fg:w="1"/><text x="66.0840%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="65.8340%" y="421" width="0.0806%" height="15" fill="rgb(229,124,51)" fg:x="817" fg:w="1"/><text x="66.0840%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="65.8340%" y="405" width="0.0806%" height="15" fill="rgb(219,83,18)" fg:x="817" fg:w="1"/><text x="66.0840%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="65.8340%" y="389" width="0.0806%" height="15" fill="rgb(206,29,38)" fg:x="817" fg:w="1"/><text x="66.0840%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="65.8340%" y="373" width="0.0806%" height="15" fill="rgb(245,123,23)" fg:x="817" fg:w="1"/><text x="66.0840%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8340%" y="357" width="0.0806%" height="15" fill="rgb(238,50,33)" fg:x="817" fg:w="1"/><text x="66.0840%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="65.8340%" y="341" width="0.0806%" height="15" fill="rgb(234,165,23)" fg:x="817" fg:w="1"/><text x="66.0840%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="65.8340%" y="325" width="0.0806%" height="15" fill="rgb(211,82,31)" fg:x="817" fg:w="1"/><text x="66.0840%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="65.8340%" y="309" width="0.0806%" height="15" fill="rgb(224,166,46)" fg:x="817" fg:w="1"/><text x="66.0840%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="65.8340%" y="293" width="0.0806%" height="15" fill="rgb(211,13,8)" fg:x="817" fg:w="1"/><text x="66.0840%" y="303.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="65.8340%" y="277" width="0.0806%" height="15" fill="rgb(212,7,42)" fg:x="817" fg:w="1"/><text x="66.0840%" y="287.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="65.8340%" y="261" width="0.0806%" height="15" fill="rgb(249,102,19)" fg:x="817" fg:w="1"/><text x="66.0840%" y="271.50"></text></g><g><title>&lt;&amp;kernel::model::EntityPtr as core::convert::Into&lt;kernel::model::entity::EntityRef&gt;&gt;::into (1 samples, 0.08%)</title><rect x="65.9146%" y="421" width="0.0806%" height="15" fill="rgb(225,41,13)" fg:x="818" fg:w="1"/><text x="66.1646%" y="431.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="65.9146%" y="501" width="0.1612%" height="15" fill="rgb(220,65,27)" fg:x="818" fg:w="2"/><text x="66.1646%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="65.9146%" y="485" width="0.1612%" height="15" fill="rgb(206,4,41)" fg:x="818" fg:w="2"/><text x="66.1646%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="65.9146%" y="469" width="0.1612%" height="15" fill="rgb(219,60,39)" fg:x="818" fg:w="2"/><text x="66.1646%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="65.9146%" y="453" width="0.1612%" height="15" fill="rgb(226,4,38)" fg:x="818" fg:w="2"/><text x="66.1646%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (2 samples, 0.16%)</title><rect x="65.9146%" y="437" width="0.1612%" height="15" fill="rgb(250,52,3)" fg:x="818" fg:w="2"/><text x="66.1646%" y="447.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="65.9952%" y="421" width="0.0806%" height="15" fill="rgb(234,93,0)" fg:x="819" fg:w="1"/><text x="66.2452%" y="431.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (5 samples, 0.40%)</title><rect x="65.7534%" y="533" width="0.4029%" height="15" fill="rgb(251,47,47)" fg:x="816" fg:w="5"/><text x="66.0034%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="65.8340%" y="517" width="0.3223%" height="15" fill="rgb(205,166,47)" fg:x="817" fg:w="4"/><text x="66.0840%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="66.0757%" y="501" width="0.0806%" height="15" fill="rgb(231,148,8)" fg:x="820" fg:w="1"/><text x="66.3257%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="66.1563%" y="501" width="0.1612%" height="15" fill="rgb(244,185,19)" fg:x="821" fg:w="2"/><text x="66.4063%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.2369%" y="485" width="0.0806%" height="15" fill="rgb(224,201,45)" fg:x="822" fg:w="1"/><text x="66.4869%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="66.3175%" y="501" width="0.0806%" height="15" fill="rgb(240,77,39)" fg:x="823" fg:w="1"/><text x="66.5675%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (1 samples, 0.08%)</title><rect x="66.3981%" y="501" width="0.0806%" height="15" fill="rgb(248,211,29)" fg:x="824" fg:w="1"/><text x="66.6481%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="66.3981%" y="485" width="0.0806%" height="15" fill="rgb(232,214,46)" fg:x="824" fg:w="1"/><text x="66.6481%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="66.3981%" y="469" width="0.0806%" height="15" fill="rgb(213,99,54)" fg:x="824" fg:w="1"/><text x="66.6481%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.3981%" y="453" width="0.0806%" height="15" fill="rgb(240,19,46)" fg:x="824" fg:w="1"/><text x="66.6481%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.4786%" y="469" width="0.0806%" height="15" fill="rgb(243,89,10)" fg:x="825" fg:w="1"/><text x="66.7286%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (6 samples, 0.48%)</title><rect x="66.1563%" y="533" width="0.4835%" height="15" fill="rgb(249,28,32)" fg:x="821" fg:w="6"/><text x="66.4063%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (6 samples, 0.48%)</title><rect x="66.1563%" y="517" width="0.4835%" height="15" fill="rgb(253,30,9)" fg:x="821" fg:w="6"/><text x="66.4063%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (2 samples, 0.16%)</title><rect x="66.4786%" y="501" width="0.1612%" height="15" fill="rgb(217,2,26)" fg:x="825" fg:w="2"/><text x="66.7286%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="66.4786%" y="485" width="0.1612%" height="15" fill="rgb(220,28,10)" fg:x="825" fg:w="2"/><text x="66.7286%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="66.5592%" y="469" width="0.0806%" height="15" fill="rgb(228,167,49)" fg:x="826" fg:w="1"/><text x="66.8092%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="66.5592%" y="453" width="0.0806%" height="15" fill="rgb(238,212,3)" fg:x="826" fg:w="1"/><text x="66.8092%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="66.5592%" y="437" width="0.0806%" height="15" fill="rgb(229,134,44)" fg:x="826" fg:w="1"/><text x="66.8092%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.5592%" y="421" width="0.0806%" height="15" fill="rgb(208,71,4)" fg:x="826" fg:w="1"/><text x="66.8092%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="66.5592%" y="405" width="0.0806%" height="15" fill="rgb(221,205,45)" fg:x="826" fg:w="1"/><text x="66.8092%" y="415.50"></text></g><g><title>__libc_free (2 samples, 0.16%)</title><rect x="66.6398%" y="517" width="0.1612%" height="15" fill="rgb(215,132,38)" fg:x="827" fg:w="2"/><text x="66.8898%" y="527.50"></text></g><g><title>core::iter::adapters::try_process (2 samples, 0.16%)</title><rect x="66.8010%" y="517" width="0.1612%" height="15" fill="rgb(227,158,6)" fg:x="829" fg:w="2"/><text x="67.0510%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="66.8010%" y="501" width="0.1612%" height="15" fill="rgb(250,10,38)" fg:x="829" fg:w="2"/><text x="67.0510%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="66.8010%" y="485" width="0.1612%" height="15" fill="rgb(225,171,40)" fg:x="829" fg:w="2"/><text x="67.0510%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (2 samples, 0.16%)</title><rect x="66.8010%" y="469" width="0.1612%" height="15" fill="rgb(238,17,43)" fg:x="829" fg:w="2"/><text x="67.0510%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="66.8010%" y="453" width="0.1612%" height="15" fill="rgb(208,145,4)" fg:x="829" fg:w="2"/><text x="67.0510%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="66.8010%" y="437" width="0.1612%" height="15" fill="rgb(232,82,7)" fg:x="829" fg:w="2"/><text x="67.0510%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="66.8010%" y="421" width="0.1612%" height="15" fill="rgb(205,166,38)" fg:x="829" fg:w="2"/><text x="67.0510%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="405" width="0.0806%" height="15" fill="rgb(240,228,4)" fg:x="830" fg:w="1"/><text x="67.1315%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="66.8815%" y="389" width="0.0806%" height="15" fill="rgb(233,121,40)" fg:x="830" fg:w="1"/><text x="67.1315%" y="399.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="373" width="0.0806%" height="15" fill="rgb(243,84,30)" fg:x="830" fg:w="1"/><text x="67.1315%" y="383.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="66.8815%" y="357" width="0.0806%" height="15" fill="rgb(235,81,48)" fg:x="830" fg:w="1"/><text x="67.1315%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="66.9621%" y="469" width="0.0806%" height="15" fill="rgb(218,137,0)" fg:x="831" fg:w="1"/><text x="67.2121%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="66.9621%" y="453" width="0.0806%" height="15" fill="rgb(223,151,48)" fg:x="831" fg:w="1"/><text x="67.2121%" y="463.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="67.0427%" y="469" width="0.0806%" height="15" fill="rgb(247,30,19)" fg:x="832" fg:w="1"/><text x="67.2927%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="67.2039%" y="341" width="0.0806%" height="15" fill="rgb(205,129,29)" fg:x="834" fg:w="1"/><text x="67.4539%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="67.2844%" y="309" width="0.0806%" height="15" fill="rgb(222,29,2)" fg:x="835" fg:w="1"/><text x="67.5344%" y="319.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="67.2844%" y="293" width="0.0806%" height="15" fill="rgb(232,145,33)" fg:x="835" fg:w="1"/><text x="67.5344%" y="303.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (6 samples, 0.48%)</title><rect x="66.9621%" y="485" width="0.4835%" height="15" fill="rgb(217,30,31)" fg:x="831" fg:w="6"/><text x="67.2121%" y="495.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="67.1233%" y="469" width="0.3223%" height="15" fill="rgb(243,22,52)" fg:x="833" fg:w="4"/><text x="67.3733%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="67.1233%" y="453" width="0.3223%" height="15" fill="rgb(254,228,14)" fg:x="833" fg:w="4"/><text x="67.3733%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="67.2039%" y="437" width="0.2417%" height="15" fill="rgb(231,45,50)" fg:x="834" fg:w="3"/><text x="67.4539%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2039%" y="421" width="0.2417%" height="15" fill="rgb(248,125,3)" fg:x="834" fg:w="3"/><text x="67.4539%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="67.2039%" y="405" width="0.2417%" height="15" fill="rgb(213,76,9)" fg:x="834" fg:w="3"/><text x="67.4539%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2039%" y="389" width="0.2417%" height="15" fill="rgb(238,108,21)" fg:x="834" fg:w="3"/><text x="67.4539%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="67.2039%" y="373" width="0.2417%" height="15" fill="rgb(229,214,19)" fg:x="834" fg:w="3"/><text x="67.4539%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="67.2039%" y="357" width="0.2417%" height="15" fill="rgb(252,201,5)" fg:x="834" fg:w="3"/><text x="67.4539%" y="367.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="67.2844%" y="341" width="0.1612%" height="15" fill="rgb(233,165,49)" fg:x="835" fg:w="2"/><text x="67.5344%" y="351.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="67.2844%" y="325" width="0.1612%" height="15" fill="rgb(208,165,19)" fg:x="835" fg:w="2"/><text x="67.5344%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="67.3650%" y="309" width="0.0806%" height="15" fill="rgb(216,220,31)" fg:x="836" fg:w="1"/><text x="67.6150%" y="319.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="67.3650%" y="293" width="0.0806%" height="15" fill="rgb(214,8,31)" fg:x="836" fg:w="1"/><text x="67.6150%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="67.3650%" y="277" width="0.0806%" height="15" fill="rgb(220,32,32)" fg:x="836" fg:w="1"/><text x="67.6150%" y="287.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="67.3650%" y="261" width="0.0806%" height="15" fill="rgb(237,172,34)" fg:x="836" fg:w="1"/><text x="67.6150%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="67.3650%" y="245" width="0.0806%" height="15" fill="rgb(240,209,5)" fg:x="836" fg:w="1"/><text x="67.6150%" y="255.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="67.4456%" y="469" width="0.0806%" height="15" fill="rgb(221,219,1)" fg:x="837" fg:w="1"/><text x="67.6956%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="67.4456%" y="453" width="0.0806%" height="15" fill="rgb(237,90,36)" fg:x="837" fg:w="1"/><text x="67.6956%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="67.6068%" y="373" width="0.2417%" height="15" fill="rgb(245,14,51)" fg:x="839" fg:w="3"/><text x="67.8568%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="357" width="0.0806%" height="15" fill="rgb(211,71,49)" fg:x="841" fg:w="1"/><text x="68.0179%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.7679%" y="341" width="0.0806%" height="15" fill="rgb(230,223,9)" fg:x="841" fg:w="1"/><text x="68.0179%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.7679%" y="325" width="0.0806%" height="15" fill="rgb(212,33,31)" fg:x="841" fg:w="1"/><text x="68.0179%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="309" width="0.0806%" height="15" fill="rgb(218,141,5)" fg:x="841" fg:w="1"/><text x="68.0179%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.7679%" y="293" width="0.0806%" height="15" fill="rgb(239,194,8)" fg:x="841" fg:w="1"/><text x="68.0179%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="277" width="0.0806%" height="15" fill="rgb(225,119,29)" fg:x="841" fg:w="1"/><text x="68.0179%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.7679%" y="261" width="0.0806%" height="15" fill="rgb(233,32,3)" fg:x="841" fg:w="1"/><text x="68.0179%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.7679%" y="245" width="0.0806%" height="15" fill="rgb(248,126,40)" fg:x="841" fg:w="1"/><text x="68.0179%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.7679%" y="229" width="0.0806%" height="15" fill="rgb(213,102,53)" fg:x="841" fg:w="1"/><text x="68.0179%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.7679%" y="213" width="0.0806%" height="15" fill="rgb(212,69,15)" fg:x="841" fg:w="1"/><text x="68.0179%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.7679%" y="197" width="0.0806%" height="15" fill="rgb(253,39,34)" fg:x="841" fg:w="1"/><text x="68.0179%" y="207.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="67.7679%" y="181" width="0.0806%" height="15" fill="rgb(205,189,54)" fg:x="841" fg:w="1"/><text x="68.0179%" y="191.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="67.7679%" y="165" width="0.0806%" height="15" fill="rgb(234,229,45)" fg:x="841" fg:w="1"/><text x="68.0179%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="67.5262%" y="405" width="0.4029%" height="15" fill="rgb(243,79,48)" fg:x="838" fg:w="5"/><text x="67.7762%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="67.5262%" y="389" width="0.4029%" height="15" fill="rgb(206,71,50)" fg:x="838" fg:w="5"/><text x="67.7762%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8485%" y="373" width="0.0806%" height="15" fill="rgb(209,32,17)" fg:x="842" fg:w="1"/><text x="68.0985%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.8485%" y="357" width="0.0806%" height="15" fill="rgb(219,229,6)" fg:x="842" fg:w="1"/><text x="68.0985%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.8485%" y="341" width="0.0806%" height="15" fill="rgb(226,25,27)" fg:x="842" fg:w="1"/><text x="68.0985%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.8485%" y="325" width="0.0806%" height="15" fill="rgb(218,185,23)" fg:x="842" fg:w="1"/><text x="68.0985%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.8485%" y="309" width="0.0806%" height="15" fill="rgb(242,123,5)" fg:x="842" fg:w="1"/><text x="68.0985%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8485%" y="293" width="0.0806%" height="15" fill="rgb(215,53,19)" fg:x="842" fg:w="1"/><text x="68.0985%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.8485%" y="277" width="0.0806%" height="15" fill="rgb(233,20,30)" fg:x="842" fg:w="1"/><text x="68.0985%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.8485%" y="261" width="0.0806%" height="15" fill="rgb(209,67,20)" fg:x="842" fg:w="1"/><text x="68.0985%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.8485%" y="245" width="0.0806%" height="15" fill="rgb(227,181,50)" fg:x="842" fg:w="1"/><text x="68.0985%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.8485%" y="229" width="0.0806%" height="15" fill="rgb(252,75,38)" fg:x="842" fg:w="1"/><text x="68.0985%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.8485%" y="213" width="0.0806%" height="15" fill="rgb(235,9,33)" fg:x="842" fg:w="1"/><text x="68.0985%" y="223.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="67.8485%" y="197" width="0.0806%" height="15" fill="rgb(208,87,30)" fg:x="842" fg:w="1"/><text x="68.0985%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.5262%" y="437" width="0.4835%" height="15" fill="rgb(215,199,39)" fg:x="838" fg:w="6"/><text x="67.7762%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="67.5262%" y="421" width="0.4835%" height="15" fill="rgb(246,208,12)" fg:x="838" fg:w="6"/><text x="67.7762%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9291%" y="405" width="0.0806%" height="15" fill="rgb(206,195,10)" fg:x="843" fg:w="1"/><text x="68.1791%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="67.9291%" y="389" width="0.0806%" height="15" fill="rgb(244,1,30)" fg:x="843" fg:w="1"/><text x="68.1791%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="67.9291%" y="373" width="0.0806%" height="15" fill="rgb(230,83,5)" fg:x="843" fg:w="1"/><text x="68.1791%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="67.9291%" y="357" width="0.0806%" height="15" fill="rgb(239,62,17)" fg:x="843" fg:w="1"/><text x="68.1791%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="67.9291%" y="341" width="0.0806%" height="15" fill="rgb(252,193,41)" fg:x="843" fg:w="1"/><text x="68.1791%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.9291%" y="325" width="0.0806%" height="15" fill="rgb(216,142,19)" fg:x="843" fg:w="1"/><text x="68.1791%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="67.9291%" y="309" width="0.0806%" height="15" fill="rgb(240,81,38)" fg:x="843" fg:w="1"/><text x="68.1791%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="67.9291%" y="293" width="0.0806%" height="15" fill="rgb(240,109,40)" fg:x="843" fg:w="1"/><text x="68.1791%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="67.9291%" y="277" width="0.0806%" height="15" fill="rgb(230,123,10)" fg:x="843" fg:w="1"/><text x="68.1791%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="67.9291%" y="261" width="0.0806%" height="15" fill="rgb(253,42,32)" fg:x="843" fg:w="1"/><text x="68.1791%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="67.9291%" y="245" width="0.0806%" height="15" fill="rgb(218,154,8)" fg:x="843" fg:w="1"/><text x="68.1791%" y="255.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="67.9291%" y="229" width="0.0806%" height="15" fill="rgb(216,197,10)" fg:x="843" fg:w="1"/><text x="68.1791%" y="239.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (14 samples, 1.13%)</title><rect x="66.9621%" y="517" width="1.1281%" height="15" fill="rgb(223,107,12)" fg:x="831" fg:w="14"/><text x="67.2121%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (14 samples, 1.13%)</title><rect x="66.9621%" y="501" width="1.1281%" height="15" fill="rgb(241,174,42)" fg:x="831" fg:w="14"/><text x="67.2121%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (8 samples, 0.64%)</title><rect x="67.4456%" y="485" width="0.6446%" height="15" fill="rgb(231,78,20)" fg:x="837" fg:w="8"/><text x="67.6956%" y="495.50"></text></g><g><title>kernel::model::props::load_props (7 samples, 0.56%)</title><rect x="67.5262%" y="469" width="0.5641%" height="15" fill="rgb(230,208,49)" fg:x="838" fg:w="7"/><text x="67.7762%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="67.5262%" y="453" width="0.5641%" height="15" fill="rgb(238,11,34)" fg:x="838" fg:w="7"/><text x="67.7762%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="68.0097%" y="437" width="0.0806%" height="15" fill="rgb(210,130,26)" fg:x="844" fg:w="1"/><text x="68.2597%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="68.0097%" y="421" width="0.0806%" height="15" fill="rgb(242,131,11)" fg:x="844" fg:w="1"/><text x="68.2597%" y="431.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (20 samples, 1.61%)</title><rect x="66.6398%" y="533" width="1.6116%" height="15" fill="rgb(237,38,28)" fg:x="827" fg:w="20"/><text x="66.8898%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="68.0902%" y="517" width="0.1612%" height="15" fill="rgb(244,180,43)" fg:x="845" fg:w="2"/><text x="68.3402%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.1708%" y="501" width="0.0806%" height="15" fill="rgb(214,171,19)" fg:x="846" fg:w="1"/><text x="68.4208%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="68.1708%" y="485" width="0.0806%" height="15" fill="rgb(252,101,45)" fg:x="846" fg:w="1"/><text x="68.4208%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="68.2514%" y="517" width="0.0806%" height="15" fill="rgb(211,96,33)" fg:x="847" fg:w="1"/><text x="68.5014%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="68.2514%" y="501" width="0.0806%" height="15" fill="rgb(207,80,25)" fg:x="847" fg:w="1"/><text x="68.5014%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.08%)</title><rect x="68.2514%" y="485" width="0.0806%" height="15" fill="rgb(225,15,35)" fg:x="847" fg:w="1"/><text x="68.5014%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (131 samples, 10.56%)</title><rect x="57.8566%" y="565" width="10.5560%" height="15" fill="rgb(214,93,43)" fg:x="718" fg:w="131"/><text x="58.1066%" y="575.50">&lt;plugins_core::..</text></g><g><title>plugins_core::tools::move_between (50 samples, 4.03%)</title><rect x="64.3836%" y="549" width="4.0290%" height="15" fill="rgb(248,42,37)" fg:x="799" fg:w="50"/><text x="64.6336%" y="559.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (2 samples, 0.16%)</title><rect x="68.2514%" y="533" width="0.1612%" height="15" fill="rgb(217,135,32)" fg:x="847" fg:w="2"/><text x="68.5014%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (1 samples, 0.08%)</title><rect x="68.3320%" y="517" width="0.0806%" height="15" fill="rgb(216,74,28)" fg:x="848" fg:w="1"/><text x="68.5820%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="68.3320%" y="501" width="0.0806%" height="15" fill="rgb(247,108,16)" fg:x="848" fg:w="1"/><text x="68.5820%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="68.3320%" y="485" width="0.0806%" height="15" fill="rgb(205,219,30)" fg:x="848" fg:w="1"/><text x="68.5820%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_identity (1 samples, 0.08%)</title><rect x="68.3320%" y="469" width="0.0806%" height="15" fill="rgb(241,122,9)" fg:x="848" fg:w="1"/><text x="68.5820%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (2 samples, 0.16%)</title><rect x="68.4126%" y="517" width="0.1612%" height="15" fill="rgb(216,148,50)" fg:x="849" fg:w="2"/><text x="68.6626%" y="527.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="68.4932%" y="501" width="0.0806%" height="15" fill="rgb(226,154,2)" fg:x="850" fg:w="1"/><text x="68.7432%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.40%)</title><rect x="68.5737%" y="501" width="0.4029%" height="15" fill="rgb(220,128,1)" fg:x="851" fg:w="5"/><text x="68.8237%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.40%)</title><rect x="68.5737%" y="485" width="0.4029%" height="15" fill="rgb(245,185,29)" fg:x="851" fg:w="5"/><text x="68.8237%" y="495.50"></text></g><g><title>realloc (5 samples, 0.40%)</title><rect x="68.5737%" y="469" width="0.4029%" height="15" fill="rgb(243,161,2)" fg:x="851" fg:w="5"/><text x="68.8237%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (2 samples, 0.16%)</title><rect x="68.9766%" y="453" width="0.1612%" height="15" fill="rgb(249,215,17)" fg:x="856" fg:w="2"/><text x="69.2266%" y="463.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="69.0572%" y="437" width="0.0806%" height="15" fill="rgb(237,67,11)" fg:x="857" fg:w="1"/><text x="69.3072%" y="447.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="69.0572%" y="421" width="0.0806%" height="15" fill="rgb(239,17,24)" fg:x="857" fg:w="1"/><text x="69.3072%" y="431.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (5 samples, 0.40%)</title><rect x="68.9766%" y="485" width="0.4029%" height="15" fill="rgb(215,97,29)" fg:x="856" fg:w="5"/><text x="69.2266%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (5 samples, 0.40%)</title><rect x="68.9766%" y="469" width="0.4029%" height="15" fill="rgb(253,228,42)" fg:x="856" fg:w="5"/><text x="69.2266%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::new (3 samples, 0.24%)</title><rect x="69.1378%" y="453" width="0.2417%" height="15" fill="rgb(240,85,2)" fg:x="858" fg:w="3"/><text x="69.3878%" y="463.50"></text></g><g><title>alloc::fmt::format::format_inner (3 samples, 0.24%)</title><rect x="69.1378%" y="437" width="0.2417%" height="15" fill="rgb(214,155,4)" fg:x="858" fg:w="3"/><text x="69.3878%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.24%)</title><rect x="69.1378%" y="421" width="0.2417%" height="15" fill="rgb(247,120,22)" fg:x="858" fg:w="3"/><text x="69.3878%" y="431.50"></text></g><g><title>core::fmt::write (3 samples, 0.24%)</title><rect x="69.1378%" y="405" width="0.2417%" height="15" fill="rgb(211,208,6)" fg:x="858" fg:w="3"/><text x="69.3878%" y="415.50"></text></g><g><title>core::fmt::rt::Argument::fmt (3 samples, 0.24%)</title><rect x="69.1378%" y="389" width="0.2417%" height="15" fill="rgb(235,99,41)" fg:x="858" fg:w="3"/><text x="69.3878%" y="399.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (3 samples, 0.24%)</title><rect x="69.1378%" y="373" width="0.2417%" height="15" fill="rgb(223,28,8)" fg:x="858" fg:w="3"/><text x="69.3878%" y="383.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.16%)</title><rect x="69.2184%" y="357" width="0.1612%" height="15" fill="rgb(212,71,20)" fg:x="859" fg:w="2"/><text x="69.4684%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.2990%" y="341" width="0.0806%" height="15" fill="rgb(206,85,3)" fg:x="860" fg:w="1"/><text x="69.5490%" y="351.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.2990%" y="325" width="0.0806%" height="15" fill="rgb(244,180,11)" fg:x="860" fg:w="1"/><text x="69.5490%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.08%)</title><rect x="69.2990%" y="309" width="0.0806%" height="15" fill="rgb(223,16,21)" fg:x="860" fg:w="1"/><text x="69.5490%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="69.2990%" y="293" width="0.0806%" height="15" fill="rgb(238,85,42)" fg:x="860" fg:w="1"/><text x="69.5490%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="69.2990%" y="277" width="0.0806%" height="15" fill="rgb(205,85,8)" fg:x="860" fg:w="1"/><text x="69.5490%" y="287.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="69.2990%" y="261" width="0.0806%" height="15" fill="rgb(217,190,15)" fg:x="860" fg:w="1"/><text x="69.5490%" y="271.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.08%)</title><rect x="69.2990%" y="245" width="0.0806%" height="15" fill="rgb(243,192,23)" fg:x="860" fg:w="1"/><text x="69.5490%" y="255.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.08%)</title><rect x="69.2990%" y="229" width="0.0806%" height="15" fill="rgb(223,220,37)" fg:x="860" fg:w="1"/><text x="69.5490%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.2990%" y="213" width="0.0806%" height="15" fill="rgb(208,41,17)" fg:x="860" fg:w="1"/><text x="69.5490%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="69.2990%" y="197" width="0.0806%" height="15" fill="rgb(224,188,7)" fg:x="860" fg:w="1"/><text x="69.5490%" y="207.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="69.2990%" y="181" width="0.0806%" height="15" fill="rgb(236,16,50)" fg:x="860" fg:w="1"/><text x="69.5490%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="69.2990%" y="165" width="0.0806%" height="15" fill="rgb(238,6,24)" fg:x="860" fg:w="1"/><text x="69.5490%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="69.2990%" y="149" width="0.0806%" height="15" fill="rgb(253,67,45)" fg:x="860" fg:w="1"/><text x="69.5490%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="69.2990%" y="133" width="0.0806%" height="15" fill="rgb(210,89,32)" fg:x="860" fg:w="1"/><text x="69.5490%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.2990%" y="117" width="0.0806%" height="15" fill="rgb(208,89,9)" fg:x="860" fg:w="1"/><text x="69.5490%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="69.2990%" y="101" width="0.0806%" height="15" fill="rgb(222,180,44)" fg:x="860" fg:w="1"/><text x="69.5490%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="69.2990%" y="85" width="0.0806%" height="15" fill="rgb(250,181,46)" fg:x="860" fg:w="1"/><text x="69.5490%" y="95.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="69.3795%" y="453" width="0.1612%" height="15" fill="rgb(210,190,26)" fg:x="861" fg:w="2"/><text x="69.6295%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="69.4601%" y="437" width="0.0806%" height="15" fill="rgb(253,49,13)" fg:x="862" fg:w="1"/><text x="69.7101%" y="447.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="69.5407%" y="453" width="0.0806%" height="15" fill="rgb(240,184,42)" fg:x="863" fg:w="1"/><text x="69.7907%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="69.5407%" y="437" width="0.0806%" height="15" fill="rgb(246,59,37)" fg:x="863" fg:w="1"/><text x="69.7907%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="69.5407%" y="421" width="0.0806%" height="15" fill="rgb(207,134,54)" fg:x="863" fg:w="1"/><text x="69.7907%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.6213%" y="421" width="0.0806%" height="15" fill="rgb(250,122,24)" fg:x="864" fg:w="1"/><text x="69.8713%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="69.6213%" y="453" width="0.2417%" height="15" fill="rgb(239,206,3)" fg:x="864" fg:w="3"/><text x="69.8713%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="69.6213%" y="437" width="0.2417%" height="15" fill="rgb(253,220,32)" fg:x="864" fg:w="3"/><text x="69.8713%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="69.7019%" y="421" width="0.1612%" height="15" fill="rgb(209,217,48)" fg:x="865" fg:w="2"/><text x="69.9519%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="69.7824%" y="405" width="0.0806%" height="15" fill="rgb(242,91,39)" fg:x="866" fg:w="1"/><text x="70.0324%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="69.7824%" y="389" width="0.0806%" height="15" fill="rgb(228,4,13)" fg:x="866" fg:w="1"/><text x="70.0324%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="69.7824%" y="373" width="0.0806%" height="15" fill="rgb(223,133,4)" fg:x="866" fg:w="1"/><text x="70.0324%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="69.8630%" y="421" width="0.0806%" height="15" fill="rgb(215,105,30)" fg:x="867" fg:w="1"/><text x="70.1130%" y="431.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (18 samples, 1.45%)</title><rect x="68.5737%" y="517" width="1.4504%" height="15" fill="rgb(230,9,4)" fg:x="851" fg:w="18"/><text x="68.8237%" y="527.50"></text></g><g><title>plugins_core::tools::contained_by (13 samples, 1.05%)</title><rect x="68.9766%" y="501" width="1.0475%" height="15" fill="rgb(248,15,2)" fg:x="856" fg:w="13"/><text x="69.2266%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (8 samples, 0.64%)</title><rect x="69.3795%" y="485" width="0.6446%" height="15" fill="rgb(208,210,22)" fg:x="861" fg:w="8"/><text x="69.6295%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (8 samples, 0.64%)</title><rect x="69.3795%" y="469" width="0.6446%" height="15" fill="rgb(208,112,41)" fg:x="861" fg:w="8"/><text x="69.6295%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="69.8630%" y="453" width="0.1612%" height="15" fill="rgb(232,83,14)" fg:x="867" fg:w="2"/><text x="70.1130%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="69.8630%" y="437" width="0.1612%" height="15" fill="rgb(229,65,11)" fg:x="867" fg:w="2"/><text x="70.1130%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="69.9436%" y="421" width="0.0806%" height="15" fill="rgb(228,126,24)" fg:x="868" fg:w="1"/><text x="70.1936%" y="431.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="69.9436%" y="405" width="0.0806%" height="15" fill="rgb(218,66,33)" fg:x="868" fg:w="1"/><text x="70.1936%" y="415.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="69.9436%" y="389" width="0.0806%" height="15" fill="rgb(251,49,52)" fg:x="868" fg:w="1"/><text x="70.1936%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="69.9436%" y="373" width="0.0806%" height="15" fill="rgb(219,46,37)" fg:x="868" fg:w="1"/><text x="70.1936%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="69.9436%" y="357" width="0.0806%" height="15" fill="rgb(213,53,49)" fg:x="868" fg:w="1"/><text x="70.1936%" y="367.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="69.9436%" y="341" width="0.0806%" height="15" fill="rgb(214,134,1)" fg:x="868" fg:w="1"/><text x="70.1936%" y="351.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="70.0242%" y="453" width="0.0806%" height="15" fill="rgb(208,139,43)" fg:x="869" fg:w="1"/><text x="70.2742%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="70.2659%" y="389" width="0.0806%" height="15" fill="rgb(231,105,35)" fg:x="872" fg:w="1"/><text x="70.5159%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2659%" y="373" width="0.0806%" height="15" fill="rgb(247,189,9)" fg:x="872" fg:w="1"/><text x="70.5159%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.2659%" y="357" width="0.0806%" height="15" fill="rgb(252,48,51)" fg:x="872" fg:w="1"/><text x="70.5159%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.2659%" y="341" width="0.0806%" height="15" fill="rgb(209,121,1)" fg:x="872" fg:w="1"/><text x="70.5159%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.2659%" y="325" width="0.0806%" height="15" fill="rgb(231,40,26)" fg:x="872" fg:w="1"/><text x="70.5159%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.2659%" y="309" width="0.0806%" height="15" fill="rgb(251,8,13)" fg:x="872" fg:w="1"/><text x="70.5159%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2659%" y="293" width="0.0806%" height="15" fill="rgb(231,110,2)" fg:x="872" fg:w="1"/><text x="70.5159%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.2659%" y="277" width="0.0806%" height="15" fill="rgb(216,153,22)" fg:x="872" fg:w="1"/><text x="70.5159%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.2659%" y="261" width="0.0806%" height="15" fill="rgb(249,116,49)" fg:x="872" fg:w="1"/><text x="70.5159%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.2659%" y="245" width="0.0806%" height="15" fill="rgb(230,89,2)" fg:x="872" fg:w="1"/><text x="70.5159%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.2659%" y="229" width="0.0806%" height="15" fill="rgb(231,125,23)" fg:x="872" fg:w="1"/><text x="70.5159%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.2659%" y="213" width="0.0806%" height="15" fill="rgb(212,217,18)" fg:x="872" fg:w="1"/><text x="70.5159%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.2659%" y="197" width="0.0806%" height="15" fill="rgb(210,21,33)" fg:x="872" fg:w="1"/><text x="70.5159%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="70.1853%" y="421" width="0.2417%" height="15" fill="rgb(241,97,9)" fg:x="871" fg:w="3"/><text x="70.4353%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="70.2659%" y="405" width="0.1612%" height="15" fill="rgb(221,35,31)" fg:x="872" fg:w="2"/><text x="70.5159%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3465%" y="389" width="0.0806%" height="15" fill="rgb(251,23,23)" fg:x="873" fg:w="1"/><text x="70.5965%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="70.3465%" y="373" width="0.0806%" height="15" fill="rgb(227,165,2)" fg:x="873" fg:w="1"/><text x="70.5965%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="70.3465%" y="357" width="0.0806%" height="15" fill="rgb(242,24,2)" fg:x="873" fg:w="1"/><text x="70.5965%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="70.3465%" y="341" width="0.0806%" height="15" fill="rgb(242,138,51)" fg:x="873" fg:w="1"/><text x="70.5965%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="70.3465%" y="325" width="0.0806%" height="15" fill="rgb(220,219,5)" fg:x="873" fg:w="1"/><text x="70.5965%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3465%" y="309" width="0.0806%" height="15" fill="rgb(247,53,29)" fg:x="873" fg:w="1"/><text x="70.5965%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="70.3465%" y="293" width="0.0806%" height="15" fill="rgb(233,43,39)" fg:x="873" fg:w="1"/><text x="70.5965%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="70.3465%" y="277" width="0.0806%" height="15" fill="rgb(230,128,54)" fg:x="873" fg:w="1"/><text x="70.5965%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="70.3465%" y="261" width="0.0806%" height="15" fill="rgb(218,20,12)" fg:x="873" fg:w="1"/><text x="70.5965%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="70.3465%" y="245" width="0.0806%" height="15" fill="rgb(206,51,14)" fg:x="873" fg:w="1"/><text x="70.5965%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="70.3465%" y="229" width="0.0806%" height="15" fill="rgb(223,16,35)" fg:x="873" fg:w="1"/><text x="70.5965%" y="239.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="70.3465%" y="213" width="0.0806%" height="15" fill="rgb(226,165,37)" fg:x="873" fg:w="1"/><text x="70.5965%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4271%" y="421" width="0.0806%" height="15" fill="rgb(240,26,21)" fg:x="874" fg:w="1"/><text x="70.6771%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="70.4271%" y="405" width="0.0806%" height="15" fill="rgb(240,72,46)" fg:x="874" fg:w="1"/><text x="70.6771%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4271%" y="389" width="0.0806%" height="15" fill="rgb(211,33,41)" fg:x="874" fg:w="1"/><text x="70.6771%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="70.4271%" y="373" width="0.0806%" height="15" fill="rgb(224,157,46)" fg:x="874" fg:w="1"/><text x="70.6771%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.4271%" y="357" width="0.0806%" height="15" fill="rgb(223,59,19)" fg:x="874" fg:w="1"/><text x="70.6771%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.4271%" y="341" width="0.0806%" height="15" fill="rgb(239,187,1)" fg:x="874" fg:w="1"/><text x="70.6771%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="70.5077%" y="389" width="0.0806%" height="15" fill="rgb(226,95,9)" fg:x="875" fg:w="1"/><text x="70.7577%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="70.5077%" y="373" width="0.0806%" height="15" fill="rgb(234,61,54)" fg:x="875" fg:w="1"/><text x="70.7577%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5882%" y="325" width="0.0806%" height="15" fill="rgb(205,209,47)" fg:x="876" fg:w="1"/><text x="70.8382%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="70.5882%" y="309" width="0.0806%" height="15" fill="rgb(228,7,43)" fg:x="876" fg:w="1"/><text x="70.8382%" y="319.50"></text></g><g><title>kernel::model::entry::Entry::name (10 samples, 0.81%)</title><rect x="70.0242%" y="485" width="0.8058%" height="15" fill="rgb(240,217,52)" fg:x="869" fg:w="10"/><text x="70.2742%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (10 samples, 0.81%)</title><rect x="70.0242%" y="469" width="0.8058%" height="15" fill="rgb(211,178,21)" fg:x="869" fg:w="10"/><text x="70.2742%" y="479.50"></text></g><g><title>kernel::model::props::load_props (9 samples, 0.73%)</title><rect x="70.1048%" y="453" width="0.7252%" height="15" fill="rgb(205,25,34)" fg:x="870" fg:w="9"/><text x="70.3548%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (9 samples, 0.73%)</title><rect x="70.1048%" y="437" width="0.7252%" height="15" fill="rgb(209,57,11)" fg:x="870" fg:w="9"/><text x="70.3548%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (4 samples, 0.32%)</title><rect x="70.5077%" y="421" width="0.3223%" height="15" fill="rgb(221,99,2)" fg:x="875" fg:w="4"/><text x="70.7577%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (4 samples, 0.32%)</title><rect x="70.5077%" y="405" width="0.3223%" height="15" fill="rgb(232,79,22)" fg:x="875" fg:w="4"/><text x="70.7577%" y="415.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="70.5882%" y="389" width="0.2417%" height="15" fill="rgb(221,145,32)" fg:x="876" fg:w="3"/><text x="70.8382%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.5882%" y="373" width="0.2417%" height="15" fill="rgb(236,133,36)" fg:x="876" fg:w="3"/><text x="70.8382%" y="383.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="70.5882%" y="357" width="0.2417%" height="15" fill="rgb(208,224,44)" fg:x="876" fg:w="3"/><text x="70.8382%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="70.5882%" y="341" width="0.2417%" height="15" fill="rgb(235,143,15)" fg:x="876" fg:w="3"/><text x="70.8382%" y="351.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="70.6688%" y="325" width="0.1612%" height="15" fill="rgb(249,83,27)" fg:x="877" fg:w="2"/><text x="70.9188%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="70.6688%" y="309" width="0.1612%" height="15" fill="rgb(238,226,19)" fg:x="877" fg:w="2"/><text x="70.9188%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="70.7494%" y="293" width="0.0806%" height="15" fill="rgb(226,206,27)" fg:x="878" fg:w="1"/><text x="70.9994%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="70.7494%" y="277" width="0.0806%" height="15" fill="rgb(251,182,9)" fg:x="878" fg:w="1"/><text x="70.9994%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="70.7494%" y="261" width="0.0806%" height="15" fill="rgb(212,140,41)" fg:x="878" fg:w="1"/><text x="70.9994%" y="271.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (11 samples, 0.89%)</title><rect x="70.0242%" y="517" width="0.8864%" height="15" fill="rgb(220,106,18)" fg:x="869" fg:w="11"/><text x="70.2742%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (11 samples, 0.89%)</title><rect x="70.0242%" y="501" width="0.8864%" height="15" fill="rgb(252,46,41)" fg:x="869" fg:w="11"/><text x="70.2742%" y="511.50"></text></g><g><title>plugins_core::finding::matches_string (1 samples, 0.08%)</title><rect x="70.8300%" y="485" width="0.0806%" height="15" fill="rgb(209,222,15)" fg:x="879" fg:w="1"/><text x="71.0800%" y="495.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.08%)</title><rect x="70.8300%" y="469" width="0.0806%" height="15" fill="rgb(233,83,50)" fg:x="879" fg:w="1"/><text x="71.0800%" y="479.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8300%" y="453" width="0.0806%" height="15" fill="rgb(205,212,0)" fg:x="879" fg:w="1"/><text x="71.0800%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="70.8300%" y="437" width="0.0806%" height="15" fill="rgb(235,117,51)" fg:x="879" fg:w="1"/><text x="71.0800%" y="447.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.08%)</title><rect x="70.8300%" y="421" width="0.0806%" height="15" fill="rgb(233,133,48)" fg:x="879" fg:w="1"/><text x="71.0800%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (33 samples, 2.66%)</title><rect x="68.4126%" y="549" width="2.6591%" height="15" fill="rgb(219,3,2)" fg:x="849" fg:w="33"/><text x="68.6626%" y="559.50">&lt;e..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (33 samples, 2.66%)</title><rect x="68.4126%" y="533" width="2.6591%" height="15" fill="rgb(225,80,52)" fg:x="849" fg:w="33"/><text x="68.6626%" y="543.50">&lt;p..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (2 samples, 0.16%)</title><rect x="70.9106%" y="517" width="0.1612%" height="15" fill="rgb(235,195,42)" fg:x="880" fg:w="2"/><text x="71.1606%" y="527.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9106%" y="501" width="0.1612%" height="15" fill="rgb(240,207,46)" fg:x="880" fg:w="2"/><text x="71.1606%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9106%" y="485" width="0.1612%" height="15" fill="rgb(236,112,50)" fg:x="880" fg:w="2"/><text x="71.1606%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="70.9106%" y="469" width="0.1612%" height="15" fill="rgb(249,151,27)" fg:x="880" fg:w="2"/><text x="71.1606%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="70.9106%" y="453" width="0.1612%" height="15" fill="rgb(253,223,52)" fg:x="880" fg:w="2"/><text x="71.1606%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="70.9106%" y="437" width="0.1612%" height="15" fill="rgb(215,55,33)" fg:x="880" fg:w="2"/><text x="71.1606%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="70.9106%" y="421" width="0.1612%" height="15" fill="rgb(207,24,17)" fg:x="880" fg:w="2"/><text x="71.1606%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9106%" y="405" width="0.1612%" height="15" fill="rgb(218,169,32)" fg:x="880" fg:w="2"/><text x="71.1606%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="70.9106%" y="389" width="0.1612%" height="15" fill="rgb(209,210,6)" fg:x="880" fg:w="2"/><text x="71.1606%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="70.9106%" y="373" width="0.1612%" height="15" fill="rgb(225,208,8)" fg:x="880" fg:w="2"/><text x="71.1606%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="70.9106%" y="357" width="0.1612%" height="15" fill="rgb(238,14,32)" fg:x="880" fg:w="2"/><text x="71.1606%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="70.9106%" y="341" width="0.1612%" height="15" fill="rgb(211,137,3)" fg:x="880" fg:w="2"/><text x="71.1606%" y="351.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="70.9106%" y="325" width="0.1612%" height="15" fill="rgb(207,171,19)" fg:x="880" fg:w="2"/><text x="71.1606%" y="335.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="70.9106%" y="309" width="0.1612%" height="15" fill="rgb(250,80,8)" fg:x="880" fg:w="2"/><text x="71.1606%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::Entry&gt; (1 samples, 0.08%)</title><rect x="71.0717%" y="549" width="0.0806%" height="15" fill="rgb(209,103,53)" fg:x="882" fg:w="1"/><text x="71.3217%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="71.0717%" y="533" width="0.0806%" height="15" fill="rgb(233,198,10)" fg:x="882" fg:w="1"/><text x="71.3217%" y="543.50"></text></g><g><title>kernel::surround::Surroundings::unpack (2 samples, 0.16%)</title><rect x="71.1523%" y="549" width="0.1612%" height="15" fill="rgb(236,125,25)" fg:x="883" fg:w="2"/><text x="71.4023%" y="559.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.1523%" y="533" width="0.1612%" height="15" fill="rgb(254,182,48)" fg:x="883" fg:w="2"/><text x="71.4023%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.1523%" y="517" width="0.1612%" height="15" fill="rgb(216,108,44)" fg:x="883" fg:w="2"/><text x="71.4023%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="71.1523%" y="501" width="0.1612%" height="15" fill="rgb(222,72,39)" fg:x="883" fg:w="2"/><text x="71.4023%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="71.1523%" y="485" width="0.1612%" height="15" fill="rgb(252,70,39)" fg:x="883" fg:w="2"/><text x="71.4023%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="71.1523%" y="469" width="0.1612%" height="15" fill="rgb(243,99,34)" fg:x="883" fg:w="2"/><text x="71.4023%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="71.1523%" y="453" width="0.1612%" height="15" fill="rgb(252,109,12)" fg:x="883" fg:w="2"/><text x="71.4023%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.1523%" y="437" width="0.1612%" height="15" fill="rgb(211,186,10)" fg:x="883" fg:w="2"/><text x="71.4023%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.16%)</title><rect x="71.1523%" y="421" width="0.1612%" height="15" fill="rgb(246,90,8)" fg:x="883" fg:w="2"/><text x="71.4023%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.16%)</title><rect x="71.1523%" y="405" width="0.1612%" height="15" fill="rgb(226,91,24)" fg:x="883" fg:w="2"/><text x="71.4023%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.16%)</title><rect x="71.1523%" y="389" width="0.1612%" height="15" fill="rgb(216,28,44)" fg:x="883" fg:w="2"/><text x="71.4023%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.16%)</title><rect x="71.1523%" y="373" width="0.1612%" height="15" fill="rgb(229,36,0)" fg:x="883" fg:w="2"/><text x="71.4023%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.16%)</title><rect x="71.1523%" y="357" width="0.1612%" height="15" fill="rgb(245,97,18)" fg:x="883" fg:w="2"/><text x="71.4023%" y="367.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="71.1523%" y="341" width="0.1612%" height="15" fill="rgb(241,97,54)" fg:x="883" fg:w="2"/><text x="71.4023%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3940%" y="453" width="0.0806%" height="15" fill="rgb(234,125,17)" fg:x="886" fg:w="1"/><text x="71.6440%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3940%" y="437" width="0.0806%" height="15" fill="rgb(228,172,39)" fg:x="886" fg:w="1"/><text x="71.6440%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3940%" y="421" width="0.0806%" height="15" fill="rgb(227,169,1)" fg:x="886" fg:w="1"/><text x="71.6440%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.3940%" y="405" width="0.0806%" height="15" fill="rgb(206,13,35)" fg:x="886" fg:w="1"/><text x="71.6440%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3940%" y="389" width="0.0806%" height="15" fill="rgb(211,117,30)" fg:x="886" fg:w="1"/><text x="71.6440%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="71.3940%" y="373" width="0.0806%" height="15" fill="rgb(230,198,4)" fg:x="886" fg:w="1"/><text x="71.6440%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="71.3940%" y="357" width="0.0806%" height="15" fill="rgb(213,87,54)" fg:x="886" fg:w="1"/><text x="71.6440%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="71.3940%" y="341" width="0.0806%" height="15" fill="rgb(248,43,22)" fg:x="886" fg:w="1"/><text x="71.6440%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="71.3940%" y="325" width="0.0806%" height="15" fill="rgb(213,175,48)" fg:x="886" fg:w="1"/><text x="71.6440%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3940%" y="309" width="0.0806%" height="15" fill="rgb(252,55,9)" fg:x="886" fg:w="1"/><text x="71.6440%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="71.3940%" y="293" width="0.0806%" height="15" fill="rgb(231,72,33)" fg:x="886" fg:w="1"/><text x="71.6440%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="71.3940%" y="277" width="0.0806%" height="15" fill="rgb(213,2,54)" fg:x="886" fg:w="1"/><text x="71.6440%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="71.3940%" y="261" width="0.0806%" height="15" fill="rgb(208,88,25)" fg:x="886" fg:w="1"/><text x="71.6440%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="71.3940%" y="245" width="0.0806%" height="15" fill="rgb(215,117,13)" fg:x="886" fg:w="1"/><text x="71.6440%" y="255.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="71.3940%" y="229" width="0.0806%" height="15" fill="rgb(243,147,21)" fg:x="886" fg:w="1"/><text x="71.6440%" y="239.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.08%)</title><rect x="71.3940%" y="213" width="0.0806%" height="15" fill="rgb(208,215,36)" fg:x="886" fg:w="1"/><text x="71.6440%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="453" width="0.0806%" height="15" fill="rgb(238,187,24)" fg:x="887" fg:w="1"/><text x="71.7246%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="437" width="0.0806%" height="15" fill="rgb(214,173,11)" fg:x="887" fg:w="1"/><text x="71.7246%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="421" width="0.0806%" height="15" fill="rgb(222,71,20)" fg:x="887" fg:w="1"/><text x="71.7246%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="405" width="0.0806%" height="15" fill="rgb(242,125,4)" fg:x="887" fg:w="1"/><text x="71.7246%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="389" width="0.0806%" height="15" fill="rgb(217,101,52)" fg:x="887" fg:w="1"/><text x="71.7246%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="71.4746%" y="373" width="0.0806%" height="15" fill="rgb(223,2,50)" fg:x="887" fg:w="1"/><text x="71.7246%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="71.4746%" y="357" width="0.0806%" height="15" fill="rgb(225,197,9)" fg:x="887" fg:w="1"/><text x="71.7246%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="71.4746%" y="341" width="0.0806%" height="15" fill="rgb(234,76,27)" fg:x="887" fg:w="1"/><text x="71.7246%" y="351.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="71.3940%" y="501" width="0.2417%" height="15" fill="rgb(213,161,26)" fg:x="886" fg:w="3"/><text x="71.6440%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.3940%" y="485" width="0.2417%" height="15" fill="rgb(210,228,2)" fg:x="886" fg:w="3"/><text x="71.6440%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.3940%" y="469" width="0.2417%" height="15" fill="rgb(235,4,16)" fg:x="886" fg:w="3"/><text x="71.6440%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.5552%" y="453" width="0.0806%" height="15" fill="rgb(235,83,42)" fg:x="888" fg:w="1"/><text x="71.8052%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.5552%" y="437" width="0.0806%" height="15" fill="rgb(207,116,39)" fg:x="888" fg:w="1"/><text x="71.8052%" y="447.50"></text></g><g><title>serde_json::value::de::MapDeserializer::new (1 samples, 0.08%)</title><rect x="71.5552%" y="421" width="0.0806%" height="15" fill="rgb(253,206,9)" fg:x="888" fg:w="1"/><text x="71.8052%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6358%" y="453" width="0.0806%" height="15" fill="rgb(234,32,47)" fg:x="889" fg:w="1"/><text x="71.8858%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6358%" y="437" width="0.0806%" height="15" fill="rgb(247,40,39)" fg:x="889" fg:w="1"/><text x="71.8858%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6358%" y="421" width="0.0806%" height="15" fill="rgb(236,199,13)" fg:x="889" fg:w="1"/><text x="71.8858%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6358%" y="405" width="0.0806%" height="15" fill="rgb(240,127,44)" fg:x="889" fg:w="1"/><text x="71.8858%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="71.6358%" y="389" width="0.0806%" height="15" fill="rgb(248,220,47)" fg:x="889" fg:w="1"/><text x="71.8858%" y="399.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (6 samples, 0.48%)</title><rect x="71.3940%" y="533" width="0.4835%" height="15" fill="rgb(240,78,9)" fg:x="886" fg:w="6"/><text x="71.6440%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (6 samples, 0.48%)</title><rect x="71.3940%" y="517" width="0.4835%" height="15" fill="rgb(245,119,5)" fg:x="886" fg:w="6"/><text x="71.6440%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="71.6358%" y="501" width="0.2417%" height="15" fill="rgb(238,175,31)" fg:x="889" fg:w="3"/><text x="71.8858%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="71.6358%" y="485" width="0.2417%" height="15" fill="rgb(232,140,42)" fg:x="889" fg:w="3"/><text x="71.8858%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="71.6358%" y="469" width="0.2417%" height="15" fill="rgb(218,179,7)" fg:x="889" fg:w="3"/><text x="71.8858%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.7164%" y="453" width="0.1612%" height="15" fill="rgb(232,79,27)" fg:x="890" fg:w="2"/><text x="71.9664%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.7164%" y="437" width="0.1612%" height="15" fill="rgb(247,11,19)" fg:x="890" fg:w="2"/><text x="71.9664%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="71.7164%" y="421" width="0.1612%" height="15" fill="rgb(216,171,54)" fg:x="890" fg:w="2"/><text x="71.9664%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.7164%" y="405" width="0.1612%" height="15" fill="rgb(233,158,36)" fg:x="890" fg:w="2"/><text x="71.9664%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="71.7164%" y="389" width="0.1612%" height="15" fill="rgb(215,48,47)" fg:x="890" fg:w="2"/><text x="71.9664%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="71.7164%" y="373" width="0.1612%" height="15" fill="rgb(230,223,15)" fg:x="890" fg:w="2"/><text x="71.9664%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="71.7969%" y="357" width="0.0806%" height="15" fill="rgb(234,49,19)" fg:x="891" fg:w="1"/><text x="72.0469%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="71.7969%" y="341" width="0.0806%" height="15" fill="rgb(232,89,25)" fg:x="891" fg:w="1"/><text x="72.0469%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="72.1193%" y="469" width="0.0806%" height="15" fill="rgb(237,206,28)" fg:x="895" fg:w="1"/><text x="72.3693%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1193%" y="453" width="0.0806%" height="15" fill="rgb(249,68,37)" fg:x="895" fg:w="1"/><text x="72.3693%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.1193%" y="437" width="0.0806%" height="15" fill="rgb(226,99,43)" fg:x="895" fg:w="1"/><text x="72.3693%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.1193%" y="421" width="0.0806%" height="15" fill="rgb(216,46,28)" fg:x="895" fg:w="1"/><text x="72.3693%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.1193%" y="405" width="0.0806%" height="15" fill="rgb(216,33,9)" fg:x="895" fg:w="1"/><text x="72.3693%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.1193%" y="389" width="0.0806%" height="15" fill="rgb(216,129,4)" fg:x="895" fg:w="1"/><text x="72.3693%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1193%" y="373" width="0.0806%" height="15" fill="rgb(216,106,3)" fg:x="895" fg:w="1"/><text x="72.3693%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.1193%" y="357" width="0.0806%" height="15" fill="rgb(217,79,45)" fg:x="895" fg:w="1"/><text x="72.3693%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.1193%" y="341" width="0.0806%" height="15" fill="rgb(239,98,13)" fg:x="895" fg:w="1"/><text x="72.3693%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.1193%" y="325" width="0.0806%" height="15" fill="rgb(221,115,4)" fg:x="895" fg:w="1"/><text x="72.3693%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.1193%" y="309" width="0.0806%" height="15" fill="rgb(215,85,0)" fg:x="895" fg:w="1"/><text x="72.3693%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.1193%" y="293" width="0.0806%" height="15" fill="rgb(230,62,15)" fg:x="895" fg:w="1"/><text x="72.3693%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.1193%" y="277" width="0.0806%" height="15" fill="rgb(247,162,2)" fg:x="895" fg:w="1"/><text x="72.3693%" y="287.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="72.3610%" y="261" width="0.1612%" height="15" fill="rgb(212,112,32)" fg:x="898" fg:w="2"/><text x="72.6110%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (8 samples, 0.64%)</title><rect x="71.9581%" y="501" width="0.6446%" height="15" fill="rgb(216,137,9)" fg:x="893" fg:w="8"/><text x="72.2081%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="72.0387%" y="485" width="0.5641%" height="15" fill="rgb(250,149,33)" fg:x="894" fg:w="7"/><text x="72.2887%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.40%)</title><rect x="72.1998%" y="469" width="0.4029%" height="15" fill="rgb(246,124,31)" fg:x="896" fg:w="5"/><text x="72.4498%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (5 samples, 0.40%)</title><rect x="72.1998%" y="453" width="0.4029%" height="15" fill="rgb(216,210,22)" fg:x="896" fg:w="5"/><text x="72.4498%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="72.3610%" y="437" width="0.2417%" height="15" fill="rgb(228,128,36)" fg:x="898" fg:w="3"/><text x="72.6110%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="72.3610%" y="421" width="0.2417%" height="15" fill="rgb(231,41,0)" fg:x="898" fg:w="3"/><text x="72.6110%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="72.3610%" y="405" width="0.2417%" height="15" fill="rgb(232,61,26)" fg:x="898" fg:w="3"/><text x="72.6110%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="72.3610%" y="389" width="0.2417%" height="15" fill="rgb(217,60,9)" fg:x="898" fg:w="3"/><text x="72.6110%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="72.3610%" y="373" width="0.2417%" height="15" fill="rgb(233,41,35)" fg:x="898" fg:w="3"/><text x="72.6110%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="72.3610%" y="357" width="0.2417%" height="15" fill="rgb(253,139,43)" fg:x="898" fg:w="3"/><text x="72.6110%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="72.3610%" y="341" width="0.2417%" height="15" fill="rgb(245,100,51)" fg:x="898" fg:w="3"/><text x="72.6110%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="72.3610%" y="325" width="0.2417%" height="15" fill="rgb(250,208,18)" fg:x="898" fg:w="3"/><text x="72.6110%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="72.3610%" y="309" width="0.2417%" height="15" fill="rgb(245,33,2)" fg:x="898" fg:w="3"/><text x="72.6110%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="72.3610%" y="293" width="0.2417%" height="15" fill="rgb(244,171,31)" fg:x="898" fg:w="3"/><text x="72.6110%" y="303.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="72.3610%" y="277" width="0.2417%" height="15" fill="rgb(229,1,43)" fg:x="898" fg:w="3"/><text x="72.6110%" y="287.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="72.5222%" y="261" width="0.0806%" height="15" fill="rgb(223,153,28)" fg:x="900" fg:w="1"/><text x="72.7722%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="72.5222%" y="245" width="0.0806%" height="15" fill="rgb(241,4,46)" fg:x="900" fg:w="1"/><text x="72.7722%" y="255.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (1 samples, 0.08%)</title><rect x="72.6027%" y="501" width="0.0806%" height="15" fill="rgb(230,81,11)" fg:x="901" fg:w="1"/><text x="72.8527%" y="511.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.08%)</title><rect x="72.6027%" y="485" width="0.0806%" height="15" fill="rgb(253,204,39)" fg:x="901" fg:w="1"/><text x="72.8527%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="72.6027%" y="469" width="0.0806%" height="15" fill="rgb(250,96,8)" fg:x="901" fg:w="1"/><text x="72.8527%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.08%)</title><rect x="72.6027%" y="453" width="0.0806%" height="15" fill="rgb(219,89,54)" fg:x="901" fg:w="1"/><text x="72.8527%" y="463.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="72.7639%" y="453" width="0.0806%" height="15" fill="rgb(235,136,39)" fg:x="903" fg:w="1"/><text x="73.0139%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (3 samples, 0.24%)</title><rect x="72.6833%" y="501" width="0.2417%" height="15" fill="rgb(230,155,37)" fg:x="902" fg:w="3"/><text x="72.9333%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="72.6833%" y="485" width="0.2417%" height="15" fill="rgb(235,199,50)" fg:x="902" fg:w="3"/><text x="72.9333%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="72.7639%" y="469" width="0.1612%" height="15" fill="rgb(227,81,32)" fg:x="903" fg:w="2"/><text x="73.0139%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="72.8445%" y="453" width="0.0806%" height="15" fill="rgb(225,6,28)" fg:x="904" fg:w="1"/><text x="73.0945%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="72.8445%" y="437" width="0.0806%" height="15" fill="rgb(207,211,17)" fg:x="904" fg:w="1"/><text x="73.0945%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="72.8445%" y="421" width="0.0806%" height="15" fill="rgb(228,31,49)" fg:x="904" fg:w="1"/><text x="73.0945%" y="431.50"></text></g><g><title>kernel::session::ActiveSession::ensure_optional_entity (1 samples, 0.08%)</title><rect x="72.9251%" y="501" width="0.0806%" height="15" fill="rgb(230,185,3)" fg:x="905" fg:w="1"/><text x="73.1751%" y="511.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (1 samples, 0.08%)</title><rect x="72.9251%" y="485" width="0.0806%" height="15" fill="rgb(206,167,15)" fg:x="905" fg:w="1"/><text x="73.1751%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (1 samples, 0.08%)</title><rect x="72.9251%" y="469" width="0.0806%" height="15" fill="rgb(234,2,36)" fg:x="905" fg:w="1"/><text x="73.1751%" y="479.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="72.9251%" y="453" width="0.0806%" height="15" fill="rgb(239,160,29)" fg:x="905" fg:w="1"/><text x="73.1751%" y="463.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9251%" y="437" width="0.0806%" height="15" fill="rgb(236,117,2)" fg:x="905" fg:w="1"/><text x="73.1751%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9251%" y="421" width="0.0806%" height="15" fill="rgb(215,117,37)" fg:x="905" fg:w="1"/><text x="73.1751%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="72.9251%" y="405" width="0.0806%" height="15" fill="rgb(244,48,36)" fg:x="905" fg:w="1"/><text x="73.1751%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="72.9251%" y="389" width="0.0806%" height="15" fill="rgb(223,101,37)" fg:x="905" fg:w="1"/><text x="73.1751%" y="399.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="72.9251%" y="373" width="0.0806%" height="15" fill="rgb(205,200,1)" fg:x="905" fg:w="1"/><text x="73.1751%" y="383.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="72.9251%" y="357" width="0.0806%" height="15" fill="rgb(209,193,20)" fg:x="905" fg:w="1"/><text x="73.1751%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.9251%" y="341" width="0.0806%" height="15" fill="rgb(214,63,13)" fg:x="905" fg:w="1"/><text x="73.1751%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="72.9251%" y="325" width="0.0806%" height="15" fill="rgb(253,113,46)" fg:x="905" fg:w="1"/><text x="73.1751%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="72.9251%" y="309" width="0.0806%" height="15" fill="rgb(237,103,34)" fg:x="905" fg:w="1"/><text x="73.1751%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="72.9251%" y="293" width="0.0806%" height="15" fill="rgb(223,38,25)" fg:x="905" fg:w="1"/><text x="73.1751%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="72.9251%" y="277" width="0.0806%" height="15" fill="rgb(251,32,32)" fg:x="905" fg:w="1"/><text x="73.1751%" y="287.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="72.9251%" y="261" width="0.0806%" height="15" fill="rgb(228,65,22)" fg:x="905" fg:w="1"/><text x="73.1751%" y="271.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="72.9251%" y="245" width="0.0806%" height="15" fill="rgb(205,11,46)" fg:x="905" fg:w="1"/><text x="73.1751%" y="255.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.1668%" y="469" width="0.0806%" height="15" fill="rgb(220,35,2)" fg:x="908" fg:w="1"/><text x="73.4168%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="73.2474%" y="469" width="0.1612%" height="15" fill="rgb(217,151,17)" fg:x="909" fg:w="2"/><text x="73.4974%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="73.2474%" y="453" width="0.1612%" height="15" fill="rgb(243,227,35)" fg:x="909" fg:w="2"/><text x="73.4974%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (2 samples, 0.16%)</title><rect x="73.2474%" y="437" width="0.1612%" height="15" fill="rgb(214,0,34)" fg:x="909" fg:w="2"/><text x="73.4974%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="73.2474%" y="421" width="0.1612%" height="15" fill="rgb(209,42,37)" fg:x="909" fg:w="2"/><text x="73.4974%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="73.2474%" y="405" width="0.1612%" height="15" fill="rgb(251,176,30)" fg:x="909" fg:w="2"/><text x="73.4974%" y="415.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (2 samples, 0.16%)</title><rect x="73.2474%" y="389" width="0.1612%" height="15" fill="rgb(223,64,40)" fg:x="909" fg:w="2"/><text x="73.4974%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.3280%" y="373" width="0.0806%" height="15" fill="rgb(227,180,23)" fg:x="910" fg:w="1"/><text x="73.5780%" y="383.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (20 samples, 1.61%)</title><rect x="71.8775%" y="533" width="1.6116%" height="15" fill="rgb(220,137,31)" fg:x="892" fg:w="20"/><text x="72.1275%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (19 samples, 1.53%)</title><rect x="71.9581%" y="517" width="1.5310%" height="15" fill="rgb(245,124,25)" fg:x="893" fg:w="19"/><text x="72.2081%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (6 samples, 0.48%)</title><rect x="73.0056%" y="501" width="0.4835%" height="15" fill="rgb(217,157,5)" fg:x="906" fg:w="6"/><text x="73.2556%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (6 samples, 0.48%)</title><rect x="73.0056%" y="485" width="0.4835%" height="15" fill="rgb(225,59,2)" fg:x="906" fg:w="6"/><text x="73.2556%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="73.4085%" y="469" width="0.0806%" height="15" fill="rgb(220,182,9)" fg:x="911" fg:w="1"/><text x="73.6585%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="73.4085%" y="453" width="0.0806%" height="15" fill="rgb(249,54,24)" fg:x="911" fg:w="1"/><text x="73.6585%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.5697%" y="501" width="0.0806%" height="15" fill="rgb(216,89,17)" fg:x="913" fg:w="1"/><text x="73.8197%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5697%" y="485" width="0.0806%" height="15" fill="rgb(245,20,45)" fg:x="913" fg:w="1"/><text x="73.8197%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="73.5697%" y="469" width="0.0806%" height="15" fill="rgb(230,83,14)" fg:x="913" fg:w="1"/><text x="73.8197%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5697%" y="453" width="0.0806%" height="15" fill="rgb(246,109,11)" fg:x="913" fg:w="1"/><text x="73.8197%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="73.5697%" y="437" width="0.0806%" height="15" fill="rgb(235,85,23)" fg:x="913" fg:w="1"/><text x="73.8197%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="73.5697%" y="421" width="0.0806%" height="15" fill="rgb(215,101,36)" fg:x="913" fg:w="1"/><text x="73.8197%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="73.5697%" y="405" width="0.0806%" height="15" fill="rgb(228,140,31)" fg:x="913" fg:w="1"/><text x="73.8197%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="73.5697%" y="389" width="0.0806%" height="15" fill="rgb(234,162,37)" fg:x="913" fg:w="1"/><text x="73.8197%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5697%" y="373" width="0.0806%" height="15" fill="rgb(221,0,24)" fg:x="913" fg:w="1"/><text x="73.8197%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="73.5697%" y="357" width="0.0806%" height="15" fill="rgb(230,161,41)" fg:x="913" fg:w="1"/><text x="73.8197%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="73.5697%" y="341" width="0.0806%" height="15" fill="rgb(224,46,24)" fg:x="913" fg:w="1"/><text x="73.8197%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="73.5697%" y="325" width="0.0806%" height="15" fill="rgb(205,59,32)" fg:x="913" fg:w="1"/><text x="73.8197%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="73.5697%" y="309" width="0.0806%" height="15" fill="rgb(239,31,20)" fg:x="913" fg:w="1"/><text x="73.8197%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="73.5697%" y="293" width="0.0806%" height="15" fill="rgb(233,149,44)" fg:x="913" fg:w="1"/><text x="73.8197%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="73.5697%" y="277" width="0.0806%" height="15" fill="rgb(243,47,26)" fg:x="913" fg:w="1"/><text x="73.8197%" y="287.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.6503%" y="469" width="0.0806%" height="15" fill="rgb(233,107,5)" fg:x="914" fg:w="1"/><text x="73.9003%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="73.7309%" y="469" width="0.0806%" height="15" fill="rgb(248,140,33)" fg:x="915" fg:w="1"/><text x="73.9809%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (4 samples, 0.32%)</title><rect x="73.6503%" y="501" width="0.3223%" height="15" fill="rgb(228,178,19)" fg:x="914" fg:w="4"/><text x="73.9003%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="73.6503%" y="485" width="0.3223%" height="15" fill="rgb(224,39,49)" fg:x="914" fg:w="4"/><text x="73.9003%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="73.8114%" y="469" width="0.1612%" height="15" fill="rgb(246,56,47)" fg:x="916" fg:w="2"/><text x="74.0614%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (2 samples, 0.16%)</title><rect x="73.8114%" y="453" width="0.1612%" height="15" fill="rgb(220,73,27)" fg:x="916" fg:w="2"/><text x="74.0614%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="73.8920%" y="437" width="0.0806%" height="15" fill="rgb(239,112,21)" fg:x="917" fg:w="1"/><text x="74.1420%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="73.8920%" y="421" width="0.0806%" height="15" fill="rgb(253,14,51)" fg:x="917" fg:w="1"/><text x="74.1420%" y="431.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="73.9726%" y="501" width="0.0806%" height="15" fill="rgb(215,58,12)" fg:x="918" fg:w="1"/><text x="74.2226%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="73.9726%" y="485" width="0.0806%" height="15" fill="rgb(207,181,19)" fg:x="918" fg:w="1"/><text x="74.2226%" y="495.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="73.9726%" y="469" width="0.0806%" height="15" fill="rgb(211,214,34)" fg:x="918" fg:w="1"/><text x="74.2226%" y="479.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (8 samples, 0.64%)</title><rect x="73.4891%" y="533" width="0.6446%" height="15" fill="rgb(243,124,39)" fg:x="912" fg:w="8"/><text x="73.7391%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="73.5697%" y="517" width="0.5641%" height="15" fill="rgb(248,135,21)" fg:x="913" fg:w="7"/><text x="73.8197%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (1 samples, 0.08%)</title><rect x="74.0532%" y="501" width="0.0806%" height="15" fill="rgb(245,218,3)" fg:x="919" fg:w="1"/><text x="74.3032%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.0532%" y="485" width="0.0806%" height="15" fill="rgb(225,144,22)" fg:x="919" fg:w="1"/><text x="74.3032%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="74.0532%" y="469" width="0.0806%" height="15" fill="rgb(250,90,15)" fg:x="919" fg:w="1"/><text x="74.3032%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="74.0532%" y="453" width="0.0806%" height="15" fill="rgb(224,64,29)" fg:x="919" fg:w="1"/><text x="74.3032%" y="463.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="74.0532%" y="437" width="0.0806%" height="15" fill="rgb(217,50,47)" fg:x="919" fg:w="1"/><text x="74.3032%" y="447.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="74.0532%" y="421" width="0.0806%" height="15" fill="rgb(231,159,47)" fg:x="919" fg:w="1"/><text x="74.3032%" y="431.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="74.2143%" y="517" width="0.0806%" height="15" fill="rgb(213,89,29)" fg:x="921" fg:w="1"/><text x="74.4643%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="74.2949%" y="485" width="0.1612%" height="15" fill="rgb(243,90,23)" fg:x="922" fg:w="2"/><text x="74.5449%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="74.2949%" y="469" width="0.1612%" height="15" fill="rgb(213,21,6)" fg:x="922" fg:w="2"/><text x="74.5449%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.3755%" y="453" width="0.0806%" height="15" fill="rgb(237,139,17)" fg:x="923" fg:w="1"/><text x="74.6255%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="437" width="0.0806%" height="15" fill="rgb(250,147,17)" fg:x="923" fg:w="1"/><text x="74.6255%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="421" width="0.0806%" height="15" fill="rgb(212,208,42)" fg:x="923" fg:w="1"/><text x="74.6255%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="405" width="0.0806%" height="15" fill="rgb(215,229,40)" fg:x="923" fg:w="1"/><text x="74.6255%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="389" width="0.0806%" height="15" fill="rgb(206,204,1)" fg:x="923" fg:w="1"/><text x="74.6255%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.3755%" y="373" width="0.0806%" height="15" fill="rgb(230,62,32)" fg:x="923" fg:w="1"/><text x="74.6255%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3755%" y="357" width="0.0806%" height="15" fill="rgb(223,22,42)" fg:x="923" fg:w="1"/><text x="74.6255%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.3755%" y="341" width="0.0806%" height="15" fill="rgb(244,6,23)" fg:x="923" fg:w="1"/><text x="74.6255%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.3755%" y="325" width="0.0806%" height="15" fill="rgb(240,221,42)" fg:x="923" fg:w="1"/><text x="74.6255%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.3755%" y="309" width="0.0806%" height="15" fill="rgb(222,74,7)" fg:x="923" fg:w="1"/><text x="74.6255%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.3755%" y="293" width="0.0806%" height="15" fill="rgb(227,191,38)" fg:x="923" fg:w="1"/><text x="74.6255%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3755%" y="277" width="0.0806%" height="15" fill="rgb(227,89,34)" fg:x="923" fg:w="1"/><text x="74.6255%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.3755%" y="261" width="0.0806%" height="15" fill="rgb(215,153,25)" fg:x="923" fg:w="1"/><text x="74.6255%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.3755%" y="245" width="0.0806%" height="15" fill="rgb(215,153,46)" fg:x="923" fg:w="1"/><text x="74.6255%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.3755%" y="229" width="0.0806%" height="15" fill="rgb(242,38,52)" fg:x="923" fg:w="1"/><text x="74.6255%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.3755%" y="213" width="0.0806%" height="15" fill="rgb(218,112,4)" fg:x="923" fg:w="1"/><text x="74.6255%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.3755%" y="197" width="0.0806%" height="15" fill="rgb(231,210,31)" fg:x="923" fg:w="1"/><text x="74.6255%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.3755%" y="181" width="0.0806%" height="15" fill="rgb(245,223,36)" fg:x="923" fg:w="1"/><text x="74.6255%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6172%" y="389" width="0.0806%" height="15" fill="rgb(246,41,2)" fg:x="926" fg:w="1"/><text x="74.8672%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="74.6172%" y="373" width="0.0806%" height="15" fill="rgb(227,51,31)" fg:x="926" fg:w="1"/><text x="74.8672%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6172%" y="357" width="0.0806%" height="15" fill="rgb(222,95,26)" fg:x="926" fg:w="1"/><text x="74.8672%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6172%" y="341" width="0.0806%" height="15" fill="rgb(224,190,1)" fg:x="926" fg:w="1"/><text x="74.8672%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6172%" y="325" width="0.0806%" height="15" fill="rgb(209,90,42)" fg:x="926" fg:w="1"/><text x="74.8672%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6172%" y="309" width="0.0806%" height="15" fill="rgb(232,225,50)" fg:x="926" fg:w="1"/><text x="74.8672%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6172%" y="293" width="0.0806%" height="15" fill="rgb(239,89,47)" fg:x="926" fg:w="1"/><text x="74.8672%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6172%" y="277" width="0.0806%" height="15" fill="rgb(230,212,50)" fg:x="926" fg:w="1"/><text x="74.8672%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="74.6172%" y="261" width="0.0806%" height="15" fill="rgb(252,1,27)" fg:x="926" fg:w="1"/><text x="74.8672%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="74.6172%" y="245" width="0.0806%" height="15" fill="rgb(237,179,41)" fg:x="926" fg:w="1"/><text x="74.8672%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="74.6172%" y="229" width="0.0806%" height="15" fill="rgb(214,151,37)" fg:x="926" fg:w="1"/><text x="74.8672%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="74.6172%" y="213" width="0.0806%" height="15" fill="rgb(211,74,11)" fg:x="926" fg:w="1"/><text x="74.8672%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="74.6172%" y="197" width="0.0806%" height="15" fill="rgb(242,21,21)" fg:x="926" fg:w="1"/><text x="74.8672%" y="207.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="74.6172%" y="181" width="0.0806%" height="15" fill="rgb(226,106,43)" fg:x="926" fg:w="1"/><text x="74.8672%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="74.5367%" y="437" width="0.2417%" height="15" fill="rgb(229,162,39)" fg:x="925" fg:w="3"/><text x="74.7867%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6172%" y="421" width="0.1612%" height="15" fill="rgb(228,159,25)" fg:x="926" fg:w="2"/><text x="74.8672%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="74.6172%" y="405" width="0.1612%" height="15" fill="rgb(237,32,23)" fg:x="926" fg:w="2"/><text x="74.8672%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6978%" y="389" width="0.0806%" height="15" fill="rgb(212,35,32)" fg:x="927" fg:w="1"/><text x="74.9478%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="74.6978%" y="373" width="0.0806%" height="15" fill="rgb(215,199,1)" fg:x="927" fg:w="1"/><text x="74.9478%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="74.6978%" y="357" width="0.0806%" height="15" fill="rgb(215,67,13)" fg:x="927" fg:w="1"/><text x="74.9478%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="74.6978%" y="341" width="0.0806%" height="15" fill="rgb(216,20,47)" fg:x="927" fg:w="1"/><text x="74.9478%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="74.6978%" y="325" width="0.0806%" height="15" fill="rgb(249,183,48)" fg:x="927" fg:w="1"/><text x="74.9478%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="74.6978%" y="309" width="0.0806%" height="15" fill="rgb(208,86,37)" fg:x="927" fg:w="1"/><text x="74.9478%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="74.6978%" y="293" width="0.0806%" height="15" fill="rgb(251,192,7)" fg:x="927" fg:w="1"/><text x="74.9478%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="74.7784%" y="437" width="0.0806%" height="15" fill="rgb(234,196,3)" fg:x="928" fg:w="1"/><text x="75.0284%" y="447.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (8 samples, 0.64%)</title><rect x="74.2949%" y="517" width="0.6446%" height="15" fill="rgb(229,150,39)" fg:x="922" fg:w="8"/><text x="74.5449%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (8 samples, 0.64%)</title><rect x="74.2949%" y="501" width="0.6446%" height="15" fill="rgb(226,19,29)" fg:x="922" fg:w="8"/><text x="74.5449%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (6 samples, 0.48%)</title><rect x="74.4561%" y="485" width="0.4835%" height="15" fill="rgb(226,222,2)" fg:x="924" fg:w="6"/><text x="74.7061%" y="495.50"></text></g><g><title>kernel::model::props::load_props (6 samples, 0.48%)</title><rect x="74.4561%" y="469" width="0.4835%" height="15" fill="rgb(235,85,29)" fg:x="924" fg:w="6"/><text x="74.7061%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="74.4561%" y="453" width="0.4835%" height="15" fill="rgb(237,194,43)" fg:x="924" fg:w="6"/><text x="74.7061%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.8590%" y="437" width="0.0806%" height="15" fill="rgb(211,4,42)" fg:x="929" fg:w="1"/><text x="75.1090%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8590%" y="421" width="0.0806%" height="15" fill="rgb(221,80,37)" fg:x="929" fg:w="1"/><text x="75.1090%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="74.8590%" y="405" width="0.0806%" height="15" fill="rgb(222,47,31)" fg:x="929" fg:w="1"/><text x="75.1090%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8590%" y="389" width="0.0806%" height="15" fill="rgb(249,82,52)" fg:x="929" fg:w="1"/><text x="75.1090%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="74.8590%" y="373" width="0.0806%" height="15" fill="rgb(218,203,2)" fg:x="929" fg:w="1"/><text x="75.1090%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="74.8590%" y="357" width="0.0806%" height="15" fill="rgb(210,175,14)" fg:x="929" fg:w="1"/><text x="75.1090%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8590%" y="341" width="0.0806%" height="15" fill="rgb(216,210,12)" fg:x="929" fg:w="1"/><text x="75.1090%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.08%)</title><rect x="74.8590%" y="325" width="0.0806%" height="15" fill="rgb(229,120,18)" fg:x="929" fg:w="1"/><text x="75.1090%" y="335.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (11 samples, 0.89%)</title><rect x="74.1338%" y="533" width="0.8864%" height="15" fill="rgb(231,174,12)" fg:x="920" fg:w="11"/><text x="74.3838%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="74.9396%" y="517" width="0.0806%" height="15" fill="rgb(214,101,53)" fg:x="930" fg:w="1"/><text x="75.1896%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="74.9396%" y="501" width="0.0806%" height="15" fill="rgb(246,89,43)" fg:x="930" fg:w="1"/><text x="75.1896%" y="511.50"></text></g><g><title>&lt;plugins_core::carrying::model::Carryable as core::default::Default&gt;::default (1 samples, 0.08%)</title><rect x="74.9396%" y="485" width="0.0806%" height="15" fill="rgb(222,9,51)" fg:x="930" fg:w="1"/><text x="75.1896%" y="495.50"></text></g><g><title>kernel::model::base::Kind::new (1 samples, 0.08%)</title><rect x="74.9396%" y="469" width="0.0806%" height="15" fill="rgb(252,221,9)" fg:x="930" fg:w="1"/><text x="75.1896%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0201%" y="421" width="0.0806%" height="15" fill="rgb(248,28,15)" fg:x="931" fg:w="1"/><text x="75.2701%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="75.0201%" y="405" width="0.0806%" height="15" fill="rgb(213,54,52)" fg:x="931" fg:w="1"/><text x="75.2701%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="75.0201%" y="389" width="0.0806%" height="15" fill="rgb(240,3,45)" fg:x="931" fg:w="1"/><text x="75.2701%" y="399.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (85 samples, 6.85%)</title><rect x="68.4126%" y="565" width="6.8493%" height="15" fill="rgb(239,138,24)" fg:x="849" fg:w="85"/><text x="68.6626%" y="575.50">&lt;plugins_..</text></g><g><title>plugins_core::tools::move_between (49 samples, 3.95%)</title><rect x="71.3135%" y="549" width="3.9484%" height="15" fill="rgb(233,45,54)" fg:x="885" fg:w="49"/><text x="71.5635%" y="559.50">plug..</text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (3 samples, 0.24%)</title><rect x="75.0201%" y="533" width="0.2417%" height="15" fill="rgb(220,131,2)" fg:x="931" fg:w="3"/><text x="75.2701%" y="543.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="75.0201%" y="517" width="0.2417%" height="15" fill="rgb(240,154,36)" fg:x="931" fg:w="3"/><text x="75.2701%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="75.0201%" y="501" width="0.2417%" height="15" fill="rgb(251,221,1)" fg:x="931" fg:w="3"/><text x="75.2701%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="75.0201%" y="485" width="0.2417%" height="15" fill="rgb(225,217,1)" fg:x="931" fg:w="3"/><text x="75.2701%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="75.0201%" y="469" width="0.2417%" height="15" fill="rgb(241,105,49)" fg:x="931" fg:w="3"/><text x="75.2701%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="75.0201%" y="453" width="0.2417%" height="15" fill="rgb(215,44,32)" fg:x="931" fg:w="3"/><text x="75.2701%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="75.0201%" y="437" width="0.2417%" height="15" fill="rgb(213,222,14)" fg:x="931" fg:w="3"/><text x="75.2701%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.16%)</title><rect x="75.1007%" y="421" width="0.1612%" height="15" fill="rgb(207,99,52)" fg:x="932" fg:w="2"/><text x="75.3507%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.16%)</title><rect x="75.1007%" y="405" width="0.1612%" height="15" fill="rgb(214,208,52)" fg:x="932" fg:w="2"/><text x="75.3507%" y="415.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (329 samples, 26.51%)</title><rect x="48.8316%" y="693" width="26.5109%" height="15" fill="rgb(244,169,0)" fg:x="606" fg:w="329"/><text x="49.0816%" y="703.50">&lt;engine::perform::StandardPerformer as ker..</text></g><g><title>kernel::plugins::mw::apply_middleware (220 samples, 17.73%)</title><rect x="57.6148%" y="677" width="17.7276%" height="15" fill="rgb(216,193,37)" fg:x="715" fg:w="220"/><text x="57.8648%" y="687.50">kernel::plugins::mw::apply_m..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (220 samples, 17.73%)</title><rect x="57.6148%" y="661" width="17.7276%" height="15" fill="rgb(212,158,10)" fg:x="715" fg:w="220"/><text x="57.8648%" y="671.50">kernel::plugins::mw::Middlew..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (219 samples, 17.65%)</title><rect x="57.6954%" y="645" width="17.6471%" height="15" fill="rgb(213,110,20)" fg:x="716" fg:w="219"/><text x="57.9454%" y="655.50">&lt;plugins_dynlib::DynamicMid..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (219 samples, 17.65%)</title><rect x="57.6954%" y="629" width="17.6471%" height="15" fill="rgb(226,5,42)" fg:x="716" fg:w="219"/><text x="57.9454%" y="639.50">kernel::plugins::mw::Middle..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (219 samples, 17.65%)</title><rect x="57.6954%" y="613" width="17.6471%" height="15" fill="rgb(211,93,8)" fg:x="716" fg:w="219"/><text x="57.9454%" y="623.50">core::ops::function::FnOnce..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (219 samples, 17.65%)</title><rect x="57.6954%" y="597" width="17.6471%" height="15" fill="rgb(240,208,12)" fg:x="716" fg:w="219"/><text x="57.9454%" y="607.50">kernel::plugins::mw::Middle..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (217 samples, 17.49%)</title><rect x="57.8566%" y="581" width="17.4859%" height="15" fill="rgb(233,127,50)" fg:x="718" fg:w="217"/><text x="58.1066%" y="591.50">core::ops::function::FnOnce..</text></g><g><title>core::ptr::drop_in_place&lt;plugins_core::carrying::actions::DropAction&gt; (1 samples, 0.08%)</title><rect x="75.2619%" y="565" width="0.0806%" height="15" fill="rgb(227,199,53)" fg:x="934" fg:w="1"/><text x="75.5119%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="75.5036%" y="549" width="0.0806%" height="15" fill="rgb(235,199,10)" fg:x="937" fg:w="1"/><text x="75.7536%" y="559.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="75.4230%" y="629" width="0.2417%" height="15" fill="rgb(228,148,35)" fg:x="936" fg:w="3"/><text x="75.6730%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="75.4230%" y="613" width="0.2417%" height="15" fill="rgb(217,87,19)" fg:x="936" fg:w="3"/><text x="75.6730%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="75.4230%" y="597" width="0.2417%" height="15" fill="rgb(239,9,32)" fg:x="936" fg:w="3"/><text x="75.6730%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="75.5036%" y="581" width="0.1612%" height="15" fill="rgb(229,101,29)" fg:x="937" fg:w="2"/><text x="75.7536%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="75.5036%" y="565" width="0.1612%" height="15" fill="rgb(208,143,26)" fg:x="937" fg:w="2"/><text x="75.7536%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="75.5842%" y="549" width="0.0806%" height="15" fill="rgb(214,10,2)" fg:x="938" fg:w="1"/><text x="75.8342%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.5842%" y="533" width="0.0806%" height="15" fill="rgb(254,203,30)" fg:x="938" fg:w="1"/><text x="75.8342%" y="543.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="75.5842%" y="517" width="0.0806%" height="15" fill="rgb(242,45,3)" fg:x="938" fg:w="1"/><text x="75.8342%" y="527.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.08%)</title><rect x="75.6648%" y="485" width="0.0806%" height="15" fill="rgb(209,146,51)" fg:x="939" fg:w="1"/><text x="75.9148%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="75.6648%" y="629" width="0.2417%" height="15" fill="rgb(222,80,5)" fg:x="939" fg:w="3"/><text x="75.9148%" y="639.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="75.6648%" y="613" width="0.2417%" height="15" fill="rgb(252,80,35)" fg:x="939" fg:w="3"/><text x="75.9148%" y="623.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="75.6648%" y="597" width="0.2417%" height="15" fill="rgb(246,125,28)" fg:x="939" fg:w="3"/><text x="75.9148%" y="607.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.6648%" y="581" width="0.2417%" height="15" fill="rgb(224,143,51)" fg:x="939" fg:w="3"/><text x="75.9148%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.6648%" y="565" width="0.2417%" height="15" fill="rgb(205,24,17)" fg:x="939" fg:w="3"/><text x="75.9148%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (3 samples, 0.24%)</title><rect x="75.6648%" y="549" width="0.2417%" height="15" fill="rgb(253,128,30)" fg:x="939" fg:w="3"/><text x="75.9148%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.6648%" y="533" width="0.2417%" height="15" fill="rgb(214,153,25)" fg:x="939" fg:w="3"/><text x="75.9148%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="75.6648%" y="517" width="0.2417%" height="15" fill="rgb(214,4,28)" fg:x="939" fg:w="3"/><text x="75.9148%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="75.6648%" y="501" width="0.2417%" height="15" fill="rgb(235,179,52)" fg:x="939" fg:w="3"/><text x="75.9148%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="75.7454%" y="485" width="0.1612%" height="15" fill="rgb(233,27,42)" fg:x="940" fg:w="2"/><text x="75.9954%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="75.7454%" y="469" width="0.1612%" height="15" fill="rgb(238,35,25)" fg:x="940" fg:w="2"/><text x="75.9954%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="75.8259%" y="453" width="0.0806%" height="15" fill="rgb(227,44,31)" fg:x="941" fg:w="1"/><text x="76.0759%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="75.8259%" y="437" width="0.0806%" height="15" fill="rgb(232,201,13)" fg:x="941" fg:w="1"/><text x="76.0759%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="75.8259%" y="421" width="0.0806%" height="15" fill="rgb(224,172,52)" fg:x="941" fg:w="1"/><text x="76.0759%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="75.9871%" y="517" width="0.1612%" height="15" fill="rgb(214,27,26)" fg:x="943" fg:w="2"/><text x="76.2371%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="75.9871%" y="501" width="0.1612%" height="15" fill="rgb(210,185,52)" fg:x="943" fg:w="2"/><text x="76.2371%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="76.1483%" y="501" width="0.2417%" height="15" fill="rgb(249,59,32)" fg:x="945" fg:w="3"/><text x="76.3983%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.1483%" y="485" width="0.2417%" height="15" fill="rgb(242,209,18)" fg:x="945" fg:w="3"/><text x="76.3983%" y="495.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (3 samples, 0.24%)</title><rect x="76.1483%" y="469" width="0.2417%" height="15" fill="rgb(229,0,18)" fg:x="945" fg:w="3"/><text x="76.3983%" y="479.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_string (1 samples, 0.08%)</title><rect x="76.3094%" y="453" width="0.0806%" height="15" fill="rgb(217,138,29)" fg:x="947" fg:w="1"/><text x="76.5594%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.3094%" y="437" width="0.0806%" height="15" fill="rgb(215,72,42)" fg:x="947" fg:w="1"/><text x="76.5594%" y="447.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.3900%" y="501" width="0.0806%" height="15" fill="rgb(254,115,11)" fg:x="948" fg:w="1"/><text x="76.6400%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.4706%" y="501" width="0.0806%" height="15" fill="rgb(205,133,39)" fg:x="949" fg:w="1"/><text x="76.7206%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.4706%" y="485" width="0.0806%" height="15" fill="rgb(211,36,27)" fg:x="949" fg:w="1"/><text x="76.7206%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (1 samples, 0.08%)</title><rect x="76.4706%" y="469" width="0.0806%" height="15" fill="rgb(221,48,10)" fg:x="949" fg:w="1"/><text x="76.7206%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="76.4706%" y="453" width="0.0806%" height="15" fill="rgb(230,172,50)" fg:x="949" fg:w="1"/><text x="76.7206%" y="463.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="76.5512%" y="453" width="0.0806%" height="15" fill="rgb(249,72,18)" fg:x="950" fg:w="1"/><text x="76.8012%" y="463.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (10 samples, 0.81%)</title><rect x="75.9065%" y="613" width="0.8058%" height="15" fill="rgb(237,58,48)" fg:x="942" fg:w="10"/><text x="76.1565%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (10 samples, 0.81%)</title><rect x="75.9065%" y="597" width="0.8058%" height="15" fill="rgb(242,123,3)" fg:x="942" fg:w="10"/><text x="76.1565%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (10 samples, 0.81%)</title><rect x="75.9065%" y="581" width="0.8058%" height="15" fill="rgb(232,111,32)" fg:x="942" fg:w="10"/><text x="76.1565%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="75.9065%" y="565" width="0.8058%" height="15" fill="rgb(229,108,3)" fg:x="942" fg:w="10"/><text x="76.1565%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (10 samples, 0.81%)</title><rect x="75.9065%" y="549" width="0.8058%" height="15" fill="rgb(222,158,10)" fg:x="942" fg:w="10"/><text x="76.1565%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (10 samples, 0.81%)</title><rect x="75.9065%" y="533" width="0.8058%" height="15" fill="rgb(205,34,49)" fg:x="942" fg:w="10"/><text x="76.1565%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (7 samples, 0.56%)</title><rect x="76.1483%" y="517" width="0.5641%" height="15" fill="rgb(232,21,14)" fg:x="945" fg:w="7"/><text x="76.3983%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="76.5512%" y="501" width="0.1612%" height="15" fill="rgb(229,127,44)" fg:x="950" fg:w="2"/><text x="76.8012%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.5512%" y="485" width="0.1612%" height="15" fill="rgb(232,171,4)" fg:x="950" fg:w="2"/><text x="76.8012%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (2 samples, 0.16%)</title><rect x="76.5512%" y="469" width="0.1612%" height="15" fill="rgb(250,92,16)" fg:x="950" fg:w="2"/><text x="76.8012%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6317%" y="453" width="0.0806%" height="15" fill="rgb(230,103,38)" fg:x="951" fg:w="1"/><text x="76.8817%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.6317%" y="437" width="0.0806%" height="15" fill="rgb(253,167,9)" fg:x="951" fg:w="1"/><text x="76.8817%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.6317%" y="421" width="0.0806%" height="15" fill="rgb(222,118,11)" fg:x="951" fg:w="1"/><text x="76.8817%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6317%" y="405" width="0.0806%" height="15" fill="rgb(240,202,0)" fg:x="951" fg:w="1"/><text x="76.8817%" y="415.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.6317%" y="389" width="0.0806%" height="15" fill="rgb(236,124,4)" fg:x="951" fg:w="1"/><text x="76.8817%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="76.6317%" y="373" width="0.0806%" height="15" fill="rgb(244,128,18)" fg:x="951" fg:w="1"/><text x="76.8817%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="76.6317%" y="357" width="0.0806%" height="15" fill="rgb(231,206,5)" fg:x="951" fg:w="1"/><text x="76.8817%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="76.6317%" y="341" width="0.0806%" height="15" fill="rgb(237,111,8)" fg:x="951" fg:w="1"/><text x="76.8817%" y="351.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="76.6317%" y="325" width="0.0806%" height="15" fill="rgb(225,127,3)" fg:x="951" fg:w="1"/><text x="76.8817%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7929%" y="501" width="0.0806%" height="15" fill="rgb(222,85,48)" fg:x="953" fg:w="1"/><text x="77.0429%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="76.7929%" y="485" width="0.0806%" height="15" fill="rgb(221,108,37)" fg:x="953" fg:w="1"/><text x="77.0429%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.7929%" y="469" width="0.0806%" height="15" fill="rgb(226,169,36)" fg:x="953" fg:w="1"/><text x="77.0429%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.8735%" y="453" width="0.0806%" height="15" fill="rgb(237,76,12)" fg:x="954" fg:w="1"/><text x="77.1235%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="76.8735%" y="437" width="0.0806%" height="15" fill="rgb(210,227,32)" fg:x="954" fg:w="1"/><text x="77.1235%" y="447.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="76.8735%" y="421" width="0.0806%" height="15" fill="rgb(214,117,20)" fg:x="954" fg:w="1"/><text x="77.1235%" y="431.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="76.8735%" y="405" width="0.0806%" height="15" fill="rgb(234,119,41)" fg:x="954" fg:w="1"/><text x="77.1235%" y="415.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="76.8735%" y="389" width="0.0806%" height="15" fill="rgb(230,130,47)" fg:x="954" fg:w="1"/><text x="77.1235%" y="399.50"></text></g><g><title>engine::internal::Entities::add_persisted (20 samples, 1.61%)</title><rect x="75.4230%" y="645" width="1.6116%" height="15" fill="rgb(215,21,41)" fg:x="936" fg:w="20"/><text x="75.6730%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (14 samples, 1.13%)</title><rect x="75.9065%" y="629" width="1.1281%" height="15" fill="rgb(226,26,53)" fg:x="942" fg:w="14"/><text x="76.1565%" y="639.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="76.7123%" y="613" width="0.3223%" height="15" fill="rgb(221,92,23)" fg:x="952" fg:w="4"/><text x="76.9623%" y="623.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="76.7123%" y="597" width="0.3223%" height="15" fill="rgb(213,156,21)" fg:x="952" fg:w="4"/><text x="76.9623%" y="607.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="76.7123%" y="581" width="0.3223%" height="15" fill="rgb(254,166,29)" fg:x="952" fg:w="4"/><text x="76.9623%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.7929%" y="565" width="0.2417%" height="15" fill="rgb(213,71,1)" fg:x="953" fg:w="3"/><text x="77.0429%" y="575.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.7929%" y="549" width="0.2417%" height="15" fill="rgb(245,8,13)" fg:x="953" fg:w="3"/><text x="77.0429%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="76.7929%" y="533" width="0.2417%" height="15" fill="rgb(213,32,32)" fg:x="953" fg:w="3"/><text x="77.0429%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="76.7929%" y="517" width="0.2417%" height="15" fill="rgb(251,86,50)" fg:x="953" fg:w="3"/><text x="77.0429%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.8735%" y="501" width="0.1612%" height="15" fill="rgb(252,92,41)" fg:x="954" fg:w="2"/><text x="77.1235%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="76.8735%" y="485" width="0.1612%" height="15" fill="rgb(234,70,35)" fg:x="954" fg:w="2"/><text x="77.1235%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="76.8735%" y="469" width="0.1612%" height="15" fill="rgb(210,157,19)" fg:x="954" fg:w="2"/><text x="77.1235%" y="479.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="76.9541%" y="453" width="0.0806%" height="15" fill="rgb(206,20,45)" fg:x="955" fg:w="1"/><text x="77.2041%" y="463.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (21 samples, 1.69%)</title><rect x="75.4230%" y="661" width="1.6922%" height="15" fill="rgb(207,34,7)" fg:x="936" fg:w="21"/><text x="75.6730%" y="671.50"></text></g><g><title>engine::internal::Maps::lookup_entity (1 samples, 0.08%)</title><rect x="77.0346%" y="645" width="0.0806%" height="15" fill="rgb(253,151,14)" fg:x="956" fg:w="1"/><text x="77.2846%" y="655.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.0346%" y="629" width="0.0806%" height="15" fill="rgb(252,1,18)" fg:x="956" fg:w="1"/><text x="77.2846%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.0346%" y="613" width="0.0806%" height="15" fill="rgb(214,77,52)" fg:x="956" fg:w="1"/><text x="77.2846%" y="623.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="77.1152%" y="661" width="0.0806%" height="15" fill="rgb(254,106,35)" fg:x="957" fg:w="1"/><text x="77.3652%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1958%" y="645" width="0.0806%" height="15" fill="rgb(212,67,40)" fg:x="958" fg:w="1"/><text x="77.4458%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="77.1958%" y="629" width="0.0806%" height="15" fill="rgb(228,76,23)" fg:x="958" fg:w="1"/><text x="77.4458%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="77.1958%" y="613" width="0.0806%" height="15" fill="rgb(250,198,5)" fg:x="958" fg:w="1"/><text x="77.4458%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="77.1958%" y="597" width="0.0806%" height="15" fill="rgb(209,20,25)" fg:x="958" fg:w="1"/><text x="77.4458%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="77.1958%" y="581" width="0.0806%" height="15" fill="rgb(236,32,4)" fg:x="958" fg:w="1"/><text x="77.4458%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="77.1958%" y="565" width="0.0806%" height="15" fill="rgb(215,31,6)" fg:x="958" fg:w="1"/><text x="77.4458%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="77.1958%" y="549" width="0.0806%" height="15" fill="rgb(207,186,49)" fg:x="958" fg:w="1"/><text x="77.4458%" y="559.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (24 samples, 1.93%)</title><rect x="75.4230%" y="677" width="1.9339%" height="15" fill="rgb(211,212,49)" fg:x="936" fg:w="24"/><text x="75.6730%" y="687.50">&lt;..</text></g><g><title>kernel::model::entry::Entry::new (2 samples, 0.16%)</title><rect x="77.1958%" y="661" width="0.1612%" height="15" fill="rgb(229,51,41)" fg:x="958" fg:w="2"/><text x="77.4458%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="77.2764%" y="645" width="0.0806%" height="15" fill="rgb(205,225,36)" fg:x="959" fg:w="1"/><text x="77.5264%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="77.2764%" y="629" width="0.0806%" height="15" fill="rgb(209,213,45)" fg:x="959" fg:w="1"/><text x="77.5264%" y="639.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="77.2764%" y="613" width="0.0806%" height="15" fill="rgb(219,35,49)" fg:x="959" fg:w="1"/><text x="77.5264%" y="623.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="77.2764%" y="597" width="0.0806%" height="15" fill="rgb(215,205,22)" fg:x="959" fg:w="1"/><text x="77.5264%" y="607.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="77.2764%" y="581" width="0.0806%" height="15" fill="rgb(248,204,34)" fg:x="959" fg:w="1"/><text x="77.5264%" y="591.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="77.4376%" y="613" width="0.1612%" height="15" fill="rgb(219,223,31)" fg:x="961" fg:w="2"/><text x="77.6876%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="77.4376%" y="597" width="0.1612%" height="15" fill="rgb(236,14,8)" fg:x="961" fg:w="2"/><text x="77.6876%" y="607.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (3 samples, 0.24%)</title><rect x="77.5987%" y="597" width="0.2417%" height="15" fill="rgb(243,129,23)" fg:x="963" fg:w="3"/><text x="77.8487%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.24%)</title><rect x="77.5987%" y="581" width="0.2417%" height="15" fill="rgb(205,204,5)" fg:x="963" fg:w="3"/><text x="77.8487%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 0.24%)</title><rect x="77.5987%" y="565" width="0.2417%" height="15" fill="rgb(244,115,32)" fg:x="963" fg:w="3"/><text x="77.8487%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="77.7599%" y="549" width="0.0806%" height="15" fill="rgb(229,123,14)" fg:x="965" fg:w="1"/><text x="78.0099%" y="559.50"></text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (363 samples, 29.25%)</title><rect x="48.6704%" y="725" width="29.2506%" height="15" fill="rgb(250,85,1)" fg:x="604" fg:w="363"/><text x="48.9204%" y="735.50">&lt;plugins_core::carrying::CarryingPlugin as kern..</text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (362 samples, 29.17%)</title><rect x="48.7510%" y="709" width="29.1700%" height="15" fill="rgb(209,141,54)" fg:x="605" fg:w="362"/><text x="49.0010%" y="719.50">&lt;engine::perform::StandardPerformer as kernel::..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (32 samples, 2.58%)</title><rect x="75.3425%" y="693" width="2.5786%" height="15" fill="rgb(244,107,39)" fg:x="935" fg:w="32"/><text x="75.5925%" y="703.50">en..</text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (7 samples, 0.56%)</title><rect x="77.3570%" y="677" width="0.5641%" height="15" fill="rgb(230,68,26)" fg:x="960" fg:w="7"/><text x="77.6070%" y="687.50"></text></g><g><title>engine::users::model::username_to_key (7 samples, 0.56%)</title><rect x="77.3570%" y="661" width="0.5641%" height="15" fill="rgb(220,178,33)" fg:x="960" fg:w="7"/><text x="77.6070%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="77.3570%" y="645" width="0.5641%" height="15" fill="rgb(220,77,53)" fg:x="960" fg:w="7"/><text x="77.6070%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="77.3570%" y="629" width="0.5641%" height="15" fill="rgb(224,108,19)" fg:x="960" fg:w="7"/><text x="77.6070%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (4 samples, 0.32%)</title><rect x="77.5987%" y="613" width="0.3223%" height="15" fill="rgb(223,203,27)" fg:x="963" fg:w="4"/><text x="77.8487%" y="623.50"></text></g><g><title>serde_json::value::de::BorrowedCowStrDeserializer::new (1 samples, 0.08%)</title><rect x="77.8405%" y="597" width="0.0806%" height="15" fill="rgb(211,32,46)" fg:x="966" fg:w="1"/><text x="78.0905%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (364 samples, 29.33%)</title><rect x="48.6704%" y="741" width="29.3312%" height="15" fill="rgb(240,101,27)" fg:x="604" fg:w="364"/><text x="48.9204%" y="751.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::i..</text></g><g><title>&lt;plugins_core::moving::MovingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="77.9210%" y="725" width="0.0806%" height="15" fill="rgb(217,210,11)" fg:x="967" fg:w="1"/><text x="78.1710%" y="735.50"></text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (368 samples, 29.65%)</title><rect x="48.4287%" y="789" width="29.6535%" height="15" fill="rgb(236,130,21)" fg:x="601" fg:w="368"/><text x="48.6787%" y="799.50">&lt;kernel::plugins::SessionPlugins as kernel::plug..</text></g><g><title>core::iter::adapters::try_process (366 samples, 29.49%)</title><rect x="48.5898%" y="773" width="29.4923%" height="15" fill="rgb(250,136,8)" fg:x="603" fg:w="366"/><text x="48.8398%" y="783.50">core::iter::adapters::try_process</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (366 samples, 29.49%)</title><rect x="48.5898%" y="757" width="29.4923%" height="15" fill="rgb(243,223,36)" fg:x="603" fg:w="366"/><text x="48.8398%" y="767.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_it..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="78.0016%" y="741" width="0.0806%" height="15" fill="rgb(246,184,8)" fg:x="968" fg:w="1"/><text x="78.2516%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="78.0016%" y="725" width="0.0806%" height="15" fill="rgb(222,158,36)" fg:x="968" fg:w="1"/><text x="78.2516%" y="735.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="78.0016%" y="709" width="0.0806%" height="15" fill="rgb(210,220,19)" fg:x="968" fg:w="1"/><text x="78.2516%" y="719.50"></text></g><g><title>alloc::fmt::format::format_inner (2 samples, 0.16%)</title><rect x="78.0822%" y="789" width="0.1612%" height="15" fill="rgb(246,44,38)" fg:x="969" fg:w="2"/><text x="78.3322%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.16%)</title><rect x="78.0822%" y="773" width="0.1612%" height="15" fill="rgb(246,186,14)" fg:x="969" fg:w="2"/><text x="78.3322%" y="783.50"></text></g><g><title>core::fmt::write (2 samples, 0.16%)</title><rect x="78.0822%" y="757" width="0.1612%" height="15" fill="rgb(233,193,20)" fg:x="969" fg:w="2"/><text x="78.3322%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (2 samples, 0.16%)</title><rect x="78.0822%" y="741" width="0.1612%" height="15" fill="rgb(215,60,5)" fg:x="969" fg:w="2"/><text x="78.3322%" y="751.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt (2 samples, 0.16%)</title><rect x="78.0822%" y="725" width="0.1612%" height="15" fill="rgb(207,128,10)" fg:x="969" fg:w="2"/><text x="78.3322%" y="735.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal (2 samples, 0.16%)</title><rect x="78.0822%" y="709" width="0.1612%" height="15" fill="rgb(238,84,54)" fg:x="969" fg:w="2"/><text x="78.3322%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::fmt::Debug&gt;::fmt::fmt_decimal::{{closure}} (1 samples, 0.08%)</title><rect x="78.1628%" y="693" width="0.0806%" height="15" fill="rgb(213,130,11)" fg:x="970" fg:w="1"/><text x="78.4128%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="78.1628%" y="677" width="0.0806%" height="15" fill="rgb(235,62,9)" fg:x="970" fg:w="1"/><text x="78.4128%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="78.1628%" y="661" width="0.0806%" height="15" fill="rgb(222,64,24)" fg:x="970" fg:w="1"/><text x="78.4128%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1628%" y="645" width="0.0806%" height="15" fill="rgb(238,193,42)" fg:x="970" fg:w="1"/><text x="78.4128%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="78.1628%" y="629" width="0.0806%" height="15" fill="rgb(243,204,46)" fg:x="970" fg:w="1"/><text x="78.4128%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="78.1628%" y="613" width="0.0806%" height="15" fill="rgb(243,196,11)" fg:x="970" fg:w="1"/><text x="78.4128%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="78.1628%" y="597" width="0.0806%" height="15" fill="rgb(232,77,22)" fg:x="970" fg:w="1"/><text x="78.4128%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="78.1628%" y="581" width="0.0806%" height="15" fill="rgb(215,80,25)" fg:x="970" fg:w="1"/><text x="78.4128%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="78.1628%" y="565" width="0.0806%" height="15" fill="rgb(210,173,7)" fg:x="970" fg:w="1"/><text x="78.4128%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="78.1628%" y="549" width="0.0806%" height="15" fill="rgb(207,101,10)" fg:x="970" fg:w="1"/><text x="78.4128%" y="559.50"></text></g><g><title>engine::session::Session::evaluate_and_perform (372 samples, 29.98%)</title><rect x="48.3481%" y="821" width="29.9758%" height="15" fill="rgb(246,57,48)" fg:x="600" fg:w="372"/><text x="48.5981%" y="831.50">engine::session::Session::evaluate_and_perform</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (371 samples, 29.90%)</title><rect x="48.4287%" y="805" width="29.8952%" height="15" fill="rgb(236,184,40)" fg:x="601" fg:w="371"/><text x="48.6787%" y="815.50">engine::perform::StandardPerformer::evaluate_and..</text></g><g><title>std::time::Instant::elapsed (1 samples, 0.08%)</title><rect x="78.2434%" y="789" width="0.0806%" height="15" fill="rgb(210,205,13)" fg:x="971" fg:w="1"/><text x="78.4934%" y="799.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.08%)</title><rect x="78.2434%" y="773" width="0.0806%" height="15" fill="rgb(231,129,42)" fg:x="971" fg:w="1"/><text x="78.4934%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.08%)</title><rect x="78.2434%" y="757" width="0.0806%" height="15" fill="rgb(220,229,54)" fg:x="971" fg:w="1"/><text x="78.4934%" y="767.50"></text></g><g><title>std::sys::unix::time::inner::&lt;impl std::sys::unix::time::Timespec&gt;::now (1 samples, 0.08%)</title><rect x="78.2434%" y="741" width="0.0806%" height="15" fill="rgb(230,192,26)" fg:x="971" fg:w="1"/><text x="78.4934%" y="751.50"></text></g><g><title>clock_gettime (1 samples, 0.08%)</title><rect x="78.2434%" y="725" width="0.0806%" height="15" fill="rgb(253,18,30)" fg:x="971" fg:w="1"/><text x="78.4934%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (973 samples, 78.40%)</title><rect x="0.0000%" y="869" width="78.4045%" height="15" fill="rgb(216,62,53)" fg:x="0" fg:w="973"/><text x="0.2500%" y="879.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (973 samples, 78.40%)</title><rect x="0.0000%" y="853" width="78.4045%" height="15" fill="rgb(230,79,29)" fg:x="0" fg:w="973"/><text x="0.2500%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>tests::evaluate_text_in_new_domain (973 samples, 78.40%)</title><rect x="0.0000%" y="837" width="78.4045%" height="15" fill="rgb(242,26,26)" fg:x="0" fg:w="973"/><text x="0.2500%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>tests::make_domain (1 samples, 0.08%)</title><rect x="78.3239%" y="821" width="0.0806%" height="15" fill="rgb(227,125,21)" fg:x="972" fg:w="1"/><text x="78.5739%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="78.5657%" y="805" width="0.0806%" height="15" fill="rgb(229,93,26)" fg:x="975" fg:w="1"/><text x="78.8157%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.5657%" y="789" width="0.0806%" height="15" fill="rgb(227,228,8)" fg:x="975" fg:w="1"/><text x="78.8157%" y="799.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.5657%" y="773" width="0.0806%" height="15" fill="rgb(233,56,0)" fg:x="975" fg:w="1"/><text x="78.8157%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.7268%" y="725" width="0.0806%" height="15" fill="rgb(225,185,17)" fg:x="977" fg:w="1"/><text x="78.9768%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="78.8074%" y="693" width="0.0806%" height="15" fill="rgb(238,202,30)" fg:x="978" fg:w="1"/><text x="79.0574%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.8880%" y="693" width="0.0806%" height="15" fill="rgb(236,60,13)" fg:x="979" fg:w="1"/><text x="79.1380%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="78.9686%" y="677" width="0.0806%" height="15" fill="rgb(244,92,0)" fg:x="980" fg:w="1"/><text x="79.2186%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="78.9686%" y="661" width="0.0806%" height="15" fill="rgb(225,57,15)" fg:x="980" fg:w="1"/><text x="79.2186%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="78.9686%" y="645" width="0.0806%" height="15" fill="rgb(228,5,28)" fg:x="980" fg:w="1"/><text x="79.2186%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.0492%" y="677" width="0.0806%" height="15" fill="rgb(252,34,51)" fg:x="981" fg:w="1"/><text x="79.2992%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.7268%" y="757" width="0.4835%" height="15" fill="rgb(235,58,7)" fg:x="977" fg:w="6"/><text x="78.9768%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.48%)</title><rect x="78.7268%" y="741" width="0.4835%" height="15" fill="rgb(250,132,20)" fg:x="977" fg:w="6"/><text x="78.9768%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (5 samples, 0.40%)</title><rect x="78.8074%" y="725" width="0.4029%" height="15" fill="rgb(217,164,0)" fg:x="978" fg:w="5"/><text x="79.0574%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (5 samples, 0.40%)</title><rect x="78.8074%" y="709" width="0.4029%" height="15" fill="rgb(208,220,35)" fg:x="978" fg:w="5"/><text x="79.0574%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="78.9686%" y="693" width="0.2417%" height="15" fill="rgb(227,42,51)" fg:x="980" fg:w="3"/><text x="79.2186%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="79.1297%" y="677" width="0.0806%" height="15" fill="rgb(225,146,38)" fg:x="982" fg:w="1"/><text x="79.3797%" y="687.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.73%)</title><rect x="78.5657%" y="821" width="0.7252%" height="15" fill="rgb(252,108,37)" fg:x="975" fg:w="9"/><text x="78.8157%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::session::State&gt; (8 samples, 0.64%)</title><rect x="78.6463%" y="805" width="0.6446%" height="15" fill="rgb(244,101,24)" fg:x="976" fg:w="8"/><text x="78.8963%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="78.7268%" y="789" width="0.5641%" height="15" fill="rgb(213,161,50)" fg:x="977" fg:w="7"/><text x="78.9768%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::internal::LoadedEntity&gt; (7 samples, 0.56%)</title><rect x="78.7268%" y="773" width="0.5641%" height="15" fill="rgb(248,159,19)" fg:x="977" fg:w="7"/><text x="78.9768%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="79.2103%" y="757" width="0.0806%" height="15" fill="rgb(233,179,15)" fg:x="983" fg:w="1"/><text x="79.4603%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="79.2909%" y="741" width="0.0806%" height="15" fill="rgb(248,178,3)" fg:x="984" fg:w="1"/><text x="79.5409%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="79.2909%" y="725" width="0.0806%" height="15" fill="rgb(245,190,41)" fg:x="984" fg:w="1"/><text x="79.5409%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="79.2909%" y="709" width="0.0806%" height="15" fill="rgb(218,151,19)" fg:x="984" fg:w="1"/><text x="79.5409%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2909%" y="693" width="0.0806%" height="15" fill="rgb(245,25,44)" fg:x="984" fg:w="1"/><text x="79.5409%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="79.2909%" y="677" width="0.0806%" height="15" fill="rgb(235,172,47)" fg:x="984" fg:w="1"/><text x="79.5409%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2909%" y="661" width="0.0806%" height="15" fill="rgb(246,33,12)" fg:x="984" fg:w="1"/><text x="79.5409%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="79.2909%" y="645" width="0.0806%" height="15" fill="rgb(214,124,7)" fg:x="984" fg:w="1"/><text x="79.5409%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="79.2909%" y="629" width="0.0806%" height="15" fill="rgb(246,186,18)" fg:x="984" fg:w="1"/><text x="79.5409%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="79.2909%" y="613" width="0.0806%" height="15" fill="rgb(231,94,1)" fg:x="984" fg:w="1"/><text x="79.5409%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="79.2909%" y="597" width="0.0806%" height="15" fill="rgb(208,33,48)" fg:x="984" fg:w="1"/><text x="79.5409%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2909%" y="581" width="0.0806%" height="15" fill="rgb(208,195,44)" fg:x="984" fg:w="1"/><text x="79.5409%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.2909%" y="565" width="0.0806%" height="15" fill="rgb(226,13,52)" fg:x="984" fg:w="1"/><text x="79.5409%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.2909%" y="549" width="0.0806%" height="15" fill="rgb(217,219,45)" fg:x="984" fg:w="1"/><text x="79.5409%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.2909%" y="533" width="0.0806%" height="15" fill="rgb(223,45,25)" fg:x="984" fg:w="1"/><text x="79.5409%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.2909%" y="517" width="0.0806%" height="15" fill="rgb(241,163,0)" fg:x="984" fg:w="1"/><text x="79.5409%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.2909%" y="501" width="0.0806%" height="15" fill="rgb(216,68,47)" fg:x="984" fg:w="1"/><text x="79.5409%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="79.2909%" y="485" width="0.0806%" height="15" fill="rgb(236,119,45)" fg:x="984" fg:w="1"/><text x="79.5409%" y="495.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (4 samples, 0.32%)</title><rect x="79.2909%" y="789" width="0.3223%" height="15" fill="rgb(209,188,24)" fg:x="984" fg:w="4"/><text x="79.5409%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (4 samples, 0.32%)</title><rect x="79.2909%" y="773" width="0.3223%" height="15" fill="rgb(221,118,7)" fg:x="984" fg:w="4"/><text x="79.5409%" y="783.50"></text></g><g><title>engine::internal::Entities::add_persisted (4 samples, 0.32%)</title><rect x="79.2909%" y="757" width="0.3223%" height="15" fill="rgb(213,148,43)" fg:x="984" fg:w="4"/><text x="79.5409%" y="767.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="79.3715%" y="741" width="0.2417%" height="15" fill="rgb(231,21,43)" fg:x="985" fg:w="3"/><text x="79.6215%" y="751.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="79.3715%" y="725" width="0.2417%" height="15" fill="rgb(232,213,43)" fg:x="985" fg:w="3"/><text x="79.6215%" y="735.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="79.3715%" y="709" width="0.2417%" height="15" fill="rgb(239,145,50)" fg:x="985" fg:w="3"/><text x="79.6215%" y="719.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="79.3715%" y="693" width="0.2417%" height="15" fill="rgb(222,131,18)" fg:x="985" fg:w="3"/><text x="79.6215%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="79.3715%" y="677" width="0.2417%" height="15" fill="rgb(243,181,13)" fg:x="985" fg:w="3"/><text x="79.6215%" y="687.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="79.4521%" y="661" width="0.1612%" height="15" fill="rgb(212,74,41)" fg:x="986" fg:w="2"/><text x="79.7021%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="79.4521%" y="645" width="0.1612%" height="15" fill="rgb(237,143,34)" fg:x="986" fg:w="2"/><text x="79.7021%" y="655.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="79.4521%" y="629" width="0.1612%" height="15" fill="rgb(228,139,0)" fg:x="986" fg:w="2"/><text x="79.7021%" y="639.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="79.4521%" y="613" width="0.1612%" height="15" fill="rgb(227,214,11)" fg:x="986" fg:w="2"/><text x="79.7021%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="79.4521%" y="597" width="0.1612%" height="15" fill="rgb(228,118,39)" fg:x="986" fg:w="2"/><text x="79.7021%" y="607.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="79.4521%" y="581" width="0.1612%" height="15" fill="rgb(207,117,22)" fg:x="986" fg:w="2"/><text x="79.7021%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="79.4521%" y="565" width="0.1612%" height="15" fill="rgb(225,91,8)" fg:x="986" fg:w="2"/><text x="79.7021%" y="575.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (2 samples, 0.16%)</title><rect x="79.4521%" y="549" width="0.1612%" height="15" fill="rgb(230,219,48)" fg:x="986" fg:w="2"/><text x="79.7021%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="79.5326%" y="533" width="0.0806%" height="15" fill="rgb(244,0,23)" fg:x="987" fg:w="1"/><text x="79.7826%" y="543.50"></text></g><g><title>&lt;serde::de::value::MapDeserializer&lt;I,E&gt; as serde::de::MapAccess&gt;::next_entry_seed (1 samples, 0.08%)</title><rect x="79.5326%" y="517" width="0.0806%" height="15" fill="rgb(206,212,23)" fg:x="987" fg:w="1"/><text x="79.7826%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="79.5326%" y="501" width="0.0806%" height="15" fill="rgb(254,62,10)" fg:x="987" fg:w="1"/><text x="79.7826%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="79.5326%" y="485" width="0.0806%" height="15" fill="rgb(236,58,8)" fg:x="987" fg:w="1"/><text x="79.7826%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="79.5326%" y="469" width="0.0806%" height="15" fill="rgb(232,212,17)" fg:x="987" fg:w="1"/><text x="79.7826%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="79.5326%" y="453" width="0.0806%" height="15" fill="rgb(206,132,9)" fg:x="987" fg:w="1"/><text x="79.7826%" y="463.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_str (1 samples, 0.08%)</title><rect x="79.5326%" y="437" width="0.0806%" height="15" fill="rgb(234,97,28)" fg:x="987" fg:w="1"/><text x="79.7826%" y="447.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new_cyclic (1 samples, 0.08%)</title><rect x="79.6132%" y="789" width="0.0806%" height="15" fill="rgb(254,144,9)" fg:x="988" fg:w="1"/><text x="79.8632%" y="799.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="79.6938%" y="757" width="0.0806%" height="15" fill="rgb(244,204,43)" fg:x="989" fg:w="1"/><text x="79.9438%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="79.6938%" y="741" width="0.0806%" height="15" fill="rgb(248,177,16)" fg:x="989" fg:w="1"/><text x="79.9438%" y="751.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="79.6938%" y="725" width="0.0806%" height="15" fill="rgb(219,110,15)" fg:x="989" fg:w="1"/><text x="79.9438%" y="735.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="79.6938%" y="709" width="0.0806%" height="15" fill="rgb(212,203,25)" fg:x="989" fg:w="1"/><text x="79.9438%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6938%" y="693" width="0.0806%" height="15" fill="rgb(205,50,1)" fg:x="989" fg:w="1"/><text x="79.9438%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="79.6938%" y="677" width="0.0806%" height="15" fill="rgb(222,152,41)" fg:x="989" fg:w="1"/><text x="79.9438%" y="687.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="79.6938%" y="661" width="0.0806%" height="15" fill="rgb(236,83,3)" fg:x="989" fg:w="1"/><text x="79.9438%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="79.6938%" y="645" width="0.0806%" height="15" fill="rgb(214,30,54)" fg:x="989" fg:w="1"/><text x="79.9438%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="79.6938%" y="629" width="0.0806%" height="15" fill="rgb(250,117,31)" fg:x="989" fg:w="1"/><text x="79.9438%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="79.6938%" y="613" width="0.0806%" height="15" fill="rgb(228,77,14)" fg:x="989" fg:w="1"/><text x="79.9438%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.6938%" y="597" width="0.0806%" height="15" fill="rgb(241,3,28)" fg:x="989" fg:w="1"/><text x="79.9438%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="79.6938%" y="581" width="0.0806%" height="15" fill="rgb(221,175,52)" fg:x="989" fg:w="1"/><text x="79.9438%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="79.6938%" y="565" width="0.0806%" height="15" fill="rgb(237,91,6)" fg:x="989" fg:w="1"/><text x="79.9438%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="79.6938%" y="549" width="0.0806%" height="15" fill="rgb(246,46,42)" fg:x="989" fg:w="1"/><text x="79.9438%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="79.6938%" y="533" width="0.0806%" height="15" fill="rgb(235,199,0)" fg:x="989" fg:w="1"/><text x="79.9438%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.08%)</title><rect x="79.6938%" y="517" width="0.0806%" height="15" fill="rgb(224,44,40)" fg:x="989" fg:w="1"/><text x="79.9438%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.08%)</title><rect x="79.6938%" y="501" width="0.0806%" height="15" fill="rgb(209,24,35)" fg:x="989" fg:w="1"/><text x="79.9438%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.08%)</title><rect x="79.6938%" y="485" width="0.0806%" height="15" fill="rgb(244,46,22)" fg:x="989" fg:w="1"/><text x="79.9438%" y="495.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="79.6938%" y="469" width="0.0806%" height="15" fill="rgb(235,99,8)" fg:x="989" fg:w="1"/><text x="79.9438%" y="479.50"></text></g><g><title>anyhow::error::&lt;impl anyhow::Error&gt;::construct (1 samples, 0.08%)</title><rect x="79.7744%" y="757" width="0.0806%" height="15" fill="rgb(218,127,36)" fg:x="990" fg:w="1"/><text x="80.0244%" y="767.50"></text></g><g><title>&lt;alloc::ffi::c_str::CString as core::convert::From&lt;&amp;core::ffi::c_str::CStr&gt;&gt;::from (1 samples, 0.08%)</title><rect x="79.8550%" y="741" width="0.0806%" height="15" fill="rgb(238,47,46)" fg:x="991" fg:w="1"/><text x="80.1050%" y="751.50"></text></g><g><title>alloc::ffi::c_str::&lt;impl alloc::borrow::ToOwned for core::ffi::c_str::CStr&gt;::to_owned (1 samples, 0.08%)</title><rect x="79.8550%" y="725" width="0.0806%" height="15" fill="rgb(233,65,17)" fg:x="991" fg:w="1"/><text x="80.1050%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.08%)</title><rect x="79.8550%" y="709" width="0.0806%" height="15" fill="rgb(239,22,33)" fg:x="991" fg:w="1"/><text x="80.1050%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (1 samples, 0.08%)</title><rect x="79.8550%" y="693" width="0.0806%" height="15" fill="rgb(243,66,43)" fg:x="991" fg:w="1"/><text x="80.1050%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (1 samples, 0.08%)</title><rect x="79.8550%" y="677" width="0.0806%" height="15" fill="rgb(235,210,28)" fg:x="991" fg:w="1"/><text x="80.1050%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (1 samples, 0.08%)</title><rect x="79.8550%" y="661" width="0.0806%" height="15" fill="rgb(205,191,50)" fg:x="991" fg:w="1"/><text x="80.1050%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="79.8550%" y="645" width="0.0806%" height="15" fill="rgb(251,217,19)" fg:x="991" fg:w="1"/><text x="80.1050%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="79.8550%" y="629" width="0.0806%" height="15" fill="rgb(205,174,37)" fg:x="991" fg:w="1"/><text x="80.1050%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="79.8550%" y="613" width="0.0806%" height="15" fill="rgb(212,158,42)" fg:x="991" fg:w="1"/><text x="80.1050%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="79.8550%" y="597" width="0.0806%" height="15" fill="rgb(212,208,51)" fg:x="991" fg:w="1"/><text x="80.1050%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="79.8550%" y="581" width="0.0806%" height="15" fill="rgb(225,198,20)" fg:x="991" fg:w="1"/><text x="80.1050%" y="591.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="79.8550%" y="565" width="0.0806%" height="15" fill="rgb(247,41,44)" fg:x="991" fg:w="1"/><text x="80.1050%" y="575.50"></text></g><g><title>dlerror (1 samples, 0.08%)</title><rect x="79.9355%" y="741" width="0.0806%" height="15" fill="rgb(228,33,41)" fg:x="992" fg:w="1"/><text x="80.1855%" y="751.50"></text></g><g><title>&lt;engine::domain::Domain as engine::domain::SessionOpener&gt;::open_session (11 samples, 0.89%)</title><rect x="79.2909%" y="821" width="0.8864%" height="15" fill="rgb(215,47,52)" fg:x="984" fg:w="11"/><text x="79.5409%" y="831.50"></text></g><g><title>engine::session::Session::new (11 samples, 0.89%)</title><rect x="79.2909%" y="805" width="0.8864%" height="15" fill="rgb(248,106,37)" fg:x="984" fg:w="11"/><text x="79.5409%" y="815.50"></text></g><g><title>kernel::plugins::SessionPlugins::initialize (6 samples, 0.48%)</title><rect x="79.6938%" y="789" width="0.4835%" height="15" fill="rgb(238,91,29)" fg:x="989" fg:w="6"/><text x="79.9438%" y="799.50"></text></g><g><title>&lt;plugins_dynlib::DynamicPlugin as kernel::plugins::Plugin&gt;::initialize (6 samples, 0.48%)</title><rect x="79.6938%" y="773" width="0.4835%" height="15" fill="rgb(226,111,40)" fg:x="989" fg:w="6"/><text x="79.9438%" y="783.50"></text></g><g><title>libloading::os::unix::Library::open (4 samples, 0.32%)</title><rect x="79.8550%" y="757" width="0.3223%" height="15" fill="rgb(229,159,36)" fg:x="991" fg:w="4"/><text x="80.1050%" y="767.50"></text></g><g><title>dlopen (2 samples, 0.16%)</title><rect x="80.0161%" y="741" width="0.1612%" height="15" fill="rgb(221,109,4)" fg:x="993" fg:w="2"/><text x="80.2661%" y="751.50"></text></g><g><title>_dl_catch_error (2 samples, 0.16%)</title><rect x="80.0161%" y="725" width="0.1612%" height="15" fill="rgb(236,56,25)" fg:x="993" fg:w="2"/><text x="80.2661%" y="735.50"></text></g><g><title>_dl_catch_exception (2 samples, 0.16%)</title><rect x="80.0161%" y="709" width="0.1612%" height="15" fill="rgb(244,113,23)" fg:x="993" fg:w="2"/><text x="80.2661%" y="719.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="80.0967%" y="693" width="0.0806%" height="15" fill="rgb(249,132,2)" fg:x="994" fg:w="1"/><text x="80.3467%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.08%)</title><rect x="80.0967%" y="677" width="0.0806%" height="15" fill="rgb(205,185,21)" fg:x="994" fg:w="1"/><text x="80.3467%" y="687.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1773%" y="805" width="0.0806%" height="15" fill="rgb(245,130,2)" fg:x="995" fg:w="1"/><text x="80.4273%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="80.1773%" y="789" width="0.0806%" height="15" fill="rgb(246,71,26)" fg:x="995" fg:w="1"/><text x="80.4273%" y="799.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.2579%" y="725" width="0.0806%" height="15" fill="rgb(234,194,6)" fg:x="996" fg:w="1"/><text x="80.5079%" y="735.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (1 samples, 0.08%)</title><rect x="80.3384%" y="725" width="0.0806%" height="15" fill="rgb(206,24,32)" fg:x="997" fg:w="1"/><text x="80.5884%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.3384%" y="709" width="0.0806%" height="15" fill="rgb(233,7,54)" fg:x="997" fg:w="1"/><text x="80.5884%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.3384%" y="693" width="0.0806%" height="15" fill="rgb(252,46,1)" fg:x="997" fg:w="1"/><text x="80.5884%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="80.4190%" y="709" width="0.0806%" height="15" fill="rgb(216,113,53)" fg:x="998" fg:w="1"/><text x="80.6690%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="80.4996%" y="709" width="0.0806%" height="15" fill="rgb(215,40,24)" fg:x="999" fg:w="1"/><text x="80.7496%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.4996%" y="693" width="0.0806%" height="15" fill="rgb(233,222,8)" fg:x="999" fg:w="1"/><text x="80.7496%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (2 samples, 0.16%)</title><rect x="80.5802%" y="709" width="0.1612%" height="15" fill="rgb(248,73,28)" fg:x="1000" fg:w="2"/><text x="80.8302%" y="719.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="80.5802%" y="693" width="0.1612%" height="15" fill="rgb(247,126,28)" fg:x="1000" fg:w="2"/><text x="80.8302%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.6608%" y="677" width="0.0806%" height="15" fill="rgb(242,173,54)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.6608%" y="661" width="0.0806%" height="15" fill="rgb(244,186,22)" fg:x="1001" fg:w="1"/><text x="80.9108%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.7413%" y="693" width="0.0806%" height="15" fill="rgb(231,187,4)" fg:x="1002" fg:w="1"/><text x="80.9913%" y="703.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.8219%" y="677" width="0.0806%" height="15" fill="rgb(252,66,47)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.8219%" y="661" width="0.0806%" height="15" fill="rgb(240,228,28)" fg:x="1003" fg:w="1"/><text x="81.0719%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9025%" y="645" width="0.0806%" height="15" fill="rgb(237,63,43)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="655.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9025%" y="629" width="0.0806%" height="15" fill="rgb(214,1,44)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="639.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9025%" y="613" width="0.0806%" height="15" fill="rgb(212,2,46)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9025%" y="597" width="0.0806%" height="15" fill="rgb(213,142,5)" fg:x="1004" fg:w="1"/><text x="81.1525%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="80.7413%" y="709" width="0.3223%" height="15" fill="rgb(229,135,1)" fg:x="1002" fg:w="4"/><text x="80.9913%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="80.8219%" y="693" width="0.2417%" height="15" fill="rgb(252,98,38)" fg:x="1003" fg:w="3"/><text x="81.0719%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9025%" y="677" width="0.1612%" height="15" fill="rgb(206,89,40)" fg:x="1004" fg:w="2"/><text x="81.1525%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="80.9025%" y="661" width="0.1612%" height="15" fill="rgb(219,73,36)" fg:x="1004" fg:w="2"/><text x="81.1525%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="80.9831%" y="645" width="0.0806%" height="15" fill="rgb(207,168,32)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="655.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="80.9831%" y="629" width="0.0806%" height="15" fill="rgb(215,113,21)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="80.9831%" y="613" width="0.0806%" height="15" fill="rgb(217,144,43)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="80.9831%" y="597" width="0.0806%" height="15" fill="rgb(249,48,50)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="80.9831%" y="581" width="0.0806%" height="15" fill="rgb(242,1,26)" fg:x="1005" fg:w="1"/><text x="81.2331%" y="591.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (12 samples, 0.97%)</title><rect x="80.2579%" y="741" width="0.9670%" height="15" fill="rgb(231,167,42)" fg:x="996" fg:w="12"/><text x="80.5079%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="80.4190%" y="725" width="0.8058%" height="15" fill="rgb(242,177,45)" fg:x="998" fg:w="10"/><text x="80.6690%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="81.0637%" y="709" width="0.1612%" height="15" fill="rgb(232,121,42)" fg:x="1006" fg:w="2"/><text x="81.3137%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="81.2248%" y="741" width="0.2417%" height="15" fill="rgb(205,8,42)" fg:x="1008" fg:w="3"/><text x="81.4748%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="81.2248%" y="725" width="0.2417%" height="15" fill="rgb(238,199,24)" fg:x="1008" fg:w="3"/><text x="81.4748%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3054%" y="709" width="0.1612%" height="15" fill="rgb(228,112,2)" fg:x="1009" fg:w="2"/><text x="81.5554%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3054%" y="693" width="0.1612%" height="15" fill="rgb(215,115,33)" fg:x="1009" fg:w="2"/><text x="81.5554%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3054%" y="677" width="0.1612%" height="15" fill="rgb(230,209,34)" fg:x="1009" fg:w="2"/><text x="81.5554%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3054%" y="661" width="0.1612%" height="15" fill="rgb(246,76,12)" fg:x="1009" fg:w="2"/><text x="81.5554%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="81.3054%" y="645" width="0.1612%" height="15" fill="rgb(240,110,9)" fg:x="1009" fg:w="2"/><text x="81.5554%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="81.3860%" y="629" width="0.0806%" height="15" fill="rgb(224,94,46)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="81.3860%" y="613" width="0.0806%" height="15" fill="rgb(247,150,22)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="81.3860%" y="597" width="0.0806%" height="15" fill="rgb(249,85,13)" fg:x="1010" fg:w="1"/><text x="81.6360%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="81.4666%" y="693" width="0.0806%" height="15" fill="rgb(208,77,41)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="81.4666%" y="677" width="0.0806%" height="15" fill="rgb(240,42,44)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.4666%" y="661" width="0.0806%" height="15" fill="rgb(222,10,51)" fg:x="1011" fg:w="1"/><text x="81.7166%" y="671.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="81.5471%" y="645" width="0.0806%" height="15" fill="rgb(208,146,53)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (1 samples, 0.08%)</title><rect x="81.5471%" y="629" width="0.0806%" height="15" fill="rgb(236,162,23)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="639.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="81.5471%" y="613" width="0.0806%" height="15" fill="rgb(218,66,21)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="623.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="81.5471%" y="597" width="0.0806%" height="15" fill="rgb(233,6,47)" fg:x="1012" fg:w="1"/><text x="81.7971%" y="607.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="81.6277%" y="613" width="0.1612%" height="15" fill="rgb(236,59,51)" fg:x="1013" fg:w="2"/><text x="81.8777%" y="623.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.7083%" y="597" width="0.0806%" height="15" fill="rgb(242,12,46)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.7083%" y="581" width="0.0806%" height="15" fill="rgb(243,142,19)" fg:x="1014" fg:w="1"/><text x="81.9583%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="81.5471%" y="677" width="0.4029%" height="15" fill="rgb(217,28,17)" fg:x="1012" fg:w="5"/><text x="81.7971%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (5 samples, 0.40%)</title><rect x="81.5471%" y="661" width="0.4029%" height="15" fill="rgb(228,2,27)" fg:x="1012" fg:w="5"/><text x="81.7971%" y="671.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.32%)</title><rect x="81.6277%" y="645" width="0.3223%" height="15" fill="rgb(214,221,4)" fg:x="1013" fg:w="4"/><text x="81.8777%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="81.6277%" y="629" width="0.3223%" height="15" fill="rgb(224,69,26)" fg:x="1013" fg:w="4"/><text x="81.8777%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7889%" y="613" width="0.1612%" height="15" fill="rgb(219,70,4)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.7889%" y="597" width="0.1612%" height="15" fill="rgb(218,157,39)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7889%" y="581" width="0.1612%" height="15" fill="rgb(238,36,28)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="81.7889%" y="565" width="0.1612%" height="15" fill="rgb(232,29,0)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="575.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="81.7889%" y="549" width="0.1612%" height="15" fill="rgb(243,138,46)" fg:x="1015" fg:w="2"/><text x="82.0389%" y="559.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="81.8695%" y="533" width="0.0806%" height="15" fill="rgb(232,186,41)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="543.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8695%" y="517" width="0.0806%" height="15" fill="rgb(252,166,17)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="527.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.8695%" y="501" width="0.0806%" height="15" fill="rgb(228,179,12)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.8695%" y="485" width="0.0806%" height="15" fill="rgb(254,205,53)" fg:x="1016" fg:w="1"/><text x="82.1195%" y="495.50"></text></g><g><title>engine::session::Session::flush (22 samples, 1.77%)</title><rect x="80.2579%" y="805" width="1.7728%" height="15" fill="rgb(224,163,47)" fg:x="996" fg:w="22"/><text x="80.5079%" y="815.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (22 samples, 1.77%)</title><rect x="80.2579%" y="789" width="1.7728%" height="15" fill="rgb(208,43,47)" fg:x="996" fg:w="22"/><text x="80.5079%" y="799.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (22 samples, 1.77%)</title><rect x="80.2579%" y="773" width="1.7728%" height="15" fill="rgb(224,198,38)" fg:x="996" fg:w="22"/><text x="80.5079%" y="783.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (22 samples, 1.77%)</title><rect x="80.2579%" y="757" width="1.7728%" height="15" fill="rgb(234,12,40)" fg:x="996" fg:w="22"/><text x="80.5079%" y="767.50">e..</text></g><g><title>kernel::model::any_entity_changes (7 samples, 0.56%)</title><rect x="81.4666%" y="741" width="0.5641%" height="15" fill="rgb(237,212,39)" fg:x="1011" fg:w="7"/><text x="81.7166%" y="751.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (7 samples, 0.56%)</title><rect x="81.4666%" y="725" width="0.5641%" height="15" fill="rgb(253,2,33)" fg:x="1011" fg:w="7"/><text x="81.7166%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.56%)</title><rect x="81.4666%" y="709" width="0.5641%" height="15" fill="rgb(251,29,16)" fg:x="1011" fg:w="7"/><text x="81.7166%" y="719.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.48%)</title><rect x="81.5471%" y="693" width="0.4835%" height="15" fill="rgb(214,38,29)" fg:x="1012" fg:w="6"/><text x="81.7971%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9500%" y="677" width="0.0806%" height="15" fill="rgb(226,226,29)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="81.9500%" y="661" width="0.0806%" height="15" fill="rgb(236,79,42)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="81.9500%" y="645" width="0.0806%" height="15" fill="rgb(222,12,36)" fg:x="1017" fg:w="1"/><text x="82.2000%" y="655.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.0306%" y="741" width="0.0806%" height="15" fill="rgb(232,123,44)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="751.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="82.0306%" y="725" width="0.0806%" height="15" fill="rgb(234,93,50)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="82.0306%" y="709" width="0.0806%" height="15" fill="rgb(210,86,49)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="82.0306%" y="693" width="0.0806%" height="15" fill="rgb(224,91,54)" fg:x="1018" fg:w="1"/><text x="82.2806%" y="703.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (3 samples, 0.24%)</title><rect x="82.0306%" y="789" width="0.2417%" height="15" fill="rgb(239,169,9)" fg:x="1018" fg:w="3"/><text x="82.2806%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (3 samples, 0.24%)</title><rect x="82.0306%" y="773" width="0.2417%" height="15" fill="rgb(238,29,17)" fg:x="1018" fg:w="3"/><text x="82.2806%" y="783.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (3 samples, 0.24%)</title><rect x="82.0306%" y="757" width="0.2417%" height="15" fill="rgb(227,160,22)" fg:x="1018" fg:w="3"/><text x="82.2806%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (2 samples, 0.16%)</title><rect x="82.1112%" y="741" width="0.1612%" height="15" fill="rgb(231,129,52)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="751.50"></text></g><g><title>kernel::model::props::save_props (2 samples, 0.16%)</title><rect x="82.1112%" y="725" width="0.1612%" height="15" fill="rgb(241,184,9)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="735.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (2 samples, 0.16%)</title><rect x="82.1112%" y="709" width="0.1612%" height="15" fill="rgb(217,43,48)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="719.50"></text></g><g><title>&lt;kernel::model::props::Properties as kernel::model::scopes::Scope&gt;::serialize (2 samples, 0.16%)</title><rect x="82.1112%" y="693" width="0.1612%" height="15" fill="rgb(213,49,1)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="82.1112%" y="677" width="0.1612%" height="15" fill="rgb(223,79,39)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="687.50"></text></g><g><title>serde_json::value::to_value (2 samples, 0.16%)</title><rect x="82.1112%" y="661" width="0.1612%" height="15" fill="rgb(228,227,46)" fg:x="1019" fg:w="2"/><text x="82.3612%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1918%" y="645" width="0.0806%" height="15" fill="rgb(245,89,41)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="655.50"></text></g><g><title>serde::ser::Serializer::collect_map (1 samples, 0.08%)</title><rect x="82.1918%" y="629" width="0.0806%" height="15" fill="rgb(253,83,21)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="639.50"></text></g><g><title>serde_json::value::to_value (1 samples, 0.08%)</title><rect x="82.1918%" y="613" width="0.0806%" height="15" fill="rgb(229,116,51)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="623.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1918%" y="597" width="0.0806%" height="15" fill="rgb(246,67,26)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="607.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="82.1918%" y="581" width="0.0806%" height="15" fill="rgb(250,117,20)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="591.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="82.1918%" y="565" width="0.0806%" height="15" fill="rgb(207,88,17)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="575.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.1918%" y="549" width="0.0806%" height="15" fill="rgb(212,98,36)" fg:x="1020" fg:w="1"/><text x="82.4418%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="82.2724%" y="773" width="0.0806%" height="15" fill="rgb(221,72,6)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="82.2724%" y="757" width="0.0806%" height="15" fill="rgb(235,129,19)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="767.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.2724%" y="741" width="0.0806%" height="15" fill="rgb(237,200,6)" fg:x="1021" fg:w="1"/><text x="82.5224%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.3529%" y="741" width="0.0806%" height="15" fill="rgb(239,69,54)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.3529%" y="725" width="0.0806%" height="15" fill="rgb(214,68,45)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.3529%" y="709" width="0.0806%" height="15" fill="rgb(254,160,8)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.3529%" y="693" width="0.0806%" height="15" fill="rgb(215,226,31)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3529%" y="677" width="0.0806%" height="15" fill="rgb(253,6,35)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.3529%" y="661" width="0.0806%" height="15" fill="rgb(219,96,42)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3529%" y="645" width="0.0806%" height="15" fill="rgb(207,170,13)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.3529%" y="629" width="0.0806%" height="15" fill="rgb(239,101,5)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3529%" y="613" width="0.0806%" height="15" fill="rgb(228,183,34)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.3529%" y="597" width="0.0806%" height="15" fill="rgb(205,28,31)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.3529%" y="581" width="0.0806%" height="15" fill="rgb(214,118,50)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="82.3529%" y="565" width="0.0806%" height="15" fill="rgb(213,108,51)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="575.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.3529%" y="549" width="0.0806%" height="15" fill="rgb(238,56,37)" fg:x="1022" fg:w="1"/><text x="82.6029%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4335%" y="693" width="0.0806%" height="15" fill="rgb(214,136,28)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4335%" y="677" width="0.0806%" height="15" fill="rgb(221,201,54)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4335%" y="661" width="0.0806%" height="15" fill="rgb(228,216,39)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4335%" y="645" width="0.0806%" height="15" fill="rgb(207,229,49)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="82.4335%" y="629" width="0.0806%" height="15" fill="rgb(224,23,43)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="639.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="82.4335%" y="613" width="0.0806%" height="15" fill="rgb(247,97,18)" fg:x="1023" fg:w="1"/><text x="82.6835%" y="623.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="82.3529%" y="773" width="0.2417%" height="15" fill="rgb(232,53,32)" fg:x="1022" fg:w="3"/><text x="82.6029%" y="783.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="82.3529%" y="757" width="0.2417%" height="15" fill="rgb(247,38,23)" fg:x="1022" fg:w="3"/><text x="82.6029%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="82.4335%" y="741" width="0.1612%" height="15" fill="rgb(228,101,52)" fg:x="1023" fg:w="2"/><text x="82.6835%" y="751.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="82.4335%" y="725" width="0.1612%" height="15" fill="rgb(231,45,36)" fg:x="1023" fg:w="2"/><text x="82.6835%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="82.4335%" y="709" width="0.1612%" height="15" fill="rgb(221,183,50)" fg:x="1023" fg:w="2"/><text x="82.6835%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.5141%" y="693" width="0.0806%" height="15" fill="rgb(251,132,12)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5141%" y="677" width="0.0806%" height="15" fill="rgb(252,50,16)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.5141%" y="661" width="0.0806%" height="15" fill="rgb(224,60,15)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.5141%" y="645" width="0.0806%" height="15" fill="rgb(254,2,34)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5141%" y="629" width="0.0806%" height="15" fill="rgb(232,154,8)" fg:x="1024" fg:w="1"/><text x="82.7641%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (8 samples, 0.64%)</title><rect x="82.0306%" y="805" width="0.6446%" height="15" fill="rgb(235,190,52)" fg:x="1018" fg:w="8"/><text x="82.2806%" y="815.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="82.2724%" y="789" width="0.4029%" height="15" fill="rgb(213,218,38)" fg:x="1021" fg:w="5"/><text x="82.5224%" y="799.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (1 samples, 0.08%)</title><rect x="82.5947%" y="773" width="0.0806%" height="15" fill="rgb(237,50,37)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="783.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="82.5947%" y="757" width="0.0806%" height="15" fill="rgb(235,51,35)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="82.5947%" y="741" width="0.0806%" height="15" fill="rgb(244,40,52)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.5947%" y="725" width="0.0806%" height="15" fill="rgb(217,225,45)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="735.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.5947%" y="709" width="0.0806%" height="15" fill="rgb(247,191,36)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.5947%" y="693" width="0.0806%" height="15" fill="rgb(251,144,31)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="677" width="0.0806%" height="15" fill="rgb(227,155,41)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="661" width="0.0806%" height="15" fill="rgb(236,121,36)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="645" width="0.0806%" height="15" fill="rgb(221,128,28)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="629" width="0.0806%" height="15" fill="rgb(249,67,50)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.5947%" y="613" width="0.0806%" height="15" fill="rgb(241,126,38)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="82.5947%" y="597" width="0.0806%" height="15" fill="rgb(239,33,14)" fg:x="1025" fg:w="1"/><text x="82.8447%" y="607.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.6753%" y="725" width="0.0806%" height="15" fill="rgb(207,221,54)" fg:x="1026" fg:w="1"/><text x="82.9253%" y="735.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (2 samples, 0.16%)</title><rect x="82.6753%" y="789" width="0.1612%" height="15" fill="rgb(242,138,43)" fg:x="1026" fg:w="2"/><text x="82.9253%" y="799.50"></text></g><g><title>engine::internal::Entities::add_entity (2 samples, 0.16%)</title><rect x="82.6753%" y="773" width="0.1612%" height="15" fill="rgb(231,118,19)" fg:x="1026" fg:w="2"/><text x="82.9253%" y="783.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (2 samples, 0.16%)</title><rect x="82.6753%" y="757" width="0.1612%" height="15" fill="rgb(214,128,54)" fg:x="1026" fg:w="2"/><text x="82.9253%" y="767.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="82.6753%" y="741" width="0.1612%" height="15" fill="rgb(236,136,6)" fg:x="1026" fg:w="2"/><text x="82.9253%" y="751.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.7558%" y="725" width="0.0806%" height="15" fill="rgb(247,30,38)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="735.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.7558%" y="709" width="0.0806%" height="15" fill="rgb(249,189,40)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="719.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7558%" y="693" width="0.0806%" height="15" fill="rgb(247,179,7)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="703.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7558%" y="677" width="0.0806%" height="15" fill="rgb(239,46,52)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="687.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7558%" y="661" width="0.0806%" height="15" fill="rgb(225,28,52)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="671.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7558%" y="645" width="0.0806%" height="15" fill="rgb(217,208,44)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="655.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.7558%" y="629" width="0.0806%" height="15" fill="rgb(224,11,34)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7558%" y="613" width="0.0806%" height="15" fill="rgb(205,134,17)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.7558%" y="597" width="0.0806%" height="15" fill="rgb(237,125,9)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7558%" y="581" width="0.0806%" height="15" fill="rgb(208,139,47)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.7558%" y="565" width="0.0806%" height="15" fill="rgb(242,5,5)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.7558%" y="549" width="0.0806%" height="15" fill="rgb(218,78,2)" fg:x="1027" fg:w="1"/><text x="83.0058%" y="559.50"></text></g><g><title>plugins_core::build::Build::into_entry (1 samples, 0.08%)</title><rect x="82.9170%" y="741" width="0.0806%" height="15" fill="rgb(217,75,16)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="751.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.9170%" y="725" width="0.0806%" height="15" fill="rgb(212,56,17)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.9170%" y="709" width="0.0806%" height="15" fill="rgb(228,61,29)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.9170%" y="693" width="0.0806%" height="15" fill="rgb(247,202,38)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="82.9170%" y="677" width="0.0806%" height="15" fill="rgb(211,216,43)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="82.9170%" y="661" width="0.0806%" height="15" fill="rgb(220,7,49)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="82.9170%" y="645" width="0.0806%" height="15" fill="rgb(219,158,7)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="655.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9170%" y="629" width="0.0806%" height="15" fill="rgb(206,127,9)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="639.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9170%" y="613" width="0.0806%" height="15" fill="rgb(206,103,43)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="623.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9170%" y="597" width="0.0806%" height="15" fill="rgb(240,108,41)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="607.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9170%" y="581" width="0.0806%" height="15" fill="rgb(252,212,6)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="591.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="82.9170%" y="565" width="0.0806%" height="15" fill="rgb(248,105,31)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="575.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9170%" y="549" width="0.0806%" height="15" fill="rgb(241,123,4)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="559.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="82.9170%" y="533" width="0.0806%" height="15" fill="rgb(223,74,37)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="543.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9170%" y="517" width="0.0806%" height="15" fill="rgb(251,219,28)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="82.9170%" y="501" width="0.0806%" height="15" fill="rgb(218,36,31)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="82.9170%" y="485" width="0.0806%" height="15" fill="rgb(229,40,15)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="82.9170%" y="469" width="0.0806%" height="15" fill="rgb(208,138,37)" fg:x="1029" fg:w="1"/><text x="83.1670%" y="479.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="82.9976%" y="725" width="0.0806%" height="15" fill="rgb(208,40,52)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="735.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="82.9976%" y="709" width="0.0806%" height="15" fill="rgb(246,181,48)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="719.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="82.9976%" y="693" width="0.0806%" height="15" fill="rgb(253,178,36)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="82.9976%" y="677" width="0.0806%" height="15" fill="rgb(210,170,6)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="687.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="82.9976%" y="661" width="0.0806%" height="15" fill="rgb(243,62,22)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="671.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="82.9976%" y="645" width="0.0806%" height="15" fill="rgb(213,145,26)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9976%" y="629" width="0.0806%" height="15" fill="rgb(237,177,23)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="82.9976%" y="613" width="0.0806%" height="15" fill="rgb(252,5,24)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9976%" y="597" width="0.0806%" height="15" fill="rgb(230,108,54)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="82.9976%" y="581" width="0.0806%" height="15" fill="rgb(252,192,41)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="82.9976%" y="565" width="0.0806%" height="15" fill="rgb(218,125,20)" fg:x="1030" fg:w="1"/><text x="83.2476%" y="575.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.32%)</title><rect x="82.8364%" y="789" width="0.3223%" height="15" fill="rgb(230,223,15)" fg:x="1028" fg:w="4"/><text x="83.0864%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.32%)</title><rect x="82.8364%" y="773" width="0.3223%" height="15" fill="rgb(239,99,47)" fg:x="1028" fg:w="4"/><text x="83.0864%" y="783.50"></text></g><g><title>plugins_core::build::QuickThing::make (4 samples, 0.32%)</title><rect x="82.8364%" y="757" width="0.3223%" height="15" fill="rgb(222,214,23)" fg:x="1028" fg:w="4"/><text x="83.0864%" y="767.50"></text></g><g><title>plugins_core::build::Build::leads_to (2 samples, 0.16%)</title><rect x="82.9976%" y="741" width="0.1612%" height="15" fill="rgb(250,98,43)" fg:x="1030" fg:w="2"/><text x="83.2476%" y="751.50"></text></g><g><title>plugins_core::tools::leads_to (1 samples, 0.08%)</title><rect x="83.0782%" y="725" width="0.0806%" height="15" fill="rgb(226,140,11)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="735.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="83.0782%" y="709" width="0.0806%" height="15" fill="rgb(239,2,22)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="719.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="83.0782%" y="693" width="0.0806%" height="15" fill="rgb(209,106,26)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="703.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="83.0782%" y="677" width="0.0806%" height="15" fill="rgb(209,135,11)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="687.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="83.0782%" y="661" width="0.0806%" height="15" fill="rgb(241,58,6)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="671.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="83.0782%" y="645" width="0.0806%" height="15" fill="rgb(214,78,1)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0782%" y="629" width="0.0806%" height="15" fill="rgb(229,135,33)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0782%" y="613" width="0.0806%" height="15" fill="rgb(245,87,50)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="83.0782%" y="597" width="0.0806%" height="15" fill="rgb(222,222,8)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.0782%" y="581" width="0.0806%" height="15" fill="rgb(214,97,50)" fg:x="1031" fg:w="1"/><text x="83.3282%" y="591.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::commit (1 samples, 0.08%)</title><rect x="83.1587%" y="757" width="0.0806%" height="15" fill="rgb(244,161,51)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1587%" y="741" width="0.0806%" height="15" fill="rgb(225,17,4)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="83.1587%" y="725" width="0.0806%" height="15" fill="rgb(238,10,13)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="83.1587%" y="709" width="0.0806%" height="15" fill="rgb(239,169,14)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="83.1587%" y="693" width="0.0806%" height="15" fill="rgb(213,105,25)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="83.1587%" y="677" width="0.0806%" height="15" fill="rgb(233,4,17)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.1587%" y="661" width="0.0806%" height="15" fill="rgb(212,5,35)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="83.1587%" y="645" width="0.0806%" height="15" fill="rgb(216,3,14)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="83.1587%" y="629" width="0.0806%" height="15" fill="rgb(240,105,33)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="83.1587%" y="613" width="0.0806%" height="15" fill="rgb(216,73,0)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="83.1587%" y="597" width="0.0806%" height="15" fill="rgb(217,153,48)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="83.1587%" y="581" width="0.0806%" height="15" fill="rgb(218,180,8)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="83.1587%" y="565" width="0.0806%" height="15" fill="rgb(252,168,2)" fg:x="1032" fg:w="1"/><text x="83.4087%" y="575.50"></text></g><g><title>engine::identifiers::model::set_gid (1 samples, 0.08%)</title><rect x="83.2393%" y="757" width="0.0806%" height="15" fill="rgb(224,116,33)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="767.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="83.2393%" y="741" width="0.0806%" height="15" fill="rgb(229,205,17)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="751.50"></text></g><g><title>engine::identifiers::model::_::&lt;impl serde::ser::Serialize for engine::identifiers::model::Identifiers&gt;::serialize (1 samples, 0.08%)</title><rect x="83.2393%" y="725" width="0.0806%" height="15" fill="rgb(234,1,41)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="735.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="83.2393%" y="709" width="0.0806%" height="15" fill="rgb(244,185,8)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2393%" y="693" width="0.0806%" height="15" fill="rgb(248,51,21)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="703.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="83.2393%" y="677" width="0.0806%" height="15" fill="rgb(248,157,31)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="687.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="83.2393%" y="661" width="0.0806%" height="15" fill="rgb(210,34,47)" fg:x="1033" fg:w="1"/><text x="83.4893%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.3199%" y="693" width="0.0806%" height="15" fill="rgb(227,139,53)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.3199%" y="677" width="0.0806%" height="15" fill="rgb(232,211,37)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.3199%" y="661" width="0.0806%" height="15" fill="rgb(236,133,10)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.3199%" y="645" width="0.0806%" height="15" fill="rgb(243,202,25)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.3199%" y="629" width="0.0806%" height="15" fill="rgb(224,59,9)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.3199%" y="613" width="0.0806%" height="15" fill="rgb(206,146,16)" fg:x="1034" fg:w="1"/><text x="83.5699%" y="623.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="83.4005%" y="677" width="0.0806%" height="15" fill="rgb(220,47,2)" fg:x="1035" fg:w="1"/><text x="83.6505%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="83.4005%" y="661" width="0.0806%" height="15" fill="rgb(225,124,51)" fg:x="1035" fg:w="1"/><text x="83.6505%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.4811%" y="677" width="0.0806%" height="15" fill="rgb(241,220,50)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.4811%" y="661" width="0.0806%" height="15" fill="rgb(232,168,5)" fg:x="1036" fg:w="1"/><text x="83.7311%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.5616%" y="661" width="0.0806%" height="15" fill="rgb(243,90,22)" fg:x="1037" fg:w="1"/><text x="83.8116%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="83.6422%" y="629" width="0.0806%" height="15" fill="rgb(223,153,32)" fg:x="1038" fg:w="1"/><text x="83.8922%" y="639.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="83.7228%" y="613" width="0.0806%" height="15" fill="rgb(243,124,20)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="623.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.7228%" y="597" width="0.0806%" height="15" fill="rgb(246,168,39)" fg:x="1039" fg:w="1"/><text x="83.9728%" y="607.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="83.6422%" y="645" width="0.2417%" height="15" fill="rgb(222,165,54)" fg:x="1038" fg:w="3"/><text x="83.8922%" y="655.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="83.7228%" y="629" width="0.1612%" height="15" fill="rgb(251,142,27)" fg:x="1039" fg:w="2"/><text x="83.9728%" y="639.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8034%" y="613" width="0.0806%" height="15" fill="rgb(207,168,50)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="623.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8034%" y="597" width="0.0806%" height="15" fill="rgb(250,139,25)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8034%" y="581" width="0.0806%" height="15" fill="rgb(214,194,48)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="83.8034%" y="565" width="0.0806%" height="15" fill="rgb(227,138,47)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="83.8034%" y="549" width="0.0806%" height="15" fill="rgb(250,162,5)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="559.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="83.8034%" y="533" width="0.0806%" height="15" fill="rgb(229,74,25)" fg:x="1040" fg:w="1"/><text x="84.0534%" y="543.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (7 samples, 0.56%)</title><rect x="83.4005%" y="693" width="0.5641%" height="15" fill="rgb(221,124,34)" fg:x="1035" fg:w="7"/><text x="83.6505%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="83.5616%" y="677" width="0.4029%" height="15" fill="rgb(225,94,25)" fg:x="1037" fg:w="5"/><text x="83.8116%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (4 samples, 0.32%)</title><rect x="83.6422%" y="661" width="0.3223%" height="15" fill="rgb(210,100,12)" fg:x="1038" fg:w="4"/><text x="83.8922%" y="671.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="83.8840%" y="645" width="0.0806%" height="15" fill="rgb(206,62,48)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="83.8840%" y="629" width="0.0806%" height="15" fill="rgb(222,181,9)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="83.8840%" y="613" width="0.0806%" height="15" fill="rgb(248,42,38)" fg:x="1041" fg:w="1"/><text x="84.1340%" y="623.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="83.3199%" y="725" width="0.8864%" height="15" fill="rgb(213,40,6)" fg:x="1034" fg:w="11"/><text x="83.5699%" y="735.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (11 samples, 0.89%)</title><rect x="83.3199%" y="709" width="0.8864%" height="15" fill="rgb(211,108,15)" fg:x="1034" fg:w="11"/><text x="83.5699%" y="719.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.24%)</title><rect x="83.9645%" y="693" width="0.2417%" height="15" fill="rgb(249,62,9)" fg:x="1042" fg:w="3"/><text x="84.2145%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="84.1257%" y="677" width="0.0806%" height="15" fill="rgb(233,26,54)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="84.1257%" y="661" width="0.0806%" height="15" fill="rgb(210,175,26)" fg:x="1044" fg:w="1"/><text x="84.3757%" y="671.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.2063%" y="693" width="0.0806%" height="15" fill="rgb(210,43,33)" fg:x="1045" fg:w="1"/><text x="84.4563%" y="703.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="84.5286%" y="597" width="0.0806%" height="15" fill="rgb(224,46,17)" fg:x="1049" fg:w="1"/><text x="84.7786%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (6 samples, 0.48%)</title><rect x="84.2063%" y="725" width="0.4835%" height="15" fill="rgb(254,24,38)" fg:x="1045" fg:w="6"/><text x="84.4563%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (6 samples, 0.48%)</title><rect x="84.2063%" y="709" width="0.4835%" height="15" fill="rgb(248,32,0)" fg:x="1045" fg:w="6"/><text x="84.4563%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="84.2869%" y="693" width="0.4029%" height="15" fill="rgb(224,37,41)" fg:x="1046" fg:w="5"/><text x="84.5369%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (5 samples, 0.40%)</title><rect x="84.2869%" y="677" width="0.4029%" height="15" fill="rgb(252,70,22)" fg:x="1046" fg:w="5"/><text x="84.5369%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="84.4480%" y="661" width="0.2417%" height="15" fill="rgb(241,123,50)" fg:x="1048" fg:w="3"/><text x="84.6980%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5286%" y="645" width="0.1612%" height="15" fill="rgb(246,138,33)" fg:x="1049" fg:w="2"/><text x="84.7786%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5286%" y="629" width="0.1612%" height="15" fill="rgb(218,39,32)" fg:x="1049" fg:w="2"/><text x="84.7786%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="84.5286%" y="613" width="0.1612%" height="15" fill="rgb(241,229,10)" fg:x="1049" fg:w="2"/><text x="84.7786%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="84.6092%" y="597" width="0.0806%" height="15" fill="rgb(212,160,10)" fg:x="1050" fg:w="1"/><text x="84.8592%" y="607.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (1 samples, 0.08%)</title><rect x="84.6898%" y="709" width="0.0806%" height="15" fill="rgb(227,48,51)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="719.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="84.6898%" y="693" width="0.0806%" height="15" fill="rgb(238,159,21)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.08%)</title><rect x="84.6898%" y="677" width="0.0806%" height="15" fill="rgb(216,1,10)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="84.6898%" y="661" width="0.0806%" height="15" fill="rgb(209,228,25)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="84.6898%" y="645" width="0.0806%" height="15" fill="rgb(234,160,10)" fg:x="1051" fg:w="1"/><text x="84.9398%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="84.8509%" y="677" width="0.0806%" height="15" fill="rgb(212,66,25)" fg:x="1053" fg:w="1"/><text x="85.1009%" y="687.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (2 samples, 0.16%)</title><rect x="84.9315%" y="661" width="0.1612%" height="15" fill="rgb(254,121,18)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.9315%" y="645" width="0.1612%" height="15" fill="rgb(219,127,1)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9315%" y="629" width="0.1612%" height="15" fill="rgb(219,224,42)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.9315%" y="613" width="0.1612%" height="15" fill="rgb(253,130,22)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9315%" y="597" width="0.1612%" height="15" fill="rgb(253,39,28)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="607.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.9315%" y="581" width="0.1612%" height="15" fill="rgb(231,126,37)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="591.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9315%" y="565" width="0.1612%" height="15" fill="rgb(251,145,14)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="575.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.9315%" y="549" width="0.1612%" height="15" fill="rgb(229,164,30)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="84.9315%" y="533" width="0.1612%" height="15" fill="rgb(233,227,54)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="543.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="84.9315%" y="517" width="0.1612%" height="15" fill="rgb(240,94,22)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="527.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (2 samples, 0.16%)</title><rect x="84.9315%" y="501" width="0.1612%" height="15" fill="rgb(217,56,16)" fg:x="1054" fg:w="2"/><text x="85.1815%" y="511.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0121%" y="485" width="0.0806%" height="15" fill="rgb(229,133,38)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.0121%" y="469" width="0.0806%" height="15" fill="rgb(225,139,35)" fg:x="1055" fg:w="1"/><text x="85.2621%" y="479.50"></text></g><g><title>engine::session::Session::flush (25 samples, 2.01%)</title><rect x="83.1587%" y="789" width="2.0145%" height="15" fill="rgb(223,100,16)" fg:x="1032" fg:w="25"/><text x="83.4087%" y="799.50">e..</text></g><g><title>engine::session::Session::save_entity_changes (25 samples, 2.01%)</title><rect x="83.1587%" y="773" width="2.0145%" height="15" fill="rgb(207,43,50)" fg:x="1032" fg:w="25"/><text x="83.4087%" y="783.50">e..</text></g><g><title>engine::internal::Entities::foreach_entity_mut (23 samples, 1.85%)</title><rect x="83.3199%" y="757" width="1.8533%" height="15" fill="rgb(237,221,9)" fg:x="1034" fg:w="23"/><text x="83.5699%" y="767.50">e..</text></g><g><title>engine::session::SavesEntities::check_for_changes (23 samples, 1.85%)</title><rect x="83.3199%" y="741" width="1.8533%" height="15" fill="rgb(236,134,24)" fg:x="1034" fg:w="23"/><text x="83.5699%" y="751.50">e..</text></g><g><title>kernel::model::any_entity_changes (6 samples, 0.48%)</title><rect x="84.6898%" y="725" width="0.4835%" height="15" fill="rgb(222,173,4)" fg:x="1051" fg:w="6"/><text x="84.9398%" y="735.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (5 samples, 0.40%)</title><rect x="84.7703%" y="709" width="0.4029%" height="15" fill="rgb(234,144,52)" fg:x="1052" fg:w="5"/><text x="85.0203%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.40%)</title><rect x="84.7703%" y="693" width="0.4029%" height="15" fill="rgb(223,41,7)" fg:x="1052" fg:w="5"/><text x="85.0203%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_map (3 samples, 0.24%)</title><rect x="84.9315%" y="677" width="0.2417%" height="15" fill="rgb(226,143,9)" fg:x="1054" fg:w="3"/><text x="85.1815%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0927%" y="661" width="0.0806%" height="15" fill="rgb(234,43,37)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.0927%" y="645" width="0.0806%" height="15" fill="rgb(224,188,11)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="655.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="85.0927%" y="629" width="0.0806%" height="15" fill="rgb(233,113,28)" fg:x="1056" fg:w="1"/><text x="85.3427%" y="639.50"></text></g><g><title>kernel::model::EntityPtr::new (1 samples, 0.08%)</title><rect x="85.1732%" y="789" width="0.0806%" height="15" fill="rgb(215,16,1)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="799.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="85.1732%" y="773" width="0.0806%" height="15" fill="rgb(238,74,38)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="85.1732%" y="757" width="0.0806%" height="15" fill="rgb(221,66,35)" fg:x="1057" fg:w="1"/><text x="85.4232%" y="767.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="85.2538%" y="789" width="0.0806%" height="15" fill="rgb(251,225,2)" fg:x="1058" fg:w="1"/><text x="85.5038%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="85.3344%" y="757" width="0.0806%" height="15" fill="rgb(240,169,18)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="767.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="85.3344%" y="741" width="0.0806%" height="15" fill="rgb(243,130,50)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="751.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="85.3344%" y="725" width="0.0806%" height="15" fill="rgb(228,75,13)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="85.3344%" y="709" width="0.0806%" height="15" fill="rgb(252,95,35)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.3344%" y="693" width="0.0806%" height="15" fill="rgb(222,180,54)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="85.3344%" y="677" width="0.0806%" height="15" fill="rgb(250,110,34)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="687.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="85.3344%" y="661" width="0.0806%" height="15" fill="rgb(208,100,21)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="85.3344%" y="645" width="0.0806%" height="15" fill="rgb(209,123,47)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="85.3344%" y="629" width="0.0806%" height="15" fill="rgb(237,147,9)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.3344%" y="613" width="0.0806%" height="15" fill="rgb(228,206,23)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="85.3344%" y="597" width="0.0806%" height="15" fill="rgb(217,174,46)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="607.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.08%)</title><rect x="85.3344%" y="581" width="0.0806%" height="15" fill="rgb(231,126,21)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.08%)</title><rect x="85.3344%" y="565" width="0.0806%" height="15" fill="rgb(245,26,1)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.08%)</title><rect x="85.3344%" y="549" width="0.0806%" height="15" fill="rgb(224,138,39)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.08%)</title><rect x="85.3344%" y="533" width="0.0806%" height="15" fill="rgb(208,97,3)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.3344%" y="517" width="0.0806%" height="15" fill="rgb(222,77,29)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.08%)</title><rect x="85.3344%" y="501" width="0.0806%" height="15" fill="rgb(243,188,36)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="85.3344%" y="485" width="0.0806%" height="15" fill="rgb(218,214,3)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.08%)</title><rect x="85.3344%" y="469" width="0.0806%" height="15" fill="rgb(211,183,45)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.08%)</title><rect x="85.3344%" y="453" width="0.0806%" height="15" fill="rgb(230,218,25)" fg:x="1059" fg:w="1"/><text x="85.5844%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="85.4150%" y="677" width="0.1612%" height="15" fill="rgb(233,86,6)" fg:x="1060" fg:w="2"/><text x="85.6650%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="661" width="0.0806%" height="15" fill="rgb(220,59,24)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="645" width="0.0806%" height="15" fill="rgb(227,60,1)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.4956%" y="629" width="0.0806%" height="15" fill="rgb(216,212,54)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.08%)</title><rect x="85.4956%" y="613" width="0.0806%" height="15" fill="rgb(227,81,54)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.08%)</title><rect x="85.4956%" y="597" width="0.0806%" height="15" fill="rgb(206,204,43)" fg:x="1061" fg:w="1"/><text x="85.7456%" y="607.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (3 samples, 0.24%)</title><rect x="85.4150%" y="725" width="0.2417%" height="15" fill="rgb(219,29,26)" fg:x="1060" fg:w="3"/><text x="85.6650%" y="735.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="85.4150%" y="709" width="0.2417%" height="15" fill="rgb(252,40,36)" fg:x="1060" fg:w="3"/><text x="85.6650%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="85.4150%" y="693" width="0.2417%" height="15" fill="rgb(224,205,39)" fg:x="1060" fg:w="3"/><text x="85.6650%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5761%" y="677" width="0.0806%" height="15" fill="rgb(222,13,21)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="661" width="0.0806%" height="15" fill="rgb(243,139,6)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="671.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="85.5761%" y="645" width="0.0806%" height="15" fill="rgb(237,101,11)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="655.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="629" width="0.0806%" height="15" fill="rgb(254,49,28)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="639.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="85.5761%" y="613" width="0.0806%" height="15" fill="rgb(223,41,21)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="623.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="85.5761%" y="597" width="0.0806%" height="15" fill="rgb(225,103,29)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.08%)</title><rect x="85.5761%" y="581" width="0.0806%" height="15" fill="rgb(244,82,43)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="85.5761%" y="565" width="0.0806%" height="15" fill="rgb(217,39,3)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="85.5761%" y="549" width="0.0806%" height="15" fill="rgb(239,128,25)" fg:x="1062" fg:w="1"/><text x="85.8261%" y="559.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="85.4150%" y="741" width="0.3223%" height="15" fill="rgb(210,192,37)" fg:x="1060" fg:w="4"/><text x="85.6650%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="85.6567%" y="725" width="0.0806%" height="15" fill="rgb(219,98,18)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="85.6567%" y="709" width="0.0806%" height="15" fill="rgb(224,228,38)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="719.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="85.6567%" y="693" width="0.0806%" height="15" fill="rgb(241,129,43)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6567%" y="677" width="0.0806%" height="15" fill="rgb(223,8,51)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6567%" y="661" width="0.0806%" height="15" fill="rgb(233,76,24)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="85.6567%" y="645" width="0.0806%" height="15" fill="rgb(219,115,10)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="85.6567%" y="629" width="0.0806%" height="15" fill="rgb(222,137,12)" fg:x="1063" fg:w="1"/><text x="85.9067%" y="639.50"></text></g><g><title>__libc_malloc (3 samples, 0.24%)</title><rect x="85.8179%" y="677" width="0.2417%" height="15" fill="rgb(216,192,16)" fg:x="1065" fg:w="3"/><text x="86.0679%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (10 samples, 0.81%)</title><rect x="85.3344%" y="773" width="0.8058%" height="15" fill="rgb(247,6,27)" fg:x="1059" fg:w="10"/><text x="85.5844%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (9 samples, 0.73%)</title><rect x="85.4150%" y="757" width="0.7252%" height="15" fill="rgb(254,39,44)" fg:x="1060" fg:w="9"/><text x="85.6650%" y="767.50"></text></g><g><title>engine::internal::EntityMap::add_entity (5 samples, 0.40%)</title><rect x="85.7373%" y="741" width="0.4029%" height="15" fill="rgb(251,116,35)" fg:x="1064" fg:w="5"/><text x="85.9873%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.40%)</title><rect x="85.7373%" y="725" width="0.4029%" height="15" fill="rgb(208,61,44)" fg:x="1064" fg:w="5"/><text x="85.9873%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (5 samples, 0.40%)</title><rect x="85.7373%" y="709" width="0.4029%" height="15" fill="rgb(250,34,5)" fg:x="1064" fg:w="5"/><text x="85.9873%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.40%)</title><rect x="85.7373%" y="693" width="0.4029%" height="15" fill="rgb(241,40,15)" fg:x="1064" fg:w="5"/><text x="85.9873%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="86.0596%" y="677" width="0.0806%" height="15" fill="rgb(229,182,2)" fg:x="1068" fg:w="1"/><text x="86.3096%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.1402%" y="677" width="0.0806%" height="15" fill="rgb(244,148,52)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.1402%" y="661" width="0.0806%" height="15" fill="rgb(225,211,4)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.1402%" y="645" width="0.0806%" height="15" fill="rgb(208,222,47)" fg:x="1069" fg:w="1"/><text x="86.3902%" y="655.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.1402%" y="757" width="0.1612%" height="15" fill="rgb(233,162,0)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="767.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="86.1402%" y="741" width="0.1612%" height="15" fill="rgb(241,54,13)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (2 samples, 0.16%)</title><rect x="86.1402%" y="725" width="0.1612%" height="15" fill="rgb(213,89,18)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="735.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="86.1402%" y="709" width="0.1612%" height="15" fill="rgb(215,170,37)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="86.1402%" y="693" width="0.1612%" height="15" fill="rgb(216,133,15)" fg:x="1069" fg:w="2"/><text x="86.3902%" y="703.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="86.2208%" y="677" width="0.0806%" height="15" fill="rgb(230,42,19)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="687.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="86.2208%" y="661" width="0.0806%" height="15" fill="rgb(221,103,41)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="671.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="86.2208%" y="645" width="0.0806%" height="15" fill="rgb(220,142,31)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.2208%" y="629" width="0.0806%" height="15" fill="rgb(239,218,4)" fg:x="1070" fg:w="1"/><text x="86.4708%" y="639.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (1 samples, 0.08%)</title><rect x="86.3014%" y="757" width="0.0806%" height="15" fill="rgb(232,16,4)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="767.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3014%" y="741" width="0.0806%" height="15" fill="rgb(226,213,25)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3014%" y="725" width="0.0806%" height="15" fill="rgb(235,135,19)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="86.3014%" y="709" width="0.0806%" height="15" fill="rgb(240,107,29)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="719.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="86.3014%" y="693" width="0.0806%" height="15" fill="rgb(206,164,44)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="86.3014%" y="677" width="0.0806%" height="15" fill="rgb(210,23,48)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.3014%" y="661" width="0.0806%" height="15" fill="rgb(212,138,25)" fg:x="1071" fg:w="1"/><text x="86.5514%" y="671.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="86.3820%" y="709" width="0.0806%" height="15" fill="rgb(224,152,3)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.3820%" y="693" width="0.0806%" height="15" fill="rgb(214,38,23)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.3820%" y="677" width="0.0806%" height="15" fill="rgb(215,161,10)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="687.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3820%" y="661" width="0.0806%" height="15" fill="rgb(240,185,7)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3820%" y="645" width="0.0806%" height="15" fill="rgb(244,104,25)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.3820%" y="629" width="0.0806%" height="15" fill="rgb(242,140,44)" fg:x="1072" fg:w="1"/><text x="86.6320%" y="639.50"></text></g><g><title>plugins_core::build::Build::holding (15 samples, 1.21%)</title><rect x="85.3344%" y="789" width="1.2087%" height="15" fill="rgb(245,30,19)" fg:x="1059" fg:w="15"/><text x="85.5844%" y="799.50"></text></g><g><title>plugins_core::tools::set_container (5 samples, 0.40%)</title><rect x="86.1402%" y="773" width="0.4029%" height="15" fill="rgb(219,208,35)" fg:x="1069" fg:w="5"/><text x="86.3902%" y="783.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="86.3820%" y="757" width="0.1612%" height="15" fill="rgb(235,200,7)" fg:x="1072" fg:w="2"/><text x="86.6320%" y="767.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="86.3820%" y="741" width="0.1612%" height="15" fill="rgb(220,193,10)" fg:x="1072" fg:w="2"/><text x="86.6320%" y="751.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="86.3820%" y="725" width="0.1612%" height="15" fill="rgb(212,216,39)" fg:x="1072" fg:w="2"/><text x="86.6320%" y="735.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="86.4625%" y="709" width="0.0806%" height="15" fill="rgb(212,134,19)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="719.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="86.4625%" y="693" width="0.0806%" height="15" fill="rgb(230,57,24)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="703.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="86.4625%" y="677" width="0.0806%" height="15" fill="rgb(238,209,37)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="661" width="0.0806%" height="15" fill="rgb(247,11,45)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="645" width="0.0806%" height="15" fill="rgb(222,126,6)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="629" width="0.0806%" height="15" fill="rgb(245,77,24)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="613" width="0.0806%" height="15" fill="rgb(227,14,24)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="597" width="0.0806%" height="15" fill="rgb(211,112,42)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="86.4625%" y="581" width="0.0806%" height="15" fill="rgb(230,103,42)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="591.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.4625%" y="565" width="0.0806%" height="15" fill="rgb(228,125,42)" fg:x="1073" fg:w="1"/><text x="86.7125%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="86.5431%" y="613" width="0.0806%" height="15" fill="rgb(243,33,6)" fg:x="1074" fg:w="1"/><text x="86.7931%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="86.5431%" y="629" width="0.1612%" height="15" fill="rgb(231,2,40)" fg:x="1074" fg:w="2"/><text x="86.7931%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6237%" y="613" width="0.0806%" height="15" fill="rgb(224,200,53)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.6237%" y="597" width="0.0806%" height="15" fill="rgb(215,116,36)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.6237%" y="581" width="0.0806%" height="15" fill="rgb(240,23,51)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.6237%" y="565" width="0.0806%" height="15" fill="rgb(221,72,5)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.6237%" y="549" width="0.0806%" height="15" fill="rgb(245,142,9)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6237%" y="533" width="0.0806%" height="15" fill="rgb(207,34,16)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.6237%" y="517" width="0.0806%" height="15" fill="rgb(252,101,12)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.6237%" y="501" width="0.0806%" height="15" fill="rgb(239,89,37)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.6237%" y="485" width="0.0806%" height="15" fill="rgb(252,227,37)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.6237%" y="469" width="0.0806%" height="15" fill="rgb(212,164,17)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.6237%" y="453" width="0.0806%" height="15" fill="rgb(240,86,13)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.6237%" y="437" width="0.0806%" height="15" fill="rgb(233,183,32)" fg:x="1075" fg:w="1"/><text x="86.8737%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="86.5431%" y="661" width="0.2417%" height="15" fill="rgb(205,201,38)" fg:x="1074" fg:w="3"/><text x="86.7931%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="86.5431%" y="645" width="0.2417%" height="15" fill="rgb(210,122,38)" fg:x="1074" fg:w="3"/><text x="86.7931%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="86.7043%" y="629" width="0.0806%" height="15" fill="rgb(241,174,26)" fg:x="1076" fg:w="1"/><text x="86.9543%" y="639.50"></text></g><g><title>plugins_core::build::Build::into_entry (4 samples, 0.32%)</title><rect x="86.5431%" y="789" width="0.3223%" height="15" fill="rgb(219,89,7)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (4 samples, 0.32%)</title><rect x="86.5431%" y="773" width="0.3223%" height="15" fill="rgb(246,9,24)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (4 samples, 0.32%)</title><rect x="86.5431%" y="757" width="0.3223%" height="15" fill="rgb(205,132,21)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (4 samples, 0.32%)</title><rect x="86.5431%" y="741" width="0.3223%" height="15" fill="rgb(210,11,17)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (4 samples, 0.32%)</title><rect x="86.5431%" y="725" width="0.3223%" height="15" fill="rgb(226,138,14)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="735.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="86.5431%" y="709" width="0.3223%" height="15" fill="rgb(224,108,44)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="719.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="86.5431%" y="693" width="0.3223%" height="15" fill="rgb(247,114,36)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="703.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="86.5431%" y="677" width="0.3223%" height="15" fill="rgb(231,183,14)" fg:x="1074" fg:w="4"/><text x="86.7931%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7849%" y="661" width="0.0806%" height="15" fill="rgb(218,168,4)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="86.7849%" y="645" width="0.0806%" height="15" fill="rgb(210,8,3)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="86.7849%" y="629" width="0.0806%" height="15" fill="rgb(216,165,0)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="86.7849%" y="613" width="0.0806%" height="15" fill="rgb(245,120,5)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="86.7849%" y="597" width="0.0806%" height="15" fill="rgb(249,121,32)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7849%" y="581" width="0.0806%" height="15" fill="rgb(211,55,33)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="86.7849%" y="565" width="0.0806%" height="15" fill="rgb(254,46,35)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="86.7849%" y="549" width="0.0806%" height="15" fill="rgb(213,213,19)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="86.7849%" y="533" width="0.0806%" height="15" fill="rgb(207,152,44)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="86.7849%" y="517" width="0.0806%" height="15" fill="rgb(227,195,36)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="86.7849%" y="501" width="0.0806%" height="15" fill="rgb(210,137,36)" fg:x="1077" fg:w="1"/><text x="87.0349%" y="511.50"></text></g><g><title>plugins_core::build::Build::occupying (1 samples, 0.08%)</title><rect x="86.8654%" y="789" width="0.0806%" height="15" fill="rgb(253,47,47)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::add_entity (1 samples, 0.08%)</title><rect x="86.8654%" y="773" width="0.0806%" height="15" fill="rgb(230,147,18)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="783.50"></text></g><g><title>engine::internal::Entities::add_entity (1 samples, 0.08%)</title><rect x="86.8654%" y="757" width="0.0806%" height="15" fill="rgb(247,33,49)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="767.50"></text></g><g><title>&lt;engine::sequences::GlobalIds as engine::internal::AssignEntityId&gt;::assign (1 samples, 0.08%)</title><rect x="86.8654%" y="741" width="0.0806%" height="15" fill="rgb(239,26,29)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="751.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::set_gid (1 samples, 0.08%)</title><rect x="86.8654%" y="725" width="0.0806%" height="15" fill="rgb(245,145,52)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="735.50"></text></g><g><title>kernel::model::props::save_props (1 samples, 0.08%)</title><rect x="86.8654%" y="709" width="0.0806%" height="15" fill="rgb(224,139,32)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="86.8654%" y="693" width="0.0806%" height="15" fill="rgb(238,202,19)" fg:x="1078" fg:w="1"/><text x="87.1154%" y="703.50"></text></g><g><title>plugins_core::build::BuildSurroundings::build (54 samples, 4.35%)</title><rect x="82.6753%" y="805" width="4.3513%" height="15" fill="rgb(249,211,53)" fg:x="1026" fg:w="54"/><text x="82.9253%" y="815.50">plugi..</text></g><g><title>plugins_core::build::Build::with_username (1 samples, 0.08%)</title><rect x="86.9460%" y="789" width="0.0806%" height="15" fill="rgb(237,229,33)" fg:x="1079" fg:w="1"/><text x="87.1960%" y="799.50"></text></g><g><title>&lt;tests::HoldingKeyInVessel as tests::WorldFixture&gt;::prepare (86 samples, 6.93%)</title><rect x="80.1773%" y="821" width="6.9299%" height="15" fill="rgb(208,97,40)" fg:x="995" fg:w="86"/><text x="80.4273%" y="831.50">&lt;tests::H..</text></g><g><title>plugins_core::build::BuildSurroundings::make (1 samples, 0.08%)</title><rect x="87.0266%" y="805" width="0.0806%" height="15" fill="rgb(254,36,16)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="815.50"></text></g><g><title>plugins_core::build::QuickThing::make (1 samples, 0.08%)</title><rect x="87.0266%" y="789" width="0.0806%" height="15" fill="rgb(221,7,12)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="799.50"></text></g><g><title>kernel::model::EntityPtr::new_blank (1 samples, 0.08%)</title><rect x="87.0266%" y="773" width="0.0806%" height="15" fill="rgb(205,11,12)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="783.50"></text></g><g><title>kernel::model::entity::Entity::new_blank (1 samples, 0.08%)</title><rect x="87.0266%" y="757" width="0.0806%" height="15" fill="rgb(227,72,28)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="767.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::new_key (1 samples, 0.08%)</title><rect x="87.0266%" y="741" width="0.0806%" height="15" fill="rgb(228,7,34)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="751.50"></text></g><g><title>&lt;engine::sequences::DeterministicKeys as engine::sequences::Sequence&lt;kernel::model::base::EntityKey&gt;&gt;::following (1 samples, 0.08%)</title><rect x="87.0266%" y="725" width="0.0806%" height="15" fill="rgb(230,52,42)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="735.50"></text></g><g><title>kernel::model::base::EntityKey::new (1 samples, 0.08%)</title><rect x="87.0266%" y="709" width="0.0806%" height="15" fill="rgb(219,177,53)" fg:x="1080" fg:w="1"/><text x="87.2766%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::domain::Domain&gt; (1 samples, 0.08%)</title><rect x="87.1072%" y="821" width="0.0806%" height="15" fill="rgb(243,196,34)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.1072%" y="805" width="0.0806%" height="15" fill="rgb(213,66,49)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.08%)</title><rect x="87.1072%" y="789" width="0.0806%" height="15" fill="rgb(233,11,50)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="87.1072%" y="773" width="0.0806%" height="15" fill="rgb(235,190,6)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="783.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="87.1072%" y="757" width="0.0806%" height="15" fill="rgb(212,64,44)" fg:x="1081" fg:w="1"/><text x="87.3572%" y="767.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.16%)</title><rect x="87.2683%" y="789" width="0.1612%" height="15" fill="rgb(206,95,44)" fg:x="1083" fg:w="2"/><text x="87.5183%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.16%)</title><rect x="87.2683%" y="773" width="0.1612%" height="15" fill="rgb(227,136,25)" fg:x="1083" fg:w="2"/><text x="87.5183%" y="783.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::save (1 samples, 0.08%)</title><rect x="87.3489%" y="757" width="0.0806%" height="15" fill="rgb(206,178,17)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3489%" y="741" width="0.0806%" height="15" fill="rgb(208,168,35)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.3489%" y="725" width="0.0806%" height="15" fill="rgb(213,210,40)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="87.3489%" y="709" width="0.0806%" height="15" fill="rgb(236,60,6)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="87.3489%" y="693" width="0.0806%" height="15" fill="rgb(220,186,36)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="87.3489%" y="677" width="0.0806%" height="15" fill="rgb(225,120,49)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3489%" y="661" width="0.0806%" height="15" fill="rgb(250,115,20)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="87.3489%" y="645" width="0.0806%" height="15" fill="rgb(207,214,23)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="87.3489%" y="629" width="0.0806%" height="15" fill="rgb(240,9,18)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="87.3489%" y="613" width="0.0806%" height="15" fill="rgb(232,170,48)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="87.3489%" y="597" width="0.0806%" height="15" fill="rgb(236,149,23)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="87.3489%" y="581" width="0.0806%" height="15" fill="rgb(210,125,42)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="87.3489%" y="565" width="0.0806%" height="15" fill="rgb(207,201,52)" fg:x="1084" fg:w="1"/><text x="87.5989%" y="575.50"></text></g><g><title>engine::identifiers::model::get_gid (2 samples, 0.16%)</title><rect x="87.4295%" y="789" width="0.1612%" height="15" fill="rgb(250,187,37)" fg:x="1085" fg:w="2"/><text x="87.6795%" y="799.50"></text></g><g><title>kernel::model::entry::Entry::scope (2 samples, 0.16%)</title><rect x="87.4295%" y="773" width="0.1612%" height="15" fill="rgb(214,186,2)" fg:x="1085" fg:w="2"/><text x="87.6795%" y="783.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="87.4295%" y="757" width="0.1612%" height="15" fill="rgb(207,189,15)" fg:x="1085" fg:w="2"/><text x="87.6795%" y="767.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="87.5101%" y="741" width="0.0806%" height="15" fill="rgb(221,99,21)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="751.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="87.5101%" y="725" width="0.0806%" height="15" fill="rgb(212,67,18)" fg:x="1086" fg:w="1"/><text x="87.7601%" y="735.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.8324%" y="725" width="0.0806%" height="15" fill="rgb(226,24,24)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="735.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.8324%" y="709" width="0.0806%" height="15" fill="rgb(252,123,31)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.8324%" y="693" width="0.0806%" height="15" fill="rgb(251,227,47)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="87.8324%" y="677" width="0.0806%" height="15" fill="rgb(233,84,53)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.08%)</title><rect x="87.8324%" y="661" width="0.0806%" height="15" fill="rgb(228,57,19)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.08%)</title><rect x="87.8324%" y="645" width="0.0806%" height="15" fill="rgb(251,81,5)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="655.50"></text></g><g><title>realloc (1 samples, 0.08%)</title><rect x="87.8324%" y="629" width="0.0806%" height="15" fill="rgb(236,211,27)" fg:x="1090" fg:w="1"/><text x="88.0824%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="87.9130%" y="709" width="0.0806%" height="15" fill="rgb(218,21,6)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="719.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9130%" y="693" width="0.0806%" height="15" fill="rgb(239,104,19)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (1 samples, 0.08%)</title><rect x="87.9130%" y="677" width="0.0806%" height="15" fill="rgb(234,179,27)" fg:x="1091" fg:w="1"/><text x="88.1630%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="87.9936%" y="709" width="0.0806%" height="15" fill="rgb(221,154,39)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="87.9936%" y="693" width="0.0806%" height="15" fill="rgb(228,190,1)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="703.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="87.9936%" y="677" width="0.0806%" height="15" fill="rgb(244,122,33)" fg:x="1092" fg:w="1"/><text x="88.2436%" y="687.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.0741%" y="693" width="0.0806%" height="15" fill="rgb(227,56,37)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="703.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.0741%" y="677" width="0.0806%" height="15" fill="rgb(207,158,16)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="687.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.0741%" y="661" width="0.0806%" height="15" fill="rgb(251,222,30)" fg:x="1093" fg:w="1"/><text x="88.3241%" y="671.50"></text></g><g><title>serde_json::ser::format_escaped_str (1 samples, 0.08%)</title><rect x="88.1547%" y="677" width="0.0806%" height="15" fill="rgb(240,22,49)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="687.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.1547%" y="661" width="0.0806%" height="15" fill="rgb(224,207,37)" fg:x="1094" fg:w="1"/><text x="88.4047%" y="671.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (3 samples, 0.24%)</title><rect x="88.1547%" y="693" width="0.2417%" height="15" fill="rgb(249,188,40)" fg:x="1094" fg:w="3"/><text x="88.4047%" y="703.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2353%" y="677" width="0.1612%" height="15" fill="rgb(254,141,11)" fg:x="1095" fg:w="2"/><text x="88.4853%" y="687.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (2 samples, 0.16%)</title><rect x="88.2353%" y="661" width="0.1612%" height="15" fill="rgb(231,177,6)" fg:x="1095" fg:w="2"/><text x="88.4853%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.2353%" y="645" width="0.1612%" height="15" fill="rgb(241,6,16)" fg:x="1095" fg:w="2"/><text x="88.4853%" y="655.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (1 samples, 0.08%)</title><rect x="88.3159%" y="629" width="0.0806%" height="15" fill="rgb(230,50,14)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.08%)</title><rect x="88.3159%" y="613" width="0.0806%" height="15" fill="rgb(254,36,3)" fg:x="1096" fg:w="1"/><text x="88.5659%" y="623.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (5 samples, 0.40%)</title><rect x="88.0741%" y="709" width="0.4029%" height="15" fill="rgb(226,149,37)" fg:x="1093" fg:w="5"/><text x="88.3241%" y="719.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.08%)</title><rect x="88.3965%" y="693" width="0.0806%" height="15" fill="rgb(253,49,27)" fg:x="1097" fg:w="1"/><text x="88.6465%" y="703.50"></text></g><g><title>&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt (11 samples, 0.89%)</title><rect x="87.7518%" y="757" width="0.8864%" height="15" fill="rgb(249,182,52)" fg:x="1089" fg:w="11"/><text x="88.0018%" y="767.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (10 samples, 0.81%)</title><rect x="87.8324%" y="741" width="0.8058%" height="15" fill="rgb(223,42,15)" fg:x="1090" fg:w="10"/><text x="88.0824%" y="751.50"></text></g><g><title>serde_json::value::ser::&lt;impl serde::ser::Serialize for serde_json::value::Value&gt;::serialize (9 samples, 0.73%)</title><rect x="87.9130%" y="725" width="0.7252%" height="15" fill="rgb(232,31,42)" fg:x="1091" fg:w="9"/><text x="88.1630%" y="735.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.16%)</title><rect x="88.4770%" y="709" width="0.1612%" height="15" fill="rgb(233,56,46)" fg:x="1098" fg:w="2"/><text x="88.7270%" y="719.50"></text></g><g><title>&lt;&lt;serde_json::value::Value as core::fmt::Display&gt;::fmt::WriterFormatter as std::io::Write&gt;::write (2 samples, 0.16%)</title><rect x="88.4770%" y="693" width="0.1612%" height="15" fill="rgb(241,143,21)" fg:x="1098" fg:w="2"/><text x="88.7270%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.16%)</title><rect x="88.4770%" y="677" width="0.1612%" height="15" fill="rgb(251,222,15)" fg:x="1098" fg:w="2"/><text x="88.7270%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.6382%" y="725" width="0.0806%" height="15" fill="rgb(242,101,40)" fg:x="1100" fg:w="1"/><text x="88.8882%" y="735.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7188%" y="709" width="0.0806%" height="15" fill="rgb(247,60,44)" fg:x="1101" fg:w="1"/><text x="88.9688%" y="719.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="88.7994%" y="709" width="0.0806%" height="15" fill="rgb(254,48,47)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="719.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="88.7994%" y="693" width="0.0806%" height="15" fill="rgb(253,30,33)" fg:x="1102" fg:w="1"/><text x="89.0494%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (4 samples, 0.32%)</title><rect x="88.6382%" y="757" width="0.3223%" height="15" fill="rgb(253,214,47)" fg:x="1100" fg:w="4"/><text x="88.8882%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (4 samples, 0.32%)</title><rect x="88.6382%" y="741" width="0.3223%" height="15" fill="rgb(241,108,29)" fg:x="1100" fg:w="4"/><text x="88.8882%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="88.7188%" y="725" width="0.2417%" height="15" fill="rgb(240,36,2)" fg:x="1101" fg:w="3"/><text x="88.9688%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.8799%" y="709" width="0.0806%" height="15" fill="rgb(243,198,24)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="88.8799%" y="693" width="0.0806%" height="15" fill="rgb(225,98,27)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="88.8799%" y="677" width="0.0806%" height="15" fill="rgb(208,86,30)" fg:x="1103" fg:w="1"/><text x="89.1299%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.0411%" y="693" width="0.0806%" height="15" fill="rgb(242,157,11)" fg:x="1105" fg:w="1"/><text x="89.2911%" y="703.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.1217%" y="677" width="0.0806%" height="15" fill="rgb(244,84,16)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="687.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="89.1217%" y="661" width="0.0806%" height="15" fill="rgb(247,20,46)" fg:x="1106" fg:w="1"/><text x="89.3717%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="89.0411%" y="725" width="0.2417%" height="15" fill="rgb(240,157,20)" fg:x="1105" fg:w="3"/><text x="89.2911%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (3 samples, 0.24%)</title><rect x="89.0411%" y="709" width="0.2417%" height="15" fill="rgb(212,151,38)" fg:x="1105" fg:w="3"/><text x="89.2911%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="89.1217%" y="693" width="0.1612%" height="15" fill="rgb(233,197,14)" fg:x="1106" fg:w="2"/><text x="89.3717%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2023%" y="677" width="0.0806%" height="15" fill="rgb(226,148,28)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2023%" y="661" width="0.0806%" height="15" fill="rgb(244,141,30)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2023%" y="645" width="0.0806%" height="15" fill="rgb(215,73,38)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="89.2023%" y="629" width="0.0806%" height="15" fill="rgb(230,148,29)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="639.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="89.2023%" y="613" width="0.0806%" height="15" fill="rgb(250,41,52)" fg:x="1107" fg:w="1"/><text x="89.4523%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.2828%" y="709" width="0.0806%" height="15" fill="rgb(215,48,1)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="719.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.08%)</title><rect x="89.2828%" y="693" width="0.0806%" height="15" fill="rgb(205,223,38)" fg:x="1108" fg:w="1"/><text x="89.5328%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3634%" y="661" width="0.0806%" height="15" fill="rgb(213,51,8)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3634%" y="645" width="0.0806%" height="15" fill="rgb(248,53,11)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="89.3634%" y="629" width="0.0806%" height="15" fill="rgb(218,140,4)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="89.3634%" y="613" width="0.0806%" height="15" fill="rgb(248,161,31)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="89.3634%" y="597" width="0.0806%" height="15" fill="rgb(239,88,32)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="89.3634%" y="581" width="0.0806%" height="15" fill="rgb(234,14,28)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3634%" y="565" width="0.0806%" height="15" fill="rgb(235,173,11)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="89.3634%" y="549" width="0.0806%" height="15" fill="rgb(222,70,2)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="89.3634%" y="533" width="0.0806%" height="15" fill="rgb(228,196,41)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="89.3634%" y="517" width="0.0806%" height="15" fill="rgb(249,19,9)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="89.3634%" y="501" width="0.0806%" height="15" fill="rgb(221,16,43)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="511.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="89.3634%" y="485" width="0.0806%" height="15" fill="rgb(225,207,6)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.3634%" y="469" width="0.0806%" height="15" fill="rgb(249,32,32)" fg:x="1109" fg:w="1"/><text x="89.6134%" y="479.50"></text></g><g><title>treediff::diff::diff (1 samples, 0.08%)</title><rect x="89.4440%" y="661" width="0.0806%" height="15" fill="rgb(232,163,43)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::set::Difference&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4440%" y="645" width="0.0806%" height="15" fill="rgb(236,158,54)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="655.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="89.4440%" y="629" width="0.0806%" height="15" fill="rgb(205,126,44)" fg:x="1110" fg:w="1"/><text x="89.6940%" y="639.50"></text></g><g><title>&lt;kernel::model::compare::TreeDiff as kernel::model::compare::CompareChanges&lt;serde_json::value::Value,serde_json::value::Value&gt;&gt;::any_changes (8 samples, 0.64%)</title><rect x="88.9605%" y="741" width="0.6446%" height="15" fill="rgb(210,162,12)" fg:x="1104" fg:w="8"/><text x="89.2105%" y="751.50"></text></g><g><title>treediff::diff::diff (4 samples, 0.32%)</title><rect x="89.2828%" y="725" width="0.3223%" height="15" fill="rgb(218,156,48)" fg:x="1108" fg:w="4"/><text x="89.5328%" y="735.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="89.3634%" y="709" width="0.2417%" height="15" fill="rgb(248,210,3)" fg:x="1109" fg:w="3"/><text x="89.6134%" y="719.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="89.3634%" y="693" width="0.2417%" height="15" fill="rgb(212,43,27)" fg:x="1109" fg:w="3"/><text x="89.6134%" y="703.50"></text></g><g><title>treediff::diff::diff (3 samples, 0.24%)</title><rect x="89.3634%" y="677" width="0.2417%" height="15" fill="rgb(241,52,6)" fg:x="1109" fg:w="3"/><text x="89.6134%" y="687.50"></text></g><g><title>treediff::value::serde_json::&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (1 samples, 0.08%)</title><rect x="89.5246%" y="661" width="0.0806%" height="15" fill="rgb(222,178,35)" fg:x="1111" fg:w="1"/><text x="89.7746%" y="671.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="89.7663%" y="677" width="0.0806%" height="15" fill="rgb(205,121,46)" fg:x="1114" fg:w="1"/><text x="90.0163%" y="687.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.32%)</title><rect x="89.6052%" y="709" width="0.3223%" height="15" fill="rgb(249,67,1)" fg:x="1112" fg:w="4"/><text x="89.8552%" y="719.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.24%)</title><rect x="89.6857%" y="693" width="0.2417%" height="15" fill="rgb(238,168,42)" fg:x="1113" fg:w="3"/><text x="89.9357%" y="703.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="89.8469%" y="677" width="0.0806%" height="15" fill="rgb(205,36,48)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="687.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="89.8469%" y="661" width="0.0806%" height="15" fill="rgb(240,85,12)" fg:x="1115" fg:w="1"/><text x="90.0969%" y="671.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Acls&gt;::serialize (1 samples, 0.08%)</title><rect x="89.9275%" y="709" width="0.0806%" height="15" fill="rgb(245,27,39)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="89.9275%" y="693" width="0.0806%" height="15" fill="rgb(218,129,34)" fg:x="1116" fg:w="1"/><text x="90.1775%" y="703.50"></text></g><g><title>kernel::model::base::_::&lt;impl serde::ser::Serialize for kernel::model::base::Identity&gt;::serialize (1 samples, 0.08%)</title><rect x="90.0081%" y="709" width="0.0806%" height="15" fill="rgb(221,157,12)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="90.0081%" y="693" width="0.0806%" height="15" fill="rgb(213,206,20)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="703.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0081%" y="677" width="0.0806%" height="15" fill="rgb(227,115,30)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="687.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.0081%" y="661" width="0.0806%" height="15" fill="rgb(221,40,47)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="90.0081%" y="645" width="0.0806%" height="15" fill="rgb(239,96,49)" fg:x="1117" fg:w="1"/><text x="90.2581%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.3304%" y="661" width="0.0806%" height="15" fill="rgb(223,24,38)" fg:x="1121" fg:w="1"/><text x="90.5804%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.08%)</title><rect x="90.4110%" y="645" width="0.0806%" height="15" fill="rgb(242,35,45)" fg:x="1122" fg:w="1"/><text x="90.6610%" y="655.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (1 samples, 0.08%)</title><rect x="90.4915%" y="581" width="0.0806%" height="15" fill="rgb(236,20,9)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="591.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4915%" y="565" width="0.0806%" height="15" fill="rgb(239,124,8)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="575.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="90.4915%" y="549" width="0.0806%" height="15" fill="rgb(228,92,29)" fg:x="1123" fg:w="1"/><text x="90.7415%" y="559.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::Entity&gt;::serialize (13 samples, 1.05%)</title><rect x="89.6052%" y="741" width="1.0475%" height="15" fill="rgb(251,53,39)" fg:x="1112" fg:w="13"/><text x="89.8552%" y="751.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (13 samples, 1.05%)</title><rect x="89.6052%" y="725" width="1.0475%" height="15" fill="rgb(224,44,10)" fg:x="1112" fg:w="13"/><text x="89.8552%" y="735.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.56%)</title><rect x="90.0886%" y="709" width="0.5641%" height="15" fill="rgb(254,10,15)" fg:x="1118" fg:w="7"/><text x="90.3386%" y="719.50"></text></g><g><title>&lt;serde_json::value::ser::Serializer as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.40%)</title><rect x="90.2498%" y="693" width="0.4029%" height="15" fill="rgb(245,173,6)" fg:x="1120" fg:w="5"/><text x="90.4998%" y="703.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (4 samples, 0.32%)</title><rect x="90.3304%" y="677" width="0.3223%" height="15" fill="rgb(228,74,0)" fg:x="1121" fg:w="4"/><text x="90.5804%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3 samples, 0.24%)</title><rect x="90.4110%" y="661" width="0.2417%" height="15" fill="rgb(206,138,29)" fg:x="1122" fg:w="3"/><text x="90.6610%" y="671.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.4915%" y="645" width="0.1612%" height="15" fill="rgb(253,27,43)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.4915%" y="629" width="0.1612%" height="15" fill="rgb(231,73,0)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="639.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeMap&gt;::serialize_value (2 samples, 0.16%)</title><rect x="90.4915%" y="613" width="0.1612%" height="15" fill="rgb(218,9,23)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="623.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (2 samples, 0.16%)</title><rect x="90.4915%" y="597" width="0.1612%" height="15" fill="rgb(251,55,29)" fg:x="1123" fg:w="2"/><text x="90.7415%" y="607.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.5721%" y="581" width="0.0806%" height="15" fill="rgb(223,180,22)" fg:x="1124" fg:w="1"/><text x="90.8221%" y="591.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.7333%" y="581" width="0.0806%" height="15" fill="rgb(223,29,21)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="591.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7333%" y="565" width="0.0806%" height="15" fill="rgb(251,103,37)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.7333%" y="549" width="0.0806%" height="15" fill="rgb(214,11,21)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="559.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7333%" y="533" width="0.0806%" height="15" fill="rgb(205,137,13)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="543.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="90.7333%" y="517" width="0.0806%" height="15" fill="rgb(225,58,47)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="527.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="90.7333%" y="501" width="0.0806%" height="15" fill="rgb(222,197,14)" fg:x="1126" fg:w="1"/><text x="90.9833%" y="511.50"></text></g><g><title>&lt;serde_json::read::StrRead as serde_json::read::Read&gt;::parse_str (1 samples, 0.08%)</title><rect x="90.8139%" y="565" width="0.0806%" height="15" fill="rgb(215,210,33)" fg:x="1127" fg:w="1"/><text x="91.0639%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.7333%" y="645" width="0.2417%" height="15" fill="rgb(242,13,9)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="655.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7333%" y="629" width="0.2417%" height="15" fill="rgb(218,31,39)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="639.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (3 samples, 0.24%)</title><rect x="90.7333%" y="613" width="0.2417%" height="15" fill="rgb(211,214,23)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="623.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="90.7333%" y="597" width="0.2417%" height="15" fill="rgb(237,92,14)" fg:x="1126" fg:w="3"/><text x="90.9833%" y="607.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (2 samples, 0.16%)</title><rect x="90.8139%" y="581" width="0.1612%" height="15" fill="rgb(220,78,5)" fg:x="1127" fg:w="2"/><text x="91.0639%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="90.8944%" y="565" width="0.0806%" height="15" fill="rgb(237,23,21)" fg:x="1128" fg:w="1"/><text x="91.1444%" y="575.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (4 samples, 0.32%)</title><rect x="90.7333%" y="677" width="0.3223%" height="15" fill="rgb(251,207,51)" fg:x="1126" fg:w="4"/><text x="90.9833%" y="687.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="90.7333%" y="661" width="0.3223%" height="15" fill="rgb(249,206,18)" fg:x="1126" fg:w="4"/><text x="90.9833%" y="671.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="90.9750%" y="645" width="0.0806%" height="15" fill="rgb(236,20,19)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="655.50"></text></g><g><title>std::alloc::default_alloc_error_hook (1 samples, 0.08%)</title><rect x="90.9750%" y="629" width="0.0806%" height="15" fill="rgb(214,227,29)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.08%)</title><rect x="90.9750%" y="613" width="0.0806%" height="15" fill="rgb(209,183,4)" fg:x="1129" fg:w="1"/><text x="91.2250%" y="623.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (44 samples, 3.55%)</title><rect x="87.5907%" y="789" width="3.5455%" height="15" fill="rgb(233,111,23)" fg:x="1087" fg:w="44"/><text x="87.8407%" y="799.50">engi..</text></g><g><title>engine::session::SavesEntities::check_for_changes (43 samples, 3.46%)</title><rect x="87.6712%" y="773" width="3.4649%" height="15" fill="rgb(238,121,27)" fg:x="1088" fg:w="43"/><text x="87.9212%" y="783.50">eng..</text></g><g><title>kernel::model::any_entity_changes (27 samples, 2.18%)</title><rect x="88.9605%" y="757" width="2.1757%" height="15" fill="rgb(236,120,41)" fg:x="1104" fg:w="27"/><text x="89.2105%" y="767.50">k..</text></g><g><title>serde_json::value::de::&lt;impl core::str::traits::FromStr for serde_json::value::Value&gt;::from_str (6 samples, 0.48%)</title><rect x="90.6527%" y="741" width="0.4835%" height="15" fill="rgb(241,143,10)" fg:x="1125" fg:w="6"/><text x="90.9027%" y="751.50"></text></g><g><title>serde_json::de::from_trait (5 samples, 0.40%)</title><rect x="90.7333%" y="725" width="0.4029%" height="15" fill="rgb(224,86,31)" fg:x="1126" fg:w="5"/><text x="90.9833%" y="735.50"></text></g><g><title>&lt;&amp;mut serde_json::de::Deserializer&lt;R&gt; as serde::de::Deserializer&gt;::deserialize_any (5 samples, 0.40%)</title><rect x="90.7333%" y="709" width="0.4029%" height="15" fill="rgb(236,212,27)" fg:x="1126" fg:w="5"/><text x="90.9833%" y="719.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5 samples, 0.40%)</title><rect x="90.7333%" y="693" width="0.4029%" height="15" fill="rgb(219,43,51)" fg:x="1126" fg:w="5"/><text x="90.9833%" y="703.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="91.0556%" y="677" width="0.0806%" height="15" fill="rgb(232,216,8)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="687.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.0556%" y="661" width="0.0806%" height="15" fill="rgb(206,222,39)" fg:x="1130" fg:w="1"/><text x="91.3056%" y="671.50"></text></g><g><title>kernel::model::EntityPtr::key (1 samples, 0.08%)</title><rect x="91.1362%" y="757" width="0.0806%" height="15" fill="rgb(209,149,48)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1362%" y="741" width="0.0806%" height="15" fill="rgb(229,155,21)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="91.1362%" y="725" width="0.0806%" height="15" fill="rgb(246,152,26)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="91.1362%" y="709" width="0.0806%" height="15" fill="rgb(206,70,42)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="91.1362%" y="693" width="0.0806%" height="15" fill="rgb(236,9,11)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="91.1362%" y="677" width="0.0806%" height="15" fill="rgb(238,145,47)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1362%" y="661" width="0.0806%" height="15" fill="rgb(252,189,7)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="91.1362%" y="645" width="0.0806%" height="15" fill="rgb(254,168,51)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="91.1362%" y="629" width="0.0806%" height="15" fill="rgb(227,105,46)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="91.1362%" y="613" width="0.0806%" height="15" fill="rgb(227,74,30)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="91.1362%" y="597" width="0.0806%" height="15" fill="rgb(206,212,44)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="91.1362%" y="581" width="0.0806%" height="15" fill="rgb(252,69,11)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="91.1362%" y="565" width="0.0806%" height="15" fill="rgb(239,116,0)" fg:x="1131" fg:w="1"/><text x="91.3862%" y="575.50"></text></g><g><title>engine::session::Session::close (51 samples, 4.11%)</title><rect x="87.1878%" y="821" width="4.1096%" height="15" fill="rgb(246,189,23)" fg:x="1082" fg:w="51"/><text x="87.4378%" y="831.50">engi..</text></g><g><title>engine::session::Session::save_entity_changes (51 samples, 4.11%)</title><rect x="87.1878%" y="805" width="4.1096%" height="15" fill="rgb(229,50,41)" fg:x="1082" fg:w="51"/><text x="87.4378%" y="815.50">engi..</text></g><g><title>engine::session::Session::world (2 samples, 0.16%)</title><rect x="91.1362%" y="789" width="0.1612%" height="15" fill="rgb(214,66,37)" fg:x="1131" fg:w="2"/><text x="91.3862%" y="799.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (2 samples, 0.16%)</title><rect x="91.1362%" y="773" width="0.1612%" height="15" fill="rgb(226,28,6)" fg:x="1131" fg:w="2"/><text x="91.3862%" y="783.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="91.2168%" y="757" width="0.0806%" height="15" fill="rgb(239,154,0)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="767.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.08%)</title><rect x="91.2168%" y="741" width="0.0806%" height="15" fill="rgb(233,97,11)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.08%)</title><rect x="91.2168%" y="725" width="0.0806%" height="15" fill="rgb(236,215,16)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="735.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.2168%" y="709" width="0.0806%" height="15" fill="rgb(246,188,29)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="719.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.08%)</title><rect x="91.2168%" y="693" width="0.0806%" height="15" fill="rgb(207,7,29)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="703.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::fmt::Debug&gt;::fmt (1 samples, 0.08%)</title><rect x="91.2168%" y="677" width="0.0806%" height="15" fill="rgb(238,112,43)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.08%)</title><rect x="91.2168%" y="661" width="0.0806%" height="15" fill="rgb(230,110,32)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.08%)</title><rect x="91.2168%" y="645" width="0.0806%" height="15" fill="rgb(218,197,32)" fg:x="1132" fg:w="1"/><text x="91.4668%" y="655.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::Evaluator&gt;::evaluate (1 samples, 0.08%)</title><rect x="91.2973%" y="725" width="0.0806%" height="15" fill="rgb(252,61,9)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="735.50"></text></g><g><title>&lt;plugins_core::building::BuildingPlugin as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="91.2973%" y="709" width="0.0806%" height="15" fill="rgb(244,140,14)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="719.50"></text></g><g><title>&lt;plugins_core::building::parser::MakeItemParser as kernel::plugins::ParsesActions&gt;::try_parse_action (1 samples, 0.08%)</title><rect x="91.2973%" y="693" width="0.0806%" height="15" fill="rgb(216,14,47)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1 samples, 0.08%)</title><rect x="91.2973%" y="677" width="0.0806%" height="15" fill="rgb(224,130,52)" fg:x="1133" fg:w="1"/><text x="91.5473%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.5391%" y="661" width="0.0806%" height="15" fill="rgb(210,229,51)" fg:x="1136" fg:w="1"/><text x="91.7891%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="91.6197%" y="661" width="0.0806%" height="15" fill="rgb(242,13,9)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.6197%" y="645" width="0.0806%" height="15" fill="rgb(252,71,50)" fg:x="1137" fg:w="1"/><text x="91.8697%" y="655.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7002%" y="645" width="0.0806%" height="15" fill="rgb(218,225,6)" fg:x="1138" fg:w="1"/><text x="91.9502%" y="655.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="91.7808%" y="629" width="0.0806%" height="15" fill="rgb(219,27,35)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.7808%" y="613" width="0.0806%" height="15" fill="rgb(226,30,1)" fg:x="1139" fg:w="1"/><text x="92.0308%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.56%)</title><rect x="91.3779%" y="677" width="0.5641%" height="15" fill="rgb(227,164,34)" fg:x="1134" fg:w="7"/><text x="91.6279%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (3 samples, 0.24%)</title><rect x="91.7002%" y="661" width="0.2417%" height="15" fill="rgb(206,103,4)" fg:x="1138" fg:w="3"/><text x="91.9502%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="91.7808%" y="645" width="0.1612%" height="15" fill="rgb(214,166,19)" fg:x="1139" fg:w="2"/><text x="92.0308%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="91.8614%" y="629" width="0.0806%" height="15" fill="rgb(240,56,20)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="639.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="91.8614%" y="613" width="0.0806%" height="15" fill="rgb(224,25,3)" fg:x="1140" fg:w="1"/><text x="92.1114%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.1837%" y="565" width="0.0806%" height="15" fill="rgb(216,206,54)" fg:x="1144" fg:w="1"/><text x="92.4337%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.2643%" y="565" width="0.0806%" height="15" fill="rgb(225,142,10)" fg:x="1145" fg:w="1"/><text x="92.5143%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="92.1031%" y="581" width="0.3223%" height="15" fill="rgb(246,9,18)" fg:x="1143" fg:w="4"/><text x="92.3531%" y="591.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.3449%" y="565" width="0.0806%" height="15" fill="rgb(247,140,18)" fg:x="1146" fg:w="1"/><text x="92.5949%" y="575.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (7 samples, 0.56%)</title><rect x="91.9420%" y="613" width="0.5641%" height="15" fill="rgb(239,184,22)" fg:x="1141" fg:w="7"/><text x="92.1920%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (6 samples, 0.48%)</title><rect x="92.0226%" y="597" width="0.4835%" height="15" fill="rgb(227,94,44)" fg:x="1142" fg:w="6"/><text x="92.2726%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4255%" y="581" width="0.0806%" height="15" fill="rgb(219,43,3)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.4255%" y="565" width="0.0806%" height="15" fill="rgb(210,76,31)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.4255%" y="549" width="0.0806%" height="15" fill="rgb(225,85,12)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.4255%" y="533" width="0.0806%" height="15" fill="rgb(214,191,28)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.4255%" y="517" width="0.0806%" height="15" fill="rgb(214,43,14)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4255%" y="501" width="0.0806%" height="15" fill="rgb(253,117,5)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.4255%" y="485" width="0.0806%" height="15" fill="rgb(208,124,26)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.4255%" y="469" width="0.0806%" height="15" fill="rgb(228,208,39)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.4255%" y="453" width="0.0806%" height="15" fill="rgb(206,180,39)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.4255%" y="437" width="0.0806%" height="15" fill="rgb(205,111,37)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.4255%" y="421" width="0.0806%" height="15" fill="rgb(208,121,24)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="431.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.4255%" y="405" width="0.0806%" height="15" fill="rgb(218,215,32)" fg:x="1147" fg:w="1"/><text x="92.6755%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.81%)</title><rect x="91.9420%" y="629" width="0.8058%" height="15" fill="rgb(244,168,53)" fg:x="1141" fg:w="10"/><text x="92.1920%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.5060%" y="613" width="0.2417%" height="15" fill="rgb(214,9,36)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.5060%" y="597" width="0.2417%" height="15" fill="rgb(231,4,34)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.24%)</title><rect x="92.5060%" y="581" width="0.2417%" height="15" fill="rgb(210,83,51)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.24%)</title><rect x="92.5060%" y="565" width="0.2417%" height="15" fill="rgb(224,112,1)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.24%)</title><rect x="92.5060%" y="549" width="0.2417%" height="15" fill="rgb(216,33,41)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="92.5060%" y="533" width="0.2417%" height="15" fill="rgb(215,179,42)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.24%)</title><rect x="92.5060%" y="517" width="0.2417%" height="15" fill="rgb(205,81,48)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.24%)</title><rect x="92.5060%" y="501" width="0.2417%" height="15" fill="rgb(246,17,30)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.24%)</title><rect x="92.5060%" y="485" width="0.2417%" height="15" fill="rgb(226,19,16)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.24%)</title><rect x="92.5060%" y="469" width="0.2417%" height="15" fill="rgb(207,3,14)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="479.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.24%)</title><rect x="92.5060%" y="453" width="0.2417%" height="15" fill="rgb(226,77,12)" fg:x="1148" fg:w="3"/><text x="92.7560%" y="463.50"></text></g><g><title>__libc_malloc (2 samples, 0.16%)</title><rect x="92.5866%" y="437" width="0.1612%" height="15" fill="rgb(226,76,25)" fg:x="1149" fg:w="2"/><text x="92.8366%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="92.7478%" y="597" width="0.1612%" height="15" fill="rgb(217,216,25)" fg:x="1151" fg:w="2"/><text x="92.9978%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="92.8284%" y="581" width="0.0806%" height="15" fill="rgb(247,127,42)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="92.8284%" y="565" width="0.0806%" height="15" fill="rgb(226,10,34)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="92.8284%" y="549" width="0.0806%" height="15" fill="rgb(249,78,0)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="92.8284%" y="533" width="0.0806%" height="15" fill="rgb(226,218,38)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8284%" y="517" width="0.0806%" height="15" fill="rgb(240,92,1)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="92.8284%" y="501" width="0.0806%" height="15" fill="rgb(237,224,33)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="92.8284%" y="485" width="0.0806%" height="15" fill="rgb(211,46,1)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="92.8284%" y="469" width="0.0806%" height="15" fill="rgb(239,190,4)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="92.8284%" y="453" width="0.0806%" height="15" fill="rgb(221,50,22)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="92.8284%" y="437" width="0.0806%" height="15" fill="rgb(207,176,8)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="447.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.8284%" y="421" width="0.0806%" height="15" fill="rgb(244,114,50)" fg:x="1152" fg:w="1"/><text x="93.0784%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.24%)</title><rect x="92.7478%" y="629" width="0.2417%" height="15" fill="rgb(226,206,19)" fg:x="1151" fg:w="3"/><text x="92.9978%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (3 samples, 0.24%)</title><rect x="92.7478%" y="613" width="0.2417%" height="15" fill="rgb(208,199,16)" fg:x="1151" fg:w="3"/><text x="92.9978%" y="623.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9089%" y="597" width="0.0806%" height="15" fill="rgb(208,38,14)" fg:x="1153" fg:w="1"/><text x="93.1589%" y="607.50"></text></g><g><title>engine::internal::Entities::foreach_entity_mut (14 samples, 1.13%)</title><rect x="91.9420%" y="677" width="1.1281%" height="15" fill="rgb(221,211,49)" fg:x="1141" fg:w="14"/><text x="92.1920%" y="687.50"></text></g><g><title>kernel::model::scopes::Scopes::modified (14 samples, 1.13%)</title><rect x="91.9420%" y="661" width="1.1281%" height="15" fill="rgb(227,214,34)" fg:x="1141" fg:w="14"/><text x="92.1920%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (14 samples, 1.13%)</title><rect x="91.9420%" y="645" width="1.1281%" height="15" fill="rgb(234,5,54)" fg:x="1141" fg:w="14"/><text x="92.1920%" y="655.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="92.9895%" y="629" width="0.0806%" height="15" fill="rgb(236,215,22)" fg:x="1154" fg:w="1"/><text x="93.2395%" y="639.50"></text></g><g><title>&lt;kernel::model::entity::EntityRef as kernel::model::IntoEntry&gt;::into_entry (1 samples, 0.08%)</title><rect x="93.0701%" y="645" width="0.0806%" height="15" fill="rgb(244,0,11)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="655.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="93.0701%" y="629" width="0.0806%" height="15" fill="rgb(212,140,16)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="639.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.0701%" y="613" width="0.0806%" height="15" fill="rgb(238,101,37)" fg:x="1155" fg:w="1"/><text x="93.3201%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="93.1507%" y="565" width="0.0806%" height="15" fill="rgb(247,46,3)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="575.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="93.1507%" y="549" width="0.0806%" height="15" fill="rgb(208,106,19)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="559.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="93.1507%" y="533" width="0.0806%" height="15" fill="rgb(240,227,15)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1507%" y="517" width="0.0806%" height="15" fill="rgb(226,173,6)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1507%" y="501" width="0.0806%" height="15" fill="rgb(213,191,1)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="511.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.1507%" y="485" width="0.0806%" height="15" fill="rgb(246,51,36)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1507%" y="469" width="0.0806%" height="15" fill="rgb(238,40,32)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="479.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="93.1507%" y="453" width="0.0806%" height="15" fill="rgb(208,126,27)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="93.1507%" y="437" width="0.0806%" height="15" fill="rgb(227,117,38)" fg:x="1156" fg:w="1"/><text x="93.4007%" y="447.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="93.2313%" y="549" width="0.2417%" height="15" fill="rgb(232,16,1)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="559.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="93.2313%" y="533" width="0.2417%" height="15" fill="rgb(212,111,31)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="543.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="93.2313%" y="517" width="0.2417%" height="15" fill="rgb(253,227,2)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="93.2313%" y="501" width="0.2417%" height="15" fill="rgb(216,122,17)" fg:x="1157" fg:w="3"/><text x="93.4813%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="93.3118%" y="485" width="0.1612%" height="15" fill="rgb(227,37,2)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="93.3118%" y="469" width="0.1612%" height="15" fill="rgb(244,113,40)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="479.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="93.3118%" y="453" width="0.1612%" height="15" fill="rgb(217,193,34)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.3118%" y="437" width="0.1612%" height="15" fill="rgb(212,223,15)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="93.3118%" y="421" width="0.1612%" height="15" fill="rgb(238,143,18)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.3118%" y="405" width="0.1612%" height="15" fill="rgb(231,18,49)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="93.3118%" y="389" width="0.1612%" height="15" fill="rgb(249,122,4)" fg:x="1158" fg:w="2"/><text x="93.5618%" y="399.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.3924%" y="373" width="0.0806%" height="15" fill="rgb(245,138,54)" fg:x="1159" fg:w="1"/><text x="93.6424%" y="383.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (5 samples, 0.40%)</title><rect x="93.1507%" y="613" width="0.4029%" height="15" fill="rgb(218,130,18)" fg:x="1156" fg:w="5"/><text x="93.4007%" y="623.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (5 samples, 0.40%)</title><rect x="93.1507%" y="597" width="0.4029%" height="15" fill="rgb(235,94,13)" fg:x="1156" fg:w="5"/><text x="93.4007%" y="607.50"></text></g><g><title>engine::internal::Entities::add_persisted (5 samples, 0.40%)</title><rect x="93.1507%" y="581" width="0.4029%" height="15" fill="rgb(247,143,5)" fg:x="1156" fg:w="5"/><text x="93.4007%" y="591.50"></text></g><g><title>kernel::model::deserialize_entity (4 samples, 0.32%)</title><rect x="93.2313%" y="565" width="0.3223%" height="15" fill="rgb(212,59,54)" fg:x="1157" fg:w="4"/><text x="93.4813%" y="575.50"></text></g><g><title>serde_json::de::from_trait (1 samples, 0.08%)</title><rect x="93.4730%" y="549" width="0.0806%" height="15" fill="rgb(206,121,24)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="559.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4730%" y="533" width="0.0806%" height="15" fill="rgb(235,38,8)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="543.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="517" width="0.0806%" height="15" fill="rgb(227,102,26)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4730%" y="501" width="0.0806%" height="15" fill="rgb(240,183,46)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="485" width="0.0806%" height="15" fill="rgb(208,177,23)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4730%" y="469" width="0.0806%" height="15" fill="rgb(216,152,5)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="93.4730%" y="453" width="0.0806%" height="15" fill="rgb(238,199,2)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="463.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="93.4730%" y="437" width="0.0806%" height="15" fill="rgb(235,142,28)" fg:x="1160" fg:w="1"/><text x="93.7230%" y="447.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.5536%" y="613" width="0.0806%" height="15" fill="rgb(225,97,25)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="623.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="93.5536%" y="597" width="0.0806%" height="15" fill="rgb(208,75,46)" fg:x="1161" fg:w="1"/><text x="93.8036%" y="607.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_location (8 samples, 0.64%)</title><rect x="93.0701%" y="661" width="0.6446%" height="15" fill="rgb(240,136,15)" fg:x="1155" fg:w="8"/><text x="93.3201%" y="671.50"></text></g><g><title>kernel::model::entry::Entry::scope (7 samples, 0.56%)</title><rect x="93.1507%" y="645" width="0.5641%" height="15" fill="rgb(235,36,27)" fg:x="1156" fg:w="7"/><text x="93.4007%" y="655.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (7 samples, 0.56%)</title><rect x="93.1507%" y="629" width="0.5641%" height="15" fill="rgb(231,132,23)" fg:x="1156" fg:w="7"/><text x="93.4007%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="93.6342%" y="613" width="0.0806%" height="15" fill="rgb(205,208,20)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="623.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="93.6342%" y="597" width="0.0806%" height="15" fill="rgb(215,26,40)" fg:x="1162" fg:w="1"/><text x="93.8842%" y="607.50"></text></g><g><title>engine::perform::StandardPerformer::evaluate_living_surroundings (9 samples, 0.73%)</title><rect x="93.0701%" y="677" width="0.7252%" height="15" fill="rgb(238,183,34)" fg:x="1155" fg:w="9"/><text x="93.3201%" y="687.50"></text></g><g><title>engine::session::Session::world (1 samples, 0.08%)</title><rect x="93.7147%" y="661" width="0.0806%" height="15" fill="rgb(207,96,10)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="671.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (1 samples, 0.08%)</title><rect x="93.7147%" y="645" width="0.0806%" height="15" fill="rgb(218,88,6)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="655.50"></text></g><g><title>kernel::model::entry::Entry::new (1 samples, 0.08%)</title><rect x="93.7147%" y="629" width="0.0806%" height="15" fill="rgb(217,22,49)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7147%" y="613" width="0.0806%" height="15" fill="rgb(240,195,14)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.7147%" y="597" width="0.0806%" height="15" fill="rgb(229,48,27)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.7147%" y="581" width="0.0806%" height="15" fill="rgb(220,194,45)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.7147%" y="565" width="0.0806%" height="15" fill="rgb(252,60,20)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.7147%" y="549" width="0.0806%" height="15" fill="rgb(244,169,33)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7147%" y="533" width="0.0806%" height="15" fill="rgb(234,141,34)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.7147%" y="517" width="0.0806%" height="15" fill="rgb(241,141,9)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.7147%" y="501" width="0.0806%" height="15" fill="rgb(246,27,36)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.7147%" y="485" width="0.0806%" height="15" fill="rgb(216,188,42)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.7147%" y="469" width="0.0806%" height="15" fill="rgb(234,205,22)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.7147%" y="453" width="0.0806%" height="15" fill="rgb(210,202,32)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="463.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.7147%" y="437" width="0.0806%" height="15" fill="rgb(217,0,48)" fg:x="1163" fg:w="1"/><text x="93.9647%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="501" width="0.0806%" height="15" fill="rgb(207,115,37)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="511.50"></text></g><g><title>&lt;kernel::model::entry::Entry as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="485" width="0.0806%" height="15" fill="rgb(237,221,44)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="469" width="0.0806%" height="15" fill="rgb(249,78,2)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="93.8759%" y="453" width="0.0806%" height="15" fill="rgb(211,169,23)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="93.8759%" y="437" width="0.0806%" height="15" fill="rgb(207,116,29)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="93.8759%" y="421" width="0.0806%" height="15" fill="rgb(240,84,33)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="93.8759%" y="405" width="0.0806%" height="15" fill="rgb(229,224,31)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8759%" y="389" width="0.0806%" height="15" fill="rgb(227,90,31)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="93.8759%" y="373" width="0.0806%" height="15" fill="rgb(249,22,41)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="93.8759%" y="357" width="0.0806%" height="15" fill="rgb(239,65,11)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="93.8759%" y="341" width="0.0806%" height="15" fill="rgb(205,5,23)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="93.8759%" y="325" width="0.0806%" height="15" fill="rgb(254,78,52)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="93.8759%" y="309" width="0.0806%" height="15" fill="rgb(214,156,33)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="93.8759%" y="293" width="0.0806%" height="15" fill="rgb(208,20,30)" fg:x="1165" fg:w="1"/><text x="94.1259%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.16%)</title><rect x="93.9565%" y="501" width="0.1612%" height="15" fill="rgb(223,133,18)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.16%)</title><rect x="93.9565%" y="485" width="0.1612%" height="15" fill="rgb(222,91,41)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="495.50"></text></g><g><title>realloc (2 samples, 0.16%)</title><rect x="93.9565%" y="469" width="0.1612%" height="15" fill="rgb(247,137,48)" fg:x="1166" fg:w="2"/><text x="94.2065%" y="479.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.08%)</title><rect x="94.1176%" y="501" width="0.0806%" height="15" fill="rgb(239,156,11)" fg:x="1168" fg:w="1"/><text x="94.3676%" y="511.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.1982%" y="453" width="0.1612%" height="15" fill="rgb(244,56,26)" fg:x="1169" fg:w="2"/><text x="94.4482%" y="463.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1982%" y="437" width="0.1612%" height="15" fill="rgb(205,131,49)" fg:x="1169" fg:w="2"/><text x="94.4482%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="94.1982%" y="421" width="0.1612%" height="15" fill="rgb(224,0,2)" fg:x="1169" fg:w="2"/><text x="94.4482%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="94.1982%" y="405" width="0.1612%" height="15" fill="rgb(247,59,36)" fg:x="1169" fg:w="2"/><text x="94.4482%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2788%" y="389" width="0.0806%" height="15" fill="rgb(215,4,47)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.2788%" y="373" width="0.0806%" height="15" fill="rgb(242,72,42)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.2788%" y="357" width="0.0806%" height="15" fill="rgb(232,145,44)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.2788%" y="341" width="0.0806%" height="15" fill="rgb(205,108,43)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.2788%" y="325" width="0.0806%" height="15" fill="rgb(215,190,17)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="94.2788%" y="309" width="0.0806%" height="15" fill="rgb(223,90,34)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="94.2788%" y="293" width="0.0806%" height="15" fill="rgb(216,25,0)" fg:x="1170" fg:w="1"/><text x="94.5288%" y="303.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.3594%" y="325" width="0.0806%" height="15" fill="rgb(223,51,28)" fg:x="1171" fg:w="1"/><text x="94.6094%" y="335.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (2 samples, 0.16%)</title><rect x="94.3594%" y="341" width="0.1612%" height="15" fill="rgb(227,131,7)" fg:x="1171" fg:w="2"/><text x="94.6094%" y="351.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="94.4400%" y="325" width="0.0806%" height="15" fill="rgb(216,72,36)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="335.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.4400%" y="309" width="0.0806%" height="15" fill="rgb(243,158,40)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="319.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="94.4400%" y="293" width="0.0806%" height="15" fill="rgb(218,60,54)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="303.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="94.4400%" y="277" width="0.0806%" height="15" fill="rgb(230,15,46)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="261" width="0.0806%" height="15" fill="rgb(250,22,26)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="245" width="0.0806%" height="15" fill="rgb(239,194,40)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="229" width="0.0806%" height="15" fill="rgb(219,62,9)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="94.4400%" y="213" width="0.0806%" height="15" fill="rgb(228,45,21)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4400%" y="197" width="0.0806%" height="15" fill="rgb(242,56,44)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="94.4400%" y="181" width="0.0806%" height="15" fill="rgb(239,170,14)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="191.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="94.4400%" y="165" width="0.0806%" height="15" fill="rgb(236,150,13)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="175.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="94.4400%" y="149" width="0.0806%" height="15" fill="rgb(228,15,30)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="94.4400%" y="133" width="0.0806%" height="15" fill="rgb(217,43,28)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4400%" y="117" width="0.0806%" height="15" fill="rgb(246,223,1)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="94.4400%" y="101" width="0.0806%" height="15" fill="rgb(247,103,7)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="94.4400%" y="85" width="0.0806%" height="15" fill="rgb(205,105,39)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="94.4400%" y="69" width="0.0806%" height="15" fill="rgb(216,134,18)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="79.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="94.4400%" y="53" width="0.0806%" height="15" fill="rgb(226,139,50)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="63.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="94.4400%" y="37" width="0.0806%" height="15" fill="rgb(251,152,38)" fg:x="1172" fg:w="1"/><text x="94.6900%" y="47.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="94.5205%" y="341" width="0.0806%" height="15" fill="rgb(222,63,15)" fg:x="1173" fg:w="1"/><text x="94.7705%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,kernel::model::props::Property)&gt; (1 samples, 0.08%)</title><rect x="94.5205%" y="325" width="0.0806%" height="15" fill="rgb(212,198,28)" fg:x="1173" fg:w="1"/><text x="94.7705%" y="335.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.5205%" y="309" width="0.0806%" height="15" fill="rgb(216,93,38)" fg:x="1173" fg:w="1"/><text x="94.7705%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="94.6011%" y="277" width="0.0806%" height="15" fill="rgb(247,202,44)" fg:x="1174" fg:w="1"/><text x="94.8511%" y="287.50"></text></g><g><title>engine::internal::EntityMap::add_entity (2 samples, 0.16%)</title><rect x="94.6011%" y="341" width="0.1612%" height="15" fill="rgb(237,204,46)" fg:x="1174" fg:w="2"/><text x="94.8511%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.6011%" y="325" width="0.1612%" height="15" fill="rgb(224,98,48)" fg:x="1174" fg:w="2"/><text x="94.8511%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.16%)</title><rect x="94.6011%" y="309" width="0.1612%" height="15" fill="rgb(247,105,21)" fg:x="1174" fg:w="2"/><text x="94.8511%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.16%)</title><rect x="94.6011%" y="293" width="0.1612%" height="15" fill="rgb(212,137,52)" fg:x="1174" fg:w="2"/><text x="94.8511%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="94.6817%" y="277" width="0.0806%" height="15" fill="rgb(223,76,33)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.08%)</title><rect x="94.6817%" y="261" width="0.0806%" height="15" fill="rgb(209,156,27)" fg:x="1175" fg:w="1"/><text x="94.9317%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="94.8429%" y="261" width="0.1612%" height="15" fill="rgb(249,81,54)" fg:x="1177" fg:w="2"/><text x="95.0929%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="94.8429%" y="245" width="0.1612%" height="15" fill="rgb(241,46,29)" fg:x="1177" fg:w="2"/><text x="95.0929%" y="255.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="94.8429%" y="229" width="0.1612%" height="15" fill="rgb(213,193,39)" fg:x="1177" fg:w="2"/><text x="95.0929%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde::__private::de::content::Content&gt; (2 samples, 0.16%)</title><rect x="94.8429%" y="213" width="0.1612%" height="15" fill="rgb(214,85,16)" fg:x="1177" fg:w="2"/><text x="95.0929%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.16%)</title><rect x="94.8429%" y="197" width="0.1612%" height="15" fill="rgb(216,184,17)" fg:x="1177" fg:w="2"/><text x="95.0929%" y="207.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="94.9234%" y="181" width="0.0806%" height="15" fill="rgb(254,219,29)" fg:x="1178" fg:w="1"/><text x="95.1734%" y="191.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (5 samples, 0.40%)</title><rect x="94.7623%" y="325" width="0.4029%" height="15" fill="rgb(209,148,34)" fg:x="1176" fg:w="5"/><text x="95.0123%" y="335.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (5 samples, 0.40%)</title><rect x="94.7623%" y="309" width="0.4029%" height="15" fill="rgb(253,215,11)" fg:x="1176" fg:w="5"/><text x="95.0123%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (5 samples, 0.40%)</title><rect x="94.7623%" y="293" width="0.4029%" height="15" fill="rgb(232,126,20)" fg:x="1176" fg:w="5"/><text x="95.0123%" y="303.50"></text></g><g><title>serde_json::value::de::visit_object (5 samples, 0.40%)</title><rect x="94.7623%" y="277" width="0.4029%" height="15" fill="rgb(248,118,51)" fg:x="1176" fg:w="5"/><text x="95.0123%" y="287.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.0040%" y="261" width="0.1612%" height="15" fill="rgb(226,121,21)" fg:x="1179" fg:w="2"/><text x="95.2540%" y="271.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.0040%" y="245" width="0.1612%" height="15" fill="rgb(216,128,16)" fg:x="1179" fg:w="2"/><text x="95.2540%" y="255.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.0846%" y="229" width="0.0806%" height="15" fill="rgb(205,17,9)" fg:x="1180" fg:w="1"/><text x="95.3346%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.1652%" y="277" width="0.0806%" height="15" fill="rgb(206,197,21)" fg:x="1181" fg:w="1"/><text x="95.4152%" y="287.50"></text></g><g><title>&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="95.2458%" y="245" width="0.0806%" height="15" fill="rgb(212,202,9)" fg:x="1182" fg:w="1"/><text x="95.4958%" y="255.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.3263%" y="149" width="0.0806%" height="15" fill="rgb(241,131,50)" fg:x="1183" fg:w="1"/><text x="95.5763%" y="159.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (20 samples, 1.61%)</title><rect x="93.8759%" y="517" width="1.6116%" height="15" fill="rgb(228,115,51)" fg:x="1165" fg:w="20"/><text x="94.1259%" y="527.50"></text></g><g><title>plugins_core::tools::contained_by (16 samples, 1.29%)</title><rect x="94.1982%" y="501" width="1.2893%" height="15" fill="rgb(237,209,8)" fg:x="1169" fg:w="16"/><text x="94.4482%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::scope (16 samples, 1.29%)</title><rect x="94.1982%" y="485" width="1.2893%" height="15" fill="rgb(241,121,28)" fg:x="1169" fg:w="16"/><text x="94.4482%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (16 samples, 1.29%)</title><rect x="94.1982%" y="469" width="1.2893%" height="15" fill="rgb(238,194,51)" fg:x="1169" fg:w="16"/><text x="94.4482%" y="479.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (14 samples, 1.13%)</title><rect x="94.3594%" y="453" width="1.1281%" height="15" fill="rgb(208,41,39)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="463.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 1.13%)</title><rect x="94.3594%" y="437" width="1.1281%" height="15" fill="rgb(223,95,44)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 1.13%)</title><rect x="94.3594%" y="421" width="1.1281%" height="15" fill="rgb(253,98,40)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 1.13%)</title><rect x="94.3594%" y="405" width="1.1281%" height="15" fill="rgb(210,5,12)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="415.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::ensure_entity (14 samples, 1.13%)</title><rect x="94.3594%" y="389" width="1.1281%" height="15" fill="rgb(233,201,23)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (14 samples, 1.13%)</title><rect x="94.3594%" y="373" width="1.1281%" height="15" fill="rgb(251,68,15)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="383.50"></text></g><g><title>engine::internal::Entities::add_persisted (14 samples, 1.13%)</title><rect x="94.3594%" y="357" width="1.1281%" height="15" fill="rgb(243,10,46)" fg:x="1171" fg:w="14"/><text x="94.6094%" y="367.50"></text></g><g><title>kernel::model::deserialize_entity (9 samples, 0.73%)</title><rect x="94.7623%" y="341" width="0.7252%" height="15" fill="rgb(253,130,44)" fg:x="1176" fg:w="9"/><text x="95.0123%" y="351.50"></text></g><g><title>serde_json::de::from_trait (4 samples, 0.32%)</title><rect x="95.1652%" y="325" width="0.3223%" height="15" fill="rgb(244,5,26)" fg:x="1181" fg:w="4"/><text x="95.4152%" y="335.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4 samples, 0.32%)</title><rect x="95.1652%" y="309" width="0.3223%" height="15" fill="rgb(220,126,20)" fg:x="1181" fg:w="4"/><text x="95.4152%" y="319.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (4 samples, 0.32%)</title><rect x="95.1652%" y="293" width="0.3223%" height="15" fill="rgb(212,188,29)" fg:x="1181" fg:w="4"/><text x="95.4152%" y="303.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3 samples, 0.24%)</title><rect x="95.2458%" y="277" width="0.2417%" height="15" fill="rgb(227,194,48)" fg:x="1182" fg:w="3"/><text x="95.4958%" y="287.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3 samples, 0.24%)</title><rect x="95.2458%" y="261" width="0.2417%" height="15" fill="rgb(245,64,28)" fg:x="1182" fg:w="3"/><text x="95.4958%" y="271.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3263%" y="245" width="0.1612%" height="15" fill="rgb(205,44,7)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="255.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3263%" y="229" width="0.1612%" height="15" fill="rgb(213,193,11)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="239.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3263%" y="213" width="0.1612%" height="15" fill="rgb(238,157,6)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="223.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3263%" y="197" width="0.1612%" height="15" fill="rgb(222,73,7)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="207.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.3263%" y="181" width="0.1612%" height="15" fill="rgb(224,78,15)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="191.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2 samples, 0.16%)</title><rect x="95.3263%" y="165" width="0.1612%" height="15" fill="rgb(218,149,46)" fg:x="1183" fg:w="2"/><text x="95.5763%" y="175.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4069%" y="149" width="0.0806%" height="15" fill="rgb(218,175,44)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="159.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4069%" y="133" width="0.0806%" height="15" fill="rgb(215,183,45)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="143.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1 samples, 0.08%)</title><rect x="95.4069%" y="117" width="0.0806%" height="15" fill="rgb(226,116,37)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="127.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="95.4069%" y="101" width="0.0806%" height="15" fill="rgb(252,224,12)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="111.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4069%" y="85" width="0.0806%" height="15" fill="rgb(232,212,21)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="95.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="95.4069%" y="69" width="0.0806%" height="15" fill="rgb(226,191,16)" fg:x="1184" fg:w="1"/><text x="95.6569%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="95.4875%" y="501" width="0.0806%" height="15" fill="rgb(231,156,11)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="95.4875%" y="485" width="0.0806%" height="15" fill="rgb(225,134,49)" fg:x="1185" fg:w="1"/><text x="95.7375%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (2 samples, 0.16%)</title><rect x="95.4875%" y="517" width="0.1612%" height="15" fill="rgb(254,55,32)" fg:x="1185" fg:w="2"/><text x="95.7375%" y="527.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (1 samples, 0.08%)</title><rect x="95.5681%" y="501" width="0.0806%" height="15" fill="rgb(242,195,29)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="511.50"></text></g><g><title>plugins_core::finding::matches_description (1 samples, 0.08%)</title><rect x="95.5681%" y="485" width="0.0806%" height="15" fill="rgb(210,155,20)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="495.50"></text></g><g><title>kernel::model::entry::Entry::name (1 samples, 0.08%)</title><rect x="95.5681%" y="469" width="0.0806%" height="15" fill="rgb(243,170,23)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="479.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="95.5681%" y="453" width="0.0806%" height="15" fill="rgb(242,197,51)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="463.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="95.5681%" y="437" width="0.0806%" height="15" fill="rgb(248,48,13)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="447.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="95.5681%" y="421" width="0.0806%" height="15" fill="rgb(221,185,15)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.5681%" y="405" width="0.0806%" height="15" fill="rgb(244,49,7)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.5681%" y="389" width="0.0806%" height="15" fill="rgb(213,182,52)" fg:x="1186" fg:w="1"/><text x="95.8181%" y="399.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (23 samples, 1.85%)</title><rect x="93.8759%" y="549" width="1.8533%" height="15" fill="rgb(209,15,45)" fg:x="1165" fg:w="23"/><text x="94.1259%" y="559.50">&lt;..</text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (23 samples, 1.85%)</title><rect x="93.8759%" y="533" width="1.8533%" height="15" fill="rgb(233,23,44)" fg:x="1165" fg:w="23"/><text x="94.1259%" y="543.50">&lt;..</text></g><g><title>plugins_core::finding::EntityRelationshipSet::new_from_surroundings (1 samples, 0.08%)</title><rect x="95.6487%" y="517" width="0.0806%" height="15" fill="rgb(220,182,30)" fg:x="1187" fg:w="1"/><text x="95.8987%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;plugins_core::carrying::model::Containing&gt;&gt; (1 samples, 0.08%)</title><rect x="95.7293%" y="533" width="0.0806%" height="15" fill="rgb(219,116,33)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.7293%" y="517" width="0.0806%" height="15" fill="rgb(231,15,21)" fg:x="1188" fg:w="1"/><text x="95.9793%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="453" width="0.0806%" height="15" fill="rgb(238,119,25)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="437" width="0.0806%" height="15" fill="rgb(232,30,39)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="421" width="0.0806%" height="15" fill="rgb(241,26,30)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="405" width="0.0806%" height="15" fill="rgb(234,154,4)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="389" width="0.0806%" height="15" fill="rgb(229,199,39)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="95.8098%" y="373" width="0.0806%" height="15" fill="rgb(236,213,10)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="383.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="95.8098%" y="357" width="0.0806%" height="15" fill="rgb(247,28,19)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="367.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="95.8098%" y="341" width="0.0806%" height="15" fill="rgb(239,199,24)" fg:x="1189" fg:w="1"/><text x="96.0598%" y="351.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="95.8904%" y="261" width="0.0806%" height="15" fill="rgb(246,122,13)" fg:x="1190" fg:w="1"/><text x="96.1404%" y="271.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="95.8098%" y="533" width="0.2417%" height="15" fill="rgb(210,203,29)" fg:x="1189" fg:w="3"/><text x="96.0598%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="95.8098%" y="517" width="0.2417%" height="15" fill="rgb(218,4,50)" fg:x="1189" fg:w="3"/><text x="96.0598%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (3 samples, 0.24%)</title><rect x="95.8098%" y="501" width="0.2417%" height="15" fill="rgb(236,142,48)" fg:x="1189" fg:w="3"/><text x="96.0598%" y="511.50"></text></g><g><title>kernel::model::props::load_props (3 samples, 0.24%)</title><rect x="95.8098%" y="485" width="0.2417%" height="15" fill="rgb(245,173,2)" fg:x="1189" fg:w="3"/><text x="96.0598%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="95.8098%" y="469" width="0.2417%" height="15" fill="rgb(244,196,18)" fg:x="1189" fg:w="3"/><text x="96.0598%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.8904%" y="453" width="0.1612%" height="15" fill="rgb(221,27,33)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8904%" y="437" width="0.1612%" height="15" fill="rgb(210,206,16)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.8904%" y="421" width="0.1612%" height="15" fill="rgb(238,161,34)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8904%" y="405" width="0.1612%" height="15" fill="rgb(243,118,39)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (2 samples, 0.16%)</title><rect x="95.8904%" y="389" width="0.1612%" height="15" fill="rgb(234,126,9)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8904%" y="373" width="0.1612%" height="15" fill="rgb(234,167,42)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="383.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (2 samples, 0.16%)</title><rect x="95.8904%" y="357" width="0.1612%" height="15" fill="rgb(238,54,48)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="367.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8904%" y="341" width="0.1612%" height="15" fill="rgb(226,105,2)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="351.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (2 samples, 0.16%)</title><rect x="95.8904%" y="325" width="0.1612%" height="15" fill="rgb(223,95,23)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="335.50"></text></g><g><title>serde_json::value::de::visit_object (2 samples, 0.16%)</title><rect x="95.8904%" y="309" width="0.1612%" height="15" fill="rgb(249,212,19)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="319.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (2 samples, 0.16%)</title><rect x="95.8904%" y="293" width="0.1612%" height="15" fill="rgb(234,158,54)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="303.50"></text></g><g><title>serde_json::value::de::visit_array (2 samples, 0.16%)</title><rect x="95.8904%" y="277" width="0.1612%" height="15" fill="rgb(247,114,32)" fg:x="1190" fg:w="2"/><text x="96.1404%" y="287.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="95.9710%" y="261" width="0.0806%" height="15" fill="rgb(250,68,44)" fg:x="1191" fg:w="1"/><text x="96.2210%" y="271.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="96.0516%" y="501" width="0.1612%" height="15" fill="rgb(242,3,15)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.0516%" y="485" width="0.1612%" height="15" fill="rgb(223,110,32)" fg:x="1192" fg:w="2"/><text x="96.3016%" y="495.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.1322%" y="469" width="0.0806%" height="15" fill="rgb(216,26,54)" fg:x="1193" fg:w="1"/><text x="96.3822%" y="479.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (3 samples, 0.24%)</title><rect x="96.0516%" y="533" width="0.2417%" height="15" fill="rgb(209,145,42)" fg:x="1192" fg:w="3"/><text x="96.3016%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (3 samples, 0.24%)</title><rect x="96.0516%" y="517" width="0.2417%" height="15" fill="rgb(240,111,53)" fg:x="1192" fg:w="3"/><text x="96.3016%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="96.2127%" y="501" width="0.0806%" height="15" fill="rgb(209,101,4)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.2127%" y="485" width="0.0806%" height="15" fill="rgb(231,74,29)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="96.2127%" y="469" width="0.0806%" height="15" fill="rgb(223,12,12)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="96.2127%" y="453" width="0.0806%" height="15" fill="rgb(207,162,2)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="96.2127%" y="437" width="0.0806%" height="15" fill="rgb(230,152,0)" fg:x="1194" fg:w="1"/><text x="96.4627%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="96.2933%" y="485" width="0.0806%" height="15" fill="rgb(254,156,19)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="495.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.2933%" y="469" width="0.0806%" height="15" fill="rgb(250,28,0)" fg:x="1195" fg:w="1"/><text x="96.5433%" y="479.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="96.2933%" y="501" width="0.1612%" height="15" fill="rgb(253,27,5)" fg:x="1195" fg:w="2"/><text x="96.5433%" y="511.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.3739%" y="485" width="0.0806%" height="15" fill="rgb(244,154,7)" fg:x="1196" fg:w="1"/><text x="96.6239%" y="495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.16%)</title><rect x="96.4545%" y="501" width="0.1612%" height="15" fill="rgb(242,108,21)" fg:x="1197" fg:w="2"/><text x="96.7045%" y="511.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (1 samples, 0.08%)</title><rect x="96.6156%" y="501" width="0.0806%" height="15" fill="rgb(254,200,38)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.6156%" y="485" width="0.0806%" height="15" fill="rgb(250,145,41)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (1 samples, 0.08%)</title><rect x="96.6156%" y="469" width="0.0806%" height="15" fill="rgb(235,136,31)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.6156%" y="453" width="0.0806%" height="15" fill="rgb(215,13,18)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.6156%" y="437" width="0.0806%" height="15" fill="rgb(238,199,12)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6156%" y="421" width="0.0806%" height="15" fill="rgb(242,179,49)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="96.6156%" y="405" width="0.0806%" height="15" fill="rgb(214,10,44)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="415.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="96.6156%" y="389" width="0.0806%" height="15" fill="rgb(229,181,11)" fg:x="1199" fg:w="1"/><text x="96.8656%" y="399.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (7 samples, 0.56%)</title><rect x="96.2933%" y="533" width="0.5641%" height="15" fill="rgb(244,155,10)" fg:x="1195" fg:w="7"/><text x="96.5433%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (7 samples, 0.56%)</title><rect x="96.2933%" y="517" width="0.5641%" height="15" fill="rgb(254,13,48)" fg:x="1195" fg:w="7"/><text x="96.5433%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Location&gt;::serialize (2 samples, 0.16%)</title><rect x="96.6962%" y="501" width="0.1612%" height="15" fill="rgb(210,164,6)" fg:x="1200" fg:w="2"/><text x="96.9462%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.7768%" y="485" width="0.0806%" height="15" fill="rgb(216,187,40)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="495.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (1 samples, 0.08%)</title><rect x="96.7768%" y="469" width="0.0806%" height="15" fill="rgb(208,143,21)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="479.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (1 samples, 0.08%)</title><rect x="96.7768%" y="453" width="0.0806%" height="15" fill="rgb(211,73,41)" fg:x="1201" fg:w="1"/><text x="97.0268%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="96.8574%" y="485" width="0.0806%" height="15" fill="rgb(244,69,21)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="96.8574%" y="469" width="0.0806%" height="15" fill="rgb(230,152,32)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="96.8574%" y="453" width="0.0806%" height="15" fill="rgb(208,110,18)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8574%" y="437" width="0.0806%" height="15" fill="rgb(214,201,49)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="421" width="0.0806%" height="15" fill="rgb(253,153,27)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="96.8574%" y="405" width="0.0806%" height="15" fill="rgb(238,61,11)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="389" width="0.0806%" height="15" fill="rgb(227,84,2)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="96.8574%" y="373" width="0.0806%" height="15" fill="rgb(233,52,8)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="96.8574%" y="357" width="0.0806%" height="15" fill="rgb(209,136,13)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="96.8574%" y="341" width="0.0806%" height="15" fill="rgb(229,86,25)" fg:x="1202" fg:w="1"/><text x="97.1074%" y="351.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (3 samples, 0.24%)</title><rect x="96.8574%" y="517" width="0.2417%" height="15" fill="rgb(235,47,16)" fg:x="1202" fg:w="3"/><text x="97.1074%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="96.8574%" y="501" width="0.2417%" height="15" fill="rgb(231,186,4)" fg:x="1202" fg:w="3"/><text x="97.1074%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="96.9380%" y="485" width="0.1612%" height="15" fill="rgb(209,213,23)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="495.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="96.9380%" y="469" width="0.1612%" height="15" fill="rgb(212,142,47)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="96.9380%" y="453" width="0.1612%" height="15" fill="rgb(251,86,24)" fg:x="1203" fg:w="2"/><text x="97.1880%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="97.0185%" y="437" width="0.0806%" height="15" fill="rgb(206,217,17)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="97.0185%" y="421" width="0.0806%" height="15" fill="rgb(248,92,38)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="431.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="97.0185%" y="405" width="0.0806%" height="15" fill="rgb(214,25,29)" fg:x="1204" fg:w="1"/><text x="97.2685%" y="415.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (4 samples, 0.32%)</title><rect x="96.8574%" y="533" width="0.3223%" height="15" fill="rgb(245,117,13)" fg:x="1202" fg:w="4"/><text x="97.1074%" y="543.50"></text></g><g><title>kernel::model::entry::Entry::scope (1 samples, 0.08%)</title><rect x="97.0991%" y="517" width="0.0806%" height="15" fill="rgb(205,169,9)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="527.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.0991%" y="501" width="0.0806%" height="15" fill="rgb(223,134,38)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.0991%" y="485" width="0.0806%" height="15" fill="rgb(249,129,49)" fg:x="1205" fg:w="1"/><text x="97.3491%" y="495.50"></text></g><g><title>&lt;plugins_core::carrying::actions::DropAction as kernel::actions::Action&gt;::perform (42 samples, 3.38%)</title><rect x="93.8759%" y="565" width="3.3844%" height="15" fill="rgb(229,157,45)" fg:x="1165" fg:w="42"/><text x="94.1259%" y="575.50">&lt;pl..</text></g><g><title>plugins_core::tools::move_between (19 samples, 1.53%)</title><rect x="95.7293%" y="549" width="1.5310%" height="15" fill="rgb(232,159,11)" fg:x="1188" fg:w="19"/><text x="95.9793%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="97.1797%" y="533" width="0.0806%" height="15" fill="rgb(230,134,26)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entry::OpenedScopeMut&lt;plugins_core::carrying::model::Carryable&gt;&gt; (1 samples, 0.08%)</title><rect x="97.1797%" y="517" width="0.0806%" height="15" fill="rgb(234,149,40)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.1797%" y="501" width="0.0806%" height="15" fill="rgb(221,122,15)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="511.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="97.1797%" y="485" width="0.0806%" height="15" fill="rgb(228,127,0)" fg:x="1206" fg:w="1"/><text x="97.4297%" y="495.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::expand (1 samples, 0.08%)</title><rect x="97.2603%" y="517" width="0.0806%" height="15" fill="rgb(248,37,7)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="97.2603%" y="501" width="0.0806%" height="15" fill="rgb(215,140,49)" fg:x="1207" fg:w="1"/><text x="97.5103%" y="511.50"></text></g><g><title>kernel::model::props::Props::property_named (1 samples, 0.08%)</title><rect x="97.3409%" y="453" width="0.0806%" height="15" fill="rgb(236,65,39)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.08%)</title><rect x="97.3409%" y="437" width="0.0806%" height="15" fill="rgb(253,102,38)" fg:x="1208" fg:w="1"/><text x="97.5909%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.4214%" y="357" width="0.0806%" height="15" fill="rgb(244,100,34)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4214%" y="341" width="0.0806%" height="15" fill="rgb(210,179,47)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.4214%" y="325" width="0.0806%" height="15" fill="rgb(231,41,37)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.4214%" y="309" width="0.0806%" height="15" fill="rgb(226,209,17)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.4214%" y="293" width="0.0806%" height="15" fill="rgb(231,154,20)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.4214%" y="277" width="0.0806%" height="15" fill="rgb(216,134,24)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4214%" y="261" width="0.0806%" height="15" fill="rgb(224,71,42)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.4214%" y="245" width="0.0806%" height="15" fill="rgb(250,65,23)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.4214%" y="229" width="0.0806%" height="15" fill="rgb(209,160,35)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.4214%" y="213" width="0.0806%" height="15" fill="rgb(215,8,11)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.4214%" y="197" width="0.0806%" height="15" fill="rgb(227,27,12)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="207.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.4214%" y="181" width="0.0806%" height="15" fill="rgb(226,111,41)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="191.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.4214%" y="165" width="0.0806%" height="15" fill="rgb(212,195,15)" fg:x="1209" fg:w="1"/><text x="97.6714%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (2 samples, 0.16%)</title><rect x="97.4214%" y="373" width="0.1612%" height="15" fill="rgb(216,191,17)" fg:x="1209" fg:w="2"/><text x="97.6714%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5020%" y="357" width="0.0806%" height="15" fill="rgb(215,57,44)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.5020%" y="341" width="0.0806%" height="15" fill="rgb(209,38,4)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.5020%" y="325" width="0.0806%" height="15" fill="rgb(238,49,31)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.5020%" y="309" width="0.0806%" height="15" fill="rgb(219,48,39)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.5020%" y="293" width="0.0806%" height="15" fill="rgb(252,223,43)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.5020%" y="277" width="0.0806%" height="15" fill="rgb(247,205,46)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.5020%" y="261" width="0.0806%" height="15" fill="rgb(231,16,40)" fg:x="1210" fg:w="1"/><text x="97.7520%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5826%" y="293" width="0.0806%" height="15" fill="rgb(231,115,5)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.5826%" y="277" width="0.0806%" height="15" fill="rgb(206,127,43)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.5826%" y="261" width="0.0806%" height="15" fill="rgb(218,101,9)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.5826%" y="245" width="0.0806%" height="15" fill="rgb(235,138,50)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.5826%" y="229" width="0.0806%" height="15" fill="rgb(214,197,52)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.5826%" y="213" width="0.0806%" height="15" fill="rgb(230,80,19)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="223.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.5826%" y="197" width="0.0806%" height="15" fill="rgb(224,77,16)" fg:x="1211" fg:w="1"/><text x="97.8326%" y="207.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::find_item (6 samples, 0.48%)</title><rect x="97.2603%" y="549" width="0.4835%" height="15" fill="rgb(246,4,13)" fg:x="1207" fg:w="6"/><text x="97.5103%" y="559.50"></text></g><g><title>&lt;plugins_core::finding::DefaultFinder as kernel::Finder&gt;::find_item (6 samples, 0.48%)</title><rect x="97.2603%" y="533" width="0.4835%" height="15" fill="rgb(220,177,26)" fg:x="1207" fg:w="6"/><text x="97.5103%" y="543.50"></text></g><g><title>plugins_core::finding::EntityRelationshipSet::find_item (5 samples, 0.40%)</title><rect x="97.3409%" y="517" width="0.4029%" height="15" fill="rgb(215,114,45)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="527.50"></text></g><g><title>plugins_core::finding::matches_description (5 samples, 0.40%)</title><rect x="97.3409%" y="501" width="0.4029%" height="15" fill="rgb(215,71,54)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="511.50"></text></g><g><title>kernel::model::entry::Entry::name (5 samples, 0.40%)</title><rect x="97.3409%" y="485" width="0.4029%" height="15" fill="rgb(211,155,22)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="495.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (5 samples, 0.40%)</title><rect x="97.3409%" y="469" width="0.4029%" height="15" fill="rgb(245,206,18)" fg:x="1208" fg:w="5"/><text x="97.5909%" y="479.50"></text></g><g><title>kernel::model::props::load_props (4 samples, 0.32%)</title><rect x="97.4214%" y="453" width="0.3223%" height="15" fill="rgb(248,216,48)" fg:x="1209" fg:w="4"/><text x="97.6714%" y="463.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (4 samples, 0.32%)</title><rect x="97.4214%" y="437" width="0.3223%" height="15" fill="rgb(244,84,45)" fg:x="1209" fg:w="4"/><text x="97.6714%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="97.4214%" y="421" width="0.3223%" height="15" fill="rgb(245,13,45)" fg:x="1209" fg:w="4"/><text x="97.6714%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="97.4214%" y="405" width="0.3223%" height="15" fill="rgb(247,163,2)" fg:x="1209" fg:w="4"/><text x="97.6714%" y="415.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (4 samples, 0.32%)</title><rect x="97.4214%" y="389" width="0.3223%" height="15" fill="rgb(211,175,10)" fg:x="1209" fg:w="4"/><text x="97.6714%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5826%" y="373" width="0.1612%" height="15" fill="rgb(215,186,31)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.16%)</title><rect x="97.5826%" y="357" width="0.1612%" height="15" fill="rgb(207,42,11)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.16%)</title><rect x="97.5826%" y="341" width="0.1612%" height="15" fill="rgb(224,197,20)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.16%)</title><rect x="97.5826%" y="325" width="0.1612%" height="15" fill="rgb(244,119,36)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.16%)</title><rect x="97.5826%" y="309" width="0.1612%" height="15" fill="rgb(250,60,27)" fg:x="1211" fg:w="2"/><text x="97.8326%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6632%" y="293" width="0.0806%" height="15" fill="rgb(252,202,1)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.6632%" y="277" width="0.0806%" height="15" fill="rgb(206,53,25)" fg:x="1212" fg:w="1"/><text x="97.9132%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (1 samples, 0.08%)</title><rect x="97.7438%" y="533" width="0.0806%" height="15" fill="rgb(210,88,4)" fg:x="1213" fg:w="1"/><text x="97.9938%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (1 samples, 0.08%)</title><rect x="97.8243%" y="533" width="0.0806%" height="15" fill="rgb(211,144,28)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="543.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (1 samples, 0.08%)</title><rect x="97.8243%" y="517" width="0.0806%" height="15" fill="rgb(247,81,32)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="527.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="97.8243%" y="501" width="0.0806%" height="15" fill="rgb(225,192,11)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="511.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="97.8243%" y="485" width="0.0806%" height="15" fill="rgb(232,212,27)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="495.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="97.8243%" y="469" width="0.0806%" height="15" fill="rgb(239,3,29)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.8243%" y="453" width="0.0806%" height="15" fill="rgb(252,225,29)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8243%" y="437" width="0.0806%" height="15" fill="rgb(205,151,9)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="447.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="97.8243%" y="421" width="0.0806%" height="15" fill="rgb(216,171,47)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8243%" y="405" width="0.0806%" height="15" fill="rgb(206,181,1)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="97.8243%" y="389" width="0.0806%" height="15" fill="rgb(232,218,10)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="399.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="97.8243%" y="373" width="0.0806%" height="15" fill="rgb(244,222,51)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="383.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="97.8243%" y="357" width="0.0806%" height="15" fill="rgb(252,215,16)" fg:x="1214" fg:w="1"/><text x="98.0743%" y="367.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9049%" y="517" width="0.0806%" height="15" fill="rgb(212,130,13)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9049%" y="501" width="0.0806%" height="15" fill="rgb(227,103,37)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9049%" y="485" width="0.0806%" height="15" fill="rgb(249,48,15)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9049%" y="469" width="0.0806%" height="15" fill="rgb(225,96,9)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9049%" y="453" width="0.0806%" height="15" fill="rgb(213,81,41)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9049%" y="437" width="0.0806%" height="15" fill="rgb(230,15,12)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9049%" y="421" width="0.0806%" height="15" fill="rgb(218,106,37)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="97.9049%" y="405" width="0.0806%" height="15" fill="rgb(223,172,47)" fg:x="1215" fg:w="1"/><text x="98.1549%" y="415.50"></text></g><g><title>&lt;kernel::model::scopes::ScopeValue as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9855%" y="501" width="0.0806%" height="15" fill="rgb(246,180,49)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="511.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="97.9855%" y="485" width="0.0806%" height="15" fill="rgb(231,63,37)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9855%" y="469" width="0.0806%" height="15" fill="rgb(235,70,40)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="97.9855%" y="453" width="0.0806%" height="15" fill="rgb(250,54,26)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="97.9855%" y="437" width="0.0806%" height="15" fill="rgb(214,190,1)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="97.9855%" y="421" width="0.0806%" height="15" fill="rgb(212,40,35)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="97.9855%" y="405" width="0.0806%" height="15" fill="rgb(239,183,47)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9855%" y="389" width="0.0806%" height="15" fill="rgb(211,171,49)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="97.9855%" y="373" width="0.0806%" height="15" fill="rgb(249,186,27)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="97.9855%" y="357" width="0.0806%" height="15" fill="rgb(223,23,48)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="97.9855%" y="341" width="0.0806%" height="15" fill="rgb(209,203,21)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="97.9855%" y="325" width="0.0806%" height="15" fill="rgb(229,33,27)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="97.9855%" y="309" width="0.0806%" height="15" fill="rgb(207,8,53)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="319.50"></text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="97.9855%" y="293" width="0.0806%" height="15" fill="rgb(221,42,0)" fg:x="1216" fg:w="1"/><text x="98.2355%" y="303.50"></text></g><g><title>&lt;plugins_core::carrying::model::Containing as kernel::model::scopes::Needs&lt;alloc::rc::Rc&lt;dyn kernel::session::ActiveSession&gt;&gt;&gt;::supply (2 samples, 0.16%)</title><rect x="98.0661%" y="501" width="0.1612%" height="15" fill="rgb(223,115,3)" fg:x="1217" fg:w="2"/><text x="98.3161%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::entity::EntityRef&gt; (2 samples, 0.16%)</title><rect x="98.0661%" y="485" width="0.1612%" height="15" fill="rgb(239,35,26)" fg:x="1217" fg:w="2"/><text x="98.3161%" y="495.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.1467%" y="469" width="0.0806%" height="15" fill="rgb(233,22,9)" fg:x="1218" fg:w="1"/><text x="98.3967%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="98.2272%" y="501" width="0.1612%" height="15" fill="rgb(236,221,48)" fg:x="1219" fg:w="2"/><text x="98.4772%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="98.2272%" y="485" width="0.1612%" height="15" fill="rgb(235,52,30)" fg:x="1219" fg:w="2"/><text x="98.4772%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (2 samples, 0.16%)</title><rect x="98.2272%" y="469" width="0.1612%" height="15" fill="rgb(238,133,51)" fg:x="1219" fg:w="2"/><text x="98.4772%" y="479.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.3078%" y="453" width="0.0806%" height="15" fill="rgb(213,122,23)" fg:x="1220" fg:w="1"/><text x="98.5578%" y="463.50"></text></g><g><title>kernel::model::entry::Entry::scope_mut (7 samples, 0.56%)</title><rect x="97.9049%" y="533" width="0.5641%" height="15" fill="rgb(225,8,15)" fg:x="1215" fg:w="7"/><text x="98.1549%" y="543.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (6 samples, 0.48%)</title><rect x="97.9855%" y="517" width="0.4835%" height="15" fill="rgb(219,126,35)" fg:x="1216" fg:w="6"/><text x="98.2355%" y="527.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3884%" y="501" width="0.0806%" height="15" fill="rgb(246,113,21)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="511.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3884%" y="485" width="0.0806%" height="15" fill="rgb(241,193,32)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="495.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="98.3884%" y="469" width="0.0806%" height="15" fill="rgb(218,99,18)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="479.50"></text></g><g><title>serde_json::value::de::visit_array (1 samples, 0.08%)</title><rect x="98.3884%" y="453" width="0.0806%" height="15" fill="rgb(225,114,4)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="463.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (1 samples, 0.08%)</title><rect x="98.3884%" y="437" width="0.0806%" height="15" fill="rgb(235,0,15)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="98.3884%" y="421" width="0.0806%" height="15" fill="rgb(247,45,27)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.3884%" y="405" width="0.0806%" height="15" fill="rgb(249,88,53)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="415.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.3884%" y="389" width="0.0806%" height="15" fill="rgb(207,58,45)" fg:x="1221" fg:w="1"/><text x="98.6384%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.4690%" y="469" width="0.0806%" height="15" fill="rgb(216,7,11)" fg:x="1222" fg:w="1"/><text x="98.7190%" y="479.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.4690%" y="453" width="0.0806%" height="15" fill="rgb(230,40,33)" fg:x="1222" fg:w="1"/><text x="98.7190%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;kernel::model::scopes::JsonValue&gt; (2 samples, 0.16%)</title><rect x="98.4690%" y="501" width="0.1612%" height="15" fill="rgb(232,24,46)" fg:x="1222" fg:w="2"/><text x="98.7190%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (2 samples, 0.16%)</title><rect x="98.4690%" y="485" width="0.1612%" height="15" fill="rgb(219,222,45)" fg:x="1222" fg:w="2"/><text x="98.7190%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (1 samples, 0.08%)</title><rect x="98.5496%" y="469" width="0.0806%" height="15" fill="rgb(229,85,44)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[serde_json::value::Value]&gt; (1 samples, 0.08%)</title><rect x="98.5496%" y="453" width="0.0806%" height="15" fill="rgb(243,71,36)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;alloc::string::String,serde_json::value::Value&gt;&gt; (1 samples, 0.08%)</title><rect x="98.5496%" y="437" width="0.0806%" height="15" fill="rgb(230,203,45)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="447.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.5496%" y="421" width="0.0806%" height="15" fill="rgb(224,77,49)" fg:x="1223" fg:w="1"/><text x="98.7996%" y="431.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6301%" y="469" width="0.0806%" height="15" fill="rgb(210,186,47)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="479.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.6301%" y="453" width="0.0806%" height="15" fill="rgb(232,146,10)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="463.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.08%)</title><rect x="98.6301%" y="437" width="0.0806%" height="15" fill="rgb(236,185,51)" fg:x="1224" fg:w="1"/><text x="98.8801%" y="447.50"></text></g><g><title>kernel::model::entry::OpenedScopeMut&lt;T&gt;::save (5 samples, 0.40%)</title><rect x="98.4690%" y="533" width="0.4029%" height="15" fill="rgb(223,206,43)" fg:x="1222" fg:w="5"/><text x="98.7190%" y="543.50"></text></g><g><title>kernel::model::scopes::ScopesMut::replace_scope (5 samples, 0.40%)</title><rect x="98.4690%" y="517" width="0.4029%" height="15" fill="rgb(227,212,9)" fg:x="1222" fg:w="5"/><text x="98.7190%" y="527.50"></text></g><g><title>plugins_core::carrying::model::_::&lt;impl serde::ser::Serialize for plugins_core::carrying::model::Containing&gt;::serialize (3 samples, 0.24%)</title><rect x="98.6301%" y="501" width="0.2417%" height="15" fill="rgb(205,82,3)" fg:x="1224" fg:w="3"/><text x="98.8801%" y="511.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (3 samples, 0.24%)</title><rect x="98.6301%" y="485" width="0.2417%" height="15" fill="rgb(214,2,27)" fg:x="1224" fg:w="3"/><text x="98.8801%" y="495.50"></text></g><g><title>serde::ser::Serializer::collect_seq (2 samples, 0.16%)</title><rect x="98.7107%" y="469" width="0.1612%" height="15" fill="rgb(241,37,22)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="479.50"></text></g><g><title>kernel::model::entity::_::&lt;impl serde::ser::Serialize for kernel::model::entity::EntityRef&gt;::serialize (2 samples, 0.16%)</title><rect x="98.7107%" y="453" width="0.1612%" height="15" fill="rgb(219,182,1)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="463.50"></text></g><g><title>&lt;serde_json::value::ser::SerializeMap as serde::ser::SerializeStruct&gt;::serialize_field (2 samples, 0.16%)</title><rect x="98.7107%" y="437" width="0.1612%" height="15" fill="rgb(208,224,23)" fg:x="1225" fg:w="2"/><text x="98.9607%" y="447.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7913%" y="421" width="0.0806%" height="15" fill="rgb(219,121,32)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="431.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="98.7913%" y="405" width="0.0806%" height="15" fill="rgb(253,13,40)" fg:x="1226" fg:w="1"/><text x="99.0413%" y="415.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="98.8719%" y="485" width="0.0806%" height="15" fill="rgb(233,6,28)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.8719%" y="469" width="0.0806%" height="15" fill="rgb(233,73,8)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.8719%" y="453" width="0.0806%" height="15" fill="rgb(223,48,27)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8719%" y="437" width="0.0806%" height="15" fill="rgb(231,98,37)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8719%" y="421" width="0.0806%" height="15" fill="rgb(249,43,32)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.8719%" y="405" width="0.0806%" height="15" fill="rgb(246,184,20)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8719%" y="389" width="0.0806%" height="15" fill="rgb(251,216,0)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="399.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="98.8719%" y="373" width="0.0806%" height="15" fill="rgb(238,41,42)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="383.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.8719%" y="357" width="0.0806%" height="15" fill="rgb(227,224,50)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="367.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="98.8719%" y="341" width="0.0806%" height="15" fill="rgb(237,189,18)" fg:x="1227" fg:w="1"/><text x="99.1219%" y="351.50"></text></g><g><title>plugins_core::carrying::model::Containing::start_carrying (2 samples, 0.16%)</title><rect x="98.8719%" y="533" width="0.1612%" height="15" fill="rgb(238,108,6)" fg:x="1227" fg:w="2"/><text x="99.1219%" y="543.50"></text></g><g><title>kernel::model::entry::&lt;impl core::convert::TryFrom&lt;&amp;kernel::model::entry::Entry&gt; for kernel::model::entity::EntityRef&gt;::try_from (2 samples, 0.16%)</title><rect x="98.8719%" y="517" width="0.1612%" height="15" fill="rgb(214,197,53)" fg:x="1227" fg:w="2"/><text x="99.1219%" y="527.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (2 samples, 0.16%)</title><rect x="98.8719%" y="501" width="0.1612%" height="15" fill="rgb(206,183,15)" fg:x="1227" fg:w="2"/><text x="99.1219%" y="511.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (1 samples, 0.08%)</title><rect x="98.9525%" y="485" width="0.0806%" height="15" fill="rgb(208,130,32)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="495.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="98.9525%" y="469" width="0.0806%" height="15" fill="rgb(226,128,52)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="479.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="98.9525%" y="453" width="0.0806%" height="15" fill="rgb(231,183,21)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="463.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9525%" y="437" width="0.0806%" height="15" fill="rgb(216,8,35)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="447.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9525%" y="421" width="0.0806%" height="15" fill="rgb(224,221,8)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="431.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="98.9525%" y="405" width="0.0806%" height="15" fill="rgb(210,111,33)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="415.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="98.9525%" y="389" width="0.0806%" height="15" fill="rgb(232,211,38)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="399.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (1 samples, 0.08%)</title><rect x="98.9525%" y="373" width="0.0806%" height="15" fill="rgb(216,190,27)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="383.50"></text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="98.9525%" y="357" width="0.0806%" height="15" fill="rgb(237,215,27)" fg:x="1228" fg:w="1"/><text x="99.2025%" y="367.50"></text></g><g><title>&lt;plugins_core::carrying::actions::HoldAction as kernel::actions::Action&gt;::perform (23 samples, 1.85%)</title><rect x="97.2603%" y="565" width="1.8533%" height="15" fill="rgb(251,121,39)" fg:x="1207" fg:w="23"/><text x="97.5103%" y="575.50">&lt;..</text></g><g><title>plugins_core::tools::move_between (17 samples, 1.37%)</title><rect x="97.7438%" y="549" width="1.3699%" height="15" fill="rgb(244,21,14)" fg:x="1213" fg:w="17"/><text x="97.9938%" y="559.50"></text></g><g><title>plugins_core::carrying::model::Containing::stop_carrying (1 samples, 0.08%)</title><rect x="99.0330%" y="533" width="0.0806%" height="15" fill="rgb(221,192,22)" fg:x="1229" fg:w="1"/><text x="99.2830%" y="543.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (97 samples, 7.82%)</title><rect x="91.3779%" y="693" width="7.8163%" height="15" fill="rgb(251,190,28)" fg:x="1134" fg:w="97"/><text x="91.6279%" y="703.50">&lt;engine::pe..</text></g><g><title>kernel::plugins::mw::apply_middleware (67 samples, 5.40%)</title><rect x="93.7953%" y="677" width="5.3989%" height="15" fill="rgb(217,4,51)" fg:x="1164" fg:w="67"/><text x="94.0453%" y="687.50">kernel:..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (67 samples, 5.40%)</title><rect x="93.7953%" y="661" width="5.3989%" height="15" fill="rgb(215,183,49)" fg:x="1164" fg:w="67"/><text x="94.0453%" y="671.50">kernel:..</text></g><g><title>&lt;plugins_dynlib::DynamicMiddleware as kernel::plugins::mw::Middleware&gt;::handle (66 samples, 5.32%)</title><rect x="93.8759%" y="645" width="5.3183%" height="15" fill="rgb(249,28,49)" fg:x="1165" fg:w="66"/><text x="94.1259%" y="655.50">&lt;plugin..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (66 samples, 5.32%)</title><rect x="93.8759%" y="629" width="5.3183%" height="15" fill="rgb(214,42,20)" fg:x="1165" fg:w="66"/><text x="94.1259%" y="639.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 5.32%)</title><rect x="93.8759%" y="613" width="5.3183%" height="15" fill="rgb(222,77,27)" fg:x="1165" fg:w="66"/><text x="94.1259%" y="623.50">core::o..</text></g><g><title>kernel::plugins::mw::MiddlewareNext::handle (66 samples, 5.32%)</title><rect x="93.8759%" y="597" width="5.3183%" height="15" fill="rgb(252,198,32)" fg:x="1165" fg:w="66"/><text x="94.1259%" y="607.50">kernel:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (66 samples, 5.32%)</title><rect x="93.8759%" y="581" width="5.3183%" height="15" fill="rgb(207,140,50)" fg:x="1165" fg:w="66"/><text x="94.1259%" y="591.50">core::o..</text></g><g><title>__libc_free (1 samples, 0.08%)</title><rect x="99.1136%" y="565" width="0.0806%" height="15" fill="rgb(251,170,16)" fg:x="1230" fg:w="1"/><text x="99.3636%" y="575.50"></text></g><g><title>&lt;engine::storage::InMemoryEntityStorage as engine::storage::EntityStorage&gt;::load (1 samples, 0.08%)</title><rect x="99.1942%" y="645" width="0.0806%" height="15" fill="rgb(249,111,45)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1942%" y="629" width="0.0806%" height="15" fill="rgb(241,99,35)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.1942%" y="613" width="0.0806%" height="15" fill="rgb(216,188,17)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.1942%" y="597" width="0.0806%" height="15" fill="rgb(254,209,53)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.1942%" y="581" width="0.0806%" height="15" fill="rgb(231,105,41)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.1942%" y="565" width="0.0806%" height="15" fill="rgb(242,93,23)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.08%)</title><rect x="99.1942%" y="549" width="0.0806%" height="15" fill="rgb(218,159,11)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.08%)</title><rect x="99.1942%" y="533" width="0.0806%" height="15" fill="rgb(209,90,32)" fg:x="1231" fg:w="1"/><text x="99.4442%" y="543.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2748%" y="629" width="0.0806%" height="15" fill="rgb(253,118,46)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2748%" y="613" width="0.0806%" height="15" fill="rgb(219,121,2)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.2748%" y="597" width="0.0806%" height="15" fill="rgb(207,57,47)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.2748%" y="581" width="0.0806%" height="15" fill="rgb(235,113,43)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.2748%" y="565" width="0.0806%" height="15" fill="rgb(238,30,50)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.2748%" y="549" width="0.0806%" height="15" fill="rgb(237,47,29)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2748%" y="533" width="0.0806%" height="15" fill="rgb(245,102,24)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.2748%" y="517" width="0.0806%" height="15" fill="rgb(245,152,9)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.2748%" y="501" width="0.0806%" height="15" fill="rgb(223,213,17)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.08%)</title><rect x="99.2748%" y="485" width="0.0806%" height="15" fill="rgb(241,164,4)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.08%)</title><rect x="99.2748%" y="469" width="0.0806%" height="15" fill="rgb(205,209,31)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.08%)</title><rect x="99.2748%" y="453" width="0.0806%" height="15" fill="rgb(248,173,2)" fg:x="1232" fg:w="1"/><text x="99.5248%" y="463.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::gid (1 samples, 0.08%)</title><rect x="99.3554%" y="597" width="0.0806%" height="15" fill="rgb(207,67,32)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="607.50"></text></g><g><title>kernel::model::props::load_props (1 samples, 0.08%)</title><rect x="99.3554%" y="581" width="0.0806%" height="15" fill="rgb(239,109,13)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (1 samples, 0.08%)</title><rect x="99.3554%" y="565" width="0.0806%" height="15" fill="rgb(233,123,24)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3554%" y="549" width="0.0806%" height="15" fill="rgb(232,120,19)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="533" width="0.0806%" height="15" fill="rgb(225,17,50)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3554%" y="517" width="0.0806%" height="15" fill="rgb(239,216,13)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="501" width="0.0806%" height="15" fill="rgb(232,213,26)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.3554%" y="485" width="0.0806%" height="15" fill="rgb(244,59,39)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="469" width="0.0806%" height="15" fill="rgb(234,61,35)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.3554%" y="453" width="0.0806%" height="15" fill="rgb(245,94,24)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.3554%" y="437" width="0.0806%" height="15" fill="rgb(238,190,44)" fg:x="1233" fg:w="1"/><text x="99.6054%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4359%" y="549" width="0.0806%" height="15" fill="rgb(205,145,25)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4359%" y="533" width="0.0806%" height="15" fill="rgb(229,158,41)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4359%" y="517" width="0.0806%" height="15" fill="rgb(224,121,5)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="527.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (1 samples, 0.08%)</title><rect x="99.4359%" y="501" width="0.0806%" height="15" fill="rgb(238,168,35)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4359%" y="485" width="0.0806%" height="15" fill="rgb(231,11,42)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.08%)</title><rect x="99.4359%" y="469" width="0.0806%" height="15" fill="rgb(241,105,19)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.08%)</title><rect x="99.4359%" y="453" width="0.0806%" height="15" fill="rgb(253,210,20)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.08%)</title><rect x="99.4359%" y="437" width="0.0806%" height="15" fill="rgb(215,72,52)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.08%)</title><rect x="99.4359%" y="421" width="0.0806%" height="15" fill="rgb(223,225,30)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4359%" y="405" width="0.0806%" height="15" fill="rgb(220,138,44)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.08%)</title><rect x="99.4359%" y="389" width="0.0806%" height="15" fill="rgb(206,128,12)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.08%)</title><rect x="99.4359%" y="373" width="0.0806%" height="15" fill="rgb(245,194,0)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.08%)</title><rect x="99.4359%" y="357" width="0.0806%" height="15" fill="rgb(235,175,41)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.08%)</title><rect x="99.4359%" y="341" width="0.0806%" height="15" fill="rgb(216,15,48)" fg:x="1234" fg:w="1"/><text x="99.6859%" y="351.50"></text></g><g><title>&lt;kernel::model::EntityPtr as core::convert::From&lt;kernel::model::entity::Entity&gt;&gt;::from (3 samples, 0.24%)</title><rect x="99.3554%" y="629" width="0.2417%" height="15" fill="rgb(223,179,5)" fg:x="1233" fg:w="3"/><text x="99.6054%" y="639.50"></text></g><g><title>kernel::model::entity::EntityRef::new_from_raw (3 samples, 0.24%)</title><rect x="99.3554%" y="613" width="0.2417%" height="15" fill="rgb(220,80,15)" fg:x="1233" fg:w="3"/><text x="99.6054%" y="623.50"></text></g><g><title>&lt;kernel::model::entity::Entity as kernel::model::props::CoreProps&gt;::name (2 samples, 0.16%)</title><rect x="99.4359%" y="597" width="0.1612%" height="15" fill="rgb(228,20,30)" fg:x="1234" fg:w="2"/><text x="99.6859%" y="607.50"></text></g><g><title>kernel::model::props::load_props (2 samples, 0.16%)</title><rect x="99.4359%" y="581" width="0.1612%" height="15" fill="rgb(229,194,27)" fg:x="1234" fg:w="2"/><text x="99.6859%" y="591.50"></text></g><g><title>kernel::model::scopes::Scopes::load_scope (2 samples, 0.16%)</title><rect x="99.4359%" y="565" width="0.1612%" height="15" fill="rgb(238,202,32)" fg:x="1234" fg:w="2"/><text x="99.6859%" y="575.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Properties&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5165%" y="549" width="0.0806%" height="15" fill="rgb(207,82,27)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5165%" y="533" width="0.0806%" height="15" fill="rgb(246,122,46)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="543.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Props&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5165%" y="517" width="0.0806%" height="15" fill="rgb(220,101,26)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5165%" y="501" width="0.0806%" height="15" fill="rgb(251,63,9)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="511.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (1 samples, 0.08%)</title><rect x="99.5165%" y="485" width="0.0806%" height="15" fill="rgb(235,186,5)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="495.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5165%" y="469" width="0.0806%" height="15" fill="rgb(241,139,37)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="479.50"></text></g><g><title>kernel::model::props::_::&lt;impl serde::de::Deserialize for kernel::model::props::Property&gt;::deserialize (1 samples, 0.08%)</title><rect x="99.5165%" y="453" width="0.0806%" height="15" fill="rgb(252,177,51)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="463.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5165%" y="437" width="0.0806%" height="15" fill="rgb(214,131,22)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="447.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (1 samples, 0.08%)</title><rect x="99.5165%" y="421" width="0.0806%" height="15" fill="rgb(246,53,19)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="431.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.5165%" y="405" width="0.0806%" height="15" fill="rgb(231,158,27)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="415.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_seq (1 samples, 0.08%)</title><rect x="99.5165%" y="389" width="0.0806%" height="15" fill="rgb(226,166,46)" fg:x="1235" fg:w="1"/><text x="99.7665%" y="399.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_key_seed (1 samples, 0.08%)</title><rect x="99.5971%" y="517" width="0.0806%" height="15" fill="rgb(218,178,26)" fg:x="1236" fg:w="1"/><text x="99.8471%" y="527.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6777%" y="501" width="0.0806%" height="15" fill="rgb(206,25,39)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="511.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6777%" y="485" width="0.0806%" height="15" fill="rgb(232,218,41)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="495.50"></text></g><g><title>&lt;serde::__private::de::content::ContentRefDeserializer&lt;E&gt; as serde::de::Deserializer&gt;::deserialize_any (1 samples, 0.08%)</title><rect x="99.6777%" y="469" width="0.0806%" height="15" fill="rgb(212,151,15)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="479.50"></text></g><g><title>&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.6777%" y="453" width="0.0806%" height="15" fill="rgb(213,49,22)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="463.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6777%" y="437" width="0.0806%" height="15" fill="rgb(247,116,21)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="447.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.08%)</title><rect x="99.6777%" y="421" width="0.0806%" height="15" fill="rgb(248,98,14)" fg:x="1237" fg:w="1"/><text x="99.9277%" y="431.50"></text></g><g><title>&lt;engine::session::Session as kernel::session::ActiveSession&gt;::entry (8 samples, 0.64%)</title><rect x="99.1942%" y="677" width="0.6446%" height="15" fill="rgb(247,72,6)" fg:x="1231" fg:w="8"/><text x="99.4442%" y="687.50"></text></g><g><title>&lt;engine::session::Session as kernel::model::LoadsEntities&gt;::load_entity (8 samples, 0.64%)</title><rect x="99.1942%" y="661" width="0.6446%" height="15" fill="rgb(213,9,22)" fg:x="1231" fg:w="8"/><text x="99.4442%" y="671.50"></text></g><g><title>engine::internal::Entities::add_persisted (7 samples, 0.56%)</title><rect x="99.2748%" y="645" width="0.5641%" height="15" fill="rgb(213,122,30)" fg:x="1232" fg:w="7"/><text x="99.5248%" y="655.50"></text></g><g><title>kernel::model::deserialize_entity (3 samples, 0.24%)</title><rect x="99.5971%" y="629" width="0.2417%" height="15" fill="rgb(244,11,30)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="639.50"></text></g><g><title>kernel::model::deserialize_entity_from_value (3 samples, 0.24%)</title><rect x="99.5971%" y="613" width="0.2417%" height="15" fill="rgb(236,102,26)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="623.50"></text></g><g><title>kernel::model::deserialize_entity_from_value_with_session (3 samples, 0.24%)</title><rect x="99.5971%" y="597" width="0.2417%" height="15" fill="rgb(231,166,37)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="607.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_struct (3 samples, 0.24%)</title><rect x="99.5971%" y="581" width="0.2417%" height="15" fill="rgb(220,224,29)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="591.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.5971%" y="565" width="0.2417%" height="15" fill="rgb(227,30,40)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="575.50"></text></g><g><title>serde_json::value::de::&lt;impl serde::de::Deserializer for serde_json::value::Value&gt;::deserialize_map (3 samples, 0.24%)</title><rect x="99.5971%" y="549" width="0.2417%" height="15" fill="rgb(235,8,36)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="559.50"></text></g><g><title>serde_json::value::de::visit_object (3 samples, 0.24%)</title><rect x="99.5971%" y="533" width="0.2417%" height="15" fill="rgb(232,175,19)" fg:x="1236" fg:w="3"/><text x="99.8471%" y="543.50"></text></g><g><title>kernel::model::scopes::_::&lt;impl serde::de::Deserialize for kernel::model::scopes::ScopeValue&gt;::deserialize (2 samples, 0.16%)</title><rect x="99.6777%" y="517" width="0.1612%" height="15" fill="rgb(217,114,10)" fg:x="1237" fg:w="2"/><text x="99.9277%" y="527.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7583%" y="501" width="0.0806%" height="15" fill="rgb(214,112,41)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="511.50"></text></g><g><title>&lt;serde::__private::de::content::ContentVisitor as serde::de::Visitor&gt;::visit_map (1 samples, 0.08%)</title><rect x="99.7583%" y="485" width="0.0806%" height="15" fill="rgb(226,69,34)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="495.50"></text></g><g><title>&lt;serde_json::value::de::MapDeserializer as serde::de::MapAccess&gt;::next_value_seed (1 samples, 0.08%)</title><rect x="99.7583%" y="469" width="0.0806%" height="15" fill="rgb(219,23,46)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="479.50"></text></g><g><title>serde_json::value::de::visit_object (1 samples, 0.08%)</title><rect x="99.7583%" y="453" width="0.0806%" height="15" fill="rgb(233,3,8)" fg:x="1238" fg:w="1"/><text x="100.0083%" y="463.50"></text></g><g><title>&lt;engine::perform::StandardPerformer as kernel::actions::Performer&gt;::perform (106 samples, 8.54%)</title><rect x="91.3779%" y="709" width="8.5415%" height="15" fill="rgb(251,34,42)" fg:x="1134" fg:w="106"/><text x="91.6279%" y="719.50">&lt;engine::per..</text></g><g><title>engine::perform::StandardPerformer::evaluate_living (9 samples, 0.73%)</title><rect x="99.1942%" y="693" width="0.7252%" height="15" fill="rgb(215,84,9)" fg:x="1231" fg:w="9"/><text x="99.4442%" y="703.50"></text></g><g><title>&lt;kernel::model::entry::Entry as engine::users::model::HasUsernames&gt;::find_name_key (1 samples, 0.08%)</title><rect x="99.8388%" y="677" width="0.0806%" height="15" fill="rgb(231,75,52)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="687.50"></text></g><g><title>engine::users::model::username_to_key (1 samples, 0.08%)</title><rect x="99.8388%" y="661" width="0.0806%" height="15" fill="rgb(247,201,31)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.08%)</title><rect x="99.8388%" y="645" width="0.0806%" height="15" fill="rgb(215,171,37)" fg:x="1239" fg:w="1"/><text x="100.0888%" y="655.50"></text></g><g><title>all (1,241 samples, 100%)</title><rect x="0.0000%" y="1173" width="100.0000%" height="15" fill="rgb(208,208,44)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1183.50"></text></g><g><title>simple-6bd4aef2 (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1157" width="100.0000%" height="15" fill="rgb(247,146,54)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1167.50">simple-6bd4aef2</text></g><g><title>_start (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(209,0,40)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1151.50">_start</text></g><g><title>__libc_start_main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(221,59,4)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1135.50">__libc_start_main</text></g><g><title>main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1109" width="100.0000%" height="15" fill="rgb(227,153,47)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1119.50">main</text></g><g><title>std::rt::lang_start_internal (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(253,225,10)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1103.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="100.0000%" height="15" fill="rgb(237,201,24)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(238,23,27)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(236,54,50)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1055.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="100.0000%" height="15" fill="rgb(216,106,0)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1039.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,241 samples, 100.00%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(234,179,35)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1023.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,241 samples, 100.00%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(210,35,8)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="1007.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,241 samples, 100.00%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(238,144,16)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="991.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1,241 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(244,54,7)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="975.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (1,241 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(233,225,40)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="959.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,241 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(249,227,23)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="943.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>simple::main (1,241 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(215,42,44)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="927.50">simple::main</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,241 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(220,145,40)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="911.50">criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>criterion::routine::Routine::profile (1,241 samples, 100.00%)</title><rect x="0.0000%" y="885" width="100.0000%" height="15" fill="rgb(228,218,40)" fg:x="0" fg:w="1241"/><text x="0.2500%" y="895.50">criterion::routine::Routine::profile</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (268 samples, 21.60%)</title><rect x="78.4045%" y="869" width="21.5955%" height="15" fill="rgb(217,52,54)" fg:x="973" fg:w="268"/><text x="78.6545%" y="879.50">&lt;criterion::routine::Function&lt;M,F,..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter (268 samples, 21.60%)</title><rect x="78.4045%" y="853" width="21.5955%" height="15" fill="rgb(223,90,22)" fg:x="973" fg:w="268"/><text x="78.6545%" y="863.50">criterion::bencher::Bencher&lt;M&gt;::it..</text></g><g><title>tests::evaluate_text_in_new_domain (268 samples, 21.60%)</title><rect x="78.4045%" y="837" width="21.5955%" height="15" fill="rgb(232,114,35)" fg:x="973" fg:w="268"/><text x="78.6545%" y="847.50">tests::evaluate_text_in_new_domain</text></g><g><title>engine::session::Session::evaluate_and_perform (108 samples, 8.70%)</title><rect x="91.2973%" y="821" width="8.7027%" height="15" fill="rgb(227,223,50)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="831.50">engine::sess..</text></g><g><title>engine::perform::StandardPerformer::evaluate_and_perform (108 samples, 8.70%)</title><rect x="91.2973%" y="805" width="8.7027%" height="15" fill="rgb(249,175,7)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="815.50">engine::perf..</text></g><g><title>&lt;kernel::plugins::SessionPlugins as kernel::plugins::Evaluator&gt;::evaluate (108 samples, 8.70%)</title><rect x="91.2973%" y="789" width="8.7027%" height="15" fill="rgb(249,173,15)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="799.50">&lt;kernel::plu..</text></g><g><title>core::iter::adapters::try_process (108 samples, 8.70%)</title><rect x="91.2973%" y="773" width="8.7027%" height="15" fill="rgb(240,131,6)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="783.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (108 samples, 8.70%)</title><rect x="91.2973%" y="757" width="8.7027%" height="15" fill="rgb(246,117,16)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="767.50">&lt;alloc::vec:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (108 samples, 8.70%)</title><rect x="91.2973%" y="741" width="8.7027%" height="15" fill="rgb(209,32,16)" fg:x="1133" fg:w="108"/><text x="91.5473%" y="751.50">&lt;core::iter:..</text></g><g><title>&lt;plugins_core::carrying::CarryingPlugin as kernel::plugins::Evaluator&gt;::evaluate (107 samples, 8.62%)</title><rect x="91.3779%" y="725" width="8.6221%" height="15" fill="rgb(207,45,44)" fg:x="1134" fg:w="107"/><text x="91.6279%" y="735.50">&lt;plugins_cor..</text></g><g><title>__libc_malloc (1 samples, 0.08%)</title><rect x="99.9194%" y="709" width="0.0806%" height="15" fill="rgb(210,66,3)" fg:x="1240" fg:w="1"/><text x="100.1694%" y="719.50"></text></g></svg></svg>